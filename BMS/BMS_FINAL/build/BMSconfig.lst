ARM GAS  /tmp/ccR8fJtd.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"BMSconfig.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.loadConfig,"ax",%progbits
  16              		.align	1
  17              		.global	loadConfig
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	loadConfig:
  24              	.LFB66:
  25              		.file 1 "Src/BMSconfig.c"
   1:Src/BMSconfig.c **** #include "BMSconfig.h"
   2:Src/BMSconfig.c **** 
   3:Src/BMSconfig.c **** void loadConfig(BMSconfigStructTypedef* cfg) {
  26              		.loc 1 3 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
   4:Src/BMSconfig.c **** 
   5:Src/BMSconfig.c **** 	//change this
   6:Src/BMSconfig.c **** 	cfg->numOfICs = 12;
  32              		.loc 1 6 0
  33 0000 0C23     		movs	r3, #12
  34 0002 0370     		strb	r3, [r0]
  35              	.LVL1:
  36              	.LBB2:
   7:Src/BMSconfig.c **** 	for(int i = 0; i<12; i++){
  37              		.loc 1 7 0
  38 0004 0023     		movs	r3, #0
  39 0006 02E0     		b	.L2
  40              	.LVL2:
  41              	.L3:
   8:Src/BMSconfig.c **** 		cfg->address[i] = i;
  42              		.loc 1 8 0 discriminator 3
  43 0008 C218     		adds	r2, r0, r3
  44 000a 5370     		strb	r3, [r2, #1]
   7:Src/BMSconfig.c **** 	for(int i = 0; i<12; i++){
  45              		.loc 1 7 0 discriminator 3
  46 000c 0133     		adds	r3, r3, #1
  47              	.LVL3:
  48              	.L2:
   7:Src/BMSconfig.c **** 	for(int i = 0; i<12; i++){
ARM GAS  /tmp/ccR8fJtd.s 			page 2


  49              		.loc 1 7 0 is_stmt 0 discriminator 1
  50 000e 0B2B     		cmp	r3, #11
  51 0010 FADD     		ble	.L3
  52              	.LBE2:
   9:Src/BMSconfig.c **** 	}
  10:Src/BMSconfig.c **** 	// cfg->address[0] = 0;
  11:Src/BMSconfig.c **** 	// cfg->address[1] = 1;
  12:Src/BMSconfig.c **** 
  13:Src/BMSconfig.c **** 	cfg->numOfCellInputs = 12; 
  53              		.loc 1 13 0 is_stmt 1
  54 0012 0C23     		movs	r3, #12
  55              	.LVL4:
  56 0014 80F82130 		strb	r3, [r0, #33]
  14:Src/BMSconfig.c **** 	cfg->numOfCellsPerIC = 8;
  57              		.loc 1 14 0
  58 0018 0823     		movs	r3, #8
  59 001a 80F82230 		strb	r3, [r0, #34]
  15:Src/BMSconfig.c **** 	cfg->numOfTempPerIC = 4;
  60              		.loc 1 15 0
  61 001e 0423     		movs	r3, #4
  62 0020 80F82330 		strb	r3, [r0, #35]
  16:Src/BMSconfig.c **** 
  17:Src/BMSconfig.c **** 	cfg->OV_threshold = 42000;
  63              		.loc 1 17 0
  64 0024 4AF21043 		movw	r3, #42000
  65 0028 C384     		strh	r3, [r0, #38]	@ movhi
  18:Src/BMSconfig.c **** 	cfg->UV_threshold = 25000;
  66              		.loc 1 18 0
  67 002a 46F2A813 		movw	r3, #25000
  68 002e 0385     		strh	r3, [r0, #40]	@ movhi
  19:Src/BMSconfig.c **** 	//charge to 4.14V, lower charge current, discharge cells above 4.16V
  20:Src/BMSconfig.c **** 	//exceed 4.18V, stop charging entirely, discharge to 4.15V
  21:Src/BMSconfig.c **** 	//exceed 4.2V, fault prevents discharging
  22:Src/BMSconfig.c **** 
  23:Src/BMSconfig.c **** 	//cell voltage limit 4.16V
  24:Src/BMSconfig.c **** 	//full current or no current
  25:Src/BMSconfig.c **** 	//exceed 4.17 on any cell, stop charging, discharge that one cell to 4.15
  26:Src/BMSconfig.c **** 	//start charging again 
  27:Src/BMSconfig.c **** 
  28:Src/BMSconfig.c **** 	// if there is a big enough delta above minimum, stop charging so that you can actually lower volt
  29:Src/BMSconfig.c **** 
  30:Src/BMSconfig.c **** 	//UV FAULT 2.5, check ESF
  31:Src/BMSconfig.c **** 	//if cells are below 3, don't balance
  32:Src/BMSconfig.c **** 
  33:Src/BMSconfig.c **** 	cfg->slowCharge_threshold = 41400;
  69              		.loc 1 33 0
  70 0030 4AF2B813 		movw	r3, #41400
  71 0034 4385     		strh	r3, [r0, #42]	@ movhi
  34:Src/BMSconfig.c **** 	cfg->stopCharge_threshold = 41800;
  72              		.loc 1 34 0
  73 0036 4AF24833 		movw	r3, #41800
  74 003a 8385     		strh	r3, [r0, #44]	@ movhi
  35:Src/BMSconfig.c **** 	cfg->max_difference = 2000;
  75              		.loc 1 35 0
  76 003c 4FF4FA63 		mov	r3, #2000
  77 0040 C385     		strh	r3, [r0, #46]	@ movhi
  36:Src/BMSconfig.c **** 	cfg->balancing_difference = 500;
ARM GAS  /tmp/ccR8fJtd.s 			page 3


  78              		.loc 1 36 0
  79 0042 4FF4FA73 		mov	r3, #500
  80 0046 0386     		strh	r3, [r0, #48]	@ movhi
  37:Src/BMSconfig.c **** 	cfg->start_scaling = 41000;
  81              		.loc 1 37 0
  82 0048 4AF22802 		movw	r2, #41000
  83 004c C286     		strh	r2, [r0, #54]	@ movhi
  38:Src/BMSconfig.c **** 	cfg->stop_scaling = 41600;
  84              		.loc 1 38 0
  85 004e 4AF28022 		movw	r2, #41600
  86 0052 0287     		strh	r2, [r0, #56]	@ movhi
  39:Src/BMSconfig.c **** 	cfg->scale_to = 100;
  87              		.loc 1 39 0
  88 0054 6422     		movs	r2, #100
  89 0056 4287     		strh	r2, [r0, #58]	@ movhi
  40:Src/BMSconfig.c **** 
  41:Src/BMSconfig.c **** 	cfg->invalidPECcount = 5;
  90              		.loc 1 41 0
  91 0058 0522     		movs	r2, #5
  92 005a 80F83220 		strb	r2, [r0, #50]
  42:Src/BMSconfig.c **** 
  43:Src/BMSconfig.c **** 	cfg->dischargeTime = 500; // ms
  93              		.loc 1 43 0
  94 005e 8386     		strh	r3, [r0, #52]	@ movhi
  44:Src/BMSconfig.c **** 
  45:Src/BMSconfig.c **** 	cfg->normalCurrent = 0x003E; // 6.2A 
  95              		.loc 1 45 0
  96 0060 3E23     		movs	r3, #62
  97 0062 8387     		strh	r3, [r0, #60]	@ movhi
  46:Src/BMSconfig.c **** 	cfg->lowerCurrent = 0x000A; // 1A
  98              		.loc 1 46 0
  99 0064 0A23     		movs	r3, #10
 100 0066 C387     		strh	r3, [r0, #62]	@ movhi
  47:Src/BMSconfig.c **** 	cfg->chargerVoltage = 0xFA0; // 400V
 101              		.loc 1 47 0
 102 0068 4FF47A63 		mov	r3, #4000
 103 006c A0F84030 		strh	r3, [r0, #64]	@ movhi
  48:Src/BMSconfig.c **** 
  49:Src/BMSconfig.c **** 	// 0: 422Hz, 1: 27kHz, 2: 7kHz, 3: 26Hz, 4: 1kHz, 5: 14kHz, 6: 3kHz, 7: 2kHz
  50:Src/BMSconfig.c **** 	cfg->ADCConversionRate = 0;
 104              		.loc 1 50 0
 105 0070 0023     		movs	r3, #0
 106 0072 80F82430 		strb	r3, [r0, #36]
  51:Src/BMSconfig.c **** 
  52:Src/BMSconfig.c **** 	cfg->ADCModeOption = 1;
 107              		.loc 1 52 0
 108 0076 0122     		movs	r2, #1
 109 0078 80F84820 		strb	r2, [r0, #72]
  53:Src/BMSconfig.c **** 	
  54:Src/BMSconfig.c **** 	// chip and code should share OV and UV thresholds
  55:Src/BMSconfig.c **** 	
  56:Src/BMSconfig.c **** 	//cfg->ADCModeOption = (config.ADCConversionRate) & 0b011;
  57:Src/BMSconfig.c **** 	//cfg->ADCMode = (config.ADCConversionRate) & 0b100;
  58:Src/BMSconfig.c **** 	
  59:Src/BMSconfig.c **** 	cfg->GPIO5PulldownOff = 1;
 110              		.loc 1 59 0
 111 007c 80F84220 		strb	r2, [r0, #66]
ARM GAS  /tmp/ccR8fJtd.s 			page 4


  60:Src/BMSconfig.c **** 	cfg->GPIO4PulldownOff = 1;
 112              		.loc 1 60 0
 113 0080 80F84320 		strb	r2, [r0, #67]
  61:Src/BMSconfig.c **** 	cfg->GPIO3PulldownOff = 1;
 114              		.loc 1 61 0
 115 0084 80F84420 		strb	r2, [r0, #68]
  62:Src/BMSconfig.c **** 	cfg->GPIO2PulldownOff = 1;
 116              		.loc 1 62 0
 117 0088 80F84520 		strb	r2, [r0, #69]
  63:Src/BMSconfig.c **** 	cfg->GPIO1PulldownOff = 1;
 118              		.loc 1 63 0
 119 008c 80F84620 		strb	r2, [r0, #70]
  64:Src/BMSconfig.c **** 	
  65:Src/BMSconfig.c **** 	cfg->ReferenceOn = 1; // minimizes time between conversions
 120              		.loc 1 65 0
 121 0090 80F84720 		strb	r2, [r0, #71]
  66:Src/BMSconfig.c **** 	
  67:Src/BMSconfig.c **** 	cfg->UndervoltageComparisonVoltage = 0x000;
 122              		.loc 1 67 0
 123 0094 A0F84A30 		strh	r3, [r0, #74]	@ movhi
  68:Src/BMSconfig.c **** 	cfg->OvervoltageComparisonVoltage = 0x000;
 124              		.loc 1 68 0
 125 0098 A0F84C30 		strh	r3, [r0, #76]	@ movhi
  69:Src/BMSconfig.c **** 	
  70:Src/BMSconfig.c **** 	cfg->DischargeCell1 = 0;
 126              		.loc 1 70 0
 127 009c 80F84E30 		strb	r3, [r0, #78]
  71:Src/BMSconfig.c **** 	cfg->DischargeCell2 = 0;
 128              		.loc 1 71 0
 129 00a0 80F84F30 		strb	r3, [r0, #79]
  72:Src/BMSconfig.c **** 	cfg->DischargeCell3 = 0;
 130              		.loc 1 72 0
 131 00a4 80F85030 		strb	r3, [r0, #80]
  73:Src/BMSconfig.c **** 	cfg->DischargeCell4 = 0;
 132              		.loc 1 73 0
 133 00a8 80F85130 		strb	r3, [r0, #81]
  74:Src/BMSconfig.c **** 	cfg->DischargeCell5 = 0;
 134              		.loc 1 74 0
 135 00ac 80F85230 		strb	r3, [r0, #82]
  75:Src/BMSconfig.c **** 	cfg->DischargeCell6 = 0;
 136              		.loc 1 75 0
 137 00b0 80F85330 		strb	r3, [r0, #83]
  76:Src/BMSconfig.c **** 	cfg->DischargeCell7 = 0;
 138              		.loc 1 76 0
 139 00b4 80F85430 		strb	r3, [r0, #84]
  77:Src/BMSconfig.c **** 	cfg->DischargeCell8 = 0;
 140              		.loc 1 77 0
 141 00b8 80F85530 		strb	r3, [r0, #85]
  78:Src/BMSconfig.c **** 	cfg->DischargeCell9 = 0;
 142              		.loc 1 78 0
 143 00bc 80F85630 		strb	r3, [r0, #86]
  79:Src/BMSconfig.c **** 	cfg->DischargeCell10 = 0;
 144              		.loc 1 79 0
 145 00c0 80F85730 		strb	r3, [r0, #87]
  80:Src/BMSconfig.c **** 	cfg->DischargeCell11 = 0;
 146              		.loc 1 80 0
 147 00c4 80F85830 		strb	r3, [r0, #88]
ARM GAS  /tmp/ccR8fJtd.s 			page 5


  81:Src/BMSconfig.c **** 	cfg->DischargeCell12 = 0;
 148              		.loc 1 81 0
 149 00c8 80F85930 		strb	r3, [r0, #89]
  82:Src/BMSconfig.c **** 	
  83:Src/BMSconfig.c **** 	cfg->DischargeTimeoutValue = 0x0;
 150              		.loc 1 83 0
 151 00cc 80F85A30 		strb	r3, [r0, #90]
  84:Src/BMSconfig.c **** }
 152              		.loc 1 84 0
 153 00d0 7047     		bx	lr
 154              		.cfi_endproc
 155              	.LFE66:
 157              		.text
 158              	.Letext0:
 159              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 160              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 161              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 162              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 163              		.file 6 "/usr/include/newlib/sys/lock.h"
 164              		.file 7 "/usr/include/newlib/sys/_types.h"
 165              		.file 8 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 166              		.file 9 "/usr/include/newlib/sys/reent.h"
 167              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 168              		.file 11 "/usr/include/newlib/stdlib.h"
 169              		.file 12 "Inc/BMSconfig.h"
ARM GAS  /tmp/ccR8fJtd.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 BMSconfig.c
     /tmp/ccR8fJtd.s:16     .text.loadConfig:0000000000000000 $t
     /tmp/ccR8fJtd.s:23     .text.loadConfig:0000000000000000 loadConfig

NO UNDEFINED SYMBOLS
