ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB72:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "LTC6811.h"
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 2


  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** #define CELLVAL_ID      0x007
  37:Src/main.c    **** #define BMSSTAT_ID      0x008
  38:Src/main.c    **** #define BMSVINF_ID      0x009
  39:Src/main.c    **** #define BMSTINF_ID      0x00A
  40:Src/main.c    **** /* USER CODE END PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** ADC_HandleTypeDef hadc1;
  49:Src/main.c    **** 
  50:Src/main.c    **** CAN_HandleTypeDef hcan;
  51:Src/main.c    **** 
  52:Src/main.c    **** SPI_HandleTypeDef hspi1;
  53:Src/main.c    **** 
  54:Src/main.c    **** TIM_HandleTypeDef htim2;
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE BEGIN PV */
  57:Src/main.c    **** CommandCodeTypedef CommandCode;
  58:Src/main.c    **** BMSconfigStructTypedef BMSconfig;
  59:Src/main.c    **** 
  60:Src/main.c    **** CAN_TxHeaderTypeDef   TxHeader;
  61:Src/main.c    **** CAN_RxHeaderTypeDef   RxHeader;
  62:Src/main.c    **** uint8_t               TxData[8];
  63:Src/main.c    **** uint8_t               RxData[8];
  64:Src/main.c    **** uint32_t              TxMailbox;
  65:Src/main.c    **** 
  66:Src/main.c    **** uint8_t               CELLVAL_DATA[6];
  67:Src/main.c    **** uint8_t               BMSSTAT_DATA[6];
  68:Src/main.c    **** uint8_t               BMSVINF_DATA[8];
  69:Src/main.c    **** uint8_t               BMSTINF_DATA[8];
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE END PV */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  74:Src/main.c    **** void SystemClock_Config(void);
  75:Src/main.c    **** static void MX_GPIO_Init(void);
  76:Src/main.c    **** static void MX_ADC1_Init(void);
  77:Src/main.c    **** static void MX_CAN_Init(void);
  78:Src/main.c    **** static void MX_SPI1_Init(void);
  79:Src/main.c    **** static void MX_TIM2_Init(void);
  80:Src/main.c    **** /* USER CODE BEGIN PFP */
  81:Src/main.c    **** void VOLTAGE_sort(uint16_t voltage[12][12]);
  82:Src/main.c    **** void CONNECTION_sort(bool connection[12][12]);
  83:Src/main.c    **** void FAULT_check(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool tempFault[12][4], b
  84:Src/main.c    **** void CELLVAL_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], uint16_t cellTemp[12
  85:Src/main.c    **** void BMSSTAT_message(BMSconfigStructTypedef cfg, uint8_t cellNumber[5], bool faultType[5]);
  86:Src/main.c    **** /* USER CODE END PFP */
  87:Src/main.c    **** 
  88:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  89:Src/main.c    **** /* USER CODE BEGIN 0 */
  90:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 3


  91:Src/main.c    **** /* USER CODE END 0 */
  92:Src/main.c    **** 
  93:Src/main.c    **** /**
  94:Src/main.c    ****   * @brief  The application entry point.
  95:Src/main.c    ****   * @retval int
  96:Src/main.c    ****   */
  97:Src/main.c    **** int main(void)
  98:Src/main.c    **** {
  99:Src/main.c    ****   /* USER CODE BEGIN 1 */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE END 1 */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 106:Src/main.c    ****   HAL_Init();
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* USER CODE BEGIN Init */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* USER CODE END Init */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* Configure the system clock */
 113:Src/main.c    ****   SystemClock_Config();
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* USER CODE END SysInit */
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* Initialize all configured peripherals */
 120:Src/main.c    ****   MX_GPIO_Init();
 121:Src/main.c    ****   MX_ADC1_Init();
 122:Src/main.c    ****   MX_CAN_Init();
 123:Src/main.c    ****   //MX_SPI1_Init();
 124:Src/main.c    ****   MX_TIM2_Init();
 125:Src/main.c    ****   /* USER CODE BEGIN 2 */
 126:Src/main.c    ****   SPI_Init();
 127:Src/main.c    ****   initPECTable();
 128:Src/main.c    ****   loadConfig(&BMSconfig); // loads configuration settings from config.c
 129:Src/main.c    ****   writeConfigAll(BMSconfig);
 130:Src/main.c    **** 
 131:Src/main.c    ****   uint16_t voltage[BMSconfig.numOfICs][BMSconfig.numOfCellInputs];        //12, 12
 132:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 133:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 134:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 135:Src/main.c    ****   bool connection[BMSconfig.numOfICs][BMSconfig.numOfCellInputs];         //12, 12
 136:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8 
 137:Src/main.c    **** 
 138:Src/main.c    ****   bool vreturn = false;
 139:Src/main.c    ****   bool treturn = false;
 140:Src/main.c    ****   bool disconnectFault = false;
 141:Src/main.c    ****   uint8_t disconnectedCell;
 142:Src/main.c    ****   uint8_t chargerate;
 143:Src/main.c    **** 
 144:Src/main.c    ****   uint8_t number[5];
 145:Src/main.c    ****   bool faults[5];
 146:Src/main.c    **** 
 147:Src/main.c    ****   bool AIR;
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 4


 148:Src/main.c    ****   bool CHARGE_EN;
 149:Src/main.c    **** 
 150:Src/main.c    ****   uint16_t testVoltage[12];
 151:Src/main.c    ****   uint8_t testData[2];
 152:Src/main.c    ****   uint16_t testTemp[4];
 153:Src/main.c    ****   bool testDC[4];
 154:Src/main.c    ****   bool testOT[4];
 155:Src/main.c    ****   bool testConnection[12];
 156:Src/main.c    ****   /* USER CODE END 2 */
 157:Src/main.c    **** 
 158:Src/main.c    ****   /* Infinite loop */
 159:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 160:Src/main.c    ****   while (1)
 161:Src/main.c    ****   {
 162:Src/main.c    ****     /* USER CODE END WHILE */
 163:Src/main.c    **** 
 164:Src/main.c    ****     /* USER CODE BEGIN 3 */
 165:Src/main.c    **** 
 166:Src/main.c    ****     // trigger? fan pwm? current sensor? 
 167:Src/main.c    **** 
 168:Src/main.c    ****     // read all cell voltages and temperatures and check for disconnected cells
 169:Src/main.c    ****     /*vreturn = readAllCellVoltages(BMSconfig, voltage);
 170:Src/main.c    ****     VOLTAGE_sort(voltage); // puts relevant voltages into first 8 positions
 171:Src/main.c    ****     treturn = readAllCellTemps(BMSconfig, temp, overtemp, tempdisconnect);
 172:Src/main.c    ****     checkAllCellConnections(BMSconfig, voltage, connection, disconnectedCell);
 173:Src/main.c    ****     CONNECTION_sort(connection); // puts relevant cell connections into first 8 positions
 174:Src/main.c    **** 
 175:Src/main.c    ****     AIR = HAL_GPIO_ReadPin(GPIOB, AIR_Pin);
 176:Src/main.c    ****     CHARGE_EN = HAL_GPIO_ReadPin(GPIOB, CHARGE_EN_Pin);
 177:Src/main.c    **** 
 178:Src/main.c    ****     if ((AIR == 0) && (CHARGE_EN == 0)) {
 179:Src/main.c    ****       setDischarge(BMSconfig, voltage, connection, discharge, chargerate);
 180:Src/main.c    ****       // send charger CAN message
 181:Src/main.c    ****     }
 182:Src/main.c    **** 
 183:Src/main.c    ****     FAULT_check(BMSconfig, voltage, overtemp, tempdisconnect, connection, number, faults);
 184:Src/main.c    **** 
 185:Src/main.c    ****     // send CAN messages
 186:Src/main.c    ****     CELLVAL_message(BMSconfig, voltage, temp, connection, discharge, tempdisconnect, vreturn);
 187:Src/main.c    ****     //BMSSTAT_message(BMSconfig, number, faults);*/
 188:Src/main.c    **** 
 189:Src/main.c    ****     //discharge[0][0] = 1;
 190:Src/main.c    ****     //dischargeCellGroups(BMSconfig, discharge);
 191:Src/main.c    ****     
 192:Src/main.c    ****     vreturn = readAllCellVoltages(BMSconfig, voltage);
 193:Src/main.c    **** 
 194:Src/main.c    ****     voltage[0][4] = voltage[0][6];
 195:Src/main.c    ****     voltage[0][5] = voltage[0][7];
 196:Src/main.c    ****     voltage[0][6] = voltage[0][8];
 197:Src/main.c    ****     voltage[0][7] = voltage[0][9];
 198:Src/main.c    **** 
 199:Src/main.c    ****     checkCellConnection(voltage[0], testConnection);
 200:Src/main.c    **** 
 201:Src/main.c    ****     connection[0][4] = connection[0][6];
 202:Src/main.c    ****     connection[0][5] = connection[0][7];
 203:Src/main.c    ****     connection[0][6] = connection[0][8];
 204:Src/main.c    ****     connection[0][7] = connection[0][9];
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 5


 205:Src/main.c    **** 
 206:Src/main.c    ****     //VOLTAGE_sort(voltage);
 207:Src/main.c    ****     //readCellTemp(0, testTemp, testDC, testOT);
 208:Src/main.c    ****     //writeConfigAll(BMSconfig);
 209:Src/main.c    ****     //vreturn = readCellVoltage(0, testVoltage);
 210:Src/main.c    ****     //HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 211:Src/main.c    ****     //HAL_GPIO_TogglePin(GPIOB, BMS_FLT_Pin);
 212:Src/main.c    **** 
 213:Src/main.c    ****     /*TxHeader.StdId = 100;
 214:Src/main.c    ****     TxHeader.DLC = 8;
 215:Src/main.c    **** 
 216:Src/main.c    ****     testData[0] = (uint8_t) ((testVoltage[0] >> 8) & 0xFF);
 217:Src/main.c    ****     testData[1] = (uint8_t) (testVoltage[0] & 0xFF);
 218:Src/main.c    ****     testData[2] = (uint8_t) ((testVoltage[1] >> 8) & 0xFF);
 219:Src/main.c    ****     testData[3] = (uint8_t) (testVoltage[1] & 0xFF);
 220:Src/main.c    ****     testData[4] = (uint8_t) ((testVoltage[2] >> 8) & 0xFF);
 221:Src/main.c    ****     testData[5] = (uint8_t) (testVoltage[2] & 0xFF);
 222:Src/main.c    ****     testData[6] = (uint8_t) ((testVoltage[3] >> 8) & 0xFF);
 223:Src/main.c    ****     testData[7] = (uint8_t) (testVoltage[3] & 0xFF);
 224:Src/main.c    **** 
 225:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, testData, &TxMailbox);
 226:Src/main.c    **** 
 227:Src/main.c    ****     testData[0] = (uint8_t) ((testVoltage[4] >> 8) & 0xFF);
 228:Src/main.c    ****     testData[1] = (uint8_t) (testVoltage[4] & 0xFF);
 229:Src/main.c    ****     testData[2] = (uint8_t) ((testVoltage[5] >> 8) & 0xFF);
 230:Src/main.c    ****     testData[3] = (uint8_t) (testVoltage[5] & 0xFF);
 231:Src/main.c    ****     testData[4] = (uint8_t) ((testVoltage[6] >> 8) & 0xFF);
 232:Src/main.c    ****     testData[5] = (uint8_t) (testVoltage[6] & 0xFF);
 233:Src/main.c    ****     testData[6] = (uint8_t) ((testVoltage[7] >> 8) & 0xFF);
 234:Src/main.c    ****     testData[7] = (uint8_t) (testVoltage[7] & 0xFF);
 235:Src/main.c    **** 
 236:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, testData, &TxMailbox);
 237:Src/main.c    **** 
 238:Src/main.c    ****     testData[0] = (uint8_t) ((testVoltage[8] >> 8) & 0xFF);
 239:Src/main.c    ****     testData[1] = (uint8_t) (testVoltage[8] & 0xFF);
 240:Src/main.c    ****     testData[2] = (uint8_t) ((testVoltage[9] >> 8) & 0xFF);
 241:Src/main.c    ****     testData[3] = (uint8_t) (testVoltage[9] & 0xFF);
 242:Src/main.c    ****     testData[4] = (uint8_t) ((testVoltage[10] >> 8) & 0xFF);
 243:Src/main.c    ****     testData[5] = (uint8_t) (testVoltage[10] & 0xFF);
 244:Src/main.c    ****     testData[6] = (uint8_t) ((testVoltage[11] >> 8) & 0xFF);
 245:Src/main.c    ****     testData[7] = (uint8_t) (testVoltage[11] & 0xFF);
 246:Src/main.c    **** 
 247:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, testData, &TxMailbox);*/
 248:Src/main.c    **** 
 249:Src/main.c    ****     CELLVAL_message(BMSconfig, voltage, temp, connection, discharge, tempdisconnect, vreturn);
 250:Src/main.c    **** 
 251:Src/main.c    ****     if (vreturn == 1) HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 252:Src/main.c    **** 
 253:Src/main.c    ****     
 254:Src/main.c    **** 
 255:Src/main.c    ****     /*uint8_t rdcfg[8];
 256:Src/main.c    ****     writeConfigAll(BMSconfig);
 257:Src/main.c    ****     readConfig(0, rdcfg);
 258:Src/main.c    **** 
 259:Src/main.c    ****     TxHeader.StdId = 200;
 260:Src/main.c    ****     TxHeader.DLC = 8;
 261:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, rdcfg, &TxMailbox);*/
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 6


 262:Src/main.c    **** 
 263:Src/main.c    ****     HAL_Delay(500);
 264:Src/main.c    **** 
 265:Src/main.c    ****   }
 266:Src/main.c    ****   /* USER CODE END 3 */
 267:Src/main.c    **** }
 268:Src/main.c    **** 
 269:Src/main.c    **** /**
 270:Src/main.c    ****   * @brief System Clock Configuration
 271:Src/main.c    ****   * @retval None
 272:Src/main.c    ****   */
 273:Src/main.c    **** void SystemClock_Config(void)
 274:Src/main.c    **** {
 275:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 276:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 277:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 278:Src/main.c    **** 
 279:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 280:Src/main.c    ****   */
 281:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 282:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 283:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 284:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 285:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 286:Src/main.c    ****   {
 287:Src/main.c    ****     Error_Handler();
 288:Src/main.c    ****   }
 289:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 290:Src/main.c    ****   */
 291:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 292:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 293:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 294:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 295:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 296:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 297:Src/main.c    **** 
 298:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 299:Src/main.c    ****   {
 300:Src/main.c    ****     Error_Handler();
 301:Src/main.c    ****   }
 302:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 303:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 304:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 305:Src/main.c    ****   {
 306:Src/main.c    ****     Error_Handler();
 307:Src/main.c    ****   }
 308:Src/main.c    **** }
 309:Src/main.c    **** 
 310:Src/main.c    **** /**
 311:Src/main.c    ****   * @brief ADC1 Initialization Function
 312:Src/main.c    ****   * @param None
 313:Src/main.c    ****   * @retval None
 314:Src/main.c    ****   */
 315:Src/main.c    **** static void MX_ADC1_Init(void)
 316:Src/main.c    **** {
 317:Src/main.c    **** 
 318:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 7


 319:Src/main.c    **** 
 320:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 321:Src/main.c    **** 
 322:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 323:Src/main.c    **** 
 324:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 325:Src/main.c    **** 
 326:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 327:Src/main.c    ****   /** Common config 
 328:Src/main.c    ****   */
 329:Src/main.c    ****   hadc1.Instance = ADC1;
 330:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 331:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 332:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 333:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 334:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 335:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 336:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 337:Src/main.c    ****   {
 338:Src/main.c    ****     Error_Handler();
 339:Src/main.c    ****   }
 340:Src/main.c    ****   /** Configure Regular Channel 
 341:Src/main.c    ****   */
 342:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 343:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 344:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 345:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 346:Src/main.c    ****   {
 347:Src/main.c    ****     Error_Handler();
 348:Src/main.c    ****   }
 349:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 350:Src/main.c    **** 
 351:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 352:Src/main.c    **** 
 353:Src/main.c    **** }
 354:Src/main.c    **** 
 355:Src/main.c    **** /**
 356:Src/main.c    ****   * @brief CAN Initialization Function
 357:Src/main.c    ****   * @param None
 358:Src/main.c    ****   * @retval None
 359:Src/main.c    ****   */
 360:Src/main.c    **** static void MX_CAN_Init(void)
 361:Src/main.c    **** {
 362:Src/main.c    **** 
 363:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 0 */
 364:Src/main.c    **** 
 365:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 1 */
 368:Src/main.c    **** 
 369:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 370:Src/main.c    ****   hcan.Instance = CAN1;
 371:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 372:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 373:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 374:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 375:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 8


 376:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 377:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 378:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 379:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 380:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 381:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 382:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 383:Src/main.c    ****   {
 384:Src/main.c    ****     Error_Handler();
 385:Src/main.c    ****   }
 386:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 2 */
 387:Src/main.c    ****   TxHeader.StdId = 0x321; 				// CAN standard ID
 388:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 389:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 390:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 391:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 392:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 393:Src/main.c    **** 
 394:Src/main.c    ****   HAL_CAN_Start(&hcan);
 395:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 396:Src/main.c    **** 
 397:Src/main.c    **** }
 398:Src/main.c    **** 
 399:Src/main.c    **** /**
 400:Src/main.c    ****   * @brief SPI1 Initialization Function
 401:Src/main.c    ****   * @param None
 402:Src/main.c    ****   * @retval None
 403:Src/main.c    ****   */
 404:Src/main.c    **** static void MX_SPI1_Init(void)
 405:Src/main.c    **** {
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 408:Src/main.c    **** 
 409:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 410:Src/main.c    **** 
 411:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 412:Src/main.c    **** 
 413:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 414:Src/main.c    ****   /* SPI1 parameter configuration*/
 415:Src/main.c    ****   hspi1.Instance = SPI1;
 416:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 417:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 418:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 419:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 420:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 421:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 422:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 423:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 424:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 425:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 426:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 427:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 428:Src/main.c    ****   {
 429:Src/main.c    ****     Error_Handler();
 430:Src/main.c    ****   }
 431:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 432:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 9


 433:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 434:Src/main.c    **** 
 435:Src/main.c    **** }
 436:Src/main.c    **** 
 437:Src/main.c    **** /**
 438:Src/main.c    ****   * @brief TIM2 Initialization Function
 439:Src/main.c    ****   * @param None
 440:Src/main.c    ****   * @retval None
 441:Src/main.c    ****   */
 442:Src/main.c    **** static void MX_TIM2_Init(void)
 443:Src/main.c    **** {
 444:Src/main.c    **** 
 445:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 446:Src/main.c    **** 
 447:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 448:Src/main.c    **** 
 449:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 450:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 451:Src/main.c    **** 
 452:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 453:Src/main.c    **** 
 454:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 455:Src/main.c    ****   htim2.Instance = TIM2;
 456:Src/main.c    ****   htim2.Init.Prescaler = 0;
 457:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 458:Src/main.c    ****   htim2.Init.Period = 0;
 459:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 460:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 461:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 462:Src/main.c    ****   {
 463:Src/main.c    ****     Error_Handler();
 464:Src/main.c    ****   }
 465:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 466:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 467:Src/main.c    ****   {
 468:Src/main.c    ****     Error_Handler();
 469:Src/main.c    ****   }
 470:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 471:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 472:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 473:Src/main.c    ****   {
 474:Src/main.c    ****     Error_Handler();
 475:Src/main.c    ****   }
 476:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 477:Src/main.c    **** 
 478:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 479:Src/main.c    **** 
 480:Src/main.c    **** }
 481:Src/main.c    **** 
 482:Src/main.c    **** /**
 483:Src/main.c    ****   * @brief GPIO Initialization Function
 484:Src/main.c    ****   * @param None
 485:Src/main.c    ****   * @retval None
 486:Src/main.c    ****   */
 487:Src/main.c    **** static void MX_GPIO_Init(void)
 488:Src/main.c    **** {
  26              		.loc 1 488 1 view -0
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 10


  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 28
  33              		.cfi_offset 4, -28
  34              		.cfi_offset 5, -24
  35              		.cfi_offset 6, -20
  36              		.cfi_offset 7, -16
  37              		.cfi_offset 8, -12
  38              		.cfi_offset 9, -8
  39              		.cfi_offset 14, -4
  40 0004 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 489:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 489 3 view .LVU1
  44              		.loc 1 489 20 is_stmt 0 view .LVU2
  45 0006 0024     		movs	r4, #0
  46 0008 0494     		str	r4, [sp, #16]
  47 000a 0594     		str	r4, [sp, #20]
  48 000c 0694     		str	r4, [sp, #24]
  49 000e 0794     		str	r4, [sp, #28]
 490:Src/main.c    **** 
 491:Src/main.c    ****   /* GPIO Ports Clock Enable */
 492:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 492 3 is_stmt 1 view .LVU3
  51              	.LBB2:
  52              		.loc 1 492 3 view .LVU4
  53              		.loc 1 492 3 view .LVU5
  54 0010 334B     		ldr	r3, .L3
  55 0012 9A69     		ldr	r2, [r3, #24]
  56 0014 42F01002 		orr	r2, r2, #16
  57 0018 9A61     		str	r2, [r3, #24]
  58              		.loc 1 492 3 view .LVU6
  59 001a 9A69     		ldr	r2, [r3, #24]
  60 001c 02F01002 		and	r2, r2, #16
  61 0020 0092     		str	r2, [sp]
  62              		.loc 1 492 3 view .LVU7
  63 0022 009A     		ldr	r2, [sp]
  64              	.LBE2:
 493:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  65              		.loc 1 493 3 view .LVU8
  66              	.LBB3:
  67              		.loc 1 493 3 view .LVU9
  68              		.loc 1 493 3 view .LVU10
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F02002 		orr	r2, r2, #32
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 493 3 view .LVU11
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F02002 		and	r2, r2, #32
  75 0032 0192     		str	r2, [sp, #4]
  76              		.loc 1 493 3 view .LVU12
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE3:
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 11


 494:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 494 3 view .LVU13
  80              	.LBB4:
  81              		.loc 1 494 3 view .LVU14
  82              		.loc 1 494 3 view .LVU15
  83 0036 9A69     		ldr	r2, [r3, #24]
  84 0038 42F00402 		orr	r2, r2, #4
  85 003c 9A61     		str	r2, [r3, #24]
  86              		.loc 1 494 3 view .LVU16
  87 003e 9A69     		ldr	r2, [r3, #24]
  88 0040 02F00402 		and	r2, r2, #4
  89 0044 0292     		str	r2, [sp, #8]
  90              		.loc 1 494 3 view .LVU17
  91 0046 029A     		ldr	r2, [sp, #8]
  92              	.LBE4:
 495:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  93              		.loc 1 495 3 view .LVU18
  94              	.LBB5:
  95              		.loc 1 495 3 view .LVU19
  96              		.loc 1 495 3 view .LVU20
  97 0048 9A69     		ldr	r2, [r3, #24]
  98 004a 42F00802 		orr	r2, r2, #8
  99 004e 9A61     		str	r2, [r3, #24]
 100              		.loc 1 495 3 view .LVU21
 101 0050 9B69     		ldr	r3, [r3, #24]
 102 0052 03F00803 		and	r3, r3, #8
 103 0056 0393     		str	r3, [sp, #12]
 104              		.loc 1 495 3 view .LVU22
 105 0058 039B     		ldr	r3, [sp, #12]
 106              	.LBE5:
 496:Src/main.c    **** 
 497:Src/main.c    ****   /*Configure GPIO pin Output Level */
 498:Src/main.c    ****   HAL_GPIO_WritePin(DEBUG_GPIO_Port, DEBUG_Pin, GPIO_PIN_RESET);
 107              		.loc 1 498 3 view .LVU23
 108 005a DFF88C90 		ldr	r9, .L3+8
 109 005e 2246     		mov	r2, r4
 110 0060 4FF40051 		mov	r1, #8192
 111 0064 4846     		mov	r0, r9
 112 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL0:
 499:Src/main.c    **** 
 500:Src/main.c    ****   /*Configure GPIO pin Output Level */
 501:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, BMS_CS_Pin|TRIGGER_Pin, GPIO_PIN_RESET);
 114              		.loc 1 501 3 view .LVU24
 115 006a DFF88080 		ldr	r8, .L3+12
 116 006e 2246     		mov	r2, r4
 117 0070 4FF48871 		mov	r1, #272
 118 0074 4046     		mov	r0, r8
 119 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL1:
 502:Src/main.c    **** 
 503:Src/main.c    ****   /*Configure GPIO pin Output Level */
 504:Src/main.c    ****   HAL_GPIO_WritePin(BMS_FLT_GPIO_Port, BMS_FLT_Pin, GPIO_PIN_RESET);
 121              		.loc 1 504 3 view .LVU25
 122 007a 1A4D     		ldr	r5, .L3+4
 123 007c 2246     		mov	r2, r4
 124 007e 4FF40071 		mov	r1, #512
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 12


 125 0082 2846     		mov	r0, r5
 126 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL2:
 505:Src/main.c    **** 
 506:Src/main.c    ****   /*Configure GPIO pin : DEBUG_Pin */
 507:Src/main.c    ****   GPIO_InitStruct.Pin = DEBUG_Pin;
 128              		.loc 1 507 3 view .LVU26
 129              		.loc 1 507 23 is_stmt 0 view .LVU27
 130 0088 4FF40053 		mov	r3, #8192
 131 008c 0493     		str	r3, [sp, #16]
 508:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 508 3 is_stmt 1 view .LVU28
 133              		.loc 1 508 24 is_stmt 0 view .LVU29
 134 008e 0127     		movs	r7, #1
 135 0090 0597     		str	r7, [sp, #20]
 509:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 509 3 is_stmt 1 view .LVU30
 137              		.loc 1 509 24 is_stmt 0 view .LVU31
 138 0092 0694     		str	r4, [sp, #24]
 510:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 510 3 is_stmt 1 view .LVU32
 140              		.loc 1 510 25 is_stmt 0 view .LVU33
 141 0094 0226     		movs	r6, #2
 142 0096 0796     		str	r6, [sp, #28]
 511:Src/main.c    ****   HAL_GPIO_Init(DEBUG_GPIO_Port, &GPIO_InitStruct);
 143              		.loc 1 511 3 is_stmt 1 view .LVU34
 144 0098 04A9     		add	r1, sp, #16
 145 009a 4846     		mov	r0, r9
 146 009c FFF7FEFF 		bl	HAL_GPIO_Init
 147              	.LVL3:
 512:Src/main.c    **** 
 513:Src/main.c    ****   /*Configure GPIO pins : BMS_CS_Pin TRIGGER_Pin */
 514:Src/main.c    ****   GPIO_InitStruct.Pin = BMS_CS_Pin|TRIGGER_Pin;
 148              		.loc 1 514 3 view .LVU35
 149              		.loc 1 514 23 is_stmt 0 view .LVU36
 150 00a0 4FF48873 		mov	r3, #272
 151 00a4 0493     		str	r3, [sp, #16]
 515:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 152              		.loc 1 515 3 is_stmt 1 view .LVU37
 153              		.loc 1 515 24 is_stmt 0 view .LVU38
 154 00a6 0597     		str	r7, [sp, #20]
 516:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 516 3 is_stmt 1 view .LVU39
 156              		.loc 1 516 24 is_stmt 0 view .LVU40
 157 00a8 0694     		str	r4, [sp, #24]
 517:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 158              		.loc 1 517 3 is_stmt 1 view .LVU41
 159              		.loc 1 517 25 is_stmt 0 view .LVU42
 160 00aa 0796     		str	r6, [sp, #28]
 518:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 161              		.loc 1 518 3 is_stmt 1 view .LVU43
 162 00ac 04A9     		add	r1, sp, #16
 163 00ae 4046     		mov	r0, r8
 164 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 165              	.LVL4:
 519:Src/main.c    **** 
 520:Src/main.c    ****   /*Configure GPIO pins : CHARGE_EN_Pin AIR_Pin */
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 13


 521:Src/main.c    ****   GPIO_InitStruct.Pin = CHARGE_EN_Pin|AIR_Pin;
 166              		.loc 1 521 3 view .LVU44
 167              		.loc 1 521 23 is_stmt 0 view .LVU45
 168 00b4 2823     		movs	r3, #40
 169 00b6 0493     		str	r3, [sp, #16]
 522:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 170              		.loc 1 522 3 is_stmt 1 view .LVU46
 171              		.loc 1 522 24 is_stmt 0 view .LVU47
 172 00b8 0594     		str	r4, [sp, #20]
 523:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 173              		.loc 1 523 3 is_stmt 1 view .LVU48
 174              		.loc 1 523 24 is_stmt 0 view .LVU49
 175 00ba 0694     		str	r4, [sp, #24]
 524:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 176              		.loc 1 524 3 is_stmt 1 view .LVU50
 177 00bc 04A9     		add	r1, sp, #16
 178 00be 2846     		mov	r0, r5
 179 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL5:
 525:Src/main.c    **** 
 526:Src/main.c    ****   /*Configure GPIO pin : BMS_FLT_Pin */
 527:Src/main.c    ****   GPIO_InitStruct.Pin = BMS_FLT_Pin;
 181              		.loc 1 527 3 view .LVU51
 182              		.loc 1 527 23 is_stmt 0 view .LVU52
 183 00c4 4FF40073 		mov	r3, #512
 184 00c8 0493     		str	r3, [sp, #16]
 528:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 185              		.loc 1 528 3 is_stmt 1 view .LVU53
 186              		.loc 1 528 24 is_stmt 0 view .LVU54
 187 00ca 0597     		str	r7, [sp, #20]
 529:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 188              		.loc 1 529 3 is_stmt 1 view .LVU55
 189              		.loc 1 529 24 is_stmt 0 view .LVU56
 190 00cc 0694     		str	r4, [sp, #24]
 530:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 191              		.loc 1 530 3 is_stmt 1 view .LVU57
 192              		.loc 1 530 25 is_stmt 0 view .LVU58
 193 00ce 0796     		str	r6, [sp, #28]
 531:Src/main.c    ****   HAL_GPIO_Init(BMS_FLT_GPIO_Port, &GPIO_InitStruct);
 194              		.loc 1 531 3 is_stmt 1 view .LVU59
 195 00d0 04A9     		add	r1, sp, #16
 196 00d2 2846     		mov	r0, r5
 197 00d4 FFF7FEFF 		bl	HAL_GPIO_Init
 198              	.LVL6:
 532:Src/main.c    **** 
 533:Src/main.c    **** }
 199              		.loc 1 533 1 is_stmt 0 view .LVU60
 200 00d8 09B0     		add	sp, sp, #36
 201              	.LCFI2:
 202              		.cfi_def_cfa_offset 28
 203              		@ sp needed
 204 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 205              	.L4:
 206 00de 00BF     		.align	2
 207              	.L3:
 208 00e0 00100240 		.word	1073876992
 209 00e4 000C0140 		.word	1073810432
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 14


 210 00e8 00100140 		.word	1073811456
 211 00ec 00080140 		.word	1073809408
 212              		.cfi_endproc
 213              	.LFE72:
 215              		.section	.text.MX_ADC1_Init,"ax",%progbits
 216              		.align	1
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 222              	MX_ADC1_Init:
 223              	.LFB68:
 316:Src/main.c    **** 
 224              		.loc 1 316 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 16
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 70B5     		push	{r4, r5, r6, lr}
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 16
 231              		.cfi_offset 4, -16
 232              		.cfi_offset 5, -12
 233              		.cfi_offset 6, -8
 234              		.cfi_offset 14, -4
 235 0002 84B0     		sub	sp, sp, #16
 236              	.LCFI4:
 237              		.cfi_def_cfa_offset 32
 322:Src/main.c    **** 
 238              		.loc 1 322 3 view .LVU62
 322:Src/main.c    **** 
 239              		.loc 1 322 26 is_stmt 0 view .LVU63
 240 0004 0025     		movs	r5, #0
 241 0006 0195     		str	r5, [sp, #4]
 242 0008 0295     		str	r5, [sp, #8]
 243 000a 0395     		str	r5, [sp, #12]
 329:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 244              		.loc 1 329 3 is_stmt 1 view .LVU64
 329:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 245              		.loc 1 329 18 is_stmt 0 view .LVU65
 246 000c 0C4C     		ldr	r4, .L7
 247 000e 0D4B     		ldr	r3, .L7+4
 248 0010 2360     		str	r3, [r4]
 330:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 249              		.loc 1 330 3 is_stmt 1 view .LVU66
 330:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 250              		.loc 1 330 27 is_stmt 0 view .LVU67
 251 0012 A560     		str	r5, [r4, #8]
 331:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 252              		.loc 1 331 3 is_stmt 1 view .LVU68
 331:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 253              		.loc 1 331 33 is_stmt 0 view .LVU69
 254 0014 E560     		str	r5, [r4, #12]
 332:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 255              		.loc 1 332 3 is_stmt 1 view .LVU70
 332:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 256              		.loc 1 332 36 is_stmt 0 view .LVU71
 257 0016 6561     		str	r5, [r4, #20]
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 15


 333:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 258              		.loc 1 333 3 is_stmt 1 view .LVU72
 333:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 259              		.loc 1 333 31 is_stmt 0 view .LVU73
 260 0018 4FF46023 		mov	r3, #917504
 261 001c E361     		str	r3, [r4, #28]
 334:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 262              		.loc 1 334 3 is_stmt 1 view .LVU74
 334:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 263              		.loc 1 334 24 is_stmt 0 view .LVU75
 264 001e 6560     		str	r5, [r4, #4]
 335:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 265              		.loc 1 335 3 is_stmt 1 view .LVU76
 335:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 266              		.loc 1 335 30 is_stmt 0 view .LVU77
 267 0020 0126     		movs	r6, #1
 268 0022 2661     		str	r6, [r4, #16]
 336:Src/main.c    ****   {
 269              		.loc 1 336 3 is_stmt 1 view .LVU78
 336:Src/main.c    ****   {
 270              		.loc 1 336 7 is_stmt 0 view .LVU79
 271 0024 2046     		mov	r0, r4
 272 0026 FFF7FEFF 		bl	HAL_ADC_Init
 273              	.LVL7:
 342:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 274              		.loc 1 342 3 is_stmt 1 view .LVU80
 342:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 275              		.loc 1 342 19 is_stmt 0 view .LVU81
 276 002a 0823     		movs	r3, #8
 277 002c 0193     		str	r3, [sp, #4]
 343:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 278              		.loc 1 343 3 is_stmt 1 view .LVU82
 343:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 279              		.loc 1 343 16 is_stmt 0 view .LVU83
 280 002e 0296     		str	r6, [sp, #8]
 344:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 281              		.loc 1 344 3 is_stmt 1 view .LVU84
 344:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 282              		.loc 1 344 24 is_stmt 0 view .LVU85
 283 0030 0395     		str	r5, [sp, #12]
 345:Src/main.c    ****   {
 284              		.loc 1 345 3 is_stmt 1 view .LVU86
 345:Src/main.c    ****   {
 285              		.loc 1 345 7 is_stmt 0 view .LVU87
 286 0032 01A9     		add	r1, sp, #4
 287 0034 2046     		mov	r0, r4
 288 0036 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 289              	.LVL8:
 353:Src/main.c    **** 
 290              		.loc 1 353 1 view .LVU88
 291 003a 04B0     		add	sp, sp, #16
 292              	.LCFI5:
 293              		.cfi_def_cfa_offset 16
 294              		@ sp needed
 295 003c 70BD     		pop	{r4, r5, r6, pc}
 296              	.L8:
 297 003e 00BF     		.align	2
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 16


 298              	.L7:
 299 0040 00000000 		.word	hadc1
 300 0044 00240140 		.word	1073816576
 301              		.cfi_endproc
 302              	.LFE68:
 304              		.section	.text.MX_CAN_Init,"ax",%progbits
 305              		.align	1
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu softvfp
 311              	MX_CAN_Init:
 312              	.LFB69:
 361:Src/main.c    **** 
 313              		.loc 1 361 1 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 70B5     		push	{r4, r5, r6, lr}
 318              	.LCFI6:
 319              		.cfi_def_cfa_offset 16
 320              		.cfi_offset 4, -16
 321              		.cfi_offset 5, -12
 322              		.cfi_offset 6, -8
 323              		.cfi_offset 14, -4
 370:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 324              		.loc 1 370 3 view .LVU90
 370:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 325              		.loc 1 370 17 is_stmt 0 view .LVU91
 326 0002 134C     		ldr	r4, .L11
 327 0004 134B     		ldr	r3, .L11+4
 328 0006 2360     		str	r3, [r4]
 371:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 329              		.loc 1 371 3 is_stmt 1 view .LVU92
 371:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 330              		.loc 1 371 23 is_stmt 0 view .LVU93
 331 0008 0126     		movs	r6, #1
 332 000a 6660     		str	r6, [r4, #4]
 372:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 333              		.loc 1 372 3 is_stmt 1 view .LVU94
 372:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 334              		.loc 1 372 18 is_stmt 0 view .LVU95
 335 000c 0025     		movs	r5, #0
 336 000e A560     		str	r5, [r4, #8]
 373:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 337              		.loc 1 373 3 is_stmt 1 view .LVU96
 373:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 338              		.loc 1 373 27 is_stmt 0 view .LVU97
 339 0010 4FF08073 		mov	r3, #16777216
 340 0014 E360     		str	r3, [r4, #12]
 374:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 341              		.loc 1 374 3 is_stmt 1 view .LVU98
 374:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 342              		.loc 1 374 22 is_stmt 0 view .LVU99
 343 0016 4FF44023 		mov	r3, #786432
 344 001a 2361     		str	r3, [r4, #16]
 375:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 17


 345              		.loc 1 375 3 is_stmt 1 view .LVU100
 375:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 346              		.loc 1 375 22 is_stmt 0 view .LVU101
 347 001c 4FF48013 		mov	r3, #1048576
 348 0020 6361     		str	r3, [r4, #20]
 376:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 349              		.loc 1 376 3 is_stmt 1 view .LVU102
 376:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 350              		.loc 1 376 31 is_stmt 0 view .LVU103
 351 0022 2576     		strb	r5, [r4, #24]
 377:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 352              		.loc 1 377 3 is_stmt 1 view .LVU104
 377:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 353              		.loc 1 377 24 is_stmt 0 view .LVU105
 354 0024 6576     		strb	r5, [r4, #25]
 378:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 355              		.loc 1 378 3 is_stmt 1 view .LVU106
 378:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 356              		.loc 1 378 24 is_stmt 0 view .LVU107
 357 0026 A576     		strb	r5, [r4, #26]
 379:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 358              		.loc 1 379 3 is_stmt 1 view .LVU108
 379:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 359              		.loc 1 379 32 is_stmt 0 view .LVU109
 360 0028 E576     		strb	r5, [r4, #27]
 380:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 361              		.loc 1 380 3 is_stmt 1 view .LVU110
 380:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 362              		.loc 1 380 31 is_stmt 0 view .LVU111
 363 002a 2577     		strb	r5, [r4, #28]
 381:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 364              		.loc 1 381 3 is_stmt 1 view .LVU112
 381:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 365              		.loc 1 381 34 is_stmt 0 view .LVU113
 366 002c 6577     		strb	r5, [r4, #29]
 382:Src/main.c    ****   {
 367              		.loc 1 382 3 is_stmt 1 view .LVU114
 382:Src/main.c    ****   {
 368              		.loc 1 382 7 is_stmt 0 view .LVU115
 369 002e 2046     		mov	r0, r4
 370 0030 FFF7FEFF 		bl	HAL_CAN_Init
 371              	.LVL9:
 387:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 372              		.loc 1 387 3 is_stmt 1 view .LVU116
 387:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 373              		.loc 1 387 18 is_stmt 0 view .LVU117
 374 0034 084B     		ldr	r3, .L11+8
 375 0036 40F22132 		movw	r2, #801
 376 003a 1A60     		str	r2, [r3]
 388:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 377              		.loc 1 388 2 is_stmt 1 view .LVU118
 388:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 378              		.loc 1 388 17 is_stmt 0 view .LVU119
 379 003c 5E60     		str	r6, [r3, #4]
 389:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 380              		.loc 1 389 2 is_stmt 1 view .LVU120
 389:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 18


 381              		.loc 1 389 15 is_stmt 0 view .LVU121
 382 003e DD60     		str	r5, [r3, #12]
 390:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 383              		.loc 1 390 2 is_stmt 1 view .LVU122
 390:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 384              		.loc 1 390 15 is_stmt 0 view .LVU123
 385 0040 9D60     		str	r5, [r3, #8]
 391:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 386              		.loc 1 391 2 is_stmt 1 view .LVU124
 391:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 387              		.loc 1 391 15 is_stmt 0 view .LVU125
 388 0042 0822     		movs	r2, #8
 389 0044 1A61     		str	r2, [r3, #16]
 392:Src/main.c    **** 
 390              		.loc 1 392 2 is_stmt 1 view .LVU126
 392:Src/main.c    **** 
 391              		.loc 1 392 30 is_stmt 0 view .LVU127
 392 0046 1D75     		strb	r5, [r3, #20]
 394:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 393              		.loc 1 394 3 is_stmt 1 view .LVU128
 394 0048 2046     		mov	r0, r4
 395 004a FFF7FEFF 		bl	HAL_CAN_Start
 396              	.LVL10:
 397:Src/main.c    **** 
 397              		.loc 1 397 1 is_stmt 0 view .LVU129
 398 004e 70BD     		pop	{r4, r5, r6, pc}
 399              	.L12:
 400              		.align	2
 401              	.L11:
 402 0050 00000000 		.word	hcan
 403 0054 00640040 		.word	1073767424
 404 0058 00000000 		.word	TxHeader
 405              		.cfi_endproc
 406              	.LFE69:
 408              		.section	.text.MX_TIM2_Init,"ax",%progbits
 409              		.align	1
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu softvfp
 415              	MX_TIM2_Init:
 416              	.LFB71:
 443:Src/main.c    **** 
 417              		.loc 1 443 1 is_stmt 1 view -0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 24
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421 0000 30B5     		push	{r4, r5, lr}
 422              	.LCFI7:
 423              		.cfi_def_cfa_offset 12
 424              		.cfi_offset 4, -12
 425              		.cfi_offset 5, -8
 426              		.cfi_offset 14, -4
 427 0002 87B0     		sub	sp, sp, #28
 428              	.LCFI8:
 429              		.cfi_def_cfa_offset 40
 449:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 19


 430              		.loc 1 449 3 view .LVU131
 449:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 431              		.loc 1 449 26 is_stmt 0 view .LVU132
 432 0004 0024     		movs	r4, #0
 433 0006 0294     		str	r4, [sp, #8]
 434 0008 0394     		str	r4, [sp, #12]
 435 000a 0494     		str	r4, [sp, #16]
 436 000c 0594     		str	r4, [sp, #20]
 450:Src/main.c    **** 
 437              		.loc 1 450 3 is_stmt 1 view .LVU133
 450:Src/main.c    **** 
 438              		.loc 1 450 27 is_stmt 0 view .LVU134
 439 000e 0094     		str	r4, [sp]
 440 0010 0194     		str	r4, [sp, #4]
 455:Src/main.c    ****   htim2.Init.Prescaler = 0;
 441              		.loc 1 455 3 is_stmt 1 view .LVU135
 455:Src/main.c    ****   htim2.Init.Prescaler = 0;
 442              		.loc 1 455 18 is_stmt 0 view .LVU136
 443 0012 0D4D     		ldr	r5, .L15
 444 0014 4FF08043 		mov	r3, #1073741824
 445 0018 2B60     		str	r3, [r5]
 456:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 446              		.loc 1 456 3 is_stmt 1 view .LVU137
 456:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 447              		.loc 1 456 24 is_stmt 0 view .LVU138
 448 001a 6C60     		str	r4, [r5, #4]
 457:Src/main.c    ****   htim2.Init.Period = 0;
 449              		.loc 1 457 3 is_stmt 1 view .LVU139
 457:Src/main.c    ****   htim2.Init.Period = 0;
 450              		.loc 1 457 26 is_stmt 0 view .LVU140
 451 001c AC60     		str	r4, [r5, #8]
 458:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 452              		.loc 1 458 3 is_stmt 1 view .LVU141
 458:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 453              		.loc 1 458 21 is_stmt 0 view .LVU142
 454 001e EC60     		str	r4, [r5, #12]
 459:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 455              		.loc 1 459 3 is_stmt 1 view .LVU143
 459:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 456              		.loc 1 459 28 is_stmt 0 view .LVU144
 457 0020 2C61     		str	r4, [r5, #16]
 460:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 458              		.loc 1 460 3 is_stmt 1 view .LVU145
 460:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 459              		.loc 1 460 32 is_stmt 0 view .LVU146
 460 0022 AC61     		str	r4, [r5, #24]
 461:Src/main.c    ****   {
 461              		.loc 1 461 3 is_stmt 1 view .LVU147
 461:Src/main.c    ****   {
 462              		.loc 1 461 7 is_stmt 0 view .LVU148
 463 0024 2846     		mov	r0, r5
 464 0026 FFF7FEFF 		bl	HAL_TIM_Base_Init
 465              	.LVL11:
 465:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 466              		.loc 1 465 3 is_stmt 1 view .LVU149
 465:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 467              		.loc 1 465 34 is_stmt 0 view .LVU150
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 20


 468 002a 4FF48053 		mov	r3, #4096
 469 002e 0293     		str	r3, [sp, #8]
 466:Src/main.c    ****   {
 470              		.loc 1 466 3 is_stmt 1 view .LVU151
 466:Src/main.c    ****   {
 471              		.loc 1 466 7 is_stmt 0 view .LVU152
 472 0030 02A9     		add	r1, sp, #8
 473 0032 2846     		mov	r0, r5
 474 0034 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 475              	.LVL12:
 470:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 476              		.loc 1 470 3 is_stmt 1 view .LVU153
 470:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 477              		.loc 1 470 37 is_stmt 0 view .LVU154
 478 0038 0094     		str	r4, [sp]
 471:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 479              		.loc 1 471 3 is_stmt 1 view .LVU155
 471:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 480              		.loc 1 471 33 is_stmt 0 view .LVU156
 481 003a 0194     		str	r4, [sp, #4]
 472:Src/main.c    ****   {
 482              		.loc 1 472 3 is_stmt 1 view .LVU157
 472:Src/main.c    ****   {
 483              		.loc 1 472 7 is_stmt 0 view .LVU158
 484 003c 6946     		mov	r1, sp
 485 003e 2846     		mov	r0, r5
 486 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 487              	.LVL13:
 480:Src/main.c    **** 
 488              		.loc 1 480 1 view .LVU159
 489 0044 07B0     		add	sp, sp, #28
 490              	.LCFI9:
 491              		.cfi_def_cfa_offset 12
 492              		@ sp needed
 493 0046 30BD     		pop	{r4, r5, pc}
 494              	.L16:
 495              		.align	2
 496              	.L15:
 497 0048 00000000 		.word	htim2
 498              		.cfi_endproc
 499              	.LFE71:
 501              		.section	.text.SystemClock_Config,"ax",%progbits
 502              		.align	1
 503              		.global	SystemClock_Config
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 507              		.fpu softvfp
 509              	SystemClock_Config:
 510              	.LFB67:
 274:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 511              		.loc 1 274 1 is_stmt 1 view -0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 80
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515 0000 30B5     		push	{r4, r5, lr}
 516              	.LCFI10:
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 21


 517              		.cfi_def_cfa_offset 12
 518              		.cfi_offset 4, -12
 519              		.cfi_offset 5, -8
 520              		.cfi_offset 14, -4
 521 0002 95B0     		sub	sp, sp, #84
 522              	.LCFI11:
 523              		.cfi_def_cfa_offset 96
 275:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 524              		.loc 1 275 3 view .LVU161
 275:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 525              		.loc 1 275 22 is_stmt 0 view .LVU162
 526 0004 2422     		movs	r2, #36
 527 0006 0021     		movs	r1, #0
 528 0008 0BA8     		add	r0, sp, #44
 529 000a FFF7FEFF 		bl	memset
 530              	.LVL14:
 276:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 531              		.loc 1 276 3 is_stmt 1 view .LVU163
 276:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 532              		.loc 1 276 22 is_stmt 0 view .LVU164
 533 000e 0024     		movs	r4, #0
 534 0010 0594     		str	r4, [sp, #20]
 535 0012 0694     		str	r4, [sp, #24]
 536 0014 0794     		str	r4, [sp, #28]
 537 0016 0894     		str	r4, [sp, #32]
 538 0018 0994     		str	r4, [sp, #36]
 277:Src/main.c    **** 
 539              		.loc 1 277 3 is_stmt 1 view .LVU165
 277:Src/main.c    **** 
 540              		.loc 1 277 28 is_stmt 0 view .LVU166
 541 001a 0194     		str	r4, [sp, #4]
 542 001c 0294     		str	r4, [sp, #8]
 543 001e 0394     		str	r4, [sp, #12]
 544 0020 0494     		str	r4, [sp, #16]
 281:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 545              		.loc 1 281 3 is_stmt 1 view .LVU167
 281:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 546              		.loc 1 281 36 is_stmt 0 view .LVU168
 547 0022 0225     		movs	r5, #2
 548 0024 0A95     		str	r5, [sp, #40]
 282:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 549              		.loc 1 282 3 is_stmt 1 view .LVU169
 282:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 550              		.loc 1 282 30 is_stmt 0 view .LVU170
 551 0026 0123     		movs	r3, #1
 552 0028 0E93     		str	r3, [sp, #56]
 283:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 553              		.loc 1 283 3 is_stmt 1 view .LVU171
 283:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 554              		.loc 1 283 41 is_stmt 0 view .LVU172
 555 002a 1023     		movs	r3, #16
 556 002c 0F93     		str	r3, [sp, #60]
 284:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 557              		.loc 1 284 3 is_stmt 1 view .LVU173
 285:Src/main.c    ****   {
 558              		.loc 1 285 3 view .LVU174
 285:Src/main.c    ****   {
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 22


 559              		.loc 1 285 7 is_stmt 0 view .LVU175
 560 002e 0AA8     		add	r0, sp, #40
 561 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 562              	.LVL15:
 291:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 563              		.loc 1 291 3 is_stmt 1 view .LVU176
 291:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 564              		.loc 1 291 31 is_stmt 0 view .LVU177
 565 0034 0F23     		movs	r3, #15
 566 0036 0593     		str	r3, [sp, #20]
 293:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 567              		.loc 1 293 3 is_stmt 1 view .LVU178
 293:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 568              		.loc 1 293 34 is_stmt 0 view .LVU179
 569 0038 0694     		str	r4, [sp, #24]
 294:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 570              		.loc 1 294 3 is_stmt 1 view .LVU180
 294:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 571              		.loc 1 294 35 is_stmt 0 view .LVU181
 572 003a 0794     		str	r4, [sp, #28]
 295:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 573              		.loc 1 295 3 is_stmt 1 view .LVU182
 295:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 574              		.loc 1 295 36 is_stmt 0 view .LVU183
 575 003c 0894     		str	r4, [sp, #32]
 296:Src/main.c    **** 
 576              		.loc 1 296 3 is_stmt 1 view .LVU184
 296:Src/main.c    **** 
 577              		.loc 1 296 36 is_stmt 0 view .LVU185
 578 003e 0994     		str	r4, [sp, #36]
 298:Src/main.c    ****   {
 579              		.loc 1 298 3 is_stmt 1 view .LVU186
 298:Src/main.c    ****   {
 580              		.loc 1 298 7 is_stmt 0 view .LVU187
 581 0040 2146     		mov	r1, r4
 582 0042 05A8     		add	r0, sp, #20
 583 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 584              	.LVL16:
 302:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 585              		.loc 1 302 3 is_stmt 1 view .LVU188
 302:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 586              		.loc 1 302 38 is_stmt 0 view .LVU189
 587 0048 0195     		str	r5, [sp, #4]
 303:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 588              		.loc 1 303 3 is_stmt 1 view .LVU190
 303:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 589              		.loc 1 303 35 is_stmt 0 view .LVU191
 590 004a 0394     		str	r4, [sp, #12]
 304:Src/main.c    ****   {
 591              		.loc 1 304 3 is_stmt 1 view .LVU192
 304:Src/main.c    ****   {
 592              		.loc 1 304 7 is_stmt 0 view .LVU193
 593 004c 01A8     		add	r0, sp, #4
 594 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 595              	.LVL17:
 308:Src/main.c    **** 
 596              		.loc 1 308 1 view .LVU194
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 23


 597 0052 15B0     		add	sp, sp, #84
 598              	.LCFI12:
 599              		.cfi_def_cfa_offset 12
 600              		@ sp needed
 601 0054 30BD     		pop	{r4, r5, pc}
 602              		.cfi_endproc
 603              	.LFE67:
 605              		.section	.text.VOLTAGE_sort,"ax",%progbits
 606              		.align	1
 607              		.global	VOLTAGE_sort
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu softvfp
 613              	VOLTAGE_sort:
 614              	.LVL18:
 615              	.LFB73:
 534:Src/main.c    **** 
 535:Src/main.c    **** /* USER CODE BEGIN 4 */
 536:Src/main.c    **** 
 537:Src/main.c    **** void VOLTAGE_sort(uint16_t voltage[12][12]) {
 616              		.loc 1 537 45 is_stmt 1 view -0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 538:Src/main.c    ****   for (uint8_t i = 0; i < 12; i++) {
 621              		.loc 1 538 3 view .LVU196
 622              	.LBB6:
 623              		.loc 1 538 8 view .LVU197
 624              		.loc 1 538 16 is_stmt 0 view .LVU198
 625 0000 0022     		movs	r2, #0
 626              	.LVL19:
 627              	.L20:
 628              		.loc 1 538 3 discriminator 1 view .LVU199
 629 0002 0B2A     		cmp	r2, #11
 630 0004 0ED8     		bhi	.L22
 539:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 631              		.loc 1 539 5 is_stmt 1 discriminator 3 view .LVU200
 632              		.loc 1 539 28 is_stmt 0 discriminator 3 view .LVU201
 633 0006 02EB4201 		add	r1, r2, r2, lsl #1
 634 000a CB00     		lsls	r3, r1, #3
 635 000c 0344     		add	r3, r3, r0
 636              		.loc 1 539 31 discriminator 3 view .LVU202
 637 000e 9989     		ldrh	r1, [r3, #12]
 638              		.loc 1 539 19 discriminator 3 view .LVU203
 639 0010 1981     		strh	r1, [r3, #8]	@ movhi
 540:Src/main.c    ****     voltage[i][5] = voltage[i][7];
 640              		.loc 1 540 5 is_stmt 1 discriminator 3 view .LVU204
 641              		.loc 1 540 31 is_stmt 0 discriminator 3 view .LVU205
 642 0012 D989     		ldrh	r1, [r3, #14]
 643              		.loc 1 540 19 discriminator 3 view .LVU206
 644 0014 5981     		strh	r1, [r3, #10]	@ movhi
 541:Src/main.c    ****     voltage[i][6] = voltage[i][8];
 645              		.loc 1 541 5 is_stmt 1 discriminator 3 view .LVU207
 646              		.loc 1 541 31 is_stmt 0 discriminator 3 view .LVU208
 647 0016 198A     		ldrh	r1, [r3, #16]
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 24


 648              		.loc 1 541 19 discriminator 3 view .LVU209
 649 0018 9981     		strh	r1, [r3, #12]	@ movhi
 542:Src/main.c    ****     voltage[i][7] = voltage[i][9];
 650              		.loc 1 542 5 is_stmt 1 discriminator 3 view .LVU210
 651              		.loc 1 542 31 is_stmt 0 discriminator 3 view .LVU211
 652 001a 598A     		ldrh	r1, [r3, #18]
 653              		.loc 1 542 19 discriminator 3 view .LVU212
 654 001c D981     		strh	r1, [r3, #14]	@ movhi
 538:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 655              		.loc 1 538 32 discriminator 3 view .LVU213
 656 001e 0132     		adds	r2, r2, #1
 657              	.LVL20:
 538:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 658              		.loc 1 538 32 discriminator 3 view .LVU214
 659 0020 D2B2     		uxtb	r2, r2
 660              	.LVL21:
 538:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 661              		.loc 1 538 32 discriminator 3 view .LVU215
 662 0022 EEE7     		b	.L20
 663              	.L22:
 538:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 664              		.loc 1 538 32 discriminator 3 view .LVU216
 665              	.LBE6:
 543:Src/main.c    ****   }
 544:Src/main.c    **** }
 666              		.loc 1 544 1 view .LVU217
 667 0024 7047     		bx	lr
 668              		.cfi_endproc
 669              	.LFE73:
 671              		.section	.text.CONNECTION_sort,"ax",%progbits
 672              		.align	1
 673              		.global	CONNECTION_sort
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu softvfp
 679              	CONNECTION_sort:
 680              	.LVL22:
 681              	.LFB74:
 545:Src/main.c    **** 
 546:Src/main.c    **** void CONNECTION_sort(bool connection[12][12]) {
 682              		.loc 1 546 47 is_stmt 1 view -0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 547:Src/main.c    ****   for (uint8_t i = 0; i < 12; i++) {
 687              		.loc 1 547 3 view .LVU219
 688              	.LBB7:
 689              		.loc 1 547 8 view .LVU220
 690              		.loc 1 547 16 is_stmt 0 view .LVU221
 691 0000 0022     		movs	r2, #0
 692              	.LVL23:
 693              	.L24:
 694              		.loc 1 547 3 discriminator 1 view .LVU222
 695 0002 0B2A     		cmp	r2, #11
 696 0004 0ED8     		bhi	.L26
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 25


 548:Src/main.c    ****     connection[i][4] = connection[i][6];
 697              		.loc 1 548 5 is_stmt 1 discriminator 3 view .LVU223
 698              		.loc 1 548 34 is_stmt 0 discriminator 3 view .LVU224
 699 0006 02EB4201 		add	r1, r2, r2, lsl #1
 700 000a 8B00     		lsls	r3, r1, #2
 701 000c 0344     		add	r3, r3, r0
 702              		.loc 1 548 37 discriminator 3 view .LVU225
 703 000e 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 704              		.loc 1 548 22 discriminator 3 view .LVU226
 705 0010 1971     		strb	r1, [r3, #4]
 549:Src/main.c    ****     connection[i][5] = connection[i][7];
 706              		.loc 1 549 5 is_stmt 1 discriminator 3 view .LVU227
 707              		.loc 1 549 37 is_stmt 0 discriminator 3 view .LVU228
 708 0012 D979     		ldrb	r1, [r3, #7]	@ zero_extendqisi2
 709              		.loc 1 549 22 discriminator 3 view .LVU229
 710 0014 5971     		strb	r1, [r3, #5]
 550:Src/main.c    ****     connection[i][6] = connection[i][8];
 711              		.loc 1 550 5 is_stmt 1 discriminator 3 view .LVU230
 712              		.loc 1 550 37 is_stmt 0 discriminator 3 view .LVU231
 713 0016 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 714              		.loc 1 550 22 discriminator 3 view .LVU232
 715 0018 9971     		strb	r1, [r3, #6]
 551:Src/main.c    ****     connection[i][7] = connection[i][9];
 716              		.loc 1 551 5 is_stmt 1 discriminator 3 view .LVU233
 717              		.loc 1 551 37 is_stmt 0 discriminator 3 view .LVU234
 718 001a 597A     		ldrb	r1, [r3, #9]	@ zero_extendqisi2
 719              		.loc 1 551 22 discriminator 3 view .LVU235
 720 001c D971     		strb	r1, [r3, #7]
 547:Src/main.c    ****     connection[i][4] = connection[i][6];
 721              		.loc 1 547 32 discriminator 3 view .LVU236
 722 001e 0132     		adds	r2, r2, #1
 723              	.LVL24:
 547:Src/main.c    ****     connection[i][4] = connection[i][6];
 724              		.loc 1 547 32 discriminator 3 view .LVU237
 725 0020 D2B2     		uxtb	r2, r2
 726              	.LVL25:
 547:Src/main.c    ****     connection[i][4] = connection[i][6];
 727              		.loc 1 547 32 discriminator 3 view .LVU238
 728 0022 EEE7     		b	.L24
 729              	.L26:
 547:Src/main.c    ****     connection[i][4] = connection[i][6];
 730              		.loc 1 547 32 discriminator 3 view .LVU239
 731              	.LBE7:
 552:Src/main.c    ****   }
 553:Src/main.c    **** }
 732              		.loc 1 553 1 view .LVU240
 733 0024 7047     		bx	lr
 734              		.cfi_endproc
 735              	.LFE74:
 737              		.section	.text.FAULT_check,"ax",%progbits
 738              		.align	1
 739              		.global	FAULT_check
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu softvfp
 745              	FAULT_check:
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 26


 746              	.LVL26:
 747              	.LFB75:
 554:Src/main.c    **** 
 555:Src/main.c    **** void FAULT_check(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool tempFault[12][4], b
 748              		.loc 1 555 191 is_stmt 1 view -0
 749              		.cfi_startproc
 750              		@ args = 100, pretend = 16, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		.loc 1 555 191 is_stmt 0 view .LVU242
 753 0000 84B0     		sub	sp, sp, #16
 754              	.LCFI13:
 755              		.cfi_def_cfa_offset 16
 756 0002 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 757              	.LCFI14:
 758              		.cfi_def_cfa_offset 56
 759              		.cfi_offset 3, -56
 760              		.cfi_offset 4, -52
 761              		.cfi_offset 5, -48
 762              		.cfi_offset 6, -44
 763              		.cfi_offset 7, -40
 764              		.cfi_offset 8, -36
 765              		.cfi_offset 9, -32
 766              		.cfi_offset 10, -28
 767              		.cfi_offset 11, -24
 768              		.cfi_offset 14, -20
 769 0006 0AAC     		add	r4, sp, #40
 770 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 771 000c DDF87490 		ldr	r9, [sp, #116]
 772 0010 1E9E     		ldr	r6, [sp, #120]
 773 0012 1F9F     		ldr	r7, [sp, #124]
 774 0014 DDF88080 		ldr	r8, [sp, #128]
 775 0018 2198     		ldr	r0, [sp, #132]
 776 001a 229D     		ldr	r5, [sp, #136]
 556:Src/main.c    **** 
 557:Src/main.c    ****   bool BMS_FAULT = false;
 777              		.loc 1 557 3 is_stmt 1 view .LVU243
 778              	.LVL27:
 558:Src/main.c    ****   
 559:Src/main.c    ****   cellNumber[0] = 0; // OV cell number
 779              		.loc 1 559 3 view .LVU244
 780              		.loc 1 559 17 is_stmt 0 view .LVU245
 781 001c 0024     		movs	r4, #0
 782 001e 0470     		strb	r4, [r0]
 560:Src/main.c    ****   cellNumber[1] = 0; // UV cell number
 783              		.loc 1 560 3 is_stmt 1 view .LVU246
 784              		.loc 1 560 17 is_stmt 0 view .LVU247
 785 0020 4470     		strb	r4, [r0, #1]
 561:Src/main.c    ****   cellNumber[2] = 0; // OT cell number
 786              		.loc 1 561 3 is_stmt 1 view .LVU248
 787              		.loc 1 561 17 is_stmt 0 view .LVU249
 788 0022 8470     		strb	r4, [r0, #2]
 562:Src/main.c    ****   cellNumber[3] = 0; // disconnected cell cell number
 789              		.loc 1 562 3 is_stmt 1 view .LVU250
 790              		.loc 1 562 17 is_stmt 0 view .LVU251
 791 0024 C470     		strb	r4, [r0, #3]
 563:Src/main.c    ****   cellNumber[4] = 0; // disconnected temp sensor cell number
 792              		.loc 1 563 3 is_stmt 1 view .LVU252
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 27


 793              		.loc 1 563 17 is_stmt 0 view .LVU253
 794 0026 0471     		strb	r4, [r0, #4]
 564:Src/main.c    **** 
 565:Src/main.c    ****   faultType[0] = 0; // disconnected temp sensor fault
 795              		.loc 1 565 3 is_stmt 1 view .LVU254
 796              		.loc 1 565 16 is_stmt 0 view .LVU255
 797 0028 2C70     		strb	r4, [r5]
 566:Src/main.c    ****   faultType[1] = 0; // disconnected cell fault
 798              		.loc 1 566 3 is_stmt 1 view .LVU256
 799              		.loc 1 566 16 is_stmt 0 view .LVU257
 800 002a 6C70     		strb	r4, [r5, #1]
 567:Src/main.c    ****   faultType[2] = 0; // OT fault
 801              		.loc 1 567 3 is_stmt 1 view .LVU258
 802              		.loc 1 567 16 is_stmt 0 view .LVU259
 803 002c AC70     		strb	r4, [r5, #2]
 568:Src/main.c    ****   faultType[3] = 0; // UV fault
 804              		.loc 1 568 3 is_stmt 1 view .LVU260
 805              		.loc 1 568 16 is_stmt 0 view .LVU261
 806 002e EC70     		strb	r4, [r5, #3]
 569:Src/main.c    ****   faultType[4] = 0; // OV fault
 807              		.loc 1 569 3 is_stmt 1 view .LVU262
 808              		.loc 1 569 16 is_stmt 0 view .LVU263
 809 0030 2C71     		strb	r4, [r5, #4]
 570:Src/main.c    **** 
 571:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 810              		.loc 1 571 3 is_stmt 1 view .LVU264
 811              	.LBB8:
 812              		.loc 1 571 8 view .LVU265
 813              	.LVL28:
 814              		.loc 1 571 16 is_stmt 0 view .LVU266
 815 0032 A446     		mov	ip, r4
 816              		.loc 1 571 3 view .LVU267
 817 0034 36E0     		b	.L28
 818              	.LVL29:
 819              	.L30:
 820              	.LBB9:
 572:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 821              		.loc 1 572 51 discriminator 2 view .LVU268
 822 0036 0133     		adds	r3, r3, #1
 823              	.LVL30:
 824              		.loc 1 572 51 discriminator 2 view .LVU269
 825 0038 DBB2     		uxtb	r3, r3
 826              	.LVL31:
 827              	.L32:
 828              		.loc 1 572 32 discriminator 1 view .LVU270
 829 003a 9DF84A20 		ldrb	r2, [sp, #74]	@ zero_extendqisi2
 830              		.loc 1 572 5 discriminator 1 view .LVU271
 831 003e 9A42     		cmp	r2, r3
 832 0040 2CD9     		bls	.L43
 573:Src/main.c    ****       if (cellVoltage[i][j] >> cfg.OV_threshold) {
 833              		.loc 1 573 7 is_stmt 1 view .LVU272
 834              		.loc 1 573 22 is_stmt 0 view .LVU273
 835 0042 6146     		mov	r1, ip
 836 0044 0CEB4C0A 		add	r10, ip, ip, lsl #1
 837 0048 4FEACA0E 		lsl	lr, r10, #3
 838 004c CE44     		add	lr, lr, r9
 839              		.loc 1 573 25 view .LVU274
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 28


 840 004e 9A46     		mov	r10, r3
 841 0050 3EF813B0 		ldrh	fp, [lr, r3, lsl #1]
 842              		.loc 1 573 35 view .LVU275
 843 0054 BDF84EE0 		ldrh	lr, [sp, #78]
 844              		.loc 1 573 10 view .LVU276
 845 0058 5BFA0EFE 		asrs	lr, fp, lr
 846 005c 0BD0     		beq	.L29
 574:Src/main.c    ****         BMS_FAULT = true;
 847              		.loc 1 574 9 is_stmt 1 view .LVU277
 848              	.LVL32:
 575:Src/main.c    ****         faultType[4] = true;
 849              		.loc 1 575 9 view .LVU278
 850              		.loc 1 575 22 is_stmt 0 view .LVU279
 851 005e 0124     		movs	r4, #1
 852 0060 2C71     		strb	r4, [r5, #4]
 576:Src/main.c    ****         cellNumber[0] = i * cfg.numOfCellsPerIC + j + 1;
 853              		.loc 1 576 9 is_stmt 1 view .LVU280
 854              		.loc 1 576 27 is_stmt 0 view .LVU281
 855 0062 0CFB02FE 		mul	lr, ip, r2
 856 0066 5FFA8EFE 		uxtb	lr, lr
 857              		.loc 1 576 49 view .LVU282
 858 006a 9E44     		add	lr, lr, r3
 859 006c 5FFA8EFE 		uxtb	lr, lr
 860              		.loc 1 576 53 view .LVU283
 861 0070 A644     		add	lr, lr, r4
 862              		.loc 1 576 23 view .LVU284
 863 0072 80F800E0 		strb	lr, [r0]
 864              	.LVL33:
 865              	.L29:
 577:Src/main.c    ****       }
 578:Src/main.c    ****       if (cellConnection[i][j] == 0) {
 866              		.loc 1 578 7 is_stmt 1 view .LVU285
 867              		.loc 1 578 25 is_stmt 0 view .LVU286
 868 0076 01EB4101 		add	r1, r1, r1, lsl #1
 869 007a 4FEA810E 		lsl	lr, r1, #2
 870 007e C644     		add	lr, lr, r8
 871              		.loc 1 578 28 view .LVU287
 872 0080 1EF80A10 		ldrb	r1, [lr, r10]	@ zero_extendqisi2
 873              		.loc 1 578 10 view .LVU288
 874 0084 0029     		cmp	r1, #0
 875 0086 D6D1     		bne	.L30
 579:Src/main.c    ****         BMS_FAULT = true;
 876              		.loc 1 579 9 is_stmt 1 view .LVU289
 877              	.LVL34:
 580:Src/main.c    ****         faultType[1] = true;
 878              		.loc 1 580 9 view .LVU290
 879              		.loc 1 580 22 is_stmt 0 view .LVU291
 880 0088 0124     		movs	r4, #1
 881 008a 6C70     		strb	r4, [r5, #1]
 581:Src/main.c    ****         cellNumber[3] = i * cfg.numOfCellsPerIC + j + 1;
 882              		.loc 1 581 9 is_stmt 1 view .LVU292
 883              		.loc 1 581 27 is_stmt 0 view .LVU293
 884 008c 0CFB02F2 		mul	r2, ip, r2
 885 0090 D2B2     		uxtb	r2, r2
 886              		.loc 1 581 49 view .LVU294
 887 0092 1A44     		add	r2, r2, r3
 888 0094 D2B2     		uxtb	r2, r2
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 29


 889              		.loc 1 581 53 view .LVU295
 890 0096 2244     		add	r2, r2, r4
 891              		.loc 1 581 23 view .LVU296
 892 0098 C270     		strb	r2, [r0, #3]
 893 009a CCE7     		b	.L30
 894              	.LVL35:
 895              	.L43:
 896              		.loc 1 581 23 view .LVU297
 897              	.LBE9:
 571:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 898              		.loc 1 571 42 discriminator 2 view .LVU298
 899 009c 0CF1010C 		add	ip, ip, #1
 900              	.LVL36:
 571:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 901              		.loc 1 571 42 discriminator 2 view .LVU299
 902 00a0 5FFA8CFC 		uxtb	ip, ip
 903              	.LVL37:
 904              	.L28:
 571:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 905              		.loc 1 571 30 discriminator 1 view .LVU300
 906 00a4 9DF828E0 		ldrb	lr, [sp, #40]	@ zero_extendqisi2
 571:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 907              		.loc 1 571 3 discriminator 1 view .LVU301
 908 00a8 E645     		cmp	lr, ip
 909 00aa 01D9     		bls	.L44
 910              	.LBB10:
 572:Src/main.c    ****       if (cellVoltage[i][j] >> cfg.OV_threshold) {
 911              		.loc 1 572 18 view .LVU302
 912 00ac 0023     		movs	r3, #0
 913 00ae C4E7     		b	.L32
 914              	.L44:
 915              	.LBE10:
 916              	.LBE8:
 917              	.LBB11:
 582:Src/main.c    ****       }
 583:Src/main.c    ****     }
 584:Src/main.c    ****   }
 585:Src/main.c    **** 
 586:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 918              		.loc 1 586 16 view .LVU303
 919 00b0 0021     		movs	r1, #0
 920 00b2 32E0     		b	.L33
 921              	.LVL38:
 922              	.L35:
 923              	.LBB12:
 587:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 924              		.loc 1 587 50 discriminator 2 view .LVU304
 925 00b4 0133     		adds	r3, r3, #1
 926              	.LVL39:
 927              		.loc 1 587 50 discriminator 2 view .LVU305
 928 00b6 DBB2     		uxtb	r3, r3
 929              	.LVL40:
 930              	.L37:
 931              		.loc 1 587 32 discriminator 1 view .LVU306
 932 00b8 9DF84B20 		ldrb	r2, [sp, #75]	@ zero_extendqisi2
 933              		.loc 1 587 5 discriminator 1 view .LVU307
 934 00bc 9A42     		cmp	r2, r3
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 30


 935 00be 2AD9     		bls	.L45
 588:Src/main.c    ****       if (tempFault[i][j] == 1) {
 936              		.loc 1 588 7 is_stmt 1 view .LVU308
 937              		.loc 1 588 20 is_stmt 0 view .LVU309
 938 00c0 4FEA810C 		lsl	ip, r1, #2
 939 00c4 06EB0C02 		add	r2, r6, ip
 940              		.loc 1 588 23 view .LVU310
 941 00c8 9946     		mov	r9, r3
 942 00ca 12F80380 		ldrb	r8, [r2, r3]	@ zero_extendqisi2
 943              		.loc 1 588 10 view .LVU311
 944 00ce B8F1000F 		cmp	r8, #0
 945 00d2 0CD0     		beq	.L34
 589:Src/main.c    ****         BMS_FAULT = true;
 946              		.loc 1 589 9 is_stmt 1 view .LVU312
 947              	.LVL41:
 590:Src/main.c    ****         faultType[2] = true;
 948              		.loc 1 590 9 view .LVU313
 949              		.loc 1 590 22 is_stmt 0 view .LVU314
 950 00d4 0122     		movs	r2, #1
 951 00d6 AA70     		strb	r2, [r5, #2]
 591:Src/main.c    ****         cellNumber[2] = i * cfg.numOfCellsPerIC + j*2 + 1;
 952              		.loc 1 591 9 is_stmt 1 view .LVU315
 953              		.loc 1 591 32 is_stmt 0 view .LVU316
 954 00d8 9DF84A20 		ldrb	r2, [sp, #74]	@ zero_extendqisi2
 955              		.loc 1 591 27 view .LVU317
 956 00dc 01FB02F2 		mul	r2, r1, r2
 957 00e0 D2B2     		uxtb	r2, r2
 958              		.loc 1 591 49 view .LVU318
 959 00e2 02EB4302 		add	r2, r2, r3, lsl #1
 960 00e6 D2B2     		uxtb	r2, r2
 961              		.loc 1 591 55 view .LVU319
 962 00e8 0132     		adds	r2, r2, #1
 963              		.loc 1 591 23 view .LVU320
 964 00ea 8270     		strb	r2, [r0, #2]
 589:Src/main.c    ****         BMS_FAULT = true;
 965              		.loc 1 589 19 view .LVU321
 966 00ec 4446     		mov	r4, r8
 967              	.LVL42:
 968              	.L34:
 592:Src/main.c    ****       }
 593:Src/main.c    ****       if (dcFault[i][j] == 1) {
 969              		.loc 1 593 7 is_stmt 1 view .LVU322
 970              		.loc 1 593 18 is_stmt 0 view .LVU323
 971 00ee BC44     		add	ip, ip, r7
 972              		.loc 1 593 21 view .LVU324
 973 00f0 1CF809C0 		ldrb	ip, [ip, r9]	@ zero_extendqisi2
 974              		.loc 1 593 10 view .LVU325
 975 00f4 BCF1000F 		cmp	ip, #0
 976 00f8 DCD0     		beq	.L35
 594:Src/main.c    ****         BMS_FAULT = true;
 977              		.loc 1 594 9 is_stmt 1 view .LVU326
 978              	.LVL43:
 595:Src/main.c    ****         faultType[0] = true;
 979              		.loc 1 595 9 view .LVU327
 980              		.loc 1 595 22 is_stmt 0 view .LVU328
 981 00fa 0122     		movs	r2, #1
 982 00fc 2A70     		strb	r2, [r5]
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 31


 596:Src/main.c    ****         cellNumber[4] = i * cfg.numOfCellsPerIC + j*2 + 1;
 983              		.loc 1 596 9 is_stmt 1 view .LVU329
 984              		.loc 1 596 32 is_stmt 0 view .LVU330
 985 00fe 9DF84A20 		ldrb	r2, [sp, #74]	@ zero_extendqisi2
 986              		.loc 1 596 27 view .LVU331
 987 0102 01FB02F2 		mul	r2, r1, r2
 988 0106 D2B2     		uxtb	r2, r2
 989              		.loc 1 596 49 view .LVU332
 990 0108 02EB4302 		add	r2, r2, r3, lsl #1
 991 010c D2B2     		uxtb	r2, r2
 992              		.loc 1 596 55 view .LVU333
 993 010e 0132     		adds	r2, r2, #1
 994              		.loc 1 596 23 view .LVU334
 995 0110 0271     		strb	r2, [r0, #4]
 594:Src/main.c    ****         BMS_FAULT = true;
 996              		.loc 1 594 19 view .LVU335
 997 0112 6446     		mov	r4, ip
 998 0114 CEE7     		b	.L35
 999              	.LVL44:
 1000              	.L45:
 594:Src/main.c    ****         BMS_FAULT = true;
 1001              		.loc 1 594 19 view .LVU336
 1002              	.LBE12:
 586:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 1003              		.loc 1 586 42 discriminator 2 view .LVU337
 1004 0116 0131     		adds	r1, r1, #1
 1005              	.LVL45:
 586:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 1006              		.loc 1 586 42 discriminator 2 view .LVU338
 1007 0118 C9B2     		uxtb	r1, r1
 1008              	.LVL46:
 1009              	.L33:
 586:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 1010              		.loc 1 586 3 discriminator 1 view .LVU339
 1011 011a 8E45     		cmp	lr, r1
 1012 011c 01D9     		bls	.L46
 1013              	.LBB13:
 587:Src/main.c    ****       if (tempFault[i][j] == 1) {
 1014              		.loc 1 587 18 view .LVU340
 1015 011e 0023     		movs	r3, #0
 1016 0120 CAE7     		b	.L37
 1017              	.L46:
 1018              	.LBE13:
 1019              	.LBE11:
 597:Src/main.c    ****       }
 598:Src/main.c    ****     }
 599:Src/main.c    ****   }
 600:Src/main.c    **** 
 601:Src/main.c    ****   if (BMS_FAULT == false)
 1020              		.loc 1 601 3 is_stmt 1 view .LVU341
 1021              		.loc 1 601 6 is_stmt 0 view .LVU342
 1022 0122 24B1     		cbz	r4, .L47
 1023              	.LVL47:
 1024              	.L38:
 602:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 603:Src/main.c    ****   if (BMS_FAULT == true)
 1025              		.loc 1 603 3 is_stmt 1 view .LVU343
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 32


 1026              		.loc 1 603 6 is_stmt 0 view .LVU344
 1027 0124 54B9     		cbnz	r4, .L48
 1028              	.L27:
 604:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_SET);
 605:Src/main.c    **** 
 606:Src/main.c    **** }
 1029              		.loc 1 606 1 view .LVU345
 1030 0126 BDE8F84F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1031              	.LCFI15:
 1032              		.cfi_remember_state
 1033              		.cfi_restore 14
 1034              		.cfi_restore 11
 1035              		.cfi_restore 10
 1036              		.cfi_restore 9
 1037              		.cfi_restore 8
 1038              		.cfi_restore 7
 1039              		.cfi_restore 6
 1040              		.cfi_restore 5
 1041              		.cfi_restore 4
 1042              		.cfi_restore 3
 1043              		.cfi_def_cfa_offset 16
 1044              	.LVL48:
 1045              		.loc 1 606 1 view .LVU346
 1046 012a 04B0     		add	sp, sp, #16
 1047              	.LCFI16:
 1048              		.cfi_def_cfa_offset 0
 1049 012c 7047     		bx	lr
 1050              	.LVL49:
 1051              	.L47:
 1052              	.LCFI17:
 1053              		.cfi_restore_state
 602:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 1054              		.loc 1 602 5 is_stmt 1 view .LVU347
 1055 012e 0022     		movs	r2, #0
 1056 0130 4FF40071 		mov	r1, #512
 1057              	.LVL50:
 602:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 1058              		.loc 1 602 5 is_stmt 0 view .LVU348
 1059 0134 0548     		ldr	r0, .L49
 1060 0136 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1061              	.LVL51:
 1062 013a F3E7     		b	.L38
 1063              	.L48:
 604:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_SET);
 1064              		.loc 1 604 5 is_stmt 1 view .LVU349
 1065 013c 0122     		movs	r2, #1
 1066 013e 4FF40071 		mov	r1, #512
 1067 0142 0248     		ldr	r0, .L49
 1068 0144 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1069              	.LVL52:
 1070              		.loc 1 606 1 is_stmt 0 view .LVU350
 1071 0148 EDE7     		b	.L27
 1072              	.L50:
 1073 014a 00BF     		.align	2
 1074              	.L49:
 1075 014c 000C0140 		.word	1073810432
 1076              		.cfi_endproc
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 33


 1077              	.LFE75:
 1079              		.section	.text.CELLVAL_message,"ax",%progbits
 1080              		.align	1
 1081              		.global	CELLVAL_message
 1082              		.syntax unified
 1083              		.thumb
 1084              		.thumb_func
 1085              		.fpu softvfp
 1087              	CELLVAL_message:
 1088              	.LVL53:
 1089              	.LFB76:
 607:Src/main.c    **** 
 608:Src/main.c    **** void CELLVAL_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], uint16_t cellTemp[12
 1090              		.loc 1 608 197 is_stmt 1 view -0
 1091              		.cfi_startproc
 1092              		@ args = 100, pretend = 16, frame = 0
 1093              		@ frame_needed = 0, uses_anonymous_args = 0
 1094              		.loc 1 608 197 is_stmt 0 view .LVU352
 1095 0000 84B0     		sub	sp, sp, #16
 1096              	.LCFI18:
 1097              		.cfi_def_cfa_offset 16
 1098 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1099              	.LCFI19:
 1100              		.cfi_def_cfa_offset 40
 1101              		.cfi_offset 4, -40
 1102              		.cfi_offset 5, -36
 1103              		.cfi_offset 6, -32
 1104              		.cfi_offset 7, -28
 1105              		.cfi_offset 8, -24
 1106              		.cfi_offset 14, -20
 1107 0006 06AC     		add	r4, sp, #24
 1108 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1109 000c DDF86480 		ldr	r8, [sp, #100]
 1110 0010 1A9F     		ldr	r7, [sp, #104]
 1111 0012 1B9E     		ldr	r6, [sp, #108]
 609:Src/main.c    **** 	
 610:Src/main.c    ****   // takes in only relevant data (cells 1-4, 7-10)
 611:Src/main.c    ****   // need to know how to map temp sensor to cell
 612:Src/main.c    **** 
 613:Src/main.c    ****   TxHeader.StdId = CELLVAL_ID;
 1112              		.loc 1 613 3 is_stmt 1 view .LVU353
 1113              		.loc 1 613 18 is_stmt 0 view .LVU354
 1114 0014 224B     		ldr	r3, .L59
 1115 0016 0722     		movs	r2, #7
 1116 0018 1A60     		str	r2, [r3]
 614:Src/main.c    ****   TxHeader.DLC = 6;
 1117              		.loc 1 614 3 is_stmt 1 view .LVU355
 1118              		.loc 1 614 16 is_stmt 0 view .LVU356
 1119 001a 0622     		movs	r2, #6
 1120 001c 1A61     		str	r2, [r3, #16]
 615:Src/main.c    **** 
 616:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 1121              		.loc 1 616 3 is_stmt 1 view .LVU357
 1122              	.LBB14:
 1123              		.loc 1 616 8 view .LVU358
 1124              	.LVL54:
 1125              		.loc 1 616 16 is_stmt 0 view .LVU359
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 34


 1126 001e 0025     		movs	r5, #0
 1127              		.loc 1 616 3 view .LVU360
 1128 0020 01E0     		b	.L52
 1129              	.LVL55:
 1130              	.L58:
 1131              		.loc 1 616 42 discriminator 2 view .LVU361
 1132 0022 0135     		adds	r5, r5, #1
 1133              	.LVL56:
 1134              		.loc 1 616 42 discriminator 2 view .LVU362
 1135 0024 EDB2     		uxtb	r5, r5
 1136              	.LVL57:
 1137              	.L52:
 1138              		.loc 1 616 30 discriminator 1 view .LVU363
 1139 0026 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 1140              		.loc 1 616 3 discriminator 1 view .LVU364
 1141 002a AB42     		cmp	r3, r5
 1142 002c 34D9     		bls	.L57
 1143              	.LBB15:
 617:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 1144              		.loc 1 617 18 view .LVU365
 1145 002e 0024     		movs	r4, #0
 1146              	.L54:
 1147              	.LVL58:
 1148              		.loc 1 617 32 discriminator 1 view .LVU366
 1149 0030 9DF83A30 		ldrb	r3, [sp, #58]	@ zero_extendqisi2
 1150              		.loc 1 617 5 discriminator 1 view .LVU367
 1151 0034 A342     		cmp	r3, r4
 1152 0036 F4D9     		bls	.L58
 618:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number 
 1153              		.loc 1 618 7 is_stmt 1 discriminator 3 view .LVU368
 1154              		.loc 1 618 27 is_stmt 0 discriminator 3 view .LVU369
 1155 0038 05FB03F3 		mul	r3, r5, r3
 1156 003c DBB2     		uxtb	r3, r3
 1157              		.loc 1 618 49 discriminator 3 view .LVU370
 1158 003e 2344     		add	r3, r3, r4
 1159 0040 DBB2     		uxtb	r3, r3
 1160              		.loc 1 618 53 discriminator 3 view .LVU371
 1161 0042 0133     		adds	r3, r3, #1
 1162              		.loc 1 618 23 discriminator 3 view .LVU372
 1163 0044 174A     		ldr	r2, .L59+4
 1164 0046 1370     		strb	r3, [r2]
 619:Src/main.c    ****       CELLVAL_DATA[1] = (uint8_t) cellConnection[i][j] & 0x01;
 1165              		.loc 1 619 7 is_stmt 1 discriminator 3 view .LVU373
 1166              		.loc 1 619 49 is_stmt 0 discriminator 3 view .LVU374
 1167 0048 6900     		lsls	r1, r5, #1
 1168 004a 4819     		adds	r0, r1, r5
 1169 004c 8300     		lsls	r3, r0, #2
 1170 004e 3344     		add	r3, r3, r6
 1171              		.loc 1 619 25 discriminator 3 view .LVU375
 1172 0050 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1173              		.loc 1 619 23 discriminator 3 view .LVU376
 1174 0052 5370     		strb	r3, [r2, #1]
 620:Src/main.c    ****       //CELLVAL_DATA[1] = (uint8_t) ((dcFault[i][(uint8_t) j/2] & 0x08) | (cellDischarge[i][j] & 0x
 621:Src/main.c    ****       CELLVAL_DATA[2] = (uint8_t) ((cellVoltage[i][j] >> 8) & 0xFF);
 1175              		.loc 1 621 7 is_stmt 1 discriminator 3 view .LVU377
 1176              		.loc 1 621 48 is_stmt 0 discriminator 3 view .LVU378
 1177 0054 2944     		add	r1, r1, r5
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 35


 1178 0056 CB00     		lsls	r3, r1, #3
 1179 0058 4344     		add	r3, r3, r8
 1180              		.loc 1 621 51 discriminator 3 view .LVU379
 1181 005a 33F81410 		ldrh	r1, [r3, r4, lsl #1]
 1182              		.loc 1 621 25 discriminator 3 view .LVU380
 1183 005e 090A     		lsrs	r1, r1, #8
 1184              		.loc 1 621 23 discriminator 3 view .LVU381
 1185 0060 9170     		strb	r1, [r2, #2]
 622:Src/main.c    ****       CELLVAL_DATA[3] = (uint8_t) (cellVoltage[i][j] & 0xFF);
 1186              		.loc 1 622 7 is_stmt 1 discriminator 3 view .LVU382
 1187              		.loc 1 622 25 is_stmt 0 discriminator 3 view .LVU383
 1188 0062 13F81430 		ldrb	r3, [r3, r4, lsl #1]	@ zero_extendqisi2
 1189              		.loc 1 622 23 discriminator 3 view .LVU384
 1190 0066 D370     		strb	r3, [r2, #3]
 623:Src/main.c    ****       CELLVAL_DATA[4] = (uint8_t) ((cellTemp[i][(uint8_t) j/2] > 8) & 0xFF); // figure out how temp
 1191              		.loc 1 623 7 is_stmt 1 discriminator 3 view .LVU385
 1192              		.loc 1 623 45 is_stmt 0 discriminator 3 view .LVU386
 1193 0068 07EBC501 		add	r1, r7, r5, lsl #3
 1194              		.loc 1 623 60 discriminator 3 view .LVU387
 1195 006c 6008     		lsrs	r0, r4, #1
 1196              		.loc 1 623 48 discriminator 3 view .LVU388
 1197 006e 31F81030 		ldrh	r3, [r1, r0, lsl #1]
 1198              		.loc 1 623 25 discriminator 3 view .LVU389
 1199 0072 082B     		cmp	r3, #8
 1200 0074 94BF     		ite	ls
 1201 0076 0023     		movls	r3, #0
 1202 0078 0123     		movhi	r3, #1
 1203              		.loc 1 623 23 discriminator 3 view .LVU390
 1204 007a 1371     		strb	r3, [r2, #4]
 624:Src/main.c    ****       CELLVAL_DATA[5] = (uint8_t) (cellTemp[i][(uint8_t) j/2] & 0xFF);
 1205              		.loc 1 624 7 is_stmt 1 discriminator 3 view .LVU391
 1206              		.loc 1 624 25 is_stmt 0 discriminator 3 view .LVU392
 1207 007c 11F81030 		ldrb	r3, [r1, r0, lsl #1]	@ zero_extendqisi2
 1208              		.loc 1 624 23 discriminator 3 view .LVU393
 1209 0080 5371     		strb	r3, [r2, #5]
 625:Src/main.c    **** 
 626:Src/main.c    ****       HAL_CAN_AddTxMessage(&hcan, &TxHeader, CELLVAL_DATA, &TxMailbox);
 1210              		.loc 1 626 7 is_stmt 1 discriminator 3 view .LVU394
 1211 0082 094B     		ldr	r3, .L59+8
 1212 0084 0649     		ldr	r1, .L59
 1213 0086 0948     		ldr	r0, .L59+12
 1214 0088 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1215              	.LVL59:
 627:Src/main.c    ****       HAL_Delay(10);
 1216              		.loc 1 627 7 discriminator 3 view .LVU395
 1217 008c 0A20     		movs	r0, #10
 1218 008e FFF7FEFF 		bl	HAL_Delay
 1219              	.LVL60:
 617:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number 
 1220              		.loc 1 617 51 is_stmt 0 discriminator 3 view .LVU396
 1221 0092 0134     		adds	r4, r4, #1
 1222              	.LVL61:
 617:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number 
 1223              		.loc 1 617 51 discriminator 3 view .LVU397
 1224 0094 E4B2     		uxtb	r4, r4
 1225              	.LVL62:
 617:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number 
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 36


 1226              		.loc 1 617 51 discriminator 3 view .LVU398
 1227 0096 CBE7     		b	.L54
 1228              	.LVL63:
 1229              	.L57:
 617:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number 
 1230              		.loc 1 617 51 discriminator 3 view .LVU399
 1231              	.LBE15:
 1232              	.LBE14:
 628:Src/main.c    ****     }
 629:Src/main.c    ****   }
 630:Src/main.c    **** }
 1233              		.loc 1 630 1 view .LVU400
 1234 0098 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1235              	.LCFI20:
 1236              		.cfi_restore 14
 1237              		.cfi_restore 8
 1238              		.cfi_restore 7
 1239              		.cfi_restore 6
 1240              		.cfi_restore 5
 1241              		.cfi_restore 4
 1242              		.cfi_def_cfa_offset 16
 1243              	.LVL64:
 1244              		.loc 1 630 1 view .LVU401
 1245 009c 04B0     		add	sp, sp, #16
 1246              	.LCFI21:
 1247              		.cfi_def_cfa_offset 0
 1248 009e 7047     		bx	lr
 1249              	.L60:
 1250              		.align	2
 1251              	.L59:
 1252 00a0 00000000 		.word	TxHeader
 1253 00a4 00000000 		.word	CELLVAL_DATA
 1254 00a8 00000000 		.word	TxMailbox
 1255 00ac 00000000 		.word	hcan
 1256              		.cfi_endproc
 1257              	.LFE76:
 1259              		.section	.text.main,"ax",%progbits
 1260              		.align	1
 1261              		.global	main
 1262              		.syntax unified
 1263              		.thumb
 1264              		.thumb_func
 1265              		.fpu softvfp
 1267              	main:
 1268              	.LFB66:
  98:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1269              		.loc 1 98 1 is_stmt 1 view -0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 40
 1272              		@ frame_needed = 1, uses_anonymous_args = 0
 1273 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1274              	.LCFI22:
 1275              		.cfi_def_cfa_offset 36
 1276              		.cfi_offset 4, -36
 1277              		.cfi_offset 5, -32
 1278              		.cfi_offset 6, -28
 1279              		.cfi_offset 7, -24
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 37


 1280              		.cfi_offset 8, -20
 1281              		.cfi_offset 9, -16
 1282              		.cfi_offset 10, -12
 1283              		.cfi_offset 11, -8
 1284              		.cfi_offset 14, -4
 1285 0004 A1B0     		sub	sp, sp, #132
 1286              	.LCFI23:
 1287              		.cfi_def_cfa_offset 168
 1288 0006 16AF     		add	r7, sp, #88
 1289              	.LCFI24:
 1290              		.cfi_def_cfa 7, 80
 106:Src/main.c    **** 
 1291              		.loc 1 106 3 view .LVU403
 1292 0008 FFF7FEFF 		bl	HAL_Init
 1293              	.LVL65:
 113:Src/main.c    **** 
 1294              		.loc 1 113 3 view .LVU404
 1295 000c FFF7FEFF 		bl	SystemClock_Config
 1296              	.LVL66:
 120:Src/main.c    ****   MX_ADC1_Init();
 1297              		.loc 1 120 3 view .LVU405
 1298 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1299              	.LVL67:
 121:Src/main.c    ****   MX_CAN_Init();
 1300              		.loc 1 121 3 view .LVU406
 1301 0014 FFF7FEFF 		bl	MX_ADC1_Init
 1302              	.LVL68:
 122:Src/main.c    ****   //MX_SPI1_Init();
 1303              		.loc 1 122 3 view .LVU407
 1304 0018 FFF7FEFF 		bl	MX_CAN_Init
 1305              	.LVL69:
 124:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1306              		.loc 1 124 3 view .LVU408
 1307 001c FFF7FEFF 		bl	MX_TIM2_Init
 1308              	.LVL70:
 126:Src/main.c    ****   initPECTable();
 1309              		.loc 1 126 3 view .LVU409
 1310 0020 FFF7FEFF 		bl	SPI_Init
 1311              	.LVL71:
 127:Src/main.c    ****   loadConfig(&BMSconfig); // loads configuration settings from config.c
 1312              		.loc 1 127 3 view .LVU410
 1313 0024 FFF7FEFF 		bl	initPECTable
 1314              	.LVL72:
 128:Src/main.c    ****   writeConfigAll(BMSconfig);
 1315              		.loc 1 128 3 view .LVU411
 1316 0028 6F4E     		ldr	r6, .L68
 1317 002a 3046     		mov	r0, r6
 1318 002c FFF7FEFF 		bl	loadConfig
 1319              	.LVL73:
 129:Src/main.c    **** 
 1320              		.loc 1 129 3 view .LVU412
 1321 0030 D6F80090 		ldr	r9, [r6]	@ unaligned
 1322 0034 D6F80480 		ldr	r8, [r6, #4]	@ unaligned
 1323 0038 D6F808E0 		ldr	lr, [r6, #8]	@ unaligned
 1324 003c D6F80CC0 		ldr	ip, [r6, #12]	@ unaligned
 1325 0040 06F11005 		add	r5, r6, #16
 1326 0044 6C46     		mov	r4, sp
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 38


 1327 0046 4036     		adds	r6, r6, #64
 1328              	.L62:
 1329 0048 A246     		mov	r10, r4
 1330 004a 2868     		ldr	r0, [r5]	@ unaligned
 1331 004c 6968     		ldr	r1, [r5, #4]	@ unaligned
 1332 004e AA68     		ldr	r2, [r5, #8]	@ unaligned
 1333 0050 EB68     		ldr	r3, [r5, #12]	@ unaligned
 1334 0052 AAE80F00 		stmia	r10!, {r0, r1, r2, r3}
 1335 0056 1035     		adds	r5, r5, #16
 1336 0058 5446     		mov	r4, r10
 1337 005a B542     		cmp	r5, r6
 1338 005c F4D1     		bne	.L62
 1339 005e 5346     		mov	r3, r10
 1340 0060 2868     		ldr	r0, [r5]	@ unaligned
 1341 0062 6968     		ldr	r1, [r5, #4]	@ unaligned
 1342 0064 03C3     		stmia	r3!, {r0, r1}
 1343 0066 2A89     		ldrh	r2, [r5, #8]	@ unaligned
 1344 0068 1A80     		strh	r2, [r3]	@ unaligned
 1345 006a 4846     		mov	r0, r9
 1346 006c 4146     		mov	r1, r8
 1347 006e 7246     		mov	r2, lr
 1348 0070 6346     		mov	r3, ip
 1349 0072 FFF7FEFF 		bl	writeConfigAll
 1350              	.LVL74:
 131:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1351              		.loc 1 131 3 view .LVU413
 131:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1352              		.loc 1 131 49 is_stmt 0 view .LVU414
 1353 0076 5C48     		ldr	r0, .L68
 1354 0078 90F82120 		ldrb	r2, [r0, #33]	@ zero_extendqisi2
 131:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1355              		.loc 1 131 29 view .LVU415
 1356 007c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1357              	.LVL75:
 131:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1358              		.loc 1 131 12 view .LVU416
 1359 007e 03FB02F2 		mul	r2, r3, r2
 1360              	.LVL76:
 131:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1361              		.loc 1 131 12 view .LVU417
 1362 0082 5100     		lsls	r1, r2, #1
 1363 0084 0731     		adds	r1, r1, #7
 1364 0086 C908     		lsrs	r1, r1, #3
 1365 0088 6C46     		mov	r4, sp
 1366 008a A4EBC101 		sub	r1, r4, r1, lsl #3
 1367 008e 8D46     		mov	sp, r1
 1368 0090 0DF15809 		add	r9, sp, #88
 1369              	.LVL77:
 132:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 1370              		.loc 1 132 3 is_stmt 1 view .LVU418
 132:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 1371              		.loc 1 132 46 is_stmt 0 view .LVU419
 1372 0094 90F82310 		ldrb	r1, [r0, #35]	@ zero_extendqisi2
 1373              	.LVL78:
 132:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 1374              		.loc 1 132 12 view .LVU420
 1375 0098 03FB01F1 		mul	r1, r3, r1
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 39


 1376              	.LVL79:
 132:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 1377              		.loc 1 132 12 view .LVU421
 1378 009c 4C00     		lsls	r4, r1, #1
 1379 009e 0734     		adds	r4, r4, #7
 1380 00a0 E408     		lsrs	r4, r4, #3
 1381 00a2 6D46     		mov	r5, sp
 1382 00a4 A5EBC404 		sub	r4, r5, r4, lsl #3
 1383 00a8 A546     		mov	sp, r4
 1384 00aa 16AC     		add	r4, sp, #88
 1385 00ac FC60     		str	r4, [r7, #12]
 1386              	.LVL80:
 133:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1387              		.loc 1 133 3 is_stmt 1 view .LVU422
 133:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1388              		.loc 1 133 8 is_stmt 0 view .LVU423
 1389 00ae 0731     		adds	r1, r1, #7
 1390 00b0 C908     		lsrs	r1, r1, #3
 1391 00b2 6C46     		mov	r4, sp
 1392              	.LVL81:
 133:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1393              		.loc 1 133 8 view .LVU424
 1394 00b4 A4EBC101 		sub	r1, r4, r1, lsl #3
 1395 00b8 8D46     		mov	sp, r1
 1396 00ba 16A9     		add	r1, sp, #88
 1397 00bc B960     		str	r1, [r7, #8]
 1398              	.LVL82:
 134:Src/main.c    ****   bool connection[BMSconfig.numOfICs][BMSconfig.numOfCellInputs];         //12, 12
 1399              		.loc 1 134 3 is_stmt 1 view .LVU425
 135:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8 
 1400              		.loc 1 135 3 view .LVU426
 135:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8 
 1401              		.loc 1 135 8 is_stmt 0 view .LVU427
 1402 00be 0732     		adds	r2, r2, #7
 1403 00c0 D208     		lsrs	r2, r2, #3
 1404 00c2 6946     		mov	r1, sp
 1405              	.LVL83:
 135:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8 
 1406              		.loc 1 135 8 view .LVU428
 1407 00c4 A1EBC202 		sub	r2, r1, r2, lsl #3
 1408 00c8 9546     		mov	sp, r2
 1409 00ca 0DF1580B 		add	fp, sp, #88
 1410              	.LVL84:
 136:Src/main.c    **** 
 1411              		.loc 1 136 3 is_stmt 1 view .LVU429
 136:Src/main.c    **** 
 1412              		.loc 1 136 47 is_stmt 0 view .LVU430
 1413 00ce 90F82220 		ldrb	r2, [r0, #34]	@ zero_extendqisi2
 1414              	.LVL85:
 136:Src/main.c    **** 
 1415              		.loc 1 136 8 view .LVU431
 1416 00d2 03FB02F3 		mul	r3, r3, r2
 1417              	.LVL86:
 136:Src/main.c    **** 
 1418              		.loc 1 136 8 view .LVU432
 1419 00d6 0733     		adds	r3, r3, #7
 1420 00d8 DB08     		lsrs	r3, r3, #3
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 40


 1421 00da 6A46     		mov	r2, sp
 1422              	.LVL87:
 136:Src/main.c    **** 
 1423              		.loc 1 136 8 view .LVU433
 1424 00dc A2EBC303 		sub	r3, r2, r3, lsl #3
 1425 00e0 9D46     		mov	sp, r3
 1426 00e2 16AB     		add	r3, sp, #88
 1427 00e4 7B60     		str	r3, [r7, #4]
 1428              	.LVL88:
 138:Src/main.c    ****   bool treturn = false;
 1429              		.loc 1 138 3 is_stmt 1 view .LVU434
 139:Src/main.c    ****   bool disconnectFault = false;
 1430              		.loc 1 139 3 view .LVU435
 140:Src/main.c    ****   uint8_t disconnectedCell;
 1431              		.loc 1 140 3 view .LVU436
 136:Src/main.c    **** 
 1432              		.loc 1 136 8 is_stmt 0 view .LVU437
 1433 00e6 4C46     		mov	r4, r9
 1434 00e8 03E0     		b	.L66
 1435              	.LVL89:
 1436              	.L65:
 263:Src/main.c    **** 
 1437              		.loc 1 263 5 is_stmt 1 view .LVU438
 1438 00ea 4FF4FA70 		mov	r0, #500
 1439 00ee FFF7FEFF 		bl	HAL_Delay
 1440              	.LVL90:
 1441              	.L66:
 141:Src/main.c    ****   uint8_t chargerate;
 1442              		.loc 1 141 3 view .LVU439
 142:Src/main.c    **** 
 1443              		.loc 1 142 3 view .LVU440
 144:Src/main.c    ****   bool faults[5];
 1444              		.loc 1 144 3 view .LVU441
 145:Src/main.c    **** 
 1445              		.loc 1 145 3 view .LVU442
 147:Src/main.c    ****   bool CHARGE_EN;
 1446              		.loc 1 147 3 view .LVU443
 148:Src/main.c    **** 
 1447              		.loc 1 148 3 view .LVU444
 150:Src/main.c    ****   uint8_t testData[2];
 1448              		.loc 1 150 3 view .LVU445
 151:Src/main.c    ****   uint16_t testTemp[4];
 1449              		.loc 1 151 3 view .LVU446
 152:Src/main.c    ****   bool testDC[4];
 1450              		.loc 1 152 3 view .LVU447
 153:Src/main.c    ****   bool testOT[4];
 1451              		.loc 1 153 3 view .LVU448
 154:Src/main.c    ****   bool testConnection[12];
 1452              		.loc 1 154 3 view .LVU449
 155:Src/main.c    ****   /* USER CODE END 2 */
 1453              		.loc 1 155 3 view .LVU450
 160:Src/main.c    ****   {
 1454              		.loc 1 160 3 view .LVU451
 192:Src/main.c    **** 
 1455              		.loc 1 192 5 view .LVU452
 192:Src/main.c    **** 
 1456              		.loc 1 192 15 is_stmt 0 view .LVU453
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 41


 1457 00f2 3D4B     		ldr	r3, .L68
 1458 00f4 0F94     		str	r4, [sp, #60]
 1459 00f6 D3F800A0 		ldr	r10, [r3]	@ unaligned
 1460 00fa D3F80490 		ldr	r9, [r3, #4]	@ unaligned
 1461 00fe D3F80880 		ldr	r8, [r3, #8]	@ unaligned
 1462 0102 DA68     		ldr	r2, [r3, #12]	@ unaligned
 1463 0104 7A61     		str	r2, [r7, #20]
 1464 0106 03F11006 		add	r6, r3, #16
 1465 010a 6D46     		mov	r5, sp
 1466 010c 03F1400C 		add	ip, r3, #64
 1467              	.L63:
 1468 0110 AE46     		mov	lr, r5
 1469 0112 3068     		ldr	r0, [r6]	@ unaligned
 1470 0114 7168     		ldr	r1, [r6, #4]	@ unaligned
 1471 0116 B268     		ldr	r2, [r6, #8]	@ unaligned
 1472 0118 F368     		ldr	r3, [r6, #12]	@ unaligned
 1473 011a AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1474 011e 1036     		adds	r6, r6, #16
 1475 0120 7546     		mov	r5, lr
 1476 0122 6645     		cmp	r6, ip
 1477 0124 F4D1     		bne	.L63
 1478 0126 3068     		ldr	r0, [r6]	@ unaligned
 1479 0128 7168     		ldr	r1, [r6, #4]	@ unaligned
 1480 012a 03C5     		stmia	r5!, {r0, r1}
 1481 012c 3389     		ldrh	r3, [r6, #8]	@ unaligned
 1482 012e 2B80     		strh	r3, [r5]	@ unaligned
 1483 0130 5046     		mov	r0, r10
 1484 0132 4946     		mov	r1, r9
 1485 0134 4246     		mov	r2, r8
 1486 0136 7B69     		ldr	r3, [r7, #20]
 1487 0138 FFF7FEFF 		bl	readAllCellVoltages
 1488              	.LVL91:
 1489 013c 8046     		mov	r8, r0
 1490              	.LVL92:
 194:Src/main.c    ****     voltage[0][5] = voltage[0][7];
 1491              		.loc 1 194 5 is_stmt 1 view .LVU454
 194:Src/main.c    ****     voltage[0][5] = voltage[0][7];
 1492              		.loc 1 194 31 is_stmt 0 view .LVU455
 1493 013e A389     		ldrh	r3, [r4, #12]
 194:Src/main.c    ****     voltage[0][5] = voltage[0][7];
 1494              		.loc 1 194 19 view .LVU456
 1495 0140 2381     		strh	r3, [r4, #8]	@ movhi
 195:Src/main.c    ****     voltage[0][6] = voltage[0][8];
 1496              		.loc 1 195 5 is_stmt 1 view .LVU457
 195:Src/main.c    ****     voltage[0][6] = voltage[0][8];
 1497              		.loc 1 195 31 is_stmt 0 view .LVU458
 1498 0142 E389     		ldrh	r3, [r4, #14]
 195:Src/main.c    ****     voltage[0][6] = voltage[0][8];
 1499              		.loc 1 195 19 view .LVU459
 1500 0144 6381     		strh	r3, [r4, #10]	@ movhi
 196:Src/main.c    ****     voltage[0][7] = voltage[0][9];
 1501              		.loc 1 196 5 is_stmt 1 view .LVU460
 196:Src/main.c    ****     voltage[0][7] = voltage[0][9];
 1502              		.loc 1 196 31 is_stmt 0 view .LVU461
 1503 0146 238A     		ldrh	r3, [r4, #16]
 196:Src/main.c    ****     voltage[0][7] = voltage[0][9];
 1504              		.loc 1 196 19 view .LVU462
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 42


 1505 0148 A381     		strh	r3, [r4, #12]	@ movhi
 197:Src/main.c    **** 
 1506              		.loc 1 197 5 is_stmt 1 view .LVU463
 197:Src/main.c    **** 
 1507              		.loc 1 197 31 is_stmt 0 view .LVU464
 1508 014a 638A     		ldrh	r3, [r4, #18]
 197:Src/main.c    **** 
 1509              		.loc 1 197 19 view .LVU465
 1510 014c E381     		strh	r3, [r4, #14]	@ movhi
 199:Src/main.c    **** 
 1511              		.loc 1 199 5 is_stmt 1 view .LVU466
 1512 014e 07F11C01 		add	r1, r7, #28
 1513 0152 2046     		mov	r0, r4
 1514 0154 FFF7FEFF 		bl	checkCellConnection
 1515              	.LVL93:
 201:Src/main.c    ****     connection[0][5] = connection[0][7];
 1516              		.loc 1 201 5 view .LVU467
 201:Src/main.c    ****     connection[0][5] = connection[0][7];
 1517              		.loc 1 201 37 is_stmt 0 view .LVU468
 1518 0158 9BF80630 		ldrb	r3, [fp, #6]	@ zero_extendqisi2
 201:Src/main.c    ****     connection[0][5] = connection[0][7];
 1519              		.loc 1 201 22 view .LVU469
 1520 015c 8BF80430 		strb	r3, [fp, #4]
 202:Src/main.c    ****     connection[0][6] = connection[0][8];
 1521              		.loc 1 202 5 is_stmt 1 view .LVU470
 202:Src/main.c    ****     connection[0][6] = connection[0][8];
 1522              		.loc 1 202 37 is_stmt 0 view .LVU471
 1523 0160 9BF80730 		ldrb	r3, [fp, #7]	@ zero_extendqisi2
 202:Src/main.c    ****     connection[0][6] = connection[0][8];
 1524              		.loc 1 202 22 view .LVU472
 1525 0164 8BF80530 		strb	r3, [fp, #5]
 203:Src/main.c    ****     connection[0][7] = connection[0][9];
 1526              		.loc 1 203 5 is_stmt 1 view .LVU473
 203:Src/main.c    ****     connection[0][7] = connection[0][9];
 1527              		.loc 1 203 37 is_stmt 0 view .LVU474
 1528 0168 9BF80830 		ldrb	r3, [fp, #8]	@ zero_extendqisi2
 203:Src/main.c    ****     connection[0][7] = connection[0][9];
 1529              		.loc 1 203 22 view .LVU475
 1530 016c 8BF80630 		strb	r3, [fp, #6]
 204:Src/main.c    **** 
 1531              		.loc 1 204 5 is_stmt 1 view .LVU476
 204:Src/main.c    **** 
 1532              		.loc 1 204 37 is_stmt 0 view .LVU477
 1533 0170 9BF80930 		ldrb	r3, [fp, #9]	@ zero_extendqisi2
 204:Src/main.c    **** 
 1534              		.loc 1 204 22 view .LVU478
 1535 0174 8BF80730 		strb	r3, [fp, #7]
 249:Src/main.c    **** 
 1536              		.loc 1 249 5 is_stmt 1 view .LVU479
 1537 0178 1B4B     		ldr	r3, .L68
 1538 017a CDF85080 		str	r8, [sp, #80]
 1539 017e BA68     		ldr	r2, [r7, #8]
 1540 0180 1392     		str	r2, [sp, #76]
 1541 0182 7A68     		ldr	r2, [r7, #4]
 1542 0184 1292     		str	r2, [sp, #72]
 1543 0186 CDF844B0 		str	fp, [sp, #68]
 1544 018a FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 43


 1545 018c 1092     		str	r2, [sp, #64]
 1546 018e 0F94     		str	r4, [sp, #60]
 1547 0190 D3F800A0 		ldr	r10, [r3]	@ unaligned
 1548 0194 D3F80490 		ldr	r9, [r3, #4]	@ unaligned
 1549 0198 9A68     		ldr	r2, [r3, #8]	@ unaligned
 1550 019a 7A61     		str	r2, [r7, #20]
 1551 019c DA68     		ldr	r2, [r3, #12]	@ unaligned
 1552 019e 3A61     		str	r2, [r7, #16]
 1553 01a0 03F11006 		add	r6, r3, #16
 1554 01a4 6D46     		mov	r5, sp
 1555 01a6 03F1400C 		add	ip, r3, #64
 1556              	.L64:
 1557 01aa AE46     		mov	lr, r5
 1558 01ac 3068     		ldr	r0, [r6]	@ unaligned
 1559 01ae 7168     		ldr	r1, [r6, #4]	@ unaligned
 1560 01b0 B268     		ldr	r2, [r6, #8]	@ unaligned
 1561 01b2 F368     		ldr	r3, [r6, #12]	@ unaligned
 1562 01b4 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1563 01b8 1036     		adds	r6, r6, #16
 1564 01ba 7546     		mov	r5, lr
 1565 01bc 6645     		cmp	r6, ip
 1566 01be F4D1     		bne	.L64
 1567 01c0 3068     		ldr	r0, [r6]	@ unaligned
 1568 01c2 7168     		ldr	r1, [r6, #4]	@ unaligned
 1569 01c4 03C5     		stmia	r5!, {r0, r1}
 1570 01c6 3389     		ldrh	r3, [r6, #8]	@ unaligned
 1571 01c8 2B80     		strh	r3, [r5]	@ unaligned
 1572 01ca 5046     		mov	r0, r10
 1573 01cc 4946     		mov	r1, r9
 1574 01ce 7A69     		ldr	r2, [r7, #20]
 1575 01d0 3B69     		ldr	r3, [r7, #16]
 1576 01d2 FFF7FEFF 		bl	CELLVAL_message
 1577              	.LVL94:
 251:Src/main.c    **** 
 1578              		.loc 1 251 5 view .LVU480
 251:Src/main.c    **** 
 1579              		.loc 1 251 8 is_stmt 0 view .LVU481
 1580 01d6 B8F1000F 		cmp	r8, #0
 1581 01da 86D0     		beq	.L65
 251:Src/main.c    **** 
 1582              		.loc 1 251 23 is_stmt 1 discriminator 1 view .LVU482
 1583 01dc 4FF40051 		mov	r1, #8192
 1584 01e0 0248     		ldr	r0, .L68+4
 1585 01e2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1586              	.LVL95:
 1587 01e6 80E7     		b	.L65
 1588              	.L69:
 1589              		.align	2
 1590              	.L68:
 1591 01e8 00000000 		.word	BMSconfig
 1592 01ec 00100140 		.word	1073811456
 1593              		.cfi_endproc
 1594              	.LFE66:
 1596              		.section	.text.BMSSTAT_message,"ax",%progbits
 1597              		.align	1
 1598              		.global	BMSSTAT_message
 1599              		.syntax unified
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 44


 1600              		.thumb
 1601              		.thumb_func
 1602              		.fpu softvfp
 1604              	BMSSTAT_message:
 1605              	.LVL96:
 1606              	.LFB77:
 631:Src/main.c    **** 
 632:Src/main.c    **** void BMSSTAT_message(BMSconfigStructTypedef cfg, uint8_t cellNumber[5], bool faultType[5]) {
 1607              		.loc 1 632 92 view -0
 1608              		.cfi_startproc
 1609              		@ args = 84, pretend = 16, frame = 0
 1610              		@ frame_needed = 0, uses_anonymous_args = 0
 1611              		.loc 1 632 92 is_stmt 0 view .LVU484
 1612 0000 84B0     		sub	sp, sp, #16
 1613              	.LCFI25:
 1614              		.cfi_def_cfa_offset 16
 1615 0002 10B5     		push	{r4, lr}
 1616              	.LCFI26:
 1617              		.cfi_def_cfa_offset 24
 1618              		.cfi_offset 4, -24
 1619              		.cfi_offset 14, -20
 1620 0004 02AC     		add	r4, sp, #8
 1621 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1622 000a 1598     		ldr	r0, [sp, #84]
 1623 000c 169A     		ldr	r2, [sp, #88]
 633:Src/main.c    **** 
 634:Src/main.c    ****   TxHeader.StdId = BMSSTAT_ID;
 1624              		.loc 1 634 3 is_stmt 1 view .LVU485
 1625              		.loc 1 634 18 is_stmt 0 view .LVU486
 1626 000e 1749     		ldr	r1, .L72
 1627 0010 0823     		movs	r3, #8
 1628 0012 0B60     		str	r3, [r1]
 635:Src/main.c    ****   TxHeader.DLC = 6;
 1629              		.loc 1 635 3 is_stmt 1 view .LVU487
 1630              		.loc 1 635 16 is_stmt 0 view .LVU488
 1631 0014 0623     		movs	r3, #6
 1632 0016 0B61     		str	r3, [r1, #16]
 636:Src/main.c    **** 
 637:Src/main.c    ****   BMSSTAT_DATA[0] = (uint8_t) ((faultType[0] & 0x10) | (faultType[1] & 0x08) | (faultType[2] & 0x04
 1633              		.loc 1 637 3 is_stmt 1 view .LVU489
 1634              		.loc 1 637 42 is_stmt 0 view .LVU490
 1635 0018 92F90040 		ldrsb	r4, [r2]
 1636              		.loc 1 637 46 view .LVU491
 1637 001c 04F01003 		and	r3, r4, #16
 1638              		.loc 1 637 66 view .LVU492
 1639 0020 92F90140 		ldrsb	r4, [r2, #1]
 1640              		.loc 1 637 70 view .LVU493
 1641 0024 04F00804 		and	r4, r4, #8
 1642              		.loc 1 637 54 view .LVU494
 1643 0028 1C43     		orrs	r4, r4, r3
 1644              		.loc 1 637 90 view .LVU495
 1645 002a 92F90230 		ldrsb	r3, [r2, #2]
 1646              		.loc 1 637 94 view .LVU496
 1647 002e 03F00403 		and	r3, r3, #4
 1648              		.loc 1 637 78 view .LVU497
 1649 0032 1C43     		orrs	r4, r4, r3
 1650              		.loc 1 637 114 view .LVU498
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 45


 1651 0034 92F90330 		ldrsb	r3, [r2, #3]
 1652              		.loc 1 637 118 view .LVU499
 1653 0038 03F00203 		and	r3, r3, #2
 1654              		.loc 1 637 102 view .LVU500
 1655 003c 2343     		orrs	r3, r3, r4
 1656              		.loc 1 637 138 view .LVU501
 1657 003e 92F90420 		ldrsb	r2, [r2, #4]
 1658              		.loc 1 637 126 view .LVU502
 1659 0042 1343     		orrs	r3, r3, r2
 1660              		.loc 1 637 19 view .LVU503
 1661 0044 0A4A     		ldr	r2, .L72+4
 1662 0046 1370     		strb	r3, [r2]
 638:Src/main.c    ****   BMSSTAT_DATA[1] = cellNumber[0]; // OV cell number
 1663              		.loc 1 638 3 is_stmt 1 view .LVU504
 1664              		.loc 1 638 31 is_stmt 0 view .LVU505
 1665 0048 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1666              		.loc 1 638 19 view .LVU506
 1667 004a 5370     		strb	r3, [r2, #1]
 639:Src/main.c    ****   BMSSTAT_DATA[2] = cellNumber[1]; // UV cell number
 1668              		.loc 1 639 3 is_stmt 1 view .LVU507
 1669              		.loc 1 639 19 is_stmt 0 view .LVU508
 1670 004c 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1671 004e 9370     		strb	r3, [r2, #2]
 640:Src/main.c    ****   BMSSTAT_DATA[3] = cellNumber[2]; // OT cell number
 1672              		.loc 1 640 3 is_stmt 1 view .LVU509
 1673              		.loc 1 640 19 is_stmt 0 view .LVU510
 1674 0050 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 1675 0052 D370     		strb	r3, [r2, #3]
 641:Src/main.c    ****   BMSSTAT_DATA[4] = cellNumber[3]; // disconnected cell cell number
 1676              		.loc 1 641 3 is_stmt 1 view .LVU511
 1677              		.loc 1 641 19 is_stmt 0 view .LVU512
 1678 0054 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1679 0056 1371     		strb	r3, [r2, #4]
 642:Src/main.c    ****   BMSSTAT_DATA[5] = cellNumber[4]; // disconnected temp sensor cell number
 1680              		.loc 1 642 3 is_stmt 1 view .LVU513
 1681              		.loc 1 642 19 is_stmt 0 view .LVU514
 1682 0058 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1683 005a 5371     		strb	r3, [r2, #5]
 643:Src/main.c    **** 
 644:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, BMSSTAT_DATA, &TxMailbox);
 1684              		.loc 1 644 3 is_stmt 1 view .LVU515
 1685 005c 054B     		ldr	r3, .L72+8
 1686 005e 0648     		ldr	r0, .L72+12
 1687 0060 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1688              	.LVL97:
 645:Src/main.c    **** }
 1689              		.loc 1 645 1 is_stmt 0 view .LVU516
 1690 0064 BDE81040 		pop	{r4, lr}
 1691              	.LCFI27:
 1692              		.cfi_restore 14
 1693              		.cfi_restore 4
 1694              		.cfi_def_cfa_offset 16
 1695 0068 04B0     		add	sp, sp, #16
 1696              	.LCFI28:
 1697              		.cfi_def_cfa_offset 0
 1698 006a 7047     		bx	lr
 1699              	.L73:
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 46


 1700              		.align	2
 1701              	.L72:
 1702 006c 00000000 		.word	TxHeader
 1703 0070 00000000 		.word	BMSSTAT_DATA
 1704 0074 00000000 		.word	TxMailbox
 1705 0078 00000000 		.word	hcan
 1706              		.cfi_endproc
 1707              	.LFE77:
 1709              		.section	.text.Error_Handler,"ax",%progbits
 1710              		.align	1
 1711              		.global	Error_Handler
 1712              		.syntax unified
 1713              		.thumb
 1714              		.thumb_func
 1715              		.fpu softvfp
 1717              	Error_Handler:
 1718              	.LFB78:
 646:Src/main.c    **** 
 647:Src/main.c    **** //void BMSVINF_message()
 648:Src/main.c    **** 
 649:Src/main.c    **** //void BMSTINF_message()
 650:Src/main.c    **** 
 651:Src/main.c    **** /* USER CODE END 4 */
 652:Src/main.c    **** 
 653:Src/main.c    **** /**
 654:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 655:Src/main.c    ****   * @retval None
 656:Src/main.c    ****   */
 657:Src/main.c    **** void Error_Handler(void)
 658:Src/main.c    **** {
 1719              		.loc 1 658 1 is_stmt 1 view -0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 0
 1722              		@ frame_needed = 0, uses_anonymous_args = 0
 1723              		@ link register save eliminated.
 659:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 660:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 661:Src/main.c    **** 
 662:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 663:Src/main.c    **** }
 1724              		.loc 1 663 1 view .LVU518
 1725 0000 7047     		bx	lr
 1726              		.cfi_endproc
 1727              	.LFE78:
 1729              		.comm	BMSTINF_DATA,8,4
 1730              		.comm	BMSVINF_DATA,8,4
 1731              		.comm	BMSSTAT_DATA,6,4
 1732              		.comm	CELLVAL_DATA,6,4
 1733              		.comm	TxMailbox,4,4
 1734              		.comm	RxData,8,4
 1735              		.comm	TxData,8,4
 1736              		.comm	RxHeader,28,4
 1737              		.comm	TxHeader,24,4
 1738              		.comm	BMSconfig,74,4
 1739              		.comm	CommandCode,2,2
 1740              		.comm	htim2,64,4
 1741              		.comm	hspi1,88,4
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 47


 1742              		.comm	hcan,40,4
 1743              		.comm	hadc1,48,4
 1744              		.text
 1745              	.Letext0:
 1746              		.file 2 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 1747              		.file 3 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 1748              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1749              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1750              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1751              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1752              		.file 8 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 1753              		.file 9 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 1754              		.file 10 "c:\\arm-gcc\\8-2018-q4-major\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 1755              		.file 11 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 1756              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1757              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1758              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1759              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1760              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1761              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 1762              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1763              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1764              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1765              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1766              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1767              		.file 23 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\stdlib.h"
 1768              		.file 24 "Inc/BMSconfig.h"
 1769              		.file 25 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\math.h"
 1770              		.file 26 "Inc/LTC6811.h"
 1771              		.file 27 "Inc/SPI.h"
 1772              		.file 28 "<built-in>"
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 48


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\cygwin64\tmp\ccCgeivs.s:16     .text.MX_GPIO_Init:00000000 $t
C:\cygwin64\tmp\ccCgeivs.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\cygwin64\tmp\ccCgeivs.s:208    .text.MX_GPIO_Init:000000e0 $d
C:\cygwin64\tmp\ccCgeivs.s:216    .text.MX_ADC1_Init:00000000 $t
C:\cygwin64\tmp\ccCgeivs.s:222    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\cygwin64\tmp\ccCgeivs.s:299    .text.MX_ADC1_Init:00000040 $d
                            *COM*:00000030 hadc1
C:\cygwin64\tmp\ccCgeivs.s:305    .text.MX_CAN_Init:00000000 $t
C:\cygwin64\tmp\ccCgeivs.s:311    .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\cygwin64\tmp\ccCgeivs.s:402    .text.MX_CAN_Init:00000050 $d
                            *COM*:00000028 hcan
                            *COM*:00000018 TxHeader
C:\cygwin64\tmp\ccCgeivs.s:409    .text.MX_TIM2_Init:00000000 $t
C:\cygwin64\tmp\ccCgeivs.s:415    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\cygwin64\tmp\ccCgeivs.s:497    .text.MX_TIM2_Init:00000048 $d
                            *COM*:00000040 htim2
C:\cygwin64\tmp\ccCgeivs.s:502    .text.SystemClock_Config:00000000 $t
C:\cygwin64\tmp\ccCgeivs.s:509    .text.SystemClock_Config:00000000 SystemClock_Config
C:\cygwin64\tmp\ccCgeivs.s:606    .text.VOLTAGE_sort:00000000 $t
C:\cygwin64\tmp\ccCgeivs.s:613    .text.VOLTAGE_sort:00000000 VOLTAGE_sort
C:\cygwin64\tmp\ccCgeivs.s:672    .text.CONNECTION_sort:00000000 $t
C:\cygwin64\tmp\ccCgeivs.s:679    .text.CONNECTION_sort:00000000 CONNECTION_sort
C:\cygwin64\tmp\ccCgeivs.s:738    .text.FAULT_check:00000000 $t
C:\cygwin64\tmp\ccCgeivs.s:745    .text.FAULT_check:00000000 FAULT_check
C:\cygwin64\tmp\ccCgeivs.s:1075   .text.FAULT_check:0000014c $d
C:\cygwin64\tmp\ccCgeivs.s:1080   .text.CELLVAL_message:00000000 $t
C:\cygwin64\tmp\ccCgeivs.s:1087   .text.CELLVAL_message:00000000 CELLVAL_message
C:\cygwin64\tmp\ccCgeivs.s:1252   .text.CELLVAL_message:000000a0 $d
                            *COM*:00000006 CELLVAL_DATA
                            *COM*:00000004 TxMailbox
C:\cygwin64\tmp\ccCgeivs.s:1260   .text.main:00000000 $t
C:\cygwin64\tmp\ccCgeivs.s:1267   .text.main:00000000 main
C:\cygwin64\tmp\ccCgeivs.s:1591   .text.main:000001e8 $d
                            *COM*:0000004a BMSconfig
C:\cygwin64\tmp\ccCgeivs.s:1597   .text.BMSSTAT_message:00000000 $t
C:\cygwin64\tmp\ccCgeivs.s:1604   .text.BMSSTAT_message:00000000 BMSSTAT_message
C:\cygwin64\tmp\ccCgeivs.s:1702   .text.BMSSTAT_message:0000006c $d
                            *COM*:00000006 BMSSTAT_DATA
C:\cygwin64\tmp\ccCgeivs.s:1710   .text.Error_Handler:00000000 $t
C:\cygwin64\tmp\ccCgeivs.s:1717   .text.Error_Handler:00000000 Error_Handler
                            *COM*:00000008 BMSTINF_DATA
                            *COM*:00000008 BMSVINF_DATA
                            *COM*:00000008 RxData
                            *COM*:00000008 TxData
                            *COM*:0000001c RxHeader
                            *COM*:00000002 CommandCode
                            *COM*:00000058 hspi1

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
HAL_CAN_Start
ARM GAS  C:\cygwin64\tmp\ccCgeivs.s 			page 49


HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_CAN_AddTxMessage
HAL_Delay
HAL_Init
SPI_Init
initPECTable
loadConfig
writeConfigAll
readAllCellVoltages
checkCellConnection
HAL_GPIO_TogglePin
