ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB72:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "LTC6811.h"
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 2


  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** #define CELLVAL_ID      0x007
  37:Src/main.c    **** #define BMSSTAT_ID      0x008
  38:Src/main.c    **** #define BMSVINF_ID      0x009
  39:Src/main.c    **** #define BMSTINF_ID      0x00A
  40:Src/main.c    **** #define PACKSTAT_ID     0x00B
  41:Src/main.c    **** #define CHARGER_ID      0x1806E5F4
  42:Src/main.c    **** /* USER CODE END PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** ADC_HandleTypeDef hadc1;
  51:Src/main.c    **** 
  52:Src/main.c    **** CAN_HandleTypeDef hcan;
  53:Src/main.c    **** 
  54:Src/main.c    **** SPI_HandleTypeDef hspi1;
  55:Src/main.c    **** 
  56:Src/main.c    **** TIM_HandleTypeDef htim2;
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PV */
  59:Src/main.c    **** CommandCodeTypedef      CommandCode;
  60:Src/main.c    **** BMSconfigStructTypedef  BMSconfig;
  61:Src/main.c    **** 
  62:Src/main.c    **** CAN_TxHeaderTypeDef     TxHeader;
  63:Src/main.c    **** CAN_RxHeaderTypeDef     RxHeader;
  64:Src/main.c    **** uint8_t                 TxData[8];
  65:Src/main.c    **** uint8_t                 RxData[8];
  66:Src/main.c    **** uint32_t                TxMailbox;
  67:Src/main.c    **** 
  68:Src/main.c    **** CAN_TxHeaderTypeDef     ChargerTxHeader;
  69:Src/main.c    **** uint8_t                 ChargerTxData[8];
  70:Src/main.c    **** 
  71:Src/main.c    **** uint8_t                 CELLVAL_DATA[6];
  72:Src/main.c    **** uint8_t                 BMSSTAT_DATA[6];
  73:Src/main.c    **** 
  74:Src/main.c    **** uint16_t                minimum;
  75:Src/main.c    **** uint32_t                sumOfCells;
  76:Src/main.c    **** uint8_t                 chargeRate = 2;
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE END PV */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  81:Src/main.c    **** void SystemClock_Config(void);
  82:Src/main.c    **** static void MX_GPIO_Init(void);
  83:Src/main.c    **** static void MX_ADC1_Init(void);
  84:Src/main.c    **** static void MX_CAN_Init(void);
  85:Src/main.c    **** static void MX_SPI1_Init(void);
  86:Src/main.c    **** static void MX_TIM2_Init(void);
  87:Src/main.c    **** /* USER CODE BEGIN PFP */
  88:Src/main.c    **** bool FAULT_check(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6], uint8_t bmsStatus[6]);
  89:Src/main.c    **** void setDischarge(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6], bool cellDischarge[12][8], bo
  90:Src/main.c    **** void checkDischarge(BMSconfigStructTypedef cfg, bool fullDischarge[12][8], uint8_t bmsData[96][6]);
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 3


  91:Src/main.c    **** uint16_t balancingThreshold(BMSconfigStructTypedef cfg);
  92:Src/main.c    **** void setChargerTxData(BMSconfigStructTypedef cfg);
  93:Src/main.c    **** void CELLVAL_message(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]);
  94:Src/main.c    **** void BMSVINF_message(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]);
  95:Src/main.c    **** void BMSTINF_message(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]);
  96:Src/main.c    **** void BMSSTAT_message(BMSconfigStructTypedef cfg, uint8_t bmsStatus[6]);
  97:Src/main.c    **** void PACKSTAT_message(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]);
  98:Src/main.c    **** /* USER CODE END PFP */
  99:Src/main.c    **** 
 100:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 101:Src/main.c    **** /* USER CODE BEGIN 0 */
 102:Src/main.c    **** 
 103:Src/main.c    **** /* USER CODE END 0 */
 104:Src/main.c    **** 
 105:Src/main.c    **** /**
 106:Src/main.c    ****   * @brief  The application entry point.
 107:Src/main.c    ****   * @retval int
 108:Src/main.c    ****   */
 109:Src/main.c    **** int main(void)
 110:Src/main.c    **** {
 111:Src/main.c    ****   /* USER CODE BEGIN 1 */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE END 1 */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 118:Src/main.c    ****   HAL_Init();
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE BEGIN Init */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE END Init */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* Configure the system clock */
 125:Src/main.c    ****   SystemClock_Config();
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* USER CODE END SysInit */
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* Initialize all configured peripherals */
 132:Src/main.c    ****   MX_GPIO_Init();
 133:Src/main.c    ****   MX_ADC1_Init();
 134:Src/main.c    ****   MX_CAN_Init();
 135:Src/main.c    ****   //MX_SPI1_Init();
 136:Src/main.c    ****   MX_TIM2_Init();
 137:Src/main.c    ****   /* USER CODE BEGIN 2 */
 138:Src/main.c    **** 
 139:Src/main.c    ****   SPI_Init();
 140:Src/main.c    ****   initPECTable();
 141:Src/main.c    ****   loadConfig(&BMSconfig);
 142:Src/main.c    **** 
 143:Src/main.c    ****   uint8_t BMS_DATA[96][6];
 144:Src/main.c    ****   uint8_t BMS_STATUS[6];
 145:Src/main.c    ****   bool discharge[12][8];
 146:Src/main.c    ****   bool full_discharge[12][8];
 147:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 4


 148:Src/main.c    ****   bool AIR = 0;
 149:Src/main.c    ****   bool CHARGE_EN = 0;
 150:Src/main.c    ****   bool BMS_FAULT = 0;
 151:Src/main.c    **** 
 152:Src/main.c    ****   /* USER CODE END 2 */
 153:Src/main.c    **** 
 154:Src/main.c    ****   /* Infinite loop */
 155:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 156:Src/main.c    ****   while (1)
 157:Src/main.c    ****   {
 158:Src/main.c    ****     /* USER CODE END WHILE */
 159:Src/main.c    **** 
 160:Src/main.c    ****     /* USER CODE BEGIN 3 */
 161:Src/main.c    **** 
 162:Src/main.c    ****     //reset config registers
 163:Src/main.c    ****     writeConfigAll(BMSconfig);
 164:Src/main.c    **** 
 165:Src/main.c    ****     //wait 100ms
 166:Src/main.c    ****     HAL_Delay(100);
 167:Src/main.c    **** 
 168:Src/main.c    ****     //read all cell voltages, send BMSVINF message
 169:Src/main.c    ****     readAllCellVoltages(BMSconfig, BMS_DATA);
 170:Src/main.c    ****     BMSVINF_message(BMSconfig, BMS_DATA);
 171:Src/main.c    **** 
 172:Src/main.c    ****     //read all cell temps, send BMSTINF message
 173:Src/main.c    ****     readAllCellTemps(BMSconfig, BMS_DATA);
 174:Src/main.c    ****     BMSTINF_message(BMSconfig, BMS_DATA);
 175:Src/main.c    **** 
 176:Src/main.c    ****     //check for faults (cell DC, cell OV, cell UV, cell OT, cell TDC, invalid PEC, no charger comm)
 177:Src/main.c    ****     checkAllCellConnections(BMSconfig, BMS_DATA);
 178:Src/main.c    ****     BMS_FAULT = FAULT_check(BMSconfig, BMS_DATA, BMS_STATUS);
 179:Src/main.c    **** 
 180:Src/main.c    ****     //if AIR and CHARGE_EN are low, pack is charging
 181:Src/main.c    ****     AIR = HAL_GPIO_ReadPin(GPIOB, AIR_Pin);
 182:Src/main.c    ****     CHARGE_EN = HAL_GPIO_ReadPin(GPIOB, CHARGE_EN_Pin);
 183:Src/main.c    **** 
 184:Src/main.c    ****     if ((AIR == 0) && (CHARGE_EN == 0)) {
 185:Src/main.c    **** 
 186:Src/main.c    ****       if (chargeRate != 0)
 187:Src/main.c    ****         setDischarge(BMSconfig, BMS_DATA, discharge, BMS_FAULT, full_discharge);
 188:Src/main.c    ****       
 189:Src/main.c    ****       setChargerTxData(BMSconfig);
 190:Src/main.c    **** 
 191:Src/main.c    ****       if (chargeRate != 0) {
 192:Src/main.c    ****         dischargeCellGroups(BMSconfig, discharge);
 193:Src/main.c    ****         HAL_Delay(BMSconfig.dischargeTime);
 194:Src/main.c    ****       }
 195:Src/main.c    ****       else {
 196:Src/main.c    ****         checkDischarge(BMSconfig, full_discharge, BMS_DATA);
 197:Src/main.c    ****         dischargeCellGroups(BMSconfig, full_discharge);
 198:Src/main.c    ****         HAL_Delay(BMSconfig.dischargeTime);
 199:Src/main.c    ****       }
 200:Src/main.c    ****     }
 201:Src/main.c    **** 
 202:Src/main.c    ****     //send remaining CAN messages
 203:Src/main.c    ****     CELLVAL_message(BMSconfig, BMS_DATA);
 204:Src/main.c    ****     BMSSTAT_message(BMSconfig, BMS_STATUS);
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 5


 205:Src/main.c    ****     PACKSTAT_message(BMSconfig, BMS_DATA);
 206:Src/main.c    **** 
 207:Src/main.c    ****   }
 208:Src/main.c    ****   /* USER CODE END 3 */
 209:Src/main.c    **** }
 210:Src/main.c    **** 
 211:Src/main.c    **** /**
 212:Src/main.c    ****   * @brief System Clock Configuration
 213:Src/main.c    ****   * @retval None
 214:Src/main.c    ****   */
 215:Src/main.c    **** void SystemClock_Config(void)
 216:Src/main.c    **** {
 217:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 218:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 219:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 220:Src/main.c    **** 
 221:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 222:Src/main.c    ****   */
 223:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 224:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 225:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 227:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 228:Src/main.c    ****   {
 229:Src/main.c    ****     Error_Handler();
 230:Src/main.c    ****   }
 231:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 232:Src/main.c    ****   */
 233:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 234:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 235:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 236:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 237:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 238:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 239:Src/main.c    **** 
 240:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 241:Src/main.c    ****   {
 242:Src/main.c    ****     Error_Handler();
 243:Src/main.c    ****   }
 244:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 245:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 246:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 247:Src/main.c    ****   {
 248:Src/main.c    ****     Error_Handler();
 249:Src/main.c    ****   }
 250:Src/main.c    **** }
 251:Src/main.c    **** 
 252:Src/main.c    **** /**
 253:Src/main.c    ****   * @brief ADC1 Initialization Function
 254:Src/main.c    ****   * @param None
 255:Src/main.c    ****   * @retval None
 256:Src/main.c    ****   */
 257:Src/main.c    **** static void MX_ADC1_Init(void)
 258:Src/main.c    **** {
 259:Src/main.c    **** 
 260:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 261:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 6


 262:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 263:Src/main.c    **** 
 264:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 265:Src/main.c    **** 
 266:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 267:Src/main.c    **** 
 268:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 269:Src/main.c    ****   /** Common config 
 270:Src/main.c    ****   */
 271:Src/main.c    ****   hadc1.Instance = ADC1;
 272:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 273:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 274:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 275:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 276:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 277:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 278:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 279:Src/main.c    ****   {
 280:Src/main.c    ****     Error_Handler();
 281:Src/main.c    ****   }
 282:Src/main.c    ****   /** Configure Regular Channel 
 283:Src/main.c    ****   */
 284:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 285:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 286:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 287:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 288:Src/main.c    ****   {
 289:Src/main.c    ****     Error_Handler();
 290:Src/main.c    ****   }
 291:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 292:Src/main.c    **** 
 293:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 294:Src/main.c    **** 
 295:Src/main.c    **** }
 296:Src/main.c    **** 
 297:Src/main.c    **** /**
 298:Src/main.c    ****   * @brief CAN Initialization Function
 299:Src/main.c    ****   * @param None
 300:Src/main.c    ****   * @retval None
 301:Src/main.c    ****   */
 302:Src/main.c    **** static void MX_CAN_Init(void)
 303:Src/main.c    **** {
 304:Src/main.c    **** 
 305:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 0 */
 306:Src/main.c    **** 
 307:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
 308:Src/main.c    **** 
 309:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 1 */
 310:Src/main.c    ****   CAN_FilterTypeDef     sFilterConfig;
 311:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 312:Src/main.c    ****   hcan.Instance = CAN1;
 313:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 314:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 315:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 316:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 317:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 318:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 7


 319:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 320:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 321:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 322:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 323:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 324:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 325:Src/main.c    ****   {
 326:Src/main.c    ****     Error_Handler();
 327:Src/main.c    ****   }
 328:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 2 */
 329:Src/main.c    ****   TxHeader.StdId = 0x321; 				// CAN standard ID
 330:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 331:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 332:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 333:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 334:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 335:Src/main.c    **** 
 336:Src/main.c    **** 	ChargerTxHeader.ExtId = CHARGER_ID; 					// CAN extended ID
 337:Src/main.c    **** 	ChargerTxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 338:Src/main.c    **** 	ChargerTxHeader.IDE = CAN_ID_EXT; 				// CAN ID type
 339:Src/main.c    **** 	ChargerTxHeader.DLC = 8; 						// CAN frame length in bytes
 340:Src/main.c    **** 	ChargerTxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 341:Src/main.c    **** 
 342:Src/main.c    **** 	sFilterConfig.FilterBank = 0;							// filter number (0-13)
 343:Src/main.c    **** 	sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 344:Src/main.c    **** 	sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;		
 345:Src/main.c    **** 	sFilterConfig.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifie
 346:Src/main.c    **** 	sFilterConfig.FilterIdLow = 0x0000;
 347:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare 
 348:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow = 0x0000;
 349:Src/main.c    **** 	sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen int
 350:Src/main.c    **** 	sFilterConfig.FilterActivation = ENABLE;
 351:Src/main.c    **** 	
 352:Src/main.c    **** 	HAL_CAN_ConfigFilter(&hcan, &sFilterConfig);
 353:Src/main.c    **** 
 354:Src/main.c    ****   HAL_CAN_Start(&hcan);
 355:Src/main.c    **** 
 356:Src/main.c    ****   HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 357:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 358:Src/main.c    **** 
 359:Src/main.c    **** }
 360:Src/main.c    **** 
 361:Src/main.c    **** /**
 362:Src/main.c    ****   * @brief SPI1 Initialization Function
 363:Src/main.c    ****   * @param None
 364:Src/main.c    ****   * @retval None
 365:Src/main.c    ****   */
 366:Src/main.c    **** static void MX_SPI1_Init(void)
 367:Src/main.c    **** {
 368:Src/main.c    **** 
 369:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 370:Src/main.c    **** 
 371:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 372:Src/main.c    **** 
 373:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 374:Src/main.c    **** 
 375:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 8


 376:Src/main.c    ****   /* SPI1 parameter configuration*/
 377:Src/main.c    ****   hspi1.Instance = SPI1;
 378:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 379:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 380:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 381:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 382:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 383:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 384:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 385:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 386:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 387:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 388:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 389:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 390:Src/main.c    ****   {
 391:Src/main.c    ****     Error_Handler();
 392:Src/main.c    ****   }
 393:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 394:Src/main.c    **** 
 395:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 396:Src/main.c    **** 
 397:Src/main.c    **** }
 398:Src/main.c    **** 
 399:Src/main.c    **** /**
 400:Src/main.c    ****   * @brief TIM2 Initialization Function
 401:Src/main.c    ****   * @param None
 402:Src/main.c    ****   * @retval None
 403:Src/main.c    ****   */
 404:Src/main.c    **** static void MX_TIM2_Init(void)
 405:Src/main.c    **** {
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 408:Src/main.c    **** 
 409:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 410:Src/main.c    **** 
 411:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 412:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 413:Src/main.c    **** 
 414:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 415:Src/main.c    **** 
 416:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 417:Src/main.c    ****   htim2.Instance = TIM2;
 418:Src/main.c    ****   htim2.Init.Prescaler = 8000;
 419:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 420:Src/main.c    ****   htim2.Init.Period = 65535;
 421:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 422:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 423:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 424:Src/main.c    ****   {
 425:Src/main.c    ****     Error_Handler();
 426:Src/main.c    ****   }
 427:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 428:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 429:Src/main.c    ****   {
 430:Src/main.c    ****     Error_Handler();
 431:Src/main.c    ****   }
 432:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 9


 433:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 434:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 435:Src/main.c    ****   {
 436:Src/main.c    ****     Error_Handler();
 437:Src/main.c    ****   }
 438:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 439:Src/main.c    ****   HAL_TIM_Base_Start(&htim2);
 440:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 441:Src/main.c    **** 
 442:Src/main.c    **** }
 443:Src/main.c    **** 
 444:Src/main.c    **** /**
 445:Src/main.c    ****   * @brief GPIO Initialization Function
 446:Src/main.c    ****   * @param None
 447:Src/main.c    ****   * @retval None
 448:Src/main.c    ****   */
 449:Src/main.c    **** static void MX_GPIO_Init(void)
 450:Src/main.c    **** {
  26              		.loc 1 450 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 28
  33              		.cfi_offset 4, -28
  34              		.cfi_offset 5, -24
  35              		.cfi_offset 6, -20
  36              		.cfi_offset 7, -16
  37              		.cfi_offset 8, -12
  38              		.cfi_offset 9, -8
  39              		.cfi_offset 14, -4
  40 0004 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 451:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 451 3 view .LVU1
  44              		.loc 1 451 20 is_stmt 0 view .LVU2
  45 0006 0024     		movs	r4, #0
  46 0008 0494     		str	r4, [sp, #16]
  47 000a 0594     		str	r4, [sp, #20]
  48 000c 0694     		str	r4, [sp, #24]
  49 000e 0794     		str	r4, [sp, #28]
 452:Src/main.c    **** 
 453:Src/main.c    ****   /* GPIO Ports Clock Enable */
 454:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 454 3 is_stmt 1 view .LVU3
  51              	.LBB2:
  52              		.loc 1 454 3 view .LVU4
  53              		.loc 1 454 3 view .LVU5
  54 0010 334B     		ldr	r3, .L3
  55 0012 9A69     		ldr	r2, [r3, #24]
  56 0014 42F01002 		orr	r2, r2, #16
  57 0018 9A61     		str	r2, [r3, #24]
  58              		.loc 1 454 3 view .LVU6
  59 001a 9A69     		ldr	r2, [r3, #24]
  60 001c 02F01002 		and	r2, r2, #16
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 10


  61 0020 0092     		str	r2, [sp]
  62              		.loc 1 454 3 view .LVU7
  63 0022 009A     		ldr	r2, [sp]
  64              	.LBE2:
 455:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  65              		.loc 1 455 3 view .LVU8
  66              	.LBB3:
  67              		.loc 1 455 3 view .LVU9
  68              		.loc 1 455 3 view .LVU10
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F02002 		orr	r2, r2, #32
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 455 3 view .LVU11
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F02002 		and	r2, r2, #32
  75 0032 0192     		str	r2, [sp, #4]
  76              		.loc 1 455 3 view .LVU12
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE3:
 456:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 456 3 view .LVU13
  80              	.LBB4:
  81              		.loc 1 456 3 view .LVU14
  82              		.loc 1 456 3 view .LVU15
  83 0036 9A69     		ldr	r2, [r3, #24]
  84 0038 42F00402 		orr	r2, r2, #4
  85 003c 9A61     		str	r2, [r3, #24]
  86              		.loc 1 456 3 view .LVU16
  87 003e 9A69     		ldr	r2, [r3, #24]
  88 0040 02F00402 		and	r2, r2, #4
  89 0044 0292     		str	r2, [sp, #8]
  90              		.loc 1 456 3 view .LVU17
  91 0046 029A     		ldr	r2, [sp, #8]
  92              	.LBE4:
 457:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  93              		.loc 1 457 3 view .LVU18
  94              	.LBB5:
  95              		.loc 1 457 3 view .LVU19
  96              		.loc 1 457 3 view .LVU20
  97 0048 9A69     		ldr	r2, [r3, #24]
  98 004a 42F00802 		orr	r2, r2, #8
  99 004e 9A61     		str	r2, [r3, #24]
 100              		.loc 1 457 3 view .LVU21
 101 0050 9B69     		ldr	r3, [r3, #24]
 102 0052 03F00803 		and	r3, r3, #8
 103 0056 0393     		str	r3, [sp, #12]
 104              		.loc 1 457 3 view .LVU22
 105 0058 039B     		ldr	r3, [sp, #12]
 106              	.LBE5:
 458:Src/main.c    **** 
 459:Src/main.c    ****   /*Configure GPIO pin Output Level */
 460:Src/main.c    ****   HAL_GPIO_WritePin(DEBUG_GPIO_Port, DEBUG_Pin, GPIO_PIN_SET);
 107              		.loc 1 460 3 view .LVU23
 108 005a DFF88C90 		ldr	r9, .L3+8
 109 005e 0122     		movs	r2, #1
 110 0060 4FF40051 		mov	r1, #8192
 111 0064 4846     		mov	r0, r9
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 11


 112 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL0:
 461:Src/main.c    **** 
 462:Src/main.c    ****   /*Configure GPIO pin Output Level */
 463:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, BMS_CS_Pin|TRIGGER_Pin, GPIO_PIN_RESET);
 114              		.loc 1 463 3 view .LVU24
 115 006a DFF88080 		ldr	r8, .L3+12
 116 006e 2246     		mov	r2, r4
 117 0070 4FF48871 		mov	r1, #272
 118 0074 4046     		mov	r0, r8
 119 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL1:
 464:Src/main.c    **** 
 465:Src/main.c    ****   /*Configure GPIO pin Output Level */
 466:Src/main.c    ****   HAL_GPIO_WritePin(BMS_FLT_GPIO_Port, BMS_FLT_Pin, GPIO_PIN_RESET);
 121              		.loc 1 466 3 view .LVU25
 122 007a 1A4D     		ldr	r5, .L3+4
 123 007c 2246     		mov	r2, r4
 124 007e 4FF40071 		mov	r1, #512
 125 0082 2846     		mov	r0, r5
 126 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL2:
 467:Src/main.c    **** 
 468:Src/main.c    ****   /*Configure GPIO pin : DEBUG_Pin */
 469:Src/main.c    ****   GPIO_InitStruct.Pin = DEBUG_Pin;
 128              		.loc 1 469 3 view .LVU26
 129              		.loc 1 469 23 is_stmt 0 view .LVU27
 130 0088 4FF40053 		mov	r3, #8192
 131 008c 0493     		str	r3, [sp, #16]
 470:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 470 3 is_stmt 1 view .LVU28
 133              		.loc 1 470 24 is_stmt 0 view .LVU29
 134 008e 0127     		movs	r7, #1
 135 0090 0597     		str	r7, [sp, #20]
 471:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 471 3 is_stmt 1 view .LVU30
 137              		.loc 1 471 24 is_stmt 0 view .LVU31
 138 0092 0694     		str	r4, [sp, #24]
 472:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 472 3 is_stmt 1 view .LVU32
 140              		.loc 1 472 25 is_stmt 0 view .LVU33
 141 0094 0226     		movs	r6, #2
 142 0096 0796     		str	r6, [sp, #28]
 473:Src/main.c    ****   HAL_GPIO_Init(DEBUG_GPIO_Port, &GPIO_InitStruct);
 143              		.loc 1 473 3 is_stmt 1 view .LVU34
 144 0098 04A9     		add	r1, sp, #16
 145 009a 4846     		mov	r0, r9
 146 009c FFF7FEFF 		bl	HAL_GPIO_Init
 147              	.LVL3:
 474:Src/main.c    **** 
 475:Src/main.c    ****   /*Configure GPIO pins : BMS_CS_Pin TRIGGER_Pin */
 476:Src/main.c    ****   GPIO_InitStruct.Pin = BMS_CS_Pin|TRIGGER_Pin;
 148              		.loc 1 476 3 view .LVU35
 149              		.loc 1 476 23 is_stmt 0 view .LVU36
 150 00a0 4FF48873 		mov	r3, #272
 151 00a4 0493     		str	r3, [sp, #16]
 477:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 12


 152              		.loc 1 477 3 is_stmt 1 view .LVU37
 153              		.loc 1 477 24 is_stmt 0 view .LVU38
 154 00a6 0597     		str	r7, [sp, #20]
 478:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 478 3 is_stmt 1 view .LVU39
 156              		.loc 1 478 24 is_stmt 0 view .LVU40
 157 00a8 0694     		str	r4, [sp, #24]
 479:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 158              		.loc 1 479 3 is_stmt 1 view .LVU41
 159              		.loc 1 479 25 is_stmt 0 view .LVU42
 160 00aa 0796     		str	r6, [sp, #28]
 480:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 161              		.loc 1 480 3 is_stmt 1 view .LVU43
 162 00ac 04A9     		add	r1, sp, #16
 163 00ae 4046     		mov	r0, r8
 164 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 165              	.LVL4:
 481:Src/main.c    **** 
 482:Src/main.c    ****   /*Configure GPIO pins : CHARGE_EN_Pin AIR_Pin */
 483:Src/main.c    ****   GPIO_InitStruct.Pin = CHARGE_EN_Pin|AIR_Pin;
 166              		.loc 1 483 3 view .LVU44
 167              		.loc 1 483 23 is_stmt 0 view .LVU45
 168 00b4 2823     		movs	r3, #40
 169 00b6 0493     		str	r3, [sp, #16]
 484:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 170              		.loc 1 484 3 is_stmt 1 view .LVU46
 171              		.loc 1 484 24 is_stmt 0 view .LVU47
 172 00b8 0594     		str	r4, [sp, #20]
 485:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 173              		.loc 1 485 3 is_stmt 1 view .LVU48
 174              		.loc 1 485 24 is_stmt 0 view .LVU49
 175 00ba 0694     		str	r4, [sp, #24]
 486:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 176              		.loc 1 486 3 is_stmt 1 view .LVU50
 177 00bc 04A9     		add	r1, sp, #16
 178 00be 2846     		mov	r0, r5
 179 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL5:
 487:Src/main.c    **** 
 488:Src/main.c    ****   /*Configure GPIO pin : BMS_FLT_Pin */
 489:Src/main.c    ****   GPIO_InitStruct.Pin = BMS_FLT_Pin;
 181              		.loc 1 489 3 view .LVU51
 182              		.loc 1 489 23 is_stmt 0 view .LVU52
 183 00c4 4FF40073 		mov	r3, #512
 184 00c8 0493     		str	r3, [sp, #16]
 490:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 185              		.loc 1 490 3 is_stmt 1 view .LVU53
 186              		.loc 1 490 24 is_stmt 0 view .LVU54
 187 00ca 0597     		str	r7, [sp, #20]
 491:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 188              		.loc 1 491 3 is_stmt 1 view .LVU55
 189              		.loc 1 491 24 is_stmt 0 view .LVU56
 190 00cc 0694     		str	r4, [sp, #24]
 492:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 191              		.loc 1 492 3 is_stmt 1 view .LVU57
 192              		.loc 1 492 25 is_stmt 0 view .LVU58
 193 00ce 0796     		str	r6, [sp, #28]
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 13


 493:Src/main.c    ****   HAL_GPIO_Init(BMS_FLT_GPIO_Port, &GPIO_InitStruct);
 194              		.loc 1 493 3 is_stmt 1 view .LVU59
 195 00d0 04A9     		add	r1, sp, #16
 196 00d2 2846     		mov	r0, r5
 197 00d4 FFF7FEFF 		bl	HAL_GPIO_Init
 198              	.LVL6:
 494:Src/main.c    **** 
 495:Src/main.c    **** }
 199              		.loc 1 495 1 is_stmt 0 view .LVU60
 200 00d8 09B0     		add	sp, sp, #36
 201              	.LCFI2:
 202              		.cfi_def_cfa_offset 28
 203              		@ sp needed
 204 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 205              	.L4:
 206 00de 00BF     		.align	2
 207              	.L3:
 208 00e0 00100240 		.word	1073876992
 209 00e4 000C0140 		.word	1073810432
 210 00e8 00100140 		.word	1073811456
 211 00ec 00080140 		.word	1073809408
 212              		.cfi_endproc
 213              	.LFE72:
 215              		.section	.text.MX_ADC1_Init,"ax",%progbits
 216              		.align	1
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 222              	MX_ADC1_Init:
 223              	.LFB68:
 258:Src/main.c    **** 
 224              		.loc 1 258 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 16
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 70B5     		push	{r4, r5, r6, lr}
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 16
 231              		.cfi_offset 4, -16
 232              		.cfi_offset 5, -12
 233              		.cfi_offset 6, -8
 234              		.cfi_offset 14, -4
 235 0002 84B0     		sub	sp, sp, #16
 236              	.LCFI4:
 237              		.cfi_def_cfa_offset 32
 264:Src/main.c    **** 
 238              		.loc 1 264 3 view .LVU62
 264:Src/main.c    **** 
 239              		.loc 1 264 26 is_stmt 0 view .LVU63
 240 0004 0025     		movs	r5, #0
 241 0006 0195     		str	r5, [sp, #4]
 242 0008 0295     		str	r5, [sp, #8]
 243 000a 0395     		str	r5, [sp, #12]
 271:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 244              		.loc 1 271 3 is_stmt 1 view .LVU64
 271:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 14


 245              		.loc 1 271 18 is_stmt 0 view .LVU65
 246 000c 0C4C     		ldr	r4, .L7
 247 000e 0D4B     		ldr	r3, .L7+4
 248 0010 2360     		str	r3, [r4]
 272:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 249              		.loc 1 272 3 is_stmt 1 view .LVU66
 272:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 250              		.loc 1 272 27 is_stmt 0 view .LVU67
 251 0012 A560     		str	r5, [r4, #8]
 273:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 252              		.loc 1 273 3 is_stmt 1 view .LVU68
 273:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 253              		.loc 1 273 33 is_stmt 0 view .LVU69
 254 0014 E560     		str	r5, [r4, #12]
 274:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 255              		.loc 1 274 3 is_stmt 1 view .LVU70
 274:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 256              		.loc 1 274 36 is_stmt 0 view .LVU71
 257 0016 6561     		str	r5, [r4, #20]
 275:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 258              		.loc 1 275 3 is_stmt 1 view .LVU72
 275:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 259              		.loc 1 275 31 is_stmt 0 view .LVU73
 260 0018 4FF46023 		mov	r3, #917504
 261 001c E361     		str	r3, [r4, #28]
 276:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 262              		.loc 1 276 3 is_stmt 1 view .LVU74
 276:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 263              		.loc 1 276 24 is_stmt 0 view .LVU75
 264 001e 6560     		str	r5, [r4, #4]
 277:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 265              		.loc 1 277 3 is_stmt 1 view .LVU76
 277:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 266              		.loc 1 277 30 is_stmt 0 view .LVU77
 267 0020 0126     		movs	r6, #1
 268 0022 2661     		str	r6, [r4, #16]
 278:Src/main.c    ****   {
 269              		.loc 1 278 3 is_stmt 1 view .LVU78
 278:Src/main.c    ****   {
 270              		.loc 1 278 7 is_stmt 0 view .LVU79
 271 0024 2046     		mov	r0, r4
 272 0026 FFF7FEFF 		bl	HAL_ADC_Init
 273              	.LVL7:
 284:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 274              		.loc 1 284 3 is_stmt 1 view .LVU80
 284:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 275              		.loc 1 284 19 is_stmt 0 view .LVU81
 276 002a 0823     		movs	r3, #8
 277 002c 0193     		str	r3, [sp, #4]
 285:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 278              		.loc 1 285 3 is_stmt 1 view .LVU82
 285:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 279              		.loc 1 285 16 is_stmt 0 view .LVU83
 280 002e 0296     		str	r6, [sp, #8]
 286:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 281              		.loc 1 286 3 is_stmt 1 view .LVU84
 286:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 15


 282              		.loc 1 286 24 is_stmt 0 view .LVU85
 283 0030 0395     		str	r5, [sp, #12]
 287:Src/main.c    ****   {
 284              		.loc 1 287 3 is_stmt 1 view .LVU86
 287:Src/main.c    ****   {
 285              		.loc 1 287 7 is_stmt 0 view .LVU87
 286 0032 01A9     		add	r1, sp, #4
 287 0034 2046     		mov	r0, r4
 288 0036 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 289              	.LVL8:
 295:Src/main.c    **** 
 290              		.loc 1 295 1 view .LVU88
 291 003a 04B0     		add	sp, sp, #16
 292              	.LCFI5:
 293              		.cfi_def_cfa_offset 16
 294              		@ sp needed
 295 003c 70BD     		pop	{r4, r5, r6, pc}
 296              	.L8:
 297 003e 00BF     		.align	2
 298              	.L7:
 299 0040 00000000 		.word	hadc1
 300 0044 00240140 		.word	1073816576
 301              		.cfi_endproc
 302              	.LFE68:
 304              		.section	.text.MX_CAN_Init,"ax",%progbits
 305              		.align	1
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu softvfp
 311              	MX_CAN_Init:
 312              	.LFB69:
 303:Src/main.c    **** 
 313              		.loc 1 303 1 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 40
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 70B5     		push	{r4, r5, r6, lr}
 318              	.LCFI6:
 319              		.cfi_def_cfa_offset 16
 320              		.cfi_offset 4, -16
 321              		.cfi_offset 5, -12
 322              		.cfi_offset 6, -8
 323              		.cfi_offset 14, -4
 324 0002 8AB0     		sub	sp, sp, #40
 325              	.LCFI7:
 326              		.cfi_def_cfa_offset 56
 310:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 327              		.loc 1 310 3 view .LVU90
 312:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 328              		.loc 1 312 3 view .LVU91
 312:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 329              		.loc 1 312 17 is_stmt 0 view .LVU92
 330 0004 204D     		ldr	r5, .L11
 331 0006 214B     		ldr	r3, .L11+4
 332 0008 2B60     		str	r3, [r5]
 313:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 16


 333              		.loc 1 313 3 is_stmt 1 view .LVU93
 313:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 334              		.loc 1 313 23 is_stmt 0 view .LVU94
 335 000a 0126     		movs	r6, #1
 336 000c 6E60     		str	r6, [r5, #4]
 314:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 337              		.loc 1 314 3 is_stmt 1 view .LVU95
 314:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 338              		.loc 1 314 18 is_stmt 0 view .LVU96
 339 000e 0024     		movs	r4, #0
 340 0010 AC60     		str	r4, [r5, #8]
 315:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 341              		.loc 1 315 3 is_stmt 1 view .LVU97
 315:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 342              		.loc 1 315 27 is_stmt 0 view .LVU98
 343 0012 4FF08073 		mov	r3, #16777216
 344 0016 EB60     		str	r3, [r5, #12]
 316:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 345              		.loc 1 316 3 is_stmt 1 view .LVU99
 316:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 346              		.loc 1 316 22 is_stmt 0 view .LVU100
 347 0018 4FF44023 		mov	r3, #786432
 348 001c 2B61     		str	r3, [r5, #16]
 317:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 349              		.loc 1 317 3 is_stmt 1 view .LVU101
 317:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 350              		.loc 1 317 22 is_stmt 0 view .LVU102
 351 001e 4FF48013 		mov	r3, #1048576
 352 0022 6B61     		str	r3, [r5, #20]
 318:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 353              		.loc 1 318 3 is_stmt 1 view .LVU103
 318:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 354              		.loc 1 318 31 is_stmt 0 view .LVU104
 355 0024 2C76     		strb	r4, [r5, #24]
 319:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 356              		.loc 1 319 3 is_stmt 1 view .LVU105
 319:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 357              		.loc 1 319 24 is_stmt 0 view .LVU106
 358 0026 6C76     		strb	r4, [r5, #25]
 320:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 359              		.loc 1 320 3 is_stmt 1 view .LVU107
 320:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 360              		.loc 1 320 24 is_stmt 0 view .LVU108
 361 0028 AC76     		strb	r4, [r5, #26]
 321:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 362              		.loc 1 321 3 is_stmt 1 view .LVU109
 321:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 363              		.loc 1 321 32 is_stmt 0 view .LVU110
 364 002a EC76     		strb	r4, [r5, #27]
 322:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 365              		.loc 1 322 3 is_stmt 1 view .LVU111
 322:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 366              		.loc 1 322 31 is_stmt 0 view .LVU112
 367 002c 2C77     		strb	r4, [r5, #28]
 323:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 368              		.loc 1 323 3 is_stmt 1 view .LVU113
 323:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 17


 369              		.loc 1 323 34 is_stmt 0 view .LVU114
 370 002e 6C77     		strb	r4, [r5, #29]
 324:Src/main.c    ****   {
 371              		.loc 1 324 3 is_stmt 1 view .LVU115
 324:Src/main.c    ****   {
 372              		.loc 1 324 7 is_stmt 0 view .LVU116
 373 0030 2846     		mov	r0, r5
 374 0032 FFF7FEFF 		bl	HAL_CAN_Init
 375              	.LVL9:
 329:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 376              		.loc 1 329 3 is_stmt 1 view .LVU117
 329:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 377              		.loc 1 329 18 is_stmt 0 view .LVU118
 378 0036 164B     		ldr	r3, .L11+8
 379 0038 40F22132 		movw	r2, #801
 380 003c 1A60     		str	r2, [r3]
 330:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 381              		.loc 1 330 2 is_stmt 1 view .LVU119
 330:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 382              		.loc 1 330 17 is_stmt 0 view .LVU120
 383 003e 5E60     		str	r6, [r3, #4]
 331:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 384              		.loc 1 331 2 is_stmt 1 view .LVU121
 331:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 385              		.loc 1 331 15 is_stmt 0 view .LVU122
 386 0040 DC60     		str	r4, [r3, #12]
 332:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 387              		.loc 1 332 2 is_stmt 1 view .LVU123
 332:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 388              		.loc 1 332 15 is_stmt 0 view .LVU124
 389 0042 9C60     		str	r4, [r3, #8]
 333:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 390              		.loc 1 333 2 is_stmt 1 view .LVU125
 333:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 391              		.loc 1 333 15 is_stmt 0 view .LVU126
 392 0044 0822     		movs	r2, #8
 393 0046 1A61     		str	r2, [r3, #16]
 334:Src/main.c    **** 
 394              		.loc 1 334 2 is_stmt 1 view .LVU127
 334:Src/main.c    **** 
 395              		.loc 1 334 30 is_stmt 0 view .LVU128
 396 0048 1C75     		strb	r4, [r3, #20]
 336:Src/main.c    **** 	ChargerTxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 397              		.loc 1 336 2 is_stmt 1 view .LVU129
 336:Src/main.c    **** 	ChargerTxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 398              		.loc 1 336 24 is_stmt 0 view .LVU130
 399 004a 124B     		ldr	r3, .L11+12
 400 004c 1249     		ldr	r1, .L11+16
 401 004e 5960     		str	r1, [r3, #4]
 337:Src/main.c    **** 	ChargerTxHeader.IDE = CAN_ID_EXT; 				// CAN ID type
 402              		.loc 1 337 2 is_stmt 1 view .LVU131
 337:Src/main.c    **** 	ChargerTxHeader.IDE = CAN_ID_EXT; 				// CAN ID type
 403              		.loc 1 337 22 is_stmt 0 view .LVU132
 404 0050 DC60     		str	r4, [r3, #12]
 338:Src/main.c    **** 	ChargerTxHeader.DLC = 8; 						// CAN frame length in bytes
 405              		.loc 1 338 2 is_stmt 1 view .LVU133
 338:Src/main.c    **** 	ChargerTxHeader.DLC = 8; 						// CAN frame length in bytes
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 18


 406              		.loc 1 338 22 is_stmt 0 view .LVU134
 407 0052 0421     		movs	r1, #4
 408 0054 9960     		str	r1, [r3, #8]
 339:Src/main.c    **** 	ChargerTxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 409              		.loc 1 339 2 is_stmt 1 view .LVU135
 339:Src/main.c    **** 	ChargerTxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 410              		.loc 1 339 22 is_stmt 0 view .LVU136
 411 0056 1A61     		str	r2, [r3, #16]
 340:Src/main.c    **** 
 412              		.loc 1 340 2 is_stmt 1 view .LVU137
 340:Src/main.c    **** 
 413              		.loc 1 340 37 is_stmt 0 view .LVU138
 414 0058 1C75     		strb	r4, [r3, #20]
 342:Src/main.c    **** 	sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 415              		.loc 1 342 2 is_stmt 1 view .LVU139
 342:Src/main.c    **** 	sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 416              		.loc 1 342 27 is_stmt 0 view .LVU140
 417 005a 0594     		str	r4, [sp, #20]
 343:Src/main.c    **** 	sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;		
 418              		.loc 1 343 2 is_stmt 1 view .LVU141
 343:Src/main.c    **** 	sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;		
 419              		.loc 1 343 27 is_stmt 0 view .LVU142
 420 005c 0694     		str	r4, [sp, #24]
 344:Src/main.c    **** 	sFilterConfig.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifie
 421              		.loc 1 344 2 is_stmt 1 view .LVU143
 344:Src/main.c    **** 	sFilterConfig.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifie
 422              		.loc 1 344 28 is_stmt 0 view .LVU144
 423 005e 0796     		str	r6, [sp, #28]
 345:Src/main.c    **** 	sFilterConfig.FilterIdLow = 0x0000;
 424              		.loc 1 345 2 is_stmt 1 view .LVU145
 345:Src/main.c    **** 	sFilterConfig.FilterIdLow = 0x0000;
 425              		.loc 1 345 29 is_stmt 0 view .LVU146
 426 0060 0094     		str	r4, [sp]
 346:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare 
 427              		.loc 1 346 2 is_stmt 1 view .LVU147
 346:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare 
 428              		.loc 1 346 28 is_stmt 0 view .LVU148
 429 0062 0194     		str	r4, [sp, #4]
 347:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow = 0x0000;
 430              		.loc 1 347 2 is_stmt 1 view .LVU149
 347:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow = 0x0000;
 431              		.loc 1 347 33 is_stmt 0 view .LVU150
 432 0064 0294     		str	r4, [sp, #8]
 348:Src/main.c    **** 	sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen int
 433              		.loc 1 348 2 is_stmt 1 view .LVU151
 348:Src/main.c    **** 	sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen int
 434              		.loc 1 348 32 is_stmt 0 view .LVU152
 435 0066 0394     		str	r4, [sp, #12]
 349:Src/main.c    **** 	sFilterConfig.FilterActivation = ENABLE;
 436              		.loc 1 349 2 is_stmt 1 view .LVU153
 349:Src/main.c    **** 	sFilterConfig.FilterActivation = ENABLE;
 437              		.loc 1 349 37 is_stmt 0 view .LVU154
 438 0068 0494     		str	r4, [sp, #16]
 350:Src/main.c    **** 	
 439              		.loc 1 350 2 is_stmt 1 view .LVU155
 350:Src/main.c    **** 	
 440              		.loc 1 350 33 is_stmt 0 view .LVU156
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 19


 441 006a 0896     		str	r6, [sp, #32]
 352:Src/main.c    **** 
 442              		.loc 1 352 2 is_stmt 1 view .LVU157
 443 006c 6946     		mov	r1, sp
 444 006e 2846     		mov	r0, r5
 445 0070 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 446              	.LVL10:
 354:Src/main.c    **** 
 447              		.loc 1 354 3 view .LVU158
 448 0074 2846     		mov	r0, r5
 449 0076 FFF7FEFF 		bl	HAL_CAN_Start
 450              	.LVL11:
 356:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 451              		.loc 1 356 3 view .LVU159
 452 007a 0221     		movs	r1, #2
 453 007c 2846     		mov	r0, r5
 454 007e FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 455              	.LVL12:
 359:Src/main.c    **** 
 456              		.loc 1 359 1 is_stmt 0 view .LVU160
 457 0082 0AB0     		add	sp, sp, #40
 458              	.LCFI8:
 459              		.cfi_def_cfa_offset 16
 460              		@ sp needed
 461 0084 70BD     		pop	{r4, r5, r6, pc}
 462              	.L12:
 463 0086 00BF     		.align	2
 464              	.L11:
 465 0088 00000000 		.word	hcan
 466 008c 00640040 		.word	1073767424
 467 0090 00000000 		.word	TxHeader
 468 0094 00000000 		.word	ChargerTxHeader
 469 0098 F4E50618 		.word	403105268
 470              		.cfi_endproc
 471              	.LFE69:
 473              		.section	.text.MX_TIM2_Init,"ax",%progbits
 474              		.align	1
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 478              		.fpu softvfp
 480              	MX_TIM2_Init:
 481              	.LFB71:
 405:Src/main.c    **** 
 482              		.loc 1 405 1 is_stmt 1 view -0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 24
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486 0000 30B5     		push	{r4, r5, lr}
 487              	.LCFI9:
 488              		.cfi_def_cfa_offset 12
 489              		.cfi_offset 4, -12
 490              		.cfi_offset 5, -8
 491              		.cfi_offset 14, -4
 492 0002 87B0     		sub	sp, sp, #28
 493              	.LCFI10:
 494              		.cfi_def_cfa_offset 40
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 20


 411:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 495              		.loc 1 411 3 view .LVU162
 411:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 496              		.loc 1 411 26 is_stmt 0 view .LVU163
 497 0004 0024     		movs	r4, #0
 498 0006 0294     		str	r4, [sp, #8]
 499 0008 0394     		str	r4, [sp, #12]
 500 000a 0494     		str	r4, [sp, #16]
 501 000c 0594     		str	r4, [sp, #20]
 412:Src/main.c    **** 
 502              		.loc 1 412 3 is_stmt 1 view .LVU164
 412:Src/main.c    **** 
 503              		.loc 1 412 27 is_stmt 0 view .LVU165
 504 000e 0094     		str	r4, [sp]
 505 0010 0194     		str	r4, [sp, #4]
 417:Src/main.c    ****   htim2.Init.Prescaler = 8000;
 506              		.loc 1 417 3 is_stmt 1 view .LVU166
 417:Src/main.c    ****   htim2.Init.Prescaler = 8000;
 507              		.loc 1 417 18 is_stmt 0 view .LVU167
 508 0012 114D     		ldr	r5, .L15
 509 0014 4FF08043 		mov	r3, #1073741824
 510 0018 2B60     		str	r3, [r5]
 418:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 511              		.loc 1 418 3 is_stmt 1 view .LVU168
 418:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 512              		.loc 1 418 24 is_stmt 0 view .LVU169
 513 001a 4FF4FA53 		mov	r3, #8000
 514 001e 6B60     		str	r3, [r5, #4]
 419:Src/main.c    ****   htim2.Init.Period = 65535;
 515              		.loc 1 419 3 is_stmt 1 view .LVU170
 419:Src/main.c    ****   htim2.Init.Period = 65535;
 516              		.loc 1 419 26 is_stmt 0 view .LVU171
 517 0020 AC60     		str	r4, [r5, #8]
 420:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 518              		.loc 1 420 3 is_stmt 1 view .LVU172
 420:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 519              		.loc 1 420 21 is_stmt 0 view .LVU173
 520 0022 4FF6FF73 		movw	r3, #65535
 521 0026 EB60     		str	r3, [r5, #12]
 421:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 522              		.loc 1 421 3 is_stmt 1 view .LVU174
 421:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 523              		.loc 1 421 28 is_stmt 0 view .LVU175
 524 0028 2C61     		str	r4, [r5, #16]
 422:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 525              		.loc 1 422 3 is_stmt 1 view .LVU176
 422:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 526              		.loc 1 422 32 is_stmt 0 view .LVU177
 527 002a AC61     		str	r4, [r5, #24]
 423:Src/main.c    ****   {
 528              		.loc 1 423 3 is_stmt 1 view .LVU178
 423:Src/main.c    ****   {
 529              		.loc 1 423 7 is_stmt 0 view .LVU179
 530 002c 2846     		mov	r0, r5
 531 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 532              	.LVL13:
 427:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 21


 533              		.loc 1 427 3 is_stmt 1 view .LVU180
 427:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 534              		.loc 1 427 34 is_stmt 0 view .LVU181
 535 0032 4FF48053 		mov	r3, #4096
 536 0036 0293     		str	r3, [sp, #8]
 428:Src/main.c    ****   {
 537              		.loc 1 428 3 is_stmt 1 view .LVU182
 428:Src/main.c    ****   {
 538              		.loc 1 428 7 is_stmt 0 view .LVU183
 539 0038 02A9     		add	r1, sp, #8
 540 003a 2846     		mov	r0, r5
 541 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 542              	.LVL14:
 432:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 543              		.loc 1 432 3 is_stmt 1 view .LVU184
 432:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 544              		.loc 1 432 37 is_stmt 0 view .LVU185
 545 0040 0094     		str	r4, [sp]
 433:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 546              		.loc 1 433 3 is_stmt 1 view .LVU186
 433:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 547              		.loc 1 433 33 is_stmt 0 view .LVU187
 548 0042 0194     		str	r4, [sp, #4]
 434:Src/main.c    ****   {
 549              		.loc 1 434 3 is_stmt 1 view .LVU188
 434:Src/main.c    ****   {
 550              		.loc 1 434 7 is_stmt 0 view .LVU189
 551 0044 6946     		mov	r1, sp
 552 0046 2846     		mov	r0, r5
 553 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 554              	.LVL15:
 439:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 555              		.loc 1 439 3 is_stmt 1 view .LVU190
 556 004c 2846     		mov	r0, r5
 557 004e FFF7FEFF 		bl	HAL_TIM_Base_Start
 558              	.LVL16:
 442:Src/main.c    **** 
 559              		.loc 1 442 1 is_stmt 0 view .LVU191
 560 0052 07B0     		add	sp, sp, #28
 561              	.LCFI11:
 562              		.cfi_def_cfa_offset 12
 563              		@ sp needed
 564 0054 30BD     		pop	{r4, r5, pc}
 565              	.L16:
 566 0056 00BF     		.align	2
 567              	.L15:
 568 0058 00000000 		.word	htim2
 569              		.cfi_endproc
 570              	.LFE71:
 572              		.section	.text.SystemClock_Config,"ax",%progbits
 573              		.align	1
 574              		.global	SystemClock_Config
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu softvfp
 580              	SystemClock_Config:
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 22


 581              	.LFB67:
 216:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 582              		.loc 1 216 1 is_stmt 1 view -0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 80
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586 0000 30B5     		push	{r4, r5, lr}
 587              	.LCFI12:
 588              		.cfi_def_cfa_offset 12
 589              		.cfi_offset 4, -12
 590              		.cfi_offset 5, -8
 591              		.cfi_offset 14, -4
 592 0002 95B0     		sub	sp, sp, #84
 593              	.LCFI13:
 594              		.cfi_def_cfa_offset 96
 217:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 595              		.loc 1 217 3 view .LVU193
 217:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 596              		.loc 1 217 22 is_stmt 0 view .LVU194
 597 0004 2422     		movs	r2, #36
 598 0006 0021     		movs	r1, #0
 599 0008 0BA8     		add	r0, sp, #44
 600 000a FFF7FEFF 		bl	memset
 601              	.LVL17:
 218:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 602              		.loc 1 218 3 is_stmt 1 view .LVU195
 218:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 603              		.loc 1 218 22 is_stmt 0 view .LVU196
 604 000e 0024     		movs	r4, #0
 605 0010 0594     		str	r4, [sp, #20]
 606 0012 0694     		str	r4, [sp, #24]
 607 0014 0794     		str	r4, [sp, #28]
 608 0016 0894     		str	r4, [sp, #32]
 609 0018 0994     		str	r4, [sp, #36]
 219:Src/main.c    **** 
 610              		.loc 1 219 3 is_stmt 1 view .LVU197
 219:Src/main.c    **** 
 611              		.loc 1 219 28 is_stmt 0 view .LVU198
 612 001a 0194     		str	r4, [sp, #4]
 613 001c 0294     		str	r4, [sp, #8]
 614 001e 0394     		str	r4, [sp, #12]
 615 0020 0494     		str	r4, [sp, #16]
 223:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 616              		.loc 1 223 3 is_stmt 1 view .LVU199
 223:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 617              		.loc 1 223 36 is_stmt 0 view .LVU200
 618 0022 0225     		movs	r5, #2
 619 0024 0A95     		str	r5, [sp, #40]
 224:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 620              		.loc 1 224 3 is_stmt 1 view .LVU201
 224:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 621              		.loc 1 224 30 is_stmt 0 view .LVU202
 622 0026 0123     		movs	r3, #1
 623 0028 0E93     		str	r3, [sp, #56]
 225:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 624              		.loc 1 225 3 is_stmt 1 view .LVU203
 225:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 23


 625              		.loc 1 225 41 is_stmt 0 view .LVU204
 626 002a 1023     		movs	r3, #16
 627 002c 0F93     		str	r3, [sp, #60]
 226:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 628              		.loc 1 226 3 is_stmt 1 view .LVU205
 227:Src/main.c    ****   {
 629              		.loc 1 227 3 view .LVU206
 227:Src/main.c    ****   {
 630              		.loc 1 227 7 is_stmt 0 view .LVU207
 631 002e 0AA8     		add	r0, sp, #40
 632 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 633              	.LVL18:
 233:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 634              		.loc 1 233 3 is_stmt 1 view .LVU208
 233:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 635              		.loc 1 233 31 is_stmt 0 view .LVU209
 636 0034 0F23     		movs	r3, #15
 637 0036 0593     		str	r3, [sp, #20]
 235:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 638              		.loc 1 235 3 is_stmt 1 view .LVU210
 235:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 639              		.loc 1 235 34 is_stmt 0 view .LVU211
 640 0038 0694     		str	r4, [sp, #24]
 236:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 641              		.loc 1 236 3 is_stmt 1 view .LVU212
 236:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 642              		.loc 1 236 35 is_stmt 0 view .LVU213
 643 003a 0794     		str	r4, [sp, #28]
 237:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 644              		.loc 1 237 3 is_stmt 1 view .LVU214
 237:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 645              		.loc 1 237 36 is_stmt 0 view .LVU215
 646 003c 0894     		str	r4, [sp, #32]
 238:Src/main.c    **** 
 647              		.loc 1 238 3 is_stmt 1 view .LVU216
 238:Src/main.c    **** 
 648              		.loc 1 238 36 is_stmt 0 view .LVU217
 649 003e 0994     		str	r4, [sp, #36]
 240:Src/main.c    ****   {
 650              		.loc 1 240 3 is_stmt 1 view .LVU218
 240:Src/main.c    ****   {
 651              		.loc 1 240 7 is_stmt 0 view .LVU219
 652 0040 2146     		mov	r1, r4
 653 0042 05A8     		add	r0, sp, #20
 654 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 655              	.LVL19:
 244:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 656              		.loc 1 244 3 is_stmt 1 view .LVU220
 244:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 657              		.loc 1 244 38 is_stmt 0 view .LVU221
 658 0048 0195     		str	r5, [sp, #4]
 245:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 659              		.loc 1 245 3 is_stmt 1 view .LVU222
 245:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 660              		.loc 1 245 35 is_stmt 0 view .LVU223
 661 004a 0394     		str	r4, [sp, #12]
 246:Src/main.c    ****   {
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 24


 662              		.loc 1 246 3 is_stmt 1 view .LVU224
 246:Src/main.c    ****   {
 663              		.loc 1 246 7 is_stmt 0 view .LVU225
 664 004c 01A8     		add	r0, sp, #4
 665 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 666              	.LVL20:
 250:Src/main.c    **** 
 667              		.loc 1 250 1 view .LVU226
 668 0052 15B0     		add	sp, sp, #84
 669              	.LCFI14:
 670              		.cfi_def_cfa_offset 12
 671              		@ sp needed
 672 0054 30BD     		pop	{r4, r5, pc}
 673              		.cfi_endproc
 674              	.LFE67:
 676              		.section	.text.FAULT_check,"ax",%progbits
 677              		.align	1
 678              		.global	FAULT_check
 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
 682              		.fpu softvfp
 684              	FAULT_check:
 685              	.LVL21:
 686              	.LFB73:
 496:Src/main.c    **** 
 497:Src/main.c    **** /* USER CODE BEGIN 4 */
 498:Src/main.c    **** 
 499:Src/main.c    **** /*void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *CanHandle)
 500:Src/main.c    **** {
 501:Src/main.c    ****   HAL_CAN_GetRxMessage(&hcan, CAN_RX_FIFO0, &RxHeader, RxData);
 502:Src/main.c    **** 
 503:Src/main.c    ****   uint16_t ID = RxHeader.StdId;
 504:Src/main.c    ****   uint32_t ExtID = RxHeader.ExtId;
 505:Src/main.c    **** 
 506:Src/main.c    ****   //TESTING
 507:Src/main.c    ****   if (ID == 0x123) {
 508:Src/main.c    **** 
 509:Src/main.c    ****     //HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 510:Src/main.c    ****     voltageState = RxData[0];
 511:Src/main.c    ****   }
 512:Src/main.c    ****   //TESTING
 513:Src/main.c    **** 
 514:Src/main.c    ****   if (ExtID == CHARGER_ID) {
 515:Src/main.c    ****     TIM2->CNT = 0; // reset timer
 516:Src/main.c    ****     HAL_TIM_Base_Start(&htim2);
 517:Src/main.c    ****     RxHeader.ExtId = 0;
 518:Src/main.c    ****     //HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 519:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, DEBUG_Pin, GPIO_PIN_SET);
 520:Src/main.c    ****   }
 521:Src/main.c    **** }*/
 522:Src/main.c    **** 
 523:Src/main.c    **** bool FAULT_check(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6], uint8_t bmsStatus[6]) {
 687              		.loc 1 523 92 is_stmt 1 view -0
 688              		.cfi_startproc
 689              		@ args = 104, pretend = 16, frame = 0
 690              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 25


 691              		.loc 1 523 92 is_stmt 0 view .LVU228
 692 0000 84B0     		sub	sp, sp, #16
 693              	.LCFI15:
 694              		.cfi_def_cfa_offset 16
 695 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 696              	.LCFI16:
 697              		.cfi_def_cfa_offset 48
 698              		.cfi_offset 3, -48
 699              		.cfi_offset 4, -44
 700              		.cfi_offset 5, -40
 701              		.cfi_offset 6, -36
 702              		.cfi_offset 7, -32
 703              		.cfi_offset 8, -28
 704              		.cfi_offset 9, -24
 705              		.cfi_offset 14, -20
 706 0006 00AF     		add	r7, sp, #0
 707              	.LCFI17:
 708              		.cfi_def_cfa_register 7
 709 0008 07F12004 		add	r4, r7, #32
 710 000c 84E80F00 		stm	r4, {r0, r1, r2, r3}
 711 0010 D7F88060 		ldr	r6, [r7, #128]
 712 0014 D7F88420 		ldr	r2, [r7, #132]
 524:Src/main.c    **** 
 525:Src/main.c    ****   bool BMS_FAULT = false;
 713              		.loc 1 525 3 is_stmt 1 view .LVU229
 714              	.LVL22:
 526:Src/main.c    ****   uint16_t cellVoltage;
 715              		.loc 1 526 3 view .LVU230
 527:Src/main.c    ****   bool cellConnection;
 716              		.loc 1 527 3 view .LVU231
 528:Src/main.c    ****   bool dataValid;
 717              		.loc 1 528 3 view .LVU232
 529:Src/main.c    ****   bool OT_fault;
 718              		.loc 1 529 3 view .LVU233
 530:Src/main.c    ****   bool DC_fault;
 719              		.loc 1 530 3 view .LVU234
 531:Src/main.c    ****   uint8_t board;
 720              		.loc 1 531 3 view .LVU235
 532:Src/main.c    ****   uint8_t error_count[cfg.numOfICs];
 721              		.loc 1 532 3 view .LVU236
 722              		.loc 1 532 26 is_stmt 0 view .LVU237
 723 0018 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 724              	.LVL23:
 725              		.loc 1 532 11 view .LVU238
 726 001c 0733     		adds	r3, r3, #7
 727              	.LVL24:
 728              		.loc 1 532 11 view .LVU239
 729 001e 03F4FC73 		and	r3, r3, #504
 730              	.LVL25:
 731              		.loc 1 532 11 view .LVU240
 732 0022 ADEB030D 		sub	sp, sp, r3
 733 0026 6D46     		mov	r5, sp
 734              	.LVL26:
 533:Src/main.c    **** 
 534:Src/main.c    ****   bmsStatus[0] = 0;
 735              		.loc 1 534 3 is_stmt 1 view .LVU241
 736              		.loc 1 534 16 is_stmt 0 view .LVU242
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 26


 737 0028 0024     		movs	r4, #0
 738              	.LVL27:
 739              		.loc 1 534 16 view .LVU243
 740 002a 1470     		strb	r4, [r2]
 535:Src/main.c    **** 
 536:Src/main.c    ****   for (uint8_t cell = 0; cell < 96; cell++) {
 741              		.loc 1 536 3 is_stmt 1 view .LVU244
 742              	.LBB6:
 743              		.loc 1 536 8 view .LVU245
 744              	.LVL28:
 745              		.loc 1 536 16 is_stmt 0 view .LVU246
 746 002c 2346     		mov	r3, r4
 747              		.loc 1 536 3 view .LVU247
 748 002e 06E0     		b	.L20
 749              	.LVL29:
 750              	.L26:
 537:Src/main.c    **** 
 538:Src/main.c    ****     cellVoltage = 0;
 539:Src/main.c    ****     cellVoltage = (uint16_t) (bmsData[cell][2]);
 540:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 541:Src/main.c    **** 		cellVoltage += (uint16_t) (bmsData[cell][3]);
 542:Src/main.c    **** 
 543:Src/main.c    ****     cellConnection = (bool) (bmsData[cell][1] & 0x01);
 544:Src/main.c    ****     dataValid = (bool) ((bmsData[cell][1] & 0x02) >> 1);
 545:Src/main.c    ****     OT_fault = (bool) ((bmsData[cell][1] & 0x10) >> 4);
 546:Src/main.c    ****     DC_fault = (bool) ((bmsData[cell][1] & 0x08) >> 3);
 547:Src/main.c    **** 
 548:Src/main.c    ****     //OV fault
 549:Src/main.c    ****     if (cellVoltage > cfg.OV_threshold) {
 550:Src/main.c    ****       BMS_FAULT = true;
 551:Src/main.c    ****       bmsStatus[0] |= 0x01; //fault byte
 552:Src/main.c    ****       bmsStatus[1] = cell + 1; //OV cell number
 553:Src/main.c    ****     }
 554:Src/main.c    **** 
 555:Src/main.c    ****     //UV fault
 556:Src/main.c    ****     if (cellVoltage < cfg.UV_threshold) {
 557:Src/main.c    ****       BMS_FAULT = true;
 558:Src/main.c    ****       bmsStatus[0] |= 0x02; //fault byte
 559:Src/main.c    ****       bmsStatus[2] = cell + 1; //UV cell number
 560:Src/main.c    ****     }
 561:Src/main.c    **** 
 562:Src/main.c    ****     //Cell DC fault
 563:Src/main.c    ****     if (cellConnection == 0) {
 564:Src/main.c    ****       BMS_FAULT = true;
 565:Src/main.c    ****       bmsStatus[0] |= 0x80; //fault byte
 566:Src/main.c    ****       bmsStatus[4] = cell + 1; //DC cell number
 567:Src/main.c    ****     }
 568:Src/main.c    **** 
 569:Src/main.c    ****     //OT fault
 570:Src/main.c    ****     if (OT_fault == 1) {
 571:Src/main.c    ****       BMS_FAULT = true;
 572:Src/main.c    ****       bmsStatus[0] |= 0x04; //fault byte
 573:Src/main.c    ****       bmsStatus[3] = cell + 1; //OT cell number
 574:Src/main.c    ****     }
 575:Src/main.c    **** 
 576:Src/main.c    ****     //Temp DC fault
 577:Src/main.c    ****     if (DC_fault == 1) {
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 27


 578:Src/main.c    ****       BMS_FAULT = true;
 579:Src/main.c    ****       bmsStatus[0] |= 0x10;
 580:Src/main.c    ****       bmsStatus[5] = cell + 1;
 581:Src/main.c    ****     }
 582:Src/main.c    **** 
 583:Src/main.c    ****     board = cell % cfg.numOfCellsPerIC;
 584:Src/main.c    **** 
 585:Src/main.c    ****     //Board DC fault
 586:Src/main.c    ****     if (dataValid == 0) {
 587:Src/main.c    ****       error_count[board]++;
 588:Src/main.c    **** 
 589:Src/main.c    ****       //if data is invalid for a board, every cell will report invalid
 590:Src/main.c    ****       if (error_count[board] > (cfg.numOfCellsPerIC * cfg.invalidPECcount)) {
 591:Src/main.c    ****         BMS_FAULT = true;
 592:Src/main.c    ****         bmsStatus[0] |= 0x20;
 593:Src/main.c    ****       }
 594:Src/main.c    ****     }
 595:Src/main.c    ****     if (dataValid == 1) {
 751              		.loc 1 595 5 is_stmt 1 view .LVU248
 752              		.loc 1 595 8 is_stmt 0 view .LVU249
 753 0030 BCF1000F 		cmp	ip, #0
 754 0034 01D0     		beq	.L27
 596:Src/main.c    ****       error_count[board] = 0;
 755              		.loc 1 596 7 is_stmt 1 view .LVU250
 756              		.loc 1 596 26 is_stmt 0 view .LVU251
 757 0036 0020     		movs	r0, #0
 758 0038 6854     		strb	r0, [r5, r1]
 759              	.L27:
 536:Src/main.c    **** 
 760              		.loc 1 536 41 discriminator 2 view .LVU252
 761 003a 0133     		adds	r3, r3, #1
 762              	.LVL30:
 536:Src/main.c    **** 
 763              		.loc 1 536 41 discriminator 2 view .LVU253
 764 003c DBB2     		uxtb	r3, r3
 765              	.LVL31:
 766              	.L20:
 536:Src/main.c    **** 
 767              		.loc 1 536 3 discriminator 1 view .LVU254
 768 003e 5F2B     		cmp	r3, #95
 769 0040 62D8     		bhi	.L32
 538:Src/main.c    ****     cellVoltage = (uint16_t) (bmsData[cell][2]);
 770              		.loc 1 538 5 is_stmt 1 view .LVU255
 771              	.LVL32:
 539:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 772              		.loc 1 539 5 view .LVU256
 539:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 773              		.loc 1 539 38 is_stmt 0 view .LVU257
 774 0042 03EB4300 		add	r0, r3, r3, lsl #1
 775 0046 4100     		lsls	r1, r0, #1
 776 0048 3144     		add	r1, r1, r6
 539:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 777              		.loc 1 539 17 view .LVU258
 778 004a 91F802C0 		ldrb	ip, [r1, #2]	@ zero_extendqisi2
 779              	.LVL33:
 540:Src/main.c    **** 		cellVoltage += (uint16_t) (bmsData[cell][3]);
 780              		.loc 1 540 5 is_stmt 1 view .LVU259
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 28


 541:Src/main.c    **** 
 781              		.loc 1 541 3 view .LVU260
 541:Src/main.c    **** 
 782              		.loc 1 541 43 is_stmt 0 view .LVU261
 783 004e C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 541:Src/main.c    **** 
 784              		.loc 1 541 15 view .LVU262
 785 0050 00EB0C20 		add	r0, r0, ip, lsl #8
 786 0054 80B2     		uxth	r0, r0
 787              	.LVL34:
 543:Src/main.c    ****     dataValid = (bool) ((bmsData[cell][1] & 0x02) >> 1);
 788              		.loc 1 543 5 is_stmt 1 view .LVU263
 543:Src/main.c    ****     dataValid = (bool) ((bmsData[cell][1] & 0x02) >> 1);
 789              		.loc 1 543 43 is_stmt 0 view .LVU264
 790 0056 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 791 0058 01F00108 		and	r8, r1, #1
 792              	.LVL35:
 544:Src/main.c    ****     OT_fault = (bool) ((bmsData[cell][1] & 0x10) >> 4);
 793              		.loc 1 544 5 is_stmt 1 view .LVU265
 794 005c 01F0020C 		and	ip, r1, #2
 795              	.LVL36:
 545:Src/main.c    ****     DC_fault = (bool) ((bmsData[cell][1] & 0x08) >> 3);
 796              		.loc 1 545 5 view .LVU266
 797 0060 01F0100E 		and	lr, r1, #16
 798              	.LVL37:
 546:Src/main.c    **** 
 799              		.loc 1 546 5 view .LVU267
 800 0064 01F00801 		and	r1, r1, #8
 801              	.LVL38:
 549:Src/main.c    ****       BMS_FAULT = true;
 802              		.loc 1 549 5 view .LVU268
 549:Src/main.c    ****       BMS_FAULT = true;
 803              		.loc 1 549 26 is_stmt 0 view .LVU269
 804 0068 B7F84690 		ldrh	r9, [r7, #70]
 549:Src/main.c    ****       BMS_FAULT = true;
 805              		.loc 1 549 8 view .LVU270
 806 006c 8145     		cmp	r9, r0
 807 006e 06D2     		bcs	.L21
 550:Src/main.c    ****       bmsStatus[0] |= 0x01; //fault byte
 808              		.loc 1 550 7 is_stmt 1 view .LVU271
 809              	.LVL39:
 551:Src/main.c    ****       bmsStatus[1] = cell + 1; //OV cell number
 810              		.loc 1 551 7 view .LVU272
 551:Src/main.c    ****       bmsStatus[1] = cell + 1; //OV cell number
 811              		.loc 1 551 20 is_stmt 0 view .LVU273
 812 0070 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 813 0072 44F00104 		orr	r4, r4, #1
 814 0076 1470     		strb	r4, [r2]
 552:Src/main.c    ****     }
 815              		.loc 1 552 7 is_stmt 1 view .LVU274
 552:Src/main.c    ****     }
 816              		.loc 1 552 27 is_stmt 0 view .LVU275
 817 0078 5C1C     		adds	r4, r3, #1
 552:Src/main.c    ****     }
 818              		.loc 1 552 20 view .LVU276
 819 007a 5470     		strb	r4, [r2, #1]
 550:Src/main.c    ****       bmsStatus[0] |= 0x01; //fault byte
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 29


 820              		.loc 1 550 17 view .LVU277
 821 007c 0124     		movs	r4, #1
 822              	.LVL40:
 823              	.L21:
 556:Src/main.c    ****       BMS_FAULT = true;
 824              		.loc 1 556 5 is_stmt 1 view .LVU278
 556:Src/main.c    ****       BMS_FAULT = true;
 825              		.loc 1 556 26 is_stmt 0 view .LVU279
 826 007e B7F84890 		ldrh	r9, [r7, #72]
 556:Src/main.c    ****       BMS_FAULT = true;
 827              		.loc 1 556 8 view .LVU280
 828 0082 8145     		cmp	r9, r0
 829 0084 06D9     		bls	.L22
 557:Src/main.c    ****       bmsStatus[0] |= 0x02; //fault byte
 830              		.loc 1 557 7 is_stmt 1 view .LVU281
 831              	.LVL41:
 558:Src/main.c    ****       bmsStatus[2] = cell + 1; //UV cell number
 832              		.loc 1 558 7 view .LVU282
 558:Src/main.c    ****       bmsStatus[2] = cell + 1; //UV cell number
 833              		.loc 1 558 20 is_stmt 0 view .LVU283
 834 0086 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 835              	.LVL42:
 558:Src/main.c    ****       bmsStatus[2] = cell + 1; //UV cell number
 836              		.loc 1 558 20 view .LVU284
 837 0088 40F00200 		orr	r0, r0, #2
 838 008c 1070     		strb	r0, [r2]
 559:Src/main.c    ****     }
 839              		.loc 1 559 7 is_stmt 1 view .LVU285
 559:Src/main.c    ****     }
 840              		.loc 1 559 27 is_stmt 0 view .LVU286
 841 008e 581C     		adds	r0, r3, #1
 559:Src/main.c    ****     }
 842              		.loc 1 559 20 view .LVU287
 843 0090 9070     		strb	r0, [r2, #2]
 557:Src/main.c    ****       bmsStatus[0] |= 0x02; //fault byte
 844              		.loc 1 557 17 view .LVU288
 845 0092 0124     		movs	r4, #1
 846              	.LVL43:
 847              	.L22:
 563:Src/main.c    ****       BMS_FAULT = true;
 848              		.loc 1 563 5 is_stmt 1 view .LVU289
 563:Src/main.c    ****       BMS_FAULT = true;
 849              		.loc 1 563 8 is_stmt 0 view .LVU290
 850 0094 B8F1000F 		cmp	r8, #0
 851 0098 06D1     		bne	.L23
 564:Src/main.c    ****       bmsStatus[0] |= 0x80; //fault byte
 852              		.loc 1 564 7 is_stmt 1 view .LVU291
 853              	.LVL44:
 565:Src/main.c    ****       bmsStatus[4] = cell + 1; //DC cell number
 854              		.loc 1 565 7 view .LVU292
 565:Src/main.c    ****       bmsStatus[4] = cell + 1; //DC cell number
 855              		.loc 1 565 20 is_stmt 0 view .LVU293
 856 009a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 857 009c 60F07F00 		orn	r0, r0, #127
 858 00a0 1070     		strb	r0, [r2]
 566:Src/main.c    ****     }
 859              		.loc 1 566 7 is_stmt 1 view .LVU294
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 30


 566:Src/main.c    ****     }
 860              		.loc 1 566 27 is_stmt 0 view .LVU295
 861 00a2 581C     		adds	r0, r3, #1
 566:Src/main.c    ****     }
 862              		.loc 1 566 20 view .LVU296
 863 00a4 1071     		strb	r0, [r2, #4]
 564:Src/main.c    ****       bmsStatus[0] |= 0x80; //fault byte
 864              		.loc 1 564 17 view .LVU297
 865 00a6 0124     		movs	r4, #1
 866              	.LVL45:
 867              	.L23:
 570:Src/main.c    ****       BMS_FAULT = true;
 868              		.loc 1 570 5 is_stmt 1 view .LVU298
 570:Src/main.c    ****       BMS_FAULT = true;
 869              		.loc 1 570 8 is_stmt 0 view .LVU299
 870 00a8 BEF1000F 		cmp	lr, #0
 871 00ac 06D0     		beq	.L24
 571:Src/main.c    ****       bmsStatus[0] |= 0x04; //fault byte
 872              		.loc 1 571 7 is_stmt 1 view .LVU300
 873              	.LVL46:
 572:Src/main.c    ****       bmsStatus[3] = cell + 1; //OT cell number
 874              		.loc 1 572 7 view .LVU301
 572:Src/main.c    ****       bmsStatus[3] = cell + 1; //OT cell number
 875              		.loc 1 572 20 is_stmt 0 view .LVU302
 876 00ae 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 877 00b0 40F00400 		orr	r0, r0, #4
 878 00b4 1070     		strb	r0, [r2]
 573:Src/main.c    ****     }
 879              		.loc 1 573 7 is_stmt 1 view .LVU303
 573:Src/main.c    ****     }
 880              		.loc 1 573 27 is_stmt 0 view .LVU304
 881 00b6 581C     		adds	r0, r3, #1
 573:Src/main.c    ****     }
 882              		.loc 1 573 20 view .LVU305
 883 00b8 D070     		strb	r0, [r2, #3]
 571:Src/main.c    ****       bmsStatus[0] |= 0x04; //fault byte
 884              		.loc 1 571 17 view .LVU306
 885 00ba 0124     		movs	r4, #1
 886              	.LVL47:
 887              	.L24:
 577:Src/main.c    ****       BMS_FAULT = true;
 888              		.loc 1 577 5 is_stmt 1 view .LVU307
 577:Src/main.c    ****       BMS_FAULT = true;
 889              		.loc 1 577 8 is_stmt 0 view .LVU308
 890 00bc 31B1     		cbz	r1, .L25
 578:Src/main.c    ****       bmsStatus[0] |= 0x10;
 891              		.loc 1 578 7 is_stmt 1 view .LVU309
 892              	.LVL48:
 579:Src/main.c    ****       bmsStatus[5] = cell + 1;
 893              		.loc 1 579 7 view .LVU310
 579:Src/main.c    ****       bmsStatus[5] = cell + 1;
 894              		.loc 1 579 20 is_stmt 0 view .LVU311
 895 00be 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 896              	.LVL49:
 579:Src/main.c    ****       bmsStatus[5] = cell + 1;
 897              		.loc 1 579 20 view .LVU312
 898 00c0 41F01001 		orr	r1, r1, #16
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 31


 899 00c4 1170     		strb	r1, [r2]
 580:Src/main.c    ****     }
 900              		.loc 1 580 7 is_stmt 1 view .LVU313
 580:Src/main.c    ****     }
 901              		.loc 1 580 27 is_stmt 0 view .LVU314
 902 00c6 591C     		adds	r1, r3, #1
 580:Src/main.c    ****     }
 903              		.loc 1 580 20 view .LVU315
 904 00c8 5171     		strb	r1, [r2, #5]
 578:Src/main.c    ****       bmsStatus[0] |= 0x10;
 905              		.loc 1 578 17 view .LVU316
 906 00ca 0124     		movs	r4, #1
 907              	.LVL50:
 908              	.L25:
 583:Src/main.c    **** 
 909              		.loc 1 583 5 is_stmt 1 view .LVU317
 583:Src/main.c    **** 
 910              		.loc 1 583 23 is_stmt 0 view .LVU318
 911 00cc 97F84200 		ldrb	r0, [r7, #66]	@ zero_extendqisi2
 583:Src/main.c    **** 
 912              		.loc 1 583 11 view .LVU319
 913 00d0 B3FBF0F1 		udiv	r1, r3, r0
 914 00d4 00FB1131 		mls	r1, r0, r1, r3
 915 00d8 C9B2     		uxtb	r1, r1
 916              	.LVL51:
 586:Src/main.c    ****       error_count[board]++;
 917              		.loc 1 586 5 is_stmt 1 view .LVU320
 586:Src/main.c    ****       error_count[board]++;
 918              		.loc 1 586 8 is_stmt 0 view .LVU321
 919 00da BCF1000F 		cmp	ip, #0
 920 00de A7D1     		bne	.L26
 587:Src/main.c    **** 
 921              		.loc 1 587 7 is_stmt 1 view .LVU322
 587:Src/main.c    **** 
 922              		.loc 1 587 18 is_stmt 0 view .LVU323
 923 00e0 15F801E0 		ldrb	lr, [r5, r1]	@ zero_extendqisi2
 924              	.LVL52:
 587:Src/main.c    **** 
 925              		.loc 1 587 25 view .LVU324
 926 00e4 0EF1010E 		add	lr, lr, #1
 927 00e8 5FFA8EFE 		uxtb	lr, lr
 928 00ec 05F801E0 		strb	lr, [r5, r1]
 590:Src/main.c    ****         BMS_FAULT = true;
 929              		.loc 1 590 7 is_stmt 1 view .LVU325
 590:Src/main.c    ****         BMS_FAULT = true;
 930              		.loc 1 590 58 is_stmt 0 view .LVU326
 931 00f0 97F85280 		ldrb	r8, [r7, #82]	@ zero_extendqisi2
 932              	.LVL53:
 590:Src/main.c    ****         BMS_FAULT = true;
 933              		.loc 1 590 53 view .LVU327
 934 00f4 08FB00F0 		mul	r0, r8, r0
 590:Src/main.c    ****         BMS_FAULT = true;
 935              		.loc 1 590 10 view .LVU328
 936 00f8 8645     		cmp	lr, r0
 937 00fa 99DD     		ble	.L26
 591:Src/main.c    ****         bmsStatus[0] |= 0x20;
 938              		.loc 1 591 9 is_stmt 1 view .LVU329
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 32


 939              	.LVL54:
 592:Src/main.c    ****       }
 940              		.loc 1 592 9 view .LVU330
 592:Src/main.c    ****       }
 941              		.loc 1 592 22 is_stmt 0 view .LVU331
 942 00fc 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 943 00fe 40F02000 		orr	r0, r0, #32
 944 0102 1070     		strb	r0, [r2]
 591:Src/main.c    ****         bmsStatus[0] |= 0x20;
 945              		.loc 1 591 19 view .LVU332
 946 0104 0124     		movs	r4, #1
 947 0106 93E7     		b	.L26
 948              	.LVL55:
 949              	.L32:
 591:Src/main.c    ****         bmsStatus[0] |= 0x20;
 950              		.loc 1 591 19 view .LVU333
 951              	.LBE6:
 597:Src/main.c    ****     }
 598:Src/main.c    **** 
 599:Src/main.c    ****     //Charger comm fault
 600:Src/main.c    ****     /*count = TIM2->CNT;
 601:Src/main.c    **** 
 602:Src/main.c    ****     if (count > 20000) {
 603:Src/main.c    ****       BMS_FAULT = true;
 604:Src/main.c    ****       HAL_TIM_Base_Stop(&htim2);
 605:Src/main.c    ****     }*/
 606:Src/main.c    ****   }
 607:Src/main.c    **** 
 608:Src/main.c    ****   if (BMS_FAULT == false)
 952              		.loc 1 608 3 is_stmt 1 view .LVU334
 953              		.loc 1 608 6 is_stmt 0 view .LVU335
 954 0108 34B1     		cbz	r4, .L33
 955              	.LVL56:
 956              	.L29:
 609:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 610:Src/main.c    ****   if (BMS_FAULT == true)
 957              		.loc 1 610 3 is_stmt 1 view .LVU336
 958              		.loc 1 610 6 is_stmt 0 view .LVU337
 959 010a 64B9     		cbnz	r4, .L34
 960              	.L30:
 611:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_SET);
 612:Src/main.c    ****   
 613:Src/main.c    ****   return BMS_FAULT;
 961              		.loc 1 613 3 is_stmt 1 view .LVU338
 614:Src/main.c    **** }
 962              		.loc 1 614 1 is_stmt 0 view .LVU339
 963 010c 2046     		mov	r0, r4
 964 010e BD46     		mov	sp, r7
 965              	.LCFI18:
 966              		.cfi_remember_state
 967              		.cfi_def_cfa_register 13
 968              		@ sp needed
 969 0110 BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 970              	.LCFI19:
 971              		.cfi_restore 14
 972              		.cfi_restore 9
 973              		.cfi_restore 8
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 33


 974              		.cfi_restore 7
 975              		.cfi_restore 6
 976              		.cfi_restore 5
 977              		.cfi_restore 4
 978              		.cfi_restore 3
 979              		.cfi_def_cfa_offset 16
 980              	.LVL57:
 981              		.loc 1 614 1 view .LVU340
 982 0114 04B0     		add	sp, sp, #16
 983              	.LCFI20:
 984              		.cfi_def_cfa_offset 0
 985 0116 7047     		bx	lr
 986              	.LVL58:
 987              	.L33:
 988              	.LCFI21:
 989              		.cfi_restore_state
 609:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 990              		.loc 1 609 5 is_stmt 1 view .LVU341
 991 0118 0022     		movs	r2, #0
 992 011a 4FF40071 		mov	r1, #512
 993 011e 0548     		ldr	r0, .L35
 994 0120 FFF7FEFF 		bl	HAL_GPIO_WritePin
 995              	.LVL59:
 609:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 996              		.loc 1 609 5 is_stmt 0 view .LVU342
 997 0124 F1E7     		b	.L29
 998              	.L34:
 611:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_SET);
 999              		.loc 1 611 5 is_stmt 1 view .LVU343
 1000 0126 0122     		movs	r2, #1
 1001 0128 4FF40071 		mov	r1, #512
 1002 012c 0148     		ldr	r0, .L35
 1003 012e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1004              	.LVL60:
 1005 0132 EBE7     		b	.L30
 1006              	.L36:
 1007              		.align	2
 1008              	.L35:
 1009 0134 000C0140 		.word	1073810432
 1010              		.cfi_endproc
 1011              	.LFE73:
 1013              		.global	__aeabi_i2f
 1014              		.global	__aeabi_fdiv
 1015              		.global	__aeabi_f2uiz
 1016              		.section	.text.balancingThreshold,"ax",%progbits
 1017              		.align	1
 1018              		.global	balancingThreshold
 1019              		.syntax unified
 1020              		.thumb
 1021              		.thumb_func
 1022              		.fpu softvfp
 1024              	balancingThreshold:
 1025              	.LFB75:
 615:Src/main.c    **** 
 616:Src/main.c    **** void setDischarge(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6], bool cellDischarge[12][8], bo
 617:Src/main.c    **** 
 618:Src/main.c    ****   uint16_t threshold;
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 34


 619:Src/main.c    ****   uint16_t cellVoltage;
 620:Src/main.c    ****   uint8_t board;
 621:Src/main.c    ****   uint8_t cell;
 622:Src/main.c    **** 	chargeRate = 2; // initialize the charging current to normal operation
 623:Src/main.c    **** 
 624:Src/main.c    ****   // if there is any type of fault, stop charging
 625:Src/main.c    ****   if (bmsFault) {
 626:Src/main.c    ****     chargeRate = 0;
 627:Src/main.c    ****     //return 0;
 628:Src/main.c    ****   }
 629:Src/main.c    **** 
 630:Src/main.c    ****   for (uint8_t i = 0; i < 96; i++) {
 631:Src/main.c    **** 
 632:Src/main.c    ****     cellVoltage = 0;
 633:Src/main.c    ****     cellVoltage = (uint16_t) (bmsData[i][2]);
 634:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 635:Src/main.c    **** 		cellVoltage += (uint16_t) (bmsData[i][3]);
 636:Src/main.c    **** 
 637:Src/main.c    ****     board = i / cfg.numOfCellsPerIC;
 638:Src/main.c    ****     cell = i % cfg.numOfCellsPerIC;
 639:Src/main.c    **** 
 640:Src/main.c    ****     bmsData[i][1] &= 0x5F; //charging state = 2
 641:Src/main.c    **** 
 642:Src/main.c    ****     // if any cell voltage is much greater than the minimum (>200mV), stop charging and discharge t
 643:Src/main.c    ****     if (cellVoltage > (minimum + cfg.max_difference)) {
 644:Src/main.c    ****       chargeRate = 0;
 645:Src/main.c    ****       fullDischarge[board][cell] = 1;
 646:Src/main.c    ****       bmsData[i][1] &= 0x7F; //charging state = 3
 647:Src/main.c    ****     }
 648:Src/main.c    ****     // if any cell voltage is greater than some absolute threshold (4.18V), stop charging and disch
 649:Src/main.c    ****     // could discharge to a fixed value (4.15V) instead
 650:Src/main.c    ****     if (cellVoltage > cfg.stopCharge_threshold) {
 651:Src/main.c    ****       chargeRate = 0;
 652:Src/main.c    ****       fullDischarge[board][cell] = 1;
 653:Src/main.c    ****       bmsData[i][1] &= 0x9F; //charging state = 4
 654:Src/main.c    ****     }
 655:Src/main.c    **** 
 656:Src/main.c    ****     // if still charging AND cells above ~3V
 657:Src/main.c    ****     if ((chargeRate != 0) && (minimum > 3000)) {
 658:Src/main.c    **** 
 659:Src/main.c    ****       // if any cell is above some absolute threshold, charge slower 
 660:Src/main.c    ****       if (cellVoltage > cfg.slowCharge_threshold)
 661:Src/main.c    ****         chargeRate = 1;
 662:Src/main.c    **** 
 663:Src/main.c    ****       // determine the relative balancing threshold based on minimum voltage
 664:Src/main.c    ****       threshold = balancingThreshold(cfg);
 665:Src/main.c    **** 
 666:Src/main.c    ****       if (cellVoltage > (minimum + threshold)) {
 667:Src/main.c    ****         cellDischarge[board][cell] = 1;
 668:Src/main.c    ****         bmsData[i][1] &= 0x2F; //charging state = 1
 669:Src/main.c    ****       }
 670:Src/main.c    ****       else {
 671:Src/main.c    ****         cellDischarge[board][cell] = 0;
 672:Src/main.c    ****         bmsData[i][1] &= 0x1F; //charging state = 0
 673:Src/main.c    ****       }
 674:Src/main.c    ****     }
 675:Src/main.c    **** 	}
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 35


 676:Src/main.c    **** }
 677:Src/main.c    **** 
 678:Src/main.c    **** uint16_t balancingThreshold(BMSconfigStructTypedef cfg) {
 1026              		.loc 1 678 57 view -0
 1027              		.cfi_startproc
 1028              		@ args = 96, pretend = 16, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030 0000 84B0     		sub	sp, sp, #16
 1031              	.LCFI22:
 1032              		.cfi_def_cfa_offset 16
 1033 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1034              	.LCFI23:
 1035              		.cfi_def_cfa_offset 40
 1036              		.cfi_offset 3, -40
 1037              		.cfi_offset 4, -36
 1038              		.cfi_offset 5, -32
 1039              		.cfi_offset 6, -28
 1040              		.cfi_offset 7, -24
 1041              		.cfi_offset 14, -20
 1042 0004 06AC     		add	r4, sp, #24
 1043 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 679:Src/main.c    **** 
 680:Src/main.c    ****   if (minimum > cfg.start_scaling) {
 1044              		.loc 1 680 3 view .LVU345
 1045              		.loc 1 680 20 is_stmt 0 view .LVU346
 1046 000a BDF84E60 		ldrh	r6, [sp, #78]
 1047              		.loc 1 680 15 view .LVU347
 1048 000e 124B     		ldr	r3, .L41
 1049 0010 1C88     		ldrh	r4, [r3]
 1050              		.loc 1 680 6 view .LVU348
 1051 0012 A642     		cmp	r6, r4
 1052 0014 1DD2     		bcs	.L38
 1053              	.LBB7:
 681:Src/main.c    ****     // min1 = 4.1V   threshold1 = 50mV
 682:Src/main.c    ****     // min2 = 4.16V  threshold2 = 10mV
 683:Src/main.c    **** 
 684:Src/main.c    ****     // m = (threshold2 - threshold1) / (min2 - min1)
 685:Src/main.c    ****     // linear = m * (minimum - min1) + threshold1
 686:Src/main.c    **** 
 687:Src/main.c    ****     float m;
 1054              		.loc 1 687 5 is_stmt 1 view .LVU349
 688:Src/main.c    ****     uint16_t linear;
 1055              		.loc 1 688 5 view .LVU350
 689:Src/main.c    **** 
 690:Src/main.c    ****     //  ()
 691:Src/main.c    ****     m = ((float) (cfg.scale_to - cfg.balancing_difference)) / (cfg.stop_scaling - cfg.start_scaling
 1056              		.loc 1 691 5 view .LVU351
 1057              		.loc 1 691 22 is_stmt 0 view .LVU352
 1058 0016 BDF85200 		ldrh	r0, [sp, #82]
 1059              		.loc 1 691 37 view .LVU353
 1060 001a BDF84850 		ldrh	r5, [sp, #72]
 1061              		.loc 1 691 10 view .LVU354
 1062 001e 401B     		subs	r0, r0, r5
 1063 0020 FFF7FEFF 		bl	__aeabi_i2f
 1064              	.LVL61:
 1065 0024 0746     		mov	r7, r0
 1066              		.loc 1 691 67 view .LVU355
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 36


 1067 0026 BDF85000 		ldrh	r0, [sp, #80]
 1068              		.loc 1 691 61 view .LVU356
 1069 002a 801B     		subs	r0, r0, r6
 1070 002c FFF7FEFF 		bl	__aeabi_i2f
 1071              	.LVL62:
 1072              		.loc 1 691 7 view .LVU357
 1073 0030 0146     		mov	r1, r0
 1074 0032 3846     		mov	r0, r7
 1075 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1076              	.LVL63:
 692:Src/main.c    ****     linear = (uint16_t) m * (minimum - cfg.start_scaling) + cfg.balancing_difference;
 1077              		.loc 1 692 5 is_stmt 1 view .LVU358
 1078              		.loc 1 692 14 is_stmt 0 view .LVU359
 1079 0038 FFF7FEFF 		bl	__aeabi_f2uiz
 1080              	.LVL64:
 1081              		.loc 1 692 14 view .LVU360
 1082 003c 80B2     		uxth	r0, r0
 1083              		.loc 1 692 59 view .LVU361
 1084 003e A41B     		subs	r4, r4, r6
 1085 0040 04FB00F4 		mul	r4, r4, r0
 1086 0044 A4B2     		uxth	r4, r4
 1087              		.loc 1 692 12 view .LVU362
 1088 0046 2C44     		add	r4, r4, r5
 1089 0048 A0B2     		uxth	r0, r4
 1090              	.LVL65:
 693:Src/main.c    **** 
 694:Src/main.c    ****     return linear;
 1091              		.loc 1 694 5 is_stmt 1 view .LVU363
 1092              	.L39:
 1093              		.loc 1 694 5 is_stmt 0 view .LVU364
 1094              	.LBE7:
 695:Src/main.c    **** 
 696:Src/main.c    ****   }
 697:Src/main.c    ****   if (minimum <= cfg.start_scaling)
 698:Src/main.c    ****     return cfg.balancing_difference; 
 699:Src/main.c    **** 
 700:Src/main.c    ****   return 0;
 701:Src/main.c    **** 
 702:Src/main.c    **** }
 1095              		.loc 1 702 1 view .LVU365
 1096 004a BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1097              	.LCFI24:
 1098              		.cfi_remember_state
 1099              		.cfi_restore 14
 1100              		.cfi_restore 7
 1101              		.cfi_restore 6
 1102              		.cfi_restore 5
 1103              		.cfi_restore 4
 1104              		.cfi_restore 3
 1105              		.cfi_def_cfa_offset 16
 1106 004e 04B0     		add	sp, sp, #16
 1107              	.LCFI25:
 1108              		.cfi_def_cfa_offset 0
 1109 0050 7047     		bx	lr
 1110              	.L38:
 1111              	.LCFI26:
 1112              		.cfi_restore_state
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 37


 697:Src/main.c    ****     return cfg.balancing_difference; 
 1113              		.loc 1 697 3 is_stmt 1 view .LVU366
 698:Src/main.c    **** 
 1114              		.loc 1 698 5 view .LVU367
 698:Src/main.c    **** 
 1115              		.loc 1 698 15 is_stmt 0 view .LVU368
 1116 0052 BDF84800 		ldrh	r0, [sp, #72]
 1117 0056 F8E7     		b	.L39
 1118              	.L42:
 1119              		.align	2
 1120              	.L41:
 1121 0058 00000000 		.word	minimum
 1122              		.cfi_endproc
 1123              	.LFE75:
 1125              		.section	.text.setDischarge,"ax",%progbits
 1126              		.align	1
 1127              		.global	setDischarge
 1128              		.syntax unified
 1129              		.thumb
 1130              		.thumb_func
 1131              		.fpu softvfp
 1133              	setDischarge:
 1134              	.LVL66:
 1135              	.LFB74:
 616:Src/main.c    **** 
 1136              		.loc 1 616 140 is_stmt 1 view -0
 1137              		.cfi_startproc
 1138              		@ args = 112, pretend = 16, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 616:Src/main.c    **** 
 1140              		.loc 1 616 140 is_stmt 0 view .LVU370
 1141 0000 84B0     		sub	sp, sp, #16
 1142              	.LCFI27:
 1143              		.cfi_def_cfa_offset 16
 1144 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1145              	.LCFI28:
 1146              		.cfi_def_cfa_offset 52
 1147              		.cfi_offset 4, -52
 1148              		.cfi_offset 5, -48
 1149              		.cfi_offset 6, -44
 1150              		.cfi_offset 7, -40
 1151              		.cfi_offset 8, -36
 1152              		.cfi_offset 9, -32
 1153              		.cfi_offset 10, -28
 1154              		.cfi_offset 11, -24
 1155              		.cfi_offset 14, -20
 1156 0006 95B0     		sub	sp, sp, #84
 1157              	.LCFI29:
 1158              		.cfi_def_cfa_offset 136
 1159 0008 1EAC     		add	r4, sp, #120
 1160 000a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1161 000e DDF8D8A0 		ldr	r10, [sp, #216]
 1162 0012 9DF8E030 		ldrb	r3, [sp, #224]	@ zero_extendqisi2
 1163 0016 DDF8E4B0 		ldr	fp, [sp, #228]
 618:Src/main.c    ****   uint16_t cellVoltage;
 1164              		.loc 1 618 3 is_stmt 1 view .LVU371
 619:Src/main.c    ****   uint8_t board;
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 38


 1165              		.loc 1 619 3 view .LVU372
 620:Src/main.c    ****   uint8_t cell;
 1166              		.loc 1 620 3 view .LVU373
 621:Src/main.c    **** 	chargeRate = 2; // initialize the charging current to normal operation
 1167              		.loc 1 621 3 view .LVU374
 622:Src/main.c    **** 
 1168              		.loc 1 622 2 view .LVU375
 622:Src/main.c    **** 
 1169              		.loc 1 622 13 is_stmt 0 view .LVU376
 1170 001a 3E4A     		ldr	r2, .L54
 1171 001c 0221     		movs	r1, #2
 1172 001e 1170     		strb	r1, [r2]
 625:Src/main.c    ****     chargeRate = 0;
 1173              		.loc 1 625 3 is_stmt 1 view .LVU377
 625:Src/main.c    ****     chargeRate = 0;
 1174              		.loc 1 625 6 is_stmt 0 view .LVU378
 1175 0020 13B1     		cbz	r3, .L44
 626:Src/main.c    ****     //return 0;
 1176              		.loc 1 626 5 is_stmt 1 view .LVU379
 626:Src/main.c    ****     //return 0;
 1177              		.loc 1 626 16 is_stmt 0 view .LVU380
 1178 0022 1346     		mov	r3, r2
 1179 0024 0022     		movs	r2, #0
 1180 0026 1A70     		strb	r2, [r3]
 1181              	.L44:
 616:Src/main.c    **** 
 1182              		.loc 1 616 140 discriminator 1 view .LVU381
 1183 0028 0025     		movs	r5, #0
 1184 002a 0BE0     		b	.L45
 1185              	.LVL67:
 1186              	.L50:
 1187              	.LBB8:
 671:Src/main.c    ****         bmsData[i][1] &= 0x1F; //charging state = 0
 1188              		.loc 1 671 9 is_stmt 1 view .LVU382
 671:Src/main.c    ****         bmsData[i][1] &= 0x1F; //charging state = 0
 1189              		.loc 1 671 22 is_stmt 0 view .LVU383
 1190 002c 379B     		ldr	r3, [sp, #220]
 1191 002e 03EBC808 		add	r8, r3, r8, lsl #3
 1192              	.LVL68:
 671:Src/main.c    ****         bmsData[i][1] &= 0x1F; //charging state = 0
 1193              		.loc 1 671 36 view .LVU384
 1194 0032 0023     		movs	r3, #0
 1195 0034 08F80730 		strb	r3, [r8, r7]
 672:Src/main.c    ****       }
 1196              		.loc 1 672 9 is_stmt 1 view .LVU385
 672:Src/main.c    ****       }
 1197              		.loc 1 672 23 is_stmt 0 view .LVU386
 1198 0038 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1199 003a 03F01F03 		and	r3, r3, #31
 1200 003e 6370     		strb	r3, [r4, #1]
 1201              	.L48:
 630:Src/main.c    **** 
 1202              		.loc 1 630 32 discriminator 2 view .LVU387
 1203 0040 0135     		adds	r5, r5, #1
 1204              	.LVL69:
 630:Src/main.c    **** 
 1205              		.loc 1 630 32 discriminator 2 view .LVU388
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 39


 1206 0042 EDB2     		uxtb	r5, r5
 1207              	.LVL70:
 1208              	.L45:
 630:Src/main.c    **** 
 1209              		.loc 1 630 3 discriminator 1 view .LVU389
 1210 0044 5F2D     		cmp	r5, #95
 1211 0046 5FD8     		bhi	.L53
 632:Src/main.c    ****     cellVoltage = (uint16_t) (bmsData[i][2]);
 1212              		.loc 1 632 5 is_stmt 1 view .LVU390
 1213              	.LVL71:
 633:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 1214              		.loc 1 633 5 view .LVU391
 633:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 1215              		.loc 1 633 38 is_stmt 0 view .LVU392
 1216 0048 05EB4503 		add	r3, r5, r5, lsl #1
 1217 004c 5C00     		lsls	r4, r3, #1
 1218 004e 5444     		add	r4, r4, r10
 633:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 1219              		.loc 1 633 17 view .LVU393
 1220 0050 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1221              	.LVL72:
 634:Src/main.c    **** 		cellVoltage += (uint16_t) (bmsData[i][3]);
 1222              		.loc 1 634 5 is_stmt 1 view .LVU394
 635:Src/main.c    **** 
 1223              		.loc 1 635 3 view .LVU395
 635:Src/main.c    **** 
 1224              		.loc 1 635 40 is_stmt 0 view .LVU396
 1225 0052 E678     		ldrb	r6, [r4, #3]	@ zero_extendqisi2
 635:Src/main.c    **** 
 1226              		.loc 1 635 15 view .LVU397
 1227 0054 06EB0326 		add	r6, r6, r3, lsl #8
 1228 0058 B6B2     		uxth	r6, r6
 1229              	.LVL73:
 637:Src/main.c    ****     cell = i % cfg.numOfCellsPerIC;
 1230              		.loc 1 637 5 is_stmt 1 view .LVU398
 637:Src/main.c    ****     cell = i % cfg.numOfCellsPerIC;
 1231              		.loc 1 637 20 is_stmt 0 view .LVU399
 1232 005a 9DF89A30 		ldrb	r3, [sp, #154]	@ zero_extendqisi2
 637:Src/main.c    ****     cell = i % cfg.numOfCellsPerIC;
 1233              		.loc 1 637 11 view .LVU400
 1234 005e B5FBF3F7 		udiv	r7, r5, r3
 1235 0062 5FFA87F8 		uxtb	r8, r7
 1236              	.LVL74:
 638:Src/main.c    **** 
 1237              		.loc 1 638 5 is_stmt 1 view .LVU401
 638:Src/main.c    **** 
 1238              		.loc 1 638 10 is_stmt 0 view .LVU402
 1239 0066 03FB1757 		mls	r7, r3, r7, r5
 1240 006a FFB2     		uxtb	r7, r7
 1241              	.LVL75:
 640:Src/main.c    **** 
 1242              		.loc 1 640 5 is_stmt 1 view .LVU403
 640:Src/main.c    **** 
 1243              		.loc 1 640 19 is_stmt 0 view .LVU404
 1244 006c 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1245 006e 03F05F03 		and	r3, r3, #95
 1246 0072 6370     		strb	r3, [r4, #1]
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 40


 643:Src/main.c    ****       chargeRate = 0;
 1247              		.loc 1 643 5 is_stmt 1 view .LVU405
 643:Src/main.c    ****       chargeRate = 0;
 1248              		.loc 1 643 37 is_stmt 0 view .LVU406
 1249 0074 BDF8A620 		ldrh	r2, [sp, #166]
 643:Src/main.c    ****       chargeRate = 0;
 1250              		.loc 1 643 32 view .LVU407
 1251 0078 274B     		ldr	r3, .L54+4
 1252 007a 1B88     		ldrh	r3, [r3]
 1253 007c 1344     		add	r3, r3, r2
 643:Src/main.c    ****       chargeRate = 0;
 1254              		.loc 1 643 8 view .LVU408
 1255 007e 9E42     		cmp	r6, r3
 1256 0080 0ADD     		ble	.L46
 644:Src/main.c    ****       fullDischarge[board][cell] = 1;
 1257              		.loc 1 644 7 is_stmt 1 view .LVU409
 644:Src/main.c    ****       fullDischarge[board][cell] = 1;
 1258              		.loc 1 644 18 is_stmt 0 view .LVU410
 1259 0082 244B     		ldr	r3, .L54
 1260 0084 0022     		movs	r2, #0
 1261 0086 1A70     		strb	r2, [r3]
 645:Src/main.c    ****       bmsData[i][1] &= 0x7F; //charging state = 3
 1262              		.loc 1 645 7 is_stmt 1 view .LVU411
 645:Src/main.c    ****       bmsData[i][1] &= 0x7F; //charging state = 3
 1263              		.loc 1 645 20 is_stmt 0 view .LVU412
 1264 0088 0BEBC803 		add	r3, fp, r8, lsl #3
 645:Src/main.c    ****       bmsData[i][1] &= 0x7F; //charging state = 3
 1265              		.loc 1 645 34 view .LVU413
 1266 008c 0122     		movs	r2, #1
 1267 008e DA55     		strb	r2, [r3, r7]
 646:Src/main.c    ****     }
 1268              		.loc 1 646 7 is_stmt 1 view .LVU414
 646:Src/main.c    ****     }
 1269              		.loc 1 646 21 is_stmt 0 view .LVU415
 1270 0090 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1271 0092 03F07F03 		and	r3, r3, #127
 1272 0096 6370     		strb	r3, [r4, #1]
 1273              	.L46:
 650:Src/main.c    ****       chargeRate = 0;
 1274              		.loc 1 650 5 is_stmt 1 view .LVU416
 650:Src/main.c    ****       chargeRate = 0;
 1275              		.loc 1 650 26 is_stmt 0 view .LVU417
 1276 0098 BDF8A430 		ldrh	r3, [sp, #164]
 650:Src/main.c    ****       chargeRate = 0;
 1277              		.loc 1 650 8 view .LVU418
 1278 009c B342     		cmp	r3, r6
 1279 009e 0AD2     		bcs	.L47
 651:Src/main.c    ****       fullDischarge[board][cell] = 1;
 1280              		.loc 1 651 7 is_stmt 1 view .LVU419
 651:Src/main.c    ****       fullDischarge[board][cell] = 1;
 1281              		.loc 1 651 18 is_stmt 0 view .LVU420
 1282 00a0 1C4B     		ldr	r3, .L54
 1283 00a2 0022     		movs	r2, #0
 1284 00a4 1A70     		strb	r2, [r3]
 652:Src/main.c    ****       bmsData[i][1] &= 0x9F; //charging state = 4
 1285              		.loc 1 652 7 is_stmt 1 view .LVU421
 652:Src/main.c    ****       bmsData[i][1] &= 0x9F; //charging state = 4
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 41


 1286              		.loc 1 652 20 is_stmt 0 view .LVU422
 1287 00a6 0BEBC803 		add	r3, fp, r8, lsl #3
 652:Src/main.c    ****       bmsData[i][1] &= 0x9F; //charging state = 4
 1288              		.loc 1 652 34 view .LVU423
 1289 00aa 0122     		movs	r2, #1
 1290 00ac DA55     		strb	r2, [r3, r7]
 653:Src/main.c    ****     }
 1291              		.loc 1 653 7 is_stmt 1 view .LVU424
 653:Src/main.c    ****     }
 1292              		.loc 1 653 21 is_stmt 0 view .LVU425
 1293 00ae 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1294 00b0 23F06003 		bic	r3, r3, #96
 1295 00b4 6370     		strb	r3, [r4, #1]
 1296              	.L47:
 657:Src/main.c    **** 
 1297              		.loc 1 657 5 is_stmt 1 view .LVU426
 657:Src/main.c    **** 
 1298              		.loc 1 657 21 is_stmt 0 view .LVU427
 1299 00b6 174B     		ldr	r3, .L54
 1300 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 657:Src/main.c    **** 
 1301              		.loc 1 657 8 view .LVU428
 1302 00ba 002B     		cmp	r3, #0
 1303 00bc C0D0     		beq	.L48
 657:Src/main.c    **** 
 1304              		.loc 1 657 39 discriminator 1 view .LVU429
 1305 00be 164B     		ldr	r3, .L54+4
 1306 00c0 B3F80090 		ldrh	r9, [r3]
 657:Src/main.c    **** 
 1307              		.loc 1 657 27 discriminator 1 view .LVU430
 1308 00c4 40F6B833 		movw	r3, #3000
 1309 00c8 9945     		cmp	r9, r3
 1310 00ca B9D9     		bls	.L48
 660:Src/main.c    ****         chargeRate = 1;
 1311              		.loc 1 660 7 is_stmt 1 view .LVU431
 660:Src/main.c    ****         chargeRate = 1;
 1312              		.loc 1 660 28 is_stmt 0 view .LVU432
 1313 00cc BDF8A230 		ldrh	r3, [sp, #162]
 660:Src/main.c    ****         chargeRate = 1;
 1314              		.loc 1 660 10 view .LVU433
 1315 00d0 B342     		cmp	r3, r6
 1316 00d2 02D2     		bcs	.L49
 661:Src/main.c    **** 
 1317              		.loc 1 661 9 is_stmt 1 view .LVU434
 661:Src/main.c    **** 
 1318              		.loc 1 661 20 is_stmt 0 view .LVU435
 1319 00d4 0F4B     		ldr	r3, .L54
 1320 00d6 0122     		movs	r2, #1
 1321 00d8 1A70     		strb	r2, [r3]
 1322              	.L49:
 664:Src/main.c    **** 
 1323              		.loc 1 664 7 is_stmt 1 view .LVU436
 664:Src/main.c    **** 
 1324              		.loc 1 664 19 is_stmt 0 view .LVU437
 1325 00da 4E22     		movs	r2, #78
 1326 00dc 22A9     		add	r1, sp, #136
 1327 00de 6846     		mov	r0, sp
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 42


 1328 00e0 FFF7FEFF 		bl	memcpy
 1329              	.LVL76:
 1330 00e4 1EAB     		add	r3, sp, #120
 1331 00e6 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1332 00e8 FFF7FEFF 		bl	balancingThreshold
 1333              	.LVL77:
 666:Src/main.c    ****         cellDischarge[board][cell] = 1;
 1334              		.loc 1 666 7 is_stmt 1 view .LVU438
 666:Src/main.c    ****         cellDischarge[board][cell] = 1;
 1335              		.loc 1 666 34 is_stmt 0 view .LVU439
 1336 00ec 4844     		add	r0, r0, r9
 1337              	.LVL78:
 666:Src/main.c    ****         cellDischarge[board][cell] = 1;
 1338              		.loc 1 666 10 view .LVU440
 1339 00ee 8642     		cmp	r6, r0
 1340 00f0 9CDD     		ble	.L50
 667:Src/main.c    ****         bmsData[i][1] &= 0x2F; //charging state = 1
 1341              		.loc 1 667 9 is_stmt 1 view .LVU441
 667:Src/main.c    ****         bmsData[i][1] &= 0x2F; //charging state = 1
 1342              		.loc 1 667 22 is_stmt 0 view .LVU442
 1343 00f2 379B     		ldr	r3, [sp, #220]
 1344 00f4 03EBC808 		add	r8, r3, r8, lsl #3
 1345              	.LVL79:
 667:Src/main.c    ****         bmsData[i][1] &= 0x2F; //charging state = 1
 1346              		.loc 1 667 36 view .LVU443
 1347 00f8 0123     		movs	r3, #1
 1348 00fa 08F80730 		strb	r3, [r8, r7]
 668:Src/main.c    ****       }
 1349              		.loc 1 668 9 is_stmt 1 view .LVU444
 668:Src/main.c    ****       }
 1350              		.loc 1 668 23 is_stmt 0 view .LVU445
 1351 00fe 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1352 0100 03F02F03 		and	r3, r3, #47
 1353 0104 6370     		strb	r3, [r4, #1]
 1354 0106 9BE7     		b	.L48
 1355              	.LVL80:
 1356              	.L53:
 668:Src/main.c    ****       }
 1357              		.loc 1 668 23 view .LVU446
 1358              	.LBE8:
 676:Src/main.c    **** 
 1359              		.loc 1 676 1 view .LVU447
 1360 0108 15B0     		add	sp, sp, #84
 1361              	.LCFI30:
 1362              		.cfi_def_cfa_offset 52
 1363              		@ sp needed
 1364 010a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1365              	.LCFI31:
 1366              		.cfi_restore 14
 1367              		.cfi_restore 11
 1368              		.cfi_restore 10
 1369              		.cfi_restore 9
 1370              		.cfi_restore 8
 1371              		.cfi_restore 7
 1372              		.cfi_restore 6
 1373              		.cfi_restore 5
 1374              		.cfi_restore 4
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 43


 1375              		.cfi_def_cfa_offset 16
 1376              	.LVL81:
 676:Src/main.c    **** 
 1377              		.loc 1 676 1 view .LVU448
 1378 010e 04B0     		add	sp, sp, #16
 1379              	.LCFI32:
 1380              		.cfi_def_cfa_offset 0
 1381 0110 7047     		bx	lr
 1382              	.L55:
 1383 0112 00BF     		.align	2
 1384              	.L54:
 1385 0114 00000000 		.word	.LANCHOR0
 1386 0118 00000000 		.word	minimum
 1387              		.cfi_endproc
 1388              	.LFE74:
 1390              		.section	.text.checkDischarge,"ax",%progbits
 1391              		.align	1
 1392              		.global	checkDischarge
 1393              		.syntax unified
 1394              		.thumb
 1395              		.thumb_func
 1396              		.fpu softvfp
 1398              	checkDischarge:
 1399              	.LVL82:
 1400              	.LFB76:
 703:Src/main.c    **** 
 704:Src/main.c    **** void checkDischarge(BMSconfigStructTypedef cfg, bool fullDischarge[12][8], uint8_t bmsData[96][6]) 
 1401              		.loc 1 704 100 is_stmt 1 view -0
 1402              		.cfi_startproc
 1403              		@ args = 104, pretend = 16, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405              		@ link register save eliminated.
 1406              		.loc 1 704 100 is_stmt 0 view .LVU450
 1407 0000 84B0     		sub	sp, sp, #16
 1408              	.LCFI33:
 1409              		.cfi_def_cfa_offset 16
 1410 0002 F0B4     		push	{r4, r5, r6, r7}
 1411              	.LCFI34:
 1412              		.cfi_def_cfa_offset 32
 1413              		.cfi_offset 4, -32
 1414              		.cfi_offset 5, -28
 1415              		.cfi_offset 6, -24
 1416              		.cfi_offset 7, -20
 1417 0004 04AC     		add	r4, sp, #16
 1418 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1419 000a DDF870C0 		ldr	ip, [sp, #112]
 1420 000e 1D9F     		ldr	r7, [sp, #116]
 705:Src/main.c    **** 
 706:Src/main.c    ****   uint8_t sum = 0;
 1421              		.loc 1 706 3 is_stmt 1 view .LVU451
 1422              	.LVL83:
 707:Src/main.c    ****   uint16_t cellVoltage;
 1423              		.loc 1 707 3 view .LVU452
 708:Src/main.c    ****   uint8_t board;
 1424              		.loc 1 708 3 view .LVU453
 709:Src/main.c    ****   uint8_t cell;
 1425              		.loc 1 709 3 view .LVU454
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 44


 710:Src/main.c    **** 
 711:Src/main.c    ****   for (uint8_t i = 0; i < 96; i++) {
 1426              		.loc 1 711 3 view .LVU455
 1427              	.LBB9:
 1428              		.loc 1 711 8 view .LVU456
 1429              		.loc 1 711 16 is_stmt 0 view .LVU457
 1430 0010 0023     		movs	r3, #0
 1431              	.LBE9:
 706:Src/main.c    ****   uint16_t cellVoltage;
 1432              		.loc 1 706 11 view .LVU458
 1433 0012 1E46     		mov	r6, r3
 1434              	.LBB10:
 1435              		.loc 1 711 3 view .LVU459
 1436 0014 03E0     		b	.L57
 1437              	.LVL84:
 1438              	.L59:
 712:Src/main.c    **** 
 713:Src/main.c    ****     cellVoltage = 0;
 714:Src/main.c    ****     cellVoltage = (uint16_t) (bmsData[i][2]);
 715:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 716:Src/main.c    **** 		cellVoltage += (uint16_t) (bmsData[i][3]);
 717:Src/main.c    **** 
 718:Src/main.c    ****     board = i / cfg.numOfCellsPerIC;
 719:Src/main.c    ****     cell = i % cfg.numOfCellsPerIC;
 720:Src/main.c    **** 
 721:Src/main.c    ****     if (fullDischarge[board][cell] == 1) {
 722:Src/main.c    ****       if (cellVoltage <= minimum) {
 723:Src/main.c    ****         fullDischarge[board][cell] = 0;
 724:Src/main.c    ****         bmsData[i][1] &= 0x5F; //reset charging state to 2
 725:Src/main.c    ****       }
 726:Src/main.c    ****       else
 727:Src/main.c    ****         sum += 1;
 1439              		.loc 1 727 9 is_stmt 1 view .LVU460
 1440              		.loc 1 727 13 is_stmt 0 view .LVU461
 1441 0016 0136     		adds	r6, r6, #1
 1442              	.LVL85:
 1443              		.loc 1 727 13 view .LVU462
 1444 0018 F6B2     		uxtb	r6, r6
 1445              	.LVL86:
 1446              	.L58:
 711:Src/main.c    **** 
 1447              		.loc 1 711 32 discriminator 2 view .LVU463
 1448 001a 0133     		adds	r3, r3, #1
 1449              	.LVL87:
 711:Src/main.c    **** 
 1450              		.loc 1 711 32 discriminator 2 view .LVU464
 1451 001c DBB2     		uxtb	r3, r3
 1452              	.LVL88:
 1453              	.L57:
 711:Src/main.c    **** 
 1454              		.loc 1 711 3 discriminator 1 view .LVU465
 1455 001e 5F2B     		cmp	r3, #95
 1456 0020 20D8     		bhi	.L63
 713:Src/main.c    ****     cellVoltage = (uint16_t) (bmsData[i][2]);
 1457              		.loc 1 713 5 is_stmt 1 view .LVU466
 1458              	.LVL89:
 714:Src/main.c    ****     cellVoltage = cellVoltage << 8;
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 45


 1459              		.loc 1 714 5 view .LVU467
 714:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 1460              		.loc 1 714 38 is_stmt 0 view .LVU468
 1461 0022 03EB4302 		add	r2, r3, r3, lsl #1
 1462 0026 5100     		lsls	r1, r2, #1
 1463 0028 3944     		add	r1, r1, r7
 714:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 1464              		.loc 1 714 17 view .LVU469
 1465 002a 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 1466              	.LVL90:
 715:Src/main.c    **** 		cellVoltage += (uint16_t) (bmsData[i][3]);
 1467              		.loc 1 715 5 is_stmt 1 view .LVU470
 716:Src/main.c    **** 
 1468              		.loc 1 716 3 view .LVU471
 716:Src/main.c    **** 
 1469              		.loc 1 716 40 is_stmt 0 view .LVU472
 1470 002c CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 716:Src/main.c    **** 
 1471              		.loc 1 716 15 view .LVU473
 1472 002e 02EB0022 		add	r2, r2, r0, lsl #8
 1473 0032 94B2     		uxth	r4, r2
 1474              	.LVL91:
 718:Src/main.c    ****     cell = i % cfg.numOfCellsPerIC;
 1475              		.loc 1 718 5 is_stmt 1 view .LVU474
 718:Src/main.c    ****     cell = i % cfg.numOfCellsPerIC;
 1476              		.loc 1 718 20 is_stmt 0 view .LVU475
 1477 0034 9DF83250 		ldrb	r5, [sp, #50]	@ zero_extendqisi2
 718:Src/main.c    ****     cell = i % cfg.numOfCellsPerIC;
 1478              		.loc 1 718 11 view .LVU476
 1479 0038 B3FBF5F2 		udiv	r2, r3, r5
 1480 003c D0B2     		uxtb	r0, r2
 1481              	.LVL92:
 719:Src/main.c    **** 
 1482              		.loc 1 719 5 is_stmt 1 view .LVU477
 719:Src/main.c    **** 
 1483              		.loc 1 719 10 is_stmt 0 view .LVU478
 1484 003e 05FB1232 		mls	r2, r5, r2, r3
 1485 0042 D2B2     		uxtb	r2, r2
 1486              	.LVL93:
 721:Src/main.c    ****       if (cellVoltage <= minimum) {
 1487              		.loc 1 721 5 is_stmt 1 view .LVU479
 721:Src/main.c    ****       if (cellVoltage <= minimum) {
 1488              		.loc 1 721 22 is_stmt 0 view .LVU480
 1489 0044 0CEBC000 		add	r0, ip, r0, lsl #3
 1490              	.LVL94:
 721:Src/main.c    ****       if (cellVoltage <= minimum) {
 1491              		.loc 1 721 29 view .LVU481
 1492 0048 855C     		ldrb	r5, [r0, r2]	@ zero_extendqisi2
 1493              	.LVL95:
 721:Src/main.c    ****       if (cellVoltage <= minimum) {
 1494              		.loc 1 721 8 view .LVU482
 1495 004a 002D     		cmp	r5, #0
 1496 004c E5D0     		beq	.L58
 722:Src/main.c    ****         fullDischarge[board][cell] = 0;
 1497              		.loc 1 722 7 is_stmt 1 view .LVU483
 722:Src/main.c    ****         fullDischarge[board][cell] = 0;
 1498              		.loc 1 722 23 is_stmt 0 view .LVU484
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 46


 1499 004e 094D     		ldr	r5, .L64
 1500 0050 2D88     		ldrh	r5, [r5]
 722:Src/main.c    ****         fullDischarge[board][cell] = 0;
 1501              		.loc 1 722 10 view .LVU485
 1502 0052 A542     		cmp	r5, r4
 1503 0054 DFD3     		bcc	.L59
 723:Src/main.c    ****         bmsData[i][1] &= 0x5F; //reset charging state to 2
 1504              		.loc 1 723 9 is_stmt 1 view .LVU486
 723:Src/main.c    ****         bmsData[i][1] &= 0x5F; //reset charging state to 2
 1505              		.loc 1 723 36 is_stmt 0 view .LVU487
 1506 0056 0024     		movs	r4, #0
 1507              	.LVL96:
 723:Src/main.c    ****         bmsData[i][1] &= 0x5F; //reset charging state to 2
 1508              		.loc 1 723 36 view .LVU488
 1509 0058 8454     		strb	r4, [r0, r2]
 1510              	.LVL97:
 724:Src/main.c    ****       }
 1511              		.loc 1 724 9 is_stmt 1 view .LVU489
 724:Src/main.c    ****       }
 1512              		.loc 1 724 23 is_stmt 0 view .LVU490
 1513 005a 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1514              	.LVL98:
 724:Src/main.c    ****       }
 1515              		.loc 1 724 23 view .LVU491
 1516 005c 02F05F02 		and	r2, r2, #95
 1517 0060 4A70     		strb	r2, [r1, #1]
 1518 0062 DAE7     		b	.L58
 1519              	.LVL99:
 1520              	.L63:
 724:Src/main.c    ****       }
 1521              		.loc 1 724 23 view .LVU492
 1522              	.LBE10:
 728:Src/main.c    ****     }
 729:Src/main.c    ****   }
 730:Src/main.c    **** 
 731:Src/main.c    ****   if (sum == 0)
 1523              		.loc 1 731 3 is_stmt 1 view .LVU493
 1524              		.loc 1 731 6 is_stmt 0 view .LVU494
 1525 0064 16B9     		cbnz	r6, .L56
 732:Src/main.c    ****     chargeRate = 2;
 1526              		.loc 1 732 5 is_stmt 1 view .LVU495
 1527              		.loc 1 732 16 is_stmt 0 view .LVU496
 1528 0066 044B     		ldr	r3, .L64+4
 1529              	.LVL100:
 1530              		.loc 1 732 16 view .LVU497
 1531 0068 0222     		movs	r2, #2
 1532 006a 1A70     		strb	r2, [r3]
 1533              	.L56:
 733:Src/main.c    **** 
 734:Src/main.c    **** }
 1534              		.loc 1 734 1 view .LVU498
 1535 006c F0BC     		pop	{r4, r5, r6, r7}
 1536              	.LCFI35:
 1537              		.cfi_restore 7
 1538              		.cfi_restore 6
 1539              		.cfi_restore 5
 1540              		.cfi_restore 4
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 47


 1541              		.cfi_def_cfa_offset 16
 1542              	.LVL101:
 1543              		.loc 1 734 1 view .LVU499
 1544 006e 04B0     		add	sp, sp, #16
 1545              	.LCFI36:
 1546              		.cfi_def_cfa_offset 0
 1547 0070 7047     		bx	lr
 1548              	.L65:
 1549 0072 00BF     		.align	2
 1550              	.L64:
 1551 0074 00000000 		.word	minimum
 1552 0078 00000000 		.word	.LANCHOR0
 1553              		.cfi_endproc
 1554              	.LFE76:
 1556              		.section	.text.setChargerTxData,"ax",%progbits
 1557              		.align	1
 1558              		.global	setChargerTxData
 1559              		.syntax unified
 1560              		.thumb
 1561              		.thumb_func
 1562              		.fpu softvfp
 1564              	setChargerTxData:
 1565              	.LFB77:
 735:Src/main.c    **** 
 736:Src/main.c    **** void setChargerTxData(BMSconfigStructTypedef cfg) {
 1566              		.loc 1 736 51 is_stmt 1 view -0
 1567              		.cfi_startproc
 1568              		@ args = 96, pretend = 16, frame = 0
 1569              		@ frame_needed = 0, uses_anonymous_args = 0
 1570 0000 84B0     		sub	sp, sp, #16
 1571              	.LCFI37:
 1572              		.cfi_def_cfa_offset 16
 1573 0002 08B5     		push	{r3, lr}
 1574              	.LCFI38:
 1575              		.cfi_def_cfa_offset 24
 1576              		.cfi_offset 3, -24
 1577              		.cfi_offset 14, -20
 1578 0004 0DF1080C 		add	ip, sp, #8
 1579 0008 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 737:Src/main.c    **** 
 738:Src/main.c    **** 	/* voltage data (hex value of desired voltage (V) times 10)*/
 739:Src/main.c    **** 	ChargerTxData[0] = (uint8_t)(cfg.chargerVoltage >> 8);
 1580              		.loc 1 739 2 view .LVU501
 1581              		.loc 1 739 34 is_stmt 0 view .LVU502
 1582 000c BDF84820 		ldrh	r2, [sp, #72]
 1583              		.loc 1 739 21 view .LVU503
 1584 0010 110A     		lsrs	r1, r2, #8
 1585              		.loc 1 739 19 view .LVU504
 1586 0012 154B     		ldr	r3, .L73
 1587 0014 1970     		strb	r1, [r3]
 740:Src/main.c    **** 	ChargerTxData[1] = (uint8_t)cfg.chargerVoltage;
 1588              		.loc 1 740 2 is_stmt 1 view .LVU505
 1589              		.loc 1 740 19 is_stmt 0 view .LVU506
 1590 0016 5A70     		strb	r2, [r3, #1]
 741:Src/main.c    **** 
 742:Src/main.c    **** 	/* set the current data (hex value of desired current (A) times 10) */
 743:Src/main.c    **** 	switch (chargeRate) {
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 48


 1591              		.loc 1 743 2 is_stmt 1 view .LVU507
 1592 0018 144B     		ldr	r3, .L73+4
 1593 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1594 001c 012B     		cmp	r3, #1
 1595 001e 06D0     		beq	.L67
 1596 0020 022B     		cmp	r3, #2
 1597 0022 19D0     		beq	.L68
 744:Src/main.c    **** 		case 1:
 745:Src/main.c    **** 			/* lower current */
 746:Src/main.c    **** 			ChargerTxData[2] = (uint8_t)(cfg.lowerCurrent >> 8);
 747:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.lowerCurrent;
 748:Src/main.c    **** 			break;
 749:Src/main.c    **** 
 750:Src/main.c    **** 		case 2:
 751:Src/main.c    **** 			/* normal current */
 752:Src/main.c    **** 			ChargerTxData[2] = (uint8_t)(cfg.normalCurrent >> 8);
 753:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.normalCurrent;
 754:Src/main.c    **** 			break;
 755:Src/main.c    **** 
 756:Src/main.c    **** 		default:
 757:Src/main.c    **** 			/* no current */
 758:Src/main.c    **** 			ChargerTxData[2] = 0x00;
 1598              		.loc 1 758 4 view .LVU508
 1599              		.loc 1 758 21 is_stmt 0 view .LVU509
 1600 0024 104B     		ldr	r3, .L73
 1601 0026 0022     		movs	r2, #0
 1602 0028 9A70     		strb	r2, [r3, #2]
 759:Src/main.c    **** 			ChargerTxData[3] = 0x00;
 1603              		.loc 1 759 4 is_stmt 1 view .LVU510
 1604              		.loc 1 759 21 is_stmt 0 view .LVU511
 1605 002a DA70     		strb	r2, [r3, #3]
 1606 002c 05E0     		b	.L70
 1607              	.L67:
 746:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.lowerCurrent;
 1608              		.loc 1 746 4 is_stmt 1 view .LVU512
 746:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.lowerCurrent;
 1609              		.loc 1 746 36 is_stmt 0 view .LVU513
 1610 002e BDF84620 		ldrh	r2, [sp, #70]
 746:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.lowerCurrent;
 1611              		.loc 1 746 23 view .LVU514
 1612 0032 110A     		lsrs	r1, r2, #8
 746:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.lowerCurrent;
 1613              		.loc 1 746 21 view .LVU515
 1614 0034 0C4B     		ldr	r3, .L73
 1615 0036 9970     		strb	r1, [r3, #2]
 747:Src/main.c    **** 			break;
 1616              		.loc 1 747 4 is_stmt 1 view .LVU516
 747:Src/main.c    **** 			break;
 1617              		.loc 1 747 21 is_stmt 0 view .LVU517
 1618 0038 DA70     		strb	r2, [r3, #3]
 748:Src/main.c    **** 
 1619              		.loc 1 748 4 is_stmt 1 view .LVU518
 1620              	.L70:
 760:Src/main.c    **** 	}
 761:Src/main.c    **** 
 762:Src/main.c    **** 	/* these data bytes are not used */
 763:Src/main.c    **** 	ChargerTxData[4] = 0x00;
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 49


 1621              		.loc 1 763 2 view .LVU519
 1622              		.loc 1 763 19 is_stmt 0 view .LVU520
 1623 003a 0B4A     		ldr	r2, .L73
 1624 003c 0023     		movs	r3, #0
 1625 003e 1371     		strb	r3, [r2, #4]
 764:Src/main.c    **** 	ChargerTxData[5] = 0x00;
 1626              		.loc 1 764 2 is_stmt 1 view .LVU521
 1627              		.loc 1 764 19 is_stmt 0 view .LVU522
 1628 0040 5371     		strb	r3, [r2, #5]
 765:Src/main.c    **** 	ChargerTxData[6] = 0x00;
 1629              		.loc 1 765 2 is_stmt 1 view .LVU523
 1630              		.loc 1 765 19 is_stmt 0 view .LVU524
 1631 0042 9371     		strb	r3, [r2, #6]
 766:Src/main.c    **** 	ChargerTxData[7] = 0x00;
 1632              		.loc 1 766 2 is_stmt 1 view .LVU525
 1633              		.loc 1 766 19 is_stmt 0 view .LVU526
 1634 0044 D371     		strb	r3, [r2, #7]
 767:Src/main.c    **** 
 768:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &ChargerTxHeader, ChargerTxData, &TxMailbox);
 1635              		.loc 1 768 3 is_stmt 1 view .LVU527
 1636 0046 0A4B     		ldr	r3, .L73+8
 1637 0048 0A49     		ldr	r1, .L73+12
 1638 004a 0B48     		ldr	r0, .L73+16
 1639 004c FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1640              	.LVL102:
 769:Src/main.c    **** }
 1641              		.loc 1 769 1 is_stmt 0 view .LVU528
 1642 0050 BDE80840 		pop	{r3, lr}
 1643              	.LCFI39:
 1644              		.cfi_remember_state
 1645              		.cfi_restore 14
 1646              		.cfi_restore 3
 1647              		.cfi_def_cfa_offset 16
 1648 0054 04B0     		add	sp, sp, #16
 1649              	.LCFI40:
 1650              		.cfi_def_cfa_offset 0
 1651 0056 7047     		bx	lr
 1652              	.L68:
 1653              	.LCFI41:
 1654              		.cfi_restore_state
 752:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.normalCurrent;
 1655              		.loc 1 752 4 is_stmt 1 view .LVU529
 752:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.normalCurrent;
 1656              		.loc 1 752 36 is_stmt 0 view .LVU530
 1657 0058 BDF84420 		ldrh	r2, [sp, #68]
 752:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.normalCurrent;
 1658              		.loc 1 752 23 view .LVU531
 1659 005c 110A     		lsrs	r1, r2, #8
 752:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.normalCurrent;
 1660              		.loc 1 752 21 view .LVU532
 1661 005e 024B     		ldr	r3, .L73
 1662 0060 9970     		strb	r1, [r3, #2]
 753:Src/main.c    **** 			break;
 1663              		.loc 1 753 4 is_stmt 1 view .LVU533
 753:Src/main.c    **** 			break;
 1664              		.loc 1 753 21 is_stmt 0 view .LVU534
 1665 0062 DA70     		strb	r2, [r3, #3]
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 50


 754:Src/main.c    **** 
 1666              		.loc 1 754 4 is_stmt 1 view .LVU535
 1667 0064 E9E7     		b	.L70
 1668              	.L74:
 1669 0066 00BF     		.align	2
 1670              	.L73:
 1671 0068 00000000 		.word	ChargerTxData
 1672 006c 00000000 		.word	.LANCHOR0
 1673 0070 00000000 		.word	TxMailbox
 1674 0074 00000000 		.word	ChargerTxHeader
 1675 0078 00000000 		.word	hcan
 1676              		.cfi_endproc
 1677              	.LFE77:
 1679              		.section	.text.CELLVAL_message,"ax",%progbits
 1680              		.align	1
 1681              		.global	CELLVAL_message
 1682              		.syntax unified
 1683              		.thumb
 1684              		.thumb_func
 1685              		.fpu softvfp
 1687              	CELLVAL_message:
 1688              	.LVL103:
 1689              	.LFB78:
 770:Src/main.c    **** 
 771:Src/main.c    **** void CELLVAL_message(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]) {
 1690              		.loc 1 771 74 view -0
 1691              		.cfi_startproc
 1692              		@ args = 100, pretend = 16, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694              		.loc 1 771 74 is_stmt 0 view .LVU537
 1695 0000 84B0     		sub	sp, sp, #16
 1696              	.LCFI42:
 1697              		.cfi_def_cfa_offset 16
 1698 0002 38B5     		push	{r3, r4, r5, lr}
 1699              	.LCFI43:
 1700              		.cfi_def_cfa_offset 32
 1701              		.cfi_offset 3, -32
 1702              		.cfi_offset 4, -28
 1703              		.cfi_offset 5, -24
 1704              		.cfi_offset 14, -20
 1705 0004 04AC     		add	r4, sp, #16
 1706 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1707 000a 1C9D     		ldr	r5, [sp, #112]
 772:Src/main.c    **** 	
 773:Src/main.c    ****   TxHeader.StdId = CELLVAL_ID;
 1708              		.loc 1 773 3 is_stmt 1 view .LVU538
 1709              		.loc 1 773 18 is_stmt 0 view .LVU539
 1710 000c 134B     		ldr	r3, .L79
 1711 000e 0722     		movs	r2, #7
 1712 0010 1A60     		str	r2, [r3]
 774:Src/main.c    ****   TxHeader.DLC = 6;
 1713              		.loc 1 774 3 is_stmt 1 view .LVU540
 1714              		.loc 1 774 16 is_stmt 0 view .LVU541
 1715 0012 0622     		movs	r2, #6
 1716 0014 1A61     		str	r2, [r3, #16]
 775:Src/main.c    **** 
 776:Src/main.c    ****   for (uint8_t cell = 0; cell < 96; cell++) {
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 51


 1717              		.loc 1 776 3 is_stmt 1 view .LVU542
 1718              	.LBB11:
 1719              		.loc 1 776 8 view .LVU543
 1720              	.LVL104:
 1721              		.loc 1 776 16 is_stmt 0 view .LVU544
 1722 0016 0024     		movs	r4, #0
 1723              		.loc 1 776 3 view .LVU545
 1724 0018 1AE0     		b	.L76
 1725              	.LVL105:
 1726              	.L77:
 777:Src/main.c    ****     CELLVAL_DATA[0] = bmsData[cell][0];
 1727              		.loc 1 777 5 is_stmt 1 discriminator 3 view .LVU546
 1728              		.loc 1 777 30 is_stmt 0 discriminator 3 view .LVU547
 1729 001a 04EB4403 		add	r3, r4, r4, lsl #1
 1730 001e 5A00     		lsls	r2, r3, #1
 1731 0020 AB18     		adds	r3, r5, r2
 1732              		.loc 1 777 36 discriminator 3 view .LVU548
 1733 0022 A95C     		ldrb	r1, [r5, r2]	@ zero_extendqisi2
 1734              		.loc 1 777 21 discriminator 3 view .LVU549
 1735 0024 0E4A     		ldr	r2, .L79+4
 1736 0026 1170     		strb	r1, [r2]
 778:Src/main.c    ****     CELLVAL_DATA[1] = bmsData[cell][1];
 1737              		.loc 1 778 5 is_stmt 1 discriminator 3 view .LVU550
 1738              		.loc 1 778 36 is_stmt 0 discriminator 3 view .LVU551
 1739 0028 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 1740              		.loc 1 778 21 discriminator 3 view .LVU552
 1741 002a 5170     		strb	r1, [r2, #1]
 779:Src/main.c    ****     CELLVAL_DATA[2] = bmsData[cell][2];
 1742              		.loc 1 779 5 is_stmt 1 discriminator 3 view .LVU553
 1743              		.loc 1 779 36 is_stmt 0 discriminator 3 view .LVU554
 1744 002c 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 1745              		.loc 1 779 21 discriminator 3 view .LVU555
 1746 002e 9170     		strb	r1, [r2, #2]
 780:Src/main.c    ****     CELLVAL_DATA[3] = bmsData[cell][3];
 1747              		.loc 1 780 5 is_stmt 1 discriminator 3 view .LVU556
 1748              		.loc 1 780 36 is_stmt 0 discriminator 3 view .LVU557
 1749 0030 D978     		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 1750              		.loc 1 780 21 discriminator 3 view .LVU558
 1751 0032 D170     		strb	r1, [r2, #3]
 781:Src/main.c    ****     CELLVAL_DATA[4] = bmsData[cell][4];
 1752              		.loc 1 781 5 is_stmt 1 discriminator 3 view .LVU559
 1753              		.loc 1 781 36 is_stmt 0 discriminator 3 view .LVU560
 1754 0034 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1755              		.loc 1 781 21 discriminator 3 view .LVU561
 1756 0036 1171     		strb	r1, [r2, #4]
 782:Src/main.c    ****     CELLVAL_DATA[5] = bmsData[cell][5];
 1757              		.loc 1 782 5 is_stmt 1 discriminator 3 view .LVU562
 1758              		.loc 1 782 36 is_stmt 0 discriminator 3 view .LVU563
 1759 0038 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1760              		.loc 1 782 21 discriminator 3 view .LVU564
 1761 003a 5371     		strb	r3, [r2, #5]
 783:Src/main.c    **** 
 784:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, CELLVAL_DATA, &TxMailbox);
 1762              		.loc 1 784 5 is_stmt 1 discriminator 3 view .LVU565
 1763 003c 094B     		ldr	r3, .L79+8
 1764 003e 0749     		ldr	r1, .L79
 1765 0040 0948     		ldr	r0, .L79+12
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 52


 1766 0042 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1767              	.LVL106:
 785:Src/main.c    ****     HAL_Delay(10);
 1768              		.loc 1 785 5 discriminator 3 view .LVU566
 1769 0046 0A20     		movs	r0, #10
 1770 0048 FFF7FEFF 		bl	HAL_Delay
 1771              	.LVL107:
 776:Src/main.c    ****     CELLVAL_DATA[0] = bmsData[cell][0];
 1772              		.loc 1 776 41 is_stmt 0 discriminator 3 view .LVU567
 1773 004c 0134     		adds	r4, r4, #1
 1774              	.LVL108:
 776:Src/main.c    ****     CELLVAL_DATA[0] = bmsData[cell][0];
 1775              		.loc 1 776 41 discriminator 3 view .LVU568
 1776 004e E4B2     		uxtb	r4, r4
 1777              	.LVL109:
 1778              	.L76:
 776:Src/main.c    ****     CELLVAL_DATA[0] = bmsData[cell][0];
 1779              		.loc 1 776 3 discriminator 1 view .LVU569
 1780 0050 5F2C     		cmp	r4, #95
 1781 0052 E2D9     		bls	.L77
 1782              	.LBE11:
 786:Src/main.c    **** 
 787:Src/main.c    ****   }
 788:Src/main.c    **** }
 1783              		.loc 1 788 1 view .LVU570
 1784 0054 BDE83840 		pop	{r3, r4, r5, lr}
 1785              	.LCFI44:
 1786              		.cfi_restore 14
 1787              		.cfi_restore 5
 1788              		.cfi_restore 4
 1789              		.cfi_restore 3
 1790              		.cfi_def_cfa_offset 16
 1791              	.LVL110:
 1792              		.loc 1 788 1 view .LVU571
 1793 0058 04B0     		add	sp, sp, #16
 1794              	.LCFI45:
 1795              		.cfi_def_cfa_offset 0
 1796 005a 7047     		bx	lr
 1797              	.L80:
 1798              		.align	2
 1799              	.L79:
 1800 005c 00000000 		.word	TxHeader
 1801 0060 00000000 		.word	CELLVAL_DATA
 1802 0064 00000000 		.word	TxMailbox
 1803 0068 00000000 		.word	hcan
 1804              		.cfi_endproc
 1805              	.LFE78:
 1807              		.section	.text.BMSSTAT_message,"ax",%progbits
 1808              		.align	1
 1809              		.global	BMSSTAT_message
 1810              		.syntax unified
 1811              		.thumb
 1812              		.thumb_func
 1813              		.fpu softvfp
 1815              	BMSSTAT_message:
 1816              	.LVL111:
 1817              	.LFB79:
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 53


 789:Src/main.c    **** 
 790:Src/main.c    **** void BMSSTAT_message(BMSconfigStructTypedef cfg, uint8_t bmsStatus[6]) {
 1818              		.loc 1 790 72 is_stmt 1 view -0
 1819              		.cfi_startproc
 1820              		@ args = 100, pretend = 16, frame = 0
 1821              		@ frame_needed = 0, uses_anonymous_args = 0
 1822              		.loc 1 790 72 is_stmt 0 view .LVU573
 1823 0000 84B0     		sub	sp, sp, #16
 1824              	.LCFI46:
 1825              		.cfi_def_cfa_offset 16
 1826 0002 08B5     		push	{r3, lr}
 1827              	.LCFI47:
 1828              		.cfi_def_cfa_offset 24
 1829              		.cfi_offset 3, -24
 1830              		.cfi_offset 14, -20
 1831 0004 0DF1080C 		add	ip, sp, #8
 1832 0008 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 791:Src/main.c    **** 
 792:Src/main.c    ****   TxHeader.StdId = BMSSTAT_ID;
 1833              		.loc 1 792 3 is_stmt 1 view .LVU574
 1834              		.loc 1 792 18 is_stmt 0 view .LVU575
 1835 000c 0649     		ldr	r1, .L83
 1836 000e 0823     		movs	r3, #8
 1837 0010 0B60     		str	r3, [r1]
 793:Src/main.c    ****   TxHeader.DLC = 6;
 1838              		.loc 1 793 3 is_stmt 1 view .LVU576
 1839              		.loc 1 793 16 is_stmt 0 view .LVU577
 1840 0012 0623     		movs	r3, #6
 1841 0014 0B61     		str	r3, [r1, #16]
 794:Src/main.c    **** 
 795:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, bmsStatus, &TxMailbox);
 1842              		.loc 1 795 3 is_stmt 1 view .LVU578
 1843 0016 054B     		ldr	r3, .L83+4
 1844 0018 1A9A     		ldr	r2, [sp, #104]
 1845 001a 0548     		ldr	r0, .L83+8
 1846 001c FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1847              	.LVL112:
 796:Src/main.c    **** }
 1848              		.loc 1 796 1 is_stmt 0 view .LVU579
 1849 0020 BDE80840 		pop	{r3, lr}
 1850              	.LCFI48:
 1851              		.cfi_restore 14
 1852              		.cfi_restore 3
 1853              		.cfi_def_cfa_offset 16
 1854 0024 04B0     		add	sp, sp, #16
 1855              	.LCFI49:
 1856              		.cfi_def_cfa_offset 0
 1857 0026 7047     		bx	lr
 1858              	.L84:
 1859              		.align	2
 1860              	.L83:
 1861 0028 00000000 		.word	TxHeader
 1862 002c 00000000 		.word	TxMailbox
 1863 0030 00000000 		.word	hcan
 1864              		.cfi_endproc
 1865              	.LFE79:
 1867              		.section	.text.BMSVINF_message,"ax",%progbits
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 54


 1868              		.align	1
 1869              		.global	BMSVINF_message
 1870              		.syntax unified
 1871              		.thumb
 1872              		.thumb_func
 1873              		.fpu softvfp
 1875              	BMSVINF_message:
 1876              	.LVL113:
 1877              	.LFB80:
 797:Src/main.c    **** 
 798:Src/main.c    **** void BMSVINF_message(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]) {
 1878              		.loc 1 798 74 is_stmt 1 view -0
 1879              		.cfi_startproc
 1880              		@ args = 100, pretend = 16, frame = 8
 1881              		@ frame_needed = 0, uses_anonymous_args = 0
 1882              		.loc 1 798 74 is_stmt 0 view .LVU581
 1883 0000 84B0     		sub	sp, sp, #16
 1884              	.LCFI50:
 1885              		.cfi_def_cfa_offset 16
 1886 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1887              	.LCFI51:
 1888              		.cfi_def_cfa_offset 36
 1889              		.cfi_offset 4, -36
 1890              		.cfi_offset 5, -32
 1891              		.cfi_offset 6, -28
 1892              		.cfi_offset 7, -24
 1893              		.cfi_offset 14, -20
 1894 0004 83B0     		sub	sp, sp, #12
 1895              	.LCFI52:
 1896              		.cfi_def_cfa_offset 48
 1897 0006 08AC     		add	r4, sp, #32
 1898 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1899 000c DDF880C0 		ldr	ip, [sp, #128]
 1900 0010 0024     		movs	r4, #0
 1901 0012 2746     		mov	r7, r4
 799:Src/main.c    **** 
 800:Src/main.c    ****   uint16_t cellVoltage;
 1902              		.loc 1 800 3 is_stmt 1 view .LVU582
 801:Src/main.c    ****   uint16_t minV = 0xFFFF;
 1903              		.loc 1 801 3 view .LVU583
 1904              	.LVL114:
 802:Src/main.c    ****   uint8_t minCell;
 1905              		.loc 1 802 3 view .LVU584
 803:Src/main.c    ****   uint16_t maxV = 0x0000;
 1906              		.loc 1 803 3 view .LVU585
 804:Src/main.c    ****   uint8_t maxCell;
 1907              		.loc 1 804 3 view .LVU586
 805:Src/main.c    ****   uint16_t averageV;
 1908              		.loc 1 805 3 view .LVU587
 806:Src/main.c    ****   uint32_t sum = 0;
 1909              		.loc 1 806 3 view .LVU588
 807:Src/main.c    **** 
 808:Src/main.c    ****   for (uint8_t cell = 0; cell < 96; cell++) {
 1910              		.loc 1 808 3 view .LVU589
 1911              	.LBB12:
 1912              		.loc 1 808 8 view .LVU590
 1913              		.loc 1 808 16 is_stmt 0 view .LVU591
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 55


 1914 0014 2246     		mov	r2, r4
 1915              	.LBE12:
 806:Src/main.c    ****   uint32_t sum = 0;
 1916              		.loc 1 806 12 view .LVU592
 1917 0016 2046     		mov	r0, r4
 803:Src/main.c    ****   uint8_t maxCell;
 1918              		.loc 1 803 12 view .LVU593
 1919 0018 2646     		mov	r6, r4
 801:Src/main.c    ****   uint8_t minCell;
 1920              		.loc 1 801 12 view .LVU594
 1921 001a 4FF6FF75 		movw	r5, #65535
 1922              	.LBB13:
 1923              		.loc 1 808 3 view .LVU595
 1924 001e 02E0     		b	.L86
 1925              	.LVL115:
 1926              	.L88:
 809:Src/main.c    **** 
 810:Src/main.c    ****     cellVoltage = 0;
 811:Src/main.c    ****     cellVoltage = (uint16_t) (bmsData[cell][2]);
 812:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 813:Src/main.c    **** 		cellVoltage += (uint16_t) (bmsData[cell][3]);
 814:Src/main.c    **** 
 815:Src/main.c    ****     if (cellVoltage < minV) {
 816:Src/main.c    ****       minV = cellVoltage;
 817:Src/main.c    ****       minCell = cell + 1;
 818:Src/main.c    ****     }
 819:Src/main.c    **** 
 820:Src/main.c    ****     if (cellVoltage > maxV) {
 821:Src/main.c    ****       maxV = cellVoltage;
 822:Src/main.c    ****       maxCell = cell + 1;
 823:Src/main.c    ****     }
 824:Src/main.c    **** 
 825:Src/main.c    ****     sum += cellVoltage;
 1927              		.loc 1 825 5 is_stmt 1 discriminator 2 view .LVU596
 1928              		.loc 1 825 9 is_stmt 0 discriminator 2 view .LVU597
 1929 0020 1844     		add	r0, r0, r3
 1930              	.LVL116:
 808:Src/main.c    **** 
 1931              		.loc 1 808 41 discriminator 2 view .LVU598
 1932 0022 0132     		adds	r2, r2, #1
 1933              	.LVL117:
 808:Src/main.c    **** 
 1934              		.loc 1 808 41 discriminator 2 view .LVU599
 1935 0024 D2B2     		uxtb	r2, r2
 1936              	.LVL118:
 1937              	.L86:
 808:Src/main.c    **** 
 1938              		.loc 1 808 3 discriminator 1 view .LVU600
 1939 0026 5F2A     		cmp	r2, #95
 1940 0028 14D8     		bhi	.L91
 810:Src/main.c    ****     cellVoltage = (uint16_t) (bmsData[cell][2]);
 1941              		.loc 1 810 5 is_stmt 1 view .LVU601
 1942              	.LVL119:
 811:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 1943              		.loc 1 811 5 view .LVU602
 811:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 1944              		.loc 1 811 38 is_stmt 0 view .LVU603
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 56


 1945 002a 02EB4203 		add	r3, r2, r2, lsl #1
 1946 002e 5900     		lsls	r1, r3, #1
 1947 0030 6144     		add	r1, r1, ip
 811:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 1948              		.loc 1 811 17 view .LVU604
 1949 0032 91F802E0 		ldrb	lr, [r1, #2]	@ zero_extendqisi2
 1950              	.LVL120:
 812:Src/main.c    **** 		cellVoltage += (uint16_t) (bmsData[cell][3]);
 1951              		.loc 1 812 5 is_stmt 1 view .LVU605
 813:Src/main.c    **** 
 1952              		.loc 1 813 3 view .LVU606
 813:Src/main.c    **** 
 1953              		.loc 1 813 43 is_stmt 0 view .LVU607
 1954 0036 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 813:Src/main.c    **** 
 1955              		.loc 1 813 15 view .LVU608
 1956 0038 03EB0E23 		add	r3, r3, lr, lsl #8
 1957 003c 9BB2     		uxth	r3, r3
 1958              	.LVL121:
 815:Src/main.c    ****       minV = cellVoltage;
 1959              		.loc 1 815 5 is_stmt 1 view .LVU609
 815:Src/main.c    ****       minV = cellVoltage;
 1960              		.loc 1 815 8 is_stmt 0 view .LVU610
 1961 003e 9D42     		cmp	r5, r3
 1962 0040 02D9     		bls	.L87
 816:Src/main.c    ****       minCell = cell + 1;
 1963              		.loc 1 816 7 is_stmt 1 view .LVU611
 1964              	.LVL122:
 817:Src/main.c    ****     }
 1965              		.loc 1 817 7 view .LVU612
 817:Src/main.c    ****     }
 1966              		.loc 1 817 15 is_stmt 0 view .LVU613
 1967 0042 541C     		adds	r4, r2, #1
 1968              	.LVL123:
 817:Src/main.c    ****     }
 1969              		.loc 1 817 15 view .LVU614
 1970 0044 E4B2     		uxtb	r4, r4
 1971              	.LVL124:
 816:Src/main.c    ****       minCell = cell + 1;
 1972              		.loc 1 816 12 view .LVU615
 1973 0046 1D46     		mov	r5, r3
 1974              	.LVL125:
 1975              	.L87:
 820:Src/main.c    ****       maxV = cellVoltage;
 1976              		.loc 1 820 5 is_stmt 1 view .LVU616
 820:Src/main.c    ****       maxV = cellVoltage;
 1977              		.loc 1 820 8 is_stmt 0 view .LVU617
 1978 0048 9E42     		cmp	r6, r3
 1979 004a E9D2     		bcs	.L88
 821:Src/main.c    ****       maxCell = cell + 1;
 1980              		.loc 1 821 7 is_stmt 1 view .LVU618
 1981              	.LVL126:
 822:Src/main.c    ****     }
 1982              		.loc 1 822 7 view .LVU619
 822:Src/main.c    ****     }
 1983              		.loc 1 822 15 is_stmt 0 view .LVU620
 1984 004c 571C     		adds	r7, r2, #1
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 57


 1985              	.LVL127:
 822:Src/main.c    ****     }
 1986              		.loc 1 822 15 view .LVU621
 1987 004e FFB2     		uxtb	r7, r7
 1988              	.LVL128:
 821:Src/main.c    ****       maxCell = cell + 1;
 1989              		.loc 1 821 12 view .LVU622
 1990 0050 1E46     		mov	r6, r3
 1991 0052 E5E7     		b	.L88
 1992              	.LVL129:
 1993              	.L91:
 821:Src/main.c    ****       maxCell = cell + 1;
 1994              		.loc 1 821 12 view .LVU623
 1995              	.LBE13:
 826:Src/main.c    ****   }
 827:Src/main.c    **** 
 828:Src/main.c    ****   sumOfCells = sum;
 1996              		.loc 1 828 3 is_stmt 1 view .LVU624
 1997              		.loc 1 828 14 is_stmt 0 view .LVU625
 1998 0054 174B     		ldr	r3, .L92
 1999 0056 1860     		str	r0, [r3]
 829:Src/main.c    ****   minimum = minV;
 2000              		.loc 1 829 3 is_stmt 1 view .LVU626
 2001              		.loc 1 829 11 is_stmt 0 view .LVU627
 2002 0058 174B     		ldr	r3, .L92+4
 2003 005a 1D80     		strh	r5, [r3]	@ movhi
 830:Src/main.c    ****   averageV = (uint16_t) (sum / (cfg.numOfICs * cfg.numOfCellsPerIC));
 2004              		.loc 1 830 3 is_stmt 1 view .LVU628
 2005              		.loc 1 830 36 is_stmt 0 view .LVU629
 2006 005c 9DF82020 		ldrb	r2, [sp, #32]	@ zero_extendqisi2
 2007              	.LVL130:
 2008              		.loc 1 830 51 view .LVU630
 2009 0060 9DF84230 		ldrb	r3, [sp, #66]	@ zero_extendqisi2
 2010              		.loc 1 830 46 view .LVU631
 2011 0064 03FB02F3 		mul	r3, r3, r2
 2012              		.loc 1 830 30 view .LVU632
 2013 0068 B0FBF3F3 		udiv	r3, r0, r3
 2014              	.LVL131:
 831:Src/main.c    **** 
 832:Src/main.c    ****   TxHeader.StdId = BMSVINF_ID;
 2015              		.loc 1 832 3 is_stmt 1 view .LVU633
 2016              		.loc 1 832 18 is_stmt 0 view .LVU634
 2017 006c 1349     		ldr	r1, .L92+8
 2018 006e 0922     		movs	r2, #9
 2019 0070 0A60     		str	r2, [r1]
 833:Src/main.c    ****   TxHeader.DLC = 8;
 2020              		.loc 1 833 3 is_stmt 1 view .LVU635
 2021              		.loc 1 833 16 is_stmt 0 view .LVU636
 2022 0072 0822     		movs	r2, #8
 2023 0074 0A61     		str	r2, [r1, #16]
 834:Src/main.c    ****   uint8_t BMSVINF_DATA[8];
 2024              		.loc 1 834 3 is_stmt 1 view .LVU637
 835:Src/main.c    **** 
 836:Src/main.c    ****   BMSVINF_DATA[0] = (uint8_t) ((maxV >> 8) & 0xFF);
 2025              		.loc 1 836 3 view .LVU638
 2026              		.loc 1 836 21 is_stmt 0 view .LVU639
 2027 0076 26FA02F2 		lsr	r2, r6, r2
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 58


 2028              		.loc 1 836 19 view .LVU640
 2029 007a 8DF80020 		strb	r2, [sp]
 837:Src/main.c    ****   BMSVINF_DATA[1] = (uint8_t) (maxV & 0xFF);
 2030              		.loc 1 837 3 is_stmt 1 view .LVU641
 2031              		.loc 1 837 19 is_stmt 0 view .LVU642
 2032 007e 8DF80160 		strb	r6, [sp, #1]
 838:Src/main.c    ****   BMSVINF_DATA[2] = maxCell;
 2033              		.loc 1 838 3 is_stmt 1 view .LVU643
 2034              		.loc 1 838 19 is_stmt 0 view .LVU644
 2035 0082 8DF80270 		strb	r7, [sp, #2]
 839:Src/main.c    ****   BMSVINF_DATA[3] = (uint8_t) ((minV >> 8) & 0xFF);
 2036              		.loc 1 839 3 is_stmt 1 view .LVU645
 2037              		.loc 1 839 21 is_stmt 0 view .LVU646
 2038 0086 2A0A     		lsrs	r2, r5, #8
 2039              		.loc 1 839 19 view .LVU647
 2040 0088 8DF80320 		strb	r2, [sp, #3]
 840:Src/main.c    ****   BMSVINF_DATA[4] = (uint8_t) (minV & 0xFF);
 2041              		.loc 1 840 3 is_stmt 1 view .LVU648
 2042              		.loc 1 840 19 is_stmt 0 view .LVU649
 2043 008c 8DF80450 		strb	r5, [sp, #4]
 841:Src/main.c    ****   BMSVINF_DATA[5] = minCell;
 2044              		.loc 1 841 3 is_stmt 1 view .LVU650
 2045              		.loc 1 841 19 is_stmt 0 view .LVU651
 2046 0090 8DF80540 		strb	r4, [sp, #5]
 842:Src/main.c    ****   BMSVINF_DATA[6] = (uint8_t) ((averageV >> 8) & 0xFF);
 2047              		.loc 1 842 3 is_stmt 1 view .LVU652
 2048              		.loc 1 842 21 is_stmt 0 view .LVU653
 2049 0094 C3F30722 		ubfx	r2, r3, #8, #8
 2050              		.loc 1 842 19 view .LVU654
 2051 0098 8DF80620 		strb	r2, [sp, #6]
 843:Src/main.c    ****   BMSVINF_DATA[7] = (uint8_t) (averageV & 0xFF);
 2052              		.loc 1 843 3 is_stmt 1 view .LVU655
 2053              		.loc 1 843 19 is_stmt 0 view .LVU656
 2054 009c 8DF80730 		strb	r3, [sp, #7]
 844:Src/main.c    **** 
 845:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, BMSVINF_DATA, &TxMailbox);
 2055              		.loc 1 845 3 is_stmt 1 view .LVU657
 2056 00a0 074B     		ldr	r3, .L92+12
 2057              	.LVL132:
 2058              		.loc 1 845 3 is_stmt 0 view .LVU658
 2059 00a2 6A46     		mov	r2, sp
 2060 00a4 0748     		ldr	r0, .L92+16
 2061              	.LVL133:
 2062              		.loc 1 845 3 view .LVU659
 2063 00a6 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 2064              	.LVL134:
 846:Src/main.c    **** 
 847:Src/main.c    **** }
 2065              		.loc 1 847 1 view .LVU660
 2066 00aa 03B0     		add	sp, sp, #12
 2067              	.LCFI53:
 2068              		.cfi_def_cfa_offset 36
 2069              		@ sp needed
 2070 00ac BDE8F040 		pop	{r4, r5, r6, r7, lr}
 2071              	.LCFI54:
 2072              		.cfi_restore 14
 2073              		.cfi_restore 7
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 59


 2074              		.cfi_restore 6
 2075              		.cfi_restore 5
 2076              		.cfi_restore 4
 2077              		.cfi_def_cfa_offset 16
 2078              	.LVL135:
 2079              		.loc 1 847 1 view .LVU661
 2080 00b0 04B0     		add	sp, sp, #16
 2081              	.LCFI55:
 2082              		.cfi_def_cfa_offset 0
 2083 00b2 7047     		bx	lr
 2084              	.L93:
 2085              		.align	2
 2086              	.L92:
 2087 00b4 00000000 		.word	sumOfCells
 2088 00b8 00000000 		.word	minimum
 2089 00bc 00000000 		.word	TxHeader
 2090 00c0 00000000 		.word	TxMailbox
 2091 00c4 00000000 		.word	hcan
 2092              		.cfi_endproc
 2093              	.LFE80:
 2095              		.section	.text.BMSTINF_message,"ax",%progbits
 2096              		.align	1
 2097              		.global	BMSTINF_message
 2098              		.syntax unified
 2099              		.thumb
 2100              		.thumb_func
 2101              		.fpu softvfp
 2103              	BMSTINF_message:
 2104              	.LVL136:
 2105              	.LFB81:
 848:Src/main.c    **** 
 849:Src/main.c    **** void BMSTINF_message(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]) {
 2106              		.loc 1 849 74 is_stmt 1 view -0
 2107              		.cfi_startproc
 2108              		@ args = 100, pretend = 16, frame = 8
 2109              		@ frame_needed = 0, uses_anonymous_args = 0
 2110              		.loc 1 849 74 is_stmt 0 view .LVU663
 2111 0000 84B0     		sub	sp, sp, #16
 2112              	.LCFI56:
 2113              		.cfi_def_cfa_offset 16
 2114 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 2115              	.LCFI57:
 2116              		.cfi_def_cfa_offset 36
 2117              		.cfi_offset 4, -36
 2118              		.cfi_offset 5, -32
 2119              		.cfi_offset 6, -28
 2120              		.cfi_offset 7, -24
 2121              		.cfi_offset 14, -20
 2122 0004 83B0     		sub	sp, sp, #12
 2123              	.LCFI58:
 2124              		.cfi_def_cfa_offset 48
 2125 0006 08AC     		add	r4, sp, #32
 2126 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 2127 000c DDF880C0 		ldr	ip, [sp, #128]
 2128 0010 0024     		movs	r4, #0
 2129 0012 2746     		mov	r7, r4
 850:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 60


 851:Src/main.c    ****   uint16_t cellTemp;
 2130              		.loc 1 851 3 is_stmt 1 view .LVU664
 852:Src/main.c    ****   uint16_t minT = 0xFFFF;
 2131              		.loc 1 852 3 view .LVU665
 2132              	.LVL137:
 853:Src/main.c    ****   uint8_t minCell;
 2133              		.loc 1 853 3 view .LVU666
 854:Src/main.c    ****   uint16_t maxT = 0x0000;
 2134              		.loc 1 854 3 view .LVU667
 855:Src/main.c    ****   uint8_t maxCell;
 2135              		.loc 1 855 3 view .LVU668
 856:Src/main.c    ****   uint16_t averageT;
 2136              		.loc 1 856 3 view .LVU669
 857:Src/main.c    ****   uint32_t sum = 0;
 2137              		.loc 1 857 3 view .LVU670
 858:Src/main.c    **** 
 859:Src/main.c    ****   for (uint8_t cell = 0; cell < 96; cell++) {
 2138              		.loc 1 859 3 view .LVU671
 2139              	.LBB14:
 2140              		.loc 1 859 8 view .LVU672
 2141              		.loc 1 859 16 is_stmt 0 view .LVU673
 2142 0014 2246     		mov	r2, r4
 2143              	.LBE14:
 857:Src/main.c    ****   uint32_t sum = 0;
 2144              		.loc 1 857 12 view .LVU674
 2145 0016 2046     		mov	r0, r4
 854:Src/main.c    ****   uint8_t maxCell;
 2146              		.loc 1 854 12 view .LVU675
 2147 0018 2646     		mov	r6, r4
 852:Src/main.c    ****   uint8_t minCell;
 2148              		.loc 1 852 12 view .LVU676
 2149 001a 4FF6FF75 		movw	r5, #65535
 2150              	.LBB15:
 2151              		.loc 1 859 3 view .LVU677
 2152 001e 02E0     		b	.L95
 2153              	.LVL138:
 2154              	.L97:
 860:Src/main.c    **** 
 861:Src/main.c    ****     cellTemp = 0;
 862:Src/main.c    ****     cellTemp = (uint16_t) (bmsData[cell][4]);
 863:Src/main.c    ****     cellTemp = cellTemp << 8;
 864:Src/main.c    **** 		cellTemp += (uint16_t) (bmsData[cell][5]);
 865:Src/main.c    **** 
 866:Src/main.c    ****     if (cellTemp < minT) {
 867:Src/main.c    ****       minT = cellTemp;
 868:Src/main.c    ****       minCell = cell + 1;
 869:Src/main.c    ****     }
 870:Src/main.c    **** 
 871:Src/main.c    ****     if (cellTemp > maxT) {
 872:Src/main.c    ****       maxT = cellTemp;
 873:Src/main.c    ****       maxCell = cell + 1;
 874:Src/main.c    ****     }
 875:Src/main.c    **** 
 876:Src/main.c    ****     sum += cellTemp;
 2155              		.loc 1 876 5 is_stmt 1 discriminator 2 view .LVU678
 2156              		.loc 1 876 9 is_stmt 0 discriminator 2 view .LVU679
 2157 0020 1844     		add	r0, r0, r3
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 61


 2158              	.LVL139:
 859:Src/main.c    **** 
 2159              		.loc 1 859 41 discriminator 2 view .LVU680
 2160 0022 0132     		adds	r2, r2, #1
 2161              	.LVL140:
 859:Src/main.c    **** 
 2162              		.loc 1 859 41 discriminator 2 view .LVU681
 2163 0024 D2B2     		uxtb	r2, r2
 2164              	.LVL141:
 2165              	.L95:
 859:Src/main.c    **** 
 2166              		.loc 1 859 3 discriminator 1 view .LVU682
 2167 0026 5F2A     		cmp	r2, #95
 2168 0028 14D8     		bhi	.L100
 861:Src/main.c    ****     cellTemp = (uint16_t) (bmsData[cell][4]);
 2169              		.loc 1 861 5 is_stmt 1 view .LVU683
 2170              	.LVL142:
 862:Src/main.c    ****     cellTemp = cellTemp << 8;
 2171              		.loc 1 862 5 view .LVU684
 862:Src/main.c    ****     cellTemp = cellTemp << 8;
 2172              		.loc 1 862 35 is_stmt 0 view .LVU685
 2173 002a 02EB4203 		add	r3, r2, r2, lsl #1
 2174 002e 5900     		lsls	r1, r3, #1
 2175 0030 6144     		add	r1, r1, ip
 862:Src/main.c    ****     cellTemp = cellTemp << 8;
 2176              		.loc 1 862 14 view .LVU686
 2177 0032 91F804E0 		ldrb	lr, [r1, #4]	@ zero_extendqisi2
 2178              	.LVL143:
 863:Src/main.c    **** 		cellTemp += (uint16_t) (bmsData[cell][5]);
 2179              		.loc 1 863 5 is_stmt 1 view .LVU687
 864:Src/main.c    **** 
 2180              		.loc 1 864 3 view .LVU688
 864:Src/main.c    **** 
 2181              		.loc 1 864 40 is_stmt 0 view .LVU689
 2182 0036 4B79     		ldrb	r3, [r1, #5]	@ zero_extendqisi2
 864:Src/main.c    **** 
 2183              		.loc 1 864 12 view .LVU690
 2184 0038 03EB0E23 		add	r3, r3, lr, lsl #8
 2185 003c 9BB2     		uxth	r3, r3
 2186              	.LVL144:
 866:Src/main.c    ****       minT = cellTemp;
 2187              		.loc 1 866 5 is_stmt 1 view .LVU691
 866:Src/main.c    ****       minT = cellTemp;
 2188              		.loc 1 866 8 is_stmt 0 view .LVU692
 2189 003e 9D42     		cmp	r5, r3
 2190 0040 02D9     		bls	.L96
 867:Src/main.c    ****       minCell = cell + 1;
 2191              		.loc 1 867 7 is_stmt 1 view .LVU693
 2192              	.LVL145:
 868:Src/main.c    ****     }
 2193              		.loc 1 868 7 view .LVU694
 868:Src/main.c    ****     }
 2194              		.loc 1 868 15 is_stmt 0 view .LVU695
 2195 0042 541C     		adds	r4, r2, #1
 2196              	.LVL146:
 868:Src/main.c    ****     }
 2197              		.loc 1 868 15 view .LVU696
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 62


 2198 0044 E4B2     		uxtb	r4, r4
 2199              	.LVL147:
 867:Src/main.c    ****       minCell = cell + 1;
 2200              		.loc 1 867 12 view .LVU697
 2201 0046 1D46     		mov	r5, r3
 2202              	.LVL148:
 2203              	.L96:
 871:Src/main.c    ****       maxT = cellTemp;
 2204              		.loc 1 871 5 is_stmt 1 view .LVU698
 871:Src/main.c    ****       maxT = cellTemp;
 2205              		.loc 1 871 8 is_stmt 0 view .LVU699
 2206 0048 9E42     		cmp	r6, r3
 2207 004a E9D2     		bcs	.L97
 872:Src/main.c    ****       maxCell = cell + 1;
 2208              		.loc 1 872 7 is_stmt 1 view .LVU700
 2209              	.LVL149:
 873:Src/main.c    ****     }
 2210              		.loc 1 873 7 view .LVU701
 873:Src/main.c    ****     }
 2211              		.loc 1 873 15 is_stmt 0 view .LVU702
 2212 004c 571C     		adds	r7, r2, #1
 2213              	.LVL150:
 873:Src/main.c    ****     }
 2214              		.loc 1 873 15 view .LVU703
 2215 004e FFB2     		uxtb	r7, r7
 2216              	.LVL151:
 872:Src/main.c    ****       maxCell = cell + 1;
 2217              		.loc 1 872 12 view .LVU704
 2218 0050 1E46     		mov	r6, r3
 2219 0052 E5E7     		b	.L97
 2220              	.LVL152:
 2221              	.L100:
 872:Src/main.c    ****       maxCell = cell + 1;
 2222              		.loc 1 872 12 view .LVU705
 2223              	.LBE15:
 877:Src/main.c    ****   }
 878:Src/main.c    **** 
 879:Src/main.c    ****   averageT = (uint16_t) (sum / (cfg.numOfICs * cfg.numOfTempPerIC));
 2224              		.loc 1 879 3 is_stmt 1 view .LVU706
 2225              		.loc 1 879 36 is_stmt 0 view .LVU707
 2226 0054 9DF82020 		ldrb	r2, [sp, #32]	@ zero_extendqisi2
 2227              	.LVL153:
 2228              		.loc 1 879 51 view .LVU708
 2229 0058 9DF84330 		ldrb	r3, [sp, #67]	@ zero_extendqisi2
 2230              		.loc 1 879 46 view .LVU709
 2231 005c 03FB02F3 		mul	r3, r3, r2
 2232              		.loc 1 879 30 view .LVU710
 2233 0060 B0FBF3F3 		udiv	r3, r0, r3
 2234              	.LVL154:
 880:Src/main.c    **** 
 881:Src/main.c    ****   TxHeader.StdId = BMSTINF_ID;
 2235              		.loc 1 881 3 is_stmt 1 view .LVU711
 2236              		.loc 1 881 18 is_stmt 0 view .LVU712
 2237 0064 1149     		ldr	r1, .L101
 2238 0066 0A22     		movs	r2, #10
 2239 0068 0A60     		str	r2, [r1]
 882:Src/main.c    ****   TxHeader.DLC = 8;
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 63


 2240              		.loc 1 882 3 is_stmt 1 view .LVU713
 2241              		.loc 1 882 16 is_stmt 0 view .LVU714
 2242 006a 0822     		movs	r2, #8
 2243 006c 0A61     		str	r2, [r1, #16]
 883:Src/main.c    ****   uint8_t BMSTINF_DATA[8];
 2244              		.loc 1 883 3 is_stmt 1 view .LVU715
 884:Src/main.c    **** 
 885:Src/main.c    ****   BMSTINF_DATA[0] = (uint8_t) ((maxT >> 8) & 0xFF);
 2245              		.loc 1 885 3 view .LVU716
 2246              		.loc 1 885 21 is_stmt 0 view .LVU717
 2247 006e 26FA02F2 		lsr	r2, r6, r2
 2248              		.loc 1 885 19 view .LVU718
 2249 0072 8DF80020 		strb	r2, [sp]
 886:Src/main.c    ****   BMSTINF_DATA[1] = (uint8_t) (maxT & 0xFF);
 2250              		.loc 1 886 3 is_stmt 1 view .LVU719
 2251              		.loc 1 886 19 is_stmt 0 view .LVU720
 2252 0076 8DF80160 		strb	r6, [sp, #1]
 887:Src/main.c    ****   BMSTINF_DATA[2] = maxCell;
 2253              		.loc 1 887 3 is_stmt 1 view .LVU721
 2254              		.loc 1 887 19 is_stmt 0 view .LVU722
 2255 007a 8DF80270 		strb	r7, [sp, #2]
 888:Src/main.c    ****   BMSTINF_DATA[3] = (uint8_t) ((minT >> 8) & 0xFF);
 2256              		.loc 1 888 3 is_stmt 1 view .LVU723
 2257              		.loc 1 888 21 is_stmt 0 view .LVU724
 2258 007e 2A0A     		lsrs	r2, r5, #8
 2259              		.loc 1 888 19 view .LVU725
 2260 0080 8DF80320 		strb	r2, [sp, #3]
 889:Src/main.c    ****   BMSTINF_DATA[4] = (uint8_t) (minT & 0xFF);
 2261              		.loc 1 889 3 is_stmt 1 view .LVU726
 2262              		.loc 1 889 19 is_stmt 0 view .LVU727
 2263 0084 8DF80450 		strb	r5, [sp, #4]
 890:Src/main.c    ****   BMSTINF_DATA[5] = minCell;
 2264              		.loc 1 890 3 is_stmt 1 view .LVU728
 2265              		.loc 1 890 19 is_stmt 0 view .LVU729
 2266 0088 8DF80540 		strb	r4, [sp, #5]
 891:Src/main.c    ****   BMSTINF_DATA[6] = (uint8_t) ((averageT >> 8) & 0xFF);
 2267              		.loc 1 891 3 is_stmt 1 view .LVU730
 2268              		.loc 1 891 21 is_stmt 0 view .LVU731
 2269 008c C3F30722 		ubfx	r2, r3, #8, #8
 2270              		.loc 1 891 19 view .LVU732
 2271 0090 8DF80620 		strb	r2, [sp, #6]
 892:Src/main.c    ****   BMSTINF_DATA[7] = (uint8_t) (averageT & 0xFF);
 2272              		.loc 1 892 3 is_stmt 1 view .LVU733
 2273              		.loc 1 892 19 is_stmt 0 view .LVU734
 2274 0094 8DF80730 		strb	r3, [sp, #7]
 893:Src/main.c    **** 
 894:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, BMSTINF_DATA, &TxMailbox);  
 2275              		.loc 1 894 3 is_stmt 1 view .LVU735
 2276 0098 054B     		ldr	r3, .L101+4
 2277              	.LVL155:
 2278              		.loc 1 894 3 is_stmt 0 view .LVU736
 2279 009a 6A46     		mov	r2, sp
 2280 009c 0548     		ldr	r0, .L101+8
 2281              	.LVL156:
 2282              		.loc 1 894 3 view .LVU737
 2283 009e FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 2284              	.LVL157:
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 64


 895:Src/main.c    **** 
 896:Src/main.c    **** };
 2285              		.loc 1 896 1 view .LVU738
 2286 00a2 03B0     		add	sp, sp, #12
 2287              	.LCFI59:
 2288              		.cfi_def_cfa_offset 36
 2289              		@ sp needed
 2290 00a4 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 2291              	.LCFI60:
 2292              		.cfi_restore 14
 2293              		.cfi_restore 7
 2294              		.cfi_restore 6
 2295              		.cfi_restore 5
 2296              		.cfi_restore 4
 2297              		.cfi_def_cfa_offset 16
 2298              	.LVL158:
 2299              		.loc 1 896 1 view .LVU739
 2300 00a8 04B0     		add	sp, sp, #16
 2301              	.LCFI61:
 2302              		.cfi_def_cfa_offset 0
 2303 00aa 7047     		bx	lr
 2304              	.L102:
 2305              		.align	2
 2306              	.L101:
 2307 00ac 00000000 		.word	TxHeader
 2308 00b0 00000000 		.word	TxMailbox
 2309 00b4 00000000 		.word	hcan
 2310              		.cfi_endproc
 2311              	.LFE81:
 2313              		.section	.text.main,"ax",%progbits
 2314              		.align	1
 2315              		.global	main
 2316              		.syntax unified
 2317              		.thumb
 2318              		.thumb_func
 2319              		.fpu softvfp
 2321              	main:
 2322              	.LFB66:
 110:Src/main.c    ****   /* USER CODE BEGIN 1 */
 2323              		.loc 1 110 1 is_stmt 1 view -0
 2324              		.cfi_startproc
 2325              		@ args = 0, pretend = 0, frame = 776
 2326              		@ frame_needed = 0, uses_anonymous_args = 0
 2327 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2328              	.LCFI62:
 2329              		.cfi_def_cfa_offset 36
 2330              		.cfi_offset 4, -36
 2331              		.cfi_offset 5, -32
 2332              		.cfi_offset 6, -28
 2333              		.cfi_offset 7, -24
 2334              		.cfi_offset 8, -20
 2335              		.cfi_offset 9, -16
 2336              		.cfi_offset 10, -12
 2337              		.cfi_offset 11, -8
 2338              		.cfi_offset 14, -4
 2339 0004 ADF55B7D 		sub	sp, sp, #876
 2340              	.LCFI63:
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 65


 2341              		.cfi_def_cfa_offset 912
 118:Src/main.c    **** 
 2342              		.loc 1 118 3 view .LVU741
 2343 0008 FFF7FEFF 		bl	HAL_Init
 2344              	.LVL159:
 125:Src/main.c    **** 
 2345              		.loc 1 125 3 view .LVU742
 2346 000c FFF7FEFF 		bl	SystemClock_Config
 2347              	.LVL160:
 132:Src/main.c    ****   MX_ADC1_Init();
 2348              		.loc 1 132 3 view .LVU743
 2349 0010 FFF7FEFF 		bl	MX_GPIO_Init
 2350              	.LVL161:
 133:Src/main.c    ****   MX_CAN_Init();
 2351              		.loc 1 133 3 view .LVU744
 2352 0014 FFF7FEFF 		bl	MX_ADC1_Init
 2353              	.LVL162:
 134:Src/main.c    ****   //MX_SPI1_Init();
 2354              		.loc 1 134 3 view .LVU745
 2355 0018 FFF7FEFF 		bl	MX_CAN_Init
 2356              	.LVL163:
 136:Src/main.c    ****   /* USER CODE BEGIN 2 */
 2357              		.loc 1 136 3 view .LVU746
 2358 001c FFF7FEFF 		bl	MX_TIM2_Init
 2359              	.LVL164:
 139:Src/main.c    ****   initPECTable();
 2360              		.loc 1 139 3 view .LVU747
 2361 0020 FFF7FEFF 		bl	SPI_Init
 2362              	.LVL165:
 140:Src/main.c    ****   loadConfig(&BMSconfig);
 2363              		.loc 1 140 3 view .LVU748
 2364 0024 FFF7FEFF 		bl	initPECTable
 2365              	.LVL166:
 141:Src/main.c    **** 
 2366              		.loc 1 141 3 view .LVU749
 2367 0028 A648     		ldr	r0, .L110
 2368 002a FFF7FEFF 		bl	loadConfig
 2369              	.LVL167:
 143:Src/main.c    ****   uint8_t BMS_STATUS[6];
 2370              		.loc 1 143 3 view .LVU750
 144:Src/main.c    ****   bool discharge[12][8];
 2371              		.loc 1 144 3 view .LVU751
 145:Src/main.c    ****   bool full_discharge[12][8];
 2372              		.loc 1 145 3 view .LVU752
 146:Src/main.c    **** 
 2373              		.loc 1 146 3 view .LVU753
 148:Src/main.c    ****   bool CHARGE_EN = 0;
 2374              		.loc 1 148 3 view .LVU754
 149:Src/main.c    ****   bool BMS_FAULT = 0;
 2375              		.loc 1 149 3 view .LVU755
 150:Src/main.c    **** 
 2376              		.loc 1 150 3 view .LVU756
 150:Src/main.c    **** 
 2377              		.loc 1 150 3 is_stmt 0 view .LVU757
 2378 002e 73E0     		b	.L107
 2379              	.LVL168:
 2380              	.L109:
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 66


 187:Src/main.c    ****       
 2381              		.loc 1 187 9 is_stmt 1 view .LVU758
 2382 0030 A449     		ldr	r1, .L110
 2383 0032 18AB     		add	r3, sp, #96
 2384 0034 1793     		str	r3, [sp, #92]
 2385 0036 1696     		str	r6, [sp, #88]
 2386 0038 30AB     		add	r3, sp, #192
 2387 003a 1593     		str	r3, [sp, #84]
 2388 003c 4AAB     		add	r3, sp, #296
 2389 003e 1493     		str	r3, [sp, #80]
 2390 0040 0F68     		ldr	r7, [r1]	@ unaligned
 2391 0042 4E68     		ldr	r6, [r1, #4]	@ unaligned
 2392              	.LVL169:
 187:Src/main.c    ****       
 2393              		.loc 1 187 9 is_stmt 0 view .LVU759
 2394 0044 8D68     		ldr	r5, [r1, #8]	@ unaligned
 2395              	.LVL170:
 187:Src/main.c    ****       
 2396              		.loc 1 187 9 view .LVU760
 2397 0046 CC68     		ldr	r4, [r1, #12]	@ unaligned
 2398 0048 4E22     		movs	r2, #78
 2399 004a 1031     		adds	r1, r1, #16
 2400 004c 6846     		mov	r0, sp
 2401              	.LVL171:
 187:Src/main.c    ****       
 2402              		.loc 1 187 9 view .LVU761
 2403 004e FFF7FEFF 		bl	memcpy
 2404              	.LVL172:
 2405 0052 3846     		mov	r0, r7
 2406 0054 3146     		mov	r1, r6
 2407 0056 2A46     		mov	r2, r5
 2408 0058 2346     		mov	r3, r4
 2409 005a FFF7FEFF 		bl	setDischarge
 2410              	.LVL173:
 2411 005e 03E1     		b	.L105
 2412              	.L106:
 196:Src/main.c    ****         dischargeCellGroups(BMSconfig, full_discharge);
 2413              		.loc 1 196 9 is_stmt 1 view .LVU762
 2414 0060 984C     		ldr	r4, .L110
 2415 0062 4AAB     		add	r3, sp, #296
 2416 0064 1593     		str	r3, [sp, #84]
 2417 0066 18AF     		add	r7, sp, #96
 2418 0068 1497     		str	r7, [sp, #80]
 2419 006a D4F800B0 		ldr	fp, [r4]	@ unaligned
 2420 006e D4F804A0 		ldr	r10, [r4, #4]	@ unaligned
 2421 0072 D4F80890 		ldr	r9, [r4, #8]	@ unaligned
 2422 0076 D4F80C80 		ldr	r8, [r4, #12]	@ unaligned
 2423 007a 04F11005 		add	r5, r4, #16
 2424 007e 4E26     		movs	r6, #78
 2425 0080 3246     		mov	r2, r6
 2426 0082 2946     		mov	r1, r5
 2427 0084 6846     		mov	r0, sp
 2428 0086 FFF7FEFF 		bl	memcpy
 2429              	.LVL174:
 2430 008a 5846     		mov	r0, fp
 2431 008c 5146     		mov	r1, r10
 2432 008e 4A46     		mov	r2, r9
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 67


 2433 0090 4346     		mov	r3, r8
 2434 0092 FFF7FEFF 		bl	checkDischarge
 2435              	.LVL175:
 197:Src/main.c    ****         HAL_Delay(BMSconfig.dischargeTime);
 2436              		.loc 1 197 9 view .LVU763
 2437 0096 1497     		str	r7, [sp, #80]
 2438 0098 D4F800A0 		ldr	r10, [r4]	@ unaligned
 2439 009c D4F80490 		ldr	r9, [r4, #4]	@ unaligned
 2440 00a0 D4F80880 		ldr	r8, [r4, #8]	@ unaligned
 2441 00a4 E768     		ldr	r7, [r4, #12]	@ unaligned
 2442 00a6 3246     		mov	r2, r6
 2443 00a8 2946     		mov	r1, r5
 2444 00aa 6846     		mov	r0, sp
 2445 00ac FFF7FEFF 		bl	memcpy
 2446              	.LVL176:
 2447 00b0 5046     		mov	r0, r10
 2448 00b2 4946     		mov	r1, r9
 2449 00b4 4246     		mov	r2, r8
 2450 00b6 3B46     		mov	r3, r7
 2451 00b8 FFF7FEFF 		bl	dischargeCellGroups
 2452              	.LVL177:
 198:Src/main.c    ****       }
 2453              		.loc 1 198 9 view .LVU764
 2454 00bc A08E     		ldrh	r0, [r4, #52]
 2455 00be FFF7FEFF 		bl	HAL_Delay
 2456              	.LVL178:
 2457              	.L104:
 203:Src/main.c    ****     BMSSTAT_message(BMSconfig, BMS_STATUS);
 2458              		.loc 1 203 5 view .LVU765
 2459 00c2 804C     		ldr	r4, .L110
 2460 00c4 4AAB     		add	r3, sp, #296
 2461 00c6 1493     		str	r3, [sp, #80]
 2462 00c8 D4F800A0 		ldr	r10, [r4]	@ unaligned
 2463 00cc D4F80490 		ldr	r9, [r4, #4]	@ unaligned
 2464 00d0 D4F80880 		ldr	r8, [r4, #8]	@ unaligned
 2465 00d4 E768     		ldr	r7, [r4, #12]	@ unaligned
 2466 00d6 04F11005 		add	r5, r4, #16
 2467 00da 4E26     		movs	r6, #78
 2468 00dc 3246     		mov	r2, r6
 2469 00de 2946     		mov	r1, r5
 2470 00e0 6846     		mov	r0, sp
 2471 00e2 FFF7FEFF 		bl	memcpy
 2472              	.LVL179:
 2473 00e6 5046     		mov	r0, r10
 2474 00e8 4946     		mov	r1, r9
 2475 00ea 4246     		mov	r2, r8
 2476 00ec 3B46     		mov	r3, r7
 2477 00ee FFF7FEFF 		bl	CELLVAL_message
 2478              	.LVL180:
 204:Src/main.c    ****     PACKSTAT_message(BMSconfig, BMS_DATA);
 2479              		.loc 1 204 5 view .LVU766
 2480 00f2 48AB     		add	r3, sp, #288
 2481 00f4 1493     		str	r3, [sp, #80]
 2482 00f6 D4F80090 		ldr	r9, [r4]	@ unaligned
 2483 00fa D4F80480 		ldr	r8, [r4, #4]	@ unaligned
 2484 00fe A768     		ldr	r7, [r4, #8]	@ unaligned
 2485 0100 E468     		ldr	r4, [r4, #12]	@ unaligned
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 68


 2486 0102 3246     		mov	r2, r6
 2487 0104 2946     		mov	r1, r5
 2488 0106 6846     		mov	r0, sp
 2489 0108 FFF7FEFF 		bl	memcpy
 2490              	.LVL181:
 2491 010c 4846     		mov	r0, r9
 2492 010e 4146     		mov	r1, r8
 2493 0110 3A46     		mov	r2, r7
 2494 0112 2346     		mov	r3, r4
 2495 0114 FFF7FEFF 		bl	BMSSTAT_message
 2496              	.LVL182:
 205:Src/main.c    **** 
 2497              		.loc 1 205 5 view .LVU767
 2498              	.L107:
 156:Src/main.c    ****   {
 2499              		.loc 1 156 3 view .LVU768
 163:Src/main.c    **** 
 2500              		.loc 1 163 5 view .LVU769
 2501 0118 6A4C     		ldr	r4, .L110
 2502 011a D4F800A0 		ldr	r10, [r4]	@ unaligned
 2503 011e D4F80490 		ldr	r9, [r4, #4]	@ unaligned
 2504 0122 D4F80880 		ldr	r8, [r4, #8]	@ unaligned
 2505 0126 E768     		ldr	r7, [r4, #12]	@ unaligned
 2506 0128 04F11005 		add	r5, r4, #16
 2507 012c 4E26     		movs	r6, #78
 2508 012e 3246     		mov	r2, r6
 2509 0130 2946     		mov	r1, r5
 2510 0132 6846     		mov	r0, sp
 2511 0134 FFF7FEFF 		bl	memcpy
 2512              	.LVL183:
 2513 0138 5046     		mov	r0, r10
 2514 013a 4946     		mov	r1, r9
 2515 013c 4246     		mov	r2, r8
 2516 013e 3B46     		mov	r3, r7
 2517 0140 FFF7FEFF 		bl	writeConfigAll
 2518              	.LVL184:
 166:Src/main.c    **** 
 2519              		.loc 1 166 5 view .LVU770
 2520 0144 6420     		movs	r0, #100
 2521 0146 FFF7FEFF 		bl	HAL_Delay
 2522              	.LVL185:
 169:Src/main.c    ****     BMSVINF_message(BMSconfig, BMS_DATA);
 2523              		.loc 1 169 5 view .LVU771
 2524 014a 4AAF     		add	r7, sp, #296
 2525 014c 1497     		str	r7, [sp, #80]
 2526 014e D4F800B0 		ldr	fp, [r4]	@ unaligned
 2527 0152 D4F804A0 		ldr	r10, [r4, #4]	@ unaligned
 2528 0156 D4F80890 		ldr	r9, [r4, #8]	@ unaligned
 2529 015a D4F80C80 		ldr	r8, [r4, #12]	@ unaligned
 2530 015e 3246     		mov	r2, r6
 2531 0160 2946     		mov	r1, r5
 2532 0162 6846     		mov	r0, sp
 2533 0164 FFF7FEFF 		bl	memcpy
 2534              	.LVL186:
 2535 0168 5846     		mov	r0, fp
 2536 016a 5146     		mov	r1, r10
 2537 016c 4A46     		mov	r2, r9
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 69


 2538 016e 4346     		mov	r3, r8
 2539 0170 FFF7FEFF 		bl	readAllCellVoltages
 2540              	.LVL187:
 170:Src/main.c    **** 
 2541              		.loc 1 170 5 view .LVU772
 2542 0174 1497     		str	r7, [sp, #80]
 2543 0176 D4F800B0 		ldr	fp, [r4]	@ unaligned
 2544 017a D4F804A0 		ldr	r10, [r4, #4]	@ unaligned
 2545 017e D4F80890 		ldr	r9, [r4, #8]	@ unaligned
 2546 0182 D4F80C80 		ldr	r8, [r4, #12]	@ unaligned
 2547 0186 3246     		mov	r2, r6
 2548 0188 2946     		mov	r1, r5
 2549 018a 6846     		mov	r0, sp
 2550 018c FFF7FEFF 		bl	memcpy
 2551              	.LVL188:
 2552 0190 5846     		mov	r0, fp
 2553 0192 5146     		mov	r1, r10
 2554 0194 4A46     		mov	r2, r9
 2555 0196 4346     		mov	r3, r8
 2556 0198 FFF7FEFF 		bl	BMSVINF_message
 2557              	.LVL189:
 173:Src/main.c    ****     BMSTINF_message(BMSconfig, BMS_DATA);
 2558              		.loc 1 173 5 view .LVU773
 2559 019c 1497     		str	r7, [sp, #80]
 2560 019e D4F800B0 		ldr	fp, [r4]	@ unaligned
 2561 01a2 D4F804A0 		ldr	r10, [r4, #4]	@ unaligned
 2562 01a6 D4F80890 		ldr	r9, [r4, #8]	@ unaligned
 2563 01aa D4F80C80 		ldr	r8, [r4, #12]	@ unaligned
 2564 01ae 3246     		mov	r2, r6
 2565 01b0 2946     		mov	r1, r5
 2566 01b2 6846     		mov	r0, sp
 2567 01b4 FFF7FEFF 		bl	memcpy
 2568              	.LVL190:
 2569 01b8 5846     		mov	r0, fp
 2570 01ba 5146     		mov	r1, r10
 2571 01bc 4A46     		mov	r2, r9
 2572 01be 4346     		mov	r3, r8
 2573 01c0 FFF7FEFF 		bl	readAllCellTemps
 2574              	.LVL191:
 174:Src/main.c    **** 
 2575              		.loc 1 174 5 view .LVU774
 2576 01c4 1497     		str	r7, [sp, #80]
 2577 01c6 D4F800B0 		ldr	fp, [r4]	@ unaligned
 2578 01ca D4F804A0 		ldr	r10, [r4, #4]	@ unaligned
 2579 01ce D4F80890 		ldr	r9, [r4, #8]	@ unaligned
 2580 01d2 D4F80C80 		ldr	r8, [r4, #12]	@ unaligned
 2581 01d6 3246     		mov	r2, r6
 2582 01d8 2946     		mov	r1, r5
 2583 01da 6846     		mov	r0, sp
 2584 01dc FFF7FEFF 		bl	memcpy
 2585              	.LVL192:
 2586 01e0 5846     		mov	r0, fp
 2587 01e2 5146     		mov	r1, r10
 2588 01e4 4A46     		mov	r2, r9
 2589 01e6 4346     		mov	r3, r8
 2590 01e8 FFF7FEFF 		bl	BMSTINF_message
 2591              	.LVL193:
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 70


 177:Src/main.c    ****     BMS_FAULT = FAULT_check(BMSconfig, BMS_DATA, BMS_STATUS);
 2592              		.loc 1 177 5 view .LVU775
 2593 01ec 1497     		str	r7, [sp, #80]
 2594 01ee D4F800B0 		ldr	fp, [r4]	@ unaligned
 2595 01f2 D4F804A0 		ldr	r10, [r4, #4]	@ unaligned
 2596 01f6 D4F80890 		ldr	r9, [r4, #8]	@ unaligned
 2597 01fa D4F80C80 		ldr	r8, [r4, #12]	@ unaligned
 2598 01fe 3246     		mov	r2, r6
 2599 0200 2946     		mov	r1, r5
 2600 0202 6846     		mov	r0, sp
 2601 0204 FFF7FEFF 		bl	memcpy
 2602              	.LVL194:
 2603 0208 5846     		mov	r0, fp
 2604 020a 5146     		mov	r1, r10
 2605 020c 4A46     		mov	r2, r9
 2606 020e 4346     		mov	r3, r8
 2607 0210 FFF7FEFF 		bl	checkAllCellConnections
 2608              	.LVL195:
 178:Src/main.c    **** 
 2609              		.loc 1 178 5 view .LVU776
 178:Src/main.c    **** 
 2610              		.loc 1 178 17 is_stmt 0 view .LVU777
 2611 0214 48AB     		add	r3, sp, #288
 2612 0216 1593     		str	r3, [sp, #84]
 2613 0218 1497     		str	r7, [sp, #80]
 2614 021a D4F80090 		ldr	r9, [r4]	@ unaligned
 2615 021e D4F80480 		ldr	r8, [r4, #4]	@ unaligned
 2616 0222 A768     		ldr	r7, [r4, #8]	@ unaligned
 2617 0224 E468     		ldr	r4, [r4, #12]	@ unaligned
 2618 0226 3246     		mov	r2, r6
 2619 0228 2946     		mov	r1, r5
 2620 022a 6846     		mov	r0, sp
 2621 022c FFF7FEFF 		bl	memcpy
 2622              	.LVL196:
 2623 0230 4846     		mov	r0, r9
 2624 0232 4146     		mov	r1, r8
 2625 0234 3A46     		mov	r2, r7
 2626 0236 2346     		mov	r3, r4
 2627 0238 FFF7FEFF 		bl	FAULT_check
 2628              	.LVL197:
 2629 023c 0646     		mov	r6, r0
 2630              	.LVL198:
 181:Src/main.c    ****     CHARGE_EN = HAL_GPIO_ReadPin(GPIOB, CHARGE_EN_Pin);
 2631              		.loc 1 181 5 is_stmt 1 view .LVU778
 181:Src/main.c    ****     CHARGE_EN = HAL_GPIO_ReadPin(GPIOB, CHARGE_EN_Pin);
 2632              		.loc 1 181 11 is_stmt 0 view .LVU779
 2633 023e 224C     		ldr	r4, .L110+4
 2634 0240 2021     		movs	r1, #32
 2635 0242 2046     		mov	r0, r4
 2636 0244 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 2637              	.LVL199:
 2638 0248 0546     		mov	r5, r0
 2639              	.LVL200:
 182:Src/main.c    **** 
 2640              		.loc 1 182 5 is_stmt 1 view .LVU780
 182:Src/main.c    **** 
 2641              		.loc 1 182 17 is_stmt 0 view .LVU781
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 71


 2642 024a 0821     		movs	r1, #8
 2643 024c 2046     		mov	r0, r4
 2644 024e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 2645              	.LVL201:
 184:Src/main.c    **** 
 2646              		.loc 1 184 5 is_stmt 1 view .LVU782
 184:Src/main.c    **** 
 2647              		.loc 1 184 8 is_stmt 0 view .LVU783
 2648 0252 002D     		cmp	r5, #0
 2649 0254 7FF435AF 		bne	.L104
 184:Src/main.c    **** 
 2650              		.loc 1 184 20 discriminator 1 view .LVU784
 2651 0258 0028     		cmp	r0, #0
 2652 025a 7FF432AF 		bne	.L104
 186:Src/main.c    ****         setDischarge(BMSconfig, BMS_DATA, discharge, BMS_FAULT, full_discharge);
 2653              		.loc 1 186 7 is_stmt 1 view .LVU785
 186:Src/main.c    ****         setDischarge(BMSconfig, BMS_DATA, discharge, BMS_FAULT, full_discharge);
 2654              		.loc 1 186 22 is_stmt 0 view .LVU786
 2655 025e 1B4B     		ldr	r3, .L110+8
 2656 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 186:Src/main.c    ****         setDischarge(BMSconfig, BMS_DATA, discharge, BMS_FAULT, full_discharge);
 2657              		.loc 1 186 10 view .LVU787
 2658 0262 002B     		cmp	r3, #0
 2659 0264 7FF4E4AE 		bne	.L109
 2660              	.LVL202:
 2661              	.L105:
 189:Src/main.c    **** 
 2662              		.loc 1 189 7 is_stmt 1 view .LVU788
 2663 0268 1649     		ldr	r1, .L110
 2664 026a 0F68     		ldr	r7, [r1]	@ unaligned
 2665 026c 4E68     		ldr	r6, [r1, #4]	@ unaligned
 2666 026e 8D68     		ldr	r5, [r1, #8]	@ unaligned
 2667 0270 CC68     		ldr	r4, [r1, #12]	@ unaligned
 2668 0272 4E22     		movs	r2, #78
 2669 0274 1031     		adds	r1, r1, #16
 2670 0276 6846     		mov	r0, sp
 2671 0278 FFF7FEFF 		bl	memcpy
 2672              	.LVL203:
 2673 027c 3846     		mov	r0, r7
 2674 027e 3146     		mov	r1, r6
 2675 0280 2A46     		mov	r2, r5
 2676 0282 2346     		mov	r3, r4
 2677 0284 FFF7FEFF 		bl	setChargerTxData
 2678              	.LVL204:
 191:Src/main.c    ****         dischargeCellGroups(BMSconfig, discharge);
 2679              		.loc 1 191 7 view .LVU789
 191:Src/main.c    ****         dischargeCellGroups(BMSconfig, discharge);
 2680              		.loc 1 191 22 is_stmt 0 view .LVU790
 2681 0288 104B     		ldr	r3, .L110+8
 2682 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 191:Src/main.c    ****         dischargeCellGroups(BMSconfig, discharge);
 2683              		.loc 1 191 10 view .LVU791
 2684 028c 002B     		cmp	r3, #0
 2685 028e 3FF4E7AE 		beq	.L106
 192:Src/main.c    ****         HAL_Delay(BMSconfig.dischargeTime);
 2686              		.loc 1 192 9 is_stmt 1 view .LVU792
 2687 0292 0C4C     		ldr	r4, .L110
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 72


 2688 0294 30AB     		add	r3, sp, #192
 2689 0296 1493     		str	r3, [sp, #80]
 2690 0298 D4F80080 		ldr	r8, [r4]	@ unaligned
 2691 029c 6768     		ldr	r7, [r4, #4]	@ unaligned
 2692 029e A668     		ldr	r6, [r4, #8]	@ unaligned
 2693 02a0 E568     		ldr	r5, [r4, #12]	@ unaligned
 2694 02a2 4E22     		movs	r2, #78
 2695 02a4 04F11001 		add	r1, r4, #16
 2696 02a8 6846     		mov	r0, sp
 2697 02aa FFF7FEFF 		bl	memcpy
 2698              	.LVL205:
 2699 02ae 4046     		mov	r0, r8
 2700 02b0 3946     		mov	r1, r7
 2701 02b2 3246     		mov	r2, r6
 2702 02b4 2B46     		mov	r3, r5
 2703 02b6 FFF7FEFF 		bl	dischargeCellGroups
 2704              	.LVL206:
 193:Src/main.c    ****       }
 2705              		.loc 1 193 9 view .LVU793
 2706 02ba A08E     		ldrh	r0, [r4, #52]
 2707 02bc FFF7FEFF 		bl	HAL_Delay
 2708              	.LVL207:
 2709 02c0 FFE6     		b	.L104
 2710              	.L111:
 2711 02c2 00BF     		.align	2
 2712              	.L110:
 2713 02c4 00000000 		.word	BMSconfig
 2714 02c8 000C0140 		.word	1073810432
 2715 02cc 00000000 		.word	.LANCHOR0
 2716              		.cfi_endproc
 2717              	.LFE66:
 2719              		.section	.text.PACKSTAT_message,"ax",%progbits
 2720              		.align	1
 2721              		.global	PACKSTAT_message
 2722              		.syntax unified
 2723              		.thumb
 2724              		.thumb_func
 2725              		.fpu softvfp
 2727              	PACKSTAT_message:
 2728              	.LVL208:
 2729              	.LFB82:
 897:Src/main.c    **** 
 898:Src/main.c    **** void PACKSTAT_message(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]) {
 2730              		.loc 1 898 75 view -0
 2731              		.cfi_startproc
 2732              		@ args = 100, pretend = 16, frame = 0
 2733              		@ frame_needed = 0, uses_anonymous_args = 0
 2734              		@ link register save eliminated.
 2735              		.loc 1 898 75 is_stmt 0 view .LVU795
 2736 0000 84B0     		sub	sp, sp, #16
 2737              	.LCFI64:
 2738              		.cfi_def_cfa_offset 16
 2739 0002 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 899:Src/main.c    **** 
 900:Src/main.c    ****   //read current sensor
 901:Src/main.c    **** 
 902:Src/main.c    ****   //use sumOfCells
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 73


 903:Src/main.c    **** 
 904:Src/main.c    **** }
 2740              		.loc 1 904 1 is_stmt 1 view .LVU796
 2741 0006 04B0     		add	sp, sp, #16
 2742              	.LCFI65:
 2743              		.cfi_def_cfa_offset 0
 2744 0008 7047     		bx	lr
 2745              		.cfi_endproc
 2746              	.LFE82:
 2748              		.section	.text.Error_Handler,"ax",%progbits
 2749              		.align	1
 2750              		.global	Error_Handler
 2751              		.syntax unified
 2752              		.thumb
 2753              		.thumb_func
 2754              		.fpu softvfp
 2756              	Error_Handler:
 2757              	.LFB83:
 905:Src/main.c    **** 
 906:Src/main.c    **** /* USER CODE END 4 */
 907:Src/main.c    **** 
 908:Src/main.c    **** /**
 909:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 910:Src/main.c    ****   * @retval None
 911:Src/main.c    ****   */
 912:Src/main.c    **** void Error_Handler(void)
 913:Src/main.c    **** {
 2758              		.loc 1 913 1 view -0
 2759              		.cfi_startproc
 2760              		@ args = 0, pretend = 0, frame = 0
 2761              		@ frame_needed = 0, uses_anonymous_args = 0
 2762              		@ link register save eliminated.
 914:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 915:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 916:Src/main.c    **** 
 917:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 918:Src/main.c    **** }
 2763              		.loc 1 918 1 view .LVU798
 2764 0000 7047     		bx	lr
 2765              		.cfi_endproc
 2766              	.LFE83:
 2768              		.global	chargeRate
 2769              		.comm	sumOfCells,4,4
 2770              		.comm	minimum,2,2
 2771              		.comm	BMSSTAT_DATA,6,4
 2772              		.comm	CELLVAL_DATA,6,4
 2773              		.comm	ChargerTxData,8,4
 2774              		.comm	ChargerTxHeader,24,4
 2775              		.comm	TxMailbox,4,4
 2776              		.comm	RxData,8,4
 2777              		.comm	TxData,8,4
 2778              		.comm	RxHeader,28,4
 2779              		.comm	TxHeader,24,4
 2780              		.comm	BMSconfig,94,4
 2781              		.comm	CommandCode,2,2
 2782              		.comm	htim2,64,4
 2783              		.comm	hspi1,88,4
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 74


 2784              		.comm	hcan,40,4
 2785              		.comm	hadc1,48,4
 2786              		.section	.data.chargeRate,"aw"
 2787              		.set	.LANCHOR0,. + 0
 2790              	chargeRate:
 2791 0000 02       		.byte	2
 2792              		.text
 2793              	.Letext0:
 2794              		.file 2 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 2795              		.file 3 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 2796              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 2797              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2798              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2799              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2800              		.file 8 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 2801              		.file 9 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 2802              		.file 10 "c:\\arm-gcc\\8-2018-q4-major\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 2803              		.file 11 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 2804              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2805              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2806              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2807              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2808              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2809              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 2810              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2811              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 2812              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2813              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 2814              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2815              		.file 23 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\stdlib.h"
 2816              		.file 24 "Inc/BMSconfig.h"
 2817              		.file 25 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\math.h"
 2818              		.file 26 "Inc/LTC6811.h"
 2819              		.file 27 "<built-in>"
 2820              		.file 28 "Inc/SPI.h"
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 75


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\cygwin64\tmp\cccuAMtX.s:16     .text.MX_GPIO_Init:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\cygwin64\tmp\cccuAMtX.s:208    .text.MX_GPIO_Init:000000e0 $d
C:\cygwin64\tmp\cccuAMtX.s:216    .text.MX_ADC1_Init:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:222    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\cygwin64\tmp\cccuAMtX.s:299    .text.MX_ADC1_Init:00000040 $d
                            *COM*:00000030 hadc1
C:\cygwin64\tmp\cccuAMtX.s:305    .text.MX_CAN_Init:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:311    .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\cygwin64\tmp\cccuAMtX.s:465    .text.MX_CAN_Init:00000088 $d
                            *COM*:00000028 hcan
                            *COM*:00000018 TxHeader
                            *COM*:00000018 ChargerTxHeader
C:\cygwin64\tmp\cccuAMtX.s:474    .text.MX_TIM2_Init:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:480    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\cygwin64\tmp\cccuAMtX.s:568    .text.MX_TIM2_Init:00000058 $d
                            *COM*:00000040 htim2
C:\cygwin64\tmp\cccuAMtX.s:573    .text.SystemClock_Config:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:580    .text.SystemClock_Config:00000000 SystemClock_Config
C:\cygwin64\tmp\cccuAMtX.s:677    .text.FAULT_check:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:684    .text.FAULT_check:00000000 FAULT_check
C:\cygwin64\tmp\cccuAMtX.s:1009   .text.FAULT_check:00000134 $d
C:\cygwin64\tmp\cccuAMtX.s:1017   .text.balancingThreshold:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:1024   .text.balancingThreshold:00000000 balancingThreshold
C:\cygwin64\tmp\cccuAMtX.s:1121   .text.balancingThreshold:00000058 $d
                            *COM*:00000002 minimum
C:\cygwin64\tmp\cccuAMtX.s:1126   .text.setDischarge:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:1133   .text.setDischarge:00000000 setDischarge
C:\cygwin64\tmp\cccuAMtX.s:1385   .text.setDischarge:00000114 $d
C:\cygwin64\tmp\cccuAMtX.s:1391   .text.checkDischarge:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:1398   .text.checkDischarge:00000000 checkDischarge
C:\cygwin64\tmp\cccuAMtX.s:1551   .text.checkDischarge:00000074 $d
C:\cygwin64\tmp\cccuAMtX.s:1557   .text.setChargerTxData:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:1564   .text.setChargerTxData:00000000 setChargerTxData
C:\cygwin64\tmp\cccuAMtX.s:1671   .text.setChargerTxData:00000068 $d
                            *COM*:00000008 ChargerTxData
                            *COM*:00000004 TxMailbox
C:\cygwin64\tmp\cccuAMtX.s:1680   .text.CELLVAL_message:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:1687   .text.CELLVAL_message:00000000 CELLVAL_message
C:\cygwin64\tmp\cccuAMtX.s:1800   .text.CELLVAL_message:0000005c $d
                            *COM*:00000006 CELLVAL_DATA
C:\cygwin64\tmp\cccuAMtX.s:1808   .text.BMSSTAT_message:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:1815   .text.BMSSTAT_message:00000000 BMSSTAT_message
C:\cygwin64\tmp\cccuAMtX.s:1861   .text.BMSSTAT_message:00000028 $d
C:\cygwin64\tmp\cccuAMtX.s:1868   .text.BMSVINF_message:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:1875   .text.BMSVINF_message:00000000 BMSVINF_message
C:\cygwin64\tmp\cccuAMtX.s:2087   .text.BMSVINF_message:000000b4 $d
                            *COM*:00000004 sumOfCells
C:\cygwin64\tmp\cccuAMtX.s:2096   .text.BMSTINF_message:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:2103   .text.BMSTINF_message:00000000 BMSTINF_message
C:\cygwin64\tmp\cccuAMtX.s:2307   .text.BMSTINF_message:000000ac $d
C:\cygwin64\tmp\cccuAMtX.s:2314   .text.main:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:2321   .text.main:00000000 main
C:\cygwin64\tmp\cccuAMtX.s:2713   .text.main:000002c4 $d
                            *COM*:0000005e BMSconfig
ARM GAS  C:\cygwin64\tmp\cccuAMtX.s 			page 76


C:\cygwin64\tmp\cccuAMtX.s:2720   .text.PACKSTAT_message:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:2727   .text.PACKSTAT_message:00000000 PACKSTAT_message
C:\cygwin64\tmp\cccuAMtX.s:2749   .text.Error_Handler:00000000 $t
C:\cygwin64\tmp\cccuAMtX.s:2756   .text.Error_Handler:00000000 Error_Handler
C:\cygwin64\tmp\cccuAMtX.s:2790   .data.chargeRate:00000000 chargeRate
                            *COM*:00000006 BMSSTAT_DATA
                            *COM*:00000008 RxData
                            *COM*:00000008 TxData
                            *COM*:0000001c RxHeader
                            *COM*:00000002 CommandCode
                            *COM*:00000058 hspi1

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Start
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_i2f
__aeabi_fdiv
__aeabi_f2uiz
memcpy
HAL_CAN_AddTxMessage
HAL_Delay
HAL_Init
SPI_Init
initPECTable
loadConfig
dischargeCellGroups
writeConfigAll
readAllCellVoltages
readAllCellTemps
checkAllCellConnections
HAL_GPIO_ReadPin
