ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB72:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "LTC6811.h"
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 2


  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** #define CELLVAL_ID      0x007
  37:Src/main.c    **** #define BMSSTAT_ID      0x008
  38:Src/main.c    **** #define BMSVINF_ID      0x009
  39:Src/main.c    **** #define BMSTINF_ID      0x00A
  40:Src/main.c    **** #define PACKSTAT_ID     0x00B
  41:Src/main.c    **** #define CHARGER_ID      0x1806E5F4
  42:Src/main.c    **** /* USER CODE END PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** ADC_HandleTypeDef hadc1;
  51:Src/main.c    **** 
  52:Src/main.c    **** CAN_HandleTypeDef hcan;
  53:Src/main.c    **** 
  54:Src/main.c    **** SPI_HandleTypeDef hspi1;
  55:Src/main.c    **** 
  56:Src/main.c    **** TIM_HandleTypeDef htim2;
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PV */
  59:Src/main.c    **** CommandCodeTypedef      CommandCode;
  60:Src/main.c    **** BMSconfigStructTypedef  BMSconfig;
  61:Src/main.c    **** 
  62:Src/main.c    **** CAN_TxHeaderTypeDef     TxHeader;
  63:Src/main.c    **** CAN_RxHeaderTypeDef     RxHeader;
  64:Src/main.c    **** uint8_t                 TxData[8];
  65:Src/main.c    **** uint8_t                 RxData[8];
  66:Src/main.c    **** uint32_t                TxMailbox;
  67:Src/main.c    **** 
  68:Src/main.c    **** CAN_TxHeaderTypeDef     ChargerTxHeader;
  69:Src/main.c    **** uint8_t                 ChargerTxData[8];
  70:Src/main.c    **** 
  71:Src/main.c    **** uint8_t                 CELLVAL_DATA[6];
  72:Src/main.c    **** uint8_t                 BMSSTAT_DATA[6];
  73:Src/main.c    **** 
  74:Src/main.c    **** uint16_t                minimum;
  75:Src/main.c    **** uint8_t                 chargeRate = 2;
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END PV */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  80:Src/main.c    **** void SystemClock_Config(void);
  81:Src/main.c    **** static void MX_GPIO_Init(void);
  82:Src/main.c    **** static void MX_ADC1_Init(void);
  83:Src/main.c    **** static void MX_CAN_Init(void);
  84:Src/main.c    **** static void MX_SPI1_Init(void);
  85:Src/main.c    **** static void MX_TIM2_Init(void);
  86:Src/main.c    **** /* USER CODE BEGIN PFP */
  87:Src/main.c    **** bool FAULT_check(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6], uint8_t bmsStatus[6]);
  88:Src/main.c    **** void setDischarge(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool cellDischarge[12][
  89:Src/main.c    **** void checkDischarge(BMSconfigStructTypedef cfg, bool fullDischarge[12][8], uint16_t cellVoltage[12]
  90:Src/main.c    **** uint16_t balancingThreshold(BMSconfigStructTypedef cfg);
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 3


  91:Src/main.c    **** void setChargerTxData(BMSconfigStructTypedef cfg);
  92:Src/main.c    **** void CELLVAL_message(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]);
  93:Src/main.c    **** void BMSVINF_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12]);
  94:Src/main.c    **** void BMSTINF_message(BMSconfigStructTypedef cfg, uint16_t cellTemp[12][4]);
  95:Src/main.c    **** void BMSSTAT_message(BMSconfigStructTypedef cfg, uint8_t bmsStatus[6]);
  96:Src/main.c    **** /* USER CODE END PFP */
  97:Src/main.c    **** 
  98:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  99:Src/main.c    **** /* USER CODE BEGIN 0 */
 100:Src/main.c    **** 
 101:Src/main.c    **** /* USER CODE END 0 */
 102:Src/main.c    **** 
 103:Src/main.c    **** /**
 104:Src/main.c    ****   * @brief  The application entry point.
 105:Src/main.c    ****   * @retval int
 106:Src/main.c    ****   */
 107:Src/main.c    **** int main(void)
 108:Src/main.c    **** {
 109:Src/main.c    ****   /* USER CODE BEGIN 1 */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END 1 */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 116:Src/main.c    ****   HAL_Init();
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE BEGIN Init */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE END Init */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Configure the system clock */
 123:Src/main.c    ****   SystemClock_Config();
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* USER CODE END SysInit */
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* Initialize all configured peripherals */
 130:Src/main.c    ****   MX_GPIO_Init();
 131:Src/main.c    ****   MX_ADC1_Init();
 132:Src/main.c    ****   MX_CAN_Init();
 133:Src/main.c    ****   //MX_SPI1_Init();
 134:Src/main.c    ****   MX_TIM2_Init();
 135:Src/main.c    ****   /* USER CODE BEGIN 2 */
 136:Src/main.c    **** 
 137:Src/main.c    ****   SPI_Init();
 138:Src/main.c    ****   initPECTable();
 139:Src/main.c    ****   loadConfig(&BMSconfig);
 140:Src/main.c    **** 
 141:Src/main.c    ****   uint8_t BMS_DATA[96][6];
 142:Src/main.c    ****   uint8_t BMS_STATUS[6];
 143:Src/main.c    **** 
 144:Src/main.c    ****   bool AIR = 0;
 145:Src/main.c    ****   bool CHARGE_EN = 0;
 146:Src/main.c    ****   bool BMS_FAULT = 0;
 147:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 4


 148:Src/main.c    ****   /* USER CODE END 2 */
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* Infinite loop */
 151:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 152:Src/main.c    ****   while (1)
 153:Src/main.c    ****   {
 154:Src/main.c    ****     /* USER CODE END WHILE */
 155:Src/main.c    **** 
 156:Src/main.c    ****     /* USER CODE BEGIN 3 */
 157:Src/main.c    **** 
 158:Src/main.c    ****     //reset config registers
 159:Src/main.c    ****     writeConfigAll(BMSconfig);
 160:Src/main.c    **** 
 161:Src/main.c    ****     //wait 100ms
 162:Src/main.c    ****     HAL_Delay(100);
 163:Src/main.c    **** 
 164:Src/main.c    ****     //read all cell voltages
 165:Src/main.c    ****     readAllCellVoltages(BMSconfig, BMS_DATA);
 166:Src/main.c    **** 
 167:Src/main.c    ****     //read all cell temps
 168:Src/main.c    ****     readAllCellTemps(BMSconfig, BMS_DATA);
 169:Src/main.c    **** 
 170:Src/main.c    ****     //check for faults (cell DC, cell OV, cell UV, cell OT, cell TDC, invalid PEC, no charger comm)
 171:Src/main.c    ****     checkAllCellConnections(BMSconfig, BMS_DATA);
 172:Src/main.c    ****     BMS_FAULT = FAULT_check(BMSconfig, BMS_DATA, BMS_STATUS);
 173:Src/main.c    **** 
 174:Src/main.c    ****     //if AIR and CHARGE_EN are low, pack is charging
 175:Src/main.c    ****     AIR = HAL_GPIO_ReadPin(GPIOB, AIR_Pin);
 176:Src/main.c    ****     CHARGE_EN = HAL_GPIO_ReadPin(GPIOB, CHARGE_EN_Pin);
 177:Src/main.c    **** 
 178:Src/main.c    ****     /*if ((AIR == 0) && (CHARGE_EN == 0)) {
 179:Src/main.c    **** 
 180:Src/main.c    ****       if (chargerate != 0)
 181:Src/main.c    ****         setDischarge(BMSconfig, BMS_DATA, BMS_FAULT, discharge);
 182:Src/main.c    ****       
 183:Src/main.c    ****       setChargerTxData(BMSconfig);
 184:Src/main.c    **** 
 185:Src/main.c    ****       if (chargerate != 0)
 186:Src/main.c    ****         dischargeCellGroups(BMSconfig, discharge);
 187:Src/main.c    ****       else {
 188:Src/main.c    ****         //checkDischarge
 189:Src/main.c    ****         //dischargeCellGroups
 190:Src/main.c    ****       }
 191:Src/main.c    ****     }*/
 192:Src/main.c    ****     //wait 500ms if discharging
 193:Src/main.c    ****     HAL_Delay(500); //needs to be changed
 194:Src/main.c    **** 
 195:Src/main.c    ****     //send CAN messages (CELLVAL, BMSSTAT, BMSVINF, BMSTINF, PACKSTAT)
 196:Src/main.c    ****     CELLVAL_message(BMSconfig, BMS_DATA);
 197:Src/main.c    ****     BMSSTAT_message(BMSconfig, BMS_STATUS);
 198:Src/main.c    **** 
 199:Src/main.c    ****   }
 200:Src/main.c    ****   /* USER CODE END 3 */
 201:Src/main.c    **** }
 202:Src/main.c    **** 
 203:Src/main.c    **** /**
 204:Src/main.c    ****   * @brief System Clock Configuration
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 5


 205:Src/main.c    ****   * @retval None
 206:Src/main.c    ****   */
 207:Src/main.c    **** void SystemClock_Config(void)
 208:Src/main.c    **** {
 209:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 210:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 211:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 212:Src/main.c    **** 
 213:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 214:Src/main.c    ****   */
 215:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 216:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 217:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 218:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 219:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 220:Src/main.c    ****   {
 221:Src/main.c    ****     Error_Handler();
 222:Src/main.c    ****   }
 223:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 224:Src/main.c    ****   */
 225:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 226:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 227:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 228:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 229:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 230:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 231:Src/main.c    **** 
 232:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 233:Src/main.c    ****   {
 234:Src/main.c    ****     Error_Handler();
 235:Src/main.c    ****   }
 236:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 237:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 238:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 239:Src/main.c    ****   {
 240:Src/main.c    ****     Error_Handler();
 241:Src/main.c    ****   }
 242:Src/main.c    **** }
 243:Src/main.c    **** 
 244:Src/main.c    **** /**
 245:Src/main.c    ****   * @brief ADC1 Initialization Function
 246:Src/main.c    ****   * @param None
 247:Src/main.c    ****   * @retval None
 248:Src/main.c    ****   */
 249:Src/main.c    **** static void MX_ADC1_Init(void)
 250:Src/main.c    **** {
 251:Src/main.c    **** 
 252:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 253:Src/main.c    **** 
 254:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 255:Src/main.c    **** 
 256:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 257:Src/main.c    **** 
 258:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 259:Src/main.c    **** 
 260:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 261:Src/main.c    ****   /** Common config 
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 6


 262:Src/main.c    ****   */
 263:Src/main.c    ****   hadc1.Instance = ADC1;
 264:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 265:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 266:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 267:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 268:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 269:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 270:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 271:Src/main.c    ****   {
 272:Src/main.c    ****     Error_Handler();
 273:Src/main.c    ****   }
 274:Src/main.c    ****   /** Configure Regular Channel 
 275:Src/main.c    ****   */
 276:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 277:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 278:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 279:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 280:Src/main.c    ****   {
 281:Src/main.c    ****     Error_Handler();
 282:Src/main.c    ****   }
 283:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 286:Src/main.c    **** 
 287:Src/main.c    **** }
 288:Src/main.c    **** 
 289:Src/main.c    **** /**
 290:Src/main.c    ****   * @brief CAN Initialization Function
 291:Src/main.c    ****   * @param None
 292:Src/main.c    ****   * @retval None
 293:Src/main.c    ****   */
 294:Src/main.c    **** static void MX_CAN_Init(void)
 295:Src/main.c    **** {
 296:Src/main.c    **** 
 297:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 0 */
 298:Src/main.c    **** 
 299:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
 300:Src/main.c    **** 
 301:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 1 */
 302:Src/main.c    ****   CAN_FilterTypeDef     sFilterConfig;
 303:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 304:Src/main.c    ****   hcan.Instance = CAN1;
 305:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 306:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 307:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 308:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 309:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 310:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 311:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 312:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 313:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 314:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 315:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 316:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 317:Src/main.c    ****   {
 318:Src/main.c    ****     Error_Handler();
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 7


 319:Src/main.c    ****   }
 320:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 2 */
 321:Src/main.c    ****   TxHeader.StdId = 0x321; 				// CAN standard ID
 322:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 323:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 324:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 325:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 326:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 327:Src/main.c    **** 
 328:Src/main.c    **** 	ChargerTxHeader.ExtId = CHARGER_ID; 					// CAN extended ID
 329:Src/main.c    **** 	ChargerTxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 330:Src/main.c    **** 	ChargerTxHeader.IDE = CAN_ID_EXT; 				// CAN ID type
 331:Src/main.c    **** 	ChargerTxHeader.DLC = 8; 						// CAN frame length in bytes
 332:Src/main.c    **** 	ChargerTxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 333:Src/main.c    **** 
 334:Src/main.c    **** 	sFilterConfig.FilterBank = 0;							// filter number (0-13)
 335:Src/main.c    **** 	sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 336:Src/main.c    **** 	sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;		
 337:Src/main.c    **** 	sFilterConfig.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifie
 338:Src/main.c    **** 	sFilterConfig.FilterIdLow = 0x0000;
 339:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare 
 340:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow = 0x0000;
 341:Src/main.c    **** 	sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen int
 342:Src/main.c    **** 	sFilterConfig.FilterActivation = ENABLE;
 343:Src/main.c    **** 	
 344:Src/main.c    **** 	HAL_CAN_ConfigFilter(&hcan, &sFilterConfig);
 345:Src/main.c    **** 
 346:Src/main.c    ****   HAL_CAN_Start(&hcan);
 347:Src/main.c    **** 
 348:Src/main.c    ****   HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 349:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 350:Src/main.c    **** 
 351:Src/main.c    **** }
 352:Src/main.c    **** 
 353:Src/main.c    **** /**
 354:Src/main.c    ****   * @brief SPI1 Initialization Function
 355:Src/main.c    ****   * @param None
 356:Src/main.c    ****   * @retval None
 357:Src/main.c    ****   */
 358:Src/main.c    **** static void MX_SPI1_Init(void)
 359:Src/main.c    **** {
 360:Src/main.c    **** 
 361:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 362:Src/main.c    **** 
 363:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 364:Src/main.c    **** 
 365:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 368:Src/main.c    ****   /* SPI1 parameter configuration*/
 369:Src/main.c    ****   hspi1.Instance = SPI1;
 370:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 371:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 372:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 373:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 374:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 375:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 8


 376:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 377:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 378:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 379:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 380:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 381:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 382:Src/main.c    ****   {
 383:Src/main.c    ****     Error_Handler();
 384:Src/main.c    ****   }
 385:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 386:Src/main.c    **** 
 387:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 388:Src/main.c    **** 
 389:Src/main.c    **** }
 390:Src/main.c    **** 
 391:Src/main.c    **** /**
 392:Src/main.c    ****   * @brief TIM2 Initialization Function
 393:Src/main.c    ****   * @param None
 394:Src/main.c    ****   * @retval None
 395:Src/main.c    ****   */
 396:Src/main.c    **** static void MX_TIM2_Init(void)
 397:Src/main.c    **** {
 398:Src/main.c    **** 
 399:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 400:Src/main.c    **** 
 401:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 402:Src/main.c    **** 
 403:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 404:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 405:Src/main.c    **** 
 406:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 407:Src/main.c    **** 
 408:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 409:Src/main.c    ****   htim2.Instance = TIM2;
 410:Src/main.c    ****   htim2.Init.Prescaler = 8000;
 411:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 412:Src/main.c    ****   htim2.Init.Period = 65535;
 413:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 414:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 415:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 416:Src/main.c    ****   {
 417:Src/main.c    ****     Error_Handler();
 418:Src/main.c    ****   }
 419:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 420:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 421:Src/main.c    ****   {
 422:Src/main.c    ****     Error_Handler();
 423:Src/main.c    ****   }
 424:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 425:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 426:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 427:Src/main.c    ****   {
 428:Src/main.c    ****     Error_Handler();
 429:Src/main.c    ****   }
 430:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 431:Src/main.c    ****   HAL_TIM_Base_Start(&htim2);
 432:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 9


 433:Src/main.c    **** 
 434:Src/main.c    **** }
 435:Src/main.c    **** 
 436:Src/main.c    **** /**
 437:Src/main.c    ****   * @brief GPIO Initialization Function
 438:Src/main.c    ****   * @param None
 439:Src/main.c    ****   * @retval None
 440:Src/main.c    ****   */
 441:Src/main.c    **** static void MX_GPIO_Init(void)
 442:Src/main.c    **** {
  26              		.loc 1 442 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 28
  33              		.cfi_offset 4, -28
  34              		.cfi_offset 5, -24
  35              		.cfi_offset 6, -20
  36              		.cfi_offset 7, -16
  37              		.cfi_offset 8, -12
  38              		.cfi_offset 9, -8
  39              		.cfi_offset 14, -4
  40 0004 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 443:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 443 3 view .LVU1
  44              		.loc 1 443 20 is_stmt 0 view .LVU2
  45 0006 0024     		movs	r4, #0
  46 0008 0494     		str	r4, [sp, #16]
  47 000a 0594     		str	r4, [sp, #20]
  48 000c 0694     		str	r4, [sp, #24]
  49 000e 0794     		str	r4, [sp, #28]
 444:Src/main.c    **** 
 445:Src/main.c    ****   /* GPIO Ports Clock Enable */
 446:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 446 3 is_stmt 1 view .LVU3
  51              	.LBB2:
  52              		.loc 1 446 3 view .LVU4
  53              		.loc 1 446 3 view .LVU5
  54 0010 334B     		ldr	r3, .L3
  55 0012 9A69     		ldr	r2, [r3, #24]
  56 0014 42F01002 		orr	r2, r2, #16
  57 0018 9A61     		str	r2, [r3, #24]
  58              		.loc 1 446 3 view .LVU6
  59 001a 9A69     		ldr	r2, [r3, #24]
  60 001c 02F01002 		and	r2, r2, #16
  61 0020 0092     		str	r2, [sp]
  62              		.loc 1 446 3 view .LVU7
  63 0022 009A     		ldr	r2, [sp]
  64              	.LBE2:
 447:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  65              		.loc 1 447 3 view .LVU8
  66              	.LBB3:
  67              		.loc 1 447 3 view .LVU9
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 10


  68              		.loc 1 447 3 view .LVU10
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F02002 		orr	r2, r2, #32
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 447 3 view .LVU11
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F02002 		and	r2, r2, #32
  75 0032 0192     		str	r2, [sp, #4]
  76              		.loc 1 447 3 view .LVU12
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE3:
 448:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 448 3 view .LVU13
  80              	.LBB4:
  81              		.loc 1 448 3 view .LVU14
  82              		.loc 1 448 3 view .LVU15
  83 0036 9A69     		ldr	r2, [r3, #24]
  84 0038 42F00402 		orr	r2, r2, #4
  85 003c 9A61     		str	r2, [r3, #24]
  86              		.loc 1 448 3 view .LVU16
  87 003e 9A69     		ldr	r2, [r3, #24]
  88 0040 02F00402 		and	r2, r2, #4
  89 0044 0292     		str	r2, [sp, #8]
  90              		.loc 1 448 3 view .LVU17
  91 0046 029A     		ldr	r2, [sp, #8]
  92              	.LBE4:
 449:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  93              		.loc 1 449 3 view .LVU18
  94              	.LBB5:
  95              		.loc 1 449 3 view .LVU19
  96              		.loc 1 449 3 view .LVU20
  97 0048 9A69     		ldr	r2, [r3, #24]
  98 004a 42F00802 		orr	r2, r2, #8
  99 004e 9A61     		str	r2, [r3, #24]
 100              		.loc 1 449 3 view .LVU21
 101 0050 9B69     		ldr	r3, [r3, #24]
 102 0052 03F00803 		and	r3, r3, #8
 103 0056 0393     		str	r3, [sp, #12]
 104              		.loc 1 449 3 view .LVU22
 105 0058 039B     		ldr	r3, [sp, #12]
 106              	.LBE5:
 450:Src/main.c    **** 
 451:Src/main.c    ****   /*Configure GPIO pin Output Level */
 452:Src/main.c    ****   HAL_GPIO_WritePin(DEBUG_GPIO_Port, DEBUG_Pin, GPIO_PIN_SET);
 107              		.loc 1 452 3 view .LVU23
 108 005a DFF88C90 		ldr	r9, .L3+8
 109 005e 0122     		movs	r2, #1
 110 0060 4FF40051 		mov	r1, #8192
 111 0064 4846     		mov	r0, r9
 112 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL0:
 453:Src/main.c    **** 
 454:Src/main.c    ****   /*Configure GPIO pin Output Level */
 455:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, BMS_CS_Pin|TRIGGER_Pin, GPIO_PIN_RESET);
 114              		.loc 1 455 3 view .LVU24
 115 006a DFF88080 		ldr	r8, .L3+12
 116 006e 2246     		mov	r2, r4
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 11


 117 0070 4FF48871 		mov	r1, #272
 118 0074 4046     		mov	r0, r8
 119 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL1:
 456:Src/main.c    **** 
 457:Src/main.c    ****   /*Configure GPIO pin Output Level */
 458:Src/main.c    ****   HAL_GPIO_WritePin(BMS_FLT_GPIO_Port, BMS_FLT_Pin, GPIO_PIN_RESET);
 121              		.loc 1 458 3 view .LVU25
 122 007a 1A4D     		ldr	r5, .L3+4
 123 007c 2246     		mov	r2, r4
 124 007e 4FF40071 		mov	r1, #512
 125 0082 2846     		mov	r0, r5
 126 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL2:
 459:Src/main.c    **** 
 460:Src/main.c    ****   /*Configure GPIO pin : DEBUG_Pin */
 461:Src/main.c    ****   GPIO_InitStruct.Pin = DEBUG_Pin;
 128              		.loc 1 461 3 view .LVU26
 129              		.loc 1 461 23 is_stmt 0 view .LVU27
 130 0088 4FF40053 		mov	r3, #8192
 131 008c 0493     		str	r3, [sp, #16]
 462:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 462 3 is_stmt 1 view .LVU28
 133              		.loc 1 462 24 is_stmt 0 view .LVU29
 134 008e 0127     		movs	r7, #1
 135 0090 0597     		str	r7, [sp, #20]
 463:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 463 3 is_stmt 1 view .LVU30
 137              		.loc 1 463 24 is_stmt 0 view .LVU31
 138 0092 0694     		str	r4, [sp, #24]
 464:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 464 3 is_stmt 1 view .LVU32
 140              		.loc 1 464 25 is_stmt 0 view .LVU33
 141 0094 0226     		movs	r6, #2
 142 0096 0796     		str	r6, [sp, #28]
 465:Src/main.c    ****   HAL_GPIO_Init(DEBUG_GPIO_Port, &GPIO_InitStruct);
 143              		.loc 1 465 3 is_stmt 1 view .LVU34
 144 0098 04A9     		add	r1, sp, #16
 145 009a 4846     		mov	r0, r9
 146 009c FFF7FEFF 		bl	HAL_GPIO_Init
 147              	.LVL3:
 466:Src/main.c    **** 
 467:Src/main.c    ****   /*Configure GPIO pins : BMS_CS_Pin TRIGGER_Pin */
 468:Src/main.c    ****   GPIO_InitStruct.Pin = BMS_CS_Pin|TRIGGER_Pin;
 148              		.loc 1 468 3 view .LVU35
 149              		.loc 1 468 23 is_stmt 0 view .LVU36
 150 00a0 4FF48873 		mov	r3, #272
 151 00a4 0493     		str	r3, [sp, #16]
 469:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 152              		.loc 1 469 3 is_stmt 1 view .LVU37
 153              		.loc 1 469 24 is_stmt 0 view .LVU38
 154 00a6 0597     		str	r7, [sp, #20]
 470:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 470 3 is_stmt 1 view .LVU39
 156              		.loc 1 470 24 is_stmt 0 view .LVU40
 157 00a8 0694     		str	r4, [sp, #24]
 471:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 12


 158              		.loc 1 471 3 is_stmt 1 view .LVU41
 159              		.loc 1 471 25 is_stmt 0 view .LVU42
 160 00aa 0796     		str	r6, [sp, #28]
 472:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 161              		.loc 1 472 3 is_stmt 1 view .LVU43
 162 00ac 04A9     		add	r1, sp, #16
 163 00ae 4046     		mov	r0, r8
 164 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 165              	.LVL4:
 473:Src/main.c    **** 
 474:Src/main.c    ****   /*Configure GPIO pins : CHARGE_EN_Pin AIR_Pin */
 475:Src/main.c    ****   GPIO_InitStruct.Pin = CHARGE_EN_Pin|AIR_Pin;
 166              		.loc 1 475 3 view .LVU44
 167              		.loc 1 475 23 is_stmt 0 view .LVU45
 168 00b4 2823     		movs	r3, #40
 169 00b6 0493     		str	r3, [sp, #16]
 476:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 170              		.loc 1 476 3 is_stmt 1 view .LVU46
 171              		.loc 1 476 24 is_stmt 0 view .LVU47
 172 00b8 0594     		str	r4, [sp, #20]
 477:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 173              		.loc 1 477 3 is_stmt 1 view .LVU48
 174              		.loc 1 477 24 is_stmt 0 view .LVU49
 175 00ba 0694     		str	r4, [sp, #24]
 478:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 176              		.loc 1 478 3 is_stmt 1 view .LVU50
 177 00bc 04A9     		add	r1, sp, #16
 178 00be 2846     		mov	r0, r5
 179 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL5:
 479:Src/main.c    **** 
 480:Src/main.c    ****   /*Configure GPIO pin : BMS_FLT_Pin */
 481:Src/main.c    ****   GPIO_InitStruct.Pin = BMS_FLT_Pin;
 181              		.loc 1 481 3 view .LVU51
 182              		.loc 1 481 23 is_stmt 0 view .LVU52
 183 00c4 4FF40073 		mov	r3, #512
 184 00c8 0493     		str	r3, [sp, #16]
 482:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 185              		.loc 1 482 3 is_stmt 1 view .LVU53
 186              		.loc 1 482 24 is_stmt 0 view .LVU54
 187 00ca 0597     		str	r7, [sp, #20]
 483:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 188              		.loc 1 483 3 is_stmt 1 view .LVU55
 189              		.loc 1 483 24 is_stmt 0 view .LVU56
 190 00cc 0694     		str	r4, [sp, #24]
 484:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 191              		.loc 1 484 3 is_stmt 1 view .LVU57
 192              		.loc 1 484 25 is_stmt 0 view .LVU58
 193 00ce 0796     		str	r6, [sp, #28]
 485:Src/main.c    ****   HAL_GPIO_Init(BMS_FLT_GPIO_Port, &GPIO_InitStruct);
 194              		.loc 1 485 3 is_stmt 1 view .LVU59
 195 00d0 04A9     		add	r1, sp, #16
 196 00d2 2846     		mov	r0, r5
 197 00d4 FFF7FEFF 		bl	HAL_GPIO_Init
 198              	.LVL6:
 486:Src/main.c    **** 
 487:Src/main.c    **** }
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 13


 199              		.loc 1 487 1 is_stmt 0 view .LVU60
 200 00d8 09B0     		add	sp, sp, #36
 201              	.LCFI2:
 202              		.cfi_def_cfa_offset 28
 203              		@ sp needed
 204 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 205              	.L4:
 206 00de 00BF     		.align	2
 207              	.L3:
 208 00e0 00100240 		.word	1073876992
 209 00e4 000C0140 		.word	1073810432
 210 00e8 00100140 		.word	1073811456
 211 00ec 00080140 		.word	1073809408
 212              		.cfi_endproc
 213              	.LFE72:
 215              		.section	.text.MX_ADC1_Init,"ax",%progbits
 216              		.align	1
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 222              	MX_ADC1_Init:
 223              	.LFB68:
 250:Src/main.c    **** 
 224              		.loc 1 250 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 16
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 70B5     		push	{r4, r5, r6, lr}
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 16
 231              		.cfi_offset 4, -16
 232              		.cfi_offset 5, -12
 233              		.cfi_offset 6, -8
 234              		.cfi_offset 14, -4
 235 0002 84B0     		sub	sp, sp, #16
 236              	.LCFI4:
 237              		.cfi_def_cfa_offset 32
 256:Src/main.c    **** 
 238              		.loc 1 256 3 view .LVU62
 256:Src/main.c    **** 
 239              		.loc 1 256 26 is_stmt 0 view .LVU63
 240 0004 0025     		movs	r5, #0
 241 0006 0195     		str	r5, [sp, #4]
 242 0008 0295     		str	r5, [sp, #8]
 243 000a 0395     		str	r5, [sp, #12]
 263:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 244              		.loc 1 263 3 is_stmt 1 view .LVU64
 263:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 245              		.loc 1 263 18 is_stmt 0 view .LVU65
 246 000c 0C4C     		ldr	r4, .L7
 247 000e 0D4B     		ldr	r3, .L7+4
 248 0010 2360     		str	r3, [r4]
 264:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 249              		.loc 1 264 3 is_stmt 1 view .LVU66
 264:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 250              		.loc 1 264 27 is_stmt 0 view .LVU67
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 14


 251 0012 A560     		str	r5, [r4, #8]
 265:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 252              		.loc 1 265 3 is_stmt 1 view .LVU68
 265:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 253              		.loc 1 265 33 is_stmt 0 view .LVU69
 254 0014 E560     		str	r5, [r4, #12]
 266:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 255              		.loc 1 266 3 is_stmt 1 view .LVU70
 266:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 256              		.loc 1 266 36 is_stmt 0 view .LVU71
 257 0016 6561     		str	r5, [r4, #20]
 267:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 258              		.loc 1 267 3 is_stmt 1 view .LVU72
 267:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 259              		.loc 1 267 31 is_stmt 0 view .LVU73
 260 0018 4FF46023 		mov	r3, #917504
 261 001c E361     		str	r3, [r4, #28]
 268:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 262              		.loc 1 268 3 is_stmt 1 view .LVU74
 268:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 263              		.loc 1 268 24 is_stmt 0 view .LVU75
 264 001e 6560     		str	r5, [r4, #4]
 269:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 265              		.loc 1 269 3 is_stmt 1 view .LVU76
 269:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 266              		.loc 1 269 30 is_stmt 0 view .LVU77
 267 0020 0126     		movs	r6, #1
 268 0022 2661     		str	r6, [r4, #16]
 270:Src/main.c    ****   {
 269              		.loc 1 270 3 is_stmt 1 view .LVU78
 270:Src/main.c    ****   {
 270              		.loc 1 270 7 is_stmt 0 view .LVU79
 271 0024 2046     		mov	r0, r4
 272 0026 FFF7FEFF 		bl	HAL_ADC_Init
 273              	.LVL7:
 276:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 274              		.loc 1 276 3 is_stmt 1 view .LVU80
 276:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 275              		.loc 1 276 19 is_stmt 0 view .LVU81
 276 002a 0823     		movs	r3, #8
 277 002c 0193     		str	r3, [sp, #4]
 277:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 278              		.loc 1 277 3 is_stmt 1 view .LVU82
 277:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 279              		.loc 1 277 16 is_stmt 0 view .LVU83
 280 002e 0296     		str	r6, [sp, #8]
 278:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 281              		.loc 1 278 3 is_stmt 1 view .LVU84
 278:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 282              		.loc 1 278 24 is_stmt 0 view .LVU85
 283 0030 0395     		str	r5, [sp, #12]
 279:Src/main.c    ****   {
 284              		.loc 1 279 3 is_stmt 1 view .LVU86
 279:Src/main.c    ****   {
 285              		.loc 1 279 7 is_stmt 0 view .LVU87
 286 0032 01A9     		add	r1, sp, #4
 287 0034 2046     		mov	r0, r4
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 15


 288 0036 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 289              	.LVL8:
 287:Src/main.c    **** 
 290              		.loc 1 287 1 view .LVU88
 291 003a 04B0     		add	sp, sp, #16
 292              	.LCFI5:
 293              		.cfi_def_cfa_offset 16
 294              		@ sp needed
 295 003c 70BD     		pop	{r4, r5, r6, pc}
 296              	.L8:
 297 003e 00BF     		.align	2
 298              	.L7:
 299 0040 00000000 		.word	hadc1
 300 0044 00240140 		.word	1073816576
 301              		.cfi_endproc
 302              	.LFE68:
 304              		.section	.text.MX_CAN_Init,"ax",%progbits
 305              		.align	1
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu softvfp
 311              	MX_CAN_Init:
 312              	.LFB69:
 295:Src/main.c    **** 
 313              		.loc 1 295 1 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 40
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 70B5     		push	{r4, r5, r6, lr}
 318              	.LCFI6:
 319              		.cfi_def_cfa_offset 16
 320              		.cfi_offset 4, -16
 321              		.cfi_offset 5, -12
 322              		.cfi_offset 6, -8
 323              		.cfi_offset 14, -4
 324 0002 8AB0     		sub	sp, sp, #40
 325              	.LCFI7:
 326              		.cfi_def_cfa_offset 56
 302:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 327              		.loc 1 302 3 view .LVU90
 304:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 328              		.loc 1 304 3 view .LVU91
 304:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 329              		.loc 1 304 17 is_stmt 0 view .LVU92
 330 0004 204D     		ldr	r5, .L11
 331 0006 214B     		ldr	r3, .L11+4
 332 0008 2B60     		str	r3, [r5]
 305:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 333              		.loc 1 305 3 is_stmt 1 view .LVU93
 305:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 334              		.loc 1 305 23 is_stmt 0 view .LVU94
 335 000a 0126     		movs	r6, #1
 336 000c 6E60     		str	r6, [r5, #4]
 306:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 337              		.loc 1 306 3 is_stmt 1 view .LVU95
 306:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 16


 338              		.loc 1 306 18 is_stmt 0 view .LVU96
 339 000e 0024     		movs	r4, #0
 340 0010 AC60     		str	r4, [r5, #8]
 307:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 341              		.loc 1 307 3 is_stmt 1 view .LVU97
 307:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 342              		.loc 1 307 27 is_stmt 0 view .LVU98
 343 0012 4FF08073 		mov	r3, #16777216
 344 0016 EB60     		str	r3, [r5, #12]
 308:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 345              		.loc 1 308 3 is_stmt 1 view .LVU99
 308:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 346              		.loc 1 308 22 is_stmt 0 view .LVU100
 347 0018 4FF44023 		mov	r3, #786432
 348 001c 2B61     		str	r3, [r5, #16]
 309:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 349              		.loc 1 309 3 is_stmt 1 view .LVU101
 309:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 350              		.loc 1 309 22 is_stmt 0 view .LVU102
 351 001e 4FF48013 		mov	r3, #1048576
 352 0022 6B61     		str	r3, [r5, #20]
 310:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 353              		.loc 1 310 3 is_stmt 1 view .LVU103
 310:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 354              		.loc 1 310 31 is_stmt 0 view .LVU104
 355 0024 2C76     		strb	r4, [r5, #24]
 311:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 356              		.loc 1 311 3 is_stmt 1 view .LVU105
 311:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 357              		.loc 1 311 24 is_stmt 0 view .LVU106
 358 0026 6C76     		strb	r4, [r5, #25]
 312:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 359              		.loc 1 312 3 is_stmt 1 view .LVU107
 312:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 360              		.loc 1 312 24 is_stmt 0 view .LVU108
 361 0028 AC76     		strb	r4, [r5, #26]
 313:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 362              		.loc 1 313 3 is_stmt 1 view .LVU109
 313:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 363              		.loc 1 313 32 is_stmt 0 view .LVU110
 364 002a EC76     		strb	r4, [r5, #27]
 314:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 365              		.loc 1 314 3 is_stmt 1 view .LVU111
 314:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 366              		.loc 1 314 31 is_stmt 0 view .LVU112
 367 002c 2C77     		strb	r4, [r5, #28]
 315:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 368              		.loc 1 315 3 is_stmt 1 view .LVU113
 315:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 369              		.loc 1 315 34 is_stmt 0 view .LVU114
 370 002e 6C77     		strb	r4, [r5, #29]
 316:Src/main.c    ****   {
 371              		.loc 1 316 3 is_stmt 1 view .LVU115
 316:Src/main.c    ****   {
 372              		.loc 1 316 7 is_stmt 0 view .LVU116
 373 0030 2846     		mov	r0, r5
 374 0032 FFF7FEFF 		bl	HAL_CAN_Init
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 17


 375              	.LVL9:
 321:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 376              		.loc 1 321 3 is_stmt 1 view .LVU117
 321:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 377              		.loc 1 321 18 is_stmt 0 view .LVU118
 378 0036 164B     		ldr	r3, .L11+8
 379 0038 40F22132 		movw	r2, #801
 380 003c 1A60     		str	r2, [r3]
 322:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 381              		.loc 1 322 2 is_stmt 1 view .LVU119
 322:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 382              		.loc 1 322 17 is_stmt 0 view .LVU120
 383 003e 5E60     		str	r6, [r3, #4]
 323:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 384              		.loc 1 323 2 is_stmt 1 view .LVU121
 323:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 385              		.loc 1 323 15 is_stmt 0 view .LVU122
 386 0040 DC60     		str	r4, [r3, #12]
 324:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 387              		.loc 1 324 2 is_stmt 1 view .LVU123
 324:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 388              		.loc 1 324 15 is_stmt 0 view .LVU124
 389 0042 9C60     		str	r4, [r3, #8]
 325:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 390              		.loc 1 325 2 is_stmt 1 view .LVU125
 325:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 391              		.loc 1 325 15 is_stmt 0 view .LVU126
 392 0044 0822     		movs	r2, #8
 393 0046 1A61     		str	r2, [r3, #16]
 326:Src/main.c    **** 
 394              		.loc 1 326 2 is_stmt 1 view .LVU127
 326:Src/main.c    **** 
 395              		.loc 1 326 30 is_stmt 0 view .LVU128
 396 0048 1C75     		strb	r4, [r3, #20]
 328:Src/main.c    **** 	ChargerTxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 397              		.loc 1 328 2 is_stmt 1 view .LVU129
 328:Src/main.c    **** 	ChargerTxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 398              		.loc 1 328 24 is_stmt 0 view .LVU130
 399 004a 124B     		ldr	r3, .L11+12
 400 004c 1249     		ldr	r1, .L11+16
 401 004e 5960     		str	r1, [r3, #4]
 329:Src/main.c    **** 	ChargerTxHeader.IDE = CAN_ID_EXT; 				// CAN ID type
 402              		.loc 1 329 2 is_stmt 1 view .LVU131
 329:Src/main.c    **** 	ChargerTxHeader.IDE = CAN_ID_EXT; 				// CAN ID type
 403              		.loc 1 329 22 is_stmt 0 view .LVU132
 404 0050 DC60     		str	r4, [r3, #12]
 330:Src/main.c    **** 	ChargerTxHeader.DLC = 8; 						// CAN frame length in bytes
 405              		.loc 1 330 2 is_stmt 1 view .LVU133
 330:Src/main.c    **** 	ChargerTxHeader.DLC = 8; 						// CAN frame length in bytes
 406              		.loc 1 330 22 is_stmt 0 view .LVU134
 407 0052 0421     		movs	r1, #4
 408 0054 9960     		str	r1, [r3, #8]
 331:Src/main.c    **** 	ChargerTxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 409              		.loc 1 331 2 is_stmt 1 view .LVU135
 331:Src/main.c    **** 	ChargerTxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 410              		.loc 1 331 22 is_stmt 0 view .LVU136
 411 0056 1A61     		str	r2, [r3, #16]
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 18


 332:Src/main.c    **** 
 412              		.loc 1 332 2 is_stmt 1 view .LVU137
 332:Src/main.c    **** 
 413              		.loc 1 332 37 is_stmt 0 view .LVU138
 414 0058 1C75     		strb	r4, [r3, #20]
 334:Src/main.c    **** 	sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 415              		.loc 1 334 2 is_stmt 1 view .LVU139
 334:Src/main.c    **** 	sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 416              		.loc 1 334 27 is_stmt 0 view .LVU140
 417 005a 0594     		str	r4, [sp, #20]
 335:Src/main.c    **** 	sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;		
 418              		.loc 1 335 2 is_stmt 1 view .LVU141
 335:Src/main.c    **** 	sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;		
 419              		.loc 1 335 27 is_stmt 0 view .LVU142
 420 005c 0694     		str	r4, [sp, #24]
 336:Src/main.c    **** 	sFilterConfig.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifie
 421              		.loc 1 336 2 is_stmt 1 view .LVU143
 336:Src/main.c    **** 	sFilterConfig.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifie
 422              		.loc 1 336 28 is_stmt 0 view .LVU144
 423 005e 0796     		str	r6, [sp, #28]
 337:Src/main.c    **** 	sFilterConfig.FilterIdLow = 0x0000;
 424              		.loc 1 337 2 is_stmt 1 view .LVU145
 337:Src/main.c    **** 	sFilterConfig.FilterIdLow = 0x0000;
 425              		.loc 1 337 29 is_stmt 0 view .LVU146
 426 0060 0094     		str	r4, [sp]
 338:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare 
 427              		.loc 1 338 2 is_stmt 1 view .LVU147
 338:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare 
 428              		.loc 1 338 28 is_stmt 0 view .LVU148
 429 0062 0194     		str	r4, [sp, #4]
 339:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow = 0x0000;
 430              		.loc 1 339 2 is_stmt 1 view .LVU149
 339:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow = 0x0000;
 431              		.loc 1 339 33 is_stmt 0 view .LVU150
 432 0064 0294     		str	r4, [sp, #8]
 340:Src/main.c    **** 	sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen int
 433              		.loc 1 340 2 is_stmt 1 view .LVU151
 340:Src/main.c    **** 	sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen int
 434              		.loc 1 340 32 is_stmt 0 view .LVU152
 435 0066 0394     		str	r4, [sp, #12]
 341:Src/main.c    **** 	sFilterConfig.FilterActivation = ENABLE;
 436              		.loc 1 341 2 is_stmt 1 view .LVU153
 341:Src/main.c    **** 	sFilterConfig.FilterActivation = ENABLE;
 437              		.loc 1 341 37 is_stmt 0 view .LVU154
 438 0068 0494     		str	r4, [sp, #16]
 342:Src/main.c    **** 	
 439              		.loc 1 342 2 is_stmt 1 view .LVU155
 342:Src/main.c    **** 	
 440              		.loc 1 342 33 is_stmt 0 view .LVU156
 441 006a 0896     		str	r6, [sp, #32]
 344:Src/main.c    **** 
 442              		.loc 1 344 2 is_stmt 1 view .LVU157
 443 006c 6946     		mov	r1, sp
 444 006e 2846     		mov	r0, r5
 445 0070 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 446              	.LVL10:
 346:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 19


 447              		.loc 1 346 3 view .LVU158
 448 0074 2846     		mov	r0, r5
 449 0076 FFF7FEFF 		bl	HAL_CAN_Start
 450              	.LVL11:
 348:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 451              		.loc 1 348 3 view .LVU159
 452 007a 0221     		movs	r1, #2
 453 007c 2846     		mov	r0, r5
 454 007e FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 455              	.LVL12:
 351:Src/main.c    **** 
 456              		.loc 1 351 1 is_stmt 0 view .LVU160
 457 0082 0AB0     		add	sp, sp, #40
 458              	.LCFI8:
 459              		.cfi_def_cfa_offset 16
 460              		@ sp needed
 461 0084 70BD     		pop	{r4, r5, r6, pc}
 462              	.L12:
 463 0086 00BF     		.align	2
 464              	.L11:
 465 0088 00000000 		.word	hcan
 466 008c 00640040 		.word	1073767424
 467 0090 00000000 		.word	TxHeader
 468 0094 00000000 		.word	ChargerTxHeader
 469 0098 F4E50618 		.word	403105268
 470              		.cfi_endproc
 471              	.LFE69:
 473              		.section	.text.MX_TIM2_Init,"ax",%progbits
 474              		.align	1
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 478              		.fpu softvfp
 480              	MX_TIM2_Init:
 481              	.LFB71:
 397:Src/main.c    **** 
 482              		.loc 1 397 1 is_stmt 1 view -0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 24
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486 0000 30B5     		push	{r4, r5, lr}
 487              	.LCFI9:
 488              		.cfi_def_cfa_offset 12
 489              		.cfi_offset 4, -12
 490              		.cfi_offset 5, -8
 491              		.cfi_offset 14, -4
 492 0002 87B0     		sub	sp, sp, #28
 493              	.LCFI10:
 494              		.cfi_def_cfa_offset 40
 403:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 495              		.loc 1 403 3 view .LVU162
 403:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 496              		.loc 1 403 26 is_stmt 0 view .LVU163
 497 0004 0024     		movs	r4, #0
 498 0006 0294     		str	r4, [sp, #8]
 499 0008 0394     		str	r4, [sp, #12]
 500 000a 0494     		str	r4, [sp, #16]
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 20


 501 000c 0594     		str	r4, [sp, #20]
 404:Src/main.c    **** 
 502              		.loc 1 404 3 is_stmt 1 view .LVU164
 404:Src/main.c    **** 
 503              		.loc 1 404 27 is_stmt 0 view .LVU165
 504 000e 0094     		str	r4, [sp]
 505 0010 0194     		str	r4, [sp, #4]
 409:Src/main.c    ****   htim2.Init.Prescaler = 8000;
 506              		.loc 1 409 3 is_stmt 1 view .LVU166
 409:Src/main.c    ****   htim2.Init.Prescaler = 8000;
 507              		.loc 1 409 18 is_stmt 0 view .LVU167
 508 0012 114D     		ldr	r5, .L15
 509 0014 4FF08043 		mov	r3, #1073741824
 510 0018 2B60     		str	r3, [r5]
 410:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 511              		.loc 1 410 3 is_stmt 1 view .LVU168
 410:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 512              		.loc 1 410 24 is_stmt 0 view .LVU169
 513 001a 4FF4FA53 		mov	r3, #8000
 514 001e 6B60     		str	r3, [r5, #4]
 411:Src/main.c    ****   htim2.Init.Period = 65535;
 515              		.loc 1 411 3 is_stmt 1 view .LVU170
 411:Src/main.c    ****   htim2.Init.Period = 65535;
 516              		.loc 1 411 26 is_stmt 0 view .LVU171
 517 0020 AC60     		str	r4, [r5, #8]
 412:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 518              		.loc 1 412 3 is_stmt 1 view .LVU172
 412:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 519              		.loc 1 412 21 is_stmt 0 view .LVU173
 520 0022 4FF6FF73 		movw	r3, #65535
 521 0026 EB60     		str	r3, [r5, #12]
 413:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 522              		.loc 1 413 3 is_stmt 1 view .LVU174
 413:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 523              		.loc 1 413 28 is_stmt 0 view .LVU175
 524 0028 2C61     		str	r4, [r5, #16]
 414:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 525              		.loc 1 414 3 is_stmt 1 view .LVU176
 414:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 526              		.loc 1 414 32 is_stmt 0 view .LVU177
 527 002a AC61     		str	r4, [r5, #24]
 415:Src/main.c    ****   {
 528              		.loc 1 415 3 is_stmt 1 view .LVU178
 415:Src/main.c    ****   {
 529              		.loc 1 415 7 is_stmt 0 view .LVU179
 530 002c 2846     		mov	r0, r5
 531 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 532              	.LVL13:
 419:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 533              		.loc 1 419 3 is_stmt 1 view .LVU180
 419:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 534              		.loc 1 419 34 is_stmt 0 view .LVU181
 535 0032 4FF48053 		mov	r3, #4096
 536 0036 0293     		str	r3, [sp, #8]
 420:Src/main.c    ****   {
 537              		.loc 1 420 3 is_stmt 1 view .LVU182
 420:Src/main.c    ****   {
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 21


 538              		.loc 1 420 7 is_stmt 0 view .LVU183
 539 0038 02A9     		add	r1, sp, #8
 540 003a 2846     		mov	r0, r5
 541 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 542              	.LVL14:
 424:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 543              		.loc 1 424 3 is_stmt 1 view .LVU184
 424:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 544              		.loc 1 424 37 is_stmt 0 view .LVU185
 545 0040 0094     		str	r4, [sp]
 425:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 546              		.loc 1 425 3 is_stmt 1 view .LVU186
 425:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 547              		.loc 1 425 33 is_stmt 0 view .LVU187
 548 0042 0194     		str	r4, [sp, #4]
 426:Src/main.c    ****   {
 549              		.loc 1 426 3 is_stmt 1 view .LVU188
 426:Src/main.c    ****   {
 550              		.loc 1 426 7 is_stmt 0 view .LVU189
 551 0044 6946     		mov	r1, sp
 552 0046 2846     		mov	r0, r5
 553 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 554              	.LVL15:
 431:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 555              		.loc 1 431 3 is_stmt 1 view .LVU190
 556 004c 2846     		mov	r0, r5
 557 004e FFF7FEFF 		bl	HAL_TIM_Base_Start
 558              	.LVL16:
 434:Src/main.c    **** 
 559              		.loc 1 434 1 is_stmt 0 view .LVU191
 560 0052 07B0     		add	sp, sp, #28
 561              	.LCFI11:
 562              		.cfi_def_cfa_offset 12
 563              		@ sp needed
 564 0054 30BD     		pop	{r4, r5, pc}
 565              	.L16:
 566 0056 00BF     		.align	2
 567              	.L15:
 568 0058 00000000 		.word	htim2
 569              		.cfi_endproc
 570              	.LFE71:
 572              		.section	.text.SystemClock_Config,"ax",%progbits
 573              		.align	1
 574              		.global	SystemClock_Config
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu softvfp
 580              	SystemClock_Config:
 581              	.LFB67:
 208:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 582              		.loc 1 208 1 is_stmt 1 view -0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 80
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586 0000 30B5     		push	{r4, r5, lr}
 587              	.LCFI12:
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 22


 588              		.cfi_def_cfa_offset 12
 589              		.cfi_offset 4, -12
 590              		.cfi_offset 5, -8
 591              		.cfi_offset 14, -4
 592 0002 95B0     		sub	sp, sp, #84
 593              	.LCFI13:
 594              		.cfi_def_cfa_offset 96
 209:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 595              		.loc 1 209 3 view .LVU193
 209:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 596              		.loc 1 209 22 is_stmt 0 view .LVU194
 597 0004 2422     		movs	r2, #36
 598 0006 0021     		movs	r1, #0
 599 0008 0BA8     		add	r0, sp, #44
 600 000a FFF7FEFF 		bl	memset
 601              	.LVL17:
 210:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 602              		.loc 1 210 3 is_stmt 1 view .LVU195
 210:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 603              		.loc 1 210 22 is_stmt 0 view .LVU196
 604 000e 0024     		movs	r4, #0
 605 0010 0594     		str	r4, [sp, #20]
 606 0012 0694     		str	r4, [sp, #24]
 607 0014 0794     		str	r4, [sp, #28]
 608 0016 0894     		str	r4, [sp, #32]
 609 0018 0994     		str	r4, [sp, #36]
 211:Src/main.c    **** 
 610              		.loc 1 211 3 is_stmt 1 view .LVU197
 211:Src/main.c    **** 
 611              		.loc 1 211 28 is_stmt 0 view .LVU198
 612 001a 0194     		str	r4, [sp, #4]
 613 001c 0294     		str	r4, [sp, #8]
 614 001e 0394     		str	r4, [sp, #12]
 615 0020 0494     		str	r4, [sp, #16]
 215:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 616              		.loc 1 215 3 is_stmt 1 view .LVU199
 215:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 617              		.loc 1 215 36 is_stmt 0 view .LVU200
 618 0022 0225     		movs	r5, #2
 619 0024 0A95     		str	r5, [sp, #40]
 216:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 620              		.loc 1 216 3 is_stmt 1 view .LVU201
 216:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 621              		.loc 1 216 30 is_stmt 0 view .LVU202
 622 0026 0123     		movs	r3, #1
 623 0028 0E93     		str	r3, [sp, #56]
 217:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 624              		.loc 1 217 3 is_stmt 1 view .LVU203
 217:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 625              		.loc 1 217 41 is_stmt 0 view .LVU204
 626 002a 1023     		movs	r3, #16
 627 002c 0F93     		str	r3, [sp, #60]
 218:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 628              		.loc 1 218 3 is_stmt 1 view .LVU205
 219:Src/main.c    ****   {
 629              		.loc 1 219 3 view .LVU206
 219:Src/main.c    ****   {
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 23


 630              		.loc 1 219 7 is_stmt 0 view .LVU207
 631 002e 0AA8     		add	r0, sp, #40
 632 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 633              	.LVL18:
 225:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 634              		.loc 1 225 3 is_stmt 1 view .LVU208
 225:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 635              		.loc 1 225 31 is_stmt 0 view .LVU209
 636 0034 0F23     		movs	r3, #15
 637 0036 0593     		str	r3, [sp, #20]
 227:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 638              		.loc 1 227 3 is_stmt 1 view .LVU210
 227:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 639              		.loc 1 227 34 is_stmt 0 view .LVU211
 640 0038 0694     		str	r4, [sp, #24]
 228:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 641              		.loc 1 228 3 is_stmt 1 view .LVU212
 228:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 642              		.loc 1 228 35 is_stmt 0 view .LVU213
 643 003a 0794     		str	r4, [sp, #28]
 229:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 644              		.loc 1 229 3 is_stmt 1 view .LVU214
 229:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 645              		.loc 1 229 36 is_stmt 0 view .LVU215
 646 003c 0894     		str	r4, [sp, #32]
 230:Src/main.c    **** 
 647              		.loc 1 230 3 is_stmt 1 view .LVU216
 230:Src/main.c    **** 
 648              		.loc 1 230 36 is_stmt 0 view .LVU217
 649 003e 0994     		str	r4, [sp, #36]
 232:Src/main.c    ****   {
 650              		.loc 1 232 3 is_stmt 1 view .LVU218
 232:Src/main.c    ****   {
 651              		.loc 1 232 7 is_stmt 0 view .LVU219
 652 0040 2146     		mov	r1, r4
 653 0042 05A8     		add	r0, sp, #20
 654 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 655              	.LVL19:
 236:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 656              		.loc 1 236 3 is_stmt 1 view .LVU220
 236:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 657              		.loc 1 236 38 is_stmt 0 view .LVU221
 658 0048 0195     		str	r5, [sp, #4]
 237:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 659              		.loc 1 237 3 is_stmt 1 view .LVU222
 237:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 660              		.loc 1 237 35 is_stmt 0 view .LVU223
 661 004a 0394     		str	r4, [sp, #12]
 238:Src/main.c    ****   {
 662              		.loc 1 238 3 is_stmt 1 view .LVU224
 238:Src/main.c    ****   {
 663              		.loc 1 238 7 is_stmt 0 view .LVU225
 664 004c 01A8     		add	r0, sp, #4
 665 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 666              	.LVL20:
 242:Src/main.c    **** 
 667              		.loc 1 242 1 view .LVU226
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 24


 668 0052 15B0     		add	sp, sp, #84
 669              	.LCFI14:
 670              		.cfi_def_cfa_offset 12
 671              		@ sp needed
 672 0054 30BD     		pop	{r4, r5, pc}
 673              		.cfi_endproc
 674              	.LFE67:
 676              		.section	.text.FAULT_check,"ax",%progbits
 677              		.align	1
 678              		.global	FAULT_check
 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
 682              		.fpu softvfp
 684              	FAULT_check:
 685              	.LVL21:
 686              	.LFB73:
 488:Src/main.c    **** 
 489:Src/main.c    **** /* USER CODE BEGIN 4 */
 490:Src/main.c    **** 
 491:Src/main.c    **** /*void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *CanHandle)
 492:Src/main.c    **** {
 493:Src/main.c    ****   HAL_CAN_GetRxMessage(&hcan, CAN_RX_FIFO0, &RxHeader, RxData);
 494:Src/main.c    **** 
 495:Src/main.c    ****   uint16_t ID = RxHeader.StdId;
 496:Src/main.c    ****   uint32_t ExtID = RxHeader.ExtId;
 497:Src/main.c    **** 
 498:Src/main.c    ****   //TESTING
 499:Src/main.c    ****   if (ID == 0x123) {
 500:Src/main.c    **** 
 501:Src/main.c    ****     //HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 502:Src/main.c    ****     voltageState = RxData[0];
 503:Src/main.c    ****   }
 504:Src/main.c    ****   //TESTING
 505:Src/main.c    **** 
 506:Src/main.c    ****   if (ExtID == CHARGER_ID) {
 507:Src/main.c    ****     TIM2->CNT = 0; // reset timer
 508:Src/main.c    ****     HAL_TIM_Base_Start(&htim2);
 509:Src/main.c    ****     RxHeader.ExtId = 0;
 510:Src/main.c    ****     //HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 511:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, DEBUG_Pin, GPIO_PIN_SET);
 512:Src/main.c    ****   }
 513:Src/main.c    **** }*/
 514:Src/main.c    **** 
 515:Src/main.c    **** bool FAULT_check(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6], uint8_t bmsStatus[6]) {
 687              		.loc 1 515 92 is_stmt 1 view -0
 688              		.cfi_startproc
 689              		@ args = 104, pretend = 16, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              		.loc 1 515 92 is_stmt 0 view .LVU228
 692 0000 84B0     		sub	sp, sp, #16
 693              	.LCFI15:
 694              		.cfi_def_cfa_offset 16
 695 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 696              	.LCFI16:
 697              		.cfi_def_cfa_offset 40
 698              		.cfi_offset 3, -40
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 25


 699              		.cfi_offset 4, -36
 700              		.cfi_offset 5, -32
 701              		.cfi_offset 6, -28
 702              		.cfi_offset 7, -24
 703              		.cfi_offset 14, -20
 704 0004 06AC     		add	r4, sp, #24
 705 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 706 000a 1E9E     		ldr	r6, [sp, #120]
 707 000c 1F98     		ldr	r0, [sp, #124]
 516:Src/main.c    **** 
 517:Src/main.c    ****   bool BMS_FAULT = false;
 708              		.loc 1 517 3 is_stmt 1 view .LVU229
 709              	.LVL22:
 518:Src/main.c    ****   uint16_t cellVoltage;
 710              		.loc 1 518 3 view .LVU230
 519:Src/main.c    ****   bool cellConnection;
 711              		.loc 1 519 3 view .LVU231
 520:Src/main.c    ****   bool dataValid;
 712              		.loc 1 520 3 view .LVU232
 521:Src/main.c    ****   bool OT_fault;
 713              		.loc 1 521 3 view .LVU233
 522:Src/main.c    ****   bool DC_fault;
 714              		.loc 1 522 3 view .LVU234
 523:Src/main.c    **** 
 524:Src/main.c    ****   bmsStatus[0] = 0;
 715              		.loc 1 524 3 view .LVU235
 716              		.loc 1 524 16 is_stmt 0 view .LVU236
 717 000e 0024     		movs	r4, #0
 718 0010 0470     		strb	r4, [r0]
 525:Src/main.c    **** 
 526:Src/main.c    ****   for (uint8_t cell = 0; cell < 96; cell++) {
 719              		.loc 1 526 3 is_stmt 1 view .LVU237
 720              	.LBB6:
 721              		.loc 1 526 8 view .LVU238
 722              	.LVL23:
 723              		.loc 1 526 16 is_stmt 0 view .LVU239
 724 0012 2346     		mov	r3, r4
 725              		.loc 1 526 3 view .LVU240
 726 0014 01E0     		b	.L20
 727              	.LVL24:
 728              	.L26:
 729              		.loc 1 526 41 discriminator 2 view .LVU241
 730 0016 0133     		adds	r3, r3, #1
 731              	.LVL25:
 732              		.loc 1 526 41 discriminator 2 view .LVU242
 733 0018 DBB2     		uxtb	r3, r3
 734              	.LVL26:
 735              	.L20:
 736              		.loc 1 526 3 discriminator 1 view .LVU243
 737 001a 5F2B     		cmp	r3, #95
 738 001c 46D8     		bhi	.L32
 527:Src/main.c    **** 
 528:Src/main.c    ****     cellVoltage = 0;
 739              		.loc 1 528 5 is_stmt 1 view .LVU244
 740              	.LVL27:
 529:Src/main.c    ****     cellVoltage = (uint16_t) (bmsData[cell][2]);
 741              		.loc 1 529 5 view .LVU245
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 26


 742              		.loc 1 529 38 is_stmt 0 view .LVU246
 743 001e 03EB4301 		add	r1, r3, r3, lsl #1
 744 0022 4A00     		lsls	r2, r1, #1
 745 0024 3244     		add	r2, r2, r6
 746              		.loc 1 529 17 view .LVU247
 747 0026 9578     		ldrb	r5, [r2, #2]	@ zero_extendqisi2
 748              	.LVL28:
 530:Src/main.c    ****     cellVoltage = cellVoltage << 8;
 749              		.loc 1 530 5 is_stmt 1 view .LVU248
 531:Src/main.c    **** 		cellVoltage |= (uint16_t) (bmsData[cell][3]);
 750              		.loc 1 531 3 view .LVU249
 751              		.loc 1 531 43 is_stmt 0 view .LVU250
 752 0028 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 753              		.loc 1 531 15 view .LVU251
 754 002a 41EA0521 		orr	r1, r1, r5, lsl #8
 755              	.LVL29:
 532:Src/main.c    **** 
 533:Src/main.c    ****     cellConnection = (bool) (bmsData[cell][1] & 0x01);
 756              		.loc 1 533 5 is_stmt 1 view .LVU252
 757              		.loc 1 533 43 is_stmt 0 view .LVU253
 758 002e 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 759 0030 02F0010E 		and	lr, r2, #1
 760              	.LVL30:
 534:Src/main.c    ****     dataValid = (bool) ((bmsData[cell][1] & 0x02) >> 1);
 761              		.loc 1 534 5 is_stmt 1 view .LVU254
 762 0034 02F00207 		and	r7, r2, #2
 763              	.LVL31:
 535:Src/main.c    ****     OT_fault = (bool) ((bmsData[cell][1] & 0x10) >> 4);
 764              		.loc 1 535 5 view .LVU255
 765 0038 02F0100C 		and	ip, r2, #16
 766              	.LVL32:
 536:Src/main.c    ****     DC_fault = (bool) ((bmsData[cell][1] & 0x08) >> 3);
 767              		.loc 1 536 5 view .LVU256
 768 003c 02F00802 		and	r2, r2, #8
 769              	.LVL33:
 537:Src/main.c    **** 
 538:Src/main.c    ****     //OV fault
 539:Src/main.c    ****     if (cellVoltage > cfg.OV_threshold) {
 770              		.loc 1 539 5 view .LVU257
 771              		.loc 1 539 26 is_stmt 0 view .LVU258
 772 0040 BDF83E50 		ldrh	r5, [sp, #62]
 773              		.loc 1 539 8 view .LVU259
 774 0044 8D42     		cmp	r5, r1
 775 0046 06D2     		bcs	.L21
 540:Src/main.c    ****       BMS_FAULT = true;
 776              		.loc 1 540 7 is_stmt 1 view .LVU260
 777              	.LVL34:
 541:Src/main.c    ****       bmsStatus[0] |= 0x01; //fault byte
 778              		.loc 1 541 7 view .LVU261
 779              		.loc 1 541 20 is_stmt 0 view .LVU262
 780 0048 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 781 004a 44F00104 		orr	r4, r4, #1
 782 004e 0470     		strb	r4, [r0]
 542:Src/main.c    ****       bmsStatus[1] = cell + 1; //OV cell number
 783              		.loc 1 542 7 is_stmt 1 view .LVU263
 784              		.loc 1 542 27 is_stmt 0 view .LVU264
 785 0050 5C1C     		adds	r4, r3, #1
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 27


 786              		.loc 1 542 20 view .LVU265
 787 0052 4470     		strb	r4, [r0, #1]
 540:Src/main.c    ****       BMS_FAULT = true;
 788              		.loc 1 540 17 view .LVU266
 789 0054 0124     		movs	r4, #1
 790              	.LVL35:
 791              	.L21:
 543:Src/main.c    ****     }
 544:Src/main.c    **** 
 545:Src/main.c    ****     //UV fault
 546:Src/main.c    ****     if (cellVoltage < cfg.UV_threshold) {
 792              		.loc 1 546 5 is_stmt 1 view .LVU267
 793              		.loc 1 546 26 is_stmt 0 view .LVU268
 794 0056 BDF84050 		ldrh	r5, [sp, #64]
 795              		.loc 1 546 8 view .LVU269
 796 005a 8D42     		cmp	r5, r1
 797 005c 06D9     		bls	.L22
 547:Src/main.c    ****       BMS_FAULT = true;
 798              		.loc 1 547 7 is_stmt 1 view .LVU270
 799              	.LVL36:
 548:Src/main.c    ****       bmsStatus[0] |= 0x02; //fault byte
 800              		.loc 1 548 7 view .LVU271
 801              		.loc 1 548 20 is_stmt 0 view .LVU272
 802 005e 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 803              	.LVL37:
 804              		.loc 1 548 20 view .LVU273
 805 0060 41F00201 		orr	r1, r1, #2
 806 0064 0170     		strb	r1, [r0]
 549:Src/main.c    ****       bmsStatus[2] = cell + 1; //UV cell number
 807              		.loc 1 549 7 is_stmt 1 view .LVU274
 808              		.loc 1 549 27 is_stmt 0 view .LVU275
 809 0066 591C     		adds	r1, r3, #1
 810              		.loc 1 549 20 view .LVU276
 811 0068 8170     		strb	r1, [r0, #2]
 547:Src/main.c    ****       BMS_FAULT = true;
 812              		.loc 1 547 17 view .LVU277
 813 006a 0124     		movs	r4, #1
 814              	.LVL38:
 815              	.L22:
 550:Src/main.c    ****     }
 551:Src/main.c    **** 
 552:Src/main.c    ****     //Cell DC fault
 553:Src/main.c    ****     if (cellConnection == 0) {
 816              		.loc 1 553 5 is_stmt 1 view .LVU278
 817              		.loc 1 553 8 is_stmt 0 view .LVU279
 818 006c BEF1000F 		cmp	lr, #0
 819 0070 06D1     		bne	.L23
 554:Src/main.c    ****       BMS_FAULT = true;
 820              		.loc 1 554 7 is_stmt 1 view .LVU280
 821              	.LVL39:
 555:Src/main.c    ****       bmsStatus[0] |= 0x80; //fault byte
 822              		.loc 1 555 7 view .LVU281
 823              		.loc 1 555 20 is_stmt 0 view .LVU282
 824 0072 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 825 0074 61F07F01 		orn	r1, r1, #127
 826 0078 0170     		strb	r1, [r0]
 556:Src/main.c    ****       bmsStatus[4] = cell + 1; //DC cell number
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 28


 827              		.loc 1 556 7 is_stmt 1 view .LVU283
 828              		.loc 1 556 27 is_stmt 0 view .LVU284
 829 007a 591C     		adds	r1, r3, #1
 830              		.loc 1 556 20 view .LVU285
 831 007c 0171     		strb	r1, [r0, #4]
 554:Src/main.c    ****       BMS_FAULT = true;
 832              		.loc 1 554 17 view .LVU286
 833 007e 0124     		movs	r4, #1
 834              	.LVL40:
 835              	.L23:
 557:Src/main.c    ****     }
 558:Src/main.c    **** 
 559:Src/main.c    ****     //OT fault
 560:Src/main.c    ****     if (OT_fault == 1) {
 836              		.loc 1 560 5 is_stmt 1 view .LVU287
 837              		.loc 1 560 8 is_stmt 0 view .LVU288
 838 0080 BCF1000F 		cmp	ip, #0
 839 0084 06D0     		beq	.L24
 561:Src/main.c    ****       BMS_FAULT = true;
 840              		.loc 1 561 7 is_stmt 1 view .LVU289
 841              	.LVL41:
 562:Src/main.c    ****       bmsStatus[0] |= 0x04; //fault byte
 842              		.loc 1 562 7 view .LVU290
 843              		.loc 1 562 20 is_stmt 0 view .LVU291
 844 0086 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 845 0088 41F00401 		orr	r1, r1, #4
 846 008c 0170     		strb	r1, [r0]
 563:Src/main.c    ****       bmsStatus[3] = cell + 1; //OT cell number
 847              		.loc 1 563 7 is_stmt 1 view .LVU292
 848              		.loc 1 563 27 is_stmt 0 view .LVU293
 849 008e 591C     		adds	r1, r3, #1
 850              		.loc 1 563 20 view .LVU294
 851 0090 C170     		strb	r1, [r0, #3]
 561:Src/main.c    ****       BMS_FAULT = true;
 852              		.loc 1 561 17 view .LVU295
 853 0092 0124     		movs	r4, #1
 854              	.LVL42:
 855              	.L24:
 564:Src/main.c    ****     }
 565:Src/main.c    **** 
 566:Src/main.c    ****     //Temp DC fault
 567:Src/main.c    ****     if (DC_fault == 1) {
 856              		.loc 1 567 5 is_stmt 1 view .LVU296
 857              		.loc 1 567 8 is_stmt 0 view .LVU297
 858 0094 32B1     		cbz	r2, .L25
 568:Src/main.c    ****       BMS_FAULT = true;
 859              		.loc 1 568 7 is_stmt 1 view .LVU298
 860              	.LVL43:
 569:Src/main.c    ****       bmsStatus[0] |= 0x10;
 861              		.loc 1 569 7 view .LVU299
 862              		.loc 1 569 20 is_stmt 0 view .LVU300
 863 0096 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 864              	.LVL44:
 865              		.loc 1 569 20 view .LVU301
 866 0098 42F01002 		orr	r2, r2, #16
 867 009c 0270     		strb	r2, [r0]
 570:Src/main.c    ****       bmsStatus[5] = cell + 1;
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 29


 868              		.loc 1 570 7 is_stmt 1 view .LVU302
 869              		.loc 1 570 27 is_stmt 0 view .LVU303
 870 009e 5A1C     		adds	r2, r3, #1
 871              		.loc 1 570 20 view .LVU304
 872 00a0 4271     		strb	r2, [r0, #5]
 568:Src/main.c    ****       BMS_FAULT = true;
 873              		.loc 1 568 17 view .LVU305
 874 00a2 0124     		movs	r4, #1
 875              	.LVL45:
 876              	.L25:
 571:Src/main.c    ****     }
 572:Src/main.c    **** 
 573:Src/main.c    ****     //Board DC fault
 574:Src/main.c    ****     if (dataValid == 0) {
 877              		.loc 1 574 5 is_stmt 1 view .LVU306
 878              		.loc 1 574 8 is_stmt 0 view .LVU307
 879 00a4 002F     		cmp	r7, #0
 880 00a6 B6D1     		bne	.L26
 575:Src/main.c    ****       BMS_FAULT = true;
 881              		.loc 1 575 17 view .LVU308
 882 00a8 0124     		movs	r4, #1
 883              	.LVL46:
 884              		.loc 1 575 17 view .LVU309
 885 00aa B4E7     		b	.L26
 886              	.LVL47:
 887              	.L32:
 888              		.loc 1 575 17 view .LVU310
 889              	.LBE6:
 576:Src/main.c    ****       //bmsStatus[0] |= 0x20;
 577:Src/main.c    ****     }
 578:Src/main.c    **** 
 579:Src/main.c    ****     //Charger comm fault
 580:Src/main.c    ****     /*count = TIM2->CNT;
 581:Src/main.c    **** 
 582:Src/main.c    ****     if (count > 20000) {
 583:Src/main.c    ****       BMS_FAULT = true;
 584:Src/main.c    ****       HAL_TIM_Base_Stop(&htim2);
 585:Src/main.c    ****     }*/
 586:Src/main.c    ****   }
 587:Src/main.c    **** 
 588:Src/main.c    ****   if (BMS_FAULT == false)
 890              		.loc 1 588 3 is_stmt 1 view .LVU311
 891              		.loc 1 588 6 is_stmt 0 view .LVU312
 892 00ac 2CB1     		cbz	r4, .L33
 893              	.LVL48:
 894              	.L28:
 589:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 590:Src/main.c    ****   if (BMS_FAULT == true)
 895              		.loc 1 590 3 is_stmt 1 view .LVU313
 896              		.loc 1 590 6 is_stmt 0 view .LVU314
 897 00ae 5CB9     		cbnz	r4, .L34
 898              	.L29:
 591:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_SET);
 592:Src/main.c    ****   
 593:Src/main.c    ****   return BMS_FAULT;
 899              		.loc 1 593 3 is_stmt 1 view .LVU315
 594:Src/main.c    **** }
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 30


 900              		.loc 1 594 1 is_stmt 0 view .LVU316
 901 00b0 2046     		mov	r0, r4
 902 00b2 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 903              	.LCFI17:
 904              		.cfi_remember_state
 905              		.cfi_restore 14
 906              		.cfi_restore 7
 907              		.cfi_restore 6
 908              		.cfi_restore 5
 909              		.cfi_restore 4
 910              		.cfi_restore 3
 911              		.cfi_def_cfa_offset 16
 912              	.LVL49:
 913              		.loc 1 594 1 view .LVU317
 914 00b6 04B0     		add	sp, sp, #16
 915              	.LCFI18:
 916              		.cfi_def_cfa_offset 0
 917 00b8 7047     		bx	lr
 918              	.LVL50:
 919              	.L33:
 920              	.LCFI19:
 921              		.cfi_restore_state
 589:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 922              		.loc 1 589 5 is_stmt 1 view .LVU318
 923 00ba 0022     		movs	r2, #0
 924 00bc 4FF40071 		mov	r1, #512
 925 00c0 0548     		ldr	r0, .L35
 926 00c2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 927              	.LVL51:
 589:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 928              		.loc 1 589 5 is_stmt 0 view .LVU319
 929 00c6 F2E7     		b	.L28
 930              	.L34:
 591:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_SET);
 931              		.loc 1 591 5 is_stmt 1 view .LVU320
 932 00c8 0122     		movs	r2, #1
 933 00ca 4FF40071 		mov	r1, #512
 934 00ce 0248     		ldr	r0, .L35
 935 00d0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 936              	.LVL52:
 937 00d4 ECE7     		b	.L29
 938              	.L36:
 939 00d6 00BF     		.align	2
 940              	.L35:
 941 00d8 000C0140 		.word	1073810432
 942              		.cfi_endproc
 943              	.LFE73:
 945              		.global	__aeabi_i2f
 946              		.global	__aeabi_fdiv
 947              		.global	__aeabi_f2uiz
 948              		.section	.text.balancingThreshold,"ax",%progbits
 949              		.align	1
 950              		.global	balancingThreshold
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 954              		.fpu softvfp
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 31


 956              	balancingThreshold:
 957              	.LFB75:
 595:Src/main.c    **** 
 596:Src/main.c    **** void setDischarge(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool cellDischarge[12][
 597:Src/main.c    **** 
 598:Src/main.c    ****   uint16_t threshold;
 599:Src/main.c    **** 	chargeRate = 2; // initialize the charging current to normal operation
 600:Src/main.c    **** 
 601:Src/main.c    ****   // if any BMS fault(change this), set charge current to 0
 602:Src/main.c    ****   if (bmsFault == 1)
 603:Src/main.c    ****     chargeRate = 0;
 604:Src/main.c    **** 	
 605:Src/main.c    **** 	for (int board = 0; board < cfg.numOfICs; board++) {
 606:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 607:Src/main.c    **** 
 608:Src/main.c    ****       // if any cell voltage is much greater than the minimum (>200mV), stop charging and discharge
 609:Src/main.c    ****       if (cellVoltage[board][cell] > (minimum + cfg.max_difference)) {
 610:Src/main.c    ****         chargeRate = 0;
 611:Src/main.c    ****         fullDischarge[board][cell] = 1;
 612:Src/main.c    ****       }
 613:Src/main.c    **** 
 614:Src/main.c    ****       // if any cell voltage is greater than some absolute threshold (4.18V), stop charging and dis
 615:Src/main.c    ****       // could discharge to a fixed value (4.15V) instead
 616:Src/main.c    ****       if (cellVoltage[board][cell] > cfg.stopCharge_threshold) {
 617:Src/main.c    ****         chargeRate = 0;
 618:Src/main.c    ****         fullDischarge[board][cell] = 1;
 619:Src/main.c    ****       }
 620:Src/main.c    **** 
 621:Src/main.c    ****       // if still charging AND cells above ~3V (add this)
 622:Src/main.c    ****       if (chargeRate != 0) {
 623:Src/main.c    **** 
 624:Src/main.c    ****         // if any cell is above some absolute threshold, charge slower 
 625:Src/main.c    ****         if (cellVoltage[board][cell] > cfg.slowCharge_threshold)
 626:Src/main.c    ****           chargeRate = 1;
 627:Src/main.c    **** 
 628:Src/main.c    ****         // determine the relative balancing threshold based on minimum voltage
 629:Src/main.c    ****         threshold = balancingThreshold(cfg);
 630:Src/main.c    **** 
 631:Src/main.c    ****         if (cellVoltage[board][cell] > (minimum + threshold))
 632:Src/main.c    ****           cellDischarge[board][cell] = 1;
 633:Src/main.c    ****         else
 634:Src/main.c    ****           cellDischarge[board][cell] = 0;
 635:Src/main.c    ****       }
 636:Src/main.c    ****     }
 637:Src/main.c    **** 	}
 638:Src/main.c    **** }
 639:Src/main.c    **** 
 640:Src/main.c    **** uint16_t balancingThreshold(BMSconfigStructTypedef cfg) {
 958              		.loc 1 640 57 view -0
 959              		.cfi_startproc
 960              		@ args = 96, pretend = 16, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962 0000 84B0     		sub	sp, sp, #16
 963              	.LCFI20:
 964              		.cfi_def_cfa_offset 16
 965 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 966              	.LCFI21:
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 32


 967              		.cfi_def_cfa_offset 40
 968              		.cfi_offset 3, -40
 969              		.cfi_offset 4, -36
 970              		.cfi_offset 5, -32
 971              		.cfi_offset 6, -28
 972              		.cfi_offset 7, -24
 973              		.cfi_offset 14, -20
 974 0004 06AC     		add	r4, sp, #24
 975 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 641:Src/main.c    **** 
 642:Src/main.c    ****   if (minimum > cfg.start_scaling) {
 976              		.loc 1 642 3 view .LVU322
 977              		.loc 1 642 20 is_stmt 0 view .LVU323
 978 000a BDF84E60 		ldrh	r6, [sp, #78]
 979              		.loc 1 642 15 view .LVU324
 980 000e 124B     		ldr	r3, .L41
 981 0010 1C88     		ldrh	r4, [r3]
 982              		.loc 1 642 6 view .LVU325
 983 0012 A642     		cmp	r6, r4
 984 0014 1DD2     		bcs	.L38
 985              	.LBB7:
 643:Src/main.c    ****     // min1 = 4.1V   threshold1 = 50mV
 644:Src/main.c    ****     // min2 = 4.16V  threshold2 = 10mV
 645:Src/main.c    **** 
 646:Src/main.c    ****     // m = (threshold2 - threshold1) / (min2 - min1)
 647:Src/main.c    ****     // linear = m * (minimum - min1) + threshold1
 648:Src/main.c    **** 
 649:Src/main.c    ****     float m;
 986              		.loc 1 649 5 is_stmt 1 view .LVU326
 650:Src/main.c    ****     uint16_t linear;
 987              		.loc 1 650 5 view .LVU327
 651:Src/main.c    **** 
 652:Src/main.c    ****     //  ()
 653:Src/main.c    ****     m = ((float) (cfg.scale_to - cfg.balancing_difference)) / (cfg.stop_scaling - cfg.start_scaling
 988              		.loc 1 653 5 view .LVU328
 989              		.loc 1 653 22 is_stmt 0 view .LVU329
 990 0016 BDF85200 		ldrh	r0, [sp, #82]
 991              		.loc 1 653 37 view .LVU330
 992 001a BDF84850 		ldrh	r5, [sp, #72]
 993              		.loc 1 653 10 view .LVU331
 994 001e 401B     		subs	r0, r0, r5
 995 0020 FFF7FEFF 		bl	__aeabi_i2f
 996              	.LVL53:
 997 0024 0746     		mov	r7, r0
 998              		.loc 1 653 67 view .LVU332
 999 0026 BDF85000 		ldrh	r0, [sp, #80]
 1000              		.loc 1 653 61 view .LVU333
 1001 002a 801B     		subs	r0, r0, r6
 1002 002c FFF7FEFF 		bl	__aeabi_i2f
 1003              	.LVL54:
 1004              		.loc 1 653 7 view .LVU334
 1005 0030 0146     		mov	r1, r0
 1006 0032 3846     		mov	r0, r7
 1007 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1008              	.LVL55:
 654:Src/main.c    ****     linear = (uint16_t) m * (minimum - cfg.start_scaling) + cfg.balancing_difference;
 1009              		.loc 1 654 5 is_stmt 1 view .LVU335
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 33


 1010              		.loc 1 654 14 is_stmt 0 view .LVU336
 1011 0038 FFF7FEFF 		bl	__aeabi_f2uiz
 1012              	.LVL56:
 1013              		.loc 1 654 14 view .LVU337
 1014 003c 80B2     		uxth	r0, r0
 1015              		.loc 1 654 59 view .LVU338
 1016 003e A41B     		subs	r4, r4, r6
 1017 0040 04FB00F4 		mul	r4, r4, r0
 1018 0044 A4B2     		uxth	r4, r4
 1019              		.loc 1 654 12 view .LVU339
 1020 0046 2C44     		add	r4, r4, r5
 1021 0048 A0B2     		uxth	r0, r4
 1022              	.LVL57:
 655:Src/main.c    **** 
 656:Src/main.c    ****     return linear;
 1023              		.loc 1 656 5 is_stmt 1 view .LVU340
 1024              	.L39:
 1025              		.loc 1 656 5 is_stmt 0 view .LVU341
 1026              	.LBE7:
 657:Src/main.c    **** 
 658:Src/main.c    ****   }
 659:Src/main.c    ****   if (minimum <= cfg.start_scaling)
 660:Src/main.c    ****     return cfg.balancing_difference; 
 661:Src/main.c    **** 
 662:Src/main.c    ****   return 0;
 663:Src/main.c    **** 
 664:Src/main.c    **** }
 1027              		.loc 1 664 1 view .LVU342
 1028 004a BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1029              	.LCFI22:
 1030              		.cfi_remember_state
 1031              		.cfi_restore 14
 1032              		.cfi_restore 7
 1033              		.cfi_restore 6
 1034              		.cfi_restore 5
 1035              		.cfi_restore 4
 1036              		.cfi_restore 3
 1037              		.cfi_def_cfa_offset 16
 1038 004e 04B0     		add	sp, sp, #16
 1039              	.LCFI23:
 1040              		.cfi_def_cfa_offset 0
 1041 0050 7047     		bx	lr
 1042              	.L38:
 1043              	.LCFI24:
 1044              		.cfi_restore_state
 659:Src/main.c    ****     return cfg.balancing_difference; 
 1045              		.loc 1 659 3 is_stmt 1 view .LVU343
 660:Src/main.c    **** 
 1046              		.loc 1 660 5 view .LVU344
 660:Src/main.c    **** 
 1047              		.loc 1 660 15 is_stmt 0 view .LVU345
 1048 0052 BDF84800 		ldrh	r0, [sp, #72]
 1049 0056 F8E7     		b	.L39
 1050              	.L42:
 1051              		.align	2
 1052              	.L41:
 1053 0058 00000000 		.word	minimum
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 34


 1054              		.cfi_endproc
 1055              	.LFE75:
 1057              		.section	.text.setDischarge,"ax",%progbits
 1058              		.align	1
 1059              		.global	setDischarge
 1060              		.syntax unified
 1061              		.thumb
 1062              		.thumb_func
 1063              		.fpu softvfp
 1065              	setDischarge:
 1066              	.LVL58:
 1067              	.LFB74:
 596:Src/main.c    **** 
 1068              		.loc 1 596 146 is_stmt 1 view -0
 1069              		.cfi_startproc
 1070              		@ args = 112, pretend = 16, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 596:Src/main.c    **** 
 1072              		.loc 1 596 146 is_stmt 0 view .LVU347
 1073 0000 84B0     		sub	sp, sp, #16
 1074              	.LCFI25:
 1075              		.cfi_def_cfa_offset 16
 1076 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1077              	.LCFI26:
 1078              		.cfi_def_cfa_offset 48
 1079              		.cfi_offset 4, -48
 1080              		.cfi_offset 5, -44
 1081              		.cfi_offset 6, -40
 1082              		.cfi_offset 7, -36
 1083              		.cfi_offset 8, -32
 1084              		.cfi_offset 9, -28
 1085              		.cfi_offset 10, -24
 1086              		.cfi_offset 14, -20
 1087 0006 94B0     		sub	sp, sp, #80
 1088              	.LCFI27:
 1089              		.cfi_def_cfa_offset 128
 1090 0008 1CAC     		add	r4, sp, #112
 1091 000a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1092 000e DDF8D080 		ldr	r8, [sp, #208]
 1093 0012 DDF8D4A0 		ldr	r10, [sp, #212]
 1094 0016 9DF8D830 		ldrb	r3, [sp, #216]	@ zero_extendqisi2
 1095 001a DDF8DC90 		ldr	r9, [sp, #220]
 598:Src/main.c    **** 	chargeRate = 2; // initialize the charging current to normal operation
 1096              		.loc 1 598 3 is_stmt 1 view .LVU348
 599:Src/main.c    **** 
 1097              		.loc 1 599 2 view .LVU349
 599:Src/main.c    **** 
 1098              		.loc 1 599 13 is_stmt 0 view .LVU350
 1099 001e 314A     		ldr	r2, .L57
 1100 0020 0221     		movs	r1, #2
 1101 0022 1170     		strb	r1, [r2]
 602:Src/main.c    ****     chargeRate = 0;
 1102              		.loc 1 602 3 is_stmt 1 view .LVU351
 602:Src/main.c    ****     chargeRate = 0;
 1103              		.loc 1 602 6 is_stmt 0 view .LVU352
 1104 0024 13B1     		cbz	r3, .L44
 603:Src/main.c    **** 	
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 35


 1105              		.loc 1 603 5 is_stmt 1 view .LVU353
 603:Src/main.c    **** 	
 1106              		.loc 1 603 16 is_stmt 0 view .LVU354
 1107 0026 1346     		mov	r3, r2
 1108 0028 0022     		movs	r2, #0
 1109 002a 1A70     		strb	r2, [r3]
 1110              	.L44:
 1111              	.LBB8:
 1112              	.LBB9:
 606:Src/main.c    **** 
 1113              		.loc 1 606 12 discriminator 1 view .LVU355
 1114 002c 0026     		movs	r6, #0
 1115 002e 4DE0     		b	.L45
 1116              	.LVL59:
 1117              	.L50:
 634:Src/main.c    ****       }
 1118              		.loc 1 634 11 is_stmt 1 view .LVU356
 634:Src/main.c    ****       }
 1119              		.loc 1 634 24 is_stmt 0 view .LVU357
 1120 0030 0AEBC707 		add	r7, r10, r7, lsl #3
 634:Src/main.c    ****       }
 1121              		.loc 1 634 38 view .LVU358
 1122 0034 0023     		movs	r3, #0
 1123 0036 3B55     		strb	r3, [r7, r4]
 1124              	.L48:
 606:Src/main.c    **** 
 1125              		.loc 1 606 54 discriminator 2 view .LVU359
 1126 0038 0134     		adds	r4, r4, #1
 1127              	.LVL60:
 1128              	.L52:
 606:Src/main.c    **** 
 1129              		.loc 1 606 32 discriminator 1 view .LVU360
 1130 003a 9DF89230 		ldrb	r3, [sp, #146]	@ zero_extendqisi2
 606:Src/main.c    **** 
 1131              		.loc 1 606 3 discriminator 1 view .LVU361
 1132 003e A342     		cmp	r3, r4
 1133 0040 43DD     		ble	.L55
 609:Src/main.c    ****         chargeRate = 0;
 1134              		.loc 1 609 7 is_stmt 1 view .LVU362
 609:Src/main.c    ****         chargeRate = 0;
 1135              		.loc 1 609 22 is_stmt 0 view .LVU363
 1136 0042 3746     		mov	r7, r6
 1137 0044 06EB4603 		add	r3, r6, r6, lsl #1
 1138 0048 DD00     		lsls	r5, r3, #3
 1139 004a 4544     		add	r5, r5, r8
 609:Src/main.c    ****         chargeRate = 0;
 1140              		.loc 1 609 29 view .LVU364
 1141 004c 35F81420 		ldrh	r2, [r5, r4, lsl #1]
 609:Src/main.c    ****         chargeRate = 0;
 1142              		.loc 1 609 52 view .LVU365
 1143 0050 BDF89E10 		ldrh	r1, [sp, #158]
 609:Src/main.c    ****         chargeRate = 0;
 1144              		.loc 1 609 47 view .LVU366
 1145 0054 244B     		ldr	r3, .L57+4
 1146 0056 1B88     		ldrh	r3, [r3]
 1147 0058 0B44     		add	r3, r3, r1
 609:Src/main.c    ****         chargeRate = 0;
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 36


 1148              		.loc 1 609 10 view .LVU367
 1149 005a 9A42     		cmp	r2, r3
 1150 005c 06DD     		ble	.L46
 610:Src/main.c    ****         fullDischarge[board][cell] = 1;
 1151              		.loc 1 610 9 is_stmt 1 view .LVU368
 610:Src/main.c    ****         fullDischarge[board][cell] = 1;
 1152              		.loc 1 610 20 is_stmt 0 view .LVU369
 1153 005e 214B     		ldr	r3, .L57
 1154 0060 0022     		movs	r2, #0
 1155 0062 1A70     		strb	r2, [r3]
 611:Src/main.c    ****       }
 1156              		.loc 1 611 9 is_stmt 1 view .LVU370
 611:Src/main.c    ****       }
 1157              		.loc 1 611 22 is_stmt 0 view .LVU371
 1158 0064 09EBC603 		add	r3, r9, r6, lsl #3
 611:Src/main.c    ****       }
 1159              		.loc 1 611 36 view .LVU372
 1160 0068 0122     		movs	r2, #1
 1161 006a 1A55     		strb	r2, [r3, r4]
 1162              	.L46:
 616:Src/main.c    ****         chargeRate = 0;
 1163              		.loc 1 616 7 is_stmt 1 view .LVU373
 616:Src/main.c    ****         chargeRate = 0;
 1164              		.loc 1 616 29 is_stmt 0 view .LVU374
 1165 006c 35F81420 		ldrh	r2, [r5, r4, lsl #1]
 616:Src/main.c    ****         chargeRate = 0;
 1166              		.loc 1 616 41 view .LVU375
 1167 0070 BDF89C30 		ldrh	r3, [sp, #156]
 616:Src/main.c    ****         chargeRate = 0;
 1168              		.loc 1 616 10 view .LVU376
 1169 0074 9A42     		cmp	r2, r3
 1170 0076 06D9     		bls	.L47
 617:Src/main.c    ****         fullDischarge[board][cell] = 1;
 1171              		.loc 1 617 9 is_stmt 1 view .LVU377
 617:Src/main.c    ****         fullDischarge[board][cell] = 1;
 1172              		.loc 1 617 20 is_stmt 0 view .LVU378
 1173 0078 1A4B     		ldr	r3, .L57
 1174 007a 0022     		movs	r2, #0
 1175 007c 1A70     		strb	r2, [r3]
 618:Src/main.c    ****       }
 1176              		.loc 1 618 9 is_stmt 1 view .LVU379
 618:Src/main.c    ****       }
 1177              		.loc 1 618 22 is_stmt 0 view .LVU380
 1178 007e 09EBC703 		add	r3, r9, r7, lsl #3
 618:Src/main.c    ****       }
 1179              		.loc 1 618 36 view .LVU381
 1180 0082 0122     		movs	r2, #1
 1181 0084 1A55     		strb	r2, [r3, r4]
 1182              	.L47:
 622:Src/main.c    **** 
 1183              		.loc 1 622 7 is_stmt 1 view .LVU382
 622:Src/main.c    **** 
 1184              		.loc 1 622 22 is_stmt 0 view .LVU383
 1185 0086 174B     		ldr	r3, .L57
 1186 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 622:Src/main.c    **** 
 1187              		.loc 1 622 10 view .LVU384
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 37


 1188 008a 002B     		cmp	r3, #0
 1189 008c D4D0     		beq	.L48
 625:Src/main.c    ****           chargeRate = 1;
 1190              		.loc 1 625 9 is_stmt 1 view .LVU385
 625:Src/main.c    ****           chargeRate = 1;
 1191              		.loc 1 625 31 is_stmt 0 view .LVU386
 1192 008e 35F81420 		ldrh	r2, [r5, r4, lsl #1]
 625:Src/main.c    ****           chargeRate = 1;
 1193              		.loc 1 625 43 view .LVU387
 1194 0092 BDF89A30 		ldrh	r3, [sp, #154]
 625:Src/main.c    ****           chargeRate = 1;
 1195              		.loc 1 625 12 view .LVU388
 1196 0096 9A42     		cmp	r2, r3
 1197 0098 02D9     		bls	.L49
 626:Src/main.c    **** 
 1198              		.loc 1 626 11 is_stmt 1 view .LVU389
 626:Src/main.c    **** 
 1199              		.loc 1 626 22 is_stmt 0 view .LVU390
 1200 009a 124B     		ldr	r3, .L57
 1201 009c 0122     		movs	r2, #1
 1202 009e 1A70     		strb	r2, [r3]
 1203              	.L49:
 629:Src/main.c    **** 
 1204              		.loc 1 629 9 is_stmt 1 view .LVU391
 629:Src/main.c    **** 
 1205              		.loc 1 629 21 is_stmt 0 view .LVU392
 1206 00a0 4E22     		movs	r2, #78
 1207 00a2 20A9     		add	r1, sp, #128
 1208 00a4 6846     		mov	r0, sp
 1209 00a6 FFF7FEFF 		bl	memcpy
 1210              	.LVL61:
 1211 00aa 1CAB     		add	r3, sp, #112
 1212 00ac 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1213 00ae FFF7FEFF 		bl	balancingThreshold
 1214              	.LVL62:
 631:Src/main.c    ****           cellDischarge[board][cell] = 1;
 1215              		.loc 1 631 9 is_stmt 1 view .LVU393
 631:Src/main.c    ****           cellDischarge[board][cell] = 1;
 1216              		.loc 1 631 31 is_stmt 0 view .LVU394
 1217 00b2 35F81420 		ldrh	r2, [r5, r4, lsl #1]
 631:Src/main.c    ****           cellDischarge[board][cell] = 1;
 1218              		.loc 1 631 49 view .LVU395
 1219 00b6 0C4B     		ldr	r3, .L57+4
 1220 00b8 1B88     		ldrh	r3, [r3]
 1221 00ba 1844     		add	r0, r0, r3
 1222              	.LVL63:
 631:Src/main.c    ****           cellDischarge[board][cell] = 1;
 1223              		.loc 1 631 12 view .LVU396
 1224 00bc 8242     		cmp	r2, r0
 1225 00be B7DD     		ble	.L50
 632:Src/main.c    ****         else
 1226              		.loc 1 632 11 is_stmt 1 view .LVU397
 632:Src/main.c    ****         else
 1227              		.loc 1 632 24 is_stmt 0 view .LVU398
 1228 00c0 0AEBC707 		add	r7, r10, r7, lsl #3
 632:Src/main.c    ****         else
 1229              		.loc 1 632 38 view .LVU399
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 38


 1230 00c4 0123     		movs	r3, #1
 1231 00c6 3B55     		strb	r3, [r7, r4]
 1232 00c8 B6E7     		b	.L48
 1233              	.L55:
 632:Src/main.c    ****         else
 1234              		.loc 1 632 38 view .LVU400
 1235              	.LBE9:
 605:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1236              		.loc 1 605 49 discriminator 2 view .LVU401
 1237 00ca 0136     		adds	r6, r6, #1
 1238              	.LVL64:
 1239              	.L45:
 605:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1240              		.loc 1 605 33 discriminator 1 view .LVU402
 1241 00cc 9DF87030 		ldrb	r3, [sp, #112]	@ zero_extendqisi2
 605:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1242              		.loc 1 605 2 discriminator 1 view .LVU403
 1243 00d0 B342     		cmp	r3, r6
 1244 00d2 01DD     		ble	.L56
 1245              	.LBB10:
 606:Src/main.c    **** 
 1246              		.loc 1 606 12 view .LVU404
 1247 00d4 0024     		movs	r4, #0
 1248 00d6 B0E7     		b	.L52
 1249              	.L56:
 1250              	.LBE10:
 1251              	.LBE8:
 638:Src/main.c    **** 
 1252              		.loc 1 638 1 view .LVU405
 1253 00d8 14B0     		add	sp, sp, #80
 1254              	.LCFI28:
 1255              		.cfi_def_cfa_offset 48
 1256              		@ sp needed
 1257 00da BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 1258              	.LCFI29:
 1259              		.cfi_restore 14
 1260              		.cfi_restore 10
 1261              		.cfi_restore 9
 1262              		.cfi_restore 8
 1263              		.cfi_restore 7
 1264              		.cfi_restore 6
 1265              		.cfi_restore 5
 1266              		.cfi_restore 4
 1267              		.cfi_def_cfa_offset 16
 1268              	.LVL65:
 638:Src/main.c    **** 
 1269              		.loc 1 638 1 view .LVU406
 1270 00de 04B0     		add	sp, sp, #16
 1271              	.LCFI30:
 1272              		.cfi_def_cfa_offset 0
 1273 00e0 7047     		bx	lr
 1274              	.L58:
 1275 00e2 00BF     		.align	2
 1276              	.L57:
 1277 00e4 00000000 		.word	.LANCHOR0
 1278 00e8 00000000 		.word	minimum
 1279              		.cfi_endproc
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 39


 1280              	.LFE74:
 1282              		.section	.text.checkDischarge,"ax",%progbits
 1283              		.align	1
 1284              		.global	checkDischarge
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1288              		.fpu softvfp
 1290              	checkDischarge:
 1291              	.LVL66:
 1292              	.LFB76:
 665:Src/main.c    **** 
 666:Src/main.c    **** void checkDischarge(BMSconfigStructTypedef cfg, bool fullDischarge[12][8], uint16_t cellVoltage[12]
 1293              		.loc 1 666 106 is_stmt 1 view -0
 1294              		.cfi_startproc
 1295              		@ args = 104, pretend = 16, frame = 0
 1296              		@ frame_needed = 0, uses_anonymous_args = 0
 1297              		@ link register save eliminated.
 1298              		.loc 1 666 106 is_stmt 0 view .LVU408
 1299 0000 84B0     		sub	sp, sp, #16
 1300              	.LCFI31:
 1301              		.cfi_def_cfa_offset 16
 1302 0002 F0B4     		push	{r4, r5, r6, r7}
 1303              	.LCFI32:
 1304              		.cfi_def_cfa_offset 32
 1305              		.cfi_offset 4, -32
 1306              		.cfi_offset 5, -28
 1307              		.cfi_offset 6, -24
 1308              		.cfi_offset 7, -20
 1309 0004 04AC     		add	r4, sp, #16
 1310 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1311 000a 1C9F     		ldr	r7, [sp, #112]
 1312 000c DDF874C0 		ldr	ip, [sp, #116]
 667:Src/main.c    **** 
 668:Src/main.c    ****   uint8_t sum = 0;
 1313              		.loc 1 668 3 is_stmt 1 view .LVU409
 1314              	.LVL67:
 669:Src/main.c    **** 
 670:Src/main.c    ****   for (uint8_t board = 0; board < cfg.numOfICs; board++) {
 1315              		.loc 1 670 3 view .LVU410
 1316              	.LBB11:
 1317              		.loc 1 670 8 view .LVU411
 1318              		.loc 1 670 16 is_stmt 0 view .LVU412
 1319 0010 0020     		movs	r0, #0
 1320              	.LBE11:
 668:Src/main.c    **** 
 1321              		.loc 1 668 11 view .LVU413
 1322 0012 0646     		mov	r6, r0
 1323              	.LBB14:
 1324              		.loc 1 670 3 view .LVU414
 1325 0014 1BE0     		b	.L60
 1326              	.LVL68:
 1327              	.L62:
 1328              	.LBB12:
 671:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 672:Src/main.c    ****       if (fullDischarge[board][cell] == 1) {
 673:Src/main.c    ****         if (cellVoltage[board][cell] <= minimum)
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 40


 674:Src/main.c    ****           fullDischarge[board][cell] = 0;
 675:Src/main.c    ****         else
 676:Src/main.c    ****           sum = sum + 1;
 1329              		.loc 1 676 11 is_stmt 1 view .LVU415
 1330              		.loc 1 676 15 is_stmt 0 view .LVU416
 1331 0016 0136     		adds	r6, r6, #1
 1332              	.LVL69:
 1333              		.loc 1 676 15 view .LVU417
 1334 0018 F6B2     		uxtb	r6, r6
 1335              	.LVL70:
 1336              	.L61:
 671:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1337              		.loc 1 671 60 discriminator 2 view .LVU418
 1338 001a 0133     		adds	r3, r3, #1
 1339              	.LVL71:
 671:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1340              		.loc 1 671 60 discriminator 2 view .LVU419
 1341 001c DBB2     		uxtb	r3, r3
 1342              	.LVL72:
 1343              	.L64:
 671:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1344              		.loc 1 671 38 discriminator 1 view .LVU420
 1345 001e 9DF83220 		ldrb	r2, [sp, #50]	@ zero_extendqisi2
 671:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1346              		.loc 1 671 5 discriminator 1 view .LVU421
 1347 0022 9A42     		cmp	r2, r3
 1348 0024 11D9     		bls	.L68
 672:Src/main.c    ****         if (cellVoltage[board][cell] <= minimum)
 1349              		.loc 1 672 7 is_stmt 1 view .LVU422
 672:Src/main.c    ****         if (cellVoltage[board][cell] <= minimum)
 1350              		.loc 1 672 24 is_stmt 0 view .LVU423
 1351 0026 07EBC001 		add	r1, r7, r0, lsl #3
 672:Src/main.c    ****         if (cellVoltage[board][cell] <= minimum)
 1352              		.loc 1 672 31 view .LVU424
 1353 002a CA5C     		ldrb	r2, [r1, r3]	@ zero_extendqisi2
 672:Src/main.c    ****         if (cellVoltage[board][cell] <= minimum)
 1354              		.loc 1 672 10 view .LVU425
 1355 002c 002A     		cmp	r2, #0
 1356 002e F4D0     		beq	.L61
 673:Src/main.c    ****           fullDischarge[board][cell] = 0;
 1357              		.loc 1 673 9 is_stmt 1 view .LVU426
 673:Src/main.c    ****           fullDischarge[board][cell] = 0;
 1358              		.loc 1 673 24 is_stmt 0 view .LVU427
 1359 0030 00EB4004 		add	r4, r0, r0, lsl #1
 1360 0034 E200     		lsls	r2, r4, #3
 1361 0036 6244     		add	r2, r2, ip
 673:Src/main.c    ****           fullDischarge[board][cell] = 0;
 1362              		.loc 1 673 31 view .LVU428
 1363 0038 32F81340 		ldrh	r4, [r2, r3, lsl #1]
 673:Src/main.c    ****           fullDischarge[board][cell] = 0;
 1364              		.loc 1 673 38 view .LVU429
 1365 003c 0A4A     		ldr	r2, .L70
 1366 003e 1288     		ldrh	r2, [r2]
 673:Src/main.c    ****           fullDischarge[board][cell] = 0;
 1367              		.loc 1 673 12 view .LVU430
 1368 0040 9442     		cmp	r4, r2
 1369 0042 E8D8     		bhi	.L62
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 41


 674:Src/main.c    ****         else
 1370              		.loc 1 674 11 is_stmt 1 view .LVU431
 674:Src/main.c    ****         else
 1371              		.loc 1 674 38 is_stmt 0 view .LVU432
 1372 0044 0022     		movs	r2, #0
 1373 0046 CA54     		strb	r2, [r1, r3]
 1374 0048 E7E7     		b	.L61
 1375              	.L68:
 1376              	.LBE12:
 670:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1377              		.loc 1 670 54 discriminator 2 view .LVU433
 1378 004a 0130     		adds	r0, r0, #1
 1379              	.LVL73:
 670:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1380              		.loc 1 670 54 discriminator 2 view .LVU434
 1381 004c C0B2     		uxtb	r0, r0
 1382              	.LVL74:
 1383              	.L60:
 670:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1384              		.loc 1 670 38 discriminator 1 view .LVU435
 1385 004e 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 670:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1386              		.loc 1 670 3 discriminator 1 view .LVU436
 1387 0052 8342     		cmp	r3, r0
 1388 0054 01D9     		bls	.L69
 1389              	.LBB13:
 671:Src/main.c    ****       if (fullDischarge[board][cell] == 1) {
 1390              		.loc 1 671 18 view .LVU437
 1391 0056 0023     		movs	r3, #0
 1392 0058 E1E7     		b	.L64
 1393              	.L69:
 1394              	.LBE13:
 1395              	.LBE14:
 677:Src/main.c    ****       }
 678:Src/main.c    ****     }
 679:Src/main.c    ****   }
 680:Src/main.c    **** 
 681:Src/main.c    ****   if (sum == 0)
 1396              		.loc 1 681 3 is_stmt 1 view .LVU438
 1397              		.loc 1 681 6 is_stmt 0 view .LVU439
 1398 005a 16B9     		cbnz	r6, .L59
 682:Src/main.c    ****     chargeRate = 2;
 1399              		.loc 1 682 5 is_stmt 1 view .LVU440
 1400              		.loc 1 682 16 is_stmt 0 view .LVU441
 1401 005c 034B     		ldr	r3, .L70+4
 1402 005e 0222     		movs	r2, #2
 1403 0060 1A70     		strb	r2, [r3]
 1404              	.L59:
 683:Src/main.c    **** 
 684:Src/main.c    **** }
 1405              		.loc 1 684 1 view .LVU442
 1406 0062 F0BC     		pop	{r4, r5, r6, r7}
 1407              	.LCFI33:
 1408              		.cfi_restore 7
 1409              		.cfi_restore 6
 1410              		.cfi_restore 5
 1411              		.cfi_restore 4
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 42


 1412              		.cfi_def_cfa_offset 16
 1413              	.LVL75:
 1414              		.loc 1 684 1 view .LVU443
 1415 0064 04B0     		add	sp, sp, #16
 1416              	.LCFI34:
 1417              		.cfi_def_cfa_offset 0
 1418 0066 7047     		bx	lr
 1419              	.L71:
 1420              		.align	2
 1421              	.L70:
 1422 0068 00000000 		.word	minimum
 1423 006c 00000000 		.word	.LANCHOR0
 1424              		.cfi_endproc
 1425              	.LFE76:
 1427              		.section	.text.setChargerTxData,"ax",%progbits
 1428              		.align	1
 1429              		.global	setChargerTxData
 1430              		.syntax unified
 1431              		.thumb
 1432              		.thumb_func
 1433              		.fpu softvfp
 1435              	setChargerTxData:
 1436              	.LFB77:
 685:Src/main.c    **** 
 686:Src/main.c    **** void setChargerTxData(BMSconfigStructTypedef cfg) {
 1437              		.loc 1 686 51 is_stmt 1 view -0
 1438              		.cfi_startproc
 1439              		@ args = 96, pretend = 16, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441 0000 84B0     		sub	sp, sp, #16
 1442              	.LCFI35:
 1443              		.cfi_def_cfa_offset 16
 1444 0002 08B5     		push	{r3, lr}
 1445              	.LCFI36:
 1446              		.cfi_def_cfa_offset 24
 1447              		.cfi_offset 3, -24
 1448              		.cfi_offset 14, -20
 1449 0004 0DF1080C 		add	ip, sp, #8
 1450 0008 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 687:Src/main.c    **** 
 688:Src/main.c    **** 	/* voltage data (hex value of desired voltage (V) times 10)*/
 689:Src/main.c    **** 	ChargerTxData[0] = (uint8_t)(cfg.chargerVoltage >> 8);
 1451              		.loc 1 689 2 view .LVU445
 1452              		.loc 1 689 34 is_stmt 0 view .LVU446
 1453 000c BDF84820 		ldrh	r2, [sp, #72]
 1454              		.loc 1 689 21 view .LVU447
 1455 0010 110A     		lsrs	r1, r2, #8
 1456              		.loc 1 689 19 view .LVU448
 1457 0012 154B     		ldr	r3, .L79
 1458 0014 1970     		strb	r1, [r3]
 690:Src/main.c    **** 	ChargerTxData[1] = (uint8_t)cfg.chargerVoltage;
 1459              		.loc 1 690 2 is_stmt 1 view .LVU449
 1460              		.loc 1 690 19 is_stmt 0 view .LVU450
 1461 0016 5A70     		strb	r2, [r3, #1]
 691:Src/main.c    **** 
 692:Src/main.c    **** 	/* set the current data (hex value of desired current (A) times 10) */
 693:Src/main.c    **** 	switch (chargeRate) {
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 43


 1462              		.loc 1 693 2 is_stmt 1 view .LVU451
 1463 0018 144B     		ldr	r3, .L79+4
 1464 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1465 001c 012B     		cmp	r3, #1
 1466 001e 06D0     		beq	.L73
 1467 0020 022B     		cmp	r3, #2
 1468 0022 19D0     		beq	.L74
 694:Src/main.c    **** 		case 1:
 695:Src/main.c    **** 			/* lower current */
 696:Src/main.c    **** 			ChargerTxData[2] = (uint8_t)(cfg.lowerCurrent >> 8);
 697:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.lowerCurrent;
 698:Src/main.c    **** 			break;
 699:Src/main.c    **** 
 700:Src/main.c    **** 		case 2:
 701:Src/main.c    **** 			/* normal current */
 702:Src/main.c    **** 			ChargerTxData[2] = (uint8_t)(cfg.normalCurrent >> 8);
 703:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.normalCurrent;
 704:Src/main.c    **** 			break;
 705:Src/main.c    **** 
 706:Src/main.c    **** 		default:
 707:Src/main.c    **** 			/* no current */
 708:Src/main.c    **** 			ChargerTxData[2] = 0x00;
 1469              		.loc 1 708 4 view .LVU452
 1470              		.loc 1 708 21 is_stmt 0 view .LVU453
 1471 0024 104B     		ldr	r3, .L79
 1472 0026 0022     		movs	r2, #0
 1473 0028 9A70     		strb	r2, [r3, #2]
 709:Src/main.c    **** 			ChargerTxData[3] = 0x00;
 1474              		.loc 1 709 4 is_stmt 1 view .LVU454
 1475              		.loc 1 709 21 is_stmt 0 view .LVU455
 1476 002a DA70     		strb	r2, [r3, #3]
 1477 002c 05E0     		b	.L76
 1478              	.L73:
 696:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.lowerCurrent;
 1479              		.loc 1 696 4 is_stmt 1 view .LVU456
 696:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.lowerCurrent;
 1480              		.loc 1 696 36 is_stmt 0 view .LVU457
 1481 002e BDF84620 		ldrh	r2, [sp, #70]
 696:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.lowerCurrent;
 1482              		.loc 1 696 23 view .LVU458
 1483 0032 110A     		lsrs	r1, r2, #8
 696:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.lowerCurrent;
 1484              		.loc 1 696 21 view .LVU459
 1485 0034 0C4B     		ldr	r3, .L79
 1486 0036 9970     		strb	r1, [r3, #2]
 697:Src/main.c    **** 			break;
 1487              		.loc 1 697 4 is_stmt 1 view .LVU460
 697:Src/main.c    **** 			break;
 1488              		.loc 1 697 21 is_stmt 0 view .LVU461
 1489 0038 DA70     		strb	r2, [r3, #3]
 698:Src/main.c    **** 
 1490              		.loc 1 698 4 is_stmt 1 view .LVU462
 1491              	.L76:
 710:Src/main.c    **** 	}
 711:Src/main.c    **** 
 712:Src/main.c    **** 	/* these data bytes are not used */
 713:Src/main.c    **** 	ChargerTxData[4] = 0x00;
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 44


 1492              		.loc 1 713 2 view .LVU463
 1493              		.loc 1 713 19 is_stmt 0 view .LVU464
 1494 003a 0B4A     		ldr	r2, .L79
 1495 003c 0023     		movs	r3, #0
 1496 003e 1371     		strb	r3, [r2, #4]
 714:Src/main.c    **** 	ChargerTxData[5] = 0x00;
 1497              		.loc 1 714 2 is_stmt 1 view .LVU465
 1498              		.loc 1 714 19 is_stmt 0 view .LVU466
 1499 0040 5371     		strb	r3, [r2, #5]
 715:Src/main.c    **** 	ChargerTxData[6] = 0x00;
 1500              		.loc 1 715 2 is_stmt 1 view .LVU467
 1501              		.loc 1 715 19 is_stmt 0 view .LVU468
 1502 0042 9371     		strb	r3, [r2, #6]
 716:Src/main.c    **** 	ChargerTxData[7] = 0x00;
 1503              		.loc 1 716 2 is_stmt 1 view .LVU469
 1504              		.loc 1 716 19 is_stmt 0 view .LVU470
 1505 0044 D371     		strb	r3, [r2, #7]
 717:Src/main.c    **** 
 718:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &ChargerTxHeader, ChargerTxData, &TxMailbox);
 1506              		.loc 1 718 3 is_stmt 1 view .LVU471
 1507 0046 0A4B     		ldr	r3, .L79+8
 1508 0048 0A49     		ldr	r1, .L79+12
 1509 004a 0B48     		ldr	r0, .L79+16
 1510 004c FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1511              	.LVL76:
 719:Src/main.c    **** }
 1512              		.loc 1 719 1 is_stmt 0 view .LVU472
 1513 0050 BDE80840 		pop	{r3, lr}
 1514              	.LCFI37:
 1515              		.cfi_remember_state
 1516              		.cfi_restore 14
 1517              		.cfi_restore 3
 1518              		.cfi_def_cfa_offset 16
 1519 0054 04B0     		add	sp, sp, #16
 1520              	.LCFI38:
 1521              		.cfi_def_cfa_offset 0
 1522 0056 7047     		bx	lr
 1523              	.L74:
 1524              	.LCFI39:
 1525              		.cfi_restore_state
 702:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.normalCurrent;
 1526              		.loc 1 702 4 is_stmt 1 view .LVU473
 702:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.normalCurrent;
 1527              		.loc 1 702 36 is_stmt 0 view .LVU474
 1528 0058 BDF84420 		ldrh	r2, [sp, #68]
 702:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.normalCurrent;
 1529              		.loc 1 702 23 view .LVU475
 1530 005c 110A     		lsrs	r1, r2, #8
 702:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)cfg.normalCurrent;
 1531              		.loc 1 702 21 view .LVU476
 1532 005e 024B     		ldr	r3, .L79
 1533 0060 9970     		strb	r1, [r3, #2]
 703:Src/main.c    **** 			break;
 1534              		.loc 1 703 4 is_stmt 1 view .LVU477
 703:Src/main.c    **** 			break;
 1535              		.loc 1 703 21 is_stmt 0 view .LVU478
 1536 0062 DA70     		strb	r2, [r3, #3]
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 45


 704:Src/main.c    **** 
 1537              		.loc 1 704 4 is_stmt 1 view .LVU479
 1538 0064 E9E7     		b	.L76
 1539              	.L80:
 1540 0066 00BF     		.align	2
 1541              	.L79:
 1542 0068 00000000 		.word	ChargerTxData
 1543 006c 00000000 		.word	.LANCHOR0
 1544 0070 00000000 		.word	TxMailbox
 1545 0074 00000000 		.word	ChargerTxHeader
 1546 0078 00000000 		.word	hcan
 1547              		.cfi_endproc
 1548              	.LFE77:
 1550              		.section	.text.CELLVAL_message,"ax",%progbits
 1551              		.align	1
 1552              		.global	CELLVAL_message
 1553              		.syntax unified
 1554              		.thumb
 1555              		.thumb_func
 1556              		.fpu softvfp
 1558              	CELLVAL_message:
 1559              	.LVL77:
 1560              	.LFB78:
 720:Src/main.c    **** 
 721:Src/main.c    **** void CELLVAL_message(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]) {
 1561              		.loc 1 721 74 view -0
 1562              		.cfi_startproc
 1563              		@ args = 100, pretend = 16, frame = 0
 1564              		@ frame_needed = 0, uses_anonymous_args = 0
 1565              		.loc 1 721 74 is_stmt 0 view .LVU481
 1566 0000 84B0     		sub	sp, sp, #16
 1567              	.LCFI40:
 1568              		.cfi_def_cfa_offset 16
 1569 0002 38B5     		push	{r3, r4, r5, lr}
 1570              	.LCFI41:
 1571              		.cfi_def_cfa_offset 32
 1572              		.cfi_offset 3, -32
 1573              		.cfi_offset 4, -28
 1574              		.cfi_offset 5, -24
 1575              		.cfi_offset 14, -20
 1576 0004 04AC     		add	r4, sp, #16
 1577 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1578 000a 1C9D     		ldr	r5, [sp, #112]
 722:Src/main.c    **** 	
 723:Src/main.c    ****   TxHeader.StdId = CELLVAL_ID;
 1579              		.loc 1 723 3 is_stmt 1 view .LVU482
 1580              		.loc 1 723 18 is_stmt 0 view .LVU483
 1581 000c 134B     		ldr	r3, .L85
 1582 000e 0722     		movs	r2, #7
 1583 0010 1A60     		str	r2, [r3]
 724:Src/main.c    ****   TxHeader.DLC = 6;
 1584              		.loc 1 724 3 is_stmt 1 view .LVU484
 1585              		.loc 1 724 16 is_stmt 0 view .LVU485
 1586 0012 0622     		movs	r2, #6
 1587 0014 1A61     		str	r2, [r3, #16]
 725:Src/main.c    **** 
 726:Src/main.c    ****   for (uint8_t cell = 0; cell < 96; cell++) {
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 46


 1588              		.loc 1 726 3 is_stmt 1 view .LVU486
 1589              	.LBB15:
 1590              		.loc 1 726 8 view .LVU487
 1591              	.LVL78:
 1592              		.loc 1 726 16 is_stmt 0 view .LVU488
 1593 0016 0024     		movs	r4, #0
 1594              		.loc 1 726 3 view .LVU489
 1595 0018 1AE0     		b	.L82
 1596              	.LVL79:
 1597              	.L83:
 727:Src/main.c    ****     CELLVAL_DATA[0] = bmsData[cell][0];
 1598              		.loc 1 727 5 is_stmt 1 discriminator 3 view .LVU490
 1599              		.loc 1 727 30 is_stmt 0 discriminator 3 view .LVU491
 1600 001a 04EB4403 		add	r3, r4, r4, lsl #1
 1601 001e 5A00     		lsls	r2, r3, #1
 1602 0020 AB18     		adds	r3, r5, r2
 1603              		.loc 1 727 36 discriminator 3 view .LVU492
 1604 0022 A95C     		ldrb	r1, [r5, r2]	@ zero_extendqisi2
 1605              		.loc 1 727 21 discriminator 3 view .LVU493
 1606 0024 0E4A     		ldr	r2, .L85+4
 1607 0026 1170     		strb	r1, [r2]
 728:Src/main.c    ****     CELLVAL_DATA[1] = bmsData[cell][1];
 1608              		.loc 1 728 5 is_stmt 1 discriminator 3 view .LVU494
 1609              		.loc 1 728 36 is_stmt 0 discriminator 3 view .LVU495
 1610 0028 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 1611              		.loc 1 728 21 discriminator 3 view .LVU496
 1612 002a 5170     		strb	r1, [r2, #1]
 729:Src/main.c    ****     CELLVAL_DATA[2] = bmsData[cell][2];
 1613              		.loc 1 729 5 is_stmt 1 discriminator 3 view .LVU497
 1614              		.loc 1 729 36 is_stmt 0 discriminator 3 view .LVU498
 1615 002c 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 1616              		.loc 1 729 21 discriminator 3 view .LVU499
 1617 002e 9170     		strb	r1, [r2, #2]
 730:Src/main.c    ****     CELLVAL_DATA[3] = bmsData[cell][3];
 1618              		.loc 1 730 5 is_stmt 1 discriminator 3 view .LVU500
 1619              		.loc 1 730 36 is_stmt 0 discriminator 3 view .LVU501
 1620 0030 D978     		ldrb	r1, [r3, #3]	@ zero_extendqisi2
 1621              		.loc 1 730 21 discriminator 3 view .LVU502
 1622 0032 D170     		strb	r1, [r2, #3]
 731:Src/main.c    ****     CELLVAL_DATA[4] = bmsData[cell][4];
 1623              		.loc 1 731 5 is_stmt 1 discriminator 3 view .LVU503
 1624              		.loc 1 731 36 is_stmt 0 discriminator 3 view .LVU504
 1625 0034 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1626              		.loc 1 731 21 discriminator 3 view .LVU505
 1627 0036 1171     		strb	r1, [r2, #4]
 732:Src/main.c    ****     CELLVAL_DATA[5] = bmsData[cell][5];
 1628              		.loc 1 732 5 is_stmt 1 discriminator 3 view .LVU506
 1629              		.loc 1 732 36 is_stmt 0 discriminator 3 view .LVU507
 1630 0038 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1631              		.loc 1 732 21 discriminator 3 view .LVU508
 1632 003a 5371     		strb	r3, [r2, #5]
 733:Src/main.c    **** 
 734:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, CELLVAL_DATA, &TxMailbox);
 1633              		.loc 1 734 5 is_stmt 1 discriminator 3 view .LVU509
 1634 003c 094B     		ldr	r3, .L85+8
 1635 003e 0749     		ldr	r1, .L85
 1636 0040 0948     		ldr	r0, .L85+12
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 47


 1637 0042 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1638              	.LVL80:
 735:Src/main.c    ****     HAL_Delay(10);
 1639              		.loc 1 735 5 discriminator 3 view .LVU510
 1640 0046 0A20     		movs	r0, #10
 1641 0048 FFF7FEFF 		bl	HAL_Delay
 1642              	.LVL81:
 726:Src/main.c    ****     CELLVAL_DATA[0] = bmsData[cell][0];
 1643              		.loc 1 726 41 is_stmt 0 discriminator 3 view .LVU511
 1644 004c 0134     		adds	r4, r4, #1
 1645              	.LVL82:
 726:Src/main.c    ****     CELLVAL_DATA[0] = bmsData[cell][0];
 1646              		.loc 1 726 41 discriminator 3 view .LVU512
 1647 004e E4B2     		uxtb	r4, r4
 1648              	.LVL83:
 1649              	.L82:
 726:Src/main.c    ****     CELLVAL_DATA[0] = bmsData[cell][0];
 1650              		.loc 1 726 3 discriminator 1 view .LVU513
 1651 0050 5F2C     		cmp	r4, #95
 1652 0052 E2D9     		bls	.L83
 1653              	.LBE15:
 736:Src/main.c    **** 
 737:Src/main.c    ****   }
 738:Src/main.c    **** }
 1654              		.loc 1 738 1 view .LVU514
 1655 0054 BDE83840 		pop	{r3, r4, r5, lr}
 1656              	.LCFI42:
 1657              		.cfi_restore 14
 1658              		.cfi_restore 5
 1659              		.cfi_restore 4
 1660              		.cfi_restore 3
 1661              		.cfi_def_cfa_offset 16
 1662              	.LVL84:
 1663              		.loc 1 738 1 view .LVU515
 1664 0058 04B0     		add	sp, sp, #16
 1665              	.LCFI43:
 1666              		.cfi_def_cfa_offset 0
 1667 005a 7047     		bx	lr
 1668              	.L86:
 1669              		.align	2
 1670              	.L85:
 1671 005c 00000000 		.word	TxHeader
 1672 0060 00000000 		.word	CELLVAL_DATA
 1673 0064 00000000 		.word	TxMailbox
 1674 0068 00000000 		.word	hcan
 1675              		.cfi_endproc
 1676              	.LFE78:
 1678              		.section	.text.BMSSTAT_message,"ax",%progbits
 1679              		.align	1
 1680              		.global	BMSSTAT_message
 1681              		.syntax unified
 1682              		.thumb
 1683              		.thumb_func
 1684              		.fpu softvfp
 1686              	BMSSTAT_message:
 1687              	.LVL85:
 1688              	.LFB79:
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 48


 739:Src/main.c    **** 
 740:Src/main.c    **** void BMSSTAT_message(BMSconfigStructTypedef cfg, uint8_t bmsStatus[6]) {
 1689              		.loc 1 740 72 is_stmt 1 view -0
 1690              		.cfi_startproc
 1691              		@ args = 100, pretend = 16, frame = 0
 1692              		@ frame_needed = 0, uses_anonymous_args = 0
 1693              		.loc 1 740 72 is_stmt 0 view .LVU517
 1694 0000 84B0     		sub	sp, sp, #16
 1695              	.LCFI44:
 1696              		.cfi_def_cfa_offset 16
 1697 0002 08B5     		push	{r3, lr}
 1698              	.LCFI45:
 1699              		.cfi_def_cfa_offset 24
 1700              		.cfi_offset 3, -24
 1701              		.cfi_offset 14, -20
 1702 0004 0DF1080C 		add	ip, sp, #8
 1703 0008 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 741:Src/main.c    **** 
 742:Src/main.c    ****   TxHeader.StdId = BMSSTAT_ID;
 1704              		.loc 1 742 3 is_stmt 1 view .LVU518
 1705              		.loc 1 742 18 is_stmt 0 view .LVU519
 1706 000c 0649     		ldr	r1, .L89
 1707 000e 0823     		movs	r3, #8
 1708 0010 0B60     		str	r3, [r1]
 743:Src/main.c    ****   TxHeader.DLC = 6;
 1709              		.loc 1 743 3 is_stmt 1 view .LVU520
 1710              		.loc 1 743 16 is_stmt 0 view .LVU521
 1711 0012 0623     		movs	r3, #6
 1712 0014 0B61     		str	r3, [r1, #16]
 744:Src/main.c    **** 
 745:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, bmsStatus, &TxMailbox);
 1713              		.loc 1 745 3 is_stmt 1 view .LVU522
 1714 0016 054B     		ldr	r3, .L89+4
 1715 0018 1A9A     		ldr	r2, [sp, #104]
 1716 001a 0548     		ldr	r0, .L89+8
 1717 001c FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1718              	.LVL86:
 746:Src/main.c    **** }
 1719              		.loc 1 746 1 is_stmt 0 view .LVU523
 1720 0020 BDE80840 		pop	{r3, lr}
 1721              	.LCFI46:
 1722              		.cfi_restore 14
 1723              		.cfi_restore 3
 1724              		.cfi_def_cfa_offset 16
 1725 0024 04B0     		add	sp, sp, #16
 1726              	.LCFI47:
 1727              		.cfi_def_cfa_offset 0
 1728 0026 7047     		bx	lr
 1729              	.L90:
 1730              		.align	2
 1731              	.L89:
 1732 0028 00000000 		.word	TxHeader
 1733 002c 00000000 		.word	TxMailbox
 1734 0030 00000000 		.word	hcan
 1735              		.cfi_endproc
 1736              	.LFE79:
 1738              		.section	.text.main,"ax",%progbits
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 49


 1739              		.align	1
 1740              		.global	main
 1741              		.syntax unified
 1742              		.thumb
 1743              		.thumb_func
 1744              		.fpu softvfp
 1746              	main:
 1747              	.LFB66:
 108:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1748              		.loc 1 108 1 is_stmt 1 view -0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 592
 1751              		@ frame_needed = 0, uses_anonymous_args = 0
 1752 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1753              	.LCFI48:
 1754              		.cfi_def_cfa_offset 36
 1755              		.cfi_offset 4, -36
 1756              		.cfi_offset 5, -32
 1757              		.cfi_offset 6, -28
 1758              		.cfi_offset 7, -24
 1759              		.cfi_offset 8, -20
 1760              		.cfi_offset 9, -16
 1761              		.cfi_offset 10, -12
 1762              		.cfi_offset 11, -8
 1763              		.cfi_offset 14, -4
 1764 0004 ADF52B7D 		sub	sp, sp, #684
 1765              	.LCFI49:
 1766              		.cfi_def_cfa_offset 720
 116:Src/main.c    **** 
 1767              		.loc 1 116 3 view .LVU525
 1768 0008 FFF7FEFF 		bl	HAL_Init
 1769              	.LVL87:
 123:Src/main.c    **** 
 1770              		.loc 1 123 3 view .LVU526
 1771 000c FFF7FEFF 		bl	SystemClock_Config
 1772              	.LVL88:
 130:Src/main.c    ****   MX_ADC1_Init();
 1773              		.loc 1 130 3 view .LVU527
 1774 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1775              	.LVL89:
 131:Src/main.c    ****   MX_CAN_Init();
 1776              		.loc 1 131 3 view .LVU528
 1777 0014 FFF7FEFF 		bl	MX_ADC1_Init
 1778              	.LVL90:
 132:Src/main.c    ****   //MX_SPI1_Init();
 1779              		.loc 1 132 3 view .LVU529
 1780 0018 FFF7FEFF 		bl	MX_CAN_Init
 1781              	.LVL91:
 134:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1782              		.loc 1 134 3 view .LVU530
 1783 001c FFF7FEFF 		bl	MX_TIM2_Init
 1784              	.LVL92:
 137:Src/main.c    ****   initPECTable();
 1785              		.loc 1 137 3 view .LVU531
 1786 0020 FFF7FEFF 		bl	SPI_Init
 1787              	.LVL93:
 138:Src/main.c    ****   loadConfig(&BMSconfig);
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 50


 1788              		.loc 1 138 3 view .LVU532
 1789 0024 FFF7FEFF 		bl	initPECTable
 1790              	.LVL94:
 139:Src/main.c    **** 
 1791              		.loc 1 139 3 view .LVU533
 1792 0028 4F48     		ldr	r0, .L94
 1793 002a FFF7FEFF 		bl	loadConfig
 1794              	.LVL95:
 141:Src/main.c    ****   uint8_t BMS_STATUS[6];
 1795              		.loc 1 141 3 view .LVU534
 142:Src/main.c    **** 
 1796              		.loc 1 142 3 view .LVU535
 144:Src/main.c    ****   bool CHARGE_EN = 0;
 1797              		.loc 1 144 3 view .LVU536
 145:Src/main.c    ****   bool BMS_FAULT = 0;
 1798              		.loc 1 145 3 view .LVU537
 146:Src/main.c    **** 
 1799              		.loc 1 146 3 view .LVU538
 1800              	.L92:
 152:Src/main.c    ****   {
 1801              		.loc 1 152 3 discriminator 1 view .LVU539
 159:Src/main.c    **** 
 1802              		.loc 1 159 5 discriminator 1 view .LVU540
 1803 002e 4E4C     		ldr	r4, .L94
 1804 0030 D4F80090 		ldr	r9, [r4]	@ unaligned
 1805 0034 D4F80480 		ldr	r8, [r4, #4]	@ unaligned
 1806 0038 A768     		ldr	r7, [r4, #8]	@ unaligned
 1807 003a E668     		ldr	r6, [r4, #12]	@ unaligned
 1808 003c 04F11005 		add	r5, r4, #16
 1809 0040 4FF04E0B 		mov	fp, #78
 1810 0044 5A46     		mov	r2, fp
 1811 0046 2946     		mov	r1, r5
 1812 0048 6846     		mov	r0, sp
 1813 004a FFF7FEFF 		bl	memcpy
 1814              	.LVL96:
 1815 004e 4846     		mov	r0, r9
 1816 0050 4146     		mov	r1, r8
 1817 0052 3A46     		mov	r2, r7
 1818 0054 3346     		mov	r3, r6
 1819 0056 FFF7FEFF 		bl	writeConfigAll
 1820              	.LVL97:
 162:Src/main.c    **** 
 1821              		.loc 1 162 5 discriminator 1 view .LVU541
 1822 005a 6420     		movs	r0, #100
 1823 005c FFF7FEFF 		bl	HAL_Delay
 1824              	.LVL98:
 165:Src/main.c    **** 
 1825              		.loc 1 165 5 discriminator 1 view .LVU542
 1826 0060 1AAE     		add	r6, sp, #104
 1827 0062 1496     		str	r6, [sp, #80]
 1828 0064 D4F800A0 		ldr	r10, [r4]	@ unaligned
 1829 0068 D4F80490 		ldr	r9, [r4, #4]	@ unaligned
 1830 006c D4F80880 		ldr	r8, [r4, #8]	@ unaligned
 1831 0070 E768     		ldr	r7, [r4, #12]	@ unaligned
 1832 0072 5A46     		mov	r2, fp
 1833 0074 2946     		mov	r1, r5
 1834 0076 6846     		mov	r0, sp
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 51


 1835 0078 FFF7FEFF 		bl	memcpy
 1836              	.LVL99:
 1837 007c 5046     		mov	r0, r10
 1838 007e 4946     		mov	r1, r9
 1839 0080 4246     		mov	r2, r8
 1840 0082 3B46     		mov	r3, r7
 1841 0084 FFF7FEFF 		bl	readAllCellVoltages
 1842              	.LVL100:
 168:Src/main.c    **** 
 1843              		.loc 1 168 5 discriminator 1 view .LVU543
 1844 0088 1496     		str	r6, [sp, #80]
 1845 008a D4F800A0 		ldr	r10, [r4]	@ unaligned
 1846 008e D4F80490 		ldr	r9, [r4, #4]	@ unaligned
 1847 0092 D4F80880 		ldr	r8, [r4, #8]	@ unaligned
 1848 0096 E768     		ldr	r7, [r4, #12]	@ unaligned
 1849 0098 5A46     		mov	r2, fp
 1850 009a 2946     		mov	r1, r5
 1851 009c 6846     		mov	r0, sp
 1852 009e FFF7FEFF 		bl	memcpy
 1853              	.LVL101:
 1854 00a2 5046     		mov	r0, r10
 1855 00a4 4946     		mov	r1, r9
 1856 00a6 4246     		mov	r2, r8
 1857 00a8 3B46     		mov	r3, r7
 1858 00aa FFF7FEFF 		bl	readAllCellTemps
 1859              	.LVL102:
 171:Src/main.c    ****     BMS_FAULT = FAULT_check(BMSconfig, BMS_DATA, BMS_STATUS);
 1860              		.loc 1 171 5 discriminator 1 view .LVU544
 1861 00ae 1496     		str	r6, [sp, #80]
 1862 00b0 D4F800A0 		ldr	r10, [r4]	@ unaligned
 1863 00b4 D4F80490 		ldr	r9, [r4, #4]	@ unaligned
 1864 00b8 D4F80880 		ldr	r8, [r4, #8]	@ unaligned
 1865 00bc E768     		ldr	r7, [r4, #12]	@ unaligned
 1866 00be 5A46     		mov	r2, fp
 1867 00c0 2946     		mov	r1, r5
 1868 00c2 6846     		mov	r0, sp
 1869 00c4 FFF7FEFF 		bl	memcpy
 1870              	.LVL103:
 1871 00c8 5046     		mov	r0, r10
 1872 00ca 4946     		mov	r1, r9
 1873 00cc 4246     		mov	r2, r8
 1874 00ce 3B46     		mov	r3, r7
 1875 00d0 FFF7FEFF 		bl	checkAllCellConnections
 1876              	.LVL104:
 172:Src/main.c    **** 
 1877              		.loc 1 172 5 discriminator 1 view .LVU545
 172:Src/main.c    **** 
 1878              		.loc 1 172 17 is_stmt 0 discriminator 1 view .LVU546
 1879 00d4 18AF     		add	r7, sp, #96
 1880 00d6 1597     		str	r7, [sp, #84]
 1881 00d8 1496     		str	r6, [sp, #80]
 1882 00da 2368     		ldr	r3, [r4]	@ unaligned
 1883 00dc 1793     		str	r3, [sp, #92]
 1884 00de D4F804A0 		ldr	r10, [r4, #4]	@ unaligned
 1885 00e2 D4F80890 		ldr	r9, [r4, #8]	@ unaligned
 1886 00e6 D4F80C80 		ldr	r8, [r4, #12]	@ unaligned
 1887 00ea 5A46     		mov	r2, fp
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 52


 1888 00ec 2946     		mov	r1, r5
 1889 00ee 6846     		mov	r0, sp
 1890 00f0 FFF7FEFF 		bl	memcpy
 1891              	.LVL105:
 1892 00f4 1798     		ldr	r0, [sp, #92]
 1893 00f6 5146     		mov	r1, r10
 1894 00f8 4A46     		mov	r2, r9
 1895 00fa 4346     		mov	r3, r8
 1896 00fc FFF7FEFF 		bl	FAULT_check
 1897              	.LVL106:
 175:Src/main.c    ****     CHARGE_EN = HAL_GPIO_ReadPin(GPIOB, CHARGE_EN_Pin);
 1898              		.loc 1 175 5 is_stmt 1 discriminator 1 view .LVU547
 175:Src/main.c    ****     CHARGE_EN = HAL_GPIO_ReadPin(GPIOB, CHARGE_EN_Pin);
 1899              		.loc 1 175 11 is_stmt 0 discriminator 1 view .LVU548
 1900 0100 DFF86880 		ldr	r8, .L94+4
 1901 0104 2021     		movs	r1, #32
 1902 0106 4046     		mov	r0, r8
 1903 0108 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1904              	.LVL107:
 176:Src/main.c    **** 
 1905              		.loc 1 176 5 is_stmt 1 discriminator 1 view .LVU549
 176:Src/main.c    **** 
 1906              		.loc 1 176 17 is_stmt 0 discriminator 1 view .LVU550
 1907 010c 0821     		movs	r1, #8
 1908 010e 4046     		mov	r0, r8
 1909 0110 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1910              	.LVL108:
 193:Src/main.c    **** 
 1911              		.loc 1 193 5 is_stmt 1 discriminator 1 view .LVU551
 1912 0114 4FF4FA70 		mov	r0, #500
 1913 0118 FFF7FEFF 		bl	HAL_Delay
 1914              	.LVL109:
 196:Src/main.c    ****     BMSSTAT_message(BMSconfig, BMS_STATUS);
 1915              		.loc 1 196 5 discriminator 1 view .LVU552
 1916 011c 1496     		str	r6, [sp, #80]
 1917 011e D4F800A0 		ldr	r10, [r4]	@ unaligned
 1918 0122 D4F80490 		ldr	r9, [r4, #4]	@ unaligned
 1919 0126 D4F80880 		ldr	r8, [r4, #8]	@ unaligned
 1920 012a E668     		ldr	r6, [r4, #12]	@ unaligned
 1921 012c 5A46     		mov	r2, fp
 1922 012e 2946     		mov	r1, r5
 1923 0130 6846     		mov	r0, sp
 1924 0132 FFF7FEFF 		bl	memcpy
 1925              	.LVL110:
 1926 0136 5046     		mov	r0, r10
 1927 0138 4946     		mov	r1, r9
 1928 013a 4246     		mov	r2, r8
 1929 013c 3346     		mov	r3, r6
 1930 013e FFF7FEFF 		bl	CELLVAL_message
 1931              	.LVL111:
 197:Src/main.c    **** 
 1932              		.loc 1 197 5 discriminator 1 view .LVU553
 1933 0142 1497     		str	r7, [sp, #80]
 1934 0144 D4F80080 		ldr	r8, [r4]	@ unaligned
 1935 0148 6768     		ldr	r7, [r4, #4]	@ unaligned
 1936 014a A668     		ldr	r6, [r4, #8]	@ unaligned
 1937 014c E468     		ldr	r4, [r4, #12]	@ unaligned
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 53


 1938 014e 5A46     		mov	r2, fp
 1939 0150 2946     		mov	r1, r5
 1940 0152 6846     		mov	r0, sp
 1941 0154 FFF7FEFF 		bl	memcpy
 1942              	.LVL112:
 1943 0158 4046     		mov	r0, r8
 1944 015a 3946     		mov	r1, r7
 1945 015c 3246     		mov	r2, r6
 1946 015e 2346     		mov	r3, r4
 1947 0160 FFF7FEFF 		bl	BMSSTAT_message
 1948              	.LVL113:
 1949 0164 63E7     		b	.L92
 1950              	.L95:
 1951 0166 00BF     		.align	2
 1952              	.L94:
 1953 0168 00000000 		.word	BMSconfig
 1954 016c 000C0140 		.word	1073810432
 1955              		.cfi_endproc
 1956              	.LFE66:
 1958              		.section	.text.BMSVINF_message,"ax",%progbits
 1959              		.align	1
 1960              		.global	BMSVINF_message
 1961              		.syntax unified
 1962              		.thumb
 1963              		.thumb_func
 1964              		.fpu softvfp
 1966              	BMSVINF_message:
 1967              	.LVL114:
 1968              	.LFB80:
 747:Src/main.c    **** 
 748:Src/main.c    **** void BMSVINF_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12]) {
 1969              		.loc 1 748 80 view -0
 1970              		.cfi_startproc
 1971              		@ args = 100, pretend = 16, frame = 8
 1972              		@ frame_needed = 0, uses_anonymous_args = 0
 1973              		.loc 1 748 80 is_stmt 0 view .LVU555
 1974 0000 84B0     		sub	sp, sp, #16
 1975              	.LCFI50:
 1976              		.cfi_def_cfa_offset 16
 1977 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1978              	.LCFI51:
 1979              		.cfi_def_cfa_offset 40
 1980              		.cfi_offset 4, -40
 1981              		.cfi_offset 5, -36
 1982              		.cfi_offset 6, -32
 1983              		.cfi_offset 7, -28
 1984              		.cfi_offset 8, -24
 1985              		.cfi_offset 14, -20
 1986 0006 82B0     		sub	sp, sp, #8
 1987              	.LCFI52:
 1988              		.cfi_def_cfa_offset 48
 1989 0008 08AC     		add	r4, sp, #32
 1990 000a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1991 000e 209F     		ldr	r7, [sp, #128]
 749:Src/main.c    **** 
 750:Src/main.c    ****   uint16_t minV;
 1992              		.loc 1 750 3 is_stmt 1 view .LVU556
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 54


 751:Src/main.c    ****   uint8_t minCell;
 1993              		.loc 1 751 3 view .LVU557
 752:Src/main.c    ****   uint16_t maxV;
 1994              		.loc 1 752 3 view .LVU558
 753:Src/main.c    ****   uint8_t maxCell;
 1995              		.loc 1 753 3 view .LVU559
 754:Src/main.c    ****   uint16_t averageV;
 1996              		.loc 1 754 3 view .LVU560
 755:Src/main.c    ****   uint32_t sum = 0;
 1997              		.loc 1 755 3 view .LVU561
 1998              	.LVL115:
 756:Src/main.c    **** 
 757:Src/main.c    ****   minV = cellVoltage[0][0];
 1999              		.loc 1 757 3 view .LVU562
 2000              		.loc 1 757 8 is_stmt 0 view .LVU563
 2001 0010 B7F800C0 		ldrh	ip, [r7]
 2002              	.LVL116:
 758:Src/main.c    ****   minCell = 1;
 2003              		.loc 1 758 3 is_stmt 1 view .LVU564
 759:Src/main.c    ****   maxV = cellVoltage[0][0];
 2004              		.loc 1 759 3 view .LVU565
 760:Src/main.c    ****   maxCell = 1;
 2005              		.loc 1 760 3 view .LVU566
 761:Src/main.c    **** 
 762:Src/main.c    ****   for (int i = 0; i < cfg.numOfICs; i++) {
 2006              		.loc 1 762 3 view .LVU567
 2007              	.LBB16:
 2008              		.loc 1 762 8 view .LVU568
 2009              		.loc 1 762 8 is_stmt 0 view .LVU569
 2010              	.LBE16:
 759:Src/main.c    ****   maxCell = 1;
 2011              		.loc 1 759 8 view .LVU570
 2012 0014 E646     		mov	lr, ip
 2013              	.LBB19:
 2014              		.loc 1 762 12 view .LVU571
 2015 0016 0025     		movs	r5, #0
 2016              	.LBE19:
 755:Src/main.c    **** 
 2017              		.loc 1 755 12 view .LVU572
 2018 0018 2E46     		mov	r6, r5
 760:Src/main.c    **** 
 2019              		.loc 1 760 11 view .LVU573
 2020 001a 0120     		movs	r0, #1
 758:Src/main.c    ****   maxV = cellVoltage[0][0];
 2021              		.loc 1 758 11 view .LVU574
 2022 001c 0446     		mov	r4, r0
 2023              	.LBB20:
 2024              		.loc 1 762 3 view .LVU575
 2025 001e 1EE0     		b	.L97
 2026              	.LVL117:
 2027              	.L99:
 2028              	.LBB17:
 763:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 764:Src/main.c    **** 
 765:Src/main.c    **** 			if (cellVoltage[i][j] < minV) {
 766:Src/main.c    ****         minV = cellVoltage[i][j];
 767:Src/main.c    ****         minCell = i * cfg.numOfCellsPerIC + j + 1;
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 55


 768:Src/main.c    ****       }
 769:Src/main.c    **** 
 770:Src/main.c    ****       if (cellVoltage[i][j] > maxV) {
 771:Src/main.c    ****         maxV = cellVoltage[i][j];
 772:Src/main.c    ****         maxCell = i * cfg.numOfCellsPerIC + j + 1;
 773:Src/main.c    ****       }
 774:Src/main.c    **** 
 775:Src/main.c    ****       sum = sum + cellVoltage[i][j];
 2029              		.loc 1 775 7 is_stmt 1 discriminator 2 view .LVU576
 2030              		.loc 1 775 11 is_stmt 0 discriminator 2 view .LVU577
 2031 0020 1644     		add	r6, r6, r2
 2032              	.LVL118:
 763:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 2033              		.loc 1 763 45 discriminator 2 view .LVU578
 2034 0022 0133     		adds	r3, r3, #1
 2035              	.LVL119:
 2036              	.L101:
 763:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 2037              		.loc 1 763 26 discriminator 1 view .LVU579
 2038 0024 9DF84210 		ldrb	r1, [sp, #66]	@ zero_extendqisi2
 763:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 2039              		.loc 1 763 3 discriminator 1 view .LVU580
 2040 0028 9942     		cmp	r1, r3
 2041 002a 17DD     		ble	.L104
 765:Src/main.c    ****         minV = cellVoltage[i][j];
 2042              		.loc 1 765 4 is_stmt 1 view .LVU581
 765:Src/main.c    ****         minV = cellVoltage[i][j];
 2043              		.loc 1 765 19 is_stmt 0 view .LVU582
 2044 002c 05EB4508 		add	r8, r5, r5, lsl #1
 2045 0030 4FEAC802 		lsl	r2, r8, #3
 2046 0034 3A44     		add	r2, r2, r7
 765:Src/main.c    ****         minV = cellVoltage[i][j];
 2047              		.loc 1 765 22 view .LVU583
 2048 0036 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 765:Src/main.c    ****         minV = cellVoltage[i][j];
 2049              		.loc 1 765 7 view .LVU584
 2050 003a 6245     		cmp	r2, ip
 2051 003c 05D2     		bcs	.L98
 766:Src/main.c    ****         minCell = i * cfg.numOfCellsPerIC + j + 1;
 2052              		.loc 1 766 9 is_stmt 1 view .LVU585
 2053              	.LVL120:
 767:Src/main.c    ****       }
 2054              		.loc 1 767 9 view .LVU586
 767:Src/main.c    ****       }
 2055              		.loc 1 767 43 is_stmt 0 view .LVU587
 2056 003e 05FB0134 		mla	r4, r5, r1, r3
 2057              	.LVL121:
 767:Src/main.c    ****       }
 2058              		.loc 1 767 43 view .LVU588
 2059 0042 E4B2     		uxtb	r4, r4
 767:Src/main.c    ****       }
 2060              		.loc 1 767 17 view .LVU589
 2061 0044 0134     		adds	r4, r4, #1
 2062 0046 E4B2     		uxtb	r4, r4
 2063              	.LVL122:
 766:Src/main.c    ****         minCell = i * cfg.numOfCellsPerIC + j + 1;
 2064              		.loc 1 766 14 view .LVU590
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 56


 2065 0048 9446     		mov	ip, r2
 2066              	.LVL123:
 2067              	.L98:
 770:Src/main.c    ****         maxV = cellVoltage[i][j];
 2068              		.loc 1 770 7 is_stmt 1 view .LVU591
 770:Src/main.c    ****         maxV = cellVoltage[i][j];
 2069              		.loc 1 770 10 is_stmt 0 view .LVU592
 2070 004a 7245     		cmp	r2, lr
 2071 004c E8D9     		bls	.L99
 771:Src/main.c    ****         maxCell = i * cfg.numOfCellsPerIC + j + 1;
 2072              		.loc 1 771 9 is_stmt 1 view .LVU593
 2073              	.LVL124:
 772:Src/main.c    ****       }
 2074              		.loc 1 772 9 view .LVU594
 772:Src/main.c    ****       }
 2075              		.loc 1 772 43 is_stmt 0 view .LVU595
 2076 004e 05FB0131 		mla	r1, r5, r1, r3
 2077 0052 C9B2     		uxtb	r1, r1
 772:Src/main.c    ****       }
 2078              		.loc 1 772 17 view .LVU596
 2079 0054 0131     		adds	r1, r1, #1
 2080 0056 C8B2     		uxtb	r0, r1
 2081              	.LVL125:
 771:Src/main.c    ****         maxCell = i * cfg.numOfCellsPerIC + j + 1;
 2082              		.loc 1 771 14 view .LVU597
 2083 0058 9646     		mov	lr, r2
 2084 005a E1E7     		b	.L99
 2085              	.LVL126:
 2086              	.L104:
 771:Src/main.c    ****         maxCell = i * cfg.numOfCellsPerIC + j + 1;
 2087              		.loc 1 771 14 view .LVU598
 2088              	.LBE17:
 762:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 2089              		.loc 1 762 38 discriminator 2 view .LVU599
 2090 005c 0135     		adds	r5, r5, #1
 2091              	.LVL127:
 2092              	.L97:
 762:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 2093              		.loc 1 762 26 discriminator 1 view .LVU600
 2094 005e 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 762:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 2095              		.loc 1 762 3 discriminator 1 view .LVU601
 2096 0062 AB42     		cmp	r3, r5
 2097 0064 01DD     		ble	.L105
 2098              	.LBB18:
 763:Src/main.c    **** 
 2099              		.loc 1 763 12 view .LVU602
 2100 0066 0023     		movs	r3, #0
 2101 0068 DCE7     		b	.L101
 2102              	.L105:
 2103              	.LBE18:
 2104              	.LBE20:
 776:Src/main.c    **** 
 777:Src/main.c    **** 		}
 778:Src/main.c    ****   }
 779:Src/main.c    **** 
 780:Src/main.c    ****   minimum = minV;
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 57


 2105              		.loc 1 780 3 is_stmt 1 view .LVU603
 2106              		.loc 1 780 11 is_stmt 0 view .LVU604
 2107 006a 174A     		ldr	r2, .L106
 2108 006c A2F800C0 		strh	ip, [r2]	@ movhi
 781:Src/main.c    ****   averageV = (uint16_t) (sum / (cfg.numOfICs * cfg.numOfCellsPerIC));
 2109              		.loc 1 781 3 is_stmt 1 view .LVU605
 2110              		.loc 1 781 51 is_stmt 0 view .LVU606
 2111 0070 9DF84220 		ldrb	r2, [sp, #66]	@ zero_extendqisi2
 2112              		.loc 1 781 46 view .LVU607
 2113 0074 02FB03F3 		mul	r3, r2, r3
 2114              		.loc 1 781 30 view .LVU608
 2115 0078 B6FBF3F6 		udiv	r6, r6, r3
 2116              	.LVL128:
 782:Src/main.c    **** 
 783:Src/main.c    ****   TxHeader.StdId = BMSVINF_ID;
 2117              		.loc 1 783 3 is_stmt 1 view .LVU609
 2118              		.loc 1 783 18 is_stmt 0 view .LVU610
 2119 007c 1349     		ldr	r1, .L106+4
 2120 007e 0923     		movs	r3, #9
 2121 0080 0B60     		str	r3, [r1]
 784:Src/main.c    ****   TxHeader.DLC = 8;
 2122              		.loc 1 784 3 is_stmt 1 view .LVU611
 2123              		.loc 1 784 16 is_stmt 0 view .LVU612
 2124 0082 0823     		movs	r3, #8
 2125 0084 0B61     		str	r3, [r1, #16]
 785:Src/main.c    ****   uint8_t BMSVINF_DATA[8];
 2126              		.loc 1 785 3 is_stmt 1 view .LVU613
 786:Src/main.c    **** 
 787:Src/main.c    ****   BMSVINF_DATA[0] = (uint8_t) ((maxV >> 8) & 0xFF);
 2127              		.loc 1 787 3 view .LVU614
 2128              		.loc 1 787 21 is_stmt 0 view .LVU615
 2129 0086 2EFA03F3 		lsr	r3, lr, r3
 2130              		.loc 1 787 19 view .LVU616
 2131 008a 8DF80030 		strb	r3, [sp]
 788:Src/main.c    ****   BMSVINF_DATA[1] = (uint8_t) (maxV & 0xFF);
 2132              		.loc 1 788 3 is_stmt 1 view .LVU617
 2133              		.loc 1 788 19 is_stmt 0 view .LVU618
 2134 008e 8DF801E0 		strb	lr, [sp, #1]
 789:Src/main.c    ****   BMSVINF_DATA[2] = maxCell;
 2135              		.loc 1 789 3 is_stmt 1 view .LVU619
 2136              		.loc 1 789 19 is_stmt 0 view .LVU620
 2137 0092 8DF80200 		strb	r0, [sp, #2]
 790:Src/main.c    ****   BMSVINF_DATA[3] = (uint8_t) ((minV >> 8) & 0xFF);
 2138              		.loc 1 790 3 is_stmt 1 view .LVU621
 2139              		.loc 1 790 21 is_stmt 0 view .LVU622
 2140 0096 4FEA1C23 		lsr	r3, ip, #8
 2141              		.loc 1 790 19 view .LVU623
 2142 009a 8DF80330 		strb	r3, [sp, #3]
 791:Src/main.c    ****   BMSVINF_DATA[4] = (uint8_t) (minV & 0xFF);
 2143              		.loc 1 791 3 is_stmt 1 view .LVU624
 2144              		.loc 1 791 19 is_stmt 0 view .LVU625
 2145 009e 8DF804C0 		strb	ip, [sp, #4]
 792:Src/main.c    ****   BMSVINF_DATA[5] = minCell;
 2146              		.loc 1 792 3 is_stmt 1 view .LVU626
 2147              		.loc 1 792 19 is_stmt 0 view .LVU627
 2148 00a2 8DF80540 		strb	r4, [sp, #5]
 793:Src/main.c    ****   BMSVINF_DATA[6] = (uint8_t) ((averageV >> 8) & 0xFF);
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 58


 2149              		.loc 1 793 3 is_stmt 1 view .LVU628
 2150              		.loc 1 793 21 is_stmt 0 view .LVU629
 2151 00a6 C6F30723 		ubfx	r3, r6, #8, #8
 2152              		.loc 1 793 19 view .LVU630
 2153 00aa 8DF80630 		strb	r3, [sp, #6]
 794:Src/main.c    ****   BMSVINF_DATA[7] = (uint8_t) (averageV & 0xFF);
 2154              		.loc 1 794 3 is_stmt 1 view .LVU631
 2155              		.loc 1 794 19 is_stmt 0 view .LVU632
 2156 00ae 8DF80760 		strb	r6, [sp, #7]
 795:Src/main.c    **** 
 796:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, BMSVINF_DATA, &TxMailbox);
 2157              		.loc 1 796 3 is_stmt 1 view .LVU633
 2158 00b2 074B     		ldr	r3, .L106+8
 2159 00b4 6A46     		mov	r2, sp
 2160 00b6 0748     		ldr	r0, .L106+12
 2161              	.LVL129:
 2162              		.loc 1 796 3 is_stmt 0 view .LVU634
 2163 00b8 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 2164              	.LVL130:
 797:Src/main.c    **** 
 798:Src/main.c    **** }
 2165              		.loc 1 798 1 view .LVU635
 2166 00bc 02B0     		add	sp, sp, #8
 2167              	.LCFI53:
 2168              		.cfi_def_cfa_offset 40
 2169              		@ sp needed
 2170 00be BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2171              	.LCFI54:
 2172              		.cfi_restore 14
 2173              		.cfi_restore 8
 2174              		.cfi_restore 7
 2175              		.cfi_restore 6
 2176              		.cfi_restore 5
 2177              		.cfi_restore 4
 2178              		.cfi_def_cfa_offset 16
 2179              	.LVL131:
 2180              		.loc 1 798 1 view .LVU636
 2181 00c2 04B0     		add	sp, sp, #16
 2182              	.LCFI55:
 2183              		.cfi_def_cfa_offset 0
 2184 00c4 7047     		bx	lr
 2185              	.L107:
 2186 00c6 00BF     		.align	2
 2187              	.L106:
 2188 00c8 00000000 		.word	minimum
 2189 00cc 00000000 		.word	TxHeader
 2190 00d0 00000000 		.word	TxMailbox
 2191 00d4 00000000 		.word	hcan
 2192              		.cfi_endproc
 2193              	.LFE80:
 2195              		.section	.text.BMSTINF_message,"ax",%progbits
 2196              		.align	1
 2197              		.global	BMSTINF_message
 2198              		.syntax unified
 2199              		.thumb
 2200              		.thumb_func
 2201              		.fpu softvfp
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 59


 2203              	BMSTINF_message:
 2204              	.LVL132:
 2205              	.LFB81:
 799:Src/main.c    **** 
 800:Src/main.c    **** void BMSTINF_message(BMSconfigStructTypedef cfg, uint16_t cellTemp[12][4]) {
 2206              		.loc 1 800 76 is_stmt 1 view -0
 2207              		.cfi_startproc
 2208              		@ args = 100, pretend = 16, frame = 8
 2209              		@ frame_needed = 0, uses_anonymous_args = 0
 2210              		.loc 1 800 76 is_stmt 0 view .LVU638
 2211 0000 84B0     		sub	sp, sp, #16
 2212              	.LCFI56:
 2213              		.cfi_def_cfa_offset 16
 2214 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2215              	.LCFI57:
 2216              		.cfi_def_cfa_offset 40
 2217              		.cfi_offset 4, -40
 2218              		.cfi_offset 5, -36
 2219              		.cfi_offset 6, -32
 2220              		.cfi_offset 7, -28
 2221              		.cfi_offset 8, -24
 2222              		.cfi_offset 14, -20
 2223 0006 82B0     		sub	sp, sp, #8
 2224              	.LCFI58:
 2225              		.cfi_def_cfa_offset 48
 2226 0008 08AC     		add	r4, sp, #32
 2227 000a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 2228 000e 209F     		ldr	r7, [sp, #128]
 801:Src/main.c    **** 
 802:Src/main.c    ****   uint16_t minT;
 2229              		.loc 1 802 3 is_stmt 1 view .LVU639
 803:Src/main.c    ****   uint8_t minCell;
 2230              		.loc 1 803 3 view .LVU640
 804:Src/main.c    ****   uint16_t maxT;
 2231              		.loc 1 804 3 view .LVU641
 805:Src/main.c    ****   uint8_t maxCell;
 2232              		.loc 1 805 3 view .LVU642
 806:Src/main.c    ****   uint16_t averageT;
 2233              		.loc 1 806 3 view .LVU643
 807:Src/main.c    ****   uint32_t sum = 0;
 2234              		.loc 1 807 3 view .LVU644
 2235              	.LVL133:
 808:Src/main.c    **** 
 809:Src/main.c    ****   minT = cellTemp[0][0];
 2236              		.loc 1 809 3 view .LVU645
 2237              		.loc 1 809 8 is_stmt 0 view .LVU646
 2238 0010 B7F800E0 		ldrh	lr, [r7]
 2239              	.LVL134:
 810:Src/main.c    ****   minCell = 1;
 2240              		.loc 1 810 3 is_stmt 1 view .LVU647
 811:Src/main.c    ****   maxT = cellTemp[0][0];
 2241              		.loc 1 811 3 view .LVU648
 812:Src/main.c    ****   maxCell = 1;
 2242              		.loc 1 812 3 view .LVU649
 813:Src/main.c    **** 
 814:Src/main.c    ****   for (int i = 0; i < cfg.numOfICs; i++) {
 2243              		.loc 1 814 3 view .LVU650
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 60


 2244              	.LBB21:
 2245              		.loc 1 814 8 view .LVU651
 2246              		.loc 1 814 8 is_stmt 0 view .LVU652
 2247              	.LBE21:
 811:Src/main.c    ****   maxCell = 1;
 2248              		.loc 1 811 8 view .LVU653
 2249 0014 F046     		mov	r8, lr
 2250              	.LBB24:
 2251              		.loc 1 814 12 view .LVU654
 2252 0016 0025     		movs	r5, #0
 2253              	.LBE24:
 807:Src/main.c    **** 
 2254              		.loc 1 807 12 view .LVU655
 2255 0018 2E46     		mov	r6, r5
 812:Src/main.c    **** 
 2256              		.loc 1 812 11 view .LVU656
 2257 001a 0120     		movs	r0, #1
 810:Src/main.c    ****   maxT = cellTemp[0][0];
 2258              		.loc 1 810 11 view .LVU657
 2259 001c 0446     		mov	r4, r0
 2260              	.LBB25:
 2261              		.loc 1 814 3 view .LVU658
 2262 001e 1DE0     		b	.L109
 2263              	.LVL135:
 2264              	.L111:
 2265              	.LBB22:
 815:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 816:Src/main.c    **** 
 817:Src/main.c    **** 			if (cellTemp[i][j] < minT) {
 818:Src/main.c    ****         minT = cellTemp[i][j];
 819:Src/main.c    ****         minCell = i * cfg.numOfTempPerIC + j*2 + 1;
 820:Src/main.c    ****       }
 821:Src/main.c    **** 
 822:Src/main.c    ****       if (cellTemp[i][j] > maxT) {
 823:Src/main.c    ****         maxT = cellTemp[i][j];
 824:Src/main.c    ****         maxCell = i * cfg.numOfTempPerIC + j*2 + 1;
 825:Src/main.c    ****       }
 826:Src/main.c    **** 
 827:Src/main.c    ****       sum = sum + cellTemp[i][j];
 2266              		.loc 1 827 7 is_stmt 1 discriminator 2 view .LVU659
 2267              		.loc 1 827 11 is_stmt 0 discriminator 2 view .LVU660
 2268 0020 1644     		add	r6, r6, r2
 2269              	.LVL136:
 815:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 2270              		.loc 1 815 44 discriminator 2 view .LVU661
 2271 0022 0133     		adds	r3, r3, #1
 2272              	.LVL137:
 2273              	.L113:
 815:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 2274              		.loc 1 815 26 discriminator 1 view .LVU662
 2275 0024 9DF843C0 		ldrb	ip, [sp, #67]	@ zero_extendqisi2
 815:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 2276              		.loc 1 815 3 discriminator 1 view .LVU663
 2277 0028 9C45     		cmp	ip, r3
 2278 002a 16DD     		ble	.L116
 817:Src/main.c    ****         minT = cellTemp[i][j];
 2279              		.loc 1 817 4 is_stmt 1 view .LVU664
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 61


 817:Src/main.c    ****         minT = cellTemp[i][j];
 2280              		.loc 1 817 16 is_stmt 0 view .LVU665
 2281 002c 07EBC502 		add	r2, r7, r5, lsl #3
 817:Src/main.c    ****         minT = cellTemp[i][j];
 2282              		.loc 1 817 19 view .LVU666
 2283 0030 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 817:Src/main.c    ****         minT = cellTemp[i][j];
 2284              		.loc 1 817 7 view .LVU667
 2285 0034 7245     		cmp	r2, lr
 2286 0036 06D2     		bcs	.L110
 818:Src/main.c    ****         minCell = i * cfg.numOfTempPerIC + j*2 + 1;
 2287              		.loc 1 818 9 is_stmt 1 view .LVU668
 2288              	.LVL138:
 819:Src/main.c    ****       }
 2289              		.loc 1 819 9 view .LVU669
 819:Src/main.c    ****       }
 2290              		.loc 1 819 42 is_stmt 0 view .LVU670
 2291 0038 5C00     		lsls	r4, r3, #1
 2292              	.LVL139:
 819:Src/main.c    ****       }
 2293              		.loc 1 819 42 view .LVU671
 2294 003a 05FB0C44 		mla	r4, r5, ip, r4
 2295 003e E4B2     		uxtb	r4, r4
 819:Src/main.c    ****       }
 2296              		.loc 1 819 17 view .LVU672
 2297 0040 0134     		adds	r4, r4, #1
 2298 0042 E4B2     		uxtb	r4, r4
 2299              	.LVL140:
 818:Src/main.c    ****         minCell = i * cfg.numOfTempPerIC + j*2 + 1;
 2300              		.loc 1 818 14 view .LVU673
 2301 0044 9646     		mov	lr, r2
 2302              	.LVL141:
 2303              	.L110:
 822:Src/main.c    ****         maxT = cellTemp[i][j];
 2304              		.loc 1 822 7 is_stmt 1 view .LVU674
 822:Src/main.c    ****         maxT = cellTemp[i][j];
 2305              		.loc 1 822 10 is_stmt 0 view .LVU675
 2306 0046 4245     		cmp	r2, r8
 2307 0048 EAD9     		bls	.L111
 823:Src/main.c    ****         maxCell = i * cfg.numOfTempPerIC + j*2 + 1;
 2308              		.loc 1 823 9 is_stmt 1 view .LVU676
 2309              	.LVL142:
 824:Src/main.c    ****       }
 2310              		.loc 1 824 9 view .LVU677
 824:Src/main.c    ****       }
 2311              		.loc 1 824 42 is_stmt 0 view .LVU678
 2312 004a 5900     		lsls	r1, r3, #1
 2313 004c 05FB0C11 		mla	r1, r5, ip, r1
 2314 0050 C9B2     		uxtb	r1, r1
 824:Src/main.c    ****       }
 2315              		.loc 1 824 17 view .LVU679
 2316 0052 0131     		adds	r1, r1, #1
 2317 0054 C8B2     		uxtb	r0, r1
 2318              	.LVL143:
 823:Src/main.c    ****         maxCell = i * cfg.numOfTempPerIC + j*2 + 1;
 2319              		.loc 1 823 14 view .LVU680
 2320 0056 9046     		mov	r8, r2
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 62


 2321 0058 E2E7     		b	.L111
 2322              	.LVL144:
 2323              	.L116:
 823:Src/main.c    ****         maxCell = i * cfg.numOfTempPerIC + j*2 + 1;
 2324              		.loc 1 823 14 view .LVU681
 2325              	.LBE22:
 814:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 2326              		.loc 1 814 38 discriminator 2 view .LVU682
 2327 005a 0135     		adds	r5, r5, #1
 2328              	.LVL145:
 2329              	.L109:
 814:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 2330              		.loc 1 814 26 discriminator 1 view .LVU683
 2331 005c 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 814:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 2332              		.loc 1 814 3 discriminator 1 view .LVU684
 2333 0060 AB42     		cmp	r3, r5
 2334 0062 01DD     		ble	.L117
 2335              	.LBB23:
 815:Src/main.c    **** 
 2336              		.loc 1 815 12 view .LVU685
 2337 0064 0023     		movs	r3, #0
 2338 0066 DDE7     		b	.L113
 2339              	.L117:
 2340              	.LBE23:
 2341              	.LBE25:
 828:Src/main.c    **** 
 829:Src/main.c    **** 		}
 830:Src/main.c    ****   }
 831:Src/main.c    **** 
 832:Src/main.c    ****   averageT = (uint16_t) (sum / (cfg.numOfICs * cfg.numOfTempPerIC));
 2342              		.loc 1 832 3 is_stmt 1 view .LVU686
 2343              		.loc 1 832 51 is_stmt 0 view .LVU687
 2344 0068 9DF84320 		ldrb	r2, [sp, #67]	@ zero_extendqisi2
 2345              		.loc 1 832 46 view .LVU688
 2346 006c 02FB03F3 		mul	r3, r2, r3
 2347              		.loc 1 832 30 view .LVU689
 2348 0070 B6FBF3F6 		udiv	r6, r6, r3
 2349              	.LVL146:
 833:Src/main.c    **** 
 834:Src/main.c    ****   TxHeader.StdId = BMSTINF_ID;
 2350              		.loc 1 834 3 is_stmt 1 view .LVU690
 2351              		.loc 1 834 18 is_stmt 0 view .LVU691
 2352 0074 1249     		ldr	r1, .L118
 2353 0076 0A23     		movs	r3, #10
 2354 0078 0B60     		str	r3, [r1]
 835:Src/main.c    ****   TxHeader.DLC = 8;
 2355              		.loc 1 835 3 is_stmt 1 view .LVU692
 2356              		.loc 1 835 16 is_stmt 0 view .LVU693
 2357 007a 0823     		movs	r3, #8
 2358 007c 0B61     		str	r3, [r1, #16]
 836:Src/main.c    ****   uint8_t BMSTINF_DATA[8];
 2359              		.loc 1 836 3 is_stmt 1 view .LVU694
 837:Src/main.c    **** 
 838:Src/main.c    ****   BMSTINF_DATA[0] = (uint8_t) ((maxT >> 8) & 0xFF);
 2360              		.loc 1 838 3 view .LVU695
 2361              		.loc 1 838 21 is_stmt 0 view .LVU696
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 63


 2362 007e 28FA03F3 		lsr	r3, r8, r3
 2363              		.loc 1 838 19 view .LVU697
 2364 0082 8DF80030 		strb	r3, [sp]
 839:Src/main.c    ****   BMSTINF_DATA[1] = (uint8_t) (maxT & 0xFF);
 2365              		.loc 1 839 3 is_stmt 1 view .LVU698
 2366              		.loc 1 839 19 is_stmt 0 view .LVU699
 2367 0086 8DF80180 		strb	r8, [sp, #1]
 840:Src/main.c    ****   BMSTINF_DATA[2] = maxCell;
 2368              		.loc 1 840 3 is_stmt 1 view .LVU700
 2369              		.loc 1 840 19 is_stmt 0 view .LVU701
 2370 008a 8DF80200 		strb	r0, [sp, #2]
 841:Src/main.c    ****   BMSTINF_DATA[3] = (uint8_t) ((minT >> 8) & 0xFF);
 2371              		.loc 1 841 3 is_stmt 1 view .LVU702
 2372              		.loc 1 841 21 is_stmt 0 view .LVU703
 2373 008e 4FEA1E23 		lsr	r3, lr, #8
 2374              		.loc 1 841 19 view .LVU704
 2375 0092 8DF80330 		strb	r3, [sp, #3]
 842:Src/main.c    ****   BMSTINF_DATA[4] = (uint8_t) (minT & 0xFF);
 2376              		.loc 1 842 3 is_stmt 1 view .LVU705
 2377              		.loc 1 842 19 is_stmt 0 view .LVU706
 2378 0096 8DF804E0 		strb	lr, [sp, #4]
 843:Src/main.c    ****   BMSTINF_DATA[5] = minCell;
 2379              		.loc 1 843 3 is_stmt 1 view .LVU707
 2380              		.loc 1 843 19 is_stmt 0 view .LVU708
 2381 009a 8DF80540 		strb	r4, [sp, #5]
 844:Src/main.c    ****   BMSTINF_DATA[6] = (uint8_t) ((averageT >> 8) & 0xFF);
 2382              		.loc 1 844 3 is_stmt 1 view .LVU709
 2383              		.loc 1 844 21 is_stmt 0 view .LVU710
 2384 009e C6F30723 		ubfx	r3, r6, #8, #8
 2385              		.loc 1 844 19 view .LVU711
 2386 00a2 8DF80630 		strb	r3, [sp, #6]
 845:Src/main.c    ****   BMSTINF_DATA[7] = (uint8_t) (averageT & 0xFF);
 2387              		.loc 1 845 3 is_stmt 1 view .LVU712
 2388              		.loc 1 845 19 is_stmt 0 view .LVU713
 2389 00a6 8DF80760 		strb	r6, [sp, #7]
 846:Src/main.c    **** 
 847:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, BMSTINF_DATA, &TxMailbox);  
 2390              		.loc 1 847 3 is_stmt 1 view .LVU714
 2391 00aa 064B     		ldr	r3, .L118+4
 2392 00ac 6A46     		mov	r2, sp
 2393 00ae 0648     		ldr	r0, .L118+8
 2394              	.LVL147:
 2395              		.loc 1 847 3 is_stmt 0 view .LVU715
 2396 00b0 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 2397              	.LVL148:
 848:Src/main.c    **** 
 849:Src/main.c    **** };
 2398              		.loc 1 849 1 view .LVU716
 2399 00b4 02B0     		add	sp, sp, #8
 2400              	.LCFI59:
 2401              		.cfi_def_cfa_offset 40
 2402              		@ sp needed
 2403 00b6 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2404              	.LCFI60:
 2405              		.cfi_restore 14
 2406              		.cfi_restore 8
 2407              		.cfi_restore 7
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 64


 2408              		.cfi_restore 6
 2409              		.cfi_restore 5
 2410              		.cfi_restore 4
 2411              		.cfi_def_cfa_offset 16
 2412              	.LVL149:
 2413              		.loc 1 849 1 view .LVU717
 2414 00ba 04B0     		add	sp, sp, #16
 2415              	.LCFI61:
 2416              		.cfi_def_cfa_offset 0
 2417 00bc 7047     		bx	lr
 2418              	.L119:
 2419 00be 00BF     		.align	2
 2420              	.L118:
 2421 00c0 00000000 		.word	TxHeader
 2422 00c4 00000000 		.word	TxMailbox
 2423 00c8 00000000 		.word	hcan
 2424              		.cfi_endproc
 2425              	.LFE81:
 2427              		.section	.text.Error_Handler,"ax",%progbits
 2428              		.align	1
 2429              		.global	Error_Handler
 2430              		.syntax unified
 2431              		.thumb
 2432              		.thumb_func
 2433              		.fpu softvfp
 2435              	Error_Handler:
 2436              	.LFB82:
 850:Src/main.c    **** 
 851:Src/main.c    **** /* USER CODE END 4 */
 852:Src/main.c    **** 
 853:Src/main.c    **** /**
 854:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 855:Src/main.c    ****   * @retval None
 856:Src/main.c    ****   */
 857:Src/main.c    **** void Error_Handler(void)
 858:Src/main.c    **** {
 2437              		.loc 1 858 1 is_stmt 1 view -0
 2438              		.cfi_startproc
 2439              		@ args = 0, pretend = 0, frame = 0
 2440              		@ frame_needed = 0, uses_anonymous_args = 0
 2441              		@ link register save eliminated.
 859:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 860:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 861:Src/main.c    **** 
 862:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 863:Src/main.c    **** }
 2442              		.loc 1 863 1 view .LVU719
 2443 0000 7047     		bx	lr
 2444              		.cfi_endproc
 2445              	.LFE82:
 2447              		.global	chargeRate
 2448              		.comm	minimum,2,2
 2449              		.comm	BMSSTAT_DATA,6,4
 2450              		.comm	CELLVAL_DATA,6,4
 2451              		.comm	ChargerTxData,8,4
 2452              		.comm	ChargerTxHeader,24,4
 2453              		.comm	TxMailbox,4,4
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 65


 2454              		.comm	RxData,8,4
 2455              		.comm	TxData,8,4
 2456              		.comm	RxHeader,28,4
 2457              		.comm	TxHeader,24,4
 2458              		.comm	BMSconfig,94,4
 2459              		.comm	CommandCode,2,2
 2460              		.comm	htim2,64,4
 2461              		.comm	hspi1,88,4
 2462              		.comm	hcan,40,4
 2463              		.comm	hadc1,48,4
 2464              		.section	.data.chargeRate,"aw"
 2465              		.set	.LANCHOR0,. + 0
 2468              	chargeRate:
 2469 0000 02       		.byte	2
 2470              		.text
 2471              	.Letext0:
 2472              		.file 2 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 2473              		.file 3 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 2474              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 2475              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2476              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2477              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2478              		.file 8 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 2479              		.file 9 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 2480              		.file 10 "c:\\arm-gcc\\8-2018-q4-major\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 2481              		.file 11 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 2482              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2483              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2484              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2485              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2486              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2487              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 2488              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2489              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 2490              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2491              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 2492              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2493              		.file 23 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\stdlib.h"
 2494              		.file 24 "Inc/BMSconfig.h"
 2495              		.file 25 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\math.h"
 2496              		.file 26 "Inc/LTC6811.h"
 2497              		.file 27 "<built-in>"
 2498              		.file 28 "Inc/SPI.h"
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 66


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\cygwin64\tmp\ccsQoBOR.s:16     .text.MX_GPIO_Init:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\cygwin64\tmp\ccsQoBOR.s:208    .text.MX_GPIO_Init:000000e0 $d
C:\cygwin64\tmp\ccsQoBOR.s:216    .text.MX_ADC1_Init:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:222    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\cygwin64\tmp\ccsQoBOR.s:299    .text.MX_ADC1_Init:00000040 $d
                            *COM*:00000030 hadc1
C:\cygwin64\tmp\ccsQoBOR.s:305    .text.MX_CAN_Init:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:311    .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\cygwin64\tmp\ccsQoBOR.s:465    .text.MX_CAN_Init:00000088 $d
                            *COM*:00000028 hcan
                            *COM*:00000018 TxHeader
                            *COM*:00000018 ChargerTxHeader
C:\cygwin64\tmp\ccsQoBOR.s:474    .text.MX_TIM2_Init:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:480    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\cygwin64\tmp\ccsQoBOR.s:568    .text.MX_TIM2_Init:00000058 $d
                            *COM*:00000040 htim2
C:\cygwin64\tmp\ccsQoBOR.s:573    .text.SystemClock_Config:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:580    .text.SystemClock_Config:00000000 SystemClock_Config
C:\cygwin64\tmp\ccsQoBOR.s:677    .text.FAULT_check:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:684    .text.FAULT_check:00000000 FAULT_check
C:\cygwin64\tmp\ccsQoBOR.s:941    .text.FAULT_check:000000d8 $d
C:\cygwin64\tmp\ccsQoBOR.s:949    .text.balancingThreshold:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:956    .text.balancingThreshold:00000000 balancingThreshold
C:\cygwin64\tmp\ccsQoBOR.s:1053   .text.balancingThreshold:00000058 $d
                            *COM*:00000002 minimum
C:\cygwin64\tmp\ccsQoBOR.s:1058   .text.setDischarge:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:1065   .text.setDischarge:00000000 setDischarge
C:\cygwin64\tmp\ccsQoBOR.s:1277   .text.setDischarge:000000e4 $d
C:\cygwin64\tmp\ccsQoBOR.s:1283   .text.checkDischarge:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:1290   .text.checkDischarge:00000000 checkDischarge
C:\cygwin64\tmp\ccsQoBOR.s:1422   .text.checkDischarge:00000068 $d
C:\cygwin64\tmp\ccsQoBOR.s:1428   .text.setChargerTxData:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:1435   .text.setChargerTxData:00000000 setChargerTxData
C:\cygwin64\tmp\ccsQoBOR.s:1542   .text.setChargerTxData:00000068 $d
                            *COM*:00000008 ChargerTxData
                            *COM*:00000004 TxMailbox
C:\cygwin64\tmp\ccsQoBOR.s:1551   .text.CELLVAL_message:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:1558   .text.CELLVAL_message:00000000 CELLVAL_message
C:\cygwin64\tmp\ccsQoBOR.s:1671   .text.CELLVAL_message:0000005c $d
                            *COM*:00000006 CELLVAL_DATA
C:\cygwin64\tmp\ccsQoBOR.s:1679   .text.BMSSTAT_message:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:1686   .text.BMSSTAT_message:00000000 BMSSTAT_message
C:\cygwin64\tmp\ccsQoBOR.s:1732   .text.BMSSTAT_message:00000028 $d
C:\cygwin64\tmp\ccsQoBOR.s:1739   .text.main:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:1746   .text.main:00000000 main
C:\cygwin64\tmp\ccsQoBOR.s:1953   .text.main:00000168 $d
                            *COM*:0000005e BMSconfig
C:\cygwin64\tmp\ccsQoBOR.s:1959   .text.BMSVINF_message:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:1966   .text.BMSVINF_message:00000000 BMSVINF_message
C:\cygwin64\tmp\ccsQoBOR.s:2188   .text.BMSVINF_message:000000c8 $d
C:\cygwin64\tmp\ccsQoBOR.s:2196   .text.BMSTINF_message:00000000 $t
C:\cygwin64\tmp\ccsQoBOR.s:2203   .text.BMSTINF_message:00000000 BMSTINF_message
C:\cygwin64\tmp\ccsQoBOR.s:2421   .text.BMSTINF_message:000000c0 $d
C:\cygwin64\tmp\ccsQoBOR.s:2428   .text.Error_Handler:00000000 $t
ARM GAS  C:\cygwin64\tmp\ccsQoBOR.s 			page 67


C:\cygwin64\tmp\ccsQoBOR.s:2435   .text.Error_Handler:00000000 Error_Handler
C:\cygwin64\tmp\ccsQoBOR.s:2468   .data.chargeRate:00000000 chargeRate
                            *COM*:00000006 BMSSTAT_DATA
                            *COM*:00000008 RxData
                            *COM*:00000008 TxData
                            *COM*:0000001c RxHeader
                            *COM*:00000002 CommandCode
                            *COM*:00000058 hspi1

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Start
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_i2f
__aeabi_fdiv
__aeabi_f2uiz
memcpy
HAL_CAN_AddTxMessage
HAL_Delay
HAL_Init
SPI_Init
initPECTable
loadConfig
writeConfigAll
readAllCellVoltages
readAllCellTemps
checkAllCellConnections
HAL_GPIO_ReadPin
