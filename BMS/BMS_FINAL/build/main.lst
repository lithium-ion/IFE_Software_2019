ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB72:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "LTC6811.h"
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 2


  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** #define CELLVAL_ID      0x007
  37:Src/main.c    **** #define BMSSTAT_ID      0x008
  38:Src/main.c    **** #define BMSVINF_ID      0x009
  39:Src/main.c    **** #define BMSTINF_ID      0x00A
  40:Src/main.c    **** /* USER CODE END PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** ADC_HandleTypeDef hadc1;
  49:Src/main.c    **** 
  50:Src/main.c    **** CAN_HandleTypeDef hcan;
  51:Src/main.c    **** 
  52:Src/main.c    **** SPI_HandleTypeDef hspi1;
  53:Src/main.c    **** 
  54:Src/main.c    **** TIM_HandleTypeDef htim2;
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE BEGIN PV */
  57:Src/main.c    **** CommandCodeTypedef CommandCode;
  58:Src/main.c    **** BMSconfigStructTypedef BMSconfig;
  59:Src/main.c    **** 
  60:Src/main.c    **** CAN_TxHeaderTypeDef   TxHeader;
  61:Src/main.c    **** CAN_RxHeaderTypeDef   RxHeader;
  62:Src/main.c    **** uint8_t               TxData[8];
  63:Src/main.c    **** uint8_t               RxData[8];
  64:Src/main.c    **** uint32_t              TxMailbox;
  65:Src/main.c    **** 
  66:Src/main.c    **** uint8_t               CELLVAL_DATA[6];
  67:Src/main.c    **** uint8_t               BMSSTAT_DATA[6];
  68:Src/main.c    **** //uint8_t               BMSVINF_DATA[8];
  69:Src/main.c    **** uint8_t               BMSTINF_DATA[8];
  70:Src/main.c    **** 
  71:Src/main.c    **** uint16_t              minimum;
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END PV */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  76:Src/main.c    **** void SystemClock_Config(void);
  77:Src/main.c    **** static void MX_GPIO_Init(void);
  78:Src/main.c    **** static void MX_ADC1_Init(void);
  79:Src/main.c    **** static void MX_CAN_Init(void);
  80:Src/main.c    **** static void MX_SPI1_Init(void);
  81:Src/main.c    **** static void MX_TIM2_Init(void);
  82:Src/main.c    **** /* USER CODE BEGIN PFP */
  83:Src/main.c    **** void VOLTAGE_sort(BMSconfigStructTypedef cfg, uint16_t voltage[12][12]);
  84:Src/main.c    **** void CONNECTION_sort(BMSconfigStructTypedef cfg, bool connection[12][12]);
  85:Src/main.c    **** void FAULT_check(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool tempFault[12][4], b
  86:Src/main.c    **** void setDischarge(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool cellDischarge[12][
  87:Src/main.c    **** void CELLVAL_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], uint16_t cellTemp[12
  88:Src/main.c    **** void BMSVINF_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12]);
  89:Src/main.c    **** void BMSTINF_message(BMSconfigStructTypedef cfg, uint16_t cellTemp[12][4]);
  90:Src/main.c    **** void BMSSTAT_message(BMSconfigStructTypedef cfg, uint8_t cellNumber[5], bool faultType[5]);
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 3


  91:Src/main.c    **** /* USER CODE END PFP */
  92:Src/main.c    **** 
  93:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  94:Src/main.c    **** /* USER CODE BEGIN 0 */
  95:Src/main.c    **** 
  96:Src/main.c    **** /* USER CODE END 0 */
  97:Src/main.c    **** 
  98:Src/main.c    **** /**
  99:Src/main.c    ****   * @brief  The application entry point.
 100:Src/main.c    ****   * @retval int
 101:Src/main.c    ****   */
 102:Src/main.c    **** int main(void)
 103:Src/main.c    **** {
 104:Src/main.c    ****   /* USER CODE BEGIN 1 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE END 1 */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 111:Src/main.c    ****   HAL_Init();
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN Init */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE END Init */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Configure the system clock */
 118:Src/main.c    ****   SystemClock_Config();
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE END SysInit */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* Initialize all configured peripherals */
 125:Src/main.c    ****   MX_GPIO_Init();
 126:Src/main.c    ****   MX_ADC1_Init();
 127:Src/main.c    ****   MX_CAN_Init();
 128:Src/main.c    ****   //MX_SPI1_Init();
 129:Src/main.c    ****   MX_TIM2_Init();
 130:Src/main.c    ****   /* USER CODE BEGIN 2 */
 131:Src/main.c    ****   SPI_Init();
 132:Src/main.c    ****   initPECTable();
 133:Src/main.c    ****   loadConfig(&BMSconfig); // loads configuration settings from config.c
 134:Src/main.c    ****   writeConfigAll(BMSconfig);
 135:Src/main.c    **** 
 136:Src/main.c    ****   uint16_t voltage[BMSconfig.numOfICs][BMSconfig.numOfCellInputs];        //12, 12
 137:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 138:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 139:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 140:Src/main.c    ****   bool connection[BMSconfig.numOfICs][BMSconfig.numOfCellInputs];         //12, 12
 141:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8
 142:Src/main.c    ****   uint8_t dischargetimer[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];  //12, 8
 143:Src/main.c    **** 
 144:Src/main.c    ****   bool vreturn = false;
 145:Src/main.c    ****   bool treturn = false;
 146:Src/main.c    ****   bool disconnectFault = false;
 147:Src/main.c    ****   uint8_t disconnectedCell;
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 4


 148:Src/main.c    ****   uint8_t chargerate;
 149:Src/main.c    **** 
 150:Src/main.c    ****   uint8_t number[5];
 151:Src/main.c    ****   bool faults[5];
 152:Src/main.c    **** 
 153:Src/main.c    ****   bool AIR;
 154:Src/main.c    ****   bool CHARGE_EN;
 155:Src/main.c    **** 
 156:Src/main.c    ****   /*discharge[0][0] = 1;
 157:Src/main.c    ****   dischargeCellGroups(BMSconfig, discharge);
 158:Src/main.c    ****   HAL_Delay(1000);
 159:Src/main.c    ****   discharge[0][0] = 0;
 160:Src/main.c    ****   dischargeCellGroups(BMSconfig, discharge);*/
 161:Src/main.c    **** 
 162:Src/main.c    ****   /* USER CODE END 2 */
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* Infinite loop */
 165:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 166:Src/main.c    ****   while (1)
 167:Src/main.c    ****   {
 168:Src/main.c    ****     /* USER CODE END WHILE */
 169:Src/main.c    **** 
 170:Src/main.c    ****     /* USER CODE BEGIN 3 */
 171:Src/main.c    **** 
 172:Src/main.c    ****     writeConfigAddress(BMSconfig, 1);
 173:Src/main.c    **** 
 174:Src/main.c    ****     vreturn = readAllCellVoltages(BMSconfig, voltage);
 175:Src/main.c    ****     VOLTAGE_sort(BMSconfig, voltage);
 176:Src/main.c    ****     BMSVINF_message(BMSconfig, voltage);
 177:Src/main.c    **** 
 178:Src/main.c    ****     treturn = readAllCellTemps(BMSconfig, temp, tempdisconnect, overtemp);
 179:Src/main.c    ****     BMSTINF_message(BMSconfig, temp);
 180:Src/main.c    **** 
 181:Src/main.c    ****     //checkAllCellConnections(BMSconfig, voltage, connection);
 182:Src/main.c    ****     //CONNECTION_sort(BMSconfig, connection);
 183:Src/main.c    **** 
 184:Src/main.c    ****     /*AIR = HAL_GPIO_ReadPin(GPIOB, AIR_Pin);
 185:Src/main.c    ****     CHARGE_EN = HAL_GPIO_ReadPin(GPIOB, CHARGE_EN_Pin);
 186:Src/main.c    **** 
 187:Src/main.c    ****     if ((AIR == 0) && (CHARGE_EN == 0)) {
 188:Src/main.c    ****       setDischarge(BMSconfig, voltage, connection, discharge, chargerate);
 189:Src/main.c    ****       //dischargeCellGroups(BMSconfig, discharge);
 190:Src/main.c    ****       //send charger CAN message
 191:Src/main.c    ****     }*/
 192:Src/main.c    **** 
 193:Src/main.c    ****     setDischarge(BMSconfig, voltage, discharge, chargerate);
 194:Src/main.c    ****     dischargeCellGroups(BMSconfig, discharge);
 195:Src/main.c    **** 
 196:Src/main.c    ****     HAL_Delay(500);
 197:Src/main.c    **** 
 198:Src/main.c    ****     discharge[0][0] = 0;
 199:Src/main.c    ****     discharge[0][1] = 0;
 200:Src/main.c    ****     discharge[0][2] = 0;
 201:Src/main.c    ****     discharge[0][3] = 0;
 202:Src/main.c    ****     discharge[0][4] = 0;
 203:Src/main.c    ****     discharge[0][5] = 0;
 204:Src/main.c    ****     discharge[0][6] = 0;
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 5


 205:Src/main.c    ****     discharge[0][7] = 0;
 206:Src/main.c    ****     dischargeCellGroups(BMSconfig, discharge);
 207:Src/main.c    **** 
 208:Src/main.c    ****     //FAULT_check(BMSconfig, voltage, overtemp, tempdisconnect, connection, number, faults);
 209:Src/main.c    **** 
 210:Src/main.c    ****     CELLVAL_message(BMSconfig, voltage, temp, connection, discharge, tempdisconnect, vreturn);
 211:Src/main.c    ****     //BMSSTAT_message(BMSconfig, number, faults);
 212:Src/main.c    **** 
 213:Src/main.c    ****     if (vreturn == 1) HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 214:Src/main.c    **** 
 215:Src/main.c    ****     /*uint8_t rdcfg[8];
 216:Src/main.c    ****     writeConfigAll(BMSconfig);
 217:Src/main.c    ****     readConfig(1, rdcfg);
 218:Src/main.c    **** 
 219:Src/main.c    ****     TxHeader.StdId = 200;
 220:Src/main.c    ****     TxHeader.DLC = 8;
 221:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, rdcfg, &TxMailbox);*/
 222:Src/main.c    **** 
 223:Src/main.c    ****     HAL_Delay(100);
 224:Src/main.c    **** 
 225:Src/main.c    ****   }
 226:Src/main.c    ****   /* USER CODE END 3 */
 227:Src/main.c    **** }
 228:Src/main.c    **** 
 229:Src/main.c    **** /**
 230:Src/main.c    ****   * @brief System Clock Configuration
 231:Src/main.c    ****   * @retval None
 232:Src/main.c    ****   */
 233:Src/main.c    **** void SystemClock_Config(void)
 234:Src/main.c    **** {
 235:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 236:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 237:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 238:Src/main.c    **** 
 239:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 240:Src/main.c    ****   */
 241:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 242:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 243:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 244:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 245:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 246:Src/main.c    ****   {
 247:Src/main.c    ****     Error_Handler();
 248:Src/main.c    ****   }
 249:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 250:Src/main.c    ****   */
 251:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 252:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 253:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 254:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 255:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 256:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 257:Src/main.c    **** 
 258:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 259:Src/main.c    ****   {
 260:Src/main.c    ****     Error_Handler();
 261:Src/main.c    ****   }
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 6


 262:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 263:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 264:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 265:Src/main.c    ****   {
 266:Src/main.c    ****     Error_Handler();
 267:Src/main.c    ****   }
 268:Src/main.c    **** }
 269:Src/main.c    **** 
 270:Src/main.c    **** /**
 271:Src/main.c    ****   * @brief ADC1 Initialization Function
 272:Src/main.c    ****   * @param None
 273:Src/main.c    ****   * @retval None
 274:Src/main.c    ****   */
 275:Src/main.c    **** static void MX_ADC1_Init(void)
 276:Src/main.c    **** {
 277:Src/main.c    **** 
 278:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 279:Src/main.c    **** 
 280:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 281:Src/main.c    **** 
 282:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 283:Src/main.c    **** 
 284:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 285:Src/main.c    **** 
 286:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 287:Src/main.c    ****   /** Common config 
 288:Src/main.c    ****   */
 289:Src/main.c    ****   hadc1.Instance = ADC1;
 290:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 291:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 292:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 293:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 294:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 295:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 296:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 297:Src/main.c    ****   {
 298:Src/main.c    ****     Error_Handler();
 299:Src/main.c    ****   }
 300:Src/main.c    ****   /** Configure Regular Channel 
 301:Src/main.c    ****   */
 302:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 303:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 304:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 305:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 306:Src/main.c    ****   {
 307:Src/main.c    ****     Error_Handler();
 308:Src/main.c    ****   }
 309:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 312:Src/main.c    **** 
 313:Src/main.c    **** }
 314:Src/main.c    **** 
 315:Src/main.c    **** /**
 316:Src/main.c    ****   * @brief CAN Initialization Function
 317:Src/main.c    ****   * @param None
 318:Src/main.c    ****   * @retval None
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 7


 319:Src/main.c    ****   */
 320:Src/main.c    **** static void MX_CAN_Init(void)
 321:Src/main.c    **** {
 322:Src/main.c    **** 
 323:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 0 */
 324:Src/main.c    **** 
 325:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
 326:Src/main.c    **** 
 327:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 1 */
 328:Src/main.c    **** 
 329:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 330:Src/main.c    ****   hcan.Instance = CAN1;
 331:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 332:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 333:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 334:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 335:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 336:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 337:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 338:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 339:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 340:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 341:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 342:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 343:Src/main.c    ****   {
 344:Src/main.c    ****     Error_Handler();
 345:Src/main.c    ****   }
 346:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 2 */
 347:Src/main.c    ****   TxHeader.StdId = 0x321; 				// CAN standard ID
 348:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 349:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 350:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 351:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 352:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 353:Src/main.c    **** 
 354:Src/main.c    ****   HAL_CAN_Start(&hcan);
 355:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 356:Src/main.c    **** 
 357:Src/main.c    **** }
 358:Src/main.c    **** 
 359:Src/main.c    **** /**
 360:Src/main.c    ****   * @brief SPI1 Initialization Function
 361:Src/main.c    ****   * @param None
 362:Src/main.c    ****   * @retval None
 363:Src/main.c    ****   */
 364:Src/main.c    **** static void MX_SPI1_Init(void)
 365:Src/main.c    **** {
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 368:Src/main.c    **** 
 369:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 370:Src/main.c    **** 
 371:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 372:Src/main.c    **** 
 373:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 374:Src/main.c    ****   /* SPI1 parameter configuration*/
 375:Src/main.c    ****   hspi1.Instance = SPI1;
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 8


 376:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 377:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 378:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 379:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 380:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 381:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 382:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 383:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 384:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 385:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 386:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 387:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 388:Src/main.c    ****   {
 389:Src/main.c    ****     Error_Handler();
 390:Src/main.c    ****   }
 391:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 392:Src/main.c    **** 
 393:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 394:Src/main.c    **** 
 395:Src/main.c    **** }
 396:Src/main.c    **** 
 397:Src/main.c    **** /**
 398:Src/main.c    ****   * @brief TIM2 Initialization Function
 399:Src/main.c    ****   * @param None
 400:Src/main.c    ****   * @retval None
 401:Src/main.c    ****   */
 402:Src/main.c    **** static void MX_TIM2_Init(void)
 403:Src/main.c    **** {
 404:Src/main.c    **** 
 405:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 408:Src/main.c    **** 
 409:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 410:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 411:Src/main.c    **** 
 412:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 413:Src/main.c    **** 
 414:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 415:Src/main.c    ****   htim2.Instance = TIM2;
 416:Src/main.c    ****   htim2.Init.Prescaler = 0;
 417:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 418:Src/main.c    ****   htim2.Init.Period = 0;
 419:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 420:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 421:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 422:Src/main.c    ****   {
 423:Src/main.c    ****     Error_Handler();
 424:Src/main.c    ****   }
 425:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 426:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 427:Src/main.c    ****   {
 428:Src/main.c    ****     Error_Handler();
 429:Src/main.c    ****   }
 430:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 431:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 432:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 9


 433:Src/main.c    ****   {
 434:Src/main.c    ****     Error_Handler();
 435:Src/main.c    ****   }
 436:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 437:Src/main.c    **** 
 438:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 439:Src/main.c    **** 
 440:Src/main.c    **** }
 441:Src/main.c    **** 
 442:Src/main.c    **** /**
 443:Src/main.c    ****   * @brief GPIO Initialization Function
 444:Src/main.c    ****   * @param None
 445:Src/main.c    ****   * @retval None
 446:Src/main.c    ****   */
 447:Src/main.c    **** static void MX_GPIO_Init(void)
 448:Src/main.c    **** {
  26              		.loc 1 448 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 28
  33              		.cfi_offset 4, -28
  34              		.cfi_offset 5, -24
  35              		.cfi_offset 6, -20
  36              		.cfi_offset 7, -16
  37              		.cfi_offset 8, -12
  38              		.cfi_offset 9, -8
  39              		.cfi_offset 14, -4
  40 0004 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 449:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 449 3 view .LVU1
  44              		.loc 1 449 20 is_stmt 0 view .LVU2
  45 0006 0024     		movs	r4, #0
  46 0008 0494     		str	r4, [sp, #16]
  47 000a 0594     		str	r4, [sp, #20]
  48 000c 0694     		str	r4, [sp, #24]
  49 000e 0794     		str	r4, [sp, #28]
 450:Src/main.c    **** 
 451:Src/main.c    ****   /* GPIO Ports Clock Enable */
 452:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 452 3 is_stmt 1 view .LVU3
  51              	.LBB2:
  52              		.loc 1 452 3 view .LVU4
  53              		.loc 1 452 3 view .LVU5
  54 0010 334B     		ldr	r3, .L3
  55 0012 9A69     		ldr	r2, [r3, #24]
  56 0014 42F01002 		orr	r2, r2, #16
  57 0018 9A61     		str	r2, [r3, #24]
  58              		.loc 1 452 3 view .LVU6
  59 001a 9A69     		ldr	r2, [r3, #24]
  60 001c 02F01002 		and	r2, r2, #16
  61 0020 0092     		str	r2, [sp]
  62              		.loc 1 452 3 view .LVU7
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 10


  63 0022 009A     		ldr	r2, [sp]
  64              	.LBE2:
 453:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  65              		.loc 1 453 3 view .LVU8
  66              	.LBB3:
  67              		.loc 1 453 3 view .LVU9
  68              		.loc 1 453 3 view .LVU10
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F02002 		orr	r2, r2, #32
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 453 3 view .LVU11
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F02002 		and	r2, r2, #32
  75 0032 0192     		str	r2, [sp, #4]
  76              		.loc 1 453 3 view .LVU12
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE3:
 454:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 454 3 view .LVU13
  80              	.LBB4:
  81              		.loc 1 454 3 view .LVU14
  82              		.loc 1 454 3 view .LVU15
  83 0036 9A69     		ldr	r2, [r3, #24]
  84 0038 42F00402 		orr	r2, r2, #4
  85 003c 9A61     		str	r2, [r3, #24]
  86              		.loc 1 454 3 view .LVU16
  87 003e 9A69     		ldr	r2, [r3, #24]
  88 0040 02F00402 		and	r2, r2, #4
  89 0044 0292     		str	r2, [sp, #8]
  90              		.loc 1 454 3 view .LVU17
  91 0046 029A     		ldr	r2, [sp, #8]
  92              	.LBE4:
 455:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  93              		.loc 1 455 3 view .LVU18
  94              	.LBB5:
  95              		.loc 1 455 3 view .LVU19
  96              		.loc 1 455 3 view .LVU20
  97 0048 9A69     		ldr	r2, [r3, #24]
  98 004a 42F00802 		orr	r2, r2, #8
  99 004e 9A61     		str	r2, [r3, #24]
 100              		.loc 1 455 3 view .LVU21
 101 0050 9B69     		ldr	r3, [r3, #24]
 102 0052 03F00803 		and	r3, r3, #8
 103 0056 0393     		str	r3, [sp, #12]
 104              		.loc 1 455 3 view .LVU22
 105 0058 039B     		ldr	r3, [sp, #12]
 106              	.LBE5:
 456:Src/main.c    **** 
 457:Src/main.c    ****   /*Configure GPIO pin Output Level */
 458:Src/main.c    ****   HAL_GPIO_WritePin(DEBUG_GPIO_Port, DEBUG_Pin, GPIO_PIN_RESET);
 107              		.loc 1 458 3 view .LVU23
 108 005a DFF88C90 		ldr	r9, .L3+8
 109 005e 2246     		mov	r2, r4
 110 0060 4FF40051 		mov	r1, #8192
 111 0064 4846     		mov	r0, r9
 112 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL0:
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 11


 459:Src/main.c    **** 
 460:Src/main.c    ****   /*Configure GPIO pin Output Level */
 461:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, BMS_CS_Pin|TRIGGER_Pin, GPIO_PIN_RESET);
 114              		.loc 1 461 3 view .LVU24
 115 006a DFF88080 		ldr	r8, .L3+12
 116 006e 2246     		mov	r2, r4
 117 0070 4FF48871 		mov	r1, #272
 118 0074 4046     		mov	r0, r8
 119 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL1:
 462:Src/main.c    **** 
 463:Src/main.c    ****   /*Configure GPIO pin Output Level */
 464:Src/main.c    ****   HAL_GPIO_WritePin(BMS_FLT_GPIO_Port, BMS_FLT_Pin, GPIO_PIN_RESET);
 121              		.loc 1 464 3 view .LVU25
 122 007a 1A4D     		ldr	r5, .L3+4
 123 007c 2246     		mov	r2, r4
 124 007e 4FF40071 		mov	r1, #512
 125 0082 2846     		mov	r0, r5
 126 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL2:
 465:Src/main.c    **** 
 466:Src/main.c    ****   /*Configure GPIO pin : DEBUG_Pin */
 467:Src/main.c    ****   GPIO_InitStruct.Pin = DEBUG_Pin;
 128              		.loc 1 467 3 view .LVU26
 129              		.loc 1 467 23 is_stmt 0 view .LVU27
 130 0088 4FF40053 		mov	r3, #8192
 131 008c 0493     		str	r3, [sp, #16]
 468:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 468 3 is_stmt 1 view .LVU28
 133              		.loc 1 468 24 is_stmt 0 view .LVU29
 134 008e 0127     		movs	r7, #1
 135 0090 0597     		str	r7, [sp, #20]
 469:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 469 3 is_stmt 1 view .LVU30
 137              		.loc 1 469 24 is_stmt 0 view .LVU31
 138 0092 0694     		str	r4, [sp, #24]
 470:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 470 3 is_stmt 1 view .LVU32
 140              		.loc 1 470 25 is_stmt 0 view .LVU33
 141 0094 0226     		movs	r6, #2
 142 0096 0796     		str	r6, [sp, #28]
 471:Src/main.c    ****   HAL_GPIO_Init(DEBUG_GPIO_Port, &GPIO_InitStruct);
 143              		.loc 1 471 3 is_stmt 1 view .LVU34
 144 0098 04A9     		add	r1, sp, #16
 145 009a 4846     		mov	r0, r9
 146 009c FFF7FEFF 		bl	HAL_GPIO_Init
 147              	.LVL3:
 472:Src/main.c    **** 
 473:Src/main.c    ****   /*Configure GPIO pins : BMS_CS_Pin TRIGGER_Pin */
 474:Src/main.c    ****   GPIO_InitStruct.Pin = BMS_CS_Pin|TRIGGER_Pin;
 148              		.loc 1 474 3 view .LVU35
 149              		.loc 1 474 23 is_stmt 0 view .LVU36
 150 00a0 4FF48873 		mov	r3, #272
 151 00a4 0493     		str	r3, [sp, #16]
 475:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 152              		.loc 1 475 3 is_stmt 1 view .LVU37
 153              		.loc 1 475 24 is_stmt 0 view .LVU38
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 12


 154 00a6 0597     		str	r7, [sp, #20]
 476:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 476 3 is_stmt 1 view .LVU39
 156              		.loc 1 476 24 is_stmt 0 view .LVU40
 157 00a8 0694     		str	r4, [sp, #24]
 477:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 158              		.loc 1 477 3 is_stmt 1 view .LVU41
 159              		.loc 1 477 25 is_stmt 0 view .LVU42
 160 00aa 0796     		str	r6, [sp, #28]
 478:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 161              		.loc 1 478 3 is_stmt 1 view .LVU43
 162 00ac 04A9     		add	r1, sp, #16
 163 00ae 4046     		mov	r0, r8
 164 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 165              	.LVL4:
 479:Src/main.c    **** 
 480:Src/main.c    ****   /*Configure GPIO pins : CHARGE_EN_Pin AIR_Pin */
 481:Src/main.c    ****   GPIO_InitStruct.Pin = CHARGE_EN_Pin|AIR_Pin;
 166              		.loc 1 481 3 view .LVU44
 167              		.loc 1 481 23 is_stmt 0 view .LVU45
 168 00b4 2823     		movs	r3, #40
 169 00b6 0493     		str	r3, [sp, #16]
 482:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 170              		.loc 1 482 3 is_stmt 1 view .LVU46
 171              		.loc 1 482 24 is_stmt 0 view .LVU47
 172 00b8 0594     		str	r4, [sp, #20]
 483:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 173              		.loc 1 483 3 is_stmt 1 view .LVU48
 174              		.loc 1 483 24 is_stmt 0 view .LVU49
 175 00ba 0694     		str	r4, [sp, #24]
 484:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 176              		.loc 1 484 3 is_stmt 1 view .LVU50
 177 00bc 04A9     		add	r1, sp, #16
 178 00be 2846     		mov	r0, r5
 179 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL5:
 485:Src/main.c    **** 
 486:Src/main.c    ****   /*Configure GPIO pin : BMS_FLT_Pin */
 487:Src/main.c    ****   GPIO_InitStruct.Pin = BMS_FLT_Pin;
 181              		.loc 1 487 3 view .LVU51
 182              		.loc 1 487 23 is_stmt 0 view .LVU52
 183 00c4 4FF40073 		mov	r3, #512
 184 00c8 0493     		str	r3, [sp, #16]
 488:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 185              		.loc 1 488 3 is_stmt 1 view .LVU53
 186              		.loc 1 488 24 is_stmt 0 view .LVU54
 187 00ca 0597     		str	r7, [sp, #20]
 489:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 188              		.loc 1 489 3 is_stmt 1 view .LVU55
 189              		.loc 1 489 24 is_stmt 0 view .LVU56
 190 00cc 0694     		str	r4, [sp, #24]
 490:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 191              		.loc 1 490 3 is_stmt 1 view .LVU57
 192              		.loc 1 490 25 is_stmt 0 view .LVU58
 193 00ce 0796     		str	r6, [sp, #28]
 491:Src/main.c    ****   HAL_GPIO_Init(BMS_FLT_GPIO_Port, &GPIO_InitStruct);
 194              		.loc 1 491 3 is_stmt 1 view .LVU59
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 13


 195 00d0 04A9     		add	r1, sp, #16
 196 00d2 2846     		mov	r0, r5
 197 00d4 FFF7FEFF 		bl	HAL_GPIO_Init
 198              	.LVL6:
 492:Src/main.c    **** 
 493:Src/main.c    **** }
 199              		.loc 1 493 1 is_stmt 0 view .LVU60
 200 00d8 09B0     		add	sp, sp, #36
 201              	.LCFI2:
 202              		.cfi_def_cfa_offset 28
 203              		@ sp needed
 204 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 205              	.L4:
 206 00de 00BF     		.align	2
 207              	.L3:
 208 00e0 00100240 		.word	1073876992
 209 00e4 000C0140 		.word	1073810432
 210 00e8 00100140 		.word	1073811456
 211 00ec 00080140 		.word	1073809408
 212              		.cfi_endproc
 213              	.LFE72:
 215              		.section	.text.MX_ADC1_Init,"ax",%progbits
 216              		.align	1
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 222              	MX_ADC1_Init:
 223              	.LFB68:
 276:Src/main.c    **** 
 224              		.loc 1 276 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 16
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 70B5     		push	{r4, r5, r6, lr}
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 16
 231              		.cfi_offset 4, -16
 232              		.cfi_offset 5, -12
 233              		.cfi_offset 6, -8
 234              		.cfi_offset 14, -4
 235 0002 84B0     		sub	sp, sp, #16
 236              	.LCFI4:
 237              		.cfi_def_cfa_offset 32
 282:Src/main.c    **** 
 238              		.loc 1 282 3 view .LVU62
 282:Src/main.c    **** 
 239              		.loc 1 282 26 is_stmt 0 view .LVU63
 240 0004 0025     		movs	r5, #0
 241 0006 0195     		str	r5, [sp, #4]
 242 0008 0295     		str	r5, [sp, #8]
 243 000a 0395     		str	r5, [sp, #12]
 289:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 244              		.loc 1 289 3 is_stmt 1 view .LVU64
 289:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 245              		.loc 1 289 18 is_stmt 0 view .LVU65
 246 000c 0C4C     		ldr	r4, .L7
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 14


 247 000e 0D4B     		ldr	r3, .L7+4
 248 0010 2360     		str	r3, [r4]
 290:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 249              		.loc 1 290 3 is_stmt 1 view .LVU66
 290:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 250              		.loc 1 290 27 is_stmt 0 view .LVU67
 251 0012 A560     		str	r5, [r4, #8]
 291:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 252              		.loc 1 291 3 is_stmt 1 view .LVU68
 291:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 253              		.loc 1 291 33 is_stmt 0 view .LVU69
 254 0014 E560     		str	r5, [r4, #12]
 292:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 255              		.loc 1 292 3 is_stmt 1 view .LVU70
 292:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 256              		.loc 1 292 36 is_stmt 0 view .LVU71
 257 0016 6561     		str	r5, [r4, #20]
 293:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 258              		.loc 1 293 3 is_stmt 1 view .LVU72
 293:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 259              		.loc 1 293 31 is_stmt 0 view .LVU73
 260 0018 4FF46023 		mov	r3, #917504
 261 001c E361     		str	r3, [r4, #28]
 294:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 262              		.loc 1 294 3 is_stmt 1 view .LVU74
 294:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 263              		.loc 1 294 24 is_stmt 0 view .LVU75
 264 001e 6560     		str	r5, [r4, #4]
 295:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 265              		.loc 1 295 3 is_stmt 1 view .LVU76
 295:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 266              		.loc 1 295 30 is_stmt 0 view .LVU77
 267 0020 0126     		movs	r6, #1
 268 0022 2661     		str	r6, [r4, #16]
 296:Src/main.c    ****   {
 269              		.loc 1 296 3 is_stmt 1 view .LVU78
 296:Src/main.c    ****   {
 270              		.loc 1 296 7 is_stmt 0 view .LVU79
 271 0024 2046     		mov	r0, r4
 272 0026 FFF7FEFF 		bl	HAL_ADC_Init
 273              	.LVL7:
 302:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 274              		.loc 1 302 3 is_stmt 1 view .LVU80
 302:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 275              		.loc 1 302 19 is_stmt 0 view .LVU81
 276 002a 0823     		movs	r3, #8
 277 002c 0193     		str	r3, [sp, #4]
 303:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 278              		.loc 1 303 3 is_stmt 1 view .LVU82
 303:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 279              		.loc 1 303 16 is_stmt 0 view .LVU83
 280 002e 0296     		str	r6, [sp, #8]
 304:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 281              		.loc 1 304 3 is_stmt 1 view .LVU84
 304:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 282              		.loc 1 304 24 is_stmt 0 view .LVU85
 283 0030 0395     		str	r5, [sp, #12]
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 15


 305:Src/main.c    ****   {
 284              		.loc 1 305 3 is_stmt 1 view .LVU86
 305:Src/main.c    ****   {
 285              		.loc 1 305 7 is_stmt 0 view .LVU87
 286 0032 01A9     		add	r1, sp, #4
 287 0034 2046     		mov	r0, r4
 288 0036 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 289              	.LVL8:
 313:Src/main.c    **** 
 290              		.loc 1 313 1 view .LVU88
 291 003a 04B0     		add	sp, sp, #16
 292              	.LCFI5:
 293              		.cfi_def_cfa_offset 16
 294              		@ sp needed
 295 003c 70BD     		pop	{r4, r5, r6, pc}
 296              	.L8:
 297 003e 00BF     		.align	2
 298              	.L7:
 299 0040 00000000 		.word	hadc1
 300 0044 00240140 		.word	1073816576
 301              		.cfi_endproc
 302              	.LFE68:
 304              		.section	.text.MX_CAN_Init,"ax",%progbits
 305              		.align	1
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu softvfp
 311              	MX_CAN_Init:
 312              	.LFB69:
 321:Src/main.c    **** 
 313              		.loc 1 321 1 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 70B5     		push	{r4, r5, r6, lr}
 318              	.LCFI6:
 319              		.cfi_def_cfa_offset 16
 320              		.cfi_offset 4, -16
 321              		.cfi_offset 5, -12
 322              		.cfi_offset 6, -8
 323              		.cfi_offset 14, -4
 330:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 324              		.loc 1 330 3 view .LVU90
 330:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 325              		.loc 1 330 17 is_stmt 0 view .LVU91
 326 0002 134C     		ldr	r4, .L11
 327 0004 134B     		ldr	r3, .L11+4
 328 0006 2360     		str	r3, [r4]
 331:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 329              		.loc 1 331 3 is_stmt 1 view .LVU92
 331:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 330              		.loc 1 331 23 is_stmt 0 view .LVU93
 331 0008 0126     		movs	r6, #1
 332 000a 6660     		str	r6, [r4, #4]
 332:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 333              		.loc 1 332 3 is_stmt 1 view .LVU94
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 16


 332:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 334              		.loc 1 332 18 is_stmt 0 view .LVU95
 335 000c 0025     		movs	r5, #0
 336 000e A560     		str	r5, [r4, #8]
 333:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 337              		.loc 1 333 3 is_stmt 1 view .LVU96
 333:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 338              		.loc 1 333 27 is_stmt 0 view .LVU97
 339 0010 4FF08073 		mov	r3, #16777216
 340 0014 E360     		str	r3, [r4, #12]
 334:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 341              		.loc 1 334 3 is_stmt 1 view .LVU98
 334:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 342              		.loc 1 334 22 is_stmt 0 view .LVU99
 343 0016 4FF44023 		mov	r3, #786432
 344 001a 2361     		str	r3, [r4, #16]
 335:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 345              		.loc 1 335 3 is_stmt 1 view .LVU100
 335:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 346              		.loc 1 335 22 is_stmt 0 view .LVU101
 347 001c 4FF48013 		mov	r3, #1048576
 348 0020 6361     		str	r3, [r4, #20]
 336:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 349              		.loc 1 336 3 is_stmt 1 view .LVU102
 336:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 350              		.loc 1 336 31 is_stmt 0 view .LVU103
 351 0022 2576     		strb	r5, [r4, #24]
 337:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 352              		.loc 1 337 3 is_stmt 1 view .LVU104
 337:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 353              		.loc 1 337 24 is_stmt 0 view .LVU105
 354 0024 6576     		strb	r5, [r4, #25]
 338:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 355              		.loc 1 338 3 is_stmt 1 view .LVU106
 338:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 356              		.loc 1 338 24 is_stmt 0 view .LVU107
 357 0026 A576     		strb	r5, [r4, #26]
 339:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 358              		.loc 1 339 3 is_stmt 1 view .LVU108
 339:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 359              		.loc 1 339 32 is_stmt 0 view .LVU109
 360 0028 E576     		strb	r5, [r4, #27]
 340:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 361              		.loc 1 340 3 is_stmt 1 view .LVU110
 340:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 362              		.loc 1 340 31 is_stmt 0 view .LVU111
 363 002a 2577     		strb	r5, [r4, #28]
 341:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 364              		.loc 1 341 3 is_stmt 1 view .LVU112
 341:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 365              		.loc 1 341 34 is_stmt 0 view .LVU113
 366 002c 6577     		strb	r5, [r4, #29]
 342:Src/main.c    ****   {
 367              		.loc 1 342 3 is_stmt 1 view .LVU114
 342:Src/main.c    ****   {
 368              		.loc 1 342 7 is_stmt 0 view .LVU115
 369 002e 2046     		mov	r0, r4
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 17


 370 0030 FFF7FEFF 		bl	HAL_CAN_Init
 371              	.LVL9:
 347:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 372              		.loc 1 347 3 is_stmt 1 view .LVU116
 347:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 373              		.loc 1 347 18 is_stmt 0 view .LVU117
 374 0034 084B     		ldr	r3, .L11+8
 375 0036 40F22132 		movw	r2, #801
 376 003a 1A60     		str	r2, [r3]
 348:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 377              		.loc 1 348 2 is_stmt 1 view .LVU118
 348:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 378              		.loc 1 348 17 is_stmt 0 view .LVU119
 379 003c 5E60     		str	r6, [r3, #4]
 349:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 380              		.loc 1 349 2 is_stmt 1 view .LVU120
 349:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 381              		.loc 1 349 15 is_stmt 0 view .LVU121
 382 003e DD60     		str	r5, [r3, #12]
 350:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 383              		.loc 1 350 2 is_stmt 1 view .LVU122
 350:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 384              		.loc 1 350 15 is_stmt 0 view .LVU123
 385 0040 9D60     		str	r5, [r3, #8]
 351:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 386              		.loc 1 351 2 is_stmt 1 view .LVU124
 351:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 387              		.loc 1 351 15 is_stmt 0 view .LVU125
 388 0042 0822     		movs	r2, #8
 389 0044 1A61     		str	r2, [r3, #16]
 352:Src/main.c    **** 
 390              		.loc 1 352 2 is_stmt 1 view .LVU126
 352:Src/main.c    **** 
 391              		.loc 1 352 30 is_stmt 0 view .LVU127
 392 0046 1D75     		strb	r5, [r3, #20]
 354:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 393              		.loc 1 354 3 is_stmt 1 view .LVU128
 394 0048 2046     		mov	r0, r4
 395 004a FFF7FEFF 		bl	HAL_CAN_Start
 396              	.LVL10:
 357:Src/main.c    **** 
 397              		.loc 1 357 1 is_stmt 0 view .LVU129
 398 004e 70BD     		pop	{r4, r5, r6, pc}
 399              	.L12:
 400              		.align	2
 401              	.L11:
 402 0050 00000000 		.word	hcan
 403 0054 00640040 		.word	1073767424
 404 0058 00000000 		.word	TxHeader
 405              		.cfi_endproc
 406              	.LFE69:
 408              		.section	.text.MX_TIM2_Init,"ax",%progbits
 409              		.align	1
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu softvfp
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 18


 415              	MX_TIM2_Init:
 416              	.LFB71:
 403:Src/main.c    **** 
 417              		.loc 1 403 1 is_stmt 1 view -0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 24
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421 0000 30B5     		push	{r4, r5, lr}
 422              	.LCFI7:
 423              		.cfi_def_cfa_offset 12
 424              		.cfi_offset 4, -12
 425              		.cfi_offset 5, -8
 426              		.cfi_offset 14, -4
 427 0002 87B0     		sub	sp, sp, #28
 428              	.LCFI8:
 429              		.cfi_def_cfa_offset 40
 409:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 430              		.loc 1 409 3 view .LVU131
 409:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 431              		.loc 1 409 26 is_stmt 0 view .LVU132
 432 0004 0024     		movs	r4, #0
 433 0006 0294     		str	r4, [sp, #8]
 434 0008 0394     		str	r4, [sp, #12]
 435 000a 0494     		str	r4, [sp, #16]
 436 000c 0594     		str	r4, [sp, #20]
 410:Src/main.c    **** 
 437              		.loc 1 410 3 is_stmt 1 view .LVU133
 410:Src/main.c    **** 
 438              		.loc 1 410 27 is_stmt 0 view .LVU134
 439 000e 0094     		str	r4, [sp]
 440 0010 0194     		str	r4, [sp, #4]
 415:Src/main.c    ****   htim2.Init.Prescaler = 0;
 441              		.loc 1 415 3 is_stmt 1 view .LVU135
 415:Src/main.c    ****   htim2.Init.Prescaler = 0;
 442              		.loc 1 415 18 is_stmt 0 view .LVU136
 443 0012 0D4D     		ldr	r5, .L15
 444 0014 4FF08043 		mov	r3, #1073741824
 445 0018 2B60     		str	r3, [r5]
 416:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 446              		.loc 1 416 3 is_stmt 1 view .LVU137
 416:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 447              		.loc 1 416 24 is_stmt 0 view .LVU138
 448 001a 6C60     		str	r4, [r5, #4]
 417:Src/main.c    ****   htim2.Init.Period = 0;
 449              		.loc 1 417 3 is_stmt 1 view .LVU139
 417:Src/main.c    ****   htim2.Init.Period = 0;
 450              		.loc 1 417 26 is_stmt 0 view .LVU140
 451 001c AC60     		str	r4, [r5, #8]
 418:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 452              		.loc 1 418 3 is_stmt 1 view .LVU141
 418:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 453              		.loc 1 418 21 is_stmt 0 view .LVU142
 454 001e EC60     		str	r4, [r5, #12]
 419:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 455              		.loc 1 419 3 is_stmt 1 view .LVU143
 419:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 456              		.loc 1 419 28 is_stmt 0 view .LVU144
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 19


 457 0020 2C61     		str	r4, [r5, #16]
 420:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 458              		.loc 1 420 3 is_stmt 1 view .LVU145
 420:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 459              		.loc 1 420 32 is_stmt 0 view .LVU146
 460 0022 AC61     		str	r4, [r5, #24]
 421:Src/main.c    ****   {
 461              		.loc 1 421 3 is_stmt 1 view .LVU147
 421:Src/main.c    ****   {
 462              		.loc 1 421 7 is_stmt 0 view .LVU148
 463 0024 2846     		mov	r0, r5
 464 0026 FFF7FEFF 		bl	HAL_TIM_Base_Init
 465              	.LVL11:
 425:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 466              		.loc 1 425 3 is_stmt 1 view .LVU149
 425:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 467              		.loc 1 425 34 is_stmt 0 view .LVU150
 468 002a 4FF48053 		mov	r3, #4096
 469 002e 0293     		str	r3, [sp, #8]
 426:Src/main.c    ****   {
 470              		.loc 1 426 3 is_stmt 1 view .LVU151
 426:Src/main.c    ****   {
 471              		.loc 1 426 7 is_stmt 0 view .LVU152
 472 0030 02A9     		add	r1, sp, #8
 473 0032 2846     		mov	r0, r5
 474 0034 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 475              	.LVL12:
 430:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 476              		.loc 1 430 3 is_stmt 1 view .LVU153
 430:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 477              		.loc 1 430 37 is_stmt 0 view .LVU154
 478 0038 0094     		str	r4, [sp]
 431:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 479              		.loc 1 431 3 is_stmt 1 view .LVU155
 431:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 480              		.loc 1 431 33 is_stmt 0 view .LVU156
 481 003a 0194     		str	r4, [sp, #4]
 432:Src/main.c    ****   {
 482              		.loc 1 432 3 is_stmt 1 view .LVU157
 432:Src/main.c    ****   {
 483              		.loc 1 432 7 is_stmt 0 view .LVU158
 484 003c 6946     		mov	r1, sp
 485 003e 2846     		mov	r0, r5
 486 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 487              	.LVL13:
 440:Src/main.c    **** 
 488              		.loc 1 440 1 view .LVU159
 489 0044 07B0     		add	sp, sp, #28
 490              	.LCFI9:
 491              		.cfi_def_cfa_offset 12
 492              		@ sp needed
 493 0046 30BD     		pop	{r4, r5, pc}
 494              	.L16:
 495              		.align	2
 496              	.L15:
 497 0048 00000000 		.word	htim2
 498              		.cfi_endproc
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 20


 499              	.LFE71:
 501              		.section	.text.SystemClock_Config,"ax",%progbits
 502              		.align	1
 503              		.global	SystemClock_Config
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 507              		.fpu softvfp
 509              	SystemClock_Config:
 510              	.LFB67:
 234:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 511              		.loc 1 234 1 is_stmt 1 view -0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 80
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515 0000 30B5     		push	{r4, r5, lr}
 516              	.LCFI10:
 517              		.cfi_def_cfa_offset 12
 518              		.cfi_offset 4, -12
 519              		.cfi_offset 5, -8
 520              		.cfi_offset 14, -4
 521 0002 95B0     		sub	sp, sp, #84
 522              	.LCFI11:
 523              		.cfi_def_cfa_offset 96
 235:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 524              		.loc 1 235 3 view .LVU161
 235:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 525              		.loc 1 235 22 is_stmt 0 view .LVU162
 526 0004 2422     		movs	r2, #36
 527 0006 0021     		movs	r1, #0
 528 0008 0BA8     		add	r0, sp, #44
 529 000a FFF7FEFF 		bl	memset
 530              	.LVL14:
 236:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 531              		.loc 1 236 3 is_stmt 1 view .LVU163
 236:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 532              		.loc 1 236 22 is_stmt 0 view .LVU164
 533 000e 0024     		movs	r4, #0
 534 0010 0594     		str	r4, [sp, #20]
 535 0012 0694     		str	r4, [sp, #24]
 536 0014 0794     		str	r4, [sp, #28]
 537 0016 0894     		str	r4, [sp, #32]
 538 0018 0994     		str	r4, [sp, #36]
 237:Src/main.c    **** 
 539              		.loc 1 237 3 is_stmt 1 view .LVU165
 237:Src/main.c    **** 
 540              		.loc 1 237 28 is_stmt 0 view .LVU166
 541 001a 0194     		str	r4, [sp, #4]
 542 001c 0294     		str	r4, [sp, #8]
 543 001e 0394     		str	r4, [sp, #12]
 544 0020 0494     		str	r4, [sp, #16]
 241:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 545              		.loc 1 241 3 is_stmt 1 view .LVU167
 241:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 546              		.loc 1 241 36 is_stmt 0 view .LVU168
 547 0022 0225     		movs	r5, #2
 548 0024 0A95     		str	r5, [sp, #40]
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 21


 242:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 549              		.loc 1 242 3 is_stmt 1 view .LVU169
 242:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 550              		.loc 1 242 30 is_stmt 0 view .LVU170
 551 0026 0123     		movs	r3, #1
 552 0028 0E93     		str	r3, [sp, #56]
 243:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 553              		.loc 1 243 3 is_stmt 1 view .LVU171
 243:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 554              		.loc 1 243 41 is_stmt 0 view .LVU172
 555 002a 1023     		movs	r3, #16
 556 002c 0F93     		str	r3, [sp, #60]
 244:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 557              		.loc 1 244 3 is_stmt 1 view .LVU173
 245:Src/main.c    ****   {
 558              		.loc 1 245 3 view .LVU174
 245:Src/main.c    ****   {
 559              		.loc 1 245 7 is_stmt 0 view .LVU175
 560 002e 0AA8     		add	r0, sp, #40
 561 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 562              	.LVL15:
 251:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 563              		.loc 1 251 3 is_stmt 1 view .LVU176
 251:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 564              		.loc 1 251 31 is_stmt 0 view .LVU177
 565 0034 0F23     		movs	r3, #15
 566 0036 0593     		str	r3, [sp, #20]
 253:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 567              		.loc 1 253 3 is_stmt 1 view .LVU178
 253:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 568              		.loc 1 253 34 is_stmt 0 view .LVU179
 569 0038 0694     		str	r4, [sp, #24]
 254:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 570              		.loc 1 254 3 is_stmt 1 view .LVU180
 254:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 571              		.loc 1 254 35 is_stmt 0 view .LVU181
 572 003a 0794     		str	r4, [sp, #28]
 255:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 573              		.loc 1 255 3 is_stmt 1 view .LVU182
 255:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 574              		.loc 1 255 36 is_stmt 0 view .LVU183
 575 003c 0894     		str	r4, [sp, #32]
 256:Src/main.c    **** 
 576              		.loc 1 256 3 is_stmt 1 view .LVU184
 256:Src/main.c    **** 
 577              		.loc 1 256 36 is_stmt 0 view .LVU185
 578 003e 0994     		str	r4, [sp, #36]
 258:Src/main.c    ****   {
 579              		.loc 1 258 3 is_stmt 1 view .LVU186
 258:Src/main.c    ****   {
 580              		.loc 1 258 7 is_stmt 0 view .LVU187
 581 0040 2146     		mov	r1, r4
 582 0042 05A8     		add	r0, sp, #20
 583 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 584              	.LVL16:
 262:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 585              		.loc 1 262 3 is_stmt 1 view .LVU188
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 22


 262:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 586              		.loc 1 262 38 is_stmt 0 view .LVU189
 587 0048 0195     		str	r5, [sp, #4]
 263:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 588              		.loc 1 263 3 is_stmt 1 view .LVU190
 263:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 589              		.loc 1 263 35 is_stmt 0 view .LVU191
 590 004a 0394     		str	r4, [sp, #12]
 264:Src/main.c    ****   {
 591              		.loc 1 264 3 is_stmt 1 view .LVU192
 264:Src/main.c    ****   {
 592              		.loc 1 264 7 is_stmt 0 view .LVU193
 593 004c 01A8     		add	r0, sp, #4
 594 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 595              	.LVL17:
 268:Src/main.c    **** 
 596              		.loc 1 268 1 view .LVU194
 597 0052 15B0     		add	sp, sp, #84
 598              	.LCFI12:
 599              		.cfi_def_cfa_offset 12
 600              		@ sp needed
 601 0054 30BD     		pop	{r4, r5, pc}
 602              		.cfi_endproc
 603              	.LFE67:
 605              		.section	.text.VOLTAGE_sort,"ax",%progbits
 606              		.align	1
 607              		.global	VOLTAGE_sort
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu softvfp
 613              	VOLTAGE_sort:
 614              	.LVL18:
 615              	.LFB73:
 494:Src/main.c    **** 
 495:Src/main.c    **** /* USER CODE BEGIN 4 */
 496:Src/main.c    **** 
 497:Src/main.c    **** void VOLTAGE_sort(BMSconfigStructTypedef cfg, uint16_t voltage[12][12]) {
 616              		.loc 1 497 73 is_stmt 1 view -0
 617              		.cfi_startproc
 618              		@ args = 80, pretend = 16, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621              		.loc 1 497 73 is_stmt 0 view .LVU196
 622 0000 84B0     		sub	sp, sp, #16
 623              	.LCFI13:
 624              		.cfi_def_cfa_offset 16
 625 0002 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 626 0006 1398     		ldr	r0, [sp, #76]
 498:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 627              		.loc 1 498 3 is_stmt 1 view .LVU197
 628              	.LBB6:
 629              		.loc 1 498 8 view .LVU198
 630              	.LVL19:
 631              		.loc 1 498 16 is_stmt 0 view .LVU199
 632 0008 0022     		movs	r2, #0
 633              	.LVL20:
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 23


 634              	.L20:
 635              		.loc 1 498 30 discriminator 1 view .LVU200
 636 000a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 637              		.loc 1 498 3 discriminator 1 view .LVU201
 638 000e 9342     		cmp	r3, r2
 639 0010 0ED9     		bls	.L23
 499:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 640              		.loc 1 499 5 is_stmt 1 discriminator 3 view .LVU202
 641              		.loc 1 499 28 is_stmt 0 discriminator 3 view .LVU203
 642 0012 02EB4201 		add	r1, r2, r2, lsl #1
 643 0016 CB00     		lsls	r3, r1, #3
 644 0018 0344     		add	r3, r3, r0
 645              		.loc 1 499 31 discriminator 3 view .LVU204
 646 001a 9989     		ldrh	r1, [r3, #12]
 647              		.loc 1 499 19 discriminator 3 view .LVU205
 648 001c 1981     		strh	r1, [r3, #8]	@ movhi
 500:Src/main.c    ****     voltage[i][5] = voltage[i][7];
 649              		.loc 1 500 5 is_stmt 1 discriminator 3 view .LVU206
 650              		.loc 1 500 31 is_stmt 0 discriminator 3 view .LVU207
 651 001e D989     		ldrh	r1, [r3, #14]
 652              		.loc 1 500 19 discriminator 3 view .LVU208
 653 0020 5981     		strh	r1, [r3, #10]	@ movhi
 501:Src/main.c    ****     voltage[i][6] = voltage[i][8];
 654              		.loc 1 501 5 is_stmt 1 discriminator 3 view .LVU209
 655              		.loc 1 501 31 is_stmt 0 discriminator 3 view .LVU210
 656 0022 198A     		ldrh	r1, [r3, #16]
 657              		.loc 1 501 19 discriminator 3 view .LVU211
 658 0024 9981     		strh	r1, [r3, #12]	@ movhi
 502:Src/main.c    ****     voltage[i][7] = voltage[i][9];
 659              		.loc 1 502 5 is_stmt 1 discriminator 3 view .LVU212
 660              		.loc 1 502 31 is_stmt 0 discriminator 3 view .LVU213
 661 0026 598A     		ldrh	r1, [r3, #18]
 662              		.loc 1 502 19 discriminator 3 view .LVU214
 663 0028 D981     		strh	r1, [r3, #14]	@ movhi
 498:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 664              		.loc 1 498 42 discriminator 3 view .LVU215
 665 002a 0132     		adds	r2, r2, #1
 666              	.LVL21:
 498:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 667              		.loc 1 498 42 discriminator 3 view .LVU216
 668 002c D2B2     		uxtb	r2, r2
 669              	.LVL22:
 498:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 670              		.loc 1 498 42 discriminator 3 view .LVU217
 671 002e ECE7     		b	.L20
 672              	.L23:
 498:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 673              		.loc 1 498 42 discriminator 3 view .LVU218
 674              	.LBE6:
 503:Src/main.c    ****   }
 504:Src/main.c    **** }
 675              		.loc 1 504 1 view .LVU219
 676 0030 04B0     		add	sp, sp, #16
 677              	.LCFI14:
 678              		.cfi_def_cfa_offset 0
 679 0032 7047     		bx	lr
 680              		.cfi_endproc
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 24


 681              	.LFE73:
 683              		.section	.text.CONNECTION_sort,"ax",%progbits
 684              		.align	1
 685              		.global	CONNECTION_sort
 686              		.syntax unified
 687              		.thumb
 688              		.thumb_func
 689              		.fpu softvfp
 691              	CONNECTION_sort:
 692              	.LVL23:
 693              	.LFB74:
 505:Src/main.c    **** 
 506:Src/main.c    **** void CONNECTION_sort(BMSconfigStructTypedef cfg, bool connection[12][12]) {
 694              		.loc 1 506 75 is_stmt 1 view -0
 695              		.cfi_startproc
 696              		@ args = 80, pretend = 16, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 699              		.loc 1 506 75 is_stmt 0 view .LVU221
 700 0000 84B0     		sub	sp, sp, #16
 701              	.LCFI15:
 702              		.cfi_def_cfa_offset 16
 703 0002 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 704 0006 1398     		ldr	r0, [sp, #76]
 507:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 705              		.loc 1 507 3 is_stmt 1 view .LVU222
 706              	.LBB7:
 707              		.loc 1 507 8 view .LVU223
 708              	.LVL24:
 709              		.loc 1 507 16 is_stmt 0 view .LVU224
 710 0008 0022     		movs	r2, #0
 711              	.LVL25:
 712              	.L25:
 713              		.loc 1 507 30 discriminator 1 view .LVU225
 714 000a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 715              		.loc 1 507 3 discriminator 1 view .LVU226
 716 000e 9342     		cmp	r3, r2
 717 0010 0ED9     		bls	.L28
 508:Src/main.c    ****     connection[i][4] = connection[i][6];
 718              		.loc 1 508 5 is_stmt 1 discriminator 3 view .LVU227
 719              		.loc 1 508 34 is_stmt 0 discriminator 3 view .LVU228
 720 0012 02EB4201 		add	r1, r2, r2, lsl #1
 721 0016 8B00     		lsls	r3, r1, #2
 722 0018 0344     		add	r3, r3, r0
 723              		.loc 1 508 37 discriminator 3 view .LVU229
 724 001a 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 725              		.loc 1 508 22 discriminator 3 view .LVU230
 726 001c 1971     		strb	r1, [r3, #4]
 509:Src/main.c    ****     connection[i][5] = connection[i][7];
 727              		.loc 1 509 5 is_stmt 1 discriminator 3 view .LVU231
 728              		.loc 1 509 37 is_stmt 0 discriminator 3 view .LVU232
 729 001e D979     		ldrb	r1, [r3, #7]	@ zero_extendqisi2
 730              		.loc 1 509 22 discriminator 3 view .LVU233
 731 0020 5971     		strb	r1, [r3, #5]
 510:Src/main.c    ****     connection[i][6] = connection[i][8];
 732              		.loc 1 510 5 is_stmt 1 discriminator 3 view .LVU234
 733              		.loc 1 510 37 is_stmt 0 discriminator 3 view .LVU235
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 25


 734 0022 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 735              		.loc 1 510 22 discriminator 3 view .LVU236
 736 0024 9971     		strb	r1, [r3, #6]
 511:Src/main.c    ****     connection[i][7] = connection[i][9];
 737              		.loc 1 511 5 is_stmt 1 discriminator 3 view .LVU237
 738              		.loc 1 511 37 is_stmt 0 discriminator 3 view .LVU238
 739 0026 597A     		ldrb	r1, [r3, #9]	@ zero_extendqisi2
 740              		.loc 1 511 22 discriminator 3 view .LVU239
 741 0028 D971     		strb	r1, [r3, #7]
 507:Src/main.c    ****     connection[i][4] = connection[i][6];
 742              		.loc 1 507 42 discriminator 3 view .LVU240
 743 002a 0132     		adds	r2, r2, #1
 744              	.LVL26:
 507:Src/main.c    ****     connection[i][4] = connection[i][6];
 745              		.loc 1 507 42 discriminator 3 view .LVU241
 746 002c D2B2     		uxtb	r2, r2
 747              	.LVL27:
 507:Src/main.c    ****     connection[i][4] = connection[i][6];
 748              		.loc 1 507 42 discriminator 3 view .LVU242
 749 002e ECE7     		b	.L25
 750              	.L28:
 507:Src/main.c    ****     connection[i][4] = connection[i][6];
 751              		.loc 1 507 42 discriminator 3 view .LVU243
 752              	.LBE7:
 512:Src/main.c    ****   }
 513:Src/main.c    **** }
 753              		.loc 1 513 1 view .LVU244
 754 0030 04B0     		add	sp, sp, #16
 755              	.LCFI16:
 756              		.cfi_def_cfa_offset 0
 757 0032 7047     		bx	lr
 758              		.cfi_endproc
 759              	.LFE74:
 761              		.section	.text.FAULT_check,"ax",%progbits
 762              		.align	1
 763              		.global	FAULT_check
 764              		.syntax unified
 765              		.thumb
 766              		.thumb_func
 767              		.fpu softvfp
 769              	FAULT_check:
 770              	.LVL28:
 771              	.LFB75:
 514:Src/main.c    **** 
 515:Src/main.c    **** void FAULT_check(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool tempFault[12][4], b
 772              		.loc 1 515 191 is_stmt 1 view -0
 773              		.cfi_startproc
 774              		@ args = 100, pretend = 16, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              		.loc 1 515 191 is_stmt 0 view .LVU246
 777 0000 84B0     		sub	sp, sp, #16
 778              	.LCFI17:
 779              		.cfi_def_cfa_offset 16
 780 0002 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 781              	.LCFI18:
 782              		.cfi_def_cfa_offset 56
 783              		.cfi_offset 3, -56
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 26


 784              		.cfi_offset 4, -52
 785              		.cfi_offset 5, -48
 786              		.cfi_offset 6, -44
 787              		.cfi_offset 7, -40
 788              		.cfi_offset 8, -36
 789              		.cfi_offset 9, -32
 790              		.cfi_offset 10, -28
 791              		.cfi_offset 11, -24
 792              		.cfi_offset 14, -20
 793 0006 0AAC     		add	r4, sp, #40
 794 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 795 000c DDF87490 		ldr	r9, [sp, #116]
 796 0010 1E9E     		ldr	r6, [sp, #120]
 797 0012 1F9F     		ldr	r7, [sp, #124]
 798 0014 DDF88080 		ldr	r8, [sp, #128]
 799 0018 2198     		ldr	r0, [sp, #132]
 800 001a 229D     		ldr	r5, [sp, #136]
 516:Src/main.c    **** 
 517:Src/main.c    ****   bool BMS_FAULT = false;
 801              		.loc 1 517 3 is_stmt 1 view .LVU247
 802              	.LVL29:
 518:Src/main.c    ****   
 519:Src/main.c    ****   cellNumber[0] = 0; // OV cell number
 803              		.loc 1 519 3 view .LVU248
 804              		.loc 1 519 17 is_stmt 0 view .LVU249
 805 001c 0024     		movs	r4, #0
 806 001e 0470     		strb	r4, [r0]
 520:Src/main.c    ****   cellNumber[1] = 0; // UV cell number
 807              		.loc 1 520 3 is_stmt 1 view .LVU250
 808              		.loc 1 520 17 is_stmt 0 view .LVU251
 809 0020 4470     		strb	r4, [r0, #1]
 521:Src/main.c    ****   cellNumber[2] = 0; // OT cell number
 810              		.loc 1 521 3 is_stmt 1 view .LVU252
 811              		.loc 1 521 17 is_stmt 0 view .LVU253
 812 0022 8470     		strb	r4, [r0, #2]
 522:Src/main.c    ****   cellNumber[3] = 0; // disconnected cell cell number
 813              		.loc 1 522 3 is_stmt 1 view .LVU254
 814              		.loc 1 522 17 is_stmt 0 view .LVU255
 815 0024 C470     		strb	r4, [r0, #3]
 523:Src/main.c    ****   cellNumber[4] = 0; // disconnected temp sensor cell number
 816              		.loc 1 523 3 is_stmt 1 view .LVU256
 817              		.loc 1 523 17 is_stmt 0 view .LVU257
 818 0026 0471     		strb	r4, [r0, #4]
 524:Src/main.c    **** 
 525:Src/main.c    ****   faultType[0] = 0; // disconnected temp sensor fault
 819              		.loc 1 525 3 is_stmt 1 view .LVU258
 820              		.loc 1 525 16 is_stmt 0 view .LVU259
 821 0028 2C70     		strb	r4, [r5]
 526:Src/main.c    ****   faultType[1] = 0; // disconnected cell fault
 822              		.loc 1 526 3 is_stmt 1 view .LVU260
 823              		.loc 1 526 16 is_stmt 0 view .LVU261
 824 002a 6C70     		strb	r4, [r5, #1]
 527:Src/main.c    ****   faultType[2] = 0; // OT fault
 825              		.loc 1 527 3 is_stmt 1 view .LVU262
 826              		.loc 1 527 16 is_stmt 0 view .LVU263
 827 002c AC70     		strb	r4, [r5, #2]
 528:Src/main.c    ****   faultType[3] = 0; // UV fault
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 27


 828              		.loc 1 528 3 is_stmt 1 view .LVU264
 829              		.loc 1 528 16 is_stmt 0 view .LVU265
 830 002e EC70     		strb	r4, [r5, #3]
 529:Src/main.c    ****   faultType[4] = 0; // OV fault
 831              		.loc 1 529 3 is_stmt 1 view .LVU266
 832              		.loc 1 529 16 is_stmt 0 view .LVU267
 833 0030 2C71     		strb	r4, [r5, #4]
 530:Src/main.c    **** 
 531:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 834              		.loc 1 531 3 is_stmt 1 view .LVU268
 835              	.LBB8:
 836              		.loc 1 531 8 view .LVU269
 837              	.LVL30:
 838              		.loc 1 531 16 is_stmt 0 view .LVU270
 839 0032 A446     		mov	ip, r4
 840              		.loc 1 531 3 view .LVU271
 841 0034 36E0     		b	.L30
 842              	.LVL31:
 843              	.L32:
 844              	.LBB9:
 532:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 845              		.loc 1 532 51 discriminator 2 view .LVU272
 846 0036 0133     		adds	r3, r3, #1
 847              	.LVL32:
 848              		.loc 1 532 51 discriminator 2 view .LVU273
 849 0038 DBB2     		uxtb	r3, r3
 850              	.LVL33:
 851              	.L34:
 852              		.loc 1 532 32 discriminator 1 view .LVU274
 853 003a 9DF84A20 		ldrb	r2, [sp, #74]	@ zero_extendqisi2
 854              		.loc 1 532 5 discriminator 1 view .LVU275
 855 003e 9A42     		cmp	r2, r3
 856 0040 2CD9     		bls	.L45
 533:Src/main.c    ****       if (cellVoltage[i][j] >> cfg.OV_threshold) {
 857              		.loc 1 533 7 is_stmt 1 view .LVU276
 858              		.loc 1 533 22 is_stmt 0 view .LVU277
 859 0042 6146     		mov	r1, ip
 860 0044 0CEB4C0A 		add	r10, ip, ip, lsl #1
 861 0048 4FEACA0E 		lsl	lr, r10, #3
 862 004c CE44     		add	lr, lr, r9
 863              		.loc 1 533 25 view .LVU278
 864 004e 9A46     		mov	r10, r3
 865 0050 3EF813B0 		ldrh	fp, [lr, r3, lsl #1]
 866              		.loc 1 533 35 view .LVU279
 867 0054 BDF84EE0 		ldrh	lr, [sp, #78]
 868              		.loc 1 533 10 view .LVU280
 869 0058 5BFA0EFE 		asrs	lr, fp, lr
 870 005c 0BD0     		beq	.L31
 534:Src/main.c    ****         BMS_FAULT = true;
 871              		.loc 1 534 9 is_stmt 1 view .LVU281
 872              	.LVL34:
 535:Src/main.c    ****         faultType[4] = true;
 873              		.loc 1 535 9 view .LVU282
 874              		.loc 1 535 22 is_stmt 0 view .LVU283
 875 005e 0124     		movs	r4, #1
 876 0060 2C71     		strb	r4, [r5, #4]
 536:Src/main.c    ****         cellNumber[0] = i * cfg.numOfCellsPerIC + j + 1;
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 28


 877              		.loc 1 536 9 is_stmt 1 view .LVU284
 878              		.loc 1 536 27 is_stmt 0 view .LVU285
 879 0062 0CFB02FE 		mul	lr, ip, r2
 880 0066 5FFA8EFE 		uxtb	lr, lr
 881              		.loc 1 536 49 view .LVU286
 882 006a 9E44     		add	lr, lr, r3
 883 006c 5FFA8EFE 		uxtb	lr, lr
 884              		.loc 1 536 53 view .LVU287
 885 0070 A644     		add	lr, lr, r4
 886              		.loc 1 536 23 view .LVU288
 887 0072 80F800E0 		strb	lr, [r0]
 888              	.LVL35:
 889              	.L31:
 537:Src/main.c    ****       }
 538:Src/main.c    ****       if (cellConnection[i][j] == 0) {
 890              		.loc 1 538 7 is_stmt 1 view .LVU289
 891              		.loc 1 538 25 is_stmt 0 view .LVU290
 892 0076 01EB4101 		add	r1, r1, r1, lsl #1
 893 007a 4FEA810E 		lsl	lr, r1, #2
 894 007e C644     		add	lr, lr, r8
 895              		.loc 1 538 28 view .LVU291
 896 0080 1EF80A10 		ldrb	r1, [lr, r10]	@ zero_extendqisi2
 897              		.loc 1 538 10 view .LVU292
 898 0084 0029     		cmp	r1, #0
 899 0086 D6D1     		bne	.L32
 539:Src/main.c    ****         BMS_FAULT = true;
 900              		.loc 1 539 9 is_stmt 1 view .LVU293
 901              	.LVL36:
 540:Src/main.c    ****         faultType[1] = true;
 902              		.loc 1 540 9 view .LVU294
 903              		.loc 1 540 22 is_stmt 0 view .LVU295
 904 0088 0124     		movs	r4, #1
 905 008a 6C70     		strb	r4, [r5, #1]
 541:Src/main.c    ****         cellNumber[3] = i * cfg.numOfCellsPerIC + j + 1;
 906              		.loc 1 541 9 is_stmt 1 view .LVU296
 907              		.loc 1 541 27 is_stmt 0 view .LVU297
 908 008c 0CFB02F2 		mul	r2, ip, r2
 909 0090 D2B2     		uxtb	r2, r2
 910              		.loc 1 541 49 view .LVU298
 911 0092 1A44     		add	r2, r2, r3
 912 0094 D2B2     		uxtb	r2, r2
 913              		.loc 1 541 53 view .LVU299
 914 0096 2244     		add	r2, r2, r4
 915              		.loc 1 541 23 view .LVU300
 916 0098 C270     		strb	r2, [r0, #3]
 917 009a CCE7     		b	.L32
 918              	.LVL37:
 919              	.L45:
 920              		.loc 1 541 23 view .LVU301
 921              	.LBE9:
 531:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 922              		.loc 1 531 42 discriminator 2 view .LVU302
 923 009c 0CF1010C 		add	ip, ip, #1
 924              	.LVL38:
 531:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 925              		.loc 1 531 42 discriminator 2 view .LVU303
 926 00a0 5FFA8CFC 		uxtb	ip, ip
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 29


 927              	.LVL39:
 928              	.L30:
 531:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 929              		.loc 1 531 30 discriminator 1 view .LVU304
 930 00a4 9DF828E0 		ldrb	lr, [sp, #40]	@ zero_extendqisi2
 531:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 931              		.loc 1 531 3 discriminator 1 view .LVU305
 932 00a8 E645     		cmp	lr, ip
 933 00aa 01D9     		bls	.L46
 934              	.LBB10:
 532:Src/main.c    ****       if (cellVoltage[i][j] >> cfg.OV_threshold) {
 935              		.loc 1 532 18 view .LVU306
 936 00ac 0023     		movs	r3, #0
 937 00ae C4E7     		b	.L34
 938              	.L46:
 939              	.LBE10:
 940              	.LBE8:
 941              	.LBB11:
 542:Src/main.c    ****       }
 543:Src/main.c    ****     }
 544:Src/main.c    ****   }
 545:Src/main.c    **** 
 546:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 942              		.loc 1 546 16 view .LVU307
 943 00b0 0021     		movs	r1, #0
 944 00b2 32E0     		b	.L35
 945              	.LVL40:
 946              	.L37:
 947              	.LBB12:
 547:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 948              		.loc 1 547 50 discriminator 2 view .LVU308
 949 00b4 0133     		adds	r3, r3, #1
 950              	.LVL41:
 951              		.loc 1 547 50 discriminator 2 view .LVU309
 952 00b6 DBB2     		uxtb	r3, r3
 953              	.LVL42:
 954              	.L39:
 955              		.loc 1 547 32 discriminator 1 view .LVU310
 956 00b8 9DF84B20 		ldrb	r2, [sp, #75]	@ zero_extendqisi2
 957              		.loc 1 547 5 discriminator 1 view .LVU311
 958 00bc 9A42     		cmp	r2, r3
 959 00be 2AD9     		bls	.L47
 548:Src/main.c    ****       if (tempFault[i][j] == 1) {
 960              		.loc 1 548 7 is_stmt 1 view .LVU312
 961              		.loc 1 548 20 is_stmt 0 view .LVU313
 962 00c0 4FEA810C 		lsl	ip, r1, #2
 963 00c4 06EB0C02 		add	r2, r6, ip
 964              		.loc 1 548 23 view .LVU314
 965 00c8 9946     		mov	r9, r3
 966 00ca 12F80380 		ldrb	r8, [r2, r3]	@ zero_extendqisi2
 967              		.loc 1 548 10 view .LVU315
 968 00ce B8F1000F 		cmp	r8, #0
 969 00d2 0CD0     		beq	.L36
 549:Src/main.c    ****         BMS_FAULT = true;
 970              		.loc 1 549 9 is_stmt 1 view .LVU316
 971              	.LVL43:
 550:Src/main.c    ****         faultType[2] = true;
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 30


 972              		.loc 1 550 9 view .LVU317
 973              		.loc 1 550 22 is_stmt 0 view .LVU318
 974 00d4 0122     		movs	r2, #1
 975 00d6 AA70     		strb	r2, [r5, #2]
 551:Src/main.c    ****         cellNumber[2] = i * cfg.numOfCellsPerIC + j*2 + 1;
 976              		.loc 1 551 9 is_stmt 1 view .LVU319
 977              		.loc 1 551 32 is_stmt 0 view .LVU320
 978 00d8 9DF84A20 		ldrb	r2, [sp, #74]	@ zero_extendqisi2
 979              		.loc 1 551 27 view .LVU321
 980 00dc 01FB02F2 		mul	r2, r1, r2
 981 00e0 D2B2     		uxtb	r2, r2
 982              		.loc 1 551 49 view .LVU322
 983 00e2 02EB4302 		add	r2, r2, r3, lsl #1
 984 00e6 D2B2     		uxtb	r2, r2
 985              		.loc 1 551 55 view .LVU323
 986 00e8 0132     		adds	r2, r2, #1
 987              		.loc 1 551 23 view .LVU324
 988 00ea 8270     		strb	r2, [r0, #2]
 549:Src/main.c    ****         BMS_FAULT = true;
 989              		.loc 1 549 19 view .LVU325
 990 00ec 4446     		mov	r4, r8
 991              	.LVL44:
 992              	.L36:
 552:Src/main.c    ****       }
 553:Src/main.c    ****       if (dcFault[i][j] == 1) {
 993              		.loc 1 553 7 is_stmt 1 view .LVU326
 994              		.loc 1 553 18 is_stmt 0 view .LVU327
 995 00ee BC44     		add	ip, ip, r7
 996              		.loc 1 553 21 view .LVU328
 997 00f0 1CF809C0 		ldrb	ip, [ip, r9]	@ zero_extendqisi2
 998              		.loc 1 553 10 view .LVU329
 999 00f4 BCF1000F 		cmp	ip, #0
 1000 00f8 DCD0     		beq	.L37
 554:Src/main.c    ****         BMS_FAULT = true;
 1001              		.loc 1 554 9 is_stmt 1 view .LVU330
 1002              	.LVL45:
 555:Src/main.c    ****         faultType[0] = true;
 1003              		.loc 1 555 9 view .LVU331
 1004              		.loc 1 555 22 is_stmt 0 view .LVU332
 1005 00fa 0122     		movs	r2, #1
 1006 00fc 2A70     		strb	r2, [r5]
 556:Src/main.c    ****         cellNumber[4] = i * cfg.numOfCellsPerIC + j*2 + 1;
 1007              		.loc 1 556 9 is_stmt 1 view .LVU333
 1008              		.loc 1 556 32 is_stmt 0 view .LVU334
 1009 00fe 9DF84A20 		ldrb	r2, [sp, #74]	@ zero_extendqisi2
 1010              		.loc 1 556 27 view .LVU335
 1011 0102 01FB02F2 		mul	r2, r1, r2
 1012 0106 D2B2     		uxtb	r2, r2
 1013              		.loc 1 556 49 view .LVU336
 1014 0108 02EB4302 		add	r2, r2, r3, lsl #1
 1015 010c D2B2     		uxtb	r2, r2
 1016              		.loc 1 556 55 view .LVU337
 1017 010e 0132     		adds	r2, r2, #1
 1018              		.loc 1 556 23 view .LVU338
 1019 0110 0271     		strb	r2, [r0, #4]
 554:Src/main.c    ****         BMS_FAULT = true;
 1020              		.loc 1 554 19 view .LVU339
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 31


 1021 0112 6446     		mov	r4, ip
 1022 0114 CEE7     		b	.L37
 1023              	.LVL46:
 1024              	.L47:
 554:Src/main.c    ****         BMS_FAULT = true;
 1025              		.loc 1 554 19 view .LVU340
 1026              	.LBE12:
 546:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 1027              		.loc 1 546 42 discriminator 2 view .LVU341
 1028 0116 0131     		adds	r1, r1, #1
 1029              	.LVL47:
 546:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 1030              		.loc 1 546 42 discriminator 2 view .LVU342
 1031 0118 C9B2     		uxtb	r1, r1
 1032              	.LVL48:
 1033              	.L35:
 546:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 1034              		.loc 1 546 3 discriminator 1 view .LVU343
 1035 011a 8E45     		cmp	lr, r1
 1036 011c 01D9     		bls	.L48
 1037              	.LBB13:
 547:Src/main.c    ****       if (tempFault[i][j] == 1) {
 1038              		.loc 1 547 18 view .LVU344
 1039 011e 0023     		movs	r3, #0
 1040 0120 CAE7     		b	.L39
 1041              	.L48:
 1042              	.LBE13:
 1043              	.LBE11:
 557:Src/main.c    ****       }
 558:Src/main.c    ****     }
 559:Src/main.c    ****   }
 560:Src/main.c    **** 
 561:Src/main.c    ****   if (BMS_FAULT == false)
 1044              		.loc 1 561 3 is_stmt 1 view .LVU345
 1045              		.loc 1 561 6 is_stmt 0 view .LVU346
 1046 0122 24B1     		cbz	r4, .L49
 1047              	.LVL49:
 1048              	.L40:
 562:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 563:Src/main.c    ****   if (BMS_FAULT == true)
 1049              		.loc 1 563 3 is_stmt 1 view .LVU347
 1050              		.loc 1 563 6 is_stmt 0 view .LVU348
 1051 0124 54B9     		cbnz	r4, .L50
 1052              	.L29:
 564:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_SET);
 565:Src/main.c    **** }
 1053              		.loc 1 565 1 view .LVU349
 1054 0126 BDE8F84F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1055              	.LCFI19:
 1056              		.cfi_remember_state
 1057              		.cfi_restore 14
 1058              		.cfi_restore 11
 1059              		.cfi_restore 10
 1060              		.cfi_restore 9
 1061              		.cfi_restore 8
 1062              		.cfi_restore 7
 1063              		.cfi_restore 6
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 32


 1064              		.cfi_restore 5
 1065              		.cfi_restore 4
 1066              		.cfi_restore 3
 1067              		.cfi_def_cfa_offset 16
 1068              	.LVL50:
 1069              		.loc 1 565 1 view .LVU350
 1070 012a 04B0     		add	sp, sp, #16
 1071              	.LCFI20:
 1072              		.cfi_def_cfa_offset 0
 1073 012c 7047     		bx	lr
 1074              	.LVL51:
 1075              	.L49:
 1076              	.LCFI21:
 1077              		.cfi_restore_state
 562:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 1078              		.loc 1 562 5 is_stmt 1 view .LVU351
 1079 012e 0022     		movs	r2, #0
 1080 0130 4FF40071 		mov	r1, #512
 1081              	.LVL52:
 562:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 1082              		.loc 1 562 5 is_stmt 0 view .LVU352
 1083 0134 0548     		ldr	r0, .L51
 1084 0136 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1085              	.LVL53:
 1086 013a F3E7     		b	.L40
 1087              	.L50:
 564:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_SET);
 1088              		.loc 1 564 5 is_stmt 1 view .LVU353
 1089 013c 0122     		movs	r2, #1
 1090 013e 4FF40071 		mov	r1, #512
 1091 0142 0248     		ldr	r0, .L51
 1092 0144 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1093              	.LVL54:
 1094              		.loc 1 565 1 is_stmt 0 view .LVU354
 1095 0148 EDE7     		b	.L29
 1096              	.L52:
 1097 014a 00BF     		.align	2
 1098              	.L51:
 1099 014c 000C0140 		.word	1073810432
 1100              		.cfi_endproc
 1101              	.LFE75:
 1103              		.section	.text.setDischarge,"ax",%progbits
 1104              		.align	1
 1105              		.global	setDischarge
 1106              		.syntax unified
 1107              		.thumb
 1108              		.thumb_func
 1109              		.fpu softvfp
 1111              	setDischarge:
 1112              	.LVL55:
 1113              	.LFB76:
 566:Src/main.c    **** 
 567:Src/main.c    **** void setDischarge(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool cellDischarge[12][
 1114              		.loc 1 567 124 is_stmt 1 view -0
 1115              		.cfi_startproc
 1116              		@ args = 88, pretend = 16, frame = 0
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 33


 1118              		.loc 1 567 124 is_stmt 0 view .LVU356
 1119 0000 84B0     		sub	sp, sp, #16
 1120              	.LCFI22:
 1121              		.cfi_def_cfa_offset 16
 1122 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1123              	.LCFI23:
 1124              		.cfi_def_cfa_offset 36
 1125              		.cfi_offset 4, -36
 1126              		.cfi_offset 5, -32
 1127              		.cfi_offset 6, -28
 1128              		.cfi_offset 7, -24
 1129              		.cfi_offset 14, -20
 1130 0004 05AC     		add	r4, sp, #20
 1131 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1132 000a DDF860C0 		ldr	ip, [sp, #96]
 1133 000e 199F     		ldr	r7, [sp, #100]
 568:Src/main.c    **** 
 569:Src/main.c    **** 	chargeRate = 2;												// initialize the charging current to normal operation
 1134              		.loc 1 569 2 is_stmt 1 view .LVU357
 1135              	.LVL56:
 570:Src/main.c    **** 	
 571:Src/main.c    **** 	/* iterate through every cell */
 572:Src/main.c    **** 	for (int board = 0; board < cfg.numOfICs; board++) {
 1136              		.loc 1 572 2 view .LVU358
 1137              	.LBB14:
 1138              		.loc 1 572 7 view .LVU359
 1139              		.loc 1 572 11 is_stmt 0 view .LVU360
 1140 0010 0025     		movs	r5, #0
 1141              	.LBE14:
 569:Src/main.c    **** 	
 1142              		.loc 1 569 13 view .LVU361
 1143 0012 0226     		movs	r6, #2
 1144              	.LBB17:
 1145              		.loc 1 572 2 view .LVU362
 1146 0014 30E0     		b	.L54
 1147              	.LVL57:
 1148              	.L56:
 1149              	.LBB15:
 573:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 574:Src/main.c    **** 
 575:Src/main.c    **** 			/* If any cell exceeds BMSFault_Threshold2 Throw BMS Fault */
 576:Src/main.c    **** 			if (cellVoltage[board][cell] > cfg.OV_threshold)
 577:Src/main.c    **** 				chargeRate = 0;
 578:Src/main.c    **** 
 579:Src/main.c    **** 			/* Set balancing: if the cell voltage is more than the set balancingDifference above the minimum
 580:Src/main.c    **** 			if (cellVoltage[board][cell] > (minimum + cfg.balancing_difference))
 581:Src/main.c    **** 				cellDischarge[board][cell] = 1;
 582:Src/main.c    ****       else
 583:Src/main.c    ****         cellDischarge[board][cell] = 0;
 1150              		.loc 1 583 9 is_stmt 1 view .LVU363
 1151              		.loc 1 583 22 is_stmt 0 view .LVU364
 1152 0016 07EBC401 		add	r1, r7, r4, lsl #3
 1153              		.loc 1 583 36 view .LVU365
 1154 001a 0020     		movs	r0, #0
 1155 001c C854     		strb	r0, [r1, r3]
 1156 001e 1CE0     		b	.L57
 1157              	.L62:
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 34


 584:Src/main.c    ****       
 585:Src/main.c    **** 
 586:Src/main.c    **** 			/* If any cell exceeds higherVoltage_Threshold: Set charge current to 0 and continue balancing.
 587:Src/main.c    **** 			 * If any cell exceeds lowerVoltage_Threshold: lower charge current to lowerCurrent and continue
 588:Src/main.c    **** 			 */
 589:Src/main.c    **** 			if (cellVoltage[board][cell] > cfg.stopCharge_threshold)
 590:Src/main.c    **** 				chargeRate = 0;
 1158              		.loc 1 590 16 view .LVU366
 1159 0020 0026     		movs	r6, #0
 1160              	.LVL58:
 1161              	.L58:
 573:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1162              		.loc 1 573 54 discriminator 2 view .LVU367
 1163 0022 0133     		adds	r3, r3, #1
 1164              	.LVL59:
 1165              	.L60:
 573:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1166              		.loc 1 573 32 discriminator 1 view .LVU368
 1167 0024 9DF83620 		ldrb	r2, [sp, #54]	@ zero_extendqisi2
 573:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1168              		.loc 1 573 3 discriminator 1 view .LVU369
 1169 0028 9A42     		cmp	r2, r3
 1170 002a 24DD     		ble	.L66
 576:Src/main.c    **** 				chargeRate = 0;
 1171              		.loc 1 576 4 is_stmt 1 view .LVU370
 576:Src/main.c    **** 				chargeRate = 0;
 1172              		.loc 1 576 19 is_stmt 0 view .LVU371
 1173 002c 2C46     		mov	r4, r5
 1174 002e 05EB4501 		add	r1, r5, r5, lsl #1
 1175 0032 CA00     		lsls	r2, r1, #3
 1176 0034 6244     		add	r2, r2, ip
 576:Src/main.c    **** 				chargeRate = 0;
 1177              		.loc 1 576 26 view .LVU372
 1178 0036 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 576:Src/main.c    **** 				chargeRate = 0;
 1179              		.loc 1 576 38 view .LVU373
 1180 003a BDF83A10 		ldrh	r1, [sp, #58]
 576:Src/main.c    **** 				chargeRate = 0;
 1181              		.loc 1 576 7 view .LVU374
 1182 003e 8842     		cmp	r0, r1
 1183 0040 00D9     		bls	.L55
 1184              	.LVL60:
 577:Src/main.c    **** 
 1185              		.loc 1 577 16 view .LVU375
 1186 0042 0026     		movs	r6, #0
 1187              	.LVL61:
 1188              	.L55:
 580:Src/main.c    **** 				cellDischarge[board][cell] = 1;
 1189              		.loc 1 580 4 is_stmt 1 view .LVU376
 580:Src/main.c    **** 				cellDischarge[board][cell] = 1;
 1190              		.loc 1 580 49 is_stmt 0 view .LVU377
 1191 0044 BDF840E0 		ldrh	lr, [sp, #64]
 580:Src/main.c    **** 				cellDischarge[board][cell] = 1;
 1192              		.loc 1 580 44 view .LVU378
 1193 0048 1049     		ldr	r1, .L68
 1194 004a 0988     		ldrh	r1, [r1]
 1195 004c 7144     		add	r1, r1, lr
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 35


 580:Src/main.c    **** 				cellDischarge[board][cell] = 1;
 1196              		.loc 1 580 7 view .LVU379
 1197 004e 8842     		cmp	r0, r1
 1198 0050 E1DD     		ble	.L56
 581:Src/main.c    ****       else
 1199              		.loc 1 581 5 is_stmt 1 view .LVU380
 581:Src/main.c    ****       else
 1200              		.loc 1 581 18 is_stmt 0 view .LVU381
 1201 0052 07EBC401 		add	r1, r7, r4, lsl #3
 581:Src/main.c    ****       else
 1202              		.loc 1 581 32 view .LVU382
 1203 0056 0120     		movs	r0, #1
 1204 0058 C854     		strb	r0, [r1, r3]
 1205              	.L57:
 589:Src/main.c    **** 				chargeRate = 0;
 1206              		.loc 1 589 4 is_stmt 1 view .LVU383
 589:Src/main.c    **** 				chargeRate = 0;
 1207              		.loc 1 589 26 is_stmt 0 view .LVU384
 1208 005a 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 589:Src/main.c    **** 				chargeRate = 0;
 1209              		.loc 1 589 38 view .LVU385
 1210 005e BDF83E10 		ldrh	r1, [sp, #62]
 589:Src/main.c    **** 				chargeRate = 0;
 1211              		.loc 1 589 7 view .LVU386
 1212 0062 8A42     		cmp	r2, r1
 1213 0064 DCD8     		bhi	.L62
 591:Src/main.c    **** 			else if ((cellVoltage[board][cell] > cfg.slowCharge_threshold) && (chargeRate != 0))
 1214              		.loc 1 591 9 is_stmt 1 view .LVU387
 1215              		.loc 1 591 44 is_stmt 0 view .LVU388
 1216 0066 BDF83C10 		ldrh	r1, [sp, #60]
 1217              		.loc 1 591 12 view .LVU389
 1218 006a 8A42     		cmp	r2, r1
 1219 006c D9D9     		bls	.L58
 1220              		.loc 1 591 67 discriminator 1 view .LVU390
 1221 006e 002E     		cmp	r6, #0
 1222 0070 D7D0     		beq	.L58
 592:Src/main.c    **** 				chargeRate = 1;
 1223              		.loc 1 592 16 view .LVU391
 1224 0072 0126     		movs	r6, #1
 1225              	.LVL62:
 1226              		.loc 1 592 16 view .LVU392
 1227 0074 D5E7     		b	.L58
 1228              	.LVL63:
 1229              	.L66:
 1230              		.loc 1 592 16 view .LVU393
 1231              	.LBE15:
 572:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1232              		.loc 1 572 49 discriminator 2 view .LVU394
 1233 0076 0135     		adds	r5, r5, #1
 1234              	.LVL64:
 1235              	.L54:
 572:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1236              		.loc 1 572 33 discriminator 1 view .LVU395
 1237 0078 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 572:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1238              		.loc 1 572 2 discriminator 1 view .LVU396
 1239 007c AB42     		cmp	r3, r5
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 36


 1240 007e 01DD     		ble	.L67
 1241              	.LBB16:
 573:Src/main.c    **** 
 1242              		.loc 1 573 12 view .LVU397
 1243 0080 0023     		movs	r3, #0
 1244 0082 CFE7     		b	.L60
 1245              	.L67:
 1246              	.LBE16:
 1247              	.LBE17:
 593:Src/main.c    **** 		}
 594:Src/main.c    **** 	 }
 595:Src/main.c    **** }
 1248              		.loc 1 595 1 view .LVU398
 1249 0084 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 1250              	.LCFI24:
 1251              		.cfi_restore 14
 1252              		.cfi_restore 7
 1253              		.cfi_restore 6
 1254              		.cfi_restore 5
 1255              		.cfi_restore 4
 1256              		.cfi_def_cfa_offset 16
 1257              	.LVL65:
 1258              		.loc 1 595 1 view .LVU399
 1259 0088 04B0     		add	sp, sp, #16
 1260              	.LCFI25:
 1261              		.cfi_def_cfa_offset 0
 1262 008a 7047     		bx	lr
 1263              	.L69:
 1264              		.align	2
 1265              	.L68:
 1266 008c 00000000 		.word	minimum
 1267              		.cfi_endproc
 1268              	.LFE76:
 1270              		.section	.text.CELLVAL_message,"ax",%progbits
 1271              		.align	1
 1272              		.global	CELLVAL_message
 1273              		.syntax unified
 1274              		.thumb
 1275              		.thumb_func
 1276              		.fpu softvfp
 1278              	CELLVAL_message:
 1279              	.LVL66:
 1280              	.LFB77:
 596:Src/main.c    **** 
 597:Src/main.c    **** void CELLVAL_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], uint16_t cellTemp[12
 1281              		.loc 1 597 197 is_stmt 1 view -0
 1282              		.cfi_startproc
 1283              		@ args = 100, pretend = 16, frame = 0
 1284              		@ frame_needed = 0, uses_anonymous_args = 0
 1285              		.loc 1 597 197 is_stmt 0 view .LVU401
 1286 0000 84B0     		sub	sp, sp, #16
 1287              	.LCFI26:
 1288              		.cfi_def_cfa_offset 16
 1289 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1290              	.LCFI27:
 1291              		.cfi_def_cfa_offset 40
 1292              		.cfi_offset 4, -40
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 37


 1293              		.cfi_offset 5, -36
 1294              		.cfi_offset 6, -32
 1295              		.cfi_offset 7, -28
 1296              		.cfi_offset 8, -24
 1297              		.cfi_offset 14, -20
 1298 0006 06AC     		add	r4, sp, #24
 1299 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1300 000c DDF86480 		ldr	r8, [sp, #100]
 1301 0010 1A9F     		ldr	r7, [sp, #104]
 1302 0012 1C9E     		ldr	r6, [sp, #112]
 598:Src/main.c    **** 	
 599:Src/main.c    ****   // takes in only relevant data (cells 1-4, 7-10)
 600:Src/main.c    ****   // need to know how to map temp sensor to cell
 601:Src/main.c    **** 
 602:Src/main.c    ****   TxHeader.StdId = CELLVAL_ID;
 1303              		.loc 1 602 3 is_stmt 1 view .LVU402
 1304              		.loc 1 602 18 is_stmt 0 view .LVU403
 1305 0014 254B     		ldr	r3, .L80
 1306 0016 0722     		movs	r2, #7
 1307 0018 1A60     		str	r2, [r3]
 603:Src/main.c    ****   TxHeader.DLC = 6;
 1308              		.loc 1 603 3 is_stmt 1 view .LVU404
 1309              		.loc 1 603 16 is_stmt 0 view .LVU405
 1310 001a 0622     		movs	r2, #6
 1311 001c 1A61     		str	r2, [r3, #16]
 604:Src/main.c    **** 
 605:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 1312              		.loc 1 605 3 is_stmt 1 view .LVU406
 1313              	.LBB18:
 1314              		.loc 1 605 8 view .LVU407
 1315              	.LVL67:
 1316              		.loc 1 605 16 is_stmt 0 view .LVU408
 1317 001e 0025     		movs	r5, #0
 1318              		.loc 1 605 3 view .LVU409
 1319 0020 3AE0     		b	.L71
 1320              	.LVL68:
 1321              	.L72:
 1322              	.LBB19:
 606:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 607:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number
 608:Src/main.c    ****       if (cellDischarge[i][j] == 1)
 609:Src/main.c    ****         CELLVAL_DATA[1] = 0xFF;
 610:Src/main.c    ****       else
 611:Src/main.c    ****         CELLVAL_DATA[1] = 0x00;
 1323              		.loc 1 611 9 is_stmt 1 view .LVU410
 1324              		.loc 1 611 25 is_stmt 0 view .LVU411
 1325 0022 2349     		ldr	r1, .L80+4
 1326 0024 0020     		movs	r0, #0
 1327 0026 4870     		strb	r0, [r1, #1]
 1328              	.L73:
 612:Src/main.c    ****       //CELLVAL_DATA[1] = (uint8_t) cellConnection[i][j] & 0x01;
 613:Src/main.c    ****       //CELLVAL_DATA[1] = (uint8_t) ((dcFault[i][(uint8_t) j/2] & 0x08) | (cellDischarge[i][j] & 0x
 614:Src/main.c    ****       CELLVAL_DATA[2] = (uint8_t) ((cellVoltage[i][j] >> 8) & 0xFF);
 1329              		.loc 1 614 7 is_stmt 1 discriminator 2 view .LVU412
 1330              		.loc 1 614 48 is_stmt 0 discriminator 2 view .LVU413
 1331 0028 02EB4202 		add	r2, r2, r2, lsl #1
 1332 002c D100     		lsls	r1, r2, #3
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 38


 1333 002e 4144     		add	r1, r1, r8
 1334              		.loc 1 614 51 discriminator 2 view .LVU414
 1335 0030 31F81C00 		ldrh	r0, [r1, ip, lsl #1]
 1336              		.loc 1 614 25 discriminator 2 view .LVU415
 1337 0034 000A     		lsrs	r0, r0, #8
 1338              		.loc 1 614 23 discriminator 2 view .LVU416
 1339 0036 1E4A     		ldr	r2, .L80+4
 1340 0038 9070     		strb	r0, [r2, #2]
 615:Src/main.c    ****       CELLVAL_DATA[3] = (uint8_t) (cellVoltage[i][j] & 0xFF);
 1341              		.loc 1 615 7 is_stmt 1 discriminator 2 view .LVU417
 1342              		.loc 1 615 25 is_stmt 0 discriminator 2 view .LVU418
 1343 003a 11F81C10 		ldrb	r1, [r1, ip, lsl #1]	@ zero_extendqisi2
 1344              		.loc 1 615 23 discriminator 2 view .LVU419
 1345 003e D170     		strb	r1, [r2, #3]
 616:Src/main.c    ****       CELLVAL_DATA[4] = (uint8_t) ((cellTemp[i][(uint8_t) j/2] >> 8) & 0xFF); // figure out how tem
 1346              		.loc 1 616 7 is_stmt 1 discriminator 2 view .LVU420
 1347              		.loc 1 616 45 is_stmt 0 discriminator 2 view .LVU421
 1348 0040 3B44     		add	r3, r3, r7
 1349              		.loc 1 616 60 discriminator 2 view .LVU422
 1350 0042 6008     		lsrs	r0, r4, #1
 1351              		.loc 1 616 48 discriminator 2 view .LVU423
 1352 0044 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 1353              		.loc 1 616 25 discriminator 2 view .LVU424
 1354 0048 090A     		lsrs	r1, r1, #8
 1355              		.loc 1 616 23 discriminator 2 view .LVU425
 1356 004a 1171     		strb	r1, [r2, #4]
 617:Src/main.c    ****       CELLVAL_DATA[5] = (uint8_t) (cellTemp[i][(uint8_t) j/2] & 0xFF);
 1357              		.loc 1 617 7 is_stmt 1 discriminator 2 view .LVU426
 1358              		.loc 1 617 25 is_stmt 0 discriminator 2 view .LVU427
 1359 004c 13F81030 		ldrb	r3, [r3, r0, lsl #1]	@ zero_extendqisi2
 1360              		.loc 1 617 23 discriminator 2 view .LVU428
 1361 0050 5371     		strb	r3, [r2, #5]
 618:Src/main.c    **** 
 619:Src/main.c    ****       HAL_CAN_AddTxMessage(&hcan, &TxHeader, CELLVAL_DATA, &TxMailbox);
 1362              		.loc 1 619 7 is_stmt 1 discriminator 2 view .LVU429
 1363 0052 184B     		ldr	r3, .L80+8
 1364 0054 1549     		ldr	r1, .L80
 1365 0056 1848     		ldr	r0, .L80+12
 1366 0058 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1367              	.LVL69:
 620:Src/main.c    ****       HAL_Delay(10);
 1368              		.loc 1 620 7 discriminator 2 view .LVU430
 1369 005c 0A20     		movs	r0, #10
 1370 005e FFF7FEFF 		bl	HAL_Delay
 1371              	.LVL70:
 606:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number
 1372              		.loc 1 606 51 is_stmt 0 discriminator 2 view .LVU431
 1373 0062 0134     		adds	r4, r4, #1
 1374              	.LVL71:
 606:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number
 1375              		.loc 1 606 51 discriminator 2 view .LVU432
 1376 0064 E4B2     		uxtb	r4, r4
 1377              	.LVL72:
 1378              	.L75:
 606:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number
 1379              		.loc 1 606 32 discriminator 1 view .LVU433
 1380 0066 9DF83A30 		ldrb	r3, [sp, #58]	@ zero_extendqisi2
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 39


 606:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number
 1381              		.loc 1 606 5 discriminator 1 view .LVU434
 1382 006a A342     		cmp	r3, r4
 1383 006c 12D9     		bls	.L78
 607:Src/main.c    ****       if (cellDischarge[i][j] == 1)
 1384              		.loc 1 607 7 is_stmt 1 view .LVU435
 607:Src/main.c    ****       if (cellDischarge[i][j] == 1)
 1385              		.loc 1 607 27 is_stmt 0 view .LVU436
 1386 006e 05FB03F3 		mul	r3, r5, r3
 1387 0072 DBB2     		uxtb	r3, r3
 607:Src/main.c    ****       if (cellDischarge[i][j] == 1)
 1388              		.loc 1 607 49 view .LVU437
 1389 0074 2344     		add	r3, r3, r4
 1390 0076 DBB2     		uxtb	r3, r3
 607:Src/main.c    ****       if (cellDischarge[i][j] == 1)
 1391              		.loc 1 607 53 view .LVU438
 1392 0078 0133     		adds	r3, r3, #1
 607:Src/main.c    ****       if (cellDischarge[i][j] == 1)
 1393              		.loc 1 607 23 view .LVU439
 1394 007a 0D4A     		ldr	r2, .L80+4
 1395 007c 1370     		strb	r3, [r2]
 608:Src/main.c    ****         CELLVAL_DATA[1] = 0xFF;
 1396              		.loc 1 608 7 is_stmt 1 view .LVU440
 608:Src/main.c    ****         CELLVAL_DATA[1] = 0xFF;
 1397              		.loc 1 608 24 is_stmt 0 view .LVU441
 1398 007e 2A46     		mov	r2, r5
 1399 0080 EB00     		lsls	r3, r5, #3
 1400 0082 F118     		adds	r1, r6, r3
 608:Src/main.c    ****         CELLVAL_DATA[1] = 0xFF;
 1401              		.loc 1 608 27 view .LVU442
 1402 0084 A446     		mov	ip, r4
 1403 0086 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 608:Src/main.c    ****         CELLVAL_DATA[1] = 0xFF;
 1404              		.loc 1 608 10 view .LVU443
 1405 0088 0029     		cmp	r1, #0
 1406 008a CAD0     		beq	.L72
 609:Src/main.c    ****       else
 1407              		.loc 1 609 9 is_stmt 1 view .LVU444
 609:Src/main.c    ****       else
 1408              		.loc 1 609 25 is_stmt 0 view .LVU445
 1409 008c 0849     		ldr	r1, .L80+4
 1410 008e FF20     		movs	r0, #255
 1411 0090 4870     		strb	r0, [r1, #1]
 1412 0092 C9E7     		b	.L73
 1413              	.L78:
 1414              	.LBE19:
 605:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 1415              		.loc 1 605 42 discriminator 2 view .LVU446
 1416 0094 0135     		adds	r5, r5, #1
 1417              	.LVL73:
 605:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 1418              		.loc 1 605 42 discriminator 2 view .LVU447
 1419 0096 EDB2     		uxtb	r5, r5
 1420              	.LVL74:
 1421              	.L71:
 605:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 1422              		.loc 1 605 30 discriminator 1 view .LVU448
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 40


 1423 0098 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 605:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 1424              		.loc 1 605 3 discriminator 1 view .LVU449
 1425 009c AB42     		cmp	r3, r5
 1426 009e 01D9     		bls	.L79
 1427              	.LBB20:
 606:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number
 1428              		.loc 1 606 18 view .LVU450
 1429 00a0 0024     		movs	r4, #0
 1430 00a2 E0E7     		b	.L75
 1431              	.L79:
 1432              	.LBE20:
 1433              	.LBE18:
 621:Src/main.c    ****     }
 622:Src/main.c    ****   }
 623:Src/main.c    **** }
 1434              		.loc 1 623 1 view .LVU451
 1435 00a4 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1436              	.LCFI28:
 1437              		.cfi_restore 14
 1438              		.cfi_restore 8
 1439              		.cfi_restore 7
 1440              		.cfi_restore 6
 1441              		.cfi_restore 5
 1442              		.cfi_restore 4
 1443              		.cfi_def_cfa_offset 16
 1444              	.LVL75:
 1445              		.loc 1 623 1 view .LVU452
 1446 00a8 04B0     		add	sp, sp, #16
 1447              	.LCFI29:
 1448              		.cfi_def_cfa_offset 0
 1449 00aa 7047     		bx	lr
 1450              	.L81:
 1451              		.align	2
 1452              	.L80:
 1453 00ac 00000000 		.word	TxHeader
 1454 00b0 00000000 		.word	CELLVAL_DATA
 1455 00b4 00000000 		.word	TxMailbox
 1456 00b8 00000000 		.word	hcan
 1457              		.cfi_endproc
 1458              	.LFE77:
 1460              		.section	.text.BMSSTAT_message,"ax",%progbits
 1461              		.align	1
 1462              		.global	BMSSTAT_message
 1463              		.syntax unified
 1464              		.thumb
 1465              		.thumb_func
 1466              		.fpu softvfp
 1468              	BMSSTAT_message:
 1469              	.LVL76:
 1470              	.LFB78:
 624:Src/main.c    **** 
 625:Src/main.c    **** void BMSSTAT_message(BMSconfigStructTypedef cfg, uint8_t cellNumber[5], bool faultType[5]) {
 1471              		.loc 1 625 92 is_stmt 1 view -0
 1472              		.cfi_startproc
 1473              		@ args = 84, pretend = 16, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 41


 1475              		.loc 1 625 92 is_stmt 0 view .LVU454
 1476 0000 84B0     		sub	sp, sp, #16
 1477              	.LCFI30:
 1478              		.cfi_def_cfa_offset 16
 1479 0002 10B5     		push	{r4, lr}
 1480              	.LCFI31:
 1481              		.cfi_def_cfa_offset 24
 1482              		.cfi_offset 4, -24
 1483              		.cfi_offset 14, -20
 1484 0004 02AC     		add	r4, sp, #8
 1485 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1486 000a 1598     		ldr	r0, [sp, #84]
 1487 000c 169A     		ldr	r2, [sp, #88]
 626:Src/main.c    **** 
 627:Src/main.c    ****   TxHeader.StdId = BMSSTAT_ID;
 1488              		.loc 1 627 3 is_stmt 1 view .LVU455
 1489              		.loc 1 627 18 is_stmt 0 view .LVU456
 1490 000e 1749     		ldr	r1, .L84
 1491 0010 0823     		movs	r3, #8
 1492 0012 0B60     		str	r3, [r1]
 628:Src/main.c    ****   TxHeader.DLC = 6;
 1493              		.loc 1 628 3 is_stmt 1 view .LVU457
 1494              		.loc 1 628 16 is_stmt 0 view .LVU458
 1495 0014 0623     		movs	r3, #6
 1496 0016 0B61     		str	r3, [r1, #16]
 629:Src/main.c    **** 
 630:Src/main.c    ****   BMSSTAT_DATA[0] = (uint8_t) ((faultType[0] & 0x10) | (faultType[1] & 0x08) | (faultType[2] & 0x04
 1497              		.loc 1 630 3 is_stmt 1 view .LVU459
 1498              		.loc 1 630 42 is_stmt 0 view .LVU460
 1499 0018 92F90040 		ldrsb	r4, [r2]
 1500              		.loc 1 630 46 view .LVU461
 1501 001c 04F01003 		and	r3, r4, #16
 1502              		.loc 1 630 66 view .LVU462
 1503 0020 92F90140 		ldrsb	r4, [r2, #1]
 1504              		.loc 1 630 70 view .LVU463
 1505 0024 04F00804 		and	r4, r4, #8
 1506              		.loc 1 630 54 view .LVU464
 1507 0028 1C43     		orrs	r4, r4, r3
 1508              		.loc 1 630 90 view .LVU465
 1509 002a 92F90230 		ldrsb	r3, [r2, #2]
 1510              		.loc 1 630 94 view .LVU466
 1511 002e 03F00403 		and	r3, r3, #4
 1512              		.loc 1 630 78 view .LVU467
 1513 0032 1C43     		orrs	r4, r4, r3
 1514              		.loc 1 630 114 view .LVU468
 1515 0034 92F90330 		ldrsb	r3, [r2, #3]
 1516              		.loc 1 630 118 view .LVU469
 1517 0038 03F00203 		and	r3, r3, #2
 1518              		.loc 1 630 102 view .LVU470
 1519 003c 2343     		orrs	r3, r3, r4
 1520              		.loc 1 630 138 view .LVU471
 1521 003e 92F90420 		ldrsb	r2, [r2, #4]
 1522              		.loc 1 630 126 view .LVU472
 1523 0042 1343     		orrs	r3, r3, r2
 1524              		.loc 1 630 19 view .LVU473
 1525 0044 0A4A     		ldr	r2, .L84+4
 1526 0046 1370     		strb	r3, [r2]
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 42


 631:Src/main.c    ****   BMSSTAT_DATA[1] = cellNumber[0]; // OV cell number
 1527              		.loc 1 631 3 is_stmt 1 view .LVU474
 1528              		.loc 1 631 31 is_stmt 0 view .LVU475
 1529 0048 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1530              		.loc 1 631 19 view .LVU476
 1531 004a 5370     		strb	r3, [r2, #1]
 632:Src/main.c    ****   BMSSTAT_DATA[2] = cellNumber[1]; // UV cell number
 1532              		.loc 1 632 3 is_stmt 1 view .LVU477
 1533              		.loc 1 632 19 is_stmt 0 view .LVU478
 1534 004c 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1535 004e 9370     		strb	r3, [r2, #2]
 633:Src/main.c    ****   BMSSTAT_DATA[3] = cellNumber[2]; // OT cell number
 1536              		.loc 1 633 3 is_stmt 1 view .LVU479
 1537              		.loc 1 633 19 is_stmt 0 view .LVU480
 1538 0050 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 1539 0052 D370     		strb	r3, [r2, #3]
 634:Src/main.c    ****   BMSSTAT_DATA[4] = cellNumber[3]; // disconnected cell cell number
 1540              		.loc 1 634 3 is_stmt 1 view .LVU481
 1541              		.loc 1 634 19 is_stmt 0 view .LVU482
 1542 0054 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1543 0056 1371     		strb	r3, [r2, #4]
 635:Src/main.c    ****   BMSSTAT_DATA[5] = cellNumber[4]; // disconnected temp sensor cell number
 1544              		.loc 1 635 3 is_stmt 1 view .LVU483
 1545              		.loc 1 635 19 is_stmt 0 view .LVU484
 1546 0058 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1547 005a 5371     		strb	r3, [r2, #5]
 636:Src/main.c    **** 
 637:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, BMSSTAT_DATA, &TxMailbox);
 1548              		.loc 1 637 3 is_stmt 1 view .LVU485
 1549 005c 054B     		ldr	r3, .L84+8
 1550 005e 0648     		ldr	r0, .L84+12
 1551 0060 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1552              	.LVL77:
 638:Src/main.c    **** }
 1553              		.loc 1 638 1 is_stmt 0 view .LVU486
 1554 0064 BDE81040 		pop	{r4, lr}
 1555              	.LCFI32:
 1556              		.cfi_restore 14
 1557              		.cfi_restore 4
 1558              		.cfi_def_cfa_offset 16
 1559 0068 04B0     		add	sp, sp, #16
 1560              	.LCFI33:
 1561              		.cfi_def_cfa_offset 0
 1562 006a 7047     		bx	lr
 1563              	.L85:
 1564              		.align	2
 1565              	.L84:
 1566 006c 00000000 		.word	TxHeader
 1567 0070 00000000 		.word	BMSSTAT_DATA
 1568 0074 00000000 		.word	TxMailbox
 1569 0078 00000000 		.word	hcan
 1570              		.cfi_endproc
 1571              	.LFE78:
 1573              		.section	.text.BMSVINF_message,"ax",%progbits
 1574              		.align	1
 1575              		.global	BMSVINF_message
 1576              		.syntax unified
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 43


 1577              		.thumb
 1578              		.thumb_func
 1579              		.fpu softvfp
 1581              	BMSVINF_message:
 1582              	.LVL78:
 1583              	.LFB79:
 639:Src/main.c    **** 
 640:Src/main.c    **** void BMSVINF_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12]) {
 1584              		.loc 1 640 80 is_stmt 1 view -0
 1585              		.cfi_startproc
 1586              		@ args = 80, pretend = 16, frame = 8
 1587              		@ frame_needed = 0, uses_anonymous_args = 0
 1588              		.loc 1 640 80 is_stmt 0 view .LVU488
 1589 0000 84B0     		sub	sp, sp, #16
 1590              	.LCFI34:
 1591              		.cfi_def_cfa_offset 16
 1592 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1593              	.LCFI35:
 1594              		.cfi_def_cfa_offset 40
 1595              		.cfi_offset 4, -40
 1596              		.cfi_offset 5, -36
 1597              		.cfi_offset 6, -32
 1598              		.cfi_offset 7, -28
 1599              		.cfi_offset 8, -24
 1600              		.cfi_offset 14, -20
 1601 0006 82B0     		sub	sp, sp, #8
 1602              	.LCFI36:
 1603              		.cfi_def_cfa_offset 48
 1604 0008 08AC     		add	r4, sp, #32
 1605 000a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1606 000e 1B9F     		ldr	r7, [sp, #108]
 641:Src/main.c    **** 
 642:Src/main.c    ****   uint16_t minV;
 1607              		.loc 1 642 3 is_stmt 1 view .LVU489
 643:Src/main.c    ****   uint8_t minCell;
 1608              		.loc 1 643 3 view .LVU490
 644:Src/main.c    ****   uint16_t maxV;
 1609              		.loc 1 644 3 view .LVU491
 645:Src/main.c    ****   uint8_t maxCell;
 1610              		.loc 1 645 3 view .LVU492
 646:Src/main.c    ****   uint16_t averageV;
 1611              		.loc 1 646 3 view .LVU493
 647:Src/main.c    ****   uint32_t sum = 0;
 1612              		.loc 1 647 3 view .LVU494
 1613              	.LVL79:
 648:Src/main.c    **** 
 649:Src/main.c    ****   minV = cellVoltage[0][0];
 1614              		.loc 1 649 3 view .LVU495
 1615              		.loc 1 649 8 is_stmt 0 view .LVU496
 1616 0010 B7F800C0 		ldrh	ip, [r7]
 1617              	.LVL80:
 650:Src/main.c    ****   minCell = 1;
 1618              		.loc 1 650 3 is_stmt 1 view .LVU497
 651:Src/main.c    ****   maxV = cellVoltage[0][0];
 1619              		.loc 1 651 3 view .LVU498
 652:Src/main.c    ****   maxCell = 1;
 1620              		.loc 1 652 3 view .LVU499
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 44


 653:Src/main.c    **** 
 654:Src/main.c    ****   for (int i = 0; i < cfg.numOfICs; i++) {
 1621              		.loc 1 654 3 view .LVU500
 1622              	.LBB21:
 1623              		.loc 1 654 8 view .LVU501
 1624              		.loc 1 654 8 is_stmt 0 view .LVU502
 1625              	.LBE21:
 651:Src/main.c    ****   maxCell = 1;
 1626              		.loc 1 651 8 view .LVU503
 1627 0014 E646     		mov	lr, ip
 1628              	.LBB24:
 1629              		.loc 1 654 12 view .LVU504
 1630 0016 0025     		movs	r5, #0
 1631              	.LBE24:
 647:Src/main.c    **** 
 1632              		.loc 1 647 12 view .LVU505
 1633 0018 2E46     		mov	r6, r5
 652:Src/main.c    **** 
 1634              		.loc 1 652 11 view .LVU506
 1635 001a 0120     		movs	r0, #1
 650:Src/main.c    ****   maxV = cellVoltage[0][0];
 1636              		.loc 1 650 11 view .LVU507
 1637 001c 0446     		mov	r4, r0
 1638              	.LBB25:
 1639              		.loc 1 654 3 view .LVU508
 1640 001e 1EE0     		b	.L87
 1641              	.LVL81:
 1642              	.L89:
 1643              	.LBB22:
 655:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 656:Src/main.c    **** 
 657:Src/main.c    **** 			if (cellVoltage[i][j] < minV) {
 658:Src/main.c    ****         minV = cellVoltage[i][j];
 659:Src/main.c    ****         minCell = i * cfg.numOfCellsPerIC + j + 1;
 660:Src/main.c    ****       }
 661:Src/main.c    **** 
 662:Src/main.c    ****       if (cellVoltage[i][j] > maxV) {
 663:Src/main.c    ****         maxV = cellVoltage[i][j];
 664:Src/main.c    ****         maxCell = i * cfg.numOfCellsPerIC + j + 1;
 665:Src/main.c    ****       }
 666:Src/main.c    **** 
 667:Src/main.c    ****       sum = sum + cellVoltage[i][j];
 1644              		.loc 1 667 7 is_stmt 1 discriminator 2 view .LVU509
 1645              		.loc 1 667 11 is_stmt 0 discriminator 2 view .LVU510
 1646 0020 1644     		add	r6, r6, r2
 1647              	.LVL82:
 655:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 1648              		.loc 1 655 45 discriminator 2 view .LVU511
 1649 0022 0133     		adds	r3, r3, #1
 1650              	.LVL83:
 1651              	.L91:
 655:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 1652              		.loc 1 655 26 discriminator 1 view .LVU512
 1653 0024 9DF84210 		ldrb	r1, [sp, #66]	@ zero_extendqisi2
 655:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 1654              		.loc 1 655 3 discriminator 1 view .LVU513
 1655 0028 9942     		cmp	r1, r3
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 45


 1656 002a 17DD     		ble	.L94
 657:Src/main.c    ****         minV = cellVoltage[i][j];
 1657              		.loc 1 657 4 is_stmt 1 view .LVU514
 657:Src/main.c    ****         minV = cellVoltage[i][j];
 1658              		.loc 1 657 19 is_stmt 0 view .LVU515
 1659 002c 05EB4508 		add	r8, r5, r5, lsl #1
 1660 0030 4FEAC802 		lsl	r2, r8, #3
 1661 0034 3A44     		add	r2, r2, r7
 657:Src/main.c    ****         minV = cellVoltage[i][j];
 1662              		.loc 1 657 22 view .LVU516
 1663 0036 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 657:Src/main.c    ****         minV = cellVoltage[i][j];
 1664              		.loc 1 657 7 view .LVU517
 1665 003a 6245     		cmp	r2, ip
 1666 003c 05D2     		bcs	.L88
 658:Src/main.c    ****         minCell = i * cfg.numOfCellsPerIC + j + 1;
 1667              		.loc 1 658 9 is_stmt 1 view .LVU518
 1668              	.LVL84:
 659:Src/main.c    ****       }
 1669              		.loc 1 659 9 view .LVU519
 659:Src/main.c    ****       }
 1670              		.loc 1 659 43 is_stmt 0 view .LVU520
 1671 003e 05FB0134 		mla	r4, r5, r1, r3
 1672              	.LVL85:
 659:Src/main.c    ****       }
 1673              		.loc 1 659 43 view .LVU521
 1674 0042 E4B2     		uxtb	r4, r4
 659:Src/main.c    ****       }
 1675              		.loc 1 659 17 view .LVU522
 1676 0044 0134     		adds	r4, r4, #1
 1677 0046 E4B2     		uxtb	r4, r4
 1678              	.LVL86:
 658:Src/main.c    ****         minCell = i * cfg.numOfCellsPerIC + j + 1;
 1679              		.loc 1 658 14 view .LVU523
 1680 0048 9446     		mov	ip, r2
 1681              	.LVL87:
 1682              	.L88:
 662:Src/main.c    ****         maxV = cellVoltage[i][j];
 1683              		.loc 1 662 7 is_stmt 1 view .LVU524
 662:Src/main.c    ****         maxV = cellVoltage[i][j];
 1684              		.loc 1 662 10 is_stmt 0 view .LVU525
 1685 004a 7245     		cmp	r2, lr
 1686 004c E8D9     		bls	.L89
 663:Src/main.c    ****         maxCell = i * cfg.numOfCellsPerIC + j + 1;
 1687              		.loc 1 663 9 is_stmt 1 view .LVU526
 1688              	.LVL88:
 664:Src/main.c    ****       }
 1689              		.loc 1 664 9 view .LVU527
 664:Src/main.c    ****       }
 1690              		.loc 1 664 43 is_stmt 0 view .LVU528
 1691 004e 05FB0131 		mla	r1, r5, r1, r3
 1692 0052 C9B2     		uxtb	r1, r1
 664:Src/main.c    ****       }
 1693              		.loc 1 664 17 view .LVU529
 1694 0054 0131     		adds	r1, r1, #1
 1695 0056 C8B2     		uxtb	r0, r1
 1696              	.LVL89:
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 46


 663:Src/main.c    ****         maxCell = i * cfg.numOfCellsPerIC + j + 1;
 1697              		.loc 1 663 14 view .LVU530
 1698 0058 9646     		mov	lr, r2
 1699 005a E1E7     		b	.L89
 1700              	.LVL90:
 1701              	.L94:
 663:Src/main.c    ****         maxCell = i * cfg.numOfCellsPerIC + j + 1;
 1702              		.loc 1 663 14 view .LVU531
 1703              	.LBE22:
 654:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 1704              		.loc 1 654 38 discriminator 2 view .LVU532
 1705 005c 0135     		adds	r5, r5, #1
 1706              	.LVL91:
 1707              	.L87:
 654:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 1708              		.loc 1 654 26 discriminator 1 view .LVU533
 1709 005e 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 654:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 1710              		.loc 1 654 3 discriminator 1 view .LVU534
 1711 0062 AB42     		cmp	r3, r5
 1712 0064 01DD     		ble	.L95
 1713              	.LBB23:
 655:Src/main.c    **** 
 1714              		.loc 1 655 12 view .LVU535
 1715 0066 0023     		movs	r3, #0
 1716 0068 DCE7     		b	.L91
 1717              	.L95:
 1718              	.LBE23:
 1719              	.LBE25:
 668:Src/main.c    **** 
 669:Src/main.c    **** 		}
 670:Src/main.c    ****   }
 671:Src/main.c    **** 
 672:Src/main.c    ****   minimum = minV;
 1720              		.loc 1 672 3 is_stmt 1 view .LVU536
 1721              		.loc 1 672 11 is_stmt 0 view .LVU537
 1722 006a 174A     		ldr	r2, .L96
 1723 006c A2F800C0 		strh	ip, [r2]	@ movhi
 673:Src/main.c    ****   averageV = (uint16_t) (sum / (cfg.numOfICs * cfg.numOfCellsPerIC));
 1724              		.loc 1 673 3 is_stmt 1 view .LVU538
 1725              		.loc 1 673 51 is_stmt 0 view .LVU539
 1726 0070 9DF84220 		ldrb	r2, [sp, #66]	@ zero_extendqisi2
 1727              		.loc 1 673 46 view .LVU540
 1728 0074 02FB03F3 		mul	r3, r2, r3
 1729              		.loc 1 673 30 view .LVU541
 1730 0078 B6FBF3F6 		udiv	r6, r6, r3
 1731              	.LVL92:
 674:Src/main.c    **** 
 675:Src/main.c    ****   TxHeader.StdId = BMSVINF_ID;
 1732              		.loc 1 675 3 is_stmt 1 view .LVU542
 1733              		.loc 1 675 18 is_stmt 0 view .LVU543
 1734 007c 1349     		ldr	r1, .L96+4
 1735 007e 0923     		movs	r3, #9
 1736 0080 0B60     		str	r3, [r1]
 676:Src/main.c    ****   TxHeader.DLC = 8;
 1737              		.loc 1 676 3 is_stmt 1 view .LVU544
 1738              		.loc 1 676 16 is_stmt 0 view .LVU545
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 47


 1739 0082 0823     		movs	r3, #8
 1740 0084 0B61     		str	r3, [r1, #16]
 677:Src/main.c    ****   uint8_t BMSVINF_DATA[8];
 1741              		.loc 1 677 3 is_stmt 1 view .LVU546
 678:Src/main.c    **** 
 679:Src/main.c    ****   BMSVINF_DATA[0] = (uint8_t) ((maxV >> 8) & 0xFF);
 1742              		.loc 1 679 3 view .LVU547
 1743              		.loc 1 679 21 is_stmt 0 view .LVU548
 1744 0086 2EFA03F3 		lsr	r3, lr, r3
 1745              		.loc 1 679 19 view .LVU549
 1746 008a 8DF80030 		strb	r3, [sp]
 680:Src/main.c    ****   BMSVINF_DATA[1] = (uint8_t) (maxV & 0xFF);
 1747              		.loc 1 680 3 is_stmt 1 view .LVU550
 1748              		.loc 1 680 19 is_stmt 0 view .LVU551
 1749 008e 8DF801E0 		strb	lr, [sp, #1]
 681:Src/main.c    ****   BMSVINF_DATA[2] = maxCell;
 1750              		.loc 1 681 3 is_stmt 1 view .LVU552
 1751              		.loc 1 681 19 is_stmt 0 view .LVU553
 1752 0092 8DF80200 		strb	r0, [sp, #2]
 682:Src/main.c    ****   BMSVINF_DATA[3] = (uint8_t) ((minV >> 8) & 0xFF);
 1753              		.loc 1 682 3 is_stmt 1 view .LVU554
 1754              		.loc 1 682 21 is_stmt 0 view .LVU555
 1755 0096 4FEA1C23 		lsr	r3, ip, #8
 1756              		.loc 1 682 19 view .LVU556
 1757 009a 8DF80330 		strb	r3, [sp, #3]
 683:Src/main.c    ****   BMSVINF_DATA[4] = (uint8_t) (minV & 0xFF);
 1758              		.loc 1 683 3 is_stmt 1 view .LVU557
 1759              		.loc 1 683 19 is_stmt 0 view .LVU558
 1760 009e 8DF804C0 		strb	ip, [sp, #4]
 684:Src/main.c    ****   BMSVINF_DATA[5] = minCell;
 1761              		.loc 1 684 3 is_stmt 1 view .LVU559
 1762              		.loc 1 684 19 is_stmt 0 view .LVU560
 1763 00a2 8DF80540 		strb	r4, [sp, #5]
 685:Src/main.c    ****   BMSVINF_DATA[6] = (uint8_t) ((averageV >> 8) & 0xFF);
 1764              		.loc 1 685 3 is_stmt 1 view .LVU561
 1765              		.loc 1 685 21 is_stmt 0 view .LVU562
 1766 00a6 C6F30723 		ubfx	r3, r6, #8, #8
 1767              		.loc 1 685 19 view .LVU563
 1768 00aa 8DF80630 		strb	r3, [sp, #6]
 686:Src/main.c    ****   BMSVINF_DATA[7] = (uint8_t) (averageV & 0xFF);
 1769              		.loc 1 686 3 is_stmt 1 view .LVU564
 1770              		.loc 1 686 19 is_stmt 0 view .LVU565
 1771 00ae 8DF80760 		strb	r6, [sp, #7]
 687:Src/main.c    **** 
 688:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, BMSVINF_DATA, &TxMailbox);
 1772              		.loc 1 688 3 is_stmt 1 view .LVU566
 1773 00b2 074B     		ldr	r3, .L96+8
 1774 00b4 6A46     		mov	r2, sp
 1775 00b6 0748     		ldr	r0, .L96+12
 1776              	.LVL93:
 1777              		.loc 1 688 3 is_stmt 0 view .LVU567
 1778 00b8 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1779              	.LVL94:
 689:Src/main.c    **** 
 690:Src/main.c    **** }
 1780              		.loc 1 690 1 view .LVU568
 1781 00bc 02B0     		add	sp, sp, #8
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 48


 1782              	.LCFI37:
 1783              		.cfi_def_cfa_offset 40
 1784              		@ sp needed
 1785 00be BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1786              	.LCFI38:
 1787              		.cfi_restore 14
 1788              		.cfi_restore 8
 1789              		.cfi_restore 7
 1790              		.cfi_restore 6
 1791              		.cfi_restore 5
 1792              		.cfi_restore 4
 1793              		.cfi_def_cfa_offset 16
 1794              	.LVL95:
 1795              		.loc 1 690 1 view .LVU569
 1796 00c2 04B0     		add	sp, sp, #16
 1797              	.LCFI39:
 1798              		.cfi_def_cfa_offset 0
 1799 00c4 7047     		bx	lr
 1800              	.L97:
 1801 00c6 00BF     		.align	2
 1802              	.L96:
 1803 00c8 00000000 		.word	minimum
 1804 00cc 00000000 		.word	TxHeader
 1805 00d0 00000000 		.word	TxMailbox
 1806 00d4 00000000 		.word	hcan
 1807              		.cfi_endproc
 1808              	.LFE79:
 1810              		.section	.text.BMSTINF_message,"ax",%progbits
 1811              		.align	1
 1812              		.global	BMSTINF_message
 1813              		.syntax unified
 1814              		.thumb
 1815              		.thumb_func
 1816              		.fpu softvfp
 1818              	BMSTINF_message:
 1819              	.LVL96:
 1820              	.LFB80:
 691:Src/main.c    **** 
 692:Src/main.c    **** void BMSTINF_message(BMSconfigStructTypedef cfg, uint16_t cellTemp[12][4]) {
 1821              		.loc 1 692 76 is_stmt 1 view -0
 1822              		.cfi_startproc
 1823              		@ args = 80, pretend = 16, frame = 8
 1824              		@ frame_needed = 0, uses_anonymous_args = 0
 1825              		.loc 1 692 76 is_stmt 0 view .LVU571
 1826 0000 84B0     		sub	sp, sp, #16
 1827              	.LCFI40:
 1828              		.cfi_def_cfa_offset 16
 1829 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1830              	.LCFI41:
 1831              		.cfi_def_cfa_offset 36
 1832              		.cfi_offset 4, -36
 1833              		.cfi_offset 5, -32
 1834              		.cfi_offset 6, -28
 1835              		.cfi_offset 7, -24
 1836              		.cfi_offset 14, -20
 1837 0004 83B0     		sub	sp, sp, #12
 1838              	.LCFI42:
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 49


 1839              		.cfi_def_cfa_offset 48
 1840 0006 08AC     		add	r4, sp, #32
 1841 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1842 000c 1B9F     		ldr	r7, [sp, #108]
 693:Src/main.c    **** 
 694:Src/main.c    ****   uint16_t minT;
 1843              		.loc 1 694 3 is_stmt 1 view .LVU572
 695:Src/main.c    ****   uint8_t minCell;
 1844              		.loc 1 695 3 view .LVU573
 696:Src/main.c    ****   uint16_t maxT;
 1845              		.loc 1 696 3 view .LVU574
 697:Src/main.c    ****   uint8_t maxCell;
 1846              		.loc 1 697 3 view .LVU575
 698:Src/main.c    ****   uint16_t averageT;
 1847              		.loc 1 698 3 view .LVU576
 699:Src/main.c    ****   uint32_t sum = 0;
 1848              		.loc 1 699 3 view .LVU577
 1849              	.LVL97:
 700:Src/main.c    **** 
 701:Src/main.c    ****   minT = cellTemp[0][0];
 1850              		.loc 1 701 3 view .LVU578
 1851              		.loc 1 701 8 is_stmt 0 view .LVU579
 1852 000e 3E88     		ldrh	r6, [r7]
 1853              	.LVL98:
 702:Src/main.c    ****   minCell = 1;
 1854              		.loc 1 702 3 is_stmt 1 view .LVU580
 703:Src/main.c    ****   maxT = cellTemp[0][0];
 1855              		.loc 1 703 3 view .LVU581
 704:Src/main.c    ****   maxCell = 1;
 1856              		.loc 1 704 3 view .LVU582
 705:Src/main.c    **** 
 706:Src/main.c    ****   for (int i = 0; i < cfg.numOfICs; i++) {
 1857              		.loc 1 706 3 view .LVU583
 1858              	.LBB26:
 1859              		.loc 1 706 8 view .LVU584
 1860              		.loc 1 706 8 is_stmt 0 view .LVU585
 1861              	.LBE26:
 703:Src/main.c    ****   maxCell = 1;
 1862              		.loc 1 703 8 view .LVU586
 1863 0010 B446     		mov	ip, r6
 1864              	.LBB29:
 1865              		.loc 1 706 12 view .LVU587
 1866 0012 0024     		movs	r4, #0
 1867              	.LBE29:
 699:Src/main.c    **** 
 1868              		.loc 1 699 12 view .LVU588
 1869 0014 2546     		mov	r5, r4
 704:Src/main.c    **** 
 1870              		.loc 1 704 11 view .LVU589
 1871 0016 4FF0010E 		mov	lr, #1
 702:Src/main.c    ****   maxT = cellTemp[0][0];
 1872              		.loc 1 702 11 view .LVU590
 1873 001a 7046     		mov	r0, lr
 1874              	.LBB30:
 1875              		.loc 1 706 3 view .LVU591
 1876 001c 1CE0     		b	.L99
 1877              	.LVL99:
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 50


 1878              	.L101:
 1879              	.LBB27:
 707:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 708:Src/main.c    **** 
 709:Src/main.c    **** 			if (cellTemp[i][j] < minT) {
 710:Src/main.c    ****         minT = cellTemp[i][j];
 711:Src/main.c    ****         minCell = i * cfg.numOfTempPerIC + j + 1;
 712:Src/main.c    ****       }
 713:Src/main.c    **** 
 714:Src/main.c    ****       if (cellTemp[i][j] > maxT) {
 715:Src/main.c    ****         maxT = cellTemp[i][j];
 716:Src/main.c    ****         maxCell = i * cfg.numOfTempPerIC + j + 1;
 717:Src/main.c    ****       }
 718:Src/main.c    **** 
 719:Src/main.c    ****       sum = sum + cellTemp[i][j];
 1880              		.loc 1 719 7 is_stmt 1 discriminator 2 view .LVU592
 1881              		.loc 1 719 11 is_stmt 0 discriminator 2 view .LVU593
 1882 001e 0D44     		add	r5, r5, r1
 1883              	.LVL100:
 707:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 1884              		.loc 1 707 44 discriminator 2 view .LVU594
 1885 0020 0132     		adds	r2, r2, #1
 1886              	.LVL101:
 1887              	.L103:
 707:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 1888              		.loc 1 707 26 discriminator 1 view .LVU595
 1889 0022 9DF84330 		ldrb	r3, [sp, #67]	@ zero_extendqisi2
 707:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 1890              		.loc 1 707 3 discriminator 1 view .LVU596
 1891 0026 9342     		cmp	r3, r2
 1892 0028 15DD     		ble	.L106
 709:Src/main.c    ****         minT = cellTemp[i][j];
 1893              		.loc 1 709 4 is_stmt 1 view .LVU597
 709:Src/main.c    ****         minT = cellTemp[i][j];
 1894              		.loc 1 709 16 is_stmt 0 view .LVU598
 1895 002a 07EBC401 		add	r1, r7, r4, lsl #3
 709:Src/main.c    ****         minT = cellTemp[i][j];
 1896              		.loc 1 709 19 view .LVU599
 1897 002e 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 709:Src/main.c    ****         minT = cellTemp[i][j];
 1898              		.loc 1 709 7 view .LVU600
 1899 0032 B142     		cmp	r1, r6
 1900 0034 05D2     		bcs	.L100
 710:Src/main.c    ****         minCell = i * cfg.numOfTempPerIC + j + 1;
 1901              		.loc 1 710 9 is_stmt 1 view .LVU601
 1902              	.LVL102:
 711:Src/main.c    ****       }
 1903              		.loc 1 711 9 view .LVU602
 711:Src/main.c    ****       }
 1904              		.loc 1 711 42 is_stmt 0 view .LVU603
 1905 0036 04FB0320 		mla	r0, r4, r3, r2
 1906              	.LVL103:
 711:Src/main.c    ****       }
 1907              		.loc 1 711 42 view .LVU604
 1908 003a C0B2     		uxtb	r0, r0
 711:Src/main.c    ****       }
 1909              		.loc 1 711 17 view .LVU605
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 51


 1910 003c 0130     		adds	r0, r0, #1
 1911 003e C0B2     		uxtb	r0, r0
 1912              	.LVL104:
 710:Src/main.c    ****         minCell = i * cfg.numOfTempPerIC + j + 1;
 1913              		.loc 1 710 14 view .LVU606
 1914 0040 0E46     		mov	r6, r1
 1915              	.LVL105:
 1916              	.L100:
 714:Src/main.c    ****         maxT = cellTemp[i][j];
 1917              		.loc 1 714 7 is_stmt 1 view .LVU607
 714:Src/main.c    ****         maxT = cellTemp[i][j];
 1918              		.loc 1 714 10 is_stmt 0 view .LVU608
 1919 0042 6145     		cmp	r1, ip
 1920 0044 EBD9     		bls	.L101
 715:Src/main.c    ****         maxCell = i * cfg.numOfTempPerIC + j + 1;
 1921              		.loc 1 715 9 is_stmt 1 view .LVU609
 1922              	.LVL106:
 716:Src/main.c    ****       }
 1923              		.loc 1 716 9 view .LVU610
 716:Src/main.c    ****       }
 1924              		.loc 1 716 42 is_stmt 0 view .LVU611
 1925 0046 04FB0323 		mla	r3, r4, r3, r2
 1926 004a DBB2     		uxtb	r3, r3
 716:Src/main.c    ****       }
 1927              		.loc 1 716 17 view .LVU612
 1928 004c 0133     		adds	r3, r3, #1
 1929 004e 5FFA83FE 		uxtb	lr, r3
 1930              	.LVL107:
 715:Src/main.c    ****         maxCell = i * cfg.numOfTempPerIC + j + 1;
 1931              		.loc 1 715 14 view .LVU613
 1932 0052 8C46     		mov	ip, r1
 1933 0054 E3E7     		b	.L101
 1934              	.LVL108:
 1935              	.L106:
 715:Src/main.c    ****         maxCell = i * cfg.numOfTempPerIC + j + 1;
 1936              		.loc 1 715 14 view .LVU614
 1937              	.LBE27:
 706:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 1938              		.loc 1 706 38 discriminator 2 view .LVU615
 1939 0056 0134     		adds	r4, r4, #1
 1940              	.LVL109:
 1941              	.L99:
 706:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 1942              		.loc 1 706 26 discriminator 1 view .LVU616
 1943 0058 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 706:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 1944              		.loc 1 706 3 discriminator 1 view .LVU617
 1945 005c A342     		cmp	r3, r4
 1946 005e 01DD     		ble	.L107
 1947              	.LBB28:
 707:Src/main.c    **** 
 1948              		.loc 1 707 12 view .LVU618
 1949 0060 0022     		movs	r2, #0
 1950 0062 DEE7     		b	.L103
 1951              	.L107:
 1952              	.LBE28:
 1953              	.LBE30:
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 52


 720:Src/main.c    **** 
 721:Src/main.c    **** 		}
 722:Src/main.c    ****   }
 723:Src/main.c    **** 
 724:Src/main.c    ****   averageT = (uint16_t) (sum / (cfg.numOfICs * cfg.numOfTempPerIC));
 1954              		.loc 1 724 3 is_stmt 1 view .LVU619
 1955              		.loc 1 724 51 is_stmt 0 view .LVU620
 1956 0064 9DF84320 		ldrb	r2, [sp, #67]	@ zero_extendqisi2
 1957              		.loc 1 724 46 view .LVU621
 1958 0068 02FB03F3 		mul	r3, r2, r3
 1959              		.loc 1 724 30 view .LVU622
 1960 006c B5FBF3F5 		udiv	r5, r5, r3
 1961              	.LVL110:
 725:Src/main.c    **** 
 726:Src/main.c    ****   TxHeader.StdId = BMSTINF_ID;
 1962              		.loc 1 726 3 is_stmt 1 view .LVU623
 1963              		.loc 1 726 18 is_stmt 0 view .LVU624
 1964 0070 1149     		ldr	r1, .L108
 1965 0072 0A23     		movs	r3, #10
 1966 0074 0B60     		str	r3, [r1]
 727:Src/main.c    ****   TxHeader.DLC = 8;
 1967              		.loc 1 727 3 is_stmt 1 view .LVU625
 1968              		.loc 1 727 16 is_stmt 0 view .LVU626
 1969 0076 0823     		movs	r3, #8
 1970 0078 0B61     		str	r3, [r1, #16]
 728:Src/main.c    ****   uint8_t BMSTINF_DATA[8];
 1971              		.loc 1 728 3 is_stmt 1 view .LVU627
 729:Src/main.c    **** 
 730:Src/main.c    ****   BMSTINF_DATA[0] = (uint8_t) ((maxT >> 8) & 0xFF);
 1972              		.loc 1 730 3 view .LVU628
 1973              		.loc 1 730 21 is_stmt 0 view .LVU629
 1974 007a 2CFA03F3 		lsr	r3, ip, r3
 1975              		.loc 1 730 19 view .LVU630
 1976 007e 8DF80030 		strb	r3, [sp]
 731:Src/main.c    ****   BMSTINF_DATA[1] = (uint8_t) (maxT & 0xFF);
 1977              		.loc 1 731 3 is_stmt 1 view .LVU631
 1978              		.loc 1 731 19 is_stmt 0 view .LVU632
 1979 0082 8DF801C0 		strb	ip, [sp, #1]
 732:Src/main.c    ****   BMSTINF_DATA[2] = maxCell;
 1980              		.loc 1 732 3 is_stmt 1 view .LVU633
 1981              		.loc 1 732 19 is_stmt 0 view .LVU634
 1982 0086 8DF802E0 		strb	lr, [sp, #2]
 733:Src/main.c    ****   BMSTINF_DATA[3] = (uint8_t) ((minT >> 8) & 0xFF);
 1983              		.loc 1 733 3 is_stmt 1 view .LVU635
 1984              		.loc 1 733 21 is_stmt 0 view .LVU636
 1985 008a 330A     		lsrs	r3, r6, #8
 1986              		.loc 1 733 19 view .LVU637
 1987 008c 8DF80330 		strb	r3, [sp, #3]
 734:Src/main.c    ****   BMSTINF_DATA[4] = (uint8_t) (minT & 0xFF);
 1988              		.loc 1 734 3 is_stmt 1 view .LVU638
 1989              		.loc 1 734 19 is_stmt 0 view .LVU639
 1990 0090 8DF80460 		strb	r6, [sp, #4]
 735:Src/main.c    ****   BMSTINF_DATA[5] = minCell;
 1991              		.loc 1 735 3 is_stmt 1 view .LVU640
 1992              		.loc 1 735 19 is_stmt 0 view .LVU641
 1993 0094 8DF80500 		strb	r0, [sp, #5]
 736:Src/main.c    ****   BMSTINF_DATA[6] = (uint8_t) ((averageT >> 8) & 0xFF);
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 53


 1994              		.loc 1 736 3 is_stmt 1 view .LVU642
 1995              		.loc 1 736 21 is_stmt 0 view .LVU643
 1996 0098 C5F30723 		ubfx	r3, r5, #8, #8
 1997              		.loc 1 736 19 view .LVU644
 1998 009c 8DF80630 		strb	r3, [sp, #6]
 737:Src/main.c    ****   BMSTINF_DATA[7] = (uint8_t) (averageT & 0xFF);
 1999              		.loc 1 737 3 is_stmt 1 view .LVU645
 2000              		.loc 1 737 19 is_stmt 0 view .LVU646
 2001 00a0 8DF80750 		strb	r5, [sp, #7]
 738:Src/main.c    **** 
 739:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, BMSTINF_DATA, &TxMailbox);  
 2002              		.loc 1 739 3 is_stmt 1 view .LVU647
 2003 00a4 054B     		ldr	r3, .L108+4
 2004 00a6 6A46     		mov	r2, sp
 2005 00a8 0548     		ldr	r0, .L108+8
 2006              	.LVL111:
 2007              		.loc 1 739 3 is_stmt 0 view .LVU648
 2008 00aa FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 2009              	.LVL112:
 740:Src/main.c    **** 
 741:Src/main.c    **** };
 2010              		.loc 1 741 1 view .LVU649
 2011 00ae 03B0     		add	sp, sp, #12
 2012              	.LCFI43:
 2013              		.cfi_def_cfa_offset 36
 2014              		@ sp needed
 2015 00b0 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 2016              	.LCFI44:
 2017              		.cfi_restore 14
 2018              		.cfi_restore 7
 2019              		.cfi_restore 6
 2020              		.cfi_restore 5
 2021              		.cfi_restore 4
 2022              		.cfi_def_cfa_offset 16
 2023              	.LVL113:
 2024              		.loc 1 741 1 view .LVU650
 2025 00b4 04B0     		add	sp, sp, #16
 2026              	.LCFI45:
 2027              		.cfi_def_cfa_offset 0
 2028 00b6 7047     		bx	lr
 2029              	.L109:
 2030              		.align	2
 2031              	.L108:
 2032 00b8 00000000 		.word	TxHeader
 2033 00bc 00000000 		.word	TxMailbox
 2034 00c0 00000000 		.word	hcan
 2035              		.cfi_endproc
 2036              	.LFE80:
 2038              		.section	.text.main,"ax",%progbits
 2039              		.align	1
 2040              		.global	main
 2041              		.syntax unified
 2042              		.thumb
 2043              		.thumb_func
 2044              		.fpu softvfp
 2046              	main:
 2047              	.LFB66:
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 54


 103:Src/main.c    ****   /* USER CODE BEGIN 1 */
 2048              		.loc 1 103 1 is_stmt 1 view -0
 2049              		.cfi_startproc
 2050              		@ args = 0, pretend = 0, frame = 24
 2051              		@ frame_needed = 1, uses_anonymous_args = 0
 2052 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2053              	.LCFI46:
 2054              		.cfi_def_cfa_offset 36
 2055              		.cfi_offset 4, -36
 2056              		.cfi_offset 5, -32
 2057              		.cfi_offset 6, -28
 2058              		.cfi_offset 7, -24
 2059              		.cfi_offset 8, -20
 2060              		.cfi_offset 9, -16
 2061              		.cfi_offset 10, -12
 2062              		.cfi_offset 11, -8
 2063              		.cfi_offset 14, -4
 2064 0004 9DB0     		sub	sp, sp, #116
 2065              	.LCFI47:
 2066              		.cfi_def_cfa_offset 152
 2067 0006 16AF     		add	r7, sp, #88
 2068              	.LCFI48:
 2069              		.cfi_def_cfa 7, 64
 111:Src/main.c    **** 
 2070              		.loc 1 111 3 view .LVU652
 2071 0008 FFF7FEFF 		bl	HAL_Init
 2072              	.LVL114:
 118:Src/main.c    **** 
 2073              		.loc 1 118 3 view .LVU653
 2074 000c FFF7FEFF 		bl	SystemClock_Config
 2075              	.LVL115:
 125:Src/main.c    ****   MX_ADC1_Init();
 2076              		.loc 1 125 3 view .LVU654
 2077 0010 FFF7FEFF 		bl	MX_GPIO_Init
 2078              	.LVL116:
 126:Src/main.c    ****   MX_CAN_Init();
 2079              		.loc 1 126 3 view .LVU655
 2080 0014 FFF7FEFF 		bl	MX_ADC1_Init
 2081              	.LVL117:
 127:Src/main.c    ****   //MX_SPI1_Init();
 2082              		.loc 1 127 3 view .LVU656
 2083 0018 FFF7FEFF 		bl	MX_CAN_Init
 2084              	.LVL118:
 129:Src/main.c    ****   /* USER CODE BEGIN 2 */
 2085              		.loc 1 129 3 view .LVU657
 2086 001c FFF7FEFF 		bl	MX_TIM2_Init
 2087              	.LVL119:
 131:Src/main.c    ****   initPECTable();
 2088              		.loc 1 131 3 view .LVU658
 2089 0020 FFF7FEFF 		bl	SPI_Init
 2090              	.LVL120:
 132:Src/main.c    ****   loadConfig(&BMSconfig); // loads configuration settings from config.c
 2091              		.loc 1 132 3 view .LVU659
 2092 0024 FFF7FEFF 		bl	initPECTable
 2093              	.LVL121:
 133:Src/main.c    ****   writeConfigAll(BMSconfig);
 2094              		.loc 1 133 3 view .LVU660
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 55


 2095 0028 314E     		ldr	r6, .L125
 2096 002a 3046     		mov	r0, r6
 2097 002c FFF7FEFF 		bl	loadConfig
 2098              	.LVL122:
 134:Src/main.c    **** 
 2099              		.loc 1 134 3 view .LVU661
 2100 0030 D6F80090 		ldr	r9, [r6]	@ unaligned
 2101 0034 D6F80480 		ldr	r8, [r6, #4]	@ unaligned
 2102 0038 D6F808E0 		ldr	lr, [r6, #8]	@ unaligned
 2103 003c D6F80CC0 		ldr	ip, [r6, #12]	@ unaligned
 2104 0040 06F11005 		add	r5, r6, #16
 2105 0044 6C46     		mov	r4, sp
 2106 0046 4036     		adds	r6, r6, #64
 2107              	.L111:
 2108 0048 A246     		mov	r10, r4
 2109 004a 2868     		ldr	r0, [r5]	@ unaligned
 2110 004c 6968     		ldr	r1, [r5, #4]	@ unaligned
 2111 004e AA68     		ldr	r2, [r5, #8]	@ unaligned
 2112 0050 EB68     		ldr	r3, [r5, #12]	@ unaligned
 2113 0052 AAE80F00 		stmia	r10!, {r0, r1, r2, r3}
 2114 0056 1035     		adds	r5, r5, #16
 2115 0058 5446     		mov	r4, r10
 2116 005a B542     		cmp	r5, r6
 2117 005c F4D1     		bne	.L111
 2118 005e 5346     		mov	r3, r10
 2119 0060 2868     		ldr	r0, [r5]	@ unaligned
 2120 0062 6968     		ldr	r1, [r5, #4]	@ unaligned
 2121 0064 03C3     		stmia	r3!, {r0, r1}
 2122 0066 2A89     		ldrh	r2, [r5, #8]	@ unaligned
 2123 0068 1A80     		strh	r2, [r3]	@ unaligned
 2124 006a 4846     		mov	r0, r9
 2125 006c 4146     		mov	r1, r8
 2126 006e 7246     		mov	r2, lr
 2127 0070 6346     		mov	r3, ip
 2128 0072 FFF7FEFF 		bl	writeConfigAll
 2129              	.LVL123:
 136:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2130              		.loc 1 136 3 view .LVU662
 136:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2131              		.loc 1 136 49 is_stmt 0 view .LVU663
 2132 0076 1E4A     		ldr	r2, .L125
 2133 0078 92F82100 		ldrb	r0, [r2, #33]	@ zero_extendqisi2
 136:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2134              		.loc 1 136 29 view .LVU664
 2135 007c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2136              	.LVL124:
 136:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2137              		.loc 1 136 12 view .LVU665
 2138 007e 01FB00F0 		mul	r0, r1, r0
 2139              	.LVL125:
 136:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2140              		.loc 1 136 12 view .LVU666
 2141 0082 4300     		lsls	r3, r0, #1
 2142 0084 0733     		adds	r3, r3, #7
 2143 0086 DB08     		lsrs	r3, r3, #3
 2144 0088 6C46     		mov	r4, sp
 2145 008a A4EBC303 		sub	r3, r4, r3, lsl #3
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 56


 2146 008e 9D46     		mov	sp, r3
 2147 0090 16AB     		add	r3, sp, #88
 2148 0092 7B61     		str	r3, [r7, #20]
 2149              	.LVL126:
 137:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 2150              		.loc 1 137 3 is_stmt 1 view .LVU667
 137:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 2151              		.loc 1 137 46 is_stmt 0 view .LVU668
 2152 0094 92F82330 		ldrb	r3, [r2, #35]	@ zero_extendqisi2
 2153              	.LVL127:
 137:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 2154              		.loc 1 137 12 view .LVU669
 2155 0098 01FB03F3 		mul	r3, r1, r3
 2156              	.LVL128:
 137:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 2157              		.loc 1 137 12 view .LVU670
 2158 009c 5C00     		lsls	r4, r3, #1
 2159              	.LVL129:
 137:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 2160              		.loc 1 137 12 view .LVU671
 2161 009e 0734     		adds	r4, r4, #7
 2162 00a0 E408     		lsrs	r4, r4, #3
 2163 00a2 6D46     		mov	r5, sp
 2164 00a4 A5EBC404 		sub	r4, r5, r4, lsl #3
 2165 00a8 A546     		mov	sp, r4
 2166 00aa 16AC     		add	r4, sp, #88
 2167 00ac 3C61     		str	r4, [r7, #16]
 2168              	.LVL130:
 138:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2169              		.loc 1 138 3 is_stmt 1 view .LVU672
 138:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2170              		.loc 1 138 8 is_stmt 0 view .LVU673
 2171 00ae 0733     		adds	r3, r3, #7
 2172 00b0 DB08     		lsrs	r3, r3, #3
 2173 00b2 DB00     		lsls	r3, r3, #3
 2174 00b4 ADEB030D 		sub	sp, sp, r3
 2175 00b8 16AC     		add	r4, sp, #88
 2176              	.LVL131:
 138:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2177              		.loc 1 138 8 view .LVU674
 2178 00ba BC60     		str	r4, [r7, #8]
 2179              	.LVL132:
 139:Src/main.c    ****   bool connection[BMSconfig.numOfICs][BMSconfig.numOfCellInputs];         //12, 12
 2180              		.loc 1 139 3 is_stmt 1 view .LVU675
 139:Src/main.c    ****   bool connection[BMSconfig.numOfICs][BMSconfig.numOfCellInputs];         //12, 12
 2181              		.loc 1 139 8 is_stmt 0 view .LVU676
 2182 00bc ADEB030D 		sub	sp, sp, r3
 2183 00c0 16AB     		add	r3, sp, #88
 2184 00c2 7B60     		str	r3, [r7, #4]
 2185              	.LVL133:
 140:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8
 2186              		.loc 1 140 3 is_stmt 1 view .LVU677
 140:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8
 2187              		.loc 1 140 8 is_stmt 0 view .LVU678
 2188 00c4 C31D     		adds	r3, r0, #7
 2189              	.LVL134:
 140:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 57


 2190              		.loc 1 140 8 view .LVU679
 2191 00c6 DB08     		lsrs	r3, r3, #3
 2192 00c8 6846     		mov	r0, sp
 2193 00ca A0EBC303 		sub	r3, r0, r3, lsl #3
 2194 00ce 9D46     		mov	sp, r3
 2195 00d0 16AB     		add	r3, sp, #88
 2196 00d2 3B60     		str	r3, [r7]
 2197              	.LVL135:
 141:Src/main.c    ****   uint8_t dischargetimer[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];  //12, 8
 2198              		.loc 1 141 3 is_stmt 1 view .LVU680
 141:Src/main.c    ****   uint8_t dischargetimer[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];  //12, 8
 2199              		.loc 1 141 47 is_stmt 0 view .LVU681
 2200 00d4 92F82230 		ldrb	r3, [r2, #34]	@ zero_extendqisi2
 2201              	.LVL136:
 141:Src/main.c    ****   uint8_t dischargetimer[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];  //12, 8
 2202              		.loc 1 141 8 view .LVU682
 2203 00d8 03FB01F3 		mul	r3, r3, r1
 2204              	.LVL137:
 141:Src/main.c    ****   uint8_t dischargetimer[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];  //12, 8
 2205              		.loc 1 141 8 view .LVU683
 2206 00dc 0733     		adds	r3, r3, #7
 2207 00de DB08     		lsrs	r3, r3, #3
 2208 00e0 6A46     		mov	r2, sp
 2209 00e2 A2EBC303 		sub	r3, r2, r3, lsl #3
 2210 00e6 9D46     		mov	sp, r3
 2211 00e8 0DF1580B 		add	fp, sp, #88
 2212              	.LVL138:
 142:Src/main.c    **** 
 2213              		.loc 1 142 3 is_stmt 1 view .LVU684
 144:Src/main.c    ****   bool treturn = false;
 2214              		.loc 1 144 3 view .LVU685
 145:Src/main.c    ****   bool disconnectFault = false;
 2215              		.loc 1 145 3 view .LVU686
 146:Src/main.c    ****   uint8_t disconnectedCell;
 2216              		.loc 1 146 3 view .LVU687
 141:Src/main.c    ****   uint8_t dischargetimer[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];  //12, 8
 2217              		.loc 1 141 8 is_stmt 0 view .LVU688
 2218 00ec 5C46     		mov	r4, fp
 2219              	.LVL139:
 141:Src/main.c    ****   uint8_t dischargetimer[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];  //12, 8
 2220              		.loc 1 141 8 view .LVU689
 2221 00ee 04E0     		b	.L123
 2222              	.L126:
 2223              		.align	2
 2224              	.L125:
 2225 00f0 00000000 		.word	BMSconfig
 2226              	.LVL140:
 2227              	.L122:
 223:Src/main.c    **** 
 2228              		.loc 1 223 5 is_stmt 1 view .LVU690
 2229 00f4 6420     		movs	r0, #100
 2230 00f6 FFF7FEFF 		bl	HAL_Delay
 2231              	.LVL141:
 2232              	.L123:
 147:Src/main.c    ****   uint8_t chargerate;
 2233              		.loc 1 147 3 view .LVU691
 148:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 58


 2234              		.loc 1 148 3 view .LVU692
 150:Src/main.c    ****   bool faults[5];
 2235              		.loc 1 150 3 view .LVU693
 151:Src/main.c    **** 
 2236              		.loc 1 151 3 view .LVU694
 153:Src/main.c    ****   bool CHARGE_EN;
 2237              		.loc 1 153 3 view .LVU695
 154:Src/main.c    **** 
 2238              		.loc 1 154 3 view .LVU696
 166:Src/main.c    ****   {
 2239              		.loc 1 166 3 view .LVU697
 172:Src/main.c    **** 
 2240              		.loc 1 172 5 view .LVU698
 2241 00fa D14B     		ldr	r3, .L127
 2242 00fc 0122     		movs	r2, #1
 2243 00fe 0F92     		str	r2, [sp, #60]
 2244 0100 D3F800B0 		ldr	fp, [r3]	@ unaligned
 2245 0104 D3F804A0 		ldr	r10, [r3, #4]	@ unaligned
 2246 0108 D3F80890 		ldr	r9, [r3, #8]	@ unaligned
 2247 010c D3F80C80 		ldr	r8, [r3, #12]	@ unaligned
 2248 0110 03F11006 		add	r6, r3, #16
 2249 0114 6D46     		mov	r5, sp
 2250 0116 03F1400C 		add	ip, r3, #64
 2251              	.L112:
 2252 011a AE46     		mov	lr, r5
 2253 011c 3068     		ldr	r0, [r6]	@ unaligned
 2254 011e 7168     		ldr	r1, [r6, #4]	@ unaligned
 2255 0120 B268     		ldr	r2, [r6, #8]	@ unaligned
 2256 0122 F368     		ldr	r3, [r6, #12]	@ unaligned
 2257 0124 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 2258 0128 1036     		adds	r6, r6, #16
 2259 012a 7546     		mov	r5, lr
 2260 012c 6645     		cmp	r6, ip
 2261 012e F4D1     		bne	.L112
 2262 0130 3068     		ldr	r0, [r6]	@ unaligned
 2263 0132 7168     		ldr	r1, [r6, #4]	@ unaligned
 2264 0134 03C5     		stmia	r5!, {r0, r1}
 2265 0136 3389     		ldrh	r3, [r6, #8]	@ unaligned
 2266 0138 2B80     		strh	r3, [r5]	@ unaligned
 2267 013a 5846     		mov	r0, fp
 2268 013c 5146     		mov	r1, r10
 2269 013e 4A46     		mov	r2, r9
 2270 0140 4346     		mov	r3, r8
 2271 0142 FFF7FEFF 		bl	writeConfigAddress
 2272              	.LVL142:
 174:Src/main.c    ****     VOLTAGE_sort(BMSconfig, voltage);
 2273              		.loc 1 174 5 view .LVU699
 174:Src/main.c    ****     VOLTAGE_sort(BMSconfig, voltage);
 2274              		.loc 1 174 15 is_stmt 0 view .LVU700
 2275 0146 BE4B     		ldr	r3, .L127
 2276 0148 7A69     		ldr	r2, [r7, #20]
 2277 014a 0F92     		str	r2, [sp, #60]
 2278 014c D3F800B0 		ldr	fp, [r3]	@ unaligned
 2279 0150 D3F804A0 		ldr	r10, [r3, #4]	@ unaligned
 2280 0154 D3F80890 		ldr	r9, [r3, #8]	@ unaligned
 2281 0158 D3F80C80 		ldr	r8, [r3, #12]	@ unaligned
 2282 015c 03F11006 		add	r6, r3, #16
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 59


 2283 0160 6D46     		mov	r5, sp
 2284 0162 03F1400C 		add	ip, r3, #64
 2285              	.L113:
 2286 0166 AE46     		mov	lr, r5
 2287 0168 3068     		ldr	r0, [r6]	@ unaligned
 2288 016a 7168     		ldr	r1, [r6, #4]	@ unaligned
 2289 016c B268     		ldr	r2, [r6, #8]	@ unaligned
 2290 016e F368     		ldr	r3, [r6, #12]	@ unaligned
 2291 0170 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 2292 0174 1036     		adds	r6, r6, #16
 2293 0176 7546     		mov	r5, lr
 2294 0178 6645     		cmp	r6, ip
 2295 017a F4D1     		bne	.L113
 2296 017c 3068     		ldr	r0, [r6]	@ unaligned
 2297 017e 7168     		ldr	r1, [r6, #4]	@ unaligned
 2298 0180 03C5     		stmia	r5!, {r0, r1}
 2299 0182 3389     		ldrh	r3, [r6, #8]	@ unaligned
 2300 0184 2B80     		strh	r3, [r5]	@ unaligned
 2301 0186 5846     		mov	r0, fp
 2302 0188 5146     		mov	r1, r10
 2303 018a 4A46     		mov	r2, r9
 2304 018c 4346     		mov	r3, r8
 2305 018e FFF7FEFF 		bl	readAllCellVoltages
 2306              	.LVL143:
 2307 0192 F860     		str	r0, [r7, #12]
 2308              	.LVL144:
 175:Src/main.c    ****     BMSVINF_message(BMSconfig, voltage);
 2309              		.loc 1 175 5 is_stmt 1 view .LVU701
 2310 0194 AA4B     		ldr	r3, .L127
 2311 0196 7A69     		ldr	r2, [r7, #20]
 2312 0198 0F92     		str	r2, [sp, #60]
 2313 019a D3F800B0 		ldr	fp, [r3]	@ unaligned
 2314 019e D3F804A0 		ldr	r10, [r3, #4]	@ unaligned
 2315 01a2 D3F80890 		ldr	r9, [r3, #8]	@ unaligned
 2316 01a6 D3F80C80 		ldr	r8, [r3, #12]	@ unaligned
 2317 01aa 03F11006 		add	r6, r3, #16
 2318 01ae 6D46     		mov	r5, sp
 2319 01b0 03F1400C 		add	ip, r3, #64
 2320              	.LVL145:
 2321              	.L114:
 175:Src/main.c    ****     BMSVINF_message(BMSconfig, voltage);
 2322              		.loc 1 175 5 is_stmt 0 view .LVU702
 2323 01b4 AE46     		mov	lr, r5
 2324 01b6 3068     		ldr	r0, [r6]	@ unaligned
 2325 01b8 7168     		ldr	r1, [r6, #4]	@ unaligned
 2326 01ba B268     		ldr	r2, [r6, #8]	@ unaligned
 2327 01bc F368     		ldr	r3, [r6, #12]	@ unaligned
 2328 01be AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 2329 01c2 1036     		adds	r6, r6, #16
 2330 01c4 7546     		mov	r5, lr
 2331 01c6 6645     		cmp	r6, ip
 2332 01c8 F4D1     		bne	.L114
 2333 01ca 3068     		ldr	r0, [r6]	@ unaligned
 2334 01cc 7168     		ldr	r1, [r6, #4]	@ unaligned
 2335 01ce 03C5     		stmia	r5!, {r0, r1}
 2336 01d0 3389     		ldrh	r3, [r6, #8]	@ unaligned
 2337 01d2 2B80     		strh	r3, [r5]	@ unaligned
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 60


 2338 01d4 5846     		mov	r0, fp
 2339 01d6 5146     		mov	r1, r10
 2340 01d8 4A46     		mov	r2, r9
 2341 01da 4346     		mov	r3, r8
 2342 01dc FFF7FEFF 		bl	VOLTAGE_sort
 2343              	.LVL146:
 176:Src/main.c    **** 
 2344              		.loc 1 176 5 is_stmt 1 view .LVU703
 2345 01e0 974B     		ldr	r3, .L127
 2346 01e2 7A69     		ldr	r2, [r7, #20]
 2347 01e4 0F92     		str	r2, [sp, #60]
 2348 01e6 D3F800B0 		ldr	fp, [r3]	@ unaligned
 2349 01ea D3F804A0 		ldr	r10, [r3, #4]	@ unaligned
 2350 01ee D3F80890 		ldr	r9, [r3, #8]	@ unaligned
 2351 01f2 D3F80C80 		ldr	r8, [r3, #12]	@ unaligned
 2352 01f6 03F11006 		add	r6, r3, #16
 2353 01fa 6D46     		mov	r5, sp
 2354 01fc 03F1400C 		add	ip, r3, #64
 2355              	.L115:
 2356 0200 AE46     		mov	lr, r5
 2357 0202 3068     		ldr	r0, [r6]	@ unaligned
 2358 0204 7168     		ldr	r1, [r6, #4]	@ unaligned
 2359 0206 B268     		ldr	r2, [r6, #8]	@ unaligned
 2360 0208 F368     		ldr	r3, [r6, #12]	@ unaligned
 2361 020a AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 2362 020e 1036     		adds	r6, r6, #16
 2363 0210 7546     		mov	r5, lr
 2364 0212 6645     		cmp	r6, ip
 2365 0214 F4D1     		bne	.L115
 2366 0216 3068     		ldr	r0, [r6]	@ unaligned
 2367 0218 7168     		ldr	r1, [r6, #4]	@ unaligned
 2368 021a 03C5     		stmia	r5!, {r0, r1}
 2369 021c 3389     		ldrh	r3, [r6, #8]	@ unaligned
 2370 021e 2B80     		strh	r3, [r5]	@ unaligned
 2371 0220 5846     		mov	r0, fp
 2372 0222 5146     		mov	r1, r10
 2373 0224 4A46     		mov	r2, r9
 2374 0226 4346     		mov	r3, r8
 2375 0228 FFF7FEFF 		bl	BMSVINF_message
 2376              	.LVL147:
 178:Src/main.c    ****     BMSTINF_message(BMSconfig, temp);
 2377              		.loc 1 178 5 view .LVU704
 178:Src/main.c    ****     BMSTINF_message(BMSconfig, temp);
 2378              		.loc 1 178 15 is_stmt 0 view .LVU705
 2379 022c 844B     		ldr	r3, .L127
 2380 022e 7A68     		ldr	r2, [r7, #4]
 2381 0230 1192     		str	r2, [sp, #68]
 2382 0232 BA68     		ldr	r2, [r7, #8]
 2383 0234 1092     		str	r2, [sp, #64]
 2384 0236 3A69     		ldr	r2, [r7, #16]
 2385 0238 0F92     		str	r2, [sp, #60]
 2386 023a D3F800B0 		ldr	fp, [r3]	@ unaligned
 2387 023e D3F804A0 		ldr	r10, [r3, #4]	@ unaligned
 2388 0242 D3F80890 		ldr	r9, [r3, #8]	@ unaligned
 2389 0246 D3F80C80 		ldr	r8, [r3, #12]	@ unaligned
 2390 024a 03F11006 		add	r6, r3, #16
 2391 024e 6D46     		mov	r5, sp
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 61


 2392 0250 03F1400C 		add	ip, r3, #64
 2393              	.L116:
 2394 0254 AE46     		mov	lr, r5
 2395 0256 3068     		ldr	r0, [r6]	@ unaligned
 2396 0258 7168     		ldr	r1, [r6, #4]	@ unaligned
 2397 025a B268     		ldr	r2, [r6, #8]	@ unaligned
 2398 025c F368     		ldr	r3, [r6, #12]	@ unaligned
 2399 025e AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 2400 0262 1036     		adds	r6, r6, #16
 2401 0264 7546     		mov	r5, lr
 2402 0266 6645     		cmp	r6, ip
 2403 0268 F4D1     		bne	.L116
 2404 026a 3068     		ldr	r0, [r6]	@ unaligned
 2405 026c 7168     		ldr	r1, [r6, #4]	@ unaligned
 2406 026e 03C5     		stmia	r5!, {r0, r1}
 2407 0270 3389     		ldrh	r3, [r6, #8]	@ unaligned
 2408 0272 2B80     		strh	r3, [r5]	@ unaligned
 2409 0274 5846     		mov	r0, fp
 2410 0276 5146     		mov	r1, r10
 2411 0278 4A46     		mov	r2, r9
 2412 027a 4346     		mov	r3, r8
 2413 027c FFF7FEFF 		bl	readAllCellTemps
 2414              	.LVL148:
 179:Src/main.c    **** 
 2415              		.loc 1 179 5 is_stmt 1 view .LVU706
 2416 0280 6F4B     		ldr	r3, .L127
 2417 0282 3A69     		ldr	r2, [r7, #16]
 2418 0284 0F92     		str	r2, [sp, #60]
 2419 0286 D3F800B0 		ldr	fp, [r3]	@ unaligned
 2420 028a D3F804A0 		ldr	r10, [r3, #4]	@ unaligned
 2421 028e D3F80890 		ldr	r9, [r3, #8]	@ unaligned
 2422 0292 D3F80C80 		ldr	r8, [r3, #12]	@ unaligned
 2423 0296 03F11006 		add	r6, r3, #16
 2424 029a 6D46     		mov	r5, sp
 2425 029c 03F1400C 		add	ip, r3, #64
 2426              	.L117:
 2427 02a0 AE46     		mov	lr, r5
 2428 02a2 3068     		ldr	r0, [r6]	@ unaligned
 2429 02a4 7168     		ldr	r1, [r6, #4]	@ unaligned
 2430 02a6 B268     		ldr	r2, [r6, #8]	@ unaligned
 2431 02a8 F368     		ldr	r3, [r6, #12]	@ unaligned
 2432 02aa AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 2433 02ae 1036     		adds	r6, r6, #16
 2434 02b0 7546     		mov	r5, lr
 2435 02b2 6645     		cmp	r6, ip
 2436 02b4 F4D1     		bne	.L117
 2437 02b6 3068     		ldr	r0, [r6]	@ unaligned
 2438 02b8 7168     		ldr	r1, [r6, #4]	@ unaligned
 2439 02ba 03C5     		stmia	r5!, {r0, r1}
 2440 02bc 3389     		ldrh	r3, [r6, #8]	@ unaligned
 2441 02be 2B80     		strh	r3, [r5]	@ unaligned
 2442 02c0 5846     		mov	r0, fp
 2443 02c2 5146     		mov	r1, r10
 2444 02c4 4A46     		mov	r2, r9
 2445 02c6 4346     		mov	r3, r8
 2446 02c8 FFF7FEFF 		bl	BMSTINF_message
 2447              	.LVL149:
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 62


 193:Src/main.c    ****     dischargeCellGroups(BMSconfig, discharge);
 2448              		.loc 1 193 5 view .LVU707
 2449 02cc 5C4B     		ldr	r3, .L127
 2450 02ce 0022     		movs	r2, #0
 2451 02d0 1192     		str	r2, [sp, #68]
 2452 02d2 1094     		str	r4, [sp, #64]
 2453 02d4 7A69     		ldr	r2, [r7, #20]
 2454 02d6 0F92     		str	r2, [sp, #60]
 2455 02d8 D3F800B0 		ldr	fp, [r3]	@ unaligned
 2456 02dc D3F804A0 		ldr	r10, [r3, #4]	@ unaligned
 2457 02e0 D3F80890 		ldr	r9, [r3, #8]	@ unaligned
 2458 02e4 D3F80C80 		ldr	r8, [r3, #12]	@ unaligned
 2459 02e8 03F11006 		add	r6, r3, #16
 2460 02ec 6D46     		mov	r5, sp
 2461 02ee 03F1400C 		add	ip, r3, #64
 2462              	.L118:
 2463 02f2 AE46     		mov	lr, r5
 2464 02f4 3068     		ldr	r0, [r6]	@ unaligned
 2465 02f6 7168     		ldr	r1, [r6, #4]	@ unaligned
 2466 02f8 B268     		ldr	r2, [r6, #8]	@ unaligned
 2467 02fa F368     		ldr	r3, [r6, #12]	@ unaligned
 2468 02fc AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 2469 0300 1036     		adds	r6, r6, #16
 2470 0302 7546     		mov	r5, lr
 2471 0304 6645     		cmp	r6, ip
 2472 0306 F4D1     		bne	.L118
 2473 0308 3068     		ldr	r0, [r6]	@ unaligned
 2474 030a 7168     		ldr	r1, [r6, #4]	@ unaligned
 2475 030c 03C5     		stmia	r5!, {r0, r1}
 2476 030e 3389     		ldrh	r3, [r6, #8]	@ unaligned
 2477 0310 2B80     		strh	r3, [r5]	@ unaligned
 2478 0312 5846     		mov	r0, fp
 2479 0314 5146     		mov	r1, r10
 2480 0316 4A46     		mov	r2, r9
 2481 0318 4346     		mov	r3, r8
 2482 031a FFF7FEFF 		bl	setDischarge
 2483              	.LVL150:
 194:Src/main.c    **** 
 2484              		.loc 1 194 5 view .LVU708
 2485 031e 484B     		ldr	r3, .L127
 2486 0320 0F94     		str	r4, [sp, #60]
 2487 0322 D3F800B0 		ldr	fp, [r3]	@ unaligned
 2488 0326 D3F804A0 		ldr	r10, [r3, #4]	@ unaligned
 2489 032a D3F80890 		ldr	r9, [r3, #8]	@ unaligned
 2490 032e D3F80C80 		ldr	r8, [r3, #12]	@ unaligned
 2491 0332 03F11006 		add	r6, r3, #16
 2492 0336 6D46     		mov	r5, sp
 2493 0338 03F1400C 		add	ip, r3, #64
 2494              	.L119:
 2495 033c AE46     		mov	lr, r5
 2496 033e 3068     		ldr	r0, [r6]	@ unaligned
 2497 0340 7168     		ldr	r1, [r6, #4]	@ unaligned
 2498 0342 B268     		ldr	r2, [r6, #8]	@ unaligned
 2499 0344 F368     		ldr	r3, [r6, #12]	@ unaligned
 2500 0346 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 2501 034a 1036     		adds	r6, r6, #16
 2502 034c 7546     		mov	r5, lr
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 63


 2503 034e 6645     		cmp	r6, ip
 2504 0350 F4D1     		bne	.L119
 2505 0352 3068     		ldr	r0, [r6]	@ unaligned
 2506 0354 7168     		ldr	r1, [r6, #4]	@ unaligned
 2507 0356 03C5     		stmia	r5!, {r0, r1}
 2508 0358 3389     		ldrh	r3, [r6, #8]	@ unaligned
 2509 035a 2B80     		strh	r3, [r5]	@ unaligned
 2510 035c 5846     		mov	r0, fp
 2511 035e 5146     		mov	r1, r10
 2512 0360 4A46     		mov	r2, r9
 2513 0362 4346     		mov	r3, r8
 2514 0364 FFF7FEFF 		bl	dischargeCellGroups
 2515              	.LVL151:
 196:Src/main.c    **** 
 2516              		.loc 1 196 5 view .LVU709
 2517 0368 4FF4FA70 		mov	r0, #500
 2518 036c FFF7FEFF 		bl	HAL_Delay
 2519              	.LVL152:
 198:Src/main.c    ****     discharge[0][1] = 0;
 2520              		.loc 1 198 5 view .LVU710
 198:Src/main.c    ****     discharge[0][1] = 0;
 2521              		.loc 1 198 21 is_stmt 0 view .LVU711
 2522 0370 0023     		movs	r3, #0
 2523 0372 2370     		strb	r3, [r4]
 199:Src/main.c    ****     discharge[0][2] = 0;
 2524              		.loc 1 199 5 is_stmt 1 view .LVU712
 199:Src/main.c    ****     discharge[0][2] = 0;
 2525              		.loc 1 199 21 is_stmt 0 view .LVU713
 2526 0374 6370     		strb	r3, [r4, #1]
 200:Src/main.c    ****     discharge[0][3] = 0;
 2527              		.loc 1 200 5 is_stmt 1 view .LVU714
 200:Src/main.c    ****     discharge[0][3] = 0;
 2528              		.loc 1 200 21 is_stmt 0 view .LVU715
 2529 0376 A370     		strb	r3, [r4, #2]
 201:Src/main.c    ****     discharge[0][4] = 0;
 2530              		.loc 1 201 5 is_stmt 1 view .LVU716
 201:Src/main.c    ****     discharge[0][4] = 0;
 2531              		.loc 1 201 21 is_stmt 0 view .LVU717
 2532 0378 E370     		strb	r3, [r4, #3]
 202:Src/main.c    ****     discharge[0][5] = 0;
 2533              		.loc 1 202 5 is_stmt 1 view .LVU718
 202:Src/main.c    ****     discharge[0][5] = 0;
 2534              		.loc 1 202 21 is_stmt 0 view .LVU719
 2535 037a 2371     		strb	r3, [r4, #4]
 203:Src/main.c    ****     discharge[0][6] = 0;
 2536              		.loc 1 203 5 is_stmt 1 view .LVU720
 203:Src/main.c    ****     discharge[0][6] = 0;
 2537              		.loc 1 203 21 is_stmt 0 view .LVU721
 2538 037c 6371     		strb	r3, [r4, #5]
 204:Src/main.c    ****     discharge[0][7] = 0;
 2539              		.loc 1 204 5 is_stmt 1 view .LVU722
 204:Src/main.c    ****     discharge[0][7] = 0;
 2540              		.loc 1 204 21 is_stmt 0 view .LVU723
 2541 037e A371     		strb	r3, [r4, #6]
 205:Src/main.c    ****     dischargeCellGroups(BMSconfig, discharge);
 2542              		.loc 1 205 5 is_stmt 1 view .LVU724
 205:Src/main.c    ****     dischargeCellGroups(BMSconfig, discharge);
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 64


 2543              		.loc 1 205 21 is_stmt 0 view .LVU725
 2544 0380 E371     		strb	r3, [r4, #7]
 206:Src/main.c    **** 
 2545              		.loc 1 206 5 is_stmt 1 view .LVU726
 2546 0382 2F4B     		ldr	r3, .L127
 2547 0384 0F94     		str	r4, [sp, #60]
 2548 0386 D3F800B0 		ldr	fp, [r3]	@ unaligned
 2549 038a D3F804A0 		ldr	r10, [r3, #4]	@ unaligned
 2550 038e D3F80890 		ldr	r9, [r3, #8]	@ unaligned
 2551 0392 D3F80C80 		ldr	r8, [r3, #12]	@ unaligned
 2552 0396 03F11006 		add	r6, r3, #16
 2553 039a 6D46     		mov	r5, sp
 2554 039c 03F1400C 		add	ip, r3, #64
 2555              	.L120:
 2556 03a0 AE46     		mov	lr, r5
 2557 03a2 3068     		ldr	r0, [r6]	@ unaligned
 2558 03a4 7168     		ldr	r1, [r6, #4]	@ unaligned
 2559 03a6 B268     		ldr	r2, [r6, #8]	@ unaligned
 2560 03a8 F368     		ldr	r3, [r6, #12]	@ unaligned
 2561 03aa AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 2562 03ae 1036     		adds	r6, r6, #16
 2563 03b0 7546     		mov	r5, lr
 2564 03b2 6645     		cmp	r6, ip
 2565 03b4 F4D1     		bne	.L120
 2566 03b6 3068     		ldr	r0, [r6]	@ unaligned
 2567 03b8 7168     		ldr	r1, [r6, #4]	@ unaligned
 2568 03ba 03C5     		stmia	r5!, {r0, r1}
 2569 03bc 3389     		ldrh	r3, [r6, #8]	@ unaligned
 2570 03be 2B80     		strh	r3, [r5]	@ unaligned
 2571 03c0 5846     		mov	r0, fp
 2572 03c2 5146     		mov	r1, r10
 2573 03c4 4A46     		mov	r2, r9
 2574 03c6 4346     		mov	r3, r8
 2575 03c8 FFF7FEFF 		bl	dischargeCellGroups
 2576              	.LVL153:
 210:Src/main.c    ****     //BMSSTAT_message(BMSconfig, number, faults);
 2577              		.loc 1 210 5 view .LVU727
 2578 03cc 1C4B     		ldr	r3, .L127
 2579 03ce FA68     		ldr	r2, [r7, #12]
 2580 03d0 1492     		str	r2, [sp, #80]
 2581 03d2 BA68     		ldr	r2, [r7, #8]
 2582 03d4 1392     		str	r2, [sp, #76]
 2583 03d6 1294     		str	r4, [sp, #72]
 2584 03d8 3A68     		ldr	r2, [r7]
 2585 03da 1192     		str	r2, [sp, #68]
 2586 03dc 3A69     		ldr	r2, [r7, #16]
 2587 03de 1092     		str	r2, [sp, #64]
 2588 03e0 7A69     		ldr	r2, [r7, #20]
 2589 03e2 0F92     		str	r2, [sp, #60]
 2590 03e4 D3F800B0 		ldr	fp, [r3]	@ unaligned
 2591 03e8 D3F804A0 		ldr	r10, [r3, #4]	@ unaligned
 2592 03ec D3F80890 		ldr	r9, [r3, #8]	@ unaligned
 2593 03f0 D3F80C80 		ldr	r8, [r3, #12]	@ unaligned
 2594 03f4 03F11006 		add	r6, r3, #16
 2595 03f8 6D46     		mov	r5, sp
 2596 03fa 03F1400C 		add	ip, r3, #64
 2597              	.L121:
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 65


 2598 03fe AE46     		mov	lr, r5
 2599 0400 3068     		ldr	r0, [r6]	@ unaligned
 2600 0402 7168     		ldr	r1, [r6, #4]	@ unaligned
 2601 0404 B268     		ldr	r2, [r6, #8]	@ unaligned
 2602 0406 F368     		ldr	r3, [r6, #12]	@ unaligned
 2603 0408 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 2604 040c 1036     		adds	r6, r6, #16
 2605 040e 7546     		mov	r5, lr
 2606 0410 6645     		cmp	r6, ip
 2607 0412 F4D1     		bne	.L121
 2608 0414 3068     		ldr	r0, [r6]	@ unaligned
 2609 0416 7168     		ldr	r1, [r6, #4]	@ unaligned
 2610 0418 03C5     		stmia	r5!, {r0, r1}
 2611 041a 3389     		ldrh	r3, [r6, #8]	@ unaligned
 2612 041c 2B80     		strh	r3, [r5]	@ unaligned
 2613 041e 5846     		mov	r0, fp
 2614 0420 5146     		mov	r1, r10
 2615 0422 4A46     		mov	r2, r9
 2616 0424 4346     		mov	r3, r8
 2617 0426 FFF7FEFF 		bl	CELLVAL_message
 2618              	.LVL154:
 213:Src/main.c    **** 
 2619              		.loc 1 213 5 view .LVU728
 213:Src/main.c    **** 
 2620              		.loc 1 213 8 is_stmt 0 view .LVU729
 2621 042a FB68     		ldr	r3, [r7, #12]
 2622 042c 002B     		cmp	r3, #0
 2623 042e 3FF461AE 		beq	.L122
 213:Src/main.c    **** 
 2624              		.loc 1 213 23 is_stmt 1 discriminator 1 view .LVU730
 2625 0432 4FF40051 		mov	r1, #8192
 2626 0436 0348     		ldr	r0, .L127+4
 2627 0438 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 2628              	.LVL155:
 2629 043c 5AE6     		b	.L122
 2630              	.L128:
 2631 043e 00BF     		.align	2
 2632              	.L127:
 2633 0440 00000000 		.word	BMSconfig
 2634 0444 00100140 		.word	1073811456
 2635              		.cfi_endproc
 2636              	.LFE66:
 2638              		.section	.text.Error_Handler,"ax",%progbits
 2639              		.align	1
 2640              		.global	Error_Handler
 2641              		.syntax unified
 2642              		.thumb
 2643              		.thumb_func
 2644              		.fpu softvfp
 2646              	Error_Handler:
 2647              	.LFB81:
 742:Src/main.c    **** 
 743:Src/main.c    **** /* USER CODE END 4 */
 744:Src/main.c    **** 
 745:Src/main.c    **** /**
 746:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 747:Src/main.c    ****   * @retval None
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 66


 748:Src/main.c    ****   */
 749:Src/main.c    **** void Error_Handler(void)
 750:Src/main.c    **** {
 2648              		.loc 1 750 1 view -0
 2649              		.cfi_startproc
 2650              		@ args = 0, pretend = 0, frame = 0
 2651              		@ frame_needed = 0, uses_anonymous_args = 0
 2652              		@ link register save eliminated.
 751:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 752:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 753:Src/main.c    **** 
 754:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 755:Src/main.c    **** }
 2653              		.loc 1 755 1 view .LVU732
 2654 0000 7047     		bx	lr
 2655              		.cfi_endproc
 2656              	.LFE81:
 2658              		.comm	minimum,2,2
 2659              		.comm	BMSTINF_DATA,8,4
 2660              		.comm	BMSSTAT_DATA,6,4
 2661              		.comm	CELLVAL_DATA,6,4
 2662              		.comm	TxMailbox,4,4
 2663              		.comm	RxData,8,4
 2664              		.comm	TxData,8,4
 2665              		.comm	RxHeader,28,4
 2666              		.comm	TxHeader,24,4
 2667              		.comm	BMSconfig,74,4
 2668              		.comm	CommandCode,2,2
 2669              		.comm	htim2,64,4
 2670              		.comm	hspi1,88,4
 2671              		.comm	hcan,40,4
 2672              		.comm	hadc1,48,4
 2673              		.text
 2674              	.Letext0:
 2675              		.file 2 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 2676              		.file 3 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 2677              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 2678              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2679              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2680              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2681              		.file 8 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 2682              		.file 9 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 2683              		.file 10 "c:\\arm-gcc\\8-2018-q4-major\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 2684              		.file 11 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 2685              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2686              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2687              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2688              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2689              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2690              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 2691              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2692              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 2693              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2694              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 2695              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2696              		.file 23 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\stdlib.h"
 2697              		.file 24 "Inc/BMSconfig.h"
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 67


 2698              		.file 25 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\math.h"
 2699              		.file 26 "Inc/LTC6811.h"
 2700              		.file 27 "Inc/SPI.h"
 2701              		.file 28 "<built-in>"
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\cygwin64\tmp\ccJCya39.s:16     .text.MX_GPIO_Init:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\cygwin64\tmp\ccJCya39.s:208    .text.MX_GPIO_Init:000000e0 $d
C:\cygwin64\tmp\ccJCya39.s:216    .text.MX_ADC1_Init:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:222    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\cygwin64\tmp\ccJCya39.s:299    .text.MX_ADC1_Init:00000040 $d
                            *COM*:00000030 hadc1
C:\cygwin64\tmp\ccJCya39.s:305    .text.MX_CAN_Init:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:311    .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\cygwin64\tmp\ccJCya39.s:402    .text.MX_CAN_Init:00000050 $d
                            *COM*:00000028 hcan
                            *COM*:00000018 TxHeader
C:\cygwin64\tmp\ccJCya39.s:409    .text.MX_TIM2_Init:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:415    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\cygwin64\tmp\ccJCya39.s:497    .text.MX_TIM2_Init:00000048 $d
                            *COM*:00000040 htim2
C:\cygwin64\tmp\ccJCya39.s:502    .text.SystemClock_Config:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:509    .text.SystemClock_Config:00000000 SystemClock_Config
C:\cygwin64\tmp\ccJCya39.s:606    .text.VOLTAGE_sort:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:613    .text.VOLTAGE_sort:00000000 VOLTAGE_sort
C:\cygwin64\tmp\ccJCya39.s:684    .text.CONNECTION_sort:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:691    .text.CONNECTION_sort:00000000 CONNECTION_sort
C:\cygwin64\tmp\ccJCya39.s:762    .text.FAULT_check:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:769    .text.FAULT_check:00000000 FAULT_check
C:\cygwin64\tmp\ccJCya39.s:1099   .text.FAULT_check:0000014c $d
C:\cygwin64\tmp\ccJCya39.s:1104   .text.setDischarge:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:1111   .text.setDischarge:00000000 setDischarge
C:\cygwin64\tmp\ccJCya39.s:1266   .text.setDischarge:0000008c $d
                            *COM*:00000002 minimum
C:\cygwin64\tmp\ccJCya39.s:1271   .text.CELLVAL_message:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:1278   .text.CELLVAL_message:00000000 CELLVAL_message
C:\cygwin64\tmp\ccJCya39.s:1453   .text.CELLVAL_message:000000ac $d
                            *COM*:00000006 CELLVAL_DATA
                            *COM*:00000004 TxMailbox
C:\cygwin64\tmp\ccJCya39.s:1461   .text.BMSSTAT_message:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:1468   .text.BMSSTAT_message:00000000 BMSSTAT_message
C:\cygwin64\tmp\ccJCya39.s:1566   .text.BMSSTAT_message:0000006c $d
                            *COM*:00000006 BMSSTAT_DATA
C:\cygwin64\tmp\ccJCya39.s:1574   .text.BMSVINF_message:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:1581   .text.BMSVINF_message:00000000 BMSVINF_message
C:\cygwin64\tmp\ccJCya39.s:1803   .text.BMSVINF_message:000000c8 $d
C:\cygwin64\tmp\ccJCya39.s:1811   .text.BMSTINF_message:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:1818   .text.BMSTINF_message:00000000 BMSTINF_message
C:\cygwin64\tmp\ccJCya39.s:2032   .text.BMSTINF_message:000000b8 $d
C:\cygwin64\tmp\ccJCya39.s:2039   .text.main:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:2046   .text.main:00000000 main
C:\cygwin64\tmp\ccJCya39.s:2225   .text.main:000000f0 $d
                            *COM*:0000004a BMSconfig
C:\cygwin64\tmp\ccJCya39.s:2229   .text.main:000000f4 $t
C:\cygwin64\tmp\ccJCya39.s:2633   .text.main:00000440 $d
C:\cygwin64\tmp\ccJCya39.s:2639   .text.Error_Handler:00000000 $t
C:\cygwin64\tmp\ccJCya39.s:2646   .text.Error_Handler:00000000 Error_Handler
                            *COM*:00000008 BMSTINF_DATA
                            *COM*:00000008 RxData
                            *COM*:00000008 TxData
ARM GAS  C:\cygwin64\tmp\ccJCya39.s 			page 69


                            *COM*:0000001c RxHeader
                            *COM*:00000002 CommandCode
                            *COM*:00000058 hspi1

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
HAL_CAN_Start
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_CAN_AddTxMessage
HAL_Delay
HAL_Init
SPI_Init
initPECTable
loadConfig
writeConfigAll
writeConfigAddress
readAllCellVoltages
readAllCellTemps
dischargeCellGroups
HAL_GPIO_TogglePin
