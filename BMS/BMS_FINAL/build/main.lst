ARM GAS  /tmp/ccvy7xoI.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB72:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "LTC6811.h"
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
ARM GAS  /tmp/ccvy7xoI.s 			page 2


  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** #define CELLVAL_ID      0x007
  37:Src/main.c    **** #define BMSSTAT_ID      0x008
  38:Src/main.c    **** #define BMSVINF_ID      0x009
  39:Src/main.c    **** #define BMSTINF_ID      0x00A
  40:Src/main.c    **** /* USER CODE END PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** ADC_HandleTypeDef hadc1;
  49:Src/main.c    **** 
  50:Src/main.c    **** CAN_HandleTypeDef hcan;
  51:Src/main.c    **** 
  52:Src/main.c    **** SPI_HandleTypeDef hspi1;
  53:Src/main.c    **** 
  54:Src/main.c    **** TIM_HandleTypeDef htim2;
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE BEGIN PV */
  57:Src/main.c    **** CommandCodeTypedef CommandCode;
  58:Src/main.c    **** BMSconfigStructTypedef BMSconfig;
  59:Src/main.c    **** 
  60:Src/main.c    **** CAN_TxHeaderTypeDef   TxHeader;
  61:Src/main.c    **** CAN_RxHeaderTypeDef   RxHeader;
  62:Src/main.c    **** uint8_t               TxData[8];
  63:Src/main.c    **** uint8_t               RxData[8];
  64:Src/main.c    **** uint32_t              TxMailbox;
  65:Src/main.c    **** 
  66:Src/main.c    **** uint8_t               CELLVAL_DATA[6];
  67:Src/main.c    **** uint8_t               BMSSTAT_DATA[6];
  68:Src/main.c    **** uint8_t               BMSVINF_DATA[8];
  69:Src/main.c    **** uint8_t               BMSTINF_DATA[8];
  70:Src/main.c    **** uint8_t				  CHARGER_DATA[8];
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE END PV */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  75:Src/main.c    **** void SystemClock_Config(void);
  76:Src/main.c    **** static void MX_GPIO_Init(void);
  77:Src/main.c    **** static void MX_ADC1_Init(void);
  78:Src/main.c    **** static void MX_CAN_Init(void);
  79:Src/main.c    **** static void MX_SPI1_Init(void);
  80:Src/main.c    **** static void MX_TIM2_Init(void);
  81:Src/main.c    **** /* USER CODE BEGIN PFP */
  82:Src/main.c    **** void VOLTAGE_sort(uint16_t voltage[12][12]);
  83:Src/main.c    **** void CONNECTION_sort(bool connection[12][12]);
  84:Src/main.c    **** void FAULT_check(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool tempFault[12][4], b
  85:Src/main.c    **** void CELLVAL_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], uint16_t cellTemp[12
  86:Src/main.c    **** void BMSSTAT_message(BMSconfigStructTypedef cfg, uint8_t cellNumber[5], bool faultType[5]);
  87:Src/main.c    **** /* USER CODE END PFP */
  88:Src/main.c    **** 
  89:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  90:Src/main.c    **** /* USER CODE BEGIN 0 */
ARM GAS  /tmp/ccvy7xoI.s 			page 3


  91:Src/main.c    **** 
  92:Src/main.c    **** /* USER CODE END 0 */
  93:Src/main.c    **** 
  94:Src/main.c    **** /**
  95:Src/main.c    ****   * @brief  The application entry point.
  96:Src/main.c    ****   * @retval int
  97:Src/main.c    ****   */
  98:Src/main.c    **** int main(void)
  99:Src/main.c    **** {
 100:Src/main.c    ****   /* USER CODE BEGIN 1 */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE END 1 */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 107:Src/main.c    ****   HAL_Init();
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN Init */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END Init */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Configure the system clock */
 114:Src/main.c    ****   SystemClock_Config();
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE END SysInit */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Initialize all configured peripherals */
 121:Src/main.c    ****   MX_GPIO_Init();
 122:Src/main.c    ****   MX_ADC1_Init();
 123:Src/main.c    ****   MX_CAN_Init();
 124:Src/main.c    ****   //MX_SPI1_Init();
 125:Src/main.c    ****   MX_TIM2_Init();
 126:Src/main.c    ****   /* USER CODE BEGIN 2 */
 127:Src/main.c    ****   SPI_Init();
 128:Src/main.c    ****   initPECTable();
 129:Src/main.c    ****   loadConfig(&BMSconfig); // loads configuration settings from config.c
 130:Src/main.c    ****   // set trigger high momentarily 
 131:Src/main.c    ****   writeConfigAll(BMSconfig);
 132:Src/main.c    **** 
 133:Src/main.c    ****   uint16_t voltage[BMSconfig.numOfICs][BMSconfig.numOfCellInputs];        //12, 12
 134:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 135:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 136:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 137:Src/main.c    ****   bool connection[BMSconfig.numOfICs][BMSconfig.numOfCellInputs];         //12, 12
 138:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8 
 139:Src/main.c    **** 
 140:Src/main.c    ****   bool vreturn = false;
 141:Src/main.c    ****   bool treturn = false;
 142:Src/main.c    ****   bool disconnectFault = false;
 143:Src/main.c    ****   uint8_t disconnectedCell;
 144:Src/main.c    ****   uint8_t chargerate;
 145:Src/main.c    **** 
 146:Src/main.c    ****   uint8_t number[5];
 147:Src/main.c    ****   bool faults[5];
ARM GAS  /tmp/ccvy7xoI.s 			page 4


 148:Src/main.c    **** 
 149:Src/main.c    ****   bool AIR;
 150:Src/main.c    ****   bool CHARGE_EN;
 151:Src/main.c    **** 
 152:Src/main.c    ****   uint16_t testVoltage[12];
 153:Src/main.c    ****   uint8_t testData[2];
 154:Src/main.c    ****   uint16_t testTemp[4];
 155:Src/main.c    ****   bool testDC[4];
 156:Src/main.c    ****   bool testOT[4];
 157:Src/main.c    ****   bool testConnection[12];
 158:Src/main.c    ****   /* USER CODE END 2 */
 159:Src/main.c    **** 
 160:Src/main.c    ****   /* Infinite loop */
 161:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 162:Src/main.c    ****   while (1)
 163:Src/main.c    ****   {
 164:Src/main.c    ****     /* USER CODE END WHILE */
 165:Src/main.c    **** 
 166:Src/main.c    ****     /* USER CODE BEGIN 3 */
 167:Src/main.c    **** 
 168:Src/main.c    ****     // read all cell voltages and temperatures and check for disconnected cells
 169:Src/main.c    ****     /*vreturn = readAllCellVoltages(BMSconfig, voltage);
 170:Src/main.c    ****     VOLTAGE_sort(voltage); // puts relevant voltages into first 8 positions
 171:Src/main.c    ****     treturn = readAllCellTemps(BMSconfig, temp, overtemp, tempdisconnect);
 172:Src/main.c    ****     checkAllCellConnections(BMSconfig, voltage, connection, disconnectedCell);
 173:Src/main.c    ****     CONNECTION_sort(connection); // puts relevant cell connections into first 8 positions
 174:Src/main.c    **** 
 175:Src/main.c    ****     AIR = HAL_GPIO_ReadPin(GPIOB, AIR_Pin);
 176:Src/main.c    ****     CHARGE_EN = HAL_GPIO_ReadPin(GPIOB, CHARGE_EN_Pin);
 177:Src/main.c    **** 
 178:Src/main.c    ****     if ((AIR == 0) && (CHARGE_EN == 0)) {
 179:Src/main.c    ****       setDischarge(BMSconfig, voltage, connection, discharge, chargerate);
 180:Src/main.c    ****       // send charger CAN message
 181:Src/main.c    ****     }
 182:Src/main.c    **** 
 183:Src/main.c    ****     FAULT_check(BMSconfig, voltage, overtemp, tempdisconnect, connection, number, faults);
 184:Src/main.c    **** 
 185:Src/main.c    ****     // send CAN messages
 186:Src/main.c    ****     CELLVAL_message(BMSconfig, voltage, temp, connection, discharge, tempdisconnect, vreturn);
 187:Src/main.c    ****     //BMSSTAT_message(BMSconfig, number, faults);*/
 188:Src/main.c    **** 
 189:Src/main.c    ****     //discharge[0][0] = 1;
 190:Src/main.c    ****     //dischargeCellGroups(BMSconfig, discharge);
 191:Src/main.c    ****     
 192:Src/main.c    ****     vreturn = readAllCellVoltages(BMSconfig, voltage);
 193:Src/main.c    **** 
 194:Src/main.c    ****     voltage[0][4] = voltage[0][6];
 195:Src/main.c    ****     voltage[0][5] = voltage[0][7];
 196:Src/main.c    ****     voltage[0][6] = voltage[0][8];
 197:Src/main.c    ****     voltage[0][7] = voltage[0][9];
 198:Src/main.c    **** 
 199:Src/main.c    ****     checkCellConnection(voltage[0], testConnection);
 200:Src/main.c    **** 
 201:Src/main.c    ****     connection[0][4] = connection[0][6];
 202:Src/main.c    ****     connection[0][5] = connection[0][7];
 203:Src/main.c    ****     connection[0][6] = connection[0][8];
 204:Src/main.c    ****     connection[0][7] = connection[0][9];
ARM GAS  /tmp/ccvy7xoI.s 			page 5


 205:Src/main.c    **** 
 206:Src/main.c    ****     //VOLTAGE_sort(voltage);
 207:Src/main.c    ****     //readCellTemp(0, testTemp, testDC, testOT);
 208:Src/main.c    ****     //writeConfigAll(BMSconfig);
 209:Src/main.c    ****     //vreturn = readCellVoltage(0, testVoltage);
 210:Src/main.c    ****     //HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 211:Src/main.c    ****     //HAL_GPIO_TogglePin(GPIOB, BMS_FLT_Pin);
 212:Src/main.c    **** 
 213:Src/main.c    ****     /*TxHeader.StdId = 100;
 214:Src/main.c    ****     TxHeader.DLC = 8;
 215:Src/main.c    **** 
 216:Src/main.c    ****     testData[0] = (uint8_t) ((testVoltage[0] >> 8) & 0xFF);
 217:Src/main.c    ****     testData[1] = (uint8_t) (testVoltage[0] & 0xFF);
 218:Src/main.c    ****     testData[2] = (uint8_t) ((testVoltage[1] >> 8) & 0xFF);
 219:Src/main.c    ****     testData[3] = (uint8_t) (testVoltage[1] & 0xFF);
 220:Src/main.c    ****     testData[4] = (uint8_t) ((testVoltage[2] >> 8) & 0xFF);
 221:Src/main.c    ****     testData[5] = (uint8_t) (testVoltage[2] & 0xFF);
 222:Src/main.c    ****     testData[6] = (uint8_t) ((testVoltage[3] >> 8) & 0xFF);
 223:Src/main.c    ****     testData[7] = (uint8_t) (testVoltage[3] & 0xFF);
 224:Src/main.c    **** 
 225:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, testData, &TxMailbox);
 226:Src/main.c    **** 
 227:Src/main.c    ****     testData[0] = (uint8_t) ((testVoltage[4] >> 8) & 0xFF);
 228:Src/main.c    ****     testData[1] = (uint8_t) (testVoltage[4] & 0xFF);
 229:Src/main.c    ****     testData[2] = (uint8_t) ((testVoltage[5] >> 8) & 0xFF);
 230:Src/main.c    ****     testData[3] = (uint8_t) (testVoltage[5] & 0xFF);
 231:Src/main.c    ****     testData[4] = (uint8_t) ((testVoltage[6] >> 8) & 0xFF);
 232:Src/main.c    ****     testData[5] = (uint8_t) (testVoltage[6] & 0xFF);
 233:Src/main.c    ****     testData[6] = (uint8_t) ((testVoltage[7] >> 8) & 0xFF);
 234:Src/main.c    ****     testData[7] = (uint8_t) (testVoltage[7] & 0xFF);
 235:Src/main.c    **** 
 236:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, testData, &TxMailbox);
 237:Src/main.c    **** 
 238:Src/main.c    ****     testData[0] = (uint8_t) ((testVoltage[8] >> 8) & 0xFF);
 239:Src/main.c    ****     testData[1] = (uint8_t) (testVoltage[8] & 0xFF);
 240:Src/main.c    ****     testData[2] = (uint8_t) ((testVoltage[9] >> 8) & 0xFF);
 241:Src/main.c    ****     testData[3] = (uint8_t) (testVoltage[9] & 0xFF);
 242:Src/main.c    ****     testData[4] = (uint8_t) ((testVoltage[10] >> 8) & 0xFF);
 243:Src/main.c    ****     testData[5] = (uint8_t) (testVoltage[10] & 0xFF);
 244:Src/main.c    ****     testData[6] = (uint8_t) ((testVoltage[11] >> 8) & 0xFF);
 245:Src/main.c    ****     testData[7] = (uint8_t) (testVoltage[11] & 0xFF);
 246:Src/main.c    **** 
 247:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, testData, &TxMailbox);*/
 248:Src/main.c    **** 
 249:Src/main.c    ****     CELLVAL_message(BMSconfig, voltage, temp, connection, discharge, tempdisconnect, vreturn);
 250:Src/main.c    **** 
 251:Src/main.c    ****     if (vreturn == 1) HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 252:Src/main.c    **** 
 253:Src/main.c    ****     /*** Charging ***/
 254:Src/main.c    **** 	setDischarge(BMSconfig, voltage, connection, discharge, &chargerate);
 255:Src/main.c    **** 	setChargerTxData(CHARGER_DATA, chargerate, BMSconfig.chargerVoltage, BMSconfig.lowerCurrent, BMSco
 256:Src/main.c    **** 	TxHeader.IDE = CAN_ID_EXT;
 257:Src/main.c    **** 	HAL_CAN_AddTxMessage(&hcan, &TxHeader, CHARGER_DATA, &TxMailbox);
 258:Src/main.c    **** 
 259:Src/main.c    **** 	// reset the ID type to standard for CAN
 260:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD;
 261:Src/main.c    **** 	/*** End Charging ***/
ARM GAS  /tmp/ccvy7xoI.s 			page 6


 262:Src/main.c    **** 
 263:Src/main.c    ****     /*uint8_t rdcfg[8];
 264:Src/main.c    ****     writeConfigAll(BMSconfig);
 265:Src/main.c    ****     readConfig(0, rdcfg);
 266:Src/main.c    **** 
 267:Src/main.c    ****     TxHeader.StdId = 200;
 268:Src/main.c    ****     TxHeader.DLC = 8;
 269:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, rdcfg, &TxMailbox);*/
 270:Src/main.c    **** 
 271:Src/main.c    ****     HAL_Delay(500);
 272:Src/main.c    **** 
 273:Src/main.c    ****   }
 274:Src/main.c    ****   /* USER CODE END 3 */
 275:Src/main.c    **** }
 276:Src/main.c    **** 
 277:Src/main.c    **** /**
 278:Src/main.c    ****   * @brief System Clock Configuration
 279:Src/main.c    ****   * @retval None
 280:Src/main.c    ****   */
 281:Src/main.c    **** void SystemClock_Config(void)
 282:Src/main.c    **** {
 283:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 284:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 285:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 286:Src/main.c    **** 
 287:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 288:Src/main.c    ****   */
 289:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 290:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 291:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 292:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 293:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 294:Src/main.c    ****   {
 295:Src/main.c    ****     Error_Handler();
 296:Src/main.c    ****   }
 297:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 298:Src/main.c    ****   */
 299:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 300:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 301:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 302:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 303:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 304:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 305:Src/main.c    **** 
 306:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 307:Src/main.c    ****   {
 308:Src/main.c    ****     Error_Handler();
 309:Src/main.c    ****   }
 310:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 311:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 312:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 313:Src/main.c    ****   {
 314:Src/main.c    ****     Error_Handler();
 315:Src/main.c    ****   }
 316:Src/main.c    **** }
 317:Src/main.c    **** 
 318:Src/main.c    **** /**
ARM GAS  /tmp/ccvy7xoI.s 			page 7


 319:Src/main.c    ****   * @brief ADC1 Initialization Function
 320:Src/main.c    ****   * @param None
 321:Src/main.c    ****   * @retval None
 322:Src/main.c    ****   */
 323:Src/main.c    **** static void MX_ADC1_Init(void)
 324:Src/main.c    **** {
 325:Src/main.c    **** 
 326:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 327:Src/main.c    **** 
 328:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 329:Src/main.c    **** 
 330:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 331:Src/main.c    **** 
 332:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 333:Src/main.c    **** 
 334:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 335:Src/main.c    ****   /** Common config 
 336:Src/main.c    ****   */
 337:Src/main.c    ****   hadc1.Instance = ADC1;
 338:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 339:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 340:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 341:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 342:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 343:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 344:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 345:Src/main.c    ****   {
 346:Src/main.c    ****     Error_Handler();
 347:Src/main.c    ****   }
 348:Src/main.c    ****   /** Configure Regular Channel 
 349:Src/main.c    ****   */
 350:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 351:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 352:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 353:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 354:Src/main.c    ****   {
 355:Src/main.c    ****     Error_Handler();
 356:Src/main.c    ****   }
 357:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 358:Src/main.c    **** 
 359:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 360:Src/main.c    **** 
 361:Src/main.c    **** }
 362:Src/main.c    **** 
 363:Src/main.c    **** /**
 364:Src/main.c    ****   * @brief CAN Initialization Function
 365:Src/main.c    ****   * @param None
 366:Src/main.c    ****   * @retval None
 367:Src/main.c    ****   */
 368:Src/main.c    **** static void MX_CAN_Init(void)
 369:Src/main.c    **** {
 370:Src/main.c    **** 
 371:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 0 */
 372:Src/main.c    **** 
 373:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
 374:Src/main.c    **** 
 375:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 1 */
ARM GAS  /tmp/ccvy7xoI.s 			page 8


 376:Src/main.c    **** 
 377:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 378:Src/main.c    ****   hcan.Instance = CAN1;
 379:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 380:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 381:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 382:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 383:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 384:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 385:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 386:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 387:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 388:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 389:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 390:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 391:Src/main.c    ****   {
 392:Src/main.c    ****     Error_Handler();
 393:Src/main.c    ****   }
 394:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 2 */
 395:Src/main.c    ****   TxHeader.StdId = 0x321; 				// CAN standard ID
 396:Src/main.c    **** 	TxHeader.ExtId = 0x1806E5F4;		// CAN extended ID
 397:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 398:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 399:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 400:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 401:Src/main.c    **** 
 402:Src/main.c    ****   HAL_CAN_Start(&hcan);
 403:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 404:Src/main.c    **** 
 405:Src/main.c    **** }
 406:Src/main.c    **** 
 407:Src/main.c    **** /**
 408:Src/main.c    ****   * @brief SPI1 Initialization Function
 409:Src/main.c    ****   * @param None
 410:Src/main.c    ****   * @retval None
 411:Src/main.c    ****   */
 412:Src/main.c    **** static void MX_SPI1_Init(void)
 413:Src/main.c    **** {
 414:Src/main.c    **** 
 415:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 416:Src/main.c    **** 
 417:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 418:Src/main.c    **** 
 419:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 420:Src/main.c    **** 
 421:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 422:Src/main.c    ****   /* SPI1 parameter configuration*/
 423:Src/main.c    ****   hspi1.Instance = SPI1;
 424:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 425:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 426:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 427:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 428:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 429:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 430:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 431:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 432:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
ARM GAS  /tmp/ccvy7xoI.s 			page 9


 433:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 434:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 435:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 436:Src/main.c    ****   {
 437:Src/main.c    ****     Error_Handler();
 438:Src/main.c    ****   }
 439:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 440:Src/main.c    **** 
 441:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 442:Src/main.c    **** 
 443:Src/main.c    **** }
 444:Src/main.c    **** 
 445:Src/main.c    **** /**
 446:Src/main.c    ****   * @brief TIM2 Initialization Function
 447:Src/main.c    ****   * @param None
 448:Src/main.c    ****   * @retval None
 449:Src/main.c    ****   */
 450:Src/main.c    **** static void MX_TIM2_Init(void)
 451:Src/main.c    **** {
 452:Src/main.c    **** 
 453:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 454:Src/main.c    **** 
 455:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 456:Src/main.c    **** 
 457:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 458:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 459:Src/main.c    **** 
 460:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 461:Src/main.c    **** 
 462:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 463:Src/main.c    ****   htim2.Instance = TIM2;
 464:Src/main.c    ****   htim2.Init.Prescaler = 0;
 465:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 466:Src/main.c    ****   htim2.Init.Period = 0;
 467:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 468:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 469:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 470:Src/main.c    ****   {
 471:Src/main.c    ****     Error_Handler();
 472:Src/main.c    ****   }
 473:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 474:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 475:Src/main.c    ****   {
 476:Src/main.c    ****     Error_Handler();
 477:Src/main.c    ****   }
 478:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 479:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 480:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 481:Src/main.c    ****   {
 482:Src/main.c    ****     Error_Handler();
 483:Src/main.c    ****   }
 484:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 485:Src/main.c    **** 
 486:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 487:Src/main.c    **** 
 488:Src/main.c    **** }
 489:Src/main.c    **** 
ARM GAS  /tmp/ccvy7xoI.s 			page 10


 490:Src/main.c    **** /**
 491:Src/main.c    ****   * @brief GPIO Initialization Function
 492:Src/main.c    ****   * @param None
 493:Src/main.c    ****   * @retval None
 494:Src/main.c    ****   */
 495:Src/main.c    **** static void MX_GPIO_Init(void)
 496:Src/main.c    **** {
  26              		.loc 1 496 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 28
  33              		.cfi_offset 4, -28
  34              		.cfi_offset 5, -24
  35              		.cfi_offset 6, -20
  36              		.cfi_offset 7, -16
  37              		.cfi_offset 8, -12
  38              		.cfi_offset 9, -8
  39              		.cfi_offset 14, -4
  40 0004 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 497:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 497 3 view .LVU1
  44              		.loc 1 497 20 is_stmt 0 view .LVU2
  45 0006 0024     		movs	r4, #0
  46 0008 0494     		str	r4, [sp, #16]
  47 000a 0594     		str	r4, [sp, #20]
  48 000c 0694     		str	r4, [sp, #24]
  49 000e 0794     		str	r4, [sp, #28]
 498:Src/main.c    **** 
 499:Src/main.c    ****   /* GPIO Ports Clock Enable */
 500:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 500 3 is_stmt 1 view .LVU3
  51              	.LBB2:
  52              		.loc 1 500 3 view .LVU4
  53              		.loc 1 500 3 view .LVU5
  54 0010 334B     		ldr	r3, .L3
  55 0012 9A69     		ldr	r2, [r3, #24]
  56 0014 42F01002 		orr	r2, r2, #16
  57 0018 9A61     		str	r2, [r3, #24]
  58              		.loc 1 500 3 view .LVU6
  59 001a 9A69     		ldr	r2, [r3, #24]
  60 001c 02F01002 		and	r2, r2, #16
  61 0020 0092     		str	r2, [sp]
  62              		.loc 1 500 3 view .LVU7
  63 0022 009A     		ldr	r2, [sp]
  64              	.LBE2:
 501:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  65              		.loc 1 501 3 view .LVU8
  66              	.LBB3:
  67              		.loc 1 501 3 view .LVU9
  68              		.loc 1 501 3 view .LVU10
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F02002 		orr	r2, r2, #32
ARM GAS  /tmp/ccvy7xoI.s 			page 11


  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 501 3 view .LVU11
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F02002 		and	r2, r2, #32
  75 0032 0192     		str	r2, [sp, #4]
  76              		.loc 1 501 3 view .LVU12
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE3:
 502:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 502 3 view .LVU13
  80              	.LBB4:
  81              		.loc 1 502 3 view .LVU14
  82              		.loc 1 502 3 view .LVU15
  83 0036 9A69     		ldr	r2, [r3, #24]
  84 0038 42F00402 		orr	r2, r2, #4
  85 003c 9A61     		str	r2, [r3, #24]
  86              		.loc 1 502 3 view .LVU16
  87 003e 9A69     		ldr	r2, [r3, #24]
  88 0040 02F00402 		and	r2, r2, #4
  89 0044 0292     		str	r2, [sp, #8]
  90              		.loc 1 502 3 view .LVU17
  91 0046 029A     		ldr	r2, [sp, #8]
  92              	.LBE4:
 503:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  93              		.loc 1 503 3 view .LVU18
  94              	.LBB5:
  95              		.loc 1 503 3 view .LVU19
  96              		.loc 1 503 3 view .LVU20
  97 0048 9A69     		ldr	r2, [r3, #24]
  98 004a 42F00802 		orr	r2, r2, #8
  99 004e 9A61     		str	r2, [r3, #24]
 100              		.loc 1 503 3 view .LVU21
 101 0050 9B69     		ldr	r3, [r3, #24]
 102 0052 03F00803 		and	r3, r3, #8
 103 0056 0393     		str	r3, [sp, #12]
 104              		.loc 1 503 3 view .LVU22
 105 0058 039B     		ldr	r3, [sp, #12]
 106              	.LBE5:
 504:Src/main.c    **** 
 505:Src/main.c    ****   /*Configure GPIO pin Output Level */
 506:Src/main.c    ****   HAL_GPIO_WritePin(DEBUG_GPIO_Port, DEBUG_Pin, GPIO_PIN_RESET);
 107              		.loc 1 506 3 view .LVU23
 108 005a DFF88C90 		ldr	r9, .L3+8
 109 005e 2246     		mov	r2, r4
 110 0060 4FF40051 		mov	r1, #8192
 111 0064 4846     		mov	r0, r9
 112 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL0:
 507:Src/main.c    **** 
 508:Src/main.c    ****   /*Configure GPIO pin Output Level */
 509:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, BMS_CS_Pin|TRIGGER_Pin, GPIO_PIN_RESET);
 114              		.loc 1 509 3 view .LVU24
 115 006a DFF88080 		ldr	r8, .L3+12
 116 006e 2246     		mov	r2, r4
 117 0070 4FF48871 		mov	r1, #272
 118 0074 4046     		mov	r0, r8
 119 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccvy7xoI.s 			page 12


 120              	.LVL1:
 510:Src/main.c    **** 
 511:Src/main.c    ****   /*Configure GPIO pin Output Level */
 512:Src/main.c    ****   HAL_GPIO_WritePin(BMS_FLT_GPIO_Port, BMS_FLT_Pin, GPIO_PIN_RESET);
 121              		.loc 1 512 3 view .LVU25
 122 007a 1A4D     		ldr	r5, .L3+4
 123 007c 2246     		mov	r2, r4
 124 007e 4FF40071 		mov	r1, #512
 125 0082 2846     		mov	r0, r5
 126 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL2:
 513:Src/main.c    **** 
 514:Src/main.c    ****   /*Configure GPIO pin : DEBUG_Pin */
 515:Src/main.c    ****   GPIO_InitStruct.Pin = DEBUG_Pin;
 128              		.loc 1 515 3 view .LVU26
 129              		.loc 1 515 23 is_stmt 0 view .LVU27
 130 0088 4FF40053 		mov	r3, #8192
 131 008c 0493     		str	r3, [sp, #16]
 516:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 516 3 is_stmt 1 view .LVU28
 133              		.loc 1 516 24 is_stmt 0 view .LVU29
 134 008e 0127     		movs	r7, #1
 135 0090 0597     		str	r7, [sp, #20]
 517:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 517 3 is_stmt 1 view .LVU30
 137              		.loc 1 517 24 is_stmt 0 view .LVU31
 138 0092 0694     		str	r4, [sp, #24]
 518:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 518 3 is_stmt 1 view .LVU32
 140              		.loc 1 518 25 is_stmt 0 view .LVU33
 141 0094 0226     		movs	r6, #2
 142 0096 0796     		str	r6, [sp, #28]
 519:Src/main.c    ****   HAL_GPIO_Init(DEBUG_GPIO_Port, &GPIO_InitStruct);
 143              		.loc 1 519 3 is_stmt 1 view .LVU34
 144 0098 04A9     		add	r1, sp, #16
 145 009a 4846     		mov	r0, r9
 146 009c FFF7FEFF 		bl	HAL_GPIO_Init
 147              	.LVL3:
 520:Src/main.c    **** 
 521:Src/main.c    ****   /*Configure GPIO pins : BMS_CS_Pin TRIGGER_Pin */
 522:Src/main.c    ****   GPIO_InitStruct.Pin = BMS_CS_Pin|TRIGGER_Pin;
 148              		.loc 1 522 3 view .LVU35
 149              		.loc 1 522 23 is_stmt 0 view .LVU36
 150 00a0 4FF48873 		mov	r3, #272
 151 00a4 0493     		str	r3, [sp, #16]
 523:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 152              		.loc 1 523 3 is_stmt 1 view .LVU37
 153              		.loc 1 523 24 is_stmt 0 view .LVU38
 154 00a6 0597     		str	r7, [sp, #20]
 524:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 524 3 is_stmt 1 view .LVU39
 156              		.loc 1 524 24 is_stmt 0 view .LVU40
 157 00a8 0694     		str	r4, [sp, #24]
 525:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 158              		.loc 1 525 3 is_stmt 1 view .LVU41
 159              		.loc 1 525 25 is_stmt 0 view .LVU42
 160 00aa 0796     		str	r6, [sp, #28]
ARM GAS  /tmp/ccvy7xoI.s 			page 13


 526:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 161              		.loc 1 526 3 is_stmt 1 view .LVU43
 162 00ac 04A9     		add	r1, sp, #16
 163 00ae 4046     		mov	r0, r8
 164 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 165              	.LVL4:
 527:Src/main.c    **** 
 528:Src/main.c    ****   /*Configure GPIO pins : CHARGE_EN_Pin AIR_Pin */
 529:Src/main.c    ****   GPIO_InitStruct.Pin = CHARGE_EN_Pin|AIR_Pin;
 166              		.loc 1 529 3 view .LVU44
 167              		.loc 1 529 23 is_stmt 0 view .LVU45
 168 00b4 2823     		movs	r3, #40
 169 00b6 0493     		str	r3, [sp, #16]
 530:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 170              		.loc 1 530 3 is_stmt 1 view .LVU46
 171              		.loc 1 530 24 is_stmt 0 view .LVU47
 172 00b8 0594     		str	r4, [sp, #20]
 531:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 173              		.loc 1 531 3 is_stmt 1 view .LVU48
 174              		.loc 1 531 24 is_stmt 0 view .LVU49
 175 00ba 0694     		str	r4, [sp, #24]
 532:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 176              		.loc 1 532 3 is_stmt 1 view .LVU50
 177 00bc 04A9     		add	r1, sp, #16
 178 00be 2846     		mov	r0, r5
 179 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL5:
 533:Src/main.c    **** 
 534:Src/main.c    ****   /*Configure GPIO pin : BMS_FLT_Pin */
 535:Src/main.c    ****   GPIO_InitStruct.Pin = BMS_FLT_Pin;
 181              		.loc 1 535 3 view .LVU51
 182              		.loc 1 535 23 is_stmt 0 view .LVU52
 183 00c4 4FF40073 		mov	r3, #512
 184 00c8 0493     		str	r3, [sp, #16]
 536:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 185              		.loc 1 536 3 is_stmt 1 view .LVU53
 186              		.loc 1 536 24 is_stmt 0 view .LVU54
 187 00ca 0597     		str	r7, [sp, #20]
 537:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 188              		.loc 1 537 3 is_stmt 1 view .LVU55
 189              		.loc 1 537 24 is_stmt 0 view .LVU56
 190 00cc 0694     		str	r4, [sp, #24]
 538:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 191              		.loc 1 538 3 is_stmt 1 view .LVU57
 192              		.loc 1 538 25 is_stmt 0 view .LVU58
 193 00ce 0796     		str	r6, [sp, #28]
 539:Src/main.c    ****   HAL_GPIO_Init(BMS_FLT_GPIO_Port, &GPIO_InitStruct);
 194              		.loc 1 539 3 is_stmt 1 view .LVU59
 195 00d0 04A9     		add	r1, sp, #16
 196 00d2 2846     		mov	r0, r5
 197 00d4 FFF7FEFF 		bl	HAL_GPIO_Init
 198              	.LVL6:
 540:Src/main.c    **** 
 541:Src/main.c    **** }
 199              		.loc 1 541 1 is_stmt 0 view .LVU60
 200 00d8 09B0     		add	sp, sp, #36
 201              	.LCFI2:
ARM GAS  /tmp/ccvy7xoI.s 			page 14


 202              		.cfi_def_cfa_offset 28
 203              		@ sp needed
 204 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 205              	.L4:
 206 00de 00BF     		.align	2
 207              	.L3:
 208 00e0 00100240 		.word	1073876992
 209 00e4 000C0140 		.word	1073810432
 210 00e8 00100140 		.word	1073811456
 211 00ec 00080140 		.word	1073809408
 212              		.cfi_endproc
 213              	.LFE72:
 215              		.section	.text.MX_ADC1_Init,"ax",%progbits
 216              		.align	1
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 222              	MX_ADC1_Init:
 223              	.LFB68:
 324:Src/main.c    **** 
 224              		.loc 1 324 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 16
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 70B5     		push	{r4, r5, r6, lr}
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 16
 231              		.cfi_offset 4, -16
 232              		.cfi_offset 5, -12
 233              		.cfi_offset 6, -8
 234              		.cfi_offset 14, -4
 235 0002 84B0     		sub	sp, sp, #16
 236              	.LCFI4:
 237              		.cfi_def_cfa_offset 32
 330:Src/main.c    **** 
 238              		.loc 1 330 3 view .LVU62
 330:Src/main.c    **** 
 239              		.loc 1 330 26 is_stmt 0 view .LVU63
 240 0004 0025     		movs	r5, #0
 241 0006 0195     		str	r5, [sp, #4]
 242 0008 0295     		str	r5, [sp, #8]
 243 000a 0395     		str	r5, [sp, #12]
 337:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 244              		.loc 1 337 3 is_stmt 1 view .LVU64
 337:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 245              		.loc 1 337 18 is_stmt 0 view .LVU65
 246 000c 0C4C     		ldr	r4, .L7
 247 000e 0D4B     		ldr	r3, .L7+4
 248 0010 2360     		str	r3, [r4]
 338:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 249              		.loc 1 338 3 is_stmt 1 view .LVU66
 338:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 250              		.loc 1 338 27 is_stmt 0 view .LVU67
 251 0012 A560     		str	r5, [r4, #8]
 339:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 252              		.loc 1 339 3 is_stmt 1 view .LVU68
ARM GAS  /tmp/ccvy7xoI.s 			page 15


 339:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 253              		.loc 1 339 33 is_stmt 0 view .LVU69
 254 0014 E560     		str	r5, [r4, #12]
 340:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 255              		.loc 1 340 3 is_stmt 1 view .LVU70
 340:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 256              		.loc 1 340 36 is_stmt 0 view .LVU71
 257 0016 6561     		str	r5, [r4, #20]
 341:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 258              		.loc 1 341 3 is_stmt 1 view .LVU72
 341:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 259              		.loc 1 341 31 is_stmt 0 view .LVU73
 260 0018 4FF46023 		mov	r3, #917504
 261 001c E361     		str	r3, [r4, #28]
 342:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 262              		.loc 1 342 3 is_stmt 1 view .LVU74
 342:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 263              		.loc 1 342 24 is_stmt 0 view .LVU75
 264 001e 6560     		str	r5, [r4, #4]
 343:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 265              		.loc 1 343 3 is_stmt 1 view .LVU76
 343:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 266              		.loc 1 343 30 is_stmt 0 view .LVU77
 267 0020 0126     		movs	r6, #1
 268 0022 2661     		str	r6, [r4, #16]
 344:Src/main.c    ****   {
 269              		.loc 1 344 3 is_stmt 1 view .LVU78
 344:Src/main.c    ****   {
 270              		.loc 1 344 7 is_stmt 0 view .LVU79
 271 0024 2046     		mov	r0, r4
 272 0026 FFF7FEFF 		bl	HAL_ADC_Init
 273              	.LVL7:
 350:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 274              		.loc 1 350 3 is_stmt 1 view .LVU80
 350:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 275              		.loc 1 350 19 is_stmt 0 view .LVU81
 276 002a 0823     		movs	r3, #8
 277 002c 0193     		str	r3, [sp, #4]
 351:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 278              		.loc 1 351 3 is_stmt 1 view .LVU82
 351:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 279              		.loc 1 351 16 is_stmt 0 view .LVU83
 280 002e 0296     		str	r6, [sp, #8]
 352:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 281              		.loc 1 352 3 is_stmt 1 view .LVU84
 352:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 282              		.loc 1 352 24 is_stmt 0 view .LVU85
 283 0030 0395     		str	r5, [sp, #12]
 353:Src/main.c    ****   {
 284              		.loc 1 353 3 is_stmt 1 view .LVU86
 353:Src/main.c    ****   {
 285              		.loc 1 353 7 is_stmt 0 view .LVU87
 286 0032 01A9     		add	r1, sp, #4
 287 0034 2046     		mov	r0, r4
 288 0036 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 289              	.LVL8:
 361:Src/main.c    **** 
ARM GAS  /tmp/ccvy7xoI.s 			page 16


 290              		.loc 1 361 1 view .LVU88
 291 003a 04B0     		add	sp, sp, #16
 292              	.LCFI5:
 293              		.cfi_def_cfa_offset 16
 294              		@ sp needed
 295 003c 70BD     		pop	{r4, r5, r6, pc}
 296              	.L8:
 297 003e 00BF     		.align	2
 298              	.L7:
 299 0040 00000000 		.word	hadc1
 300 0044 00240140 		.word	1073816576
 301              		.cfi_endproc
 302              	.LFE68:
 304              		.section	.text.MX_CAN_Init,"ax",%progbits
 305              		.align	1
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu softvfp
 311              	MX_CAN_Init:
 312              	.LFB69:
 369:Src/main.c    **** 
 313              		.loc 1 369 1 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 38B5     		push	{r3, r4, r5, lr}
 318              	.LCFI6:
 319              		.cfi_def_cfa_offset 16
 320              		.cfi_offset 3, -16
 321              		.cfi_offset 4, -12
 322              		.cfi_offset 5, -8
 323              		.cfi_offset 14, -4
 378:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 324              		.loc 1 378 3 view .LVU90
 378:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 325              		.loc 1 378 17 is_stmt 0 view .LVU91
 326 0002 144C     		ldr	r4, .L11
 327 0004 144B     		ldr	r3, .L11+4
 328 0006 2360     		str	r3, [r4]
 379:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 329              		.loc 1 379 3 is_stmt 1 view .LVU92
 379:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 330              		.loc 1 379 23 is_stmt 0 view .LVU93
 331 0008 0123     		movs	r3, #1
 332 000a 6360     		str	r3, [r4, #4]
 380:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 333              		.loc 1 380 3 is_stmt 1 view .LVU94
 380:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 334              		.loc 1 380 18 is_stmt 0 view .LVU95
 335 000c 0025     		movs	r5, #0
 336 000e A560     		str	r5, [r4, #8]
 381:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 337              		.loc 1 381 3 is_stmt 1 view .LVU96
 381:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 338              		.loc 1 381 27 is_stmt 0 view .LVU97
 339 0010 4FF08073 		mov	r3, #16777216
ARM GAS  /tmp/ccvy7xoI.s 			page 17


 340 0014 E360     		str	r3, [r4, #12]
 382:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 341              		.loc 1 382 3 is_stmt 1 view .LVU98
 382:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 342              		.loc 1 382 22 is_stmt 0 view .LVU99
 343 0016 4FF44023 		mov	r3, #786432
 344 001a 2361     		str	r3, [r4, #16]
 383:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 345              		.loc 1 383 3 is_stmt 1 view .LVU100
 383:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 346              		.loc 1 383 22 is_stmt 0 view .LVU101
 347 001c 4FF48013 		mov	r3, #1048576
 348 0020 6361     		str	r3, [r4, #20]
 384:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 349              		.loc 1 384 3 is_stmt 1 view .LVU102
 384:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 350              		.loc 1 384 31 is_stmt 0 view .LVU103
 351 0022 2576     		strb	r5, [r4, #24]
 385:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 352              		.loc 1 385 3 is_stmt 1 view .LVU104
 385:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 353              		.loc 1 385 24 is_stmt 0 view .LVU105
 354 0024 6576     		strb	r5, [r4, #25]
 386:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 355              		.loc 1 386 3 is_stmt 1 view .LVU106
 386:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 356              		.loc 1 386 24 is_stmt 0 view .LVU107
 357 0026 A576     		strb	r5, [r4, #26]
 387:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 358              		.loc 1 387 3 is_stmt 1 view .LVU108
 387:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 359              		.loc 1 387 32 is_stmt 0 view .LVU109
 360 0028 E576     		strb	r5, [r4, #27]
 388:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 361              		.loc 1 388 3 is_stmt 1 view .LVU110
 388:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 362              		.loc 1 388 31 is_stmt 0 view .LVU111
 363 002a 2577     		strb	r5, [r4, #28]
 389:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 364              		.loc 1 389 3 is_stmt 1 view .LVU112
 389:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 365              		.loc 1 389 34 is_stmt 0 view .LVU113
 366 002c 6577     		strb	r5, [r4, #29]
 390:Src/main.c    ****   {
 367              		.loc 1 390 3 is_stmt 1 view .LVU114
 390:Src/main.c    ****   {
 368              		.loc 1 390 7 is_stmt 0 view .LVU115
 369 002e 2046     		mov	r0, r4
 370 0030 FFF7FEFF 		bl	HAL_CAN_Init
 371              	.LVL9:
 395:Src/main.c    **** 	TxHeader.ExtId = 0x1806E5F4;		// CAN extended ID
 372              		.loc 1 395 3 is_stmt 1 view .LVU116
 395:Src/main.c    **** 	TxHeader.ExtId = 0x1806E5F4;		// CAN extended ID
 373              		.loc 1 395 18 is_stmt 0 view .LVU117
 374 0034 094B     		ldr	r3, .L11+8
 375 0036 40F22132 		movw	r2, #801
 376 003a 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccvy7xoI.s 			page 18


 396:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 377              		.loc 1 396 2 is_stmt 1 view .LVU118
 396:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 378              		.loc 1 396 17 is_stmt 0 view .LVU119
 379 003c 084A     		ldr	r2, .L11+12
 380 003e 5A60     		str	r2, [r3, #4]
 397:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 381              		.loc 1 397 2 is_stmt 1 view .LVU120
 397:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 382              		.loc 1 397 15 is_stmt 0 view .LVU121
 383 0040 DD60     		str	r5, [r3, #12]
 398:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 384              		.loc 1 398 2 is_stmt 1 view .LVU122
 398:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 385              		.loc 1 398 15 is_stmt 0 view .LVU123
 386 0042 9D60     		str	r5, [r3, #8]
 399:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 387              		.loc 1 399 2 is_stmt 1 view .LVU124
 399:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 388              		.loc 1 399 15 is_stmt 0 view .LVU125
 389 0044 0822     		movs	r2, #8
 390 0046 1A61     		str	r2, [r3, #16]
 400:Src/main.c    **** 
 391              		.loc 1 400 2 is_stmt 1 view .LVU126
 400:Src/main.c    **** 
 392              		.loc 1 400 30 is_stmt 0 view .LVU127
 393 0048 1D75     		strb	r5, [r3, #20]
 402:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 394              		.loc 1 402 3 is_stmt 1 view .LVU128
 395 004a 2046     		mov	r0, r4
 396 004c FFF7FEFF 		bl	HAL_CAN_Start
 397              	.LVL10:
 405:Src/main.c    **** 
 398              		.loc 1 405 1 is_stmt 0 view .LVU129
 399 0050 38BD     		pop	{r3, r4, r5, pc}
 400              	.L12:
 401 0052 00BF     		.align	2
 402              	.L11:
 403 0054 00000000 		.word	hcan
 404 0058 00640040 		.word	1073767424
 405 005c 00000000 		.word	TxHeader
 406 0060 F4E50618 		.word	403105268
 407              		.cfi_endproc
 408              	.LFE69:
 410              		.section	.text.MX_TIM2_Init,"ax",%progbits
 411              		.align	1
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu softvfp
 417              	MX_TIM2_Init:
 418              	.LFB71:
 451:Src/main.c    **** 
 419              		.loc 1 451 1 is_stmt 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 24
 422              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccvy7xoI.s 			page 19


 423 0000 30B5     		push	{r4, r5, lr}
 424              	.LCFI7:
 425              		.cfi_def_cfa_offset 12
 426              		.cfi_offset 4, -12
 427              		.cfi_offset 5, -8
 428              		.cfi_offset 14, -4
 429 0002 87B0     		sub	sp, sp, #28
 430              	.LCFI8:
 431              		.cfi_def_cfa_offset 40
 457:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 432              		.loc 1 457 3 view .LVU131
 457:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 433              		.loc 1 457 26 is_stmt 0 view .LVU132
 434 0004 0024     		movs	r4, #0
 435 0006 0294     		str	r4, [sp, #8]
 436 0008 0394     		str	r4, [sp, #12]
 437 000a 0494     		str	r4, [sp, #16]
 438 000c 0594     		str	r4, [sp, #20]
 458:Src/main.c    **** 
 439              		.loc 1 458 3 is_stmt 1 view .LVU133
 458:Src/main.c    **** 
 440              		.loc 1 458 27 is_stmt 0 view .LVU134
 441 000e 0094     		str	r4, [sp]
 442 0010 0194     		str	r4, [sp, #4]
 463:Src/main.c    ****   htim2.Init.Prescaler = 0;
 443              		.loc 1 463 3 is_stmt 1 view .LVU135
 463:Src/main.c    ****   htim2.Init.Prescaler = 0;
 444              		.loc 1 463 18 is_stmt 0 view .LVU136
 445 0012 0D4D     		ldr	r5, .L15
 446 0014 4FF08043 		mov	r3, #1073741824
 447 0018 2B60     		str	r3, [r5]
 464:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 448              		.loc 1 464 3 is_stmt 1 view .LVU137
 464:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 449              		.loc 1 464 24 is_stmt 0 view .LVU138
 450 001a 6C60     		str	r4, [r5, #4]
 465:Src/main.c    ****   htim2.Init.Period = 0;
 451              		.loc 1 465 3 is_stmt 1 view .LVU139
 465:Src/main.c    ****   htim2.Init.Period = 0;
 452              		.loc 1 465 26 is_stmt 0 view .LVU140
 453 001c AC60     		str	r4, [r5, #8]
 466:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 454              		.loc 1 466 3 is_stmt 1 view .LVU141
 466:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 455              		.loc 1 466 21 is_stmt 0 view .LVU142
 456 001e EC60     		str	r4, [r5, #12]
 467:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 457              		.loc 1 467 3 is_stmt 1 view .LVU143
 467:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 458              		.loc 1 467 28 is_stmt 0 view .LVU144
 459 0020 2C61     		str	r4, [r5, #16]
 468:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 460              		.loc 1 468 3 is_stmt 1 view .LVU145
 468:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 461              		.loc 1 468 32 is_stmt 0 view .LVU146
 462 0022 AC61     		str	r4, [r5, #24]
 469:Src/main.c    ****   {
ARM GAS  /tmp/ccvy7xoI.s 			page 20


 463              		.loc 1 469 3 is_stmt 1 view .LVU147
 469:Src/main.c    ****   {
 464              		.loc 1 469 7 is_stmt 0 view .LVU148
 465 0024 2846     		mov	r0, r5
 466 0026 FFF7FEFF 		bl	HAL_TIM_Base_Init
 467              	.LVL11:
 473:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 468              		.loc 1 473 3 is_stmt 1 view .LVU149
 473:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 469              		.loc 1 473 34 is_stmt 0 view .LVU150
 470 002a 4FF48053 		mov	r3, #4096
 471 002e 0293     		str	r3, [sp, #8]
 474:Src/main.c    ****   {
 472              		.loc 1 474 3 is_stmt 1 view .LVU151
 474:Src/main.c    ****   {
 473              		.loc 1 474 7 is_stmt 0 view .LVU152
 474 0030 02A9     		add	r1, sp, #8
 475 0032 2846     		mov	r0, r5
 476 0034 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 477              	.LVL12:
 478:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 478              		.loc 1 478 3 is_stmt 1 view .LVU153
 478:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 479              		.loc 1 478 37 is_stmt 0 view .LVU154
 480 0038 0094     		str	r4, [sp]
 479:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 481              		.loc 1 479 3 is_stmt 1 view .LVU155
 479:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 482              		.loc 1 479 33 is_stmt 0 view .LVU156
 483 003a 0194     		str	r4, [sp, #4]
 480:Src/main.c    ****   {
 484              		.loc 1 480 3 is_stmt 1 view .LVU157
 480:Src/main.c    ****   {
 485              		.loc 1 480 7 is_stmt 0 view .LVU158
 486 003c 6946     		mov	r1, sp
 487 003e 2846     		mov	r0, r5
 488 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 489              	.LVL13:
 488:Src/main.c    **** 
 490              		.loc 1 488 1 view .LVU159
 491 0044 07B0     		add	sp, sp, #28
 492              	.LCFI9:
 493              		.cfi_def_cfa_offset 12
 494              		@ sp needed
 495 0046 30BD     		pop	{r4, r5, pc}
 496              	.L16:
 497              		.align	2
 498              	.L15:
 499 0048 00000000 		.word	htim2
 500              		.cfi_endproc
 501              	.LFE71:
 503              		.section	.text.SystemClock_Config,"ax",%progbits
 504              		.align	1
 505              		.global	SystemClock_Config
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
ARM GAS  /tmp/ccvy7xoI.s 			page 21


 509              		.fpu softvfp
 511              	SystemClock_Config:
 512              	.LFB67:
 282:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 513              		.loc 1 282 1 is_stmt 1 view -0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 80
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517 0000 30B5     		push	{r4, r5, lr}
 518              	.LCFI10:
 519              		.cfi_def_cfa_offset 12
 520              		.cfi_offset 4, -12
 521              		.cfi_offset 5, -8
 522              		.cfi_offset 14, -4
 523 0002 95B0     		sub	sp, sp, #84
 524              	.LCFI11:
 525              		.cfi_def_cfa_offset 96
 283:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 526              		.loc 1 283 3 view .LVU161
 283:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 527              		.loc 1 283 22 is_stmt 0 view .LVU162
 528 0004 2422     		movs	r2, #36
 529 0006 0021     		movs	r1, #0
 530 0008 0BA8     		add	r0, sp, #44
 531 000a FFF7FEFF 		bl	memset
 532              	.LVL14:
 284:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 533              		.loc 1 284 3 is_stmt 1 view .LVU163
 284:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 534              		.loc 1 284 22 is_stmt 0 view .LVU164
 535 000e 0024     		movs	r4, #0
 536 0010 0594     		str	r4, [sp, #20]
 537 0012 0694     		str	r4, [sp, #24]
 538 0014 0794     		str	r4, [sp, #28]
 539 0016 0894     		str	r4, [sp, #32]
 540 0018 0994     		str	r4, [sp, #36]
 285:Src/main.c    **** 
 541              		.loc 1 285 3 is_stmt 1 view .LVU165
 285:Src/main.c    **** 
 542              		.loc 1 285 28 is_stmt 0 view .LVU166
 543 001a 0194     		str	r4, [sp, #4]
 544 001c 0294     		str	r4, [sp, #8]
 545 001e 0394     		str	r4, [sp, #12]
 546 0020 0494     		str	r4, [sp, #16]
 289:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 547              		.loc 1 289 3 is_stmt 1 view .LVU167
 289:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 548              		.loc 1 289 36 is_stmt 0 view .LVU168
 549 0022 0225     		movs	r5, #2
 550 0024 0A95     		str	r5, [sp, #40]
 290:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 551              		.loc 1 290 3 is_stmt 1 view .LVU169
 290:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 552              		.loc 1 290 30 is_stmt 0 view .LVU170
 553 0026 0123     		movs	r3, #1
 554 0028 0E93     		str	r3, [sp, #56]
 291:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
ARM GAS  /tmp/ccvy7xoI.s 			page 22


 555              		.loc 1 291 3 is_stmt 1 view .LVU171
 291:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 556              		.loc 1 291 41 is_stmt 0 view .LVU172
 557 002a 1023     		movs	r3, #16
 558 002c 0F93     		str	r3, [sp, #60]
 292:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 559              		.loc 1 292 3 is_stmt 1 view .LVU173
 293:Src/main.c    ****   {
 560              		.loc 1 293 3 view .LVU174
 293:Src/main.c    ****   {
 561              		.loc 1 293 7 is_stmt 0 view .LVU175
 562 002e 0AA8     		add	r0, sp, #40
 563 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 564              	.LVL15:
 299:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 565              		.loc 1 299 3 is_stmt 1 view .LVU176
 299:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 566              		.loc 1 299 31 is_stmt 0 view .LVU177
 567 0034 0F23     		movs	r3, #15
 568 0036 0593     		str	r3, [sp, #20]
 301:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 569              		.loc 1 301 3 is_stmt 1 view .LVU178
 301:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 570              		.loc 1 301 34 is_stmt 0 view .LVU179
 571 0038 0694     		str	r4, [sp, #24]
 302:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 572              		.loc 1 302 3 is_stmt 1 view .LVU180
 302:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 573              		.loc 1 302 35 is_stmt 0 view .LVU181
 574 003a 0794     		str	r4, [sp, #28]
 303:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 575              		.loc 1 303 3 is_stmt 1 view .LVU182
 303:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 576              		.loc 1 303 36 is_stmt 0 view .LVU183
 577 003c 0894     		str	r4, [sp, #32]
 304:Src/main.c    **** 
 578              		.loc 1 304 3 is_stmt 1 view .LVU184
 304:Src/main.c    **** 
 579              		.loc 1 304 36 is_stmt 0 view .LVU185
 580 003e 0994     		str	r4, [sp, #36]
 306:Src/main.c    ****   {
 581              		.loc 1 306 3 is_stmt 1 view .LVU186
 306:Src/main.c    ****   {
 582              		.loc 1 306 7 is_stmt 0 view .LVU187
 583 0040 2146     		mov	r1, r4
 584 0042 05A8     		add	r0, sp, #20
 585 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 586              	.LVL16:
 310:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 587              		.loc 1 310 3 is_stmt 1 view .LVU188
 310:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 588              		.loc 1 310 38 is_stmt 0 view .LVU189
 589 0048 0195     		str	r5, [sp, #4]
 311:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 590              		.loc 1 311 3 is_stmt 1 view .LVU190
 311:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 591              		.loc 1 311 35 is_stmt 0 view .LVU191
ARM GAS  /tmp/ccvy7xoI.s 			page 23


 592 004a 0394     		str	r4, [sp, #12]
 312:Src/main.c    ****   {
 593              		.loc 1 312 3 is_stmt 1 view .LVU192
 312:Src/main.c    ****   {
 594              		.loc 1 312 7 is_stmt 0 view .LVU193
 595 004c 01A8     		add	r0, sp, #4
 596 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 597              	.LVL17:
 316:Src/main.c    **** 
 598              		.loc 1 316 1 view .LVU194
 599 0052 15B0     		add	sp, sp, #84
 600              	.LCFI12:
 601              		.cfi_def_cfa_offset 12
 602              		@ sp needed
 603 0054 30BD     		pop	{r4, r5, pc}
 604              		.cfi_endproc
 605              	.LFE67:
 607              		.section	.text.VOLTAGE_sort,"ax",%progbits
 608              		.align	1
 609              		.global	VOLTAGE_sort
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 613              		.fpu softvfp
 615              	VOLTAGE_sort:
 616              	.LVL18:
 617              	.LFB73:
 542:Src/main.c    **** 
 543:Src/main.c    **** /* USER CODE BEGIN 4 */
 544:Src/main.c    **** 
 545:Src/main.c    **** void VOLTAGE_sort(uint16_t voltage[12][12]) {
 618              		.loc 1 545 45 is_stmt 1 view -0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 546:Src/main.c    ****   for (uint8_t i = 0; i < 12; i++) {
 623              		.loc 1 546 3 view .LVU196
 624              	.LBB6:
 625              		.loc 1 546 8 view .LVU197
 626              		.loc 1 546 16 is_stmt 0 view .LVU198
 627 0000 0022     		movs	r2, #0
 628              	.LVL19:
 629              	.L20:
 630              		.loc 1 546 3 discriminator 1 view .LVU199
 631 0002 0B2A     		cmp	r2, #11
 632 0004 0ED8     		bhi	.L22
 547:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 633              		.loc 1 547 5 is_stmt 1 discriminator 3 view .LVU200
 634              		.loc 1 547 28 is_stmt 0 discriminator 3 view .LVU201
 635 0006 02EB4201 		add	r1, r2, r2, lsl #1
 636 000a CB00     		lsls	r3, r1, #3
 637 000c 0344     		add	r3, r3, r0
 638              		.loc 1 547 31 discriminator 3 view .LVU202
 639 000e 9989     		ldrh	r1, [r3, #12]
 640              		.loc 1 547 19 discriminator 3 view .LVU203
 641 0010 1981     		strh	r1, [r3, #8]	@ movhi
ARM GAS  /tmp/ccvy7xoI.s 			page 24


 548:Src/main.c    ****     voltage[i][5] = voltage[i][7];
 642              		.loc 1 548 5 is_stmt 1 discriminator 3 view .LVU204
 643              		.loc 1 548 31 is_stmt 0 discriminator 3 view .LVU205
 644 0012 D989     		ldrh	r1, [r3, #14]
 645              		.loc 1 548 19 discriminator 3 view .LVU206
 646 0014 5981     		strh	r1, [r3, #10]	@ movhi
 549:Src/main.c    ****     voltage[i][6] = voltage[i][8];
 647              		.loc 1 549 5 is_stmt 1 discriminator 3 view .LVU207
 648              		.loc 1 549 31 is_stmt 0 discriminator 3 view .LVU208
 649 0016 198A     		ldrh	r1, [r3, #16]
 650              		.loc 1 549 19 discriminator 3 view .LVU209
 651 0018 9981     		strh	r1, [r3, #12]	@ movhi
 550:Src/main.c    ****     voltage[i][7] = voltage[i][9];
 652              		.loc 1 550 5 is_stmt 1 discriminator 3 view .LVU210
 653              		.loc 1 550 31 is_stmt 0 discriminator 3 view .LVU211
 654 001a 598A     		ldrh	r1, [r3, #18]
 655              		.loc 1 550 19 discriminator 3 view .LVU212
 656 001c D981     		strh	r1, [r3, #14]	@ movhi
 546:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 657              		.loc 1 546 32 discriminator 3 view .LVU213
 658 001e 0132     		adds	r2, r2, #1
 659              	.LVL20:
 546:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 660              		.loc 1 546 32 discriminator 3 view .LVU214
 661 0020 D2B2     		uxtb	r2, r2
 662              	.LVL21:
 546:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 663              		.loc 1 546 32 discriminator 3 view .LVU215
 664 0022 EEE7     		b	.L20
 665              	.L22:
 546:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 666              		.loc 1 546 32 discriminator 3 view .LVU216
 667              	.LBE6:
 551:Src/main.c    ****   }
 552:Src/main.c    **** }
 668              		.loc 1 552 1 view .LVU217
 669 0024 7047     		bx	lr
 670              		.cfi_endproc
 671              	.LFE73:
 673              		.section	.text.CONNECTION_sort,"ax",%progbits
 674              		.align	1
 675              		.global	CONNECTION_sort
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 679              		.fpu softvfp
 681              	CONNECTION_sort:
 682              	.LVL22:
 683              	.LFB74:
 553:Src/main.c    **** 
 554:Src/main.c    **** void CONNECTION_sort(bool connection[12][12]) {
 684              		.loc 1 554 47 is_stmt 1 view -0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 555:Src/main.c    ****   for (uint8_t i = 0; i < 12; i++) {
ARM GAS  /tmp/ccvy7xoI.s 			page 25


 689              		.loc 1 555 3 view .LVU219
 690              	.LBB7:
 691              		.loc 1 555 8 view .LVU220
 692              		.loc 1 555 16 is_stmt 0 view .LVU221
 693 0000 0022     		movs	r2, #0
 694              	.LVL23:
 695              	.L24:
 696              		.loc 1 555 3 discriminator 1 view .LVU222
 697 0002 0B2A     		cmp	r2, #11
 698 0004 0ED8     		bhi	.L26
 556:Src/main.c    ****     connection[i][4] = connection[i][6];
 699              		.loc 1 556 5 is_stmt 1 discriminator 3 view .LVU223
 700              		.loc 1 556 34 is_stmt 0 discriminator 3 view .LVU224
 701 0006 02EB4201 		add	r1, r2, r2, lsl #1
 702 000a 8B00     		lsls	r3, r1, #2
 703 000c 0344     		add	r3, r3, r0
 704              		.loc 1 556 37 discriminator 3 view .LVU225
 705 000e 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 706              		.loc 1 556 22 discriminator 3 view .LVU226
 707 0010 1971     		strb	r1, [r3, #4]
 557:Src/main.c    ****     connection[i][5] = connection[i][7];
 708              		.loc 1 557 5 is_stmt 1 discriminator 3 view .LVU227
 709              		.loc 1 557 37 is_stmt 0 discriminator 3 view .LVU228
 710 0012 D979     		ldrb	r1, [r3, #7]	@ zero_extendqisi2
 711              		.loc 1 557 22 discriminator 3 view .LVU229
 712 0014 5971     		strb	r1, [r3, #5]
 558:Src/main.c    ****     connection[i][6] = connection[i][8];
 713              		.loc 1 558 5 is_stmt 1 discriminator 3 view .LVU230
 714              		.loc 1 558 37 is_stmt 0 discriminator 3 view .LVU231
 715 0016 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 716              		.loc 1 558 22 discriminator 3 view .LVU232
 717 0018 9971     		strb	r1, [r3, #6]
 559:Src/main.c    ****     connection[i][7] = connection[i][9];
 718              		.loc 1 559 5 is_stmt 1 discriminator 3 view .LVU233
 719              		.loc 1 559 37 is_stmt 0 discriminator 3 view .LVU234
 720 001a 597A     		ldrb	r1, [r3, #9]	@ zero_extendqisi2
 721              		.loc 1 559 22 discriminator 3 view .LVU235
 722 001c D971     		strb	r1, [r3, #7]
 555:Src/main.c    ****     connection[i][4] = connection[i][6];
 723              		.loc 1 555 32 discriminator 3 view .LVU236
 724 001e 0132     		adds	r2, r2, #1
 725              	.LVL24:
 555:Src/main.c    ****     connection[i][4] = connection[i][6];
 726              		.loc 1 555 32 discriminator 3 view .LVU237
 727 0020 D2B2     		uxtb	r2, r2
 728              	.LVL25:
 555:Src/main.c    ****     connection[i][4] = connection[i][6];
 729              		.loc 1 555 32 discriminator 3 view .LVU238
 730 0022 EEE7     		b	.L24
 731              	.L26:
 555:Src/main.c    ****     connection[i][4] = connection[i][6];
 732              		.loc 1 555 32 discriminator 3 view .LVU239
 733              	.LBE7:
 560:Src/main.c    ****   }
 561:Src/main.c    **** }
 734              		.loc 1 561 1 view .LVU240
 735 0024 7047     		bx	lr
ARM GAS  /tmp/ccvy7xoI.s 			page 26


 736              		.cfi_endproc
 737              	.LFE74:
 739              		.section	.text.FAULT_check,"ax",%progbits
 740              		.align	1
 741              		.global	FAULT_check
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu softvfp
 747              	FAULT_check:
 748              	.LVL26:
 749              	.LFB75:
 562:Src/main.c    **** 
 563:Src/main.c    **** void FAULT_check(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool tempFault[12][4], b
 750              		.loc 1 563 191 is_stmt 1 view -0
 751              		.cfi_startproc
 752              		@ args = 104, pretend = 16, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754              		.loc 1 563 191 is_stmt 0 view .LVU242
 755 0000 84B0     		sub	sp, sp, #16
 756              	.LCFI13:
 757              		.cfi_def_cfa_offset 16
 758 0002 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 759              	.LCFI14:
 760              		.cfi_def_cfa_offset 56
 761              		.cfi_offset 3, -56
 762              		.cfi_offset 4, -52
 763              		.cfi_offset 5, -48
 764              		.cfi_offset 6, -44
 765              		.cfi_offset 7, -40
 766              		.cfi_offset 8, -36
 767              		.cfi_offset 9, -32
 768              		.cfi_offset 10, -28
 769              		.cfi_offset 11, -24
 770              		.cfi_offset 14, -20
 771 0006 0AAC     		add	r4, sp, #40
 772 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 773 000c DDF87890 		ldr	r9, [sp, #120]
 774 0010 1F9E     		ldr	r6, [sp, #124]
 775 0012 209F     		ldr	r7, [sp, #128]
 776 0014 DDF88480 		ldr	r8, [sp, #132]
 777 0018 2298     		ldr	r0, [sp, #136]
 778 001a 239D     		ldr	r5, [sp, #140]
 564:Src/main.c    **** 
 565:Src/main.c    ****   bool BMS_FAULT = false;
 779              		.loc 1 565 3 is_stmt 1 view .LVU243
 780              	.LVL27:
 566:Src/main.c    ****   
 567:Src/main.c    ****   cellNumber[0] = 0; // OV cell number
 781              		.loc 1 567 3 view .LVU244
 782              		.loc 1 567 17 is_stmt 0 view .LVU245
 783 001c 0024     		movs	r4, #0
 784 001e 0470     		strb	r4, [r0]
 568:Src/main.c    ****   cellNumber[1] = 0; // UV cell number
 785              		.loc 1 568 3 is_stmt 1 view .LVU246
 786              		.loc 1 568 17 is_stmt 0 view .LVU247
 787 0020 4470     		strb	r4, [r0, #1]
ARM GAS  /tmp/ccvy7xoI.s 			page 27


 569:Src/main.c    ****   cellNumber[2] = 0; // OT cell number
 788              		.loc 1 569 3 is_stmt 1 view .LVU248
 789              		.loc 1 569 17 is_stmt 0 view .LVU249
 790 0022 8470     		strb	r4, [r0, #2]
 570:Src/main.c    ****   cellNumber[3] = 0; // disconnected cell cell number
 791              		.loc 1 570 3 is_stmt 1 view .LVU250
 792              		.loc 1 570 17 is_stmt 0 view .LVU251
 793 0024 C470     		strb	r4, [r0, #3]
 571:Src/main.c    ****   cellNumber[4] = 0; // disconnected temp sensor cell number
 794              		.loc 1 571 3 is_stmt 1 view .LVU252
 795              		.loc 1 571 17 is_stmt 0 view .LVU253
 796 0026 0471     		strb	r4, [r0, #4]
 572:Src/main.c    **** 
 573:Src/main.c    ****   faultType[0] = 0; // disconnected temp sensor fault
 797              		.loc 1 573 3 is_stmt 1 view .LVU254
 798              		.loc 1 573 16 is_stmt 0 view .LVU255
 799 0028 2C70     		strb	r4, [r5]
 574:Src/main.c    ****   faultType[1] = 0; // disconnected cell fault
 800              		.loc 1 574 3 is_stmt 1 view .LVU256
 801              		.loc 1 574 16 is_stmt 0 view .LVU257
 802 002a 6C70     		strb	r4, [r5, #1]
 575:Src/main.c    ****   faultType[2] = 0; // OT fault
 803              		.loc 1 575 3 is_stmt 1 view .LVU258
 804              		.loc 1 575 16 is_stmt 0 view .LVU259
 805 002c AC70     		strb	r4, [r5, #2]
 576:Src/main.c    ****   faultType[3] = 0; // UV fault
 806              		.loc 1 576 3 is_stmt 1 view .LVU260
 807              		.loc 1 576 16 is_stmt 0 view .LVU261
 808 002e EC70     		strb	r4, [r5, #3]
 577:Src/main.c    ****   faultType[4] = 0; // OV fault
 809              		.loc 1 577 3 is_stmt 1 view .LVU262
 810              		.loc 1 577 16 is_stmt 0 view .LVU263
 811 0030 2C71     		strb	r4, [r5, #4]
 578:Src/main.c    **** 
 579:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 812              		.loc 1 579 3 is_stmt 1 view .LVU264
 813              	.LBB8:
 814              		.loc 1 579 8 view .LVU265
 815              	.LVL28:
 816              		.loc 1 579 16 is_stmt 0 view .LVU266
 817 0032 A446     		mov	ip, r4
 818              		.loc 1 579 3 view .LVU267
 819 0034 36E0     		b	.L28
 820              	.LVL29:
 821              	.L30:
 822              	.LBB9:
 580:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 823              		.loc 1 580 51 discriminator 2 view .LVU268
 824 0036 0133     		adds	r3, r3, #1
 825              	.LVL30:
 826              		.loc 1 580 51 discriminator 2 view .LVU269
 827 0038 DBB2     		uxtb	r3, r3
 828              	.LVL31:
 829              	.L32:
 830              		.loc 1 580 32 discriminator 1 view .LVU270
 831 003a 9DF84A20 		ldrb	r2, [sp, #74]	@ zero_extendqisi2
 832              		.loc 1 580 5 discriminator 1 view .LVU271
ARM GAS  /tmp/ccvy7xoI.s 			page 28


 833 003e 9A42     		cmp	r2, r3
 834 0040 2CD9     		bls	.L43
 581:Src/main.c    ****       if (cellVoltage[i][j] >> cfg.OV_threshold) {
 835              		.loc 1 581 7 is_stmt 1 view .LVU272
 836              		.loc 1 581 22 is_stmt 0 view .LVU273
 837 0042 6146     		mov	r1, ip
 838 0044 0CEB4C0A 		add	r10, ip, ip, lsl #1
 839 0048 4FEACA0E 		lsl	lr, r10, #3
 840 004c CE44     		add	lr, lr, r9
 841              		.loc 1 581 25 view .LVU274
 842 004e 9A46     		mov	r10, r3
 843 0050 3EF813B0 		ldrh	fp, [lr, r3, lsl #1]
 844              		.loc 1 581 35 view .LVU275
 845 0054 BDF84EE0 		ldrh	lr, [sp, #78]
 846              		.loc 1 581 10 view .LVU276
 847 0058 5BFA0EFE 		asrs	lr, fp, lr
 848 005c 0BD0     		beq	.L29
 582:Src/main.c    ****         BMS_FAULT = true;
 849              		.loc 1 582 9 is_stmt 1 view .LVU277
 850              	.LVL32:
 583:Src/main.c    ****         faultType[4] = true;
 851              		.loc 1 583 9 view .LVU278
 852              		.loc 1 583 22 is_stmt 0 view .LVU279
 853 005e 0124     		movs	r4, #1
 854 0060 2C71     		strb	r4, [r5, #4]
 584:Src/main.c    ****         cellNumber[0] = i * cfg.numOfCellsPerIC + j + 1;
 855              		.loc 1 584 9 is_stmt 1 view .LVU280
 856              		.loc 1 584 27 is_stmt 0 view .LVU281
 857 0062 0CFB02FE 		mul	lr, ip, r2
 858 0066 5FFA8EFE 		uxtb	lr, lr
 859              		.loc 1 584 49 view .LVU282
 860 006a 9E44     		add	lr, lr, r3
 861 006c 5FFA8EFE 		uxtb	lr, lr
 862              		.loc 1 584 53 view .LVU283
 863 0070 A644     		add	lr, lr, r4
 864              		.loc 1 584 23 view .LVU284
 865 0072 80F800E0 		strb	lr, [r0]
 866              	.LVL33:
 867              	.L29:
 585:Src/main.c    ****       }
 586:Src/main.c    ****       if (cellConnection[i][j] == 0) {
 868              		.loc 1 586 7 is_stmt 1 view .LVU285
 869              		.loc 1 586 25 is_stmt 0 view .LVU286
 870 0076 01EB4101 		add	r1, r1, r1, lsl #1
 871 007a 4FEA810E 		lsl	lr, r1, #2
 872 007e C644     		add	lr, lr, r8
 873              		.loc 1 586 28 view .LVU287
 874 0080 1EF80A10 		ldrb	r1, [lr, r10]	@ zero_extendqisi2
 875              		.loc 1 586 10 view .LVU288
 876 0084 0029     		cmp	r1, #0
 877 0086 D6D1     		bne	.L30
 587:Src/main.c    ****         BMS_FAULT = true;
 878              		.loc 1 587 9 is_stmt 1 view .LVU289
 879              	.LVL34:
 588:Src/main.c    ****         faultType[1] = true;
 880              		.loc 1 588 9 view .LVU290
 881              		.loc 1 588 22 is_stmt 0 view .LVU291
ARM GAS  /tmp/ccvy7xoI.s 			page 29


 882 0088 0124     		movs	r4, #1
 883 008a 6C70     		strb	r4, [r5, #1]
 589:Src/main.c    ****         cellNumber[3] = i * cfg.numOfCellsPerIC + j + 1;
 884              		.loc 1 589 9 is_stmt 1 view .LVU292
 885              		.loc 1 589 27 is_stmt 0 view .LVU293
 886 008c 0CFB02F2 		mul	r2, ip, r2
 887 0090 D2B2     		uxtb	r2, r2
 888              		.loc 1 589 49 view .LVU294
 889 0092 1A44     		add	r2, r2, r3
 890 0094 D2B2     		uxtb	r2, r2
 891              		.loc 1 589 53 view .LVU295
 892 0096 2244     		add	r2, r2, r4
 893              		.loc 1 589 23 view .LVU296
 894 0098 C270     		strb	r2, [r0, #3]
 895 009a CCE7     		b	.L30
 896              	.LVL35:
 897              	.L43:
 898              		.loc 1 589 23 view .LVU297
 899              	.LBE9:
 579:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 900              		.loc 1 579 42 discriminator 2 view .LVU298
 901 009c 0CF1010C 		add	ip, ip, #1
 902              	.LVL36:
 579:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 903              		.loc 1 579 42 discriminator 2 view .LVU299
 904 00a0 5FFA8CFC 		uxtb	ip, ip
 905              	.LVL37:
 906              	.L28:
 579:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 907              		.loc 1 579 30 discriminator 1 view .LVU300
 908 00a4 9DF828E0 		ldrb	lr, [sp, #40]	@ zero_extendqisi2
 579:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 909              		.loc 1 579 3 discriminator 1 view .LVU301
 910 00a8 E645     		cmp	lr, ip
 911 00aa 01D9     		bls	.L44
 912              	.LBB10:
 580:Src/main.c    ****       if (cellVoltage[i][j] >> cfg.OV_threshold) {
 913              		.loc 1 580 18 view .LVU302
 914 00ac 0023     		movs	r3, #0
 915 00ae C4E7     		b	.L32
 916              	.L44:
 917              	.LBE10:
 918              	.LBE8:
 919              	.LBB11:
 590:Src/main.c    ****       }
 591:Src/main.c    ****     }
 592:Src/main.c    ****   }
 593:Src/main.c    **** 
 594:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 920              		.loc 1 594 16 view .LVU303
 921 00b0 0021     		movs	r1, #0
 922 00b2 32E0     		b	.L33
 923              	.LVL38:
 924              	.L35:
 925              	.LBB12:
 595:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 926              		.loc 1 595 50 discriminator 2 view .LVU304
ARM GAS  /tmp/ccvy7xoI.s 			page 30


 927 00b4 0133     		adds	r3, r3, #1
 928              	.LVL39:
 929              		.loc 1 595 50 discriminator 2 view .LVU305
 930 00b6 DBB2     		uxtb	r3, r3
 931              	.LVL40:
 932              	.L37:
 933              		.loc 1 595 32 discriminator 1 view .LVU306
 934 00b8 9DF84B20 		ldrb	r2, [sp, #75]	@ zero_extendqisi2
 935              		.loc 1 595 5 discriminator 1 view .LVU307
 936 00bc 9A42     		cmp	r2, r3
 937 00be 2AD9     		bls	.L45
 596:Src/main.c    ****       if (tempFault[i][j] == 1) {
 938              		.loc 1 596 7 is_stmt 1 view .LVU308
 939              		.loc 1 596 20 is_stmt 0 view .LVU309
 940 00c0 4FEA810C 		lsl	ip, r1, #2
 941 00c4 06EB0C02 		add	r2, r6, ip
 942              		.loc 1 596 23 view .LVU310
 943 00c8 9946     		mov	r9, r3
 944 00ca 12F80380 		ldrb	r8, [r2, r3]	@ zero_extendqisi2
 945              		.loc 1 596 10 view .LVU311
 946 00ce B8F1000F 		cmp	r8, #0
 947 00d2 0CD0     		beq	.L34
 597:Src/main.c    ****         BMS_FAULT = true;
 948              		.loc 1 597 9 is_stmt 1 view .LVU312
 949              	.LVL41:
 598:Src/main.c    ****         faultType[2] = true;
 950              		.loc 1 598 9 view .LVU313
 951              		.loc 1 598 22 is_stmt 0 view .LVU314
 952 00d4 0122     		movs	r2, #1
 953 00d6 AA70     		strb	r2, [r5, #2]
 599:Src/main.c    ****         cellNumber[2] = i * cfg.numOfCellsPerIC + j*2 + 1;
 954              		.loc 1 599 9 is_stmt 1 view .LVU315
 955              		.loc 1 599 32 is_stmt 0 view .LVU316
 956 00d8 9DF84A20 		ldrb	r2, [sp, #74]	@ zero_extendqisi2
 957              		.loc 1 599 27 view .LVU317
 958 00dc 01FB02F2 		mul	r2, r1, r2
 959 00e0 D2B2     		uxtb	r2, r2
 960              		.loc 1 599 49 view .LVU318
 961 00e2 02EB4302 		add	r2, r2, r3, lsl #1
 962 00e6 D2B2     		uxtb	r2, r2
 963              		.loc 1 599 55 view .LVU319
 964 00e8 0132     		adds	r2, r2, #1
 965              		.loc 1 599 23 view .LVU320
 966 00ea 8270     		strb	r2, [r0, #2]
 597:Src/main.c    ****         BMS_FAULT = true;
 967              		.loc 1 597 19 view .LVU321
 968 00ec 4446     		mov	r4, r8
 969              	.LVL42:
 970              	.L34:
 600:Src/main.c    ****       }
 601:Src/main.c    ****       if (dcFault[i][j] == 1) {
 971              		.loc 1 601 7 is_stmt 1 view .LVU322
 972              		.loc 1 601 18 is_stmt 0 view .LVU323
 973 00ee BC44     		add	ip, ip, r7
 974              		.loc 1 601 21 view .LVU324
 975 00f0 1CF809C0 		ldrb	ip, [ip, r9]	@ zero_extendqisi2
 976              		.loc 1 601 10 view .LVU325
ARM GAS  /tmp/ccvy7xoI.s 			page 31


 977 00f4 BCF1000F 		cmp	ip, #0
 978 00f8 DCD0     		beq	.L35
 602:Src/main.c    ****         BMS_FAULT = true;
 979              		.loc 1 602 9 is_stmt 1 view .LVU326
 980              	.LVL43:
 603:Src/main.c    ****         faultType[0] = true;
 981              		.loc 1 603 9 view .LVU327
 982              		.loc 1 603 22 is_stmt 0 view .LVU328
 983 00fa 0122     		movs	r2, #1
 984 00fc 2A70     		strb	r2, [r5]
 604:Src/main.c    ****         cellNumber[4] = i * cfg.numOfCellsPerIC + j*2 + 1;
 985              		.loc 1 604 9 is_stmt 1 view .LVU329
 986              		.loc 1 604 32 is_stmt 0 view .LVU330
 987 00fe 9DF84A20 		ldrb	r2, [sp, #74]	@ zero_extendqisi2
 988              		.loc 1 604 27 view .LVU331
 989 0102 01FB02F2 		mul	r2, r1, r2
 990 0106 D2B2     		uxtb	r2, r2
 991              		.loc 1 604 49 view .LVU332
 992 0108 02EB4302 		add	r2, r2, r3, lsl #1
 993 010c D2B2     		uxtb	r2, r2
 994              		.loc 1 604 55 view .LVU333
 995 010e 0132     		adds	r2, r2, #1
 996              		.loc 1 604 23 view .LVU334
 997 0110 0271     		strb	r2, [r0, #4]
 602:Src/main.c    ****         BMS_FAULT = true;
 998              		.loc 1 602 19 view .LVU335
 999 0112 6446     		mov	r4, ip
 1000 0114 CEE7     		b	.L35
 1001              	.LVL44:
 1002              	.L45:
 602:Src/main.c    ****         BMS_FAULT = true;
 1003              		.loc 1 602 19 view .LVU336
 1004              	.LBE12:
 594:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 1005              		.loc 1 594 42 discriminator 2 view .LVU337
 1006 0116 0131     		adds	r1, r1, #1
 1007              	.LVL45:
 594:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 1008              		.loc 1 594 42 discriminator 2 view .LVU338
 1009 0118 C9B2     		uxtb	r1, r1
 1010              	.LVL46:
 1011              	.L33:
 594:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 1012              		.loc 1 594 3 discriminator 1 view .LVU339
 1013 011a 8E45     		cmp	lr, r1
 1014 011c 01D9     		bls	.L46
 1015              	.LBB13:
 595:Src/main.c    ****       if (tempFault[i][j] == 1) {
 1016              		.loc 1 595 18 view .LVU340
 1017 011e 0023     		movs	r3, #0
 1018 0120 CAE7     		b	.L37
 1019              	.L46:
 1020              	.LBE13:
 1021              	.LBE11:
 605:Src/main.c    ****       }
 606:Src/main.c    ****     }
 607:Src/main.c    ****   }
ARM GAS  /tmp/ccvy7xoI.s 			page 32


 608:Src/main.c    **** 
 609:Src/main.c    ****   if (BMS_FAULT == false)
 1022              		.loc 1 609 3 is_stmt 1 view .LVU341
 1023              		.loc 1 609 6 is_stmt 0 view .LVU342
 1024 0122 24B1     		cbz	r4, .L47
 1025              	.LVL47:
 1026              	.L38:
 610:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 611:Src/main.c    ****   if (BMS_FAULT == true)
 1027              		.loc 1 611 3 is_stmt 1 view .LVU343
 1028              		.loc 1 611 6 is_stmt 0 view .LVU344
 1029 0124 54B9     		cbnz	r4, .L48
 1030              	.L27:
 612:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_SET);
 613:Src/main.c    **** 
 614:Src/main.c    **** }
 1031              		.loc 1 614 1 view .LVU345
 1032 0126 BDE8F84F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1033              	.LCFI15:
 1034              		.cfi_remember_state
 1035              		.cfi_restore 14
 1036              		.cfi_restore 11
 1037              		.cfi_restore 10
 1038              		.cfi_restore 9
 1039              		.cfi_restore 8
 1040              		.cfi_restore 7
 1041              		.cfi_restore 6
 1042              		.cfi_restore 5
 1043              		.cfi_restore 4
 1044              		.cfi_restore 3
 1045              		.cfi_def_cfa_offset 16
 1046              	.LVL48:
 1047              		.loc 1 614 1 view .LVU346
 1048 012a 04B0     		add	sp, sp, #16
 1049              	.LCFI16:
 1050              		.cfi_def_cfa_offset 0
 1051 012c 7047     		bx	lr
 1052              	.LVL49:
 1053              	.L47:
 1054              	.LCFI17:
 1055              		.cfi_restore_state
 610:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 1056              		.loc 1 610 5 is_stmt 1 view .LVU347
 1057 012e 0022     		movs	r2, #0
 1058 0130 4FF40071 		mov	r1, #512
 1059              	.LVL50:
 610:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 1060              		.loc 1 610 5 is_stmt 0 view .LVU348
 1061 0134 0548     		ldr	r0, .L49
 1062 0136 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1063              	.LVL51:
 1064 013a F3E7     		b	.L38
 1065              	.L48:
 612:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_SET);
 1066              		.loc 1 612 5 is_stmt 1 view .LVU349
 1067 013c 0122     		movs	r2, #1
 1068 013e 4FF40071 		mov	r1, #512
ARM GAS  /tmp/ccvy7xoI.s 			page 33


 1069 0142 0248     		ldr	r0, .L49
 1070 0144 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1071              	.LVL52:
 1072              		.loc 1 614 1 is_stmt 0 view .LVU350
 1073 0148 EDE7     		b	.L27
 1074              	.L50:
 1075 014a 00BF     		.align	2
 1076              	.L49:
 1077 014c 000C0140 		.word	1073810432
 1078              		.cfi_endproc
 1079              	.LFE75:
 1081              		.section	.text.CELLVAL_message,"ax",%progbits
 1082              		.align	1
 1083              		.global	CELLVAL_message
 1084              		.syntax unified
 1085              		.thumb
 1086              		.thumb_func
 1087              		.fpu softvfp
 1089              	CELLVAL_message:
 1090              	.LVL53:
 1091              	.LFB76:
 615:Src/main.c    **** 
 616:Src/main.c    **** void CELLVAL_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], uint16_t cellTemp[12
 1092              		.loc 1 616 197 is_stmt 1 view -0
 1093              		.cfi_startproc
 1094              		@ args = 104, pretend = 16, frame = 0
 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 1096              		.loc 1 616 197 is_stmt 0 view .LVU352
 1097 0000 84B0     		sub	sp, sp, #16
 1098              	.LCFI18:
 1099              		.cfi_def_cfa_offset 16
 1100 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1101              	.LCFI19:
 1102              		.cfi_def_cfa_offset 40
 1103              		.cfi_offset 4, -40
 1104              		.cfi_offset 5, -36
 1105              		.cfi_offset 6, -32
 1106              		.cfi_offset 7, -28
 1107              		.cfi_offset 8, -24
 1108              		.cfi_offset 14, -20
 1109 0006 06AC     		add	r4, sp, #24
 1110 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1111 000c DDF86880 		ldr	r8, [sp, #104]
 1112 0010 1B9F     		ldr	r7, [sp, #108]
 1113 0012 1C9E     		ldr	r6, [sp, #112]
 617:Src/main.c    **** 	
 618:Src/main.c    ****   // takes in only relevant data (cells 1-4, 7-10)
 619:Src/main.c    ****   // need to know how to map temp sensor to cell
 620:Src/main.c    **** 
 621:Src/main.c    ****   TxHeader.StdId = CELLVAL_ID;
 1114              		.loc 1 621 3 is_stmt 1 view .LVU353
 1115              		.loc 1 621 18 is_stmt 0 view .LVU354
 1116 0014 224B     		ldr	r3, .L59
 1117 0016 0722     		movs	r2, #7
 1118 0018 1A60     		str	r2, [r3]
 622:Src/main.c    ****   TxHeader.DLC = 6;
 1119              		.loc 1 622 3 is_stmt 1 view .LVU355
ARM GAS  /tmp/ccvy7xoI.s 			page 34


 1120              		.loc 1 622 16 is_stmt 0 view .LVU356
 1121 001a 0622     		movs	r2, #6
 1122 001c 1A61     		str	r2, [r3, #16]
 623:Src/main.c    **** 
 624:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 1123              		.loc 1 624 3 is_stmt 1 view .LVU357
 1124              	.LBB14:
 1125              		.loc 1 624 8 view .LVU358
 1126              	.LVL54:
 1127              		.loc 1 624 16 is_stmt 0 view .LVU359
 1128 001e 0025     		movs	r5, #0
 1129              		.loc 1 624 3 view .LVU360
 1130 0020 01E0     		b	.L52
 1131              	.LVL55:
 1132              	.L58:
 1133              		.loc 1 624 42 discriminator 2 view .LVU361
 1134 0022 0135     		adds	r5, r5, #1
 1135              	.LVL56:
 1136              		.loc 1 624 42 discriminator 2 view .LVU362
 1137 0024 EDB2     		uxtb	r5, r5
 1138              	.LVL57:
 1139              	.L52:
 1140              		.loc 1 624 30 discriminator 1 view .LVU363
 1141 0026 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 1142              		.loc 1 624 3 discriminator 1 view .LVU364
 1143 002a AB42     		cmp	r3, r5
 1144 002c 34D9     		bls	.L57
 1145              	.LBB15:
 625:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 1146              		.loc 1 625 18 view .LVU365
 1147 002e 0024     		movs	r4, #0
 1148              	.L54:
 1149              	.LVL58:
 1150              		.loc 1 625 32 discriminator 1 view .LVU366
 1151 0030 9DF83A30 		ldrb	r3, [sp, #58]	@ zero_extendqisi2
 1152              		.loc 1 625 5 discriminator 1 view .LVU367
 1153 0034 A342     		cmp	r3, r4
 1154 0036 F4D9     		bls	.L58
 626:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number 
 1155              		.loc 1 626 7 is_stmt 1 discriminator 3 view .LVU368
 1156              		.loc 1 626 27 is_stmt 0 discriminator 3 view .LVU369
 1157 0038 05FB03F3 		mul	r3, r5, r3
 1158 003c DBB2     		uxtb	r3, r3
 1159              		.loc 1 626 49 discriminator 3 view .LVU370
 1160 003e 2344     		add	r3, r3, r4
 1161 0040 DBB2     		uxtb	r3, r3
 1162              		.loc 1 626 53 discriminator 3 view .LVU371
 1163 0042 0133     		adds	r3, r3, #1
 1164              		.loc 1 626 23 discriminator 3 view .LVU372
 1165 0044 174A     		ldr	r2, .L59+4
 1166 0046 1370     		strb	r3, [r2]
 627:Src/main.c    ****       CELLVAL_DATA[1] = (uint8_t) cellConnection[i][j] & 0x01;
 1167              		.loc 1 627 7 is_stmt 1 discriminator 3 view .LVU373
 1168              		.loc 1 627 49 is_stmt 0 discriminator 3 view .LVU374
 1169 0048 6900     		lsls	r1, r5, #1
 1170 004a 4819     		adds	r0, r1, r5
 1171 004c 8300     		lsls	r3, r0, #2
ARM GAS  /tmp/ccvy7xoI.s 			page 35


 1172 004e 3344     		add	r3, r3, r6
 1173              		.loc 1 627 25 discriminator 3 view .LVU375
 1174 0050 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1175              		.loc 1 627 23 discriminator 3 view .LVU376
 1176 0052 5370     		strb	r3, [r2, #1]
 628:Src/main.c    ****       //CELLVAL_DATA[1] = (uint8_t) ((dcFault[i][(uint8_t) j/2] & 0x08) | (cellDischarge[i][j] & 0x
 629:Src/main.c    ****       CELLVAL_DATA[2] = (uint8_t) ((cellVoltage[i][j] >> 8) & 0xFF);
 1177              		.loc 1 629 7 is_stmt 1 discriminator 3 view .LVU377
 1178              		.loc 1 629 48 is_stmt 0 discriminator 3 view .LVU378
 1179 0054 2944     		add	r1, r1, r5
 1180 0056 CB00     		lsls	r3, r1, #3
 1181 0058 4344     		add	r3, r3, r8
 1182              		.loc 1 629 51 discriminator 3 view .LVU379
 1183 005a 33F81410 		ldrh	r1, [r3, r4, lsl #1]
 1184              		.loc 1 629 25 discriminator 3 view .LVU380
 1185 005e 090A     		lsrs	r1, r1, #8
 1186              		.loc 1 629 23 discriminator 3 view .LVU381
 1187 0060 9170     		strb	r1, [r2, #2]
 630:Src/main.c    ****       CELLVAL_DATA[3] = (uint8_t) (cellVoltage[i][j] & 0xFF);
 1188              		.loc 1 630 7 is_stmt 1 discriminator 3 view .LVU382
 1189              		.loc 1 630 25 is_stmt 0 discriminator 3 view .LVU383
 1190 0062 13F81430 		ldrb	r3, [r3, r4, lsl #1]	@ zero_extendqisi2
 1191              		.loc 1 630 23 discriminator 3 view .LVU384
 1192 0066 D370     		strb	r3, [r2, #3]
 631:Src/main.c    ****       CELLVAL_DATA[4] = (uint8_t) ((cellTemp[i][(uint8_t) j/2] > 8) & 0xFF); // figure out how temp
 1193              		.loc 1 631 7 is_stmt 1 discriminator 3 view .LVU385
 1194              		.loc 1 631 45 is_stmt 0 discriminator 3 view .LVU386
 1195 0068 07EBC501 		add	r1, r7, r5, lsl #3
 1196              		.loc 1 631 60 discriminator 3 view .LVU387
 1197 006c 6008     		lsrs	r0, r4, #1
 1198              		.loc 1 631 48 discriminator 3 view .LVU388
 1199 006e 31F81030 		ldrh	r3, [r1, r0, lsl #1]
 1200              		.loc 1 631 25 discriminator 3 view .LVU389
 1201 0072 082B     		cmp	r3, #8
 1202 0074 94BF     		ite	ls
 1203 0076 0023     		movls	r3, #0
 1204 0078 0123     		movhi	r3, #1
 1205              		.loc 1 631 23 discriminator 3 view .LVU390
 1206 007a 1371     		strb	r3, [r2, #4]
 632:Src/main.c    ****       CELLVAL_DATA[5] = (uint8_t) (cellTemp[i][(uint8_t) j/2] & 0xFF);
 1207              		.loc 1 632 7 is_stmt 1 discriminator 3 view .LVU391
 1208              		.loc 1 632 25 is_stmt 0 discriminator 3 view .LVU392
 1209 007c 11F81030 		ldrb	r3, [r1, r0, lsl #1]	@ zero_extendqisi2
 1210              		.loc 1 632 23 discriminator 3 view .LVU393
 1211 0080 5371     		strb	r3, [r2, #5]
 633:Src/main.c    **** 
 634:Src/main.c    ****       HAL_CAN_AddTxMessage(&hcan, &TxHeader, CELLVAL_DATA, &TxMailbox);
 1212              		.loc 1 634 7 is_stmt 1 discriminator 3 view .LVU394
 1213 0082 094B     		ldr	r3, .L59+8
 1214 0084 0649     		ldr	r1, .L59
 1215 0086 0948     		ldr	r0, .L59+12
 1216 0088 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1217              	.LVL59:
 635:Src/main.c    ****       HAL_Delay(10);
 1218              		.loc 1 635 7 discriminator 3 view .LVU395
 1219 008c 0A20     		movs	r0, #10
 1220 008e FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/ccvy7xoI.s 			page 36


 1221              	.LVL60:
 625:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number 
 1222              		.loc 1 625 51 is_stmt 0 discriminator 3 view .LVU396
 1223 0092 0134     		adds	r4, r4, #1
 1224              	.LVL61:
 625:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number 
 1225              		.loc 1 625 51 discriminator 3 view .LVU397
 1226 0094 E4B2     		uxtb	r4, r4
 1227              	.LVL62:
 625:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number 
 1228              		.loc 1 625 51 discriminator 3 view .LVU398
 1229 0096 CBE7     		b	.L54
 1230              	.LVL63:
 1231              	.L57:
 625:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number 
 1232              		.loc 1 625 51 discriminator 3 view .LVU399
 1233              	.LBE15:
 1234              	.LBE14:
 636:Src/main.c    ****     }
 637:Src/main.c    ****   }
 638:Src/main.c    **** }
 1235              		.loc 1 638 1 view .LVU400
 1236 0098 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1237              	.LCFI20:
 1238              		.cfi_restore 14
 1239              		.cfi_restore 8
 1240              		.cfi_restore 7
 1241              		.cfi_restore 6
 1242              		.cfi_restore 5
 1243              		.cfi_restore 4
 1244              		.cfi_def_cfa_offset 16
 1245              	.LVL64:
 1246              		.loc 1 638 1 view .LVU401
 1247 009c 04B0     		add	sp, sp, #16
 1248              	.LCFI21:
 1249              		.cfi_def_cfa_offset 0
 1250 009e 7047     		bx	lr
 1251              	.L60:
 1252              		.align	2
 1253              	.L59:
 1254 00a0 00000000 		.word	TxHeader
 1255 00a4 00000000 		.word	CELLVAL_DATA
 1256 00a8 00000000 		.word	TxMailbox
 1257 00ac 00000000 		.word	hcan
 1258              		.cfi_endproc
 1259              	.LFE76:
 1261              		.section	.text.main,"ax",%progbits
 1262              		.align	1
 1263              		.global	main
 1264              		.syntax unified
 1265              		.thumb
 1266              		.thumb_func
 1267              		.fpu softvfp
 1269              	main:
 1270              	.LFB66:
  99:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1271              		.loc 1 99 1 is_stmt 1 view -0
ARM GAS  /tmp/ccvy7xoI.s 			page 37


 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 40
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1276              	.LCFI22:
 1277              		.cfi_def_cfa_offset 36
 1278              		.cfi_offset 4, -36
 1279              		.cfi_offset 5, -32
 1280              		.cfi_offset 6, -28
 1281              		.cfi_offset 7, -24
 1282              		.cfi_offset 8, -20
 1283              		.cfi_offset 9, -16
 1284              		.cfi_offset 10, -12
 1285              		.cfi_offset 11, -8
 1286              		.cfi_offset 14, -4
 1287 0004 A1B0     		sub	sp, sp, #132
 1288              	.LCFI23:
 1289              		.cfi_def_cfa_offset 168
 1290 0006 16AF     		add	r7, sp, #88
 1291              	.LCFI24:
 1292              		.cfi_def_cfa 7, 80
 107:Src/main.c    **** 
 1293              		.loc 1 107 3 view .LVU403
 1294 0008 FFF7FEFF 		bl	HAL_Init
 1295              	.LVL65:
 114:Src/main.c    **** 
 1296              		.loc 1 114 3 view .LVU404
 1297 000c FFF7FEFF 		bl	SystemClock_Config
 1298              	.LVL66:
 121:Src/main.c    ****   MX_ADC1_Init();
 1299              		.loc 1 121 3 view .LVU405
 1300 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1301              	.LVL67:
 122:Src/main.c    ****   MX_CAN_Init();
 1302              		.loc 1 122 3 view .LVU406
 1303 0014 FFF7FEFF 		bl	MX_ADC1_Init
 1304              	.LVL68:
 123:Src/main.c    ****   //MX_SPI1_Init();
 1305              		.loc 1 123 3 view .LVU407
 1306 0018 FFF7FEFF 		bl	MX_CAN_Init
 1307              	.LVL69:
 125:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1308              		.loc 1 125 3 view .LVU408
 1309 001c FFF7FEFF 		bl	MX_TIM2_Init
 1310              	.LVL70:
 127:Src/main.c    ****   initPECTable();
 1311              		.loc 1 127 3 view .LVU409
 1312 0020 FFF7FEFF 		bl	SPI_Init
 1313              	.LVL71:
 128:Src/main.c    ****   loadConfig(&BMSconfig); // loads configuration settings from config.c
 1314              		.loc 1 128 3 view .LVU410
 1315 0024 FFF7FEFF 		bl	initPECTable
 1316              	.LVL72:
 129:Src/main.c    ****   // set trigger high momentarily 
 1317              		.loc 1 129 3 view .LVU411
 1318 0028 884C     		ldr	r4, .L69
 1319 002a 2046     		mov	r0, r4
ARM GAS  /tmp/ccvy7xoI.s 			page 38


 1320 002c FFF7FEFF 		bl	loadConfig
 1321              	.LVL73:
 131:Src/main.c    **** 
 1322              		.loc 1 131 3 view .LVU412
 1323 0030 D4F800A0 		ldr	r10, [r4]	@ unaligned
 1324 0034 D4F80490 		ldr	r9, [r4, #4]	@ unaligned
 1325 0038 D4F80880 		ldr	r8, [r4, #8]	@ unaligned
 1326 003c D4F80CE0 		ldr	lr, [r4, #12]	@ unaligned
 1327 0040 04F11005 		add	r5, r4, #16
 1328 0044 EC46     		mov	ip, sp
 1329 0046 5034     		adds	r4, r4, #80
 1330              	.L62:
 1331 0048 6646     		mov	r6, ip
 1332 004a 2868     		ldr	r0, [r5]	@ unaligned
 1333 004c 6968     		ldr	r1, [r5, #4]	@ unaligned
 1334 004e AA68     		ldr	r2, [r5, #8]	@ unaligned
 1335 0050 EB68     		ldr	r3, [r5, #12]	@ unaligned
 1336 0052 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1337 0054 1035     		adds	r5, r5, #16
 1338 0056 B446     		mov	ip, r6
 1339 0058 A542     		cmp	r5, r4
 1340 005a F5D1     		bne	.L62
 1341 005c 5046     		mov	r0, r10
 1342 005e 4946     		mov	r1, r9
 1343 0060 4246     		mov	r2, r8
 1344 0062 7346     		mov	r3, lr
 1345 0064 FFF7FEFF 		bl	writeConfigAll
 1346              	.LVL74:
 133:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1347              		.loc 1 133 3 view .LVU413
 133:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1348              		.loc 1 133 49 is_stmt 0 view .LVU414
 1349 0068 7848     		ldr	r0, .L69
 1350 006a 90F82120 		ldrb	r2, [r0, #33]	@ zero_extendqisi2
 133:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1351              		.loc 1 133 29 view .LVU415
 1352 006e 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1353              	.LVL75:
 133:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1354              		.loc 1 133 12 view .LVU416
 1355 0070 03FB02F2 		mul	r2, r3, r2
 1356              	.LVL76:
 133:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1357              		.loc 1 133 12 view .LVU417
 1358 0074 5100     		lsls	r1, r2, #1
 1359 0076 0731     		adds	r1, r1, #7
 1360 0078 C908     		lsrs	r1, r1, #3
 1361 007a 6C46     		mov	r4, sp
 1362 007c A4EBC101 		sub	r1, r4, r1, lsl #3
 1363 0080 8D46     		mov	sp, r1
 1364 0082 0DF15809 		add	r9, sp, #88
 1365              	.LVL77:
 134:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 1366              		.loc 1 134 3 is_stmt 1 view .LVU418
 134:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 1367              		.loc 1 134 46 is_stmt 0 view .LVU419
 1368 0086 90F82310 		ldrb	r1, [r0, #35]	@ zero_extendqisi2
ARM GAS  /tmp/ccvy7xoI.s 			page 39


 1369              	.LVL78:
 134:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 1370              		.loc 1 134 12 view .LVU420
 1371 008a 03FB01F1 		mul	r1, r3, r1
 1372              	.LVL79:
 134:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 1373              		.loc 1 134 12 view .LVU421
 1374 008e 4C00     		lsls	r4, r1, #1
 1375 0090 0734     		adds	r4, r4, #7
 1376 0092 E408     		lsrs	r4, r4, #3
 1377 0094 6D46     		mov	r5, sp
 1378 0096 A5EBC404 		sub	r4, r5, r4, lsl #3
 1379 009a A546     		mov	sp, r4
 1380 009c 16AC     		add	r4, sp, #88
 1381 009e BC60     		str	r4, [r7, #8]
 1382              	.LVL80:
 135:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1383              		.loc 1 135 3 is_stmt 1 view .LVU422
 135:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1384              		.loc 1 135 8 is_stmt 0 view .LVU423
 1385 00a0 0731     		adds	r1, r1, #7
 1386 00a2 C908     		lsrs	r1, r1, #3
 1387 00a4 6C46     		mov	r4, sp
 1388              	.LVL81:
 135:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 1389              		.loc 1 135 8 view .LVU424
 1390 00a6 A4EBC101 		sub	r1, r4, r1, lsl #3
 1391 00aa 8D46     		mov	sp, r1
 1392 00ac 16A9     		add	r1, sp, #88
 1393 00ae 7960     		str	r1, [r7, #4]
 1394              	.LVL82:
 136:Src/main.c    ****   bool connection[BMSconfig.numOfICs][BMSconfig.numOfCellInputs];         //12, 12
 1395              		.loc 1 136 3 is_stmt 1 view .LVU425
 137:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8 
 1396              		.loc 1 137 3 view .LVU426
 137:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8 
 1397              		.loc 1 137 8 is_stmt 0 view .LVU427
 1398 00b0 0732     		adds	r2, r2, #7
 1399 00b2 D208     		lsrs	r2, r2, #3
 1400 00b4 6946     		mov	r1, sp
 1401              	.LVL83:
 137:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8 
 1402              		.loc 1 137 8 view .LVU428
 1403 00b6 A1EBC202 		sub	r2, r1, r2, lsl #3
 1404 00ba 9546     		mov	sp, r2
 1405 00bc 0DF1580B 		add	fp, sp, #88
 1406              	.LVL84:
 138:Src/main.c    **** 
 1407              		.loc 1 138 3 is_stmt 1 view .LVU429
 138:Src/main.c    **** 
 1408              		.loc 1 138 47 is_stmt 0 view .LVU430
 1409 00c0 90F82220 		ldrb	r2, [r0, #34]	@ zero_extendqisi2
 1410              	.LVL85:
 138:Src/main.c    **** 
 1411              		.loc 1 138 8 view .LVU431
 1412 00c4 03FB02F3 		mul	r3, r3, r2
 1413              	.LVL86:
ARM GAS  /tmp/ccvy7xoI.s 			page 40


 138:Src/main.c    **** 
 1414              		.loc 1 138 8 view .LVU432
 1415 00c8 0733     		adds	r3, r3, #7
 1416 00ca DB08     		lsrs	r3, r3, #3
 1417 00cc 6A46     		mov	r2, sp
 1418              	.LVL87:
 138:Src/main.c    **** 
 1419              		.loc 1 138 8 view .LVU433
 1420 00ce A2EBC303 		sub	r3, r2, r3, lsl #3
 1421 00d2 9D46     		mov	sp, r3
 1422 00d4 16AB     		add	r3, sp, #88
 1423 00d6 7B61     		str	r3, [r7, #20]
 1424              	.LVL88:
 140:Src/main.c    ****   bool treturn = false;
 1425              		.loc 1 140 3 is_stmt 1 view .LVU434
 141:Src/main.c    ****   bool disconnectFault = false;
 1426              		.loc 1 141 3 view .LVU435
 142:Src/main.c    ****   uint8_t disconnectedCell;
 1427              		.loc 1 142 3 view .LVU436
 138:Src/main.c    **** 
 1428              		.loc 1 138 8 is_stmt 0 view .LVU437
 1429 00d8 4C46     		mov	r4, r9
 1430 00da 5D46     		mov	r5, fp
 1431 00dc 44E0     		b	.L67
 1432              	.LVL89:
 1433              	.L65:
 1434              	.LBB16:
 254:Src/main.c    **** 	setChargerTxData(CHARGER_DATA, chargerate, BMSconfig.chargerVoltage, BMSconfig.lowerCurrent, BMSco
 1435              		.loc 1 254 2 is_stmt 1 view .LVU438
 1436 00de 5B4E     		ldr	r6, .L69
 1437 00e0 07F12703 		add	r3, r7, #39
 1438 00e4 1393     		str	r3, [sp, #76]
 1439 00e6 7B69     		ldr	r3, [r7, #20]
 1440 00e8 1293     		str	r3, [sp, #72]
 1441 00ea 1195     		str	r5, [sp, #68]
 1442 00ec 1094     		str	r4, [sp, #64]
 1443 00ee D6F800B0 		ldr	fp, [r6]	@ unaligned
 1444 00f2 D6F804A0 		ldr	r10, [r6, #4]	@ unaligned
 1445 00f6 D6F80890 		ldr	r9, [r6, #8]	@ unaligned
 1446              	.LVL90:
 254:Src/main.c    **** 	setChargerTxData(CHARGER_DATA, chargerate, BMSconfig.chargerVoltage, BMSconfig.lowerCurrent, BMSco
 1447              		.loc 1 254 2 is_stmt 0 view .LVU439
 1448 00fa F368     		ldr	r3, [r6, #12]	@ unaligned
 1449 00fc 3B61     		str	r3, [r7, #16]
 1450 00fe 06F1100C 		add	ip, r6, #16
 1451 0102 E846     		mov	r8, sp
 1452 0104 5036     		adds	r6, r6, #80
 1453              	.L66:
 1454 0106 C646     		mov	lr, r8
 1455 0108 DCF80000 		ldr	r0, [ip]	@ unaligned
 1456 010c DCF80410 		ldr	r1, [ip, #4]	@ unaligned
 1457 0110 DCF80820 		ldr	r2, [ip, #8]	@ unaligned
 1458 0114 DCF80C30 		ldr	r3, [ip, #12]	@ unaligned
 1459 0118 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1460 011c 0CF1100C 		add	ip, ip, #16
 1461 0120 F046     		mov	r8, lr
 1462 0122 B445     		cmp	ip, r6
ARM GAS  /tmp/ccvy7xoI.s 			page 41


 1463 0124 EFD1     		bne	.L66
 1464 0126 5846     		mov	r0, fp
 1465 0128 5146     		mov	r1, r10
 1466 012a 4A46     		mov	r2, r9
 1467 012c 3B69     		ldr	r3, [r7, #16]
 1468 012e FFF7FEFF 		bl	setDischarge
 1469              	.LVL91:
 255:Src/main.c    **** 	TxHeader.IDE = CAN_ID_EXT;
 1470              		.loc 1 255 2 is_stmt 1 view .LVU440
 255:Src/main.c    **** 	TxHeader.IDE = CAN_ID_EXT;
 1471              		.loc 1 255 54 is_stmt 0 view .LVU441
 1472 0132 464A     		ldr	r2, .L69
 255:Src/main.c    **** 	TxHeader.IDE = CAN_ID_EXT;
 1473              		.loc 1 255 104 view .LVU442
 1474 0134 D38D     		ldrh	r3, [r2, #46]
 255:Src/main.c    **** 	TxHeader.IDE = CAN_ID_EXT;
 1475              		.loc 1 255 2 view .LVU443
 1476 0136 DFF82881 		ldr	r8, .L69+20
 1477 013a 0093     		str	r3, [sp]
 1478 013c 138E     		ldrh	r3, [r2, #48]
 1479 013e 528E     		ldrh	r2, [r2, #50]
 1480 0140 97F82710 		ldrb	r1, [r7, #39]	@ zero_extendqisi2
 1481 0144 4046     		mov	r0, r8
 1482 0146 FFF7FEFF 		bl	setChargerTxData
 1483              	.LVL92:
 256:Src/main.c    **** 	HAL_CAN_AddTxMessage(&hcan, &TxHeader, CHARGER_DATA, &TxMailbox);
 1484              		.loc 1 256 2 is_stmt 1 view .LVU444
 256:Src/main.c    **** 	HAL_CAN_AddTxMessage(&hcan, &TxHeader, CHARGER_DATA, &TxMailbox);
 1485              		.loc 1 256 15 is_stmt 0 view .LVU445
 1486 014a 414E     		ldr	r6, .L69+4
 1487 014c 0423     		movs	r3, #4
 1488 014e B360     		str	r3, [r6, #8]
 257:Src/main.c    **** 
 1489              		.loc 1 257 2 is_stmt 1 view .LVU446
 1490 0150 404B     		ldr	r3, .L69+8
 1491 0152 4246     		mov	r2, r8
 1492 0154 3146     		mov	r1, r6
 1493 0156 4048     		ldr	r0, .L69+12
 1494 0158 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1495              	.LVL93:
 260:Src/main.c    **** 	/*** End Charging ***/
 1496              		.loc 1 260 2 view .LVU447
 260:Src/main.c    **** 	/*** End Charging ***/
 1497              		.loc 1 260 15 is_stmt 0 view .LVU448
 1498 015c 0023     		movs	r3, #0
 1499 015e B360     		str	r3, [r6, #8]
 271:Src/main.c    **** 
 1500              		.loc 1 271 5 is_stmt 1 view .LVU449
 1501 0160 4FF4FA70 		mov	r0, #500
 1502 0164 FFF7FEFF 		bl	HAL_Delay
 1503              	.LVL94:
 1504              	.L67:
 271:Src/main.c    **** 
 1505              		.loc 1 271 5 is_stmt 0 view .LVU450
 1506              	.LBE16:
 143:Src/main.c    ****   uint8_t chargerate;
 1507              		.loc 1 143 3 is_stmt 1 view .LVU451
ARM GAS  /tmp/ccvy7xoI.s 			page 42


 144:Src/main.c    **** 
 1508              		.loc 1 144 3 view .LVU452
 146:Src/main.c    ****   bool faults[5];
 1509              		.loc 1 146 3 view .LVU453
 147:Src/main.c    **** 
 1510              		.loc 1 147 3 view .LVU454
 149:Src/main.c    ****   bool CHARGE_EN;
 1511              		.loc 1 149 3 view .LVU455
 150:Src/main.c    **** 
 1512              		.loc 1 150 3 view .LVU456
 152:Src/main.c    ****   uint8_t testData[2];
 1513              		.loc 1 152 3 view .LVU457
 153:Src/main.c    ****   uint16_t testTemp[4];
 1514              		.loc 1 153 3 view .LVU458
 154:Src/main.c    ****   bool testDC[4];
 1515              		.loc 1 154 3 view .LVU459
 155:Src/main.c    ****   bool testOT[4];
 1516              		.loc 1 155 3 view .LVU460
 156:Src/main.c    ****   bool testConnection[12];
 1517              		.loc 1 156 3 view .LVU461
 157:Src/main.c    ****   /* USER CODE END 2 */
 1518              		.loc 1 157 3 view .LVU462
 162:Src/main.c    ****   {
 1519              		.loc 1 162 3 view .LVU463
 1520              	.LBB17:
 192:Src/main.c    **** 
 1521              		.loc 1 192 5 view .LVU464
 192:Src/main.c    **** 
 1522              		.loc 1 192 15 is_stmt 0 view .LVU465
 1523 0168 384E     		ldr	r6, .L69
 1524 016a 1094     		str	r4, [sp, #64]
 1525 016c D6F800B0 		ldr	fp, [r6]	@ unaligned
 1526 0170 D6F804A0 		ldr	r10, [r6, #4]	@ unaligned
 1527 0174 D6F80890 		ldr	r9, [r6, #8]	@ unaligned
 1528 0178 F368     		ldr	r3, [r6, #12]	@ unaligned
 1529 017a 3B61     		str	r3, [r7, #16]
 1530 017c 06F1100C 		add	ip, r6, #16
 1531 0180 E846     		mov	r8, sp
 1532 0182 5036     		adds	r6, r6, #80
 1533              	.L63:
 1534 0184 C646     		mov	lr, r8
 1535 0186 DCF80000 		ldr	r0, [ip]	@ unaligned
 1536 018a DCF80410 		ldr	r1, [ip, #4]	@ unaligned
 1537 018e DCF80820 		ldr	r2, [ip, #8]	@ unaligned
 1538 0192 DCF80C30 		ldr	r3, [ip, #12]	@ unaligned
 1539 0196 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1540 019a 0CF1100C 		add	ip, ip, #16
 1541 019e F046     		mov	r8, lr
 1542 01a0 B445     		cmp	ip, r6
 1543 01a2 EFD1     		bne	.L63
 1544 01a4 5846     		mov	r0, fp
 1545 01a6 5146     		mov	r1, r10
 1546 01a8 4A46     		mov	r2, r9
 1547 01aa 3B69     		ldr	r3, [r7, #16]
 1548 01ac FFF7FEFF 		bl	readAllCellVoltages
 1549              	.LVL95:
 1550 01b0 8146     		mov	r9, r0
ARM GAS  /tmp/ccvy7xoI.s 			page 43


 1551              	.LVL96:
 194:Src/main.c    ****     voltage[0][5] = voltage[0][7];
 1552              		.loc 1 194 5 is_stmt 1 view .LVU466
 194:Src/main.c    ****     voltage[0][5] = voltage[0][7];
 1553              		.loc 1 194 31 is_stmt 0 view .LVU467
 1554 01b2 A389     		ldrh	r3, [r4, #12]
 194:Src/main.c    ****     voltage[0][5] = voltage[0][7];
 1555              		.loc 1 194 19 view .LVU468
 1556 01b4 2381     		strh	r3, [r4, #8]	@ movhi
 195:Src/main.c    ****     voltage[0][6] = voltage[0][8];
 1557              		.loc 1 195 5 is_stmt 1 view .LVU469
 195:Src/main.c    ****     voltage[0][6] = voltage[0][8];
 1558              		.loc 1 195 31 is_stmt 0 view .LVU470
 1559 01b6 E389     		ldrh	r3, [r4, #14]
 195:Src/main.c    ****     voltage[0][6] = voltage[0][8];
 1560              		.loc 1 195 19 view .LVU471
 1561 01b8 6381     		strh	r3, [r4, #10]	@ movhi
 196:Src/main.c    ****     voltage[0][7] = voltage[0][9];
 1562              		.loc 1 196 5 is_stmt 1 view .LVU472
 196:Src/main.c    ****     voltage[0][7] = voltage[0][9];
 1563              		.loc 1 196 31 is_stmt 0 view .LVU473
 1564 01ba 238A     		ldrh	r3, [r4, #16]
 196:Src/main.c    ****     voltage[0][7] = voltage[0][9];
 1565              		.loc 1 196 19 view .LVU474
 1566 01bc A381     		strh	r3, [r4, #12]	@ movhi
 197:Src/main.c    **** 
 1567              		.loc 1 197 5 is_stmt 1 view .LVU475
 197:Src/main.c    **** 
 1568              		.loc 1 197 31 is_stmt 0 view .LVU476
 1569 01be 638A     		ldrh	r3, [r4, #18]
 197:Src/main.c    **** 
 1570              		.loc 1 197 19 view .LVU477
 1571 01c0 E381     		strh	r3, [r4, #14]	@ movhi
 199:Src/main.c    **** 
 1572              		.loc 1 199 5 is_stmt 1 view .LVU478
 1573 01c2 07F11801 		add	r1, r7, #24
 1574 01c6 2046     		mov	r0, r4
 1575 01c8 FFF7FEFF 		bl	checkCellConnection
 1576              	.LVL97:
 201:Src/main.c    ****     connection[0][5] = connection[0][7];
 1577              		.loc 1 201 5 view .LVU479
 201:Src/main.c    ****     connection[0][5] = connection[0][7];
 1578              		.loc 1 201 37 is_stmt 0 view .LVU480
 1579 01cc AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 201:Src/main.c    ****     connection[0][5] = connection[0][7];
 1580              		.loc 1 201 22 view .LVU481
 1581 01ce 2B71     		strb	r3, [r5, #4]
 202:Src/main.c    ****     connection[0][6] = connection[0][8];
 1582              		.loc 1 202 5 is_stmt 1 view .LVU482
 202:Src/main.c    ****     connection[0][6] = connection[0][8];
 1583              		.loc 1 202 37 is_stmt 0 view .LVU483
 1584 01d0 EB79     		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 202:Src/main.c    ****     connection[0][6] = connection[0][8];
 1585              		.loc 1 202 22 view .LVU484
 1586 01d2 6B71     		strb	r3, [r5, #5]
 203:Src/main.c    ****     connection[0][7] = connection[0][9];
 1587              		.loc 1 203 5 is_stmt 1 view .LVU485
ARM GAS  /tmp/ccvy7xoI.s 			page 44


 203:Src/main.c    ****     connection[0][7] = connection[0][9];
 1588              		.loc 1 203 37 is_stmt 0 view .LVU486
 1589 01d4 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 203:Src/main.c    ****     connection[0][7] = connection[0][9];
 1590              		.loc 1 203 22 view .LVU487
 1591 01d6 AB71     		strb	r3, [r5, #6]
 204:Src/main.c    **** 
 1592              		.loc 1 204 5 is_stmt 1 view .LVU488
 204:Src/main.c    **** 
 1593              		.loc 1 204 37 is_stmt 0 view .LVU489
 1594 01d8 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 204:Src/main.c    **** 
 1595              		.loc 1 204 22 view .LVU490
 1596 01da EB71     		strb	r3, [r5, #7]
 249:Src/main.c    **** 
 1597              		.loc 1 249 5 is_stmt 1 view .LVU491
 1598 01dc 1B4E     		ldr	r6, .L69
 1599 01de CDF85490 		str	r9, [sp, #84]
 1600 01e2 7B68     		ldr	r3, [r7, #4]
 1601 01e4 1493     		str	r3, [sp, #80]
 1602 01e6 7B69     		ldr	r3, [r7, #20]
 1603 01e8 1393     		str	r3, [sp, #76]
 1604 01ea 1295     		str	r5, [sp, #72]
 1605 01ec BB68     		ldr	r3, [r7, #8]
 1606 01ee 1193     		str	r3, [sp, #68]
 1607 01f0 1094     		str	r4, [sp, #64]
 1608 01f2 D6F800B0 		ldr	fp, [r6]	@ unaligned
 1609 01f6 D6F804A0 		ldr	r10, [r6, #4]	@ unaligned
 1610 01fa B368     		ldr	r3, [r6, #8]	@ unaligned
 1611 01fc 3B61     		str	r3, [r7, #16]
 1612 01fe F368     		ldr	r3, [r6, #12]	@ unaligned
 1613 0200 FB60     		str	r3, [r7, #12]
 1614 0202 06F1100C 		add	ip, r6, #16
 1615 0206 E846     		mov	r8, sp
 1616 0208 5036     		adds	r6, r6, #80
 1617              	.L64:
 1618 020a C646     		mov	lr, r8
 1619 020c DCF80000 		ldr	r0, [ip]	@ unaligned
 1620 0210 DCF80410 		ldr	r1, [ip, #4]	@ unaligned
 1621 0214 DCF80820 		ldr	r2, [ip, #8]	@ unaligned
 1622 0218 DCF80C30 		ldr	r3, [ip, #12]	@ unaligned
 1623 021c AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1624 0220 0CF1100C 		add	ip, ip, #16
 1625 0224 F046     		mov	r8, lr
 1626 0226 B445     		cmp	ip, r6
 1627 0228 EFD1     		bne	.L64
 1628 022a 5846     		mov	r0, fp
 1629 022c 5146     		mov	r1, r10
 1630 022e 3A69     		ldr	r2, [r7, #16]
 1631 0230 FB68     		ldr	r3, [r7, #12]
 1632 0232 FFF7FEFF 		bl	CELLVAL_message
 1633              	.LVL98:
 251:Src/main.c    **** 
 1634              		.loc 1 251 5 view .LVU492
 251:Src/main.c    **** 
 1635              		.loc 1 251 8 is_stmt 0 view .LVU493
 1636 0236 B9F1000F 		cmp	r9, #0
ARM GAS  /tmp/ccvy7xoI.s 			page 45


 1637 023a 3FF450AF 		beq	.L65
 251:Src/main.c    **** 
 1638              		.loc 1 251 23 is_stmt 1 discriminator 1 view .LVU494
 1639 023e 4FF40051 		mov	r1, #8192
 1640 0242 0648     		ldr	r0, .L69+16
 1641 0244 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1642              	.LVL99:
 1643 0248 49E7     		b	.L65
 1644              	.L70:
 1645 024a 00BF     		.align	2
 1646              	.L69:
 1647 024c 00000000 		.word	BMSconfig
 1648 0250 00000000 		.word	TxHeader
 1649 0254 00000000 		.word	TxMailbox
 1650 0258 00000000 		.word	hcan
 1651 025c 00100140 		.word	1073811456
 1652 0260 00000000 		.word	CHARGER_DATA
 1653              	.LBE17:
 1654              		.cfi_endproc
 1655              	.LFE66:
 1657              		.section	.text.BMSSTAT_message,"ax",%progbits
 1658              		.align	1
 1659              		.global	BMSSTAT_message
 1660              		.syntax unified
 1661              		.thumb
 1662              		.thumb_func
 1663              		.fpu softvfp
 1665              	BMSSTAT_message:
 1666              	.LVL100:
 1667              	.LFB77:
 639:Src/main.c    **** 
 640:Src/main.c    **** void BMSSTAT_message(BMSconfigStructTypedef cfg, uint8_t cellNumber[5], bool faultType[5]) {
 1668              		.loc 1 640 92 view -0
 1669              		.cfi_startproc
 1670              		@ args = 88, pretend = 16, frame = 0
 1671              		@ frame_needed = 0, uses_anonymous_args = 0
 1672              		.loc 1 640 92 is_stmt 0 view .LVU496
 1673 0000 84B0     		sub	sp, sp, #16
 1674              	.LCFI25:
 1675              		.cfi_def_cfa_offset 16
 1676 0002 10B5     		push	{r4, lr}
 1677              	.LCFI26:
 1678              		.cfi_def_cfa_offset 24
 1679              		.cfi_offset 4, -24
 1680              		.cfi_offset 14, -20
 1681 0004 02AC     		add	r4, sp, #8
 1682 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1683 000a 1698     		ldr	r0, [sp, #88]
 1684 000c 179A     		ldr	r2, [sp, #92]
 641:Src/main.c    **** 
 642:Src/main.c    ****   TxHeader.StdId = BMSSTAT_ID;
 1685              		.loc 1 642 3 is_stmt 1 view .LVU497
 1686              		.loc 1 642 18 is_stmt 0 view .LVU498
 1687 000e 1749     		ldr	r1, .L73
 1688 0010 0823     		movs	r3, #8
 1689 0012 0B60     		str	r3, [r1]
 643:Src/main.c    ****   TxHeader.DLC = 6;
ARM GAS  /tmp/ccvy7xoI.s 			page 46


 1690              		.loc 1 643 3 is_stmt 1 view .LVU499
 1691              		.loc 1 643 16 is_stmt 0 view .LVU500
 1692 0014 0623     		movs	r3, #6
 1693 0016 0B61     		str	r3, [r1, #16]
 644:Src/main.c    **** 
 645:Src/main.c    ****   BMSSTAT_DATA[0] = (uint8_t) ((faultType[0] & 0x10) | (faultType[1] & 0x08) | (faultType[2] & 0x04
 1694              		.loc 1 645 3 is_stmt 1 view .LVU501
 1695              		.loc 1 645 42 is_stmt 0 view .LVU502
 1696 0018 92F90040 		ldrsb	r4, [r2]
 1697              		.loc 1 645 46 view .LVU503
 1698 001c 04F01003 		and	r3, r4, #16
 1699              		.loc 1 645 66 view .LVU504
 1700 0020 92F90140 		ldrsb	r4, [r2, #1]
 1701              		.loc 1 645 70 view .LVU505
 1702 0024 04F00804 		and	r4, r4, #8
 1703              		.loc 1 645 54 view .LVU506
 1704 0028 1C43     		orrs	r4, r4, r3
 1705              		.loc 1 645 90 view .LVU507
 1706 002a 92F90230 		ldrsb	r3, [r2, #2]
 1707              		.loc 1 645 94 view .LVU508
 1708 002e 03F00403 		and	r3, r3, #4
 1709              		.loc 1 645 78 view .LVU509
 1710 0032 1C43     		orrs	r4, r4, r3
 1711              		.loc 1 645 114 view .LVU510
 1712 0034 92F90330 		ldrsb	r3, [r2, #3]
 1713              		.loc 1 645 118 view .LVU511
 1714 0038 03F00203 		and	r3, r3, #2
 1715              		.loc 1 645 102 view .LVU512
 1716 003c 2343     		orrs	r3, r3, r4
 1717              		.loc 1 645 138 view .LVU513
 1718 003e 92F90420 		ldrsb	r2, [r2, #4]
 1719              		.loc 1 645 126 view .LVU514
 1720 0042 1343     		orrs	r3, r3, r2
 1721              		.loc 1 645 19 view .LVU515
 1722 0044 0A4A     		ldr	r2, .L73+4
 1723 0046 1370     		strb	r3, [r2]
 646:Src/main.c    ****   BMSSTAT_DATA[1] = cellNumber[0]; // OV cell number
 1724              		.loc 1 646 3 is_stmt 1 view .LVU516
 1725              		.loc 1 646 31 is_stmt 0 view .LVU517
 1726 0048 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1727              		.loc 1 646 19 view .LVU518
 1728 004a 5370     		strb	r3, [r2, #1]
 647:Src/main.c    ****   BMSSTAT_DATA[2] = cellNumber[1]; // UV cell number
 1729              		.loc 1 647 3 is_stmt 1 view .LVU519
 1730              		.loc 1 647 19 is_stmt 0 view .LVU520
 1731 004c 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1732 004e 9370     		strb	r3, [r2, #2]
 648:Src/main.c    ****   BMSSTAT_DATA[3] = cellNumber[2]; // OT cell number
 1733              		.loc 1 648 3 is_stmt 1 view .LVU521
 1734              		.loc 1 648 19 is_stmt 0 view .LVU522
 1735 0050 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 1736 0052 D370     		strb	r3, [r2, #3]
 649:Src/main.c    ****   BMSSTAT_DATA[4] = cellNumber[3]; // disconnected cell cell number
 1737              		.loc 1 649 3 is_stmt 1 view .LVU523
 1738              		.loc 1 649 19 is_stmt 0 view .LVU524
 1739 0054 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1740 0056 1371     		strb	r3, [r2, #4]
ARM GAS  /tmp/ccvy7xoI.s 			page 47


 650:Src/main.c    ****   BMSSTAT_DATA[5] = cellNumber[4]; // disconnected temp sensor cell number
 1741              		.loc 1 650 3 is_stmt 1 view .LVU525
 1742              		.loc 1 650 19 is_stmt 0 view .LVU526
 1743 0058 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1744 005a 5371     		strb	r3, [r2, #5]
 651:Src/main.c    **** 
 652:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, BMSSTAT_DATA, &TxMailbox);
 1745              		.loc 1 652 3 is_stmt 1 view .LVU527
 1746 005c 054B     		ldr	r3, .L73+8
 1747 005e 0648     		ldr	r0, .L73+12
 1748 0060 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1749              	.LVL101:
 653:Src/main.c    **** }
 1750              		.loc 1 653 1 is_stmt 0 view .LVU528
 1751 0064 BDE81040 		pop	{r4, lr}
 1752              	.LCFI27:
 1753              		.cfi_restore 14
 1754              		.cfi_restore 4
 1755              		.cfi_def_cfa_offset 16
 1756 0068 04B0     		add	sp, sp, #16
 1757              	.LCFI28:
 1758              		.cfi_def_cfa_offset 0
 1759 006a 7047     		bx	lr
 1760              	.L74:
 1761              		.align	2
 1762              	.L73:
 1763 006c 00000000 		.word	TxHeader
 1764 0070 00000000 		.word	BMSSTAT_DATA
 1765 0074 00000000 		.word	TxMailbox
 1766 0078 00000000 		.word	hcan
 1767              		.cfi_endproc
 1768              	.LFE77:
 1770              		.section	.text.Error_Handler,"ax",%progbits
 1771              		.align	1
 1772              		.global	Error_Handler
 1773              		.syntax unified
 1774              		.thumb
 1775              		.thumb_func
 1776              		.fpu softvfp
 1778              	Error_Handler:
 1779              	.LFB78:
 654:Src/main.c    **** 
 655:Src/main.c    **** //void BMSVINF_message()
 656:Src/main.c    **** 
 657:Src/main.c    **** //void BMSTINF_message()
 658:Src/main.c    **** 
 659:Src/main.c    **** /* USER CODE END 4 */
 660:Src/main.c    **** 
 661:Src/main.c    **** /**
 662:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 663:Src/main.c    ****   * @retval None
 664:Src/main.c    ****   */
 665:Src/main.c    **** void Error_Handler(void)
 666:Src/main.c    **** {
 1780              		.loc 1 666 1 is_stmt 1 view -0
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccvy7xoI.s 			page 48


 1783              		@ frame_needed = 0, uses_anonymous_args = 0
 1784              		@ link register save eliminated.
 667:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 668:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 669:Src/main.c    **** 
 670:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 671:Src/main.c    **** }
 1785              		.loc 1 671 1 view .LVU530
 1786 0000 7047     		bx	lr
 1787              		.cfi_endproc
 1788              	.LFE78:
 1790              		.comm	CHARGER_DATA,8,4
 1791              		.comm	BMSTINF_DATA,8,4
 1792              		.comm	BMSVINF_DATA,8,4
 1793              		.comm	BMSSTAT_DATA,6,4
 1794              		.comm	CELLVAL_DATA,6,4
 1795              		.comm	TxMailbox,4,4
 1796              		.comm	RxData,8,4
 1797              		.comm	TxData,8,4
 1798              		.comm	RxHeader,28,4
 1799              		.comm	TxHeader,24,4
 1800              		.comm	BMSconfig,80,4
 1801              		.comm	CommandCode,2,2
 1802              		.comm	htim2,64,4
 1803              		.comm	hspi1,88,4
 1804              		.comm	hcan,40,4
 1805              		.comm	hadc1,48,4
 1806              		.text
 1807              	.Letext0:
 1808              		.file 2 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/
 1809              		.file 3 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/
 1810              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1811              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1812              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1813              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1814              		.file 8 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/
 1815              		.file 9 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/
 1816              		.file 10 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi
 1817              		.file 11 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include
 1818              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1819              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1820              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1821              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1822              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1823              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 1824              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1825              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1826              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1827              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1828              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1829              		.file 23 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include
 1830              		.file 24 "Inc/BMSconfig.h"
 1831              		.file 25 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include
 1832              		.file 26 "Inc/LTC6811.h"
 1833              		.file 27 "Inc/SPI.h"
 1834              		.file 28 "<built-in>"
ARM GAS  /tmp/ccvy7xoI.s 			page 49


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccvy7xoI.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccvy7xoI.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccvy7xoI.s:208    .text.MX_GPIO_Init:00000000000000e0 $d
     /tmp/ccvy7xoI.s:216    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccvy7xoI.s:222    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccvy7xoI.s:299    .text.MX_ADC1_Init:0000000000000040 $d
                            *COM*:0000000000000030 hadc1
     /tmp/ccvy7xoI.s:305    .text.MX_CAN_Init:0000000000000000 $t
     /tmp/ccvy7xoI.s:311    .text.MX_CAN_Init:0000000000000000 MX_CAN_Init
     /tmp/ccvy7xoI.s:403    .text.MX_CAN_Init:0000000000000054 $d
                            *COM*:0000000000000028 hcan
                            *COM*:0000000000000018 TxHeader
     /tmp/ccvy7xoI.s:411    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccvy7xoI.s:417    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccvy7xoI.s:499    .text.MX_TIM2_Init:0000000000000048 $d
                            *COM*:0000000000000040 htim2
     /tmp/ccvy7xoI.s:504    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccvy7xoI.s:511    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccvy7xoI.s:608    .text.VOLTAGE_sort:0000000000000000 $t
     /tmp/ccvy7xoI.s:615    .text.VOLTAGE_sort:0000000000000000 VOLTAGE_sort
     /tmp/ccvy7xoI.s:674    .text.CONNECTION_sort:0000000000000000 $t
     /tmp/ccvy7xoI.s:681    .text.CONNECTION_sort:0000000000000000 CONNECTION_sort
     /tmp/ccvy7xoI.s:740    .text.FAULT_check:0000000000000000 $t
     /tmp/ccvy7xoI.s:747    .text.FAULT_check:0000000000000000 FAULT_check
     /tmp/ccvy7xoI.s:1077   .text.FAULT_check:000000000000014c $d
     /tmp/ccvy7xoI.s:1082   .text.CELLVAL_message:0000000000000000 $t
     /tmp/ccvy7xoI.s:1089   .text.CELLVAL_message:0000000000000000 CELLVAL_message
     /tmp/ccvy7xoI.s:1254   .text.CELLVAL_message:00000000000000a0 $d
                            *COM*:0000000000000006 CELLVAL_DATA
                            *COM*:0000000000000004 TxMailbox
     /tmp/ccvy7xoI.s:1262   .text.main:0000000000000000 $t
     /tmp/ccvy7xoI.s:1269   .text.main:0000000000000000 main
     /tmp/ccvy7xoI.s:1647   .text.main:000000000000024c $d
                            *COM*:0000000000000050 BMSconfig
                            *COM*:0000000000000008 CHARGER_DATA
     /tmp/ccvy7xoI.s:1658   .text.BMSSTAT_message:0000000000000000 $t
     /tmp/ccvy7xoI.s:1665   .text.BMSSTAT_message:0000000000000000 BMSSTAT_message
     /tmp/ccvy7xoI.s:1763   .text.BMSSTAT_message:000000000000006c $d
                            *COM*:0000000000000006 BMSSTAT_DATA
     /tmp/ccvy7xoI.s:1771   .text.Error_Handler:0000000000000000 $t
     /tmp/ccvy7xoI.s:1778   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000008 BMSTINF_DATA
                            *COM*:0000000000000008 BMSVINF_DATA
                            *COM*:0000000000000008 RxData
                            *COM*:0000000000000008 TxData
                            *COM*:000000000000001c RxHeader
                            *COM*:0000000000000002 CommandCode
                            *COM*:0000000000000058 hspi1

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
ARM GAS  /tmp/ccvy7xoI.s 			page 50


HAL_CAN_Start
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_CAN_AddTxMessage
HAL_Delay
HAL_Init
SPI_Init
initPECTable
loadConfig
writeConfigAll
setDischarge
setChargerTxData
readAllCellVoltages
checkCellConnection
HAL_GPIO_TogglePin
