ARM GAS  /tmp/ccuL4tVn.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"LTC6811.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.initPECTable,"ax",%progbits
  16              		.align	1
  17              		.global	initPECTable
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	initPECTable:
  24              	.LFB66:
  25              		.file 1 "Src/LTC6811.c"
   1:Src/LTC6811.c **** /*
   2:Src/LTC6811.c **** 	LTC6811 Command Functions
   3:Src/LTC6811.c **** 	Matt Vlasaty
   4:Src/LTC6811.c **** 	March 29th, 2019
   5:Src/LTC6811.c **** 	
   6:Src/LTC6811.c **** 	General Functions
   7:Src/LTC6811.c **** 		sendBroadcastCommand: void sendBroadcastCommand(CommandCodeTypedef command);
   8:Src/LTC6811.c **** 			- sends specified write-only command to every LTC in the chain (ex: ADCV)
   9:Src/LTC6811.c **** 			- CommandCodeTypedef enum contains every command code used
  10:Src/LTC6811.c **** 		sendAddressCommand: void sendAddressCommand(CommandCodeTypedef command, uint8_t address);
  11:Src/LTC6811.c **** 			- sends specified write-only command to LTC with specified address
  12:Src/LTC6811.c **** 		readRegister: bool readRegister(CommandCodeTypedef command, uint8_t address, uint16_t *data);
  13:Src/LTC6811.c **** 			- reads register specified in command from specified board
  14:Src/LTC6811.c **** 			- ex: ReadCellVoltageRegisterGroup1to3, ReadAuxiliaryGroupA, ReadConfigurationRegisterGroup
  15:Src/LTC6811.c **** 			- returns true if received PEC matches calculated PEC
  16:Src/LTC6811.c **** 		
  17:Src/LTC6811.c **** 	Configuration Functions
  18:Src/LTC6811.c **** 		writeConfigAll: void writeConfigAll(BMSconfigStructTypedef cfg);
  19:Src/LTC6811.c **** 			- writes configuration data from BMSconfig struct into LTC configuration register
  20:Src/LTC6811.c **** 			- BMSconfig struct includes ADCMode, UV, OV, and discharge enable for each cell
  21:Src/LTC6811.c **** 			- BMSconfig struct also contains number of ICs and array of addresses used
  22:Src/LTC6811.c **** 		writeConfigAddress: void writeConfigAddress(BMSconfigStructTypedef cfg, uint8_t address);
  23:Src/LTC6811.c **** 			- this is only used for cellDischarge command
  24:Src/LTC6811.c **** 			- writes configuration data to LTC with specified address
  25:Src/LTC6811.c **** 		readConfig: bool readConfig(uint8_t address, uint8_t cfg[6]);
  26:Src/LTC6811.c **** 			- uses general readRegister function to check current state of LTC configuration register
  27:Src/LTC6811.c **** 			- this is mostly for testing purposes
  28:Src/LTC6811.c **** 			- returns true if received PEC matches calculated PEC (same as readRegister)
  29:Src/LTC6811.c **** 		
  30:Src/LTC6811.c **** 	Cell Voltage Functions
  31:Src/LTC6811.c **** 		readCellVoltage: bool readCellVoltage(uint8_t address, uint16_t cellVoltage[12]);
  32:Src/LTC6811.c **** 			- sends ADCV command that begins conversion for every cell to specified LTC
  33:Src/LTC6811.c **** 			- reads all cell voltage registers using general readRegister function
ARM GAS  /tmp/ccuL4tVn.s 			page 2


  34:Src/LTC6811.c **** 			- used cell inputs (1, 2, 3, 4, 7, 8, 9, 10) must be chosen from cellVoltage[12] later
  35:Src/LTC6811.c **** 			- returns true if received PEC matches calculated PEC for every register read
  36:Src/LTC6811.c **** 		readAllCellVoltages: bool readAllCellVoltages(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6])
  37:Src/LTC6811.c **** 			- stores cell number, cell voltage, and data valid bit into bmsData
  38:Src/LTC6811.c **** 			- returns true if no PEC for any register read for any board
  39:Src/LTC6811.c **** 	Cell Temperature Functions
  40:Src/LTC6811.c **** 		readCellTemp: bool readCellTemp(uint8_t address, uint16_t cellTemp[4], bool dcFault[4], bool temp
  41:Src/LTC6811.c **** 			- initiates ADC conversion for GPIO inputs connected to temperature sensors
  42:Src/LTC6811.c **** 			- reads auxiliary register groups using general readRegister function
  43:Src/LTC6811.c **** 			- converts measured voltage into temperature based on temperature sensor response
  44:Src/LTC6811.c **** 			- checks for disconnected temperature sensor and overtemperature faults for each LTC and stores 
  45:Src/LTC6811.c **** 		readAllCellTemps: bool readAllCellTemps(uint8_t numBoards, uint16_t cellTemp[numBoards][4], bool 
  46:Src/LTC6811.c **** 			- not tested
  47:Src/LTC6811.c **** 			- using order of ICs in BMSconfig, stores cell temperature for every cell on every board into 2D
  48:Src/LTC6811.c **** 			- returns false if any readCellTemp returns false
  49:Src/LTC6811.c **** 	
  50:Src/LTC6811.c **** 	Cell Connection Functions
  51:Src/LTC6811.c **** 		checkCellConnection: void checkCellConnection(uint16_t cellVoltage[12], bool cellConnection[12]);
  52:Src/LTC6811.c **** 			- needs previously obtained cell voltage measurements
  53:Src/LTC6811.c **** 			- initiates ADOW command with PUP = 0 to source 100uA while measuring cell voltage
  54:Src/LTC6811.c **** 			- reads cell voltages with readCellVoltage function
  55:Src/LTC6811.c **** 			- compares previously measured values to open wire check values
  56:Src/LTC6811.c **** 			- if there is a significant drop in voltage (should be configurable), cell is disconnected
  57:Src/LTC6811.c **** 			- stores 1 into cellConnection if cell is connected
  58:Src/LTC6811.c **** 			- stores 0 into cellConnection if cell is disconnected
  59:Src/LTC6811.c **** 		checkAllCellConnections: 
  60:Src/LTC6811.c **** 	
  61:Src/LTC6811.c **** 	PEC Functions
  62:Src/LTC6811.c **** 		initPECTable: void initPECTable(void);
  63:Src/LTC6811.c **** 			- taken from LTC6811 datasheet
  64:Src/LTC6811.c **** 			- generates PEC look-up table
  65:Src/LTC6811.c **** 			- should be called on start-up
  66:Src/LTC6811.c **** 		calculatePEC: uint16_t calculatePEC(uint8_t len, uint8_t *data);
  67:Src/LTC6811.c **** 			- taken from LTC6811 datasheet
  68:Src/LTC6811.c **** 			- used when sending command to calculate necessary PEC bytes to follow command bytes
  69:Src/LTC6811.c **** 			- used when receiving data to compare received PEC with the PEC that should have been received b
  70:Src/LTC6811.c **** 			- returns uint16_t PEC value
  71:Src/LTC6811.c **** 			
  72:Src/LTC6811.c **** 	TODO:
  73:Src/LTC6811.c **** 		- checkCellConnection return value needs to disregard unused cell inputs
  74:Src/LTC6811.c **** 		- resolve issue with writeConfig not changing every bit in the first register group
  75:Src/LTC6811.c **** 		- test functions used to read from every board (readAllCellVoltages should be [12][8])
  76:Src/LTC6811.c **** 		- minor changes (using more user-defined constants, changing return values)
  77:Src/LTC6811.c **** 		
  78:Src/LTC6811.c **** 	NOTES:
  79:Src/LTC6811.c **** 		- writeConfig is called every loop for every LTC because dischargeCells is called every loop for 
  80:Src/LTC6811.c **** 		- always take measurements, only send when not charging? (CAN messages for charging?)
  81:Src/LTC6811.c **** 		- every 'readAll' function starts with address = 0 and increases sequentially
  82:Src/LTC6811.c **** 		
  83:Src/LTC6811.c **** 		- in temp read, faults are determined but not transferred
  84:Src/LTC6811.c **** 		- temperature conversion works, but error is +/- 1 degree
  85:Src/LTC6811.c **** */
  86:Src/LTC6811.c **** 
  87:Src/LTC6811.c **** 
  88:Src/LTC6811.c **** #include "LTC6811.h"
  89:Src/LTC6811.c **** 
  90:Src/LTC6811.c **** uint16_t pec15Table[256];
ARM GAS  /tmp/ccuL4tVn.s 			page 3


  91:Src/LTC6811.c **** uint16_t CRC15_POLY = 0x4599;
  92:Src/LTC6811.c **** 
  93:Src/LTC6811.c **** void initPECTable(void) {
  26              		.loc 1 93 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32              	.LBB2:
  94:Src/LTC6811.c **** 	
  95:Src/LTC6811.c **** 	uint16_t remainder;
  96:Src/LTC6811.c **** 	
  97:Src/LTC6811.c **** 	for (int i = 0; i < 256; i++) {
  33              		.loc 1 97 0
  34 0000 0020     		movs	r0, #0
  35 0002 11E0     		b	.L2
  36              	.LVL1:
  37              	.L4:
  38              	.LBB3:
  98:Src/LTC6811.c **** 		remainder = i << 7;
  99:Src/LTC6811.c **** 		for (int bit = 8; bit > 0; bit--) {
 100:Src/LTC6811.c **** 			if (remainder & 0x4000) {
 101:Src/LTC6811.c **** 				remainder = ((remainder << 1));
 102:Src/LTC6811.c **** 				remainder = (remainder ^ CRC15_POLY);
 103:Src/LTC6811.c **** 			}
 104:Src/LTC6811.c **** 			else {
 105:Src/LTC6811.c **** 				remainder = ((remainder << 1));
  39              		.loc 1 105 0
  40 0004 5B00     		lsls	r3, r3, #1
  41              	.LVL2:
  42 0006 9BB2     		uxth	r3, r3
  43              	.LVL3:
  44              	.L5:
  99:Src/LTC6811.c **** 			if (remainder & 0x4000) {
  45              		.loc 1 99 0 discriminator 2
  46 0008 013A     		subs	r2, r2, #1
  47              	.LVL4:
  48              	.L3:
  99:Src/LTC6811.c **** 			if (remainder & 0x4000) {
  49              		.loc 1 99 0 is_stmt 0 discriminator 1
  50 000a 002A     		cmp	r2, #0
  51 000c 08DD     		ble	.L8
 100:Src/LTC6811.c **** 				remainder = ((remainder << 1));
  52              		.loc 1 100 0 is_stmt 1
  53 000e 13F4804F 		tst	r3, #16384
  54 0012 F7D0     		beq	.L4
 101:Src/LTC6811.c **** 				remainder = (remainder ^ CRC15_POLY);
  55              		.loc 1 101 0
  56 0014 5B00     		lsls	r3, r3, #1
  57              	.LVL5:
  58 0016 9BB2     		uxth	r3, r3
  59              	.LVL6:
 102:Src/LTC6811.c **** 			}
  60              		.loc 1 102 0
  61 0018 0749     		ldr	r1, .L10
  62 001a 0988     		ldrh	r1, [r1]
ARM GAS  /tmp/ccuL4tVn.s 			page 4


  63 001c 4B40     		eors	r3, r3, r1
  64              	.LVL7:
  65 001e F3E7     		b	.L5
  66              	.L8:
  67              	.LBE3:
 106:Src/LTC6811.c **** 			}
 107:Src/LTC6811.c **** 		}
 108:Src/LTC6811.c **** 		pec15Table[i] = remainder & 0xFFFF;
  68              		.loc 1 108 0 discriminator 2
  69 0020 064A     		ldr	r2, .L10+4
  70              	.LVL8:
  71 0022 22F81030 		strh	r3, [r2, r0, lsl #1]	@ movhi
  97:Src/LTC6811.c **** 		remainder = i << 7;
  72              		.loc 1 97 0 discriminator 2
  73 0026 0130     		adds	r0, r0, #1
  74              	.LVL9:
  75              	.L2:
  97:Src/LTC6811.c **** 		remainder = i << 7;
  76              		.loc 1 97 0 is_stmt 0 discriminator 1
  77 0028 FF28     		cmp	r0, #255
  78 002a 04DC     		bgt	.L9
  98:Src/LTC6811.c **** 		for (int bit = 8; bit > 0; bit--) {
  79              		.loc 1 98 0 is_stmt 1
  80 002c 83B2     		uxth	r3, r0
  81 002e DB01     		lsls	r3, r3, #7
  82 0030 9BB2     		uxth	r3, r3
  83              	.LVL10:
  84              	.LBB4:
  99:Src/LTC6811.c **** 			if (remainder & 0x4000) {
  85              		.loc 1 99 0
  86 0032 0822     		movs	r2, #8
  87 0034 E9E7     		b	.L3
  88              	.LVL11:
  89              	.L9:
  90              	.LBE4:
  91              	.LBE2:
 109:Src/LTC6811.c **** 	}
 110:Src/LTC6811.c **** };
  92              		.loc 1 110 0
  93 0036 7047     		bx	lr
  94              	.L11:
  95              		.align	2
  96              	.L10:
  97 0038 00000000 		.word	.LANCHOR0
  98 003c 00000000 		.word	pec15Table
  99              		.cfi_endproc
 100              	.LFE66:
 102              		.section	.text.wakeup_idle,"ax",%progbits
 103              		.align	1
 104              		.global	wakeup_idle
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu softvfp
 110              	wakeup_idle:
 111              	.LFB76:
 111:Src/LTC6811.c **** 
ARM GAS  /tmp/ccuL4tVn.s 			page 5


 112:Src/LTC6811.c **** void writeConfigAddress(BMSconfigStructTypedef cfg, uint8_t address) {
 113:Src/LTC6811.c **** 
 114:Src/LTC6811.c **** 	uint8_t config[6];
 115:Src/LTC6811.c **** 	uint8_t *cmd;
 116:Src/LTC6811.c **** 	uint8_t cmd_len = 12;
 117:Src/LTC6811.c **** 	uint16_t PEC_return;
 118:Src/LTC6811.c **** 	uint8_t dummy[8];
 119:Src/LTC6811.c **** 
 120:Src/LTC6811.c **** 	// readConfig(address, dummy);
 121:Src/LTC6811.c **** 	
 122:Src/LTC6811.c **** 	cmd = (uint8_t *)malloc(cmd_len*sizeof(uint8_t));
 123:Src/LTC6811.c **** 	
 124:Src/LTC6811.c **** 	config[0] = (uint8_t) (cfg.GPIO5PulldownOff << 7) | (cfg.GPIO4PulldownOff << 6) | (cfg.GPIO3Pulldo
 125:Src/LTC6811.c **** 	config[1] = (uint8_t) (cfg.UndervoltageComparisonVoltage & 0xFF);
 126:Src/LTC6811.c **** 	config[2] = (uint8_t) ((cfg.OvervoltageComparisonVoltage << 4) & 0xF0) | ((cfg.UndervoltageCompari
 127:Src/LTC6811.c **** 	config[3] = (uint8_t) ((cfg.OvervoltageComparisonVoltage >> 4) & 0xFF);
 128:Src/LTC6811.c **** 	config[4] = (uint8_t) (cfg.DischargeCell8 << 7) | (cfg.DischargeCell7 << 6) | (cfg.DischargeCell6 
 129:Src/LTC6811.c **** 	config[5] = (uint8_t) ((cfg.DischargeTimeoutValue << 4) & 0xF0) | (cfg.DischargeCell12 << 3) | (cf
 130:Src/LTC6811.c **** 	
 131:Src/LTC6811.c **** 	cmd[0] = (uint8_t) (0x80 | ((address << 3) & 0x78) | ((WriteConfigurationRegisterGroup >> 8) & 0x0
 132:Src/LTC6811.c **** 	cmd[1] = (uint8_t) (WriteConfigurationRegisterGroup & 0xFF);
 133:Src/LTC6811.c **** 	
 134:Src/LTC6811.c **** 	PEC_return = calculatePEC(2, cmd);
 135:Src/LTC6811.c **** 	
 136:Src/LTC6811.c **** 	cmd[2] = (PEC_return >> 8) & 0xFF;
 137:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 138:Src/LTC6811.c **** 
 139:Src/LTC6811.c **** 	cmd[4] = config[0];
 140:Src/LTC6811.c **** 	cmd[5] = config[1];
 141:Src/LTC6811.c **** 	cmd[6] = config[2];
 142:Src/LTC6811.c **** 	cmd[7] = config[3];
 143:Src/LTC6811.c **** 	cmd[8] = config[4];
 144:Src/LTC6811.c **** 	cmd[9] = config[5];
 145:Src/LTC6811.c **** 	
 146:Src/LTC6811.c **** 	PEC_return = calculatePEC(6, cmd + 4);
 147:Src/LTC6811.c **** 
 148:Src/LTC6811.c **** 	cmd[10] = (PEC_return >> 8) & 0xFF;
 149:Src/LTC6811.c **** 	cmd[11] = PEC_return & 0xFF;
 150:Src/LTC6811.c **** 	
 151:Src/LTC6811.c **** 	SPIWrite(cmd, cmd_len);
 152:Src/LTC6811.c **** 
 153:Src/LTC6811.c **** 	readConfig(address, dummy);
 154:Src/LTC6811.c **** 	
 155:Src/LTC6811.c **** 	free(cmd);
 156:Src/LTC6811.c **** 
 157:Src/LTC6811.c **** };
 158:Src/LTC6811.c **** 
 159:Src/LTC6811.c **** void writeConfigAll(BMSconfigStructTypedef cfg) {
 160:Src/LTC6811.c **** 
 161:Src/LTC6811.c **** 	wakeup_idle();
 162:Src/LTC6811.c **** 
 163:Src/LTC6811.c **** 	for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 164:Src/LTC6811.c **** 		writeConfigAddress(cfg, cfg.address[i]);
 165:Src/LTC6811.c **** 	}
 166:Src/LTC6811.c **** };
 167:Src/LTC6811.c **** 
 168:Src/LTC6811.c **** bool readCellVoltage(uint8_t address, uint16_t cellVoltage[12]) {
ARM GAS  /tmp/ccuL4tVn.s 			page 6


 169:Src/LTC6811.c **** 	
 170:Src/LTC6811.c **** 	bool PEC_check = false;
 171:Src/LTC6811.c **** 	bool dataValid = true;
 172:Src/LTC6811.c **** 	uint16_t *voltage;
 173:Src/LTC6811.c **** 	
 174:Src/LTC6811.c **** 	voltage = (uint16_t *)malloc(12*sizeof(uint16_t));
 175:Src/LTC6811.c **** 	
 176:Src/LTC6811.c **** 	// sendAddressCommand(0x711, address); // clear cell voltage groups
 177:Src/LTC6811.c **** 	// sendAddressCommand(StartCellVoltageADCConversionAll, address); // start conversion for every ce
 178:Src/LTC6811.c **** 	// sendAddressCommand(0x261, address); // 1 and 7
 179:Src/LTC6811.c **** 	// sendAddressCommand(0x264, address); // 4 and 10
 180:Src/LTC6811.c **** 
 181:Src/LTC6811.c **** 	// HAL_Delay(50); // conversion time is 12.8ms at 422Hz, so wait 15ms
 182:Src/LTC6811.c **** 	
 183:Src/LTC6811.c **** 	PEC_check = readRegister(ReadCellVoltageRegisterGroup1to3, address, voltage);
 184:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 185:Src/LTC6811.c **** 	PEC_check = readRegister(ReadCellVoltageRegisterGroup4to6, address, voltage);
 186:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 187:Src/LTC6811.c **** 	PEC_check = readRegister(ReadCellVoltageRegisterGroup7to9, address, voltage);
 188:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 189:Src/LTC6811.c **** 	PEC_check = readRegister(ReadCellVoltageRegisterGroup10to12, address, voltage);
 190:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 191:Src/LTC6811.c **** 	//PEC_check = readRegister(ReadCellVoltageRegisterGroup1to3, address, voltage);
 192:Src/LTC6811.c **** 	//dataValid = dataValid & PEC_check;
 193:Src/LTC6811.c **** 	
 194:Src/LTC6811.c **** 	for (uint8_t i = 0; i < 12; i++) {
 195:Src/LTC6811.c **** 		cellVoltage[i] = voltage[i];
 196:Src/LTC6811.c **** 	}
 197:Src/LTC6811.c **** 	
 198:Src/LTC6811.c **** 	free(voltage);
 199:Src/LTC6811.c **** 	
 200:Src/LTC6811.c **** 	return(dataValid);
 201:Src/LTC6811.c **** 	
 202:Src/LTC6811.c **** };
 203:Src/LTC6811.c **** 
 204:Src/LTC6811.c **** bool readAllCellVoltages(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]) {
 205:Src/LTC6811.c **** 
 206:Src/LTC6811.c **** 	/*
 207:Src/LTC6811.c **** 	uint16_t boardVoltage[cfg.numOfCellInputs];
 208:Src/LTC6811.c **** 	bool PEC_check[cfg.numOfICs];
 209:Src/LTC6811.c **** 	bool dataValid = true;
 210:Src/LTC6811.c **** 
 211:Src/LTC6811.c **** 	for (uint8_t board = 0; board < cfg.numOfICs; board++) {
 212:Src/LTC6811.c **** 
 213:Src/LTC6811.c **** 		//read voltage of every cell input (1-12) for a specific address, store in boardVoltage
 214:Src/LTC6811.c **** 		PEC_check[board] = readCellVoltage(cfg.address[board], boardVoltage);
 215:Src/LTC6811.c **** 
 216:Src/LTC6811.c **** 		//store cell number and valid data bit in bmsData
 217:Src/LTC6811.c **** 		for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 218:Src/LTC6811.c **** 			bmsData[(board * cfg.numOfCellsPerIC) + cell][0] = (uint8_t) ((board * cfg.numOfCellsPerIC) + ce
 219:Src/LTC6811.c **** 			bmsData[(board * cfg.numOfCellsPerIC) + cell][1] = (uint8_t) (0x02 & (PEC_check[board] << 1)); /
 220:Src/LTC6811.c **** 		}
 221:Src/LTC6811.c **** 
 222:Src/LTC6811.c **** 		//store cell voltage in bmsData
 223:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 0][2] = (uint8_t) ((boardVoltage[0] >> 8) & 0xFF); //cell
 224:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 0][3] = (uint8_t) (boardVoltage[0] & 0xFF); //cell 1, vol
 225:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 1][2] = (uint8_t) ((boardVoltage[1] >> 8) & 0xFF); //cell
ARM GAS  /tmp/ccuL4tVn.s 			page 7


 226:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 1][3] = (uint8_t) (boardVoltage[1] & 0xFF); //cell 2, vol
 227:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 2][2] = (uint8_t) ((boardVoltage[2] >> 8) & 0xFF); //cell
 228:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 2][3] = (uint8_t) (boardVoltage[2] & 0xFF); //cell 3, vol
 229:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 3][2] = (uint8_t) ((boardVoltage[3] >> 8) & 0xFF); //cell
 230:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 3][3] = (uint8_t) (boardVoltage[3] & 0xFF); //cell 4, vol
 231:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 4][2] = (uint8_t) ((boardVoltage[6] >> 8) & 0xFF); //cell
 232:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 4][3] = (uint8_t) (boardVoltage[6] & 0xFF); //cell 7, vol
 233:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 5][2] = (uint8_t) ((boardVoltage[7] >> 8) & 0xFF); //cell
 234:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 5][3] = (uint8_t) (boardVoltage[7] & 0xFF); //cell 8, vol
 235:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 6][2] = (uint8_t) ((boardVoltage[8] >> 8) & 0xFF); //cell
 236:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 6][3] = (uint8_t) (boardVoltage[8] & 0xFF); //cell 9, vol
 237:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 7][2] = (uint8_t) ((boardVoltage[9] >> 8) & 0xFF); //cell
 238:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 7][3] = (uint8_t) (boardVoltage[9] & 0xFF); //cell 10, vo
 239:Src/LTC6811.c **** 	
 240:Src/LTC6811.c **** 	}
 241:Src/LTC6811.c **** 
 242:Src/LTC6811.c **** 	for (uint8_t board = 0; board < cfg.numOfICs; board++) {
 243:Src/LTC6811.c **** 		if (PEC_check[board] == 0)
 244:Src/LTC6811.c **** 			dataValid = false;
 245:Src/LTC6811.c **** 	}
 246:Src/LTC6811.c **** 
 247:Src/LTC6811.c **** 	return dataValid; //return true if no PEC errors for any board
 248:Src/LTC6811.c **** 	*/
 249:Src/LTC6811.c **** 
 250:Src/LTC6811.c **** 	uint16_t boardVoltage[12];
 251:Src/LTC6811.c **** 	bool PEC_check[12];
 252:Src/LTC6811.c **** 	bool dataValid = true;
 253:Src/LTC6811.c **** 
 254:Src/LTC6811.c **** 	wakeup_idle();
 255:Src/LTC6811.c **** 
 256:Src/LTC6811.c **** 	sendBroadcastCommand(ClearRegisters);
 257:Src/LTC6811.c **** 	sendBroadcastCommand(StartCellVoltageADCConversionAll);
 258:Src/LTC6811.c **** 	HAL_Delay(20);
 259:Src/LTC6811.c **** 
 260:Src/LTC6811.c **** 	wakeup_idle();
 261:Src/LTC6811.c **** 
 262:Src/LTC6811.c **** 	for (uint8_t board = 0; board < 12; board++) {
 263:Src/LTC6811.c **** 
 264:Src/LTC6811.c **** 		//read voltage of every cell input (1-12) for a specific address, store in boardVoltage
 265:Src/LTC6811.c **** 		PEC_check[board] = readCellVoltage(board, boardVoltage);
 266:Src/LTC6811.c **** 		dataValid &= PEC_check[board];
 267:Src/LTC6811.c **** 
 268:Src/LTC6811.c **** 		//store cell number and valid data bit in bmsData
 269:Src/LTC6811.c **** 		for (uint8_t cell = 0; cell < 8; cell++) {
 270:Src/LTC6811.c **** 			bmsData[(board * 8) + cell][0] = (uint8_t) ((board * 8) + cell + 1); //cell number
 271:Src/LTC6811.c **** 			bmsData[(board * 8) + cell][1] = 0; //clear status byte 
 272:Src/LTC6811.c **** 			if (PEC_check[board])
 273:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00000010; //set valid data bit
 274:Src/LTC6811.c **** 		}
 275:Src/LTC6811.c **** 
 276:Src/LTC6811.c **** 		//store cell voltage in bmsData
 277:Src/LTC6811.c **** 		bmsData[(board * 8) + 0][2] = (uint8_t) ((boardVoltage[0] >> 8) & 0xFF); //cell 1, voltage H
 278:Src/LTC6811.c **** 		bmsData[(board * 8) + 0][3] = (uint8_t) (boardVoltage[0] & 0xFF); //cell 1, voltage L
 279:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][2] = (uint8_t) ((boardVoltage[1] >> 8) & 0xFF); //cell 2, voltage H
 280:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][3] = (uint8_t) (boardVoltage[1] & 0xFF); //cell 2, voltage L
 281:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][2] = (uint8_t) ((boardVoltage[2] >> 8) & 0xFF); //cell 3, voltage H
 282:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][3] = (uint8_t) (boardVoltage[2] & 0xFF); //cell 3, voltage L
ARM GAS  /tmp/ccuL4tVn.s 			page 8


 283:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][2] = (uint8_t) ((boardVoltage[3] >> 8) & 0xFF); //cell 4, voltage H
 284:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][3] = (uint8_t) (boardVoltage[3] & 0xFF); //cell 4, voltage L 
 285:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][2] = (uint8_t) ((boardVoltage[6] >> 8) & 0xFF); //cell 7, voltage H
 286:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][3] = (uint8_t) (boardVoltage[6] & 0xFF); //cell 7, voltage L 
 287:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][2] = (uint8_t) ((boardVoltage[7] >> 8) & 0xFF); //cell 8, voltage H
 288:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][3] = (uint8_t) (boardVoltage[7] & 0xFF); //cell 8, voltage L
 289:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][2] = (uint8_t) ((boardVoltage[8] >> 8) & 0xFF); //cell 9, voltage H
 290:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][3] = (uint8_t) (boardVoltage[8] & 0xFF); //cell 9, voltage L
 291:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][2] = (uint8_t) ((boardVoltage[9] >> 8) & 0xFF); //cell 10, voltage H
 292:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][3] = (uint8_t) (boardVoltage[9] & 0xFF); //cell 10, voltage L
 293:Src/LTC6811.c **** 	
 294:Src/LTC6811.c **** 	}
 295:Src/LTC6811.c **** 
 296:Src/LTC6811.c **** 	// for (uint8_t board = 0; board < 12; board++) {
 297:Src/LTC6811.c **** 	// 	if (PEC_check[board] == 0)
 298:Src/LTC6811.c **** 	// 		dataValid = false;
 299:Src/LTC6811.c **** 	// }
 300:Src/LTC6811.c **** 
 301:Src/LTC6811.c **** 	return dataValid; //return true if no PEC errors for any board
 302:Src/LTC6811.c **** }
 303:Src/LTC6811.c **** 
 304:Src/LTC6811.c **** bool readCellTemp(uint8_t address, uint16_t cellTemp[4], bool dcFault[4], bool tempFault[4]) {
 305:Src/LTC6811.c **** 	
 306:Src/LTC6811.c **** 	bool PEC_check = false;
 307:Src/LTC6811.c **** 	bool dataValid = true;
 308:Src/LTC6811.c **** 	uint16_t *temp;
 309:Src/LTC6811.c **** 	double dummy[4];
 310:Src/LTC6811.c **** 	double conversion[4];
 311:Src/LTC6811.c **** 	
 312:Src/LTC6811.c **** 	temp = (uint16_t *)malloc(4*sizeof(uint16_t));
 313:Src/LTC6811.c **** 	
 314:Src/LTC6811.c **** 	//sendAddressCommand(StartCellTempVoltageADCConversionAll, address);
 315:Src/LTC6811.c **** 	
 316:Src/LTC6811.c **** 	//HAL_Delay(50); // conversion time is 12.8ms at 422Hz, so wait 15ms
 317:Src/LTC6811.c **** 
 318:Src/LTC6811.c **** 	// wakeup_idle();
 319:Src/LTC6811.c **** 	// HAL_Delay(1);
 320:Src/LTC6811.c **** 	
 321:Src/LTC6811.c **** 	for (uint8_t i = 0; i < 4; i++) {
 322:Src/LTC6811.c **** 		temp[i] = 0;
 323:Src/LTC6811.c **** 	}
 324:Src/LTC6811.c **** 	
 325:Src/LTC6811.c **** 	PEC_check = readRegister(ReadAuxiliaryGroupA, address, temp);
 326:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 327:Src/LTC6811.c **** 	PEC_check = readRegister(ReadAuxiliaryGroupB, address, temp);
 328:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 329:Src/LTC6811.c **** 	//PEC_check = readRegister(ReadAuxiliaryGroupA, address, temp);
 330:Src/LTC6811.c **** 	//dataValid = dataValid & PEC_check;
 331:Src/LTC6811.c **** 	
 332:Src/LTC6811.c **** 	for (uint8_t i = 0; i < 4; i++) {
 333:Src/LTC6811.c **** 		if ((temp[i] > 24400) || (temp[i] < 13000)) {
 334:Src/LTC6811.c **** 			dcFault[i] = true;
 335:Src/LTC6811.c **** 			// cellTemp[i] = 0x0000;
 336:Src/LTC6811.c **** 		}
 337:Src/LTC6811.c **** 		else
 338:Src/LTC6811.c **** 			dcFault[i] = false;
 339:Src/LTC6811.c **** 		
ARM GAS  /tmp/ccuL4tVn.s 			page 9


 340:Src/LTC6811.c **** 		if ((temp[i] >= 13000) && (temp[i] < 15100)) {
 341:Src/LTC6811.c **** 			tempFault[i] = true;
 342:Src/LTC6811.c **** 			// cellTemp[i] = 0xFFFF;
 343:Src/LTC6811.c **** 		}
 344:Src/LTC6811.c **** 		else
 345:Src/LTC6811.c **** 			tempFault[i] = false;
 346:Src/LTC6811.c **** 		
 347:Src/LTC6811.c **** 		if ((temp[i] >= 15100) && (temp[i] <= 24400)) {
 348:Src/LTC6811.c **** 			// dummy[i] = (double) temp[i] / 10000; // convert from ADC value to voltage
 349:Src/LTC6811.c **** 			// // convert from voltage to temperature
 350:Src/LTC6811.c **** 			// conversion[i] = 37735 - 113923 * dummy[i] + 142663 * pow(dummy[i], 2) - 94465 * pow(dummy[i],
 351:Src/LTC6811.c **** 			// conversion[i] = 500 * (conversion[i] + 20); // map value to larger range
 352:Src/LTC6811.c **** 			// cellTemp[i] = (uint16_t) conversion[i];
 353:Src/LTC6811.c **** 			cellTemp[i] = (uint16_t) temp[i];
 354:Src/LTC6811.c **** 		}
 355:Src/LTC6811.c **** 	}
 356:Src/LTC6811.c **** 	
 357:Src/LTC6811.c **** 	free(temp);
 358:Src/LTC6811.c **** 	
 359:Src/LTC6811.c **** 	return (dataValid);
 360:Src/LTC6811.c **** 	
 361:Src/LTC6811.c **** };
 362:Src/LTC6811.c **** 
 363:Src/LTC6811.c **** bool readAllCellTemps(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]) {
 364:Src/LTC6811.c **** 
 365:Src/LTC6811.c **** 	uint16_t boardTemp[4];
 366:Src/LTC6811.c **** 	bool boardDCFault[4];
 367:Src/LTC6811.c **** 	bool boardTempFault[4];
 368:Src/LTC6811.c **** 	bool PEC_check[12];
 369:Src/LTC6811.c **** 	bool dataValid = true;
 370:Src/LTC6811.c **** 
 371:Src/LTC6811.c **** 	wakeup_idle();
 372:Src/LTC6811.c **** 	HAL_Delay(2);
 373:Src/LTC6811.c **** 
 374:Src/LTC6811.c **** 	sendBroadcastCommand(ClearRegisters);
 375:Src/LTC6811.c **** 	sendBroadcastCommand(StartCellTempVoltageADCConversionAll);
 376:Src/LTC6811.c **** 	HAL_Delay(20);
 377:Src/LTC6811.c **** 
 378:Src/LTC6811.c **** 	wakeup_idle();
 379:Src/LTC6811.c **** 	HAL_Delay(2);
 380:Src/LTC6811.c **** 
 381:Src/LTC6811.c **** 	for (uint8_t board = 0; board < 12; board++) {
 382:Src/LTC6811.c **** 
 383:Src/LTC6811.c **** 		//read temperature, check for OT and temp DC
 384:Src/LTC6811.c **** 		PEC_check[board] = readCellTemp(board, boardTemp, boardDCFault, boardTempFault);
 385:Src/LTC6811.c **** 		dataValid &= PEC_check[board];
 386:Src/LTC6811.c **** 
 387:Src/LTC6811.c **** 		//store OT and temp DC bits in status byte
 388:Src/LTC6811.c **** 		for (uint8_t cell = 0; cell < 8; cell++) {
 389:Src/LTC6811.c **** 			if (PEC_check[board])
 390:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00000010; //set valid data bit
 391:Src/LTC6811.c **** 
 392:Src/LTC6811.c **** 			// if (!PEC_check[board])
 393:Src/LTC6811.c **** 			// 	bmsData[(board * 8) + cell][1] &= 0b11111101; //reset valid data bit
 394:Src/LTC6811.c **** 
 395:Src/LTC6811.c **** 			if (boardTempFault[cell / 2])
 396:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00010000; //set OT bit
ARM GAS  /tmp/ccuL4tVn.s 			page 10


 397:Src/LTC6811.c **** 
 398:Src/LTC6811.c **** 			if (boardDCFault[cell / 2])
 399:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00001000; //set temp DC bit
 400:Src/LTC6811.c **** 		}
 401:Src/LTC6811.c **** 
 402:Src/LTC6811.c **** 		//store cell temperature in bmsData
 403:Src/LTC6811.c **** 		bmsData[(board * 8) + 0][4] = (uint8_t) ((boardTemp[0] >> 8) & 0xFF); //temp1 H
 404:Src/LTC6811.c **** 		bmsData[(board * 8) + 0][5] = (uint8_t) (boardTemp[0] & 0xFF); //temp1 L
 405:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][4] = (uint8_t) ((boardTemp[0] >> 8) & 0xFF); //temp1 H
 406:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][5] = (uint8_t) (boardTemp[0] & 0xFF); //temp1 L
 407:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][4] = (uint8_t) ((boardTemp[1] >> 8) & 0xFF); //temp2 H
 408:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][5] = (uint8_t) (boardTemp[1] & 0xFF); //temp2 L
 409:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][4] = (uint8_t) ((boardTemp[1] >> 8) & 0xFF); //temp2 H
 410:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][5] = (uint8_t) (boardTemp[1] & 0xFF); //temp2 L
 411:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][4] = (uint8_t) ((boardTemp[2] >> 8) & 0xFF); //temp3 H
 412:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][5] = (uint8_t) (boardTemp[2] & 0xFF); //temp3 L
 413:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][4] = (uint8_t) ((boardTemp[2] >> 8) & 0xFF); //temp3 H
 414:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][5] = (uint8_t) (boardTemp[2] & 0xFF); //temp3 L
 415:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][4] = (uint8_t) ((boardTemp[3] >> 8) & 0xFF); //temp4 H
 416:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][5] = (uint8_t) (boardTemp[3] & 0xFF); //temp4 L
 417:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][4] = (uint8_t) ((boardTemp[3] >> 8) & 0xFF); //temp4 H
 418:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][5] = (uint8_t) (boardTemp[3] & 0xFF); //temp4 L
 419:Src/LTC6811.c **** 	}
 420:Src/LTC6811.c **** 	
 421:Src/LTC6811.c **** 	// for (uint8_t board = 0; board < 12; board++) {
 422:Src/LTC6811.c **** 	// 	if (PEC_check[board] == 0)
 423:Src/LTC6811.c **** 	// 		dataValid = false;
 424:Src/LTC6811.c **** 	// }
 425:Src/LTC6811.c **** 
 426:Src/LTC6811.c **** 	return dataValid;
 427:Src/LTC6811.c **** }
 428:Src/LTC6811.c **** 
 429:Src/LTC6811.c **** bool readConfig(uint8_t address, uint8_t cfg[8]) {
 430:Src/LTC6811.c **** 	
 431:Src/LTC6811.c **** 	uint16_t *config;
 432:Src/LTC6811.c **** 	bool dataValid = false;
 433:Src/LTC6811.c **** 	
 434:Src/LTC6811.c **** 	config = (uint16_t *)malloc(4*sizeof(uint16_t));
 435:Src/LTC6811.c **** 
 436:Src/LTC6811.c **** 	wakeup_idle();
 437:Src/LTC6811.c **** 	
 438:Src/LTC6811.c **** 	dataValid = readRegister(ReadConfigurationRegisterGroup, address, config);
 439:Src/LTC6811.c **** 	
 440:Src/LTC6811.c **** 	cfg[0] = (uint8_t) ((config[0] >> 8) & 0xFF);
 441:Src/LTC6811.c **** 	cfg[1] = (uint8_t) (config[0] & 0xFF);
 442:Src/LTC6811.c **** 	cfg[2] = (uint8_t) ((config[1] >> 8) & 0xFF);
 443:Src/LTC6811.c **** 	cfg[3] = (uint8_t) (config[1] & 0xFF);
 444:Src/LTC6811.c **** 	cfg[4] = (uint8_t) ((config[2] >> 8) & 0xFF);
 445:Src/LTC6811.c **** 	cfg[5] = (uint8_t) (config[2] & 0xFF);
 446:Src/LTC6811.c **** 	cfg[6] = (uint8_t) ((config[3] >> 8) & 0xFF);
 447:Src/LTC6811.c **** 	cfg[7] = (uint8_t) (config[3] & 0xFF);
 448:Src/LTC6811.c **** 
 449:Src/LTC6811.c **** 	free(config);
 450:Src/LTC6811.c **** 	
 451:Src/LTC6811.c **** 	return dataValid;
 452:Src/LTC6811.c **** }
 453:Src/LTC6811.c **** 
ARM GAS  /tmp/ccuL4tVn.s 			page 11


 454:Src/LTC6811.c **** /*bool checkCellConnection(uint8_t address, uint16_t cellVoltage[12], bool cellConnection[12]) {
 455:Src/LTC6811.c **** 		
 456:Src/LTC6811.c **** 
 457:Src/LTC6811.c **** 	
 458:Src/LTC6811.c **** 	for (uint8_t i = 0; i < 12; i++) {
 459:Src/LTC6811.c **** 		// if voltage fell by > 100mV
 460:Src/LTC6811.c **** 		if ((cellVoltage[i] - ADOWvoltage[i]) > 1000) {
 461:Src/LTC6811.c **** 			cellConnection[i] = 0; // cell is disconnected
 462:Src/LTC6811.c **** 			disconnect = true;
 463:Src/LTC6811.c **** 		}
 464:Src/LTC6811.c **** 		else {
 465:Src/LTC6811.c **** 			cellConnection[i] = 1;
 466:Src/LTC6811.c **** 		}
 467:Src/LTC6811.c **** 	}
 468:Src/LTC6811.c **** 	return disconnect;
 469:Src/LTC6811.c **** }*/
 470:Src/LTC6811.c **** 
 471:Src/LTC6811.c **** bool checkAllCellConnections(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]) {
 472:Src/LTC6811.c **** 	
 473:Src/LTC6811.c **** 	uint16_t ADOWvoltage[cfg.numOfCellInputs];
 474:Src/LTC6811.c **** 	uint16_t cellVoltage;
 475:Src/LTC6811.c **** 	bool disconnect = false;
 476:Src/LTC6811.c **** 	bool PEC_check[12];
 477:Src/LTC6811.c **** 	bool dataValid = true;
 478:Src/LTC6811.c **** 
 479:Src/LTC6811.c **** 	wakeup_idle();
 480:Src/LTC6811.c **** 
 481:Src/LTC6811.c **** 	//at least 2
 482:Src/LTC6811.c **** 	sendBroadcastCommand(ClearRegisters);
 483:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 484:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 485:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 486:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 487:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 488:Src/LTC6811.c **** 	HAL_Delay(20);
 489:Src/LTC6811.c **** 
 490:Src/LTC6811.c **** 	wakeup_idle();
 491:Src/LTC6811.c **** 
 492:Src/LTC6811.c **** 	for (uint8_t board = 0; board < cfg.numOfICs; board++) {
 493:Src/LTC6811.c **** 
 494:Src/LTC6811.c **** 		PEC_check[board] = readCellVoltage(cfg.address[board], ADOWvoltage);
 495:Src/LTC6811.c **** 		dataValid &= PEC_check[board];
 496:Src/LTC6811.c **** 
 497:Src/LTC6811.c **** 		ADOWvoltage[4] = ADOWvoltage[6];
 498:Src/LTC6811.c **** 		ADOWvoltage[5] = ADOWvoltage[7];
 499:Src/LTC6811.c **** 		ADOWvoltage[6] = ADOWvoltage[8];
 500:Src/LTC6811.c **** 		ADOWvoltage[7] = ADOWvoltage[9];
 501:Src/LTC6811.c **** 
 502:Src/LTC6811.c **** 		for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 503:Src/LTC6811.c **** 
 504:Src/LTC6811.c **** 			cellVoltage = 0;
 505:Src/LTC6811.c **** 			cellVoltage = (uint16_t) (bmsData[(board * cfg.numOfCellsPerIC) + cell][2]);
 506:Src/LTC6811.c **** 			cellVoltage = cellVoltage << 8;
 507:Src/LTC6811.c **** 			cellVoltage += (uint16_t) (bmsData[(board * cfg.numOfCellsPerIC) + cell][3]);
 508:Src/LTC6811.c **** 
 509:Src/LTC6811.c **** 			if ((cellVoltage - ADOWvoltage[cell]) < 1000){
 510:Src/LTC6811.c **** 				bmsData[(board * cfg.numOfCellsPerIC) + cell][1] |= 0b00000001; //negligible drop in voltage, s
ARM GAS  /tmp/ccuL4tVn.s 			page 12


 511:Src/LTC6811.c **** 			}
 512:Src/LTC6811.c **** 
 513:Src/LTC6811.c **** 			// if ((cellVoltage - ADOWvoltage[cell]) > 1000)
 514:Src/LTC6811.c **** 			// 	bmsData[(board * cfg.numOfCellsPerIC) + cell][1] &= 0b11111110; //significant drop in voltag
 515:Src/LTC6811.c **** 			// else
 516:Src/LTC6811.c **** 			// 	bmsData[(board * cfg.numOfCellsPerIC) + cell][1] |= 0b00000001; //negligible drop in voltage
 517:Src/LTC6811.c **** 		}
 518:Src/LTC6811.c **** 	}
 519:Src/LTC6811.c **** 
 520:Src/LTC6811.c **** 	return dataValid;
 521:Src/LTC6811.c **** }
 522:Src/LTC6811.c **** 
 523:Src/LTC6811.c **** bool dischargeCellGroups(BMSconfigStructTypedef config, bool cellDischarge[12][8]) {
 524:Src/LTC6811.c **** 	
 525:Src/LTC6811.c **** 	BMSconfigStructTypedef *cfg;
 526:Src/LTC6811.c **** 
 527:Src/LTC6811.c **** 	cfg = &config;
 528:Src/LTC6811.c **** 
 529:Src/LTC6811.c **** 	wakeup_idle();
 530:Src/LTC6811.c **** 
 531:Src/LTC6811.c **** 	for (uint8_t i = 0; i < config.numOfICs; i++) {
 532:Src/LTC6811.c **** 
 533:Src/LTC6811.c **** 		cfg->DischargeCell1 = cellDischarge[i][0];
 534:Src/LTC6811.c **** 		cfg->DischargeCell2 = cellDischarge[i][1];
 535:Src/LTC6811.c **** 		cfg->DischargeCell3 = cellDischarge[i][2];
 536:Src/LTC6811.c **** 		cfg->DischargeCell4 = cellDischarge[i][3];
 537:Src/LTC6811.c **** 		cfg->DischargeCell7 = cellDischarge[i][4];
 538:Src/LTC6811.c **** 		cfg->DischargeCell8 = cellDischarge[i][5];
 539:Src/LTC6811.c **** 		cfg->DischargeCell9 = cellDischarge[i][6];
 540:Src/LTC6811.c **** 		cfg->DischargeCell10 = cellDischarge[i][7];
 541:Src/LTC6811.c **** 
 542:Src/LTC6811.c **** 		writeConfigAddress(config, config.address[i]);
 543:Src/LTC6811.c **** 
 544:Src/LTC6811.c **** 	}
 545:Src/LTC6811.c **** 
 546:Src/LTC6811.c **** 	cfg->DischargeCell1 = 0;
 547:Src/LTC6811.c **** 	cfg->DischargeCell2 = 0;
 548:Src/LTC6811.c **** 	cfg->DischargeCell3 = 0;
 549:Src/LTC6811.c **** 	cfg->DischargeCell4 = 0;
 550:Src/LTC6811.c **** 	cfg->DischargeCell7 = 0;
 551:Src/LTC6811.c **** 	cfg->DischargeCell8 = 0;
 552:Src/LTC6811.c **** 	cfg->DischargeCell9 = 0;
 553:Src/LTC6811.c **** 	cfg->DischargeCell10 = 0;
 554:Src/LTC6811.c **** 
 555:Src/LTC6811.c **** 	return 0;
 556:Src/LTC6811.c **** 	
 557:Src/LTC6811.c **** }
 558:Src/LTC6811.c **** 
 559:Src/LTC6811.c **** /*bool dischargeCell(BMSconfigStructTypedef config, bool cellDischarge[8]) {
 560:Src/LTC6811.c **** 	
 561:Src/LTC6811.c **** 	BMSconfigStructTypedef *cfg;
 562:Src/LTC6811.c **** 	cfg = &config;
 563:Src/LTC6811.c **** 	
 564:Src/LTC6811.c **** 	cfg->DischargeCell1 = cellDischarge[0];
 565:Src/LTC6811.c **** 	cfg->DischargeCell2 = cellDischarge[1];
 566:Src/LTC6811.c **** 	cfg->DischargeCell3 = cellDischarge[2];
 567:Src/LTC6811.c **** 	cfg->DischargeCell4 = cellDischarge[3];
ARM GAS  /tmp/ccuL4tVn.s 			page 13


 568:Src/LTC6811.c **** 	cfg->DischargeCell7 = cellDischarge[4];
 569:Src/LTC6811.c **** 	cfg->DischargeCell8 = cellDischarge[5];
 570:Src/LTC6811.c **** 	cfg->DischargeCell9 = cellDischarge[6];
 571:Src/LTC6811.c **** 	cfg->DischargeCell10 = cellDischarge[7];
 572:Src/LTC6811.c **** 	
 573:Src/LTC6811.c **** 	writeConfig(config, 0, 1);
 574:Src/LTC6811.c **** 	
 575:Src/LTC6811.c **** 	return 0;
 576:Src/LTC6811.c **** 	
 577:Src/LTC6811.c **** }*/
 578:Src/LTC6811.c **** 
 579:Src/LTC6811.c **** void wakeup_idle() {
 112              		.loc 1 579 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 08B5     		push	{r3, lr}
 117              	.LCFI0:
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 3, -8
 120              		.cfi_offset 14, -4
 121              	.LVL12:
 580:Src/LTC6811.c **** 	uint32_t delay = 15;
 581:Src/LTC6811.c **** 	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
 122              		.loc 1 581 0
 123 0002 0022     		movs	r2, #0
 124 0004 1021     		movs	r1, #16
 125 0006 0748     		ldr	r0, .L16
 126 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL13:
 580:Src/LTC6811.c **** 	uint32_t delay = 15;
 128              		.loc 1 580 0
 129 000c 0F23     		movs	r3, #15
 582:Src/LTC6811.c **** 	while(delay--);
 130              		.loc 1 582 0
 131 000e 00E0     		b	.L13
 132              	.LVL14:
 133              	.L14:
 134 0010 1346     		mov	r3, r2
 135              	.LVL15:
 136              	.L13:
 137              		.loc 1 582 0 is_stmt 0 discriminator 1
 138 0012 5A1E     		subs	r2, r3, #1
 139              	.LVL16:
 140 0014 002B     		cmp	r3, #0
 141 0016 FBD1     		bne	.L14
 583:Src/LTC6811.c **** 	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 142              		.loc 1 583 0 is_stmt 1
 143 0018 0122     		movs	r2, #1
 144              	.LVL17:
 145 001a 1021     		movs	r1, #16
 146 001c 0148     		ldr	r0, .L16
 147 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 148              	.LVL18:
 584:Src/LTC6811.c **** }
 149              		.loc 1 584 0
 150 0022 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccuL4tVn.s 			page 14


 151              	.L17:
 152              		.align	2
 153              	.L16:
 154 0024 00080140 		.word	1073809408
 155              		.cfi_endproc
 156              	.LFE76:
 158              		.section	.text.calculatePEC,"ax",%progbits
 159              		.align	1
 160              		.global	calculatePEC
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu softvfp
 166              	calculatePEC:
 167              	.LFB80:
 585:Src/LTC6811.c **** 
 586:Src/LTC6811.c **** bool readRegister(CommandCodeTypedef command, uint8_t address, uint16_t *data) {
 587:Src/LTC6811.c **** 	
 588:Src/LTC6811.c **** 	uint8_t cmd[12];
 589:Src/LTC6811.c **** 	uint8_t rx_data[12];
 590:Src/LTC6811.c **** 	uint16_t PEC_return;
 591:Src/LTC6811.c **** 	uint8_t *PEC_send;
 592:Src/LTC6811.c **** 	bool dataValid = true;
 593:Src/LTC6811.c **** 
 594:Src/LTC6811.c **** 	PEC_send = (uint8_t *)malloc(6*sizeof(uint8_t));
 595:Src/LTC6811.c **** 	
 596:Src/LTC6811.c **** 	PEC_send[0] = (uint8_t) (0x80 | ((address << 3) & 0x78) | ((command >> 8) & 0x07));
 597:Src/LTC6811.c **** 	PEC_send[1] = (uint8_t) (command & 0xFF);
 598:Src/LTC6811.c **** 
 599:Src/LTC6811.c **** 	cmd[0] = PEC_send[0];
 600:Src/LTC6811.c **** 	cmd[1] = PEC_send[1];
 601:Src/LTC6811.c **** 	
 602:Src/LTC6811.c **** 	PEC_return = calculatePEC(2, PEC_send);
 603:Src/LTC6811.c **** 	
 604:Src/LTC6811.c **** 	cmd[2] = (PEC_return >> 8) & 0xFF;
 605:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 606:Src/LTC6811.c **** 	
 607:Src/LTC6811.c **** 	cmd[4] = 0;
 608:Src/LTC6811.c **** 	cmd[5] = 0;
 609:Src/LTC6811.c **** 	cmd[6] = 0;
 610:Src/LTC6811.c **** 	cmd[7] = 0;
 611:Src/LTC6811.c **** 	cmd[8] = 0;
 612:Src/LTC6811.c **** 	cmd[9] = 0;
 613:Src/LTC6811.c **** 	cmd[10] = 0;
 614:Src/LTC6811.c **** 	cmd[11] = 0;
 615:Src/LTC6811.c **** 	
 616:Src/LTC6811.c **** 	SPIWriteRead(cmd, rx_data, sizeof(cmd)); // send 4 command bytes, receive 6 cell voltage bytes (4-
 617:Src/LTC6811.c **** 	
 618:Src/LTC6811.c **** 	// calculate PEC based on cell voltage data received
 619:Src/LTC6811.c **** 	PEC_send[0] = rx_data[4]; // cell 1 voltage low bytes
 620:Src/LTC6811.c **** 	PEC_send[1] = rx_data[5]; // cell 1 voltage high bytes
 621:Src/LTC6811.c **** 	PEC_send[2] = rx_data[6]; // cell 2 voltage low bytes
 622:Src/LTC6811.c **** 	PEC_send[3] = rx_data[7]; // cell 2 voltage high bytes
 623:Src/LTC6811.c **** 	PEC_send[4] = rx_data[8]; // cell 3 voltage low bytes
 624:Src/LTC6811.c **** 	PEC_send[5] = rx_data[9]; // cell 3 voltage high bytes
 625:Src/LTC6811.c **** 	
 626:Src/LTC6811.c **** 	PEC_return = calculatePEC(6, PEC_send);
ARM GAS  /tmp/ccuL4tVn.s 			page 15


 627:Src/LTC6811.c **** 	
 628:Src/LTC6811.c **** 	// check if received PEC matches calculated PEC
 629:Src/LTC6811.c **** 	if (PEC_return != (((rx_data[10] << 8) & 0xFF00) | (rx_data[11] & 0x00FF))) {
 630:Src/LTC6811.c **** 		dataValid = false;
 631:Src/LTC6811.c **** 	}
 632:Src/LTC6811.c **** 	
 633:Src/LTC6811.c **** 	if (command == ReadCellVoltageRegisterGroup1to3) {
 634:Src/LTC6811.c **** 		
 635:Src/LTC6811.c **** 		data[0] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 636:Src/LTC6811.c **** 		data[1] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 637:Src/LTC6811.c **** 		data[2] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 638:Src/LTC6811.c **** 		//data[3] = (uint16_t) ((rx_data[10] << 8) & 0xFF00) | (rx_data[11] & 0x00FF);
 639:Src/LTC6811.c **** 		//data[4] = PEC_return;
 640:Src/LTC6811.c **** 	}
 641:Src/LTC6811.c **** 
 642:Src/LTC6811.c **** 	if (command == ReadCellVoltageRegisterGroup4to6) {
 643:Src/LTC6811.c **** 		
 644:Src/LTC6811.c **** 		data[3] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 645:Src/LTC6811.c **** 		data[4] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 646:Src/LTC6811.c **** 		data[5] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 647:Src/LTC6811.c **** 	}
 648:Src/LTC6811.c **** 	
 649:Src/LTC6811.c **** 	if (command == ReadCellVoltageRegisterGroup7to9) {
 650:Src/LTC6811.c **** 		
 651:Src/LTC6811.c **** 		data[6] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 652:Src/LTC6811.c **** 		data[7] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 653:Src/LTC6811.c **** 		data[8] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 654:Src/LTC6811.c **** 	}
 655:Src/LTC6811.c **** 	
 656:Src/LTC6811.c **** 	if (command == ReadCellVoltageRegisterGroup10to12) {
 657:Src/LTC6811.c **** 		
 658:Src/LTC6811.c **** 		data[9] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 659:Src/LTC6811.c **** 		data[10] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 660:Src/LTC6811.c **** 		data[11] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 661:Src/LTC6811.c **** 	}
 662:Src/LTC6811.c **** 	
 663:Src/LTC6811.c **** 	if (command == ReadAuxiliaryGroupA) {
 664:Src/LTC6811.c **** 		
 665:Src/LTC6811.c **** 		data[0] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 666:Src/LTC6811.c **** 		data[1] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 667:Src/LTC6811.c **** 		data[2] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 668:Src/LTC6811.c **** 	}
 669:Src/LTC6811.c **** 	
 670:Src/LTC6811.c **** 	if (command == ReadAuxiliaryGroupB) {
 671:Src/LTC6811.c **** 		data[3] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 672:Src/LTC6811.c **** 	}
 673:Src/LTC6811.c **** 	
 674:Src/LTC6811.c **** 	if (command == ReadConfigurationRegisterGroup) {
 675:Src/LTC6811.c **** 		data[0] = (uint16_t) ((rx_data[4] << 8) & 0xFF00) | (rx_data[5] & 0x00FF);
 676:Src/LTC6811.c **** 		data[1] = (uint16_t) ((rx_data[6] << 8) & 0xFF00) | (rx_data[7] & 0x00FF);
 677:Src/LTC6811.c **** 		data[2] = (uint16_t) ((rx_data[8] << 8) & 0xFF00) | (rx_data[9] & 0x00FF);
 678:Src/LTC6811.c **** 		data[3] = (uint16_t) ((rx_data[10] << 8) & 0xFF00) | (rx_data[11] & 0x00FF);
 679:Src/LTC6811.c **** 	}
 680:Src/LTC6811.c **** 
 681:Src/LTC6811.c **** 	free(PEC_send);
 682:Src/LTC6811.c **** 	
 683:Src/LTC6811.c **** 	return(dataValid);
ARM GAS  /tmp/ccuL4tVn.s 			page 16


 684:Src/LTC6811.c **** 	
 685:Src/LTC6811.c **** };
 686:Src/LTC6811.c **** 
 687:Src/LTC6811.c **** void sendBroadcastCommand(CommandCodeTypedef command) {
 688:Src/LTC6811.c **** 	
 689:Src/LTC6811.c **** 	uint8_t cmd[4];
 690:Src/LTC6811.c **** 	uint16_t PEC_return;
 691:Src/LTC6811.c **** 	
 692:Src/LTC6811.c **** 	cmd[0] = (uint8_t) ((command >> 8) & 0x0F);
 693:Src/LTC6811.c **** 	cmd[1] = (uint8_t) (command & 0xFF);
 694:Src/LTC6811.c **** 	
 695:Src/LTC6811.c **** 	PEC_return = calculatePEC(2, (uint8_t *)&(cmd));
 696:Src/LTC6811.c **** 	
 697:Src/LTC6811.c **** 	cmd[2] = (PEC_return >> 8) & 0xFF;
 698:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 699:Src/LTC6811.c **** 	
 700:Src/LTC6811.c **** 	SPIWrite(cmd, 4);
 701:Src/LTC6811.c **** };
 702:Src/LTC6811.c **** 
 703:Src/LTC6811.c **** void sendAddressCommand(CommandCodeTypedef command, uint8_t address) {
 704:Src/LTC6811.c **** 	
 705:Src/LTC6811.c **** 	uint8_t cmd[4];
 706:Src/LTC6811.c **** 	uint16_t PEC_return;
 707:Src/LTC6811.c **** 	uint8_t *msbytes;
 708:Src/LTC6811.c **** 	
 709:Src/LTC6811.c **** 	msbytes = (uint8_t *)malloc(2*sizeof(uint8_t));
 710:Src/LTC6811.c **** 	
 711:Src/LTC6811.c **** 	msbytes[0] = (uint8_t) (0x80 | ((address << 3) & 0x78) | ((command >> 8) & 0x07));
 712:Src/LTC6811.c **** 	msbytes[1] = (uint8_t) (command & 0xFF);
 713:Src/LTC6811.c **** 
 714:Src/LTC6811.c **** 	cmd[0] = msbytes[0];
 715:Src/LTC6811.c **** 	cmd[1] = msbytes[1];
 716:Src/LTC6811.c **** 	
 717:Src/LTC6811.c **** 	PEC_return = calculatePEC(2, msbytes);
 718:Src/LTC6811.c **** 	
 719:Src/LTC6811.c **** 	cmd[2] = (PEC_return >> 8) & 0xFF;
 720:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 721:Src/LTC6811.c **** 	
 722:Src/LTC6811.c **** 	SPIWrite(cmd, 4);
 723:Src/LTC6811.c **** 	
 724:Src/LTC6811.c **** 	free(msbytes);
 725:Src/LTC6811.c **** };
 726:Src/LTC6811.c **** 
 727:Src/LTC6811.c **** uint16_t calculatePEC(uint8_t len, uint8_t *data) {
 168              		.loc 1 727 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173              	.LVL19:
 174 0000 30B4     		push	{r4, r5}
 175              	.LCFI1:
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 4, -8
 178              		.cfi_offset 5, -4
 179              	.LVL20:
 180              	.LBB5:
ARM GAS  /tmp/ccuL4tVn.s 			page 17


 728:Src/LTC6811.c **** 	
 729:Src/LTC6811.c **** 	uint16_t remainder, address;
 730:Src/LTC6811.c **** 	remainder = 16; //PEC seed
 731:Src/LTC6811.c **** 	
 732:Src/LTC6811.c **** 	for (int i = 0; i < len; i++) {
 181              		.loc 1 732 0
 182 0002 0024     		movs	r4, #0
 183              	.LBE5:
 730:Src/LTC6811.c **** 	
 184              		.loc 1 730 0
 185 0004 1023     		movs	r3, #16
 186              	.LBB6:
 187              		.loc 1 732 0
 188 0006 0AE0     		b	.L19
 189              	.LVL21:
 190              	.L20:
 733:Src/LTC6811.c **** 		address = ((remainder >> 7) ^ data[i]) & 0xFF; //calculate PEC table address
 191              		.loc 1 733 0 discriminator 3
 192 0008 0A5D     		ldrb	r2, [r1, r4]	@ zero_extendqisi2
 193 000a 82EAD312 		eor	r2, r2, r3, lsr #7
 194 000e D2B2     		uxtb	r2, r2
 195              	.LVL22:
 734:Src/LTC6811.c **** 		remainder = (remainder << 8) ^ pec15Table[address];
 196              		.loc 1 734 0 discriminator 3
 197 0010 064D     		ldr	r5, .L22
 198 0012 35F91220 		ldrsh	r2, [r5, r2, lsl #1]
 199              	.LVL23:
 200 0016 82EA0323 		eor	r3, r2, r3, lsl #8
 201              	.LVL24:
 202 001a 9BB2     		uxth	r3, r3
 203              	.LVL25:
 732:Src/LTC6811.c **** 		address = ((remainder >> 7) ^ data[i]) & 0xFF; //calculate PEC table address
 204              		.loc 1 732 0 discriminator 3
 205 001c 0134     		adds	r4, r4, #1
 206              	.LVL26:
 207              	.L19:
 732:Src/LTC6811.c **** 		address = ((remainder >> 7) ^ data[i]) & 0xFF; //calculate PEC table address
 208              		.loc 1 732 0 is_stmt 0 discriminator 1
 209 001e A042     		cmp	r0, r4
 210 0020 F2DC     		bgt	.L20
 211              	.LBE6:
 735:Src/LTC6811.c **** 	}
 736:Src/LTC6811.c **** 	
 737:Src/LTC6811.c **** 	return (remainder * 2); //The CRC15 has a 0 in the LSB so the final value must be multiplied by 2
 212              		.loc 1 737 0 is_stmt 1
 213 0022 5800     		lsls	r0, r3, #1
 214              	.LVL27:
 215 0024 80B2     		uxth	r0, r0
 738:Src/LTC6811.c **** };
 216              		.loc 1 738 0
 217 0026 30BC     		pop	{r4, r5}
 218              	.LCFI2:
 219              		.cfi_restore 5
 220              		.cfi_restore 4
 221              		.cfi_def_cfa_offset 0
 222              	.LVL28:
 223 0028 7047     		bx	lr
ARM GAS  /tmp/ccuL4tVn.s 			page 18


 224              	.L23:
 225 002a 00BF     		.align	2
 226              	.L22:
 227 002c 00000000 		.word	pec15Table
 228              		.cfi_endproc
 229              	.LFE80:
 231              		.section	.text.readRegister,"ax",%progbits
 232              		.align	1
 233              		.global	readRegister
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu softvfp
 239              	readRegister:
 240              	.LFB77:
 586:Src/LTC6811.c **** 	
 241              		.loc 1 586 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 24
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              	.LVL29:
 246 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 247              	.LCFI3:
 248              		.cfi_def_cfa_offset 20
 249              		.cfi_offset 4, -20
 250              		.cfi_offset 5, -16
 251              		.cfi_offset 6, -12
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 87B0     		sub	sp, sp, #28
 255              	.LCFI4:
 256              		.cfi_def_cfa_offset 48
 257 0004 0646     		mov	r6, r0
 258 0006 0C46     		mov	r4, r1
 259 0008 1746     		mov	r7, r2
 260              	.LVL30:
 594:Src/LTC6811.c **** 	
 261              		.loc 1 594 0
 262 000a 0620     		movs	r0, #6
 263              	.LVL31:
 264 000c FFF7FEFF 		bl	malloc
 265              	.LVL32:
 266 0010 0546     		mov	r5, r0
 267              	.LVL33:
 596:Src/LTC6811.c **** 	PEC_send[1] = (uint8_t) (command & 0xFF);
 268              		.loc 1 596 0
 269 0012 E300     		lsls	r3, r4, #3
 270 0014 03F07803 		and	r3, r3, #120
 271 0018 63F07F03 		orn	r3, r3, #127
 272 001c C6F30224 		ubfx	r4, r6, #8, #3
 273 0020 2343     		orrs	r3, r3, r4
 274 0022 DBB2     		uxtb	r3, r3
 275 0024 0370     		strb	r3, [r0]
 597:Src/LTC6811.c **** 
 276              		.loc 1 597 0
 277 0026 F2B2     		uxtb	r2, r6
 278 0028 4270     		strb	r2, [r0, #1]
ARM GAS  /tmp/ccuL4tVn.s 			page 19


 599:Src/LTC6811.c **** 	cmd[1] = PEC_send[1];
 279              		.loc 1 599 0
 280 002a 8DF80C30 		strb	r3, [sp, #12]
 600:Src/LTC6811.c **** 	
 281              		.loc 1 600 0
 282 002e 8DF80D20 		strb	r2, [sp, #13]
 602:Src/LTC6811.c **** 	
 283              		.loc 1 602 0
 284 0032 0146     		mov	r1, r0
 285 0034 0220     		movs	r0, #2
 286              	.LVL34:
 287 0036 FFF7FEFF 		bl	calculatePEC
 288              	.LVL35:
 604:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 289              		.loc 1 604 0
 290 003a 030A     		lsrs	r3, r0, #8
 291 003c 8DF80E30 		strb	r3, [sp, #14]
 605:Src/LTC6811.c **** 	
 292              		.loc 1 605 0
 293 0040 8DF80F00 		strb	r0, [sp, #15]
 607:Src/LTC6811.c **** 	cmd[5] = 0;
 294              		.loc 1 607 0
 295 0044 0023     		movs	r3, #0
 296 0046 8DF81030 		strb	r3, [sp, #16]
 608:Src/LTC6811.c **** 	cmd[6] = 0;
 297              		.loc 1 608 0
 298 004a 8DF81130 		strb	r3, [sp, #17]
 609:Src/LTC6811.c **** 	cmd[7] = 0;
 299              		.loc 1 609 0
 300 004e 8DF81230 		strb	r3, [sp, #18]
 610:Src/LTC6811.c **** 	cmd[8] = 0;
 301              		.loc 1 610 0
 302 0052 8DF81330 		strb	r3, [sp, #19]
 611:Src/LTC6811.c **** 	cmd[9] = 0;
 303              		.loc 1 611 0
 304 0056 8DF81430 		strb	r3, [sp, #20]
 612:Src/LTC6811.c **** 	cmd[10] = 0;
 305              		.loc 1 612 0
 306 005a 8DF81530 		strb	r3, [sp, #21]
 613:Src/LTC6811.c **** 	cmd[11] = 0;
 307              		.loc 1 613 0
 308 005e 8DF81630 		strb	r3, [sp, #22]
 614:Src/LTC6811.c **** 	
 309              		.loc 1 614 0
 310 0062 8DF81730 		strb	r3, [sp, #23]
 616:Src/LTC6811.c **** 	
 311              		.loc 1 616 0
 312 0066 0C22     		movs	r2, #12
 313 0068 6946     		mov	r1, sp
 314 006a 0DEB0200 		add	r0, sp, r2
 315              	.LVL36:
 316 006e FFF7FEFF 		bl	SPIWriteRead
 317              	.LVL37:
 619:Src/LTC6811.c **** 	PEC_send[1] = rx_data[5]; // cell 1 voltage high bytes
 318              		.loc 1 619 0
 319 0072 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 320 0076 2B70     		strb	r3, [r5]
ARM GAS  /tmp/ccuL4tVn.s 			page 20


 620:Src/LTC6811.c **** 	PEC_send[2] = rx_data[6]; // cell 2 voltage low bytes
 321              		.loc 1 620 0
 322 0078 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 323 007c 6B70     		strb	r3, [r5, #1]
 621:Src/LTC6811.c **** 	PEC_send[3] = rx_data[7]; // cell 2 voltage high bytes
 324              		.loc 1 621 0
 325 007e 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 326 0082 AB70     		strb	r3, [r5, #2]
 622:Src/LTC6811.c **** 	PEC_send[4] = rx_data[8]; // cell 3 voltage low bytes
 327              		.loc 1 622 0
 328 0084 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 329 0088 EB70     		strb	r3, [r5, #3]
 623:Src/LTC6811.c **** 	PEC_send[5] = rx_data[9]; // cell 3 voltage high bytes
 330              		.loc 1 623 0
 331 008a 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 332 008e 2B71     		strb	r3, [r5, #4]
 624:Src/LTC6811.c **** 	
 333              		.loc 1 624 0
 334 0090 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 335 0094 6B71     		strb	r3, [r5, #5]
 626:Src/LTC6811.c **** 	
 336              		.loc 1 626 0
 337 0096 2946     		mov	r1, r5
 338 0098 0620     		movs	r0, #6
 339 009a FFF7FEFF 		bl	calculatePEC
 340              	.LVL38:
 629:Src/LTC6811.c **** 		dataValid = false;
 341              		.loc 1 629 0
 342 009e 9DF80A20 		ldrb	r2, [sp, #10]	@ zero_extendqisi2
 343 00a2 9DF80B30 		ldrb	r3, [sp, #11]	@ zero_extendqisi2
 344 00a6 43EA0223 		orr	r3, r3, r2, lsl #8
 345 00aa 9842     		cmp	r0, r3
 346 00ac 16D0     		beq	.L35
 630:Src/LTC6811.c **** 	}
 347              		.loc 1 630 0
 348 00ae 0024     		movs	r4, #0
 349              	.L25:
 350              	.LVL39:
 633:Src/LTC6811.c **** 		
 351              		.loc 1 633 0
 352 00b0 042E     		cmp	r6, #4
 353 00b2 15D0     		beq	.L36
 354              	.L26:
 642:Src/LTC6811.c **** 		
 355              		.loc 1 642 0
 356 00b4 062E     		cmp	r6, #6
 357 00b6 2CD0     		beq	.L37
 358              	.L27:
 649:Src/LTC6811.c **** 		
 359              		.loc 1 649 0
 360 00b8 082E     		cmp	r6, #8
 361 00ba 43D0     		beq	.L38
 362              	.L28:
 656:Src/LTC6811.c **** 		
 363              		.loc 1 656 0
 364 00bc 0A2E     		cmp	r6, #10
 365 00be 5AD0     		beq	.L39
ARM GAS  /tmp/ccuL4tVn.s 			page 21


 366              	.L29:
 663:Src/LTC6811.c **** 		
 367              		.loc 1 663 0
 368 00c0 0C2E     		cmp	r6, #12
 369 00c2 71D0     		beq	.L40
 370              	.L30:
 670:Src/LTC6811.c **** 		data[3] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 371              		.loc 1 670 0
 372 00c4 0E2E     		cmp	r6, #14
 373 00c6 00F08880 		beq	.L41
 374              	.L31:
 674:Src/LTC6811.c **** 		data[0] = (uint16_t) ((rx_data[4] << 8) & 0xFF00) | (rx_data[5] & 0x00FF);
 375              		.loc 1 674 0
 376 00ca 022E     		cmp	r6, #2
 377 00cc 00F08E80 		beq	.L42
 378              	.L32:
 681:Src/LTC6811.c **** 	
 379              		.loc 1 681 0
 380 00d0 2846     		mov	r0, r5
 381              	.LVL40:
 382 00d2 FFF7FEFF 		bl	free
 383              	.LVL41:
 685:Src/LTC6811.c **** 
 384              		.loc 1 685 0
 385 00d6 2046     		mov	r0, r4
 386 00d8 07B0     		add	sp, sp, #28
 387              	.LCFI5:
 388              		.cfi_remember_state
 389              		.cfi_def_cfa_offset 20
 390              		@ sp needed
 391 00da F0BD     		pop	{r4, r5, r6, r7, pc}
 392              	.LVL42:
 393              	.L35:
 394              	.LCFI6:
 395              		.cfi_restore_state
 592:Src/LTC6811.c **** 
 396              		.loc 1 592 0
 397 00dc 0124     		movs	r4, #1
 398 00de E7E7     		b	.L25
 399              	.LVL43:
 400              	.L36:
 635:Src/LTC6811.c **** 		data[1] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 401              		.loc 1 635 0
 402 00e0 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 403 00e4 1B02     		lsls	r3, r3, #8
 404 00e6 1BB2     		sxth	r3, r3
 405 00e8 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 406 00ec 1343     		orrs	r3, r3, r2
 407 00ee 3B80     		strh	r3, [r7]	@ movhi
 636:Src/LTC6811.c **** 		data[2] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 408              		.loc 1 636 0
 409 00f0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 410 00f4 1B02     		lsls	r3, r3, #8
 411 00f6 1BB2     		sxth	r3, r3
 412 00f8 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 413 00fc 1343     		orrs	r3, r3, r2
 414 00fe 7B80     		strh	r3, [r7, #2]	@ movhi
ARM GAS  /tmp/ccuL4tVn.s 			page 22


 637:Src/LTC6811.c **** 		//data[3] = (uint16_t) ((rx_data[10] << 8) & 0xFF00) | (rx_data[11] & 0x00FF);
 415              		.loc 1 637 0
 416 0100 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 417 0104 1B02     		lsls	r3, r3, #8
 418 0106 1BB2     		sxth	r3, r3
 419 0108 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 420 010c 1343     		orrs	r3, r3, r2
 421 010e BB80     		strh	r3, [r7, #4]	@ movhi
 422 0110 D0E7     		b	.L26
 423              	.L37:
 644:Src/LTC6811.c **** 		data[4] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 424              		.loc 1 644 0
 425 0112 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 426 0116 1B02     		lsls	r3, r3, #8
 427 0118 1BB2     		sxth	r3, r3
 428 011a 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 429 011e 1343     		orrs	r3, r3, r2
 430 0120 FB80     		strh	r3, [r7, #6]	@ movhi
 645:Src/LTC6811.c **** 		data[5] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 431              		.loc 1 645 0
 432 0122 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 433 0126 1B02     		lsls	r3, r3, #8
 434 0128 1BB2     		sxth	r3, r3
 435 012a 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 436 012e 1343     		orrs	r3, r3, r2
 437 0130 3B81     		strh	r3, [r7, #8]	@ movhi
 646:Src/LTC6811.c **** 	}
 438              		.loc 1 646 0
 439 0132 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 440 0136 1B02     		lsls	r3, r3, #8
 441 0138 1BB2     		sxth	r3, r3
 442 013a 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 443 013e 1343     		orrs	r3, r3, r2
 444 0140 7B81     		strh	r3, [r7, #10]	@ movhi
 445 0142 B9E7     		b	.L27
 446              	.L38:
 651:Src/LTC6811.c **** 		data[7] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 447              		.loc 1 651 0
 448 0144 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 449 0148 1B02     		lsls	r3, r3, #8
 450 014a 1BB2     		sxth	r3, r3
 451 014c 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 452 0150 1343     		orrs	r3, r3, r2
 453 0152 BB81     		strh	r3, [r7, #12]	@ movhi
 652:Src/LTC6811.c **** 		data[8] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 454              		.loc 1 652 0
 455 0154 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 456 0158 1B02     		lsls	r3, r3, #8
 457 015a 1BB2     		sxth	r3, r3
 458 015c 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 459 0160 1343     		orrs	r3, r3, r2
 460 0162 FB81     		strh	r3, [r7, #14]	@ movhi
 653:Src/LTC6811.c **** 	}
 461              		.loc 1 653 0
 462 0164 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 463 0168 1B02     		lsls	r3, r3, #8
 464 016a 1BB2     		sxth	r3, r3
ARM GAS  /tmp/ccuL4tVn.s 			page 23


 465 016c 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 466 0170 1343     		orrs	r3, r3, r2
 467 0172 3B82     		strh	r3, [r7, #16]	@ movhi
 468 0174 A2E7     		b	.L28
 469              	.L39:
 658:Src/LTC6811.c **** 		data[10] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 470              		.loc 1 658 0
 471 0176 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 472 017a 1B02     		lsls	r3, r3, #8
 473 017c 1BB2     		sxth	r3, r3
 474 017e 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 475 0182 1343     		orrs	r3, r3, r2
 476 0184 7B82     		strh	r3, [r7, #18]	@ movhi
 659:Src/LTC6811.c **** 		data[11] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 477              		.loc 1 659 0
 478 0186 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 479 018a 1B02     		lsls	r3, r3, #8
 480 018c 1BB2     		sxth	r3, r3
 481 018e 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 482 0192 1343     		orrs	r3, r3, r2
 483 0194 BB82     		strh	r3, [r7, #20]	@ movhi
 660:Src/LTC6811.c **** 	}
 484              		.loc 1 660 0
 485 0196 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 486 019a 1B02     		lsls	r3, r3, #8
 487 019c 1BB2     		sxth	r3, r3
 488 019e 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 489 01a2 1343     		orrs	r3, r3, r2
 490 01a4 FB82     		strh	r3, [r7, #22]	@ movhi
 491 01a6 8BE7     		b	.L29
 492              	.L40:
 665:Src/LTC6811.c **** 		data[1] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 493              		.loc 1 665 0
 494 01a8 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 495 01ac 1B02     		lsls	r3, r3, #8
 496 01ae 1BB2     		sxth	r3, r3
 497 01b0 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 498 01b4 1343     		orrs	r3, r3, r2
 499 01b6 3B80     		strh	r3, [r7]	@ movhi
 666:Src/LTC6811.c **** 		data[2] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 500              		.loc 1 666 0
 501 01b8 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 502 01bc 1B02     		lsls	r3, r3, #8
 503 01be 1BB2     		sxth	r3, r3
 504 01c0 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 505 01c4 1343     		orrs	r3, r3, r2
 506 01c6 7B80     		strh	r3, [r7, #2]	@ movhi
 667:Src/LTC6811.c **** 	}
 507              		.loc 1 667 0
 508 01c8 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 509 01cc 1B02     		lsls	r3, r3, #8
 510 01ce 1BB2     		sxth	r3, r3
 511 01d0 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 512 01d4 1343     		orrs	r3, r3, r2
 513 01d6 BB80     		strh	r3, [r7, #4]	@ movhi
 514 01d8 74E7     		b	.L30
 515              	.L41:
ARM GAS  /tmp/ccuL4tVn.s 			page 24


 671:Src/LTC6811.c **** 	}
 516              		.loc 1 671 0
 517 01da 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 518 01de 1B02     		lsls	r3, r3, #8
 519 01e0 1BB2     		sxth	r3, r3
 520 01e2 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 521 01e6 1343     		orrs	r3, r3, r2
 522 01e8 FB80     		strh	r3, [r7, #6]	@ movhi
 523 01ea 6EE7     		b	.L31
 524              	.L42:
 675:Src/LTC6811.c **** 		data[1] = (uint16_t) ((rx_data[6] << 8) & 0xFF00) | (rx_data[7] & 0x00FF);
 525              		.loc 1 675 0
 526 01ec 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 527 01f0 1B02     		lsls	r3, r3, #8
 528 01f2 1BB2     		sxth	r3, r3
 529 01f4 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 530 01f8 1343     		orrs	r3, r3, r2
 531 01fa 3B80     		strh	r3, [r7]	@ movhi
 676:Src/LTC6811.c **** 		data[2] = (uint16_t) ((rx_data[8] << 8) & 0xFF00) | (rx_data[9] & 0x00FF);
 532              		.loc 1 676 0
 533 01fc 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 534 0200 1B02     		lsls	r3, r3, #8
 535 0202 1BB2     		sxth	r3, r3
 536 0204 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 537 0208 1343     		orrs	r3, r3, r2
 538 020a 7B80     		strh	r3, [r7, #2]	@ movhi
 677:Src/LTC6811.c **** 		data[3] = (uint16_t) ((rx_data[10] << 8) & 0xFF00) | (rx_data[11] & 0x00FF);
 539              		.loc 1 677 0
 540 020c 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 541 0210 1B02     		lsls	r3, r3, #8
 542 0212 1BB2     		sxth	r3, r3
 543 0214 9DF80920 		ldrb	r2, [sp, #9]	@ zero_extendqisi2
 544 0218 1343     		orrs	r3, r3, r2
 545 021a BB80     		strh	r3, [r7, #4]	@ movhi
 678:Src/LTC6811.c **** 	}
 546              		.loc 1 678 0
 547 021c 9DF80A30 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
 548 0220 1B02     		lsls	r3, r3, #8
 549 0222 1BB2     		sxth	r3, r3
 550 0224 9DF80B20 		ldrb	r2, [sp, #11]	@ zero_extendqisi2
 551 0228 1343     		orrs	r3, r3, r2
 552 022a FB80     		strh	r3, [r7, #6]	@ movhi
 553 022c 50E7     		b	.L32
 554              		.cfi_endproc
 555              	.LFE77:
 557              		.section	.text.readCellVoltage,"ax",%progbits
 558              		.align	1
 559              		.global	readCellVoltage
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu softvfp
 565              	readCellVoltage:
 566              	.LFB69:
 168:Src/LTC6811.c **** 	
 567              		.loc 1 168 0
 568              		.cfi_startproc
ARM GAS  /tmp/ccuL4tVn.s 			page 25


 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              	.LVL44:
 572 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 573              	.LCFI7:
 574              		.cfi_def_cfa_offset 24
 575              		.cfi_offset 3, -24
 576              		.cfi_offset 4, -20
 577              		.cfi_offset 5, -16
 578              		.cfi_offset 6, -12
 579              		.cfi_offset 7, -8
 580              		.cfi_offset 14, -4
 581 0002 0746     		mov	r7, r0
 582 0004 0D46     		mov	r5, r1
 583              	.LVL45:
 174:Src/LTC6811.c **** 	
 584              		.loc 1 174 0
 585 0006 1820     		movs	r0, #24
 586              	.LVL46:
 587 0008 FFF7FEFF 		bl	malloc
 588              	.LVL47:
 589 000c 0446     		mov	r4, r0
 590              	.LVL48:
 183:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 591              		.loc 1 183 0
 592 000e 0246     		mov	r2, r0
 593 0010 3946     		mov	r1, r7
 594 0012 0420     		movs	r0, #4
 595              	.LVL49:
 596 0014 FFF7FEFF 		bl	readRegister
 597              	.LVL50:
 598 0018 0646     		mov	r6, r0
 599              	.LVL51:
 185:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 600              		.loc 1 185 0
 601 001a 2246     		mov	r2, r4
 602 001c 3946     		mov	r1, r7
 603 001e 0620     		movs	r0, #6
 604 0020 FFF7FEFF 		bl	readRegister
 605              	.LVL52:
 606 0024 0640     		ands	r6, r6, r0
 607              	.LVL53:
 608 0026 F6B2     		uxtb	r6, r6
 609              	.LVL54:
 187:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 610              		.loc 1 187 0
 611 0028 2246     		mov	r2, r4
 612 002a 3946     		mov	r1, r7
 613 002c 0820     		movs	r0, #8
 614              	.LVL55:
 615 002e FFF7FEFF 		bl	readRegister
 616              	.LVL56:
 617 0032 0640     		ands	r6, r6, r0
 618              	.LVL57:
 189:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 619              		.loc 1 189 0
 620 0034 2246     		mov	r2, r4
ARM GAS  /tmp/ccuL4tVn.s 			page 26


 621 0036 3946     		mov	r1, r7
 622 0038 0A20     		movs	r0, #10
 623              	.LVL58:
 624 003a FFF7FEFF 		bl	readRegister
 625              	.LVL59:
 626 003e 0640     		ands	r6, r6, r0
 627              	.LVL60:
 628              	.LBB7:
 194:Src/LTC6811.c **** 		cellVoltage[i] = voltage[i];
 629              		.loc 1 194 0
 630 0040 0023     		movs	r3, #0
 631 0042 05E0     		b	.L44
 632              	.LVL61:
 633              	.L45:
 195:Src/LTC6811.c **** 	}
 634              		.loc 1 195 0 discriminator 3
 635 0044 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 636 0048 25F81320 		strh	r2, [r5, r3, lsl #1]	@ movhi
 194:Src/LTC6811.c **** 		cellVoltage[i] = voltage[i];
 637              		.loc 1 194 0 discriminator 3
 638 004c 0133     		adds	r3, r3, #1
 639              	.LVL62:
 640 004e DBB2     		uxtb	r3, r3
 641              	.LVL63:
 642              	.L44:
 194:Src/LTC6811.c **** 		cellVoltage[i] = voltage[i];
 643              		.loc 1 194 0 is_stmt 0 discriminator 1
 644 0050 0B2B     		cmp	r3, #11
 645 0052 F7D9     		bls	.L45
 646              	.LBE7:
 198:Src/LTC6811.c **** 	
 647              		.loc 1 198 0 is_stmt 1
 648 0054 2046     		mov	r0, r4
 649              	.LVL64:
 650 0056 FFF7FEFF 		bl	free
 651              	.LVL65:
 202:Src/LTC6811.c **** 
 652              		.loc 1 202 0
 653 005a 3046     		mov	r0, r6
 654 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 655              		.cfi_endproc
 656              	.LFE69:
 658              		.section	.text.readCellTemp,"ax",%progbits
 659              		.align	1
 660              		.global	readCellTemp
 661              		.syntax unified
 662              		.thumb
 663              		.thumb_func
 664              		.fpu softvfp
 666              	readCellTemp:
 667              	.LFB71:
 304:Src/LTC6811.c **** 	
 668              		.loc 1 304 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              	.LVL66:
ARM GAS  /tmp/ccuL4tVn.s 			page 27


 673 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 674              	.LCFI8:
 675              		.cfi_def_cfa_offset 32
 676              		.cfi_offset 3, -32
 677              		.cfi_offset 4, -28
 678              		.cfi_offset 5, -24
 679              		.cfi_offset 6, -20
 680              		.cfi_offset 7, -16
 681              		.cfi_offset 8, -12
 682              		.cfi_offset 9, -8
 683              		.cfi_offset 14, -4
 684 0004 8146     		mov	r9, r0
 685 0006 8846     		mov	r8, r1
 686 0008 1646     		mov	r6, r2
 687 000a 1F46     		mov	r7, r3
 688              	.LVL67:
 312:Src/LTC6811.c **** 	
 689              		.loc 1 312 0
 690 000c 0820     		movs	r0, #8
 691              	.LVL68:
 692 000e FFF7FEFF 		bl	malloc
 693              	.LVL69:
 694 0012 0446     		mov	r4, r0
 695              	.LVL70:
 696              	.LBB8:
 321:Src/LTC6811.c **** 		temp[i] = 0;
 697              		.loc 1 321 0
 698 0014 0023     		movs	r3, #0
 699 0016 04E0     		b	.L48
 700              	.LVL71:
 701              	.L49:
 322:Src/LTC6811.c **** 	}
 702              		.loc 1 322 0 discriminator 3
 703 0018 0022     		movs	r2, #0
 704 001a 24F81320 		strh	r2, [r4, r3, lsl #1]	@ movhi
 321:Src/LTC6811.c **** 		temp[i] = 0;
 705              		.loc 1 321 0 discriminator 3
 706 001e 0133     		adds	r3, r3, #1
 707              	.LVL72:
 708 0020 DBB2     		uxtb	r3, r3
 709              	.LVL73:
 710              	.L48:
 321:Src/LTC6811.c **** 		temp[i] = 0;
 711              		.loc 1 321 0 is_stmt 0 discriminator 1
 712 0022 032B     		cmp	r3, #3
 713 0024 F8D9     		bls	.L49
 714              	.LBE8:
 325:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 715              		.loc 1 325 0 is_stmt 1
 716 0026 2246     		mov	r2, r4
 717 0028 4946     		mov	r1, r9
 718 002a 0C20     		movs	r0, #12
 719              	.LVL74:
 720 002c FFF7FEFF 		bl	readRegister
 721              	.LVL75:
 722 0030 0546     		mov	r5, r0
 723              	.LVL76:
ARM GAS  /tmp/ccuL4tVn.s 			page 28


 327:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 724              		.loc 1 327 0
 725 0032 2246     		mov	r2, r4
 726 0034 4946     		mov	r1, r9
 727 0036 0E20     		movs	r0, #14
 728 0038 FFF7FEFF 		bl	readRegister
 729              	.LVL77:
 730 003c 0540     		ands	r5, r5, r0
 731              	.LVL78:
 732 003e EDB2     		uxtb	r5, r5
 733              	.LVL79:
 734              	.LBB9:
 332:Src/LTC6811.c **** 		if ((temp[i] > 24400) || (temp[i] < 13000)) {
 735              		.loc 1 332 0
 736 0040 0023     		movs	r3, #0
 737 0042 07E0     		b	.L50
 738              	.LVL80:
 739              	.L51:
 338:Src/LTC6811.c **** 		
 740              		.loc 1 338 0
 741 0044 0022     		movs	r2, #0
 742 0046 F254     		strb	r2, [r6, r3]
 743 0048 14E0     		b	.L52
 744              	.L53:
 345:Src/LTC6811.c **** 		
 745              		.loc 1 345 0
 746 004a 0022     		movs	r2, #0
 747 004c 3A54     		strb	r2, [r7, r0]
 748 004e 1CE0     		b	.L54
 749              	.L55:
 332:Src/LTC6811.c **** 		if ((temp[i] > 24400) || (temp[i] < 13000)) {
 750              		.loc 1 332 0 discriminator 2
 751 0050 0133     		adds	r3, r3, #1
 752              	.LVL81:
 753 0052 DBB2     		uxtb	r3, r3
 754              	.LVL82:
 755              	.L50:
 332:Src/LTC6811.c **** 		if ((temp[i] > 24400) || (temp[i] < 13000)) {
 756              		.loc 1 332 0 is_stmt 0 discriminator 1
 757 0054 032B     		cmp	r3, #3
 758 0056 24D8     		bhi	.L58
 333:Src/LTC6811.c **** 			dcFault[i] = true;
 759              		.loc 1 333 0 is_stmt 1
 760 0058 1846     		mov	r0, r3
 761 005a 5900     		lsls	r1, r3, #1
 762 005c 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 763 0060 A2F54B52 		sub	r2, r2, #12992
 764 0064 083A     		subs	r2, r2, #8
 765 0066 92B2     		uxth	r2, r2
 766 0068 42F6884C 		movw	ip, #11400
 767 006c 6245     		cmp	r2, ip
 768 006e E9D9     		bls	.L51
 334:Src/LTC6811.c **** 			// cellTemp[i] = 0x0000;
 769              		.loc 1 334 0
 770 0070 0122     		movs	r2, #1
 771 0072 F254     		strb	r2, [r6, r3]
 772              	.L52:
ARM GAS  /tmp/ccuL4tVn.s 			page 29


 340:Src/LTC6811.c **** 			tempFault[i] = true;
 773              		.loc 1 340 0
 774 0074 625A     		ldrh	r2, [r4, r1]
 775 0076 A2F54B52 		sub	r2, r2, #12992
 776 007a 083A     		subs	r2, r2, #8
 777 007c 92B2     		uxth	r2, r2
 778 007e 40F6330C 		movw	ip, #2099
 779 0082 6245     		cmp	r2, ip
 780 0084 E1D8     		bhi	.L53
 341:Src/LTC6811.c **** 			// cellTemp[i] = 0xFFFF;
 781              		.loc 1 341 0
 782 0086 0122     		movs	r2, #1
 783 0088 3A54     		strb	r2, [r7, r0]
 784              	.L54:
 347:Src/LTC6811.c **** 			// dummy[i] = (double) temp[i] / 10000; // convert from ADC value to voltage
 785              		.loc 1 347 0
 786 008a 605A     		ldrh	r0, [r4, r1]
 787 008c A0F56B52 		sub	r2, r0, #15040
 788 0090 3C3A     		subs	r2, r2, #60
 789 0092 92B2     		uxth	r2, r2
 790 0094 42F2544C 		movw	ip, #9300
 791 0098 6245     		cmp	r2, ip
 792 009a D9D8     		bhi	.L55
 353:Src/LTC6811.c **** 		}
 793              		.loc 1 353 0
 794 009c 28F80100 		strh	r0, [r8, r1]	@ movhi
 795 00a0 D6E7     		b	.L55
 796              	.L58:
 797              	.LBE9:
 357:Src/LTC6811.c **** 	
 798              		.loc 1 357 0
 799 00a2 2046     		mov	r0, r4
 800 00a4 FFF7FEFF 		bl	free
 801              	.LVL83:
 361:Src/LTC6811.c **** 
 802              		.loc 1 361 0
 803 00a8 2846     		mov	r0, r5
 804 00aa BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 805              		.cfi_endproc
 806              	.LFE71:
 808              		.section	.text.readConfig,"ax",%progbits
 809              		.align	1
 810              		.global	readConfig
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 814              		.fpu softvfp
 816              	readConfig:
 817              	.LFB73:
 429:Src/LTC6811.c **** 	
 818              		.loc 1 429 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              	.LVL84:
 823 0000 70B5     		push	{r4, r5, r6, lr}
 824              	.LCFI9:
ARM GAS  /tmp/ccuL4tVn.s 			page 30


 825              		.cfi_def_cfa_offset 16
 826              		.cfi_offset 4, -16
 827              		.cfi_offset 5, -12
 828              		.cfi_offset 6, -8
 829              		.cfi_offset 14, -4
 830 0002 0646     		mov	r6, r0
 831 0004 0C46     		mov	r4, r1
 832              	.LVL85:
 434:Src/LTC6811.c **** 
 833              		.loc 1 434 0
 834 0006 0820     		movs	r0, #8
 835              	.LVL86:
 836 0008 FFF7FEFF 		bl	malloc
 837              	.LVL87:
 838 000c 0546     		mov	r5, r0
 839              	.LVL88:
 436:Src/LTC6811.c **** 	
 840              		.loc 1 436 0
 841 000e FFF7FEFF 		bl	wakeup_idle
 842              	.LVL89:
 438:Src/LTC6811.c **** 	
 843              		.loc 1 438 0
 844 0012 2A46     		mov	r2, r5
 845 0014 3146     		mov	r1, r6
 846 0016 0220     		movs	r0, #2
 847 0018 FFF7FEFF 		bl	readRegister
 848              	.LVL90:
 849 001c 0646     		mov	r6, r0
 850              	.LVL91:
 440:Src/LTC6811.c **** 	cfg[1] = (uint8_t) (config[0] & 0xFF);
 851              		.loc 1 440 0
 852 001e 2B88     		ldrh	r3, [r5]
 853 0020 1A0A     		lsrs	r2, r3, #8
 854 0022 2270     		strb	r2, [r4]
 441:Src/LTC6811.c **** 	cfg[2] = (uint8_t) ((config[1] >> 8) & 0xFF);
 855              		.loc 1 441 0
 856 0024 6370     		strb	r3, [r4, #1]
 442:Src/LTC6811.c **** 	cfg[3] = (uint8_t) (config[1] & 0xFF);
 857              		.loc 1 442 0
 858 0026 6B88     		ldrh	r3, [r5, #2]
 859 0028 1A0A     		lsrs	r2, r3, #8
 860 002a A270     		strb	r2, [r4, #2]
 443:Src/LTC6811.c **** 	cfg[4] = (uint8_t) ((config[2] >> 8) & 0xFF);
 861              		.loc 1 443 0
 862 002c E370     		strb	r3, [r4, #3]
 444:Src/LTC6811.c **** 	cfg[5] = (uint8_t) (config[2] & 0xFF);
 863              		.loc 1 444 0
 864 002e AB88     		ldrh	r3, [r5, #4]
 865 0030 1A0A     		lsrs	r2, r3, #8
 866 0032 2271     		strb	r2, [r4, #4]
 445:Src/LTC6811.c **** 	cfg[6] = (uint8_t) ((config[3] >> 8) & 0xFF);
 867              		.loc 1 445 0
 868 0034 6371     		strb	r3, [r4, #5]
 446:Src/LTC6811.c **** 	cfg[7] = (uint8_t) (config[3] & 0xFF);
 869              		.loc 1 446 0
 870 0036 EB88     		ldrh	r3, [r5, #6]
 871 0038 1A0A     		lsrs	r2, r3, #8
ARM GAS  /tmp/ccuL4tVn.s 			page 31


 872 003a A271     		strb	r2, [r4, #6]
 447:Src/LTC6811.c **** 
 873              		.loc 1 447 0
 874 003c E371     		strb	r3, [r4, #7]
 449:Src/LTC6811.c **** 	
 875              		.loc 1 449 0
 876 003e 2846     		mov	r0, r5
 877 0040 FFF7FEFF 		bl	free
 878              	.LVL92:
 452:Src/LTC6811.c **** 
 879              		.loc 1 452 0
 880 0044 3046     		mov	r0, r6
 881 0046 70BD     		pop	{r4, r5, r6, pc}
 882              		.cfi_endproc
 883              	.LFE73:
 885              		.section	.text.writeConfigAddress,"ax",%progbits
 886              		.align	1
 887              		.global	writeConfigAddress
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 891              		.fpu softvfp
 893              	writeConfigAddress:
 894              	.LFB67:
 112:Src/LTC6811.c **** 
 895              		.loc 1 112 0
 896              		.cfi_startproc
 897              		@ args = 100, pretend = 16, frame = 8
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              	.LVL93:
 900 0000 84B0     		sub	sp, sp, #16
 901              	.LCFI10:
 902              		.cfi_def_cfa_offset 16
 903 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 904              	.LCFI11:
 905              		.cfi_def_cfa_offset 52
 906              		.cfi_offset 4, -52
 907              		.cfi_offset 5, -48
 908              		.cfi_offset 6, -44
 909              		.cfi_offset 7, -40
 910              		.cfi_offset 8, -36
 911              		.cfi_offset 9, -32
 912              		.cfi_offset 10, -28
 913              		.cfi_offset 11, -24
 914              		.cfi_offset 14, -20
 915 0006 83B0     		sub	sp, sp, #12
 916              	.LCFI12:
 917              		.cfi_def_cfa_offset 64
 918 0008 0CAC     		add	r4, sp, #48
 919 000a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 920 000e 9DF89090 		ldrb	r9, [sp, #144]	@ zero_extendqisi2
 921              	.LVL94:
 122:Src/LTC6811.c **** 	
 922              		.loc 1 122 0
 923 0012 0C20     		movs	r0, #12
 924 0014 FFF7FEFF 		bl	malloc
 925              	.LVL95:
ARM GAS  /tmp/ccuL4tVn.s 			page 32


 926 0018 0646     		mov	r6, r0
 927              	.LVL96:
 124:Src/LTC6811.c **** 	config[1] = (uint8_t) (cfg.UndervoltageComparisonVoltage & 0xFF);
 928              		.loc 1 124 0
 929 001a 9DF87250 		ldrb	r5, [sp, #114]	@ zero_extendqisi2
 930 001e ED01     		lsls	r5, r5, #7
 931 0020 6DB2     		sxtb	r5, r5
 932 0022 9DF87330 		ldrb	r3, [sp, #115]	@ zero_extendqisi2
 933 0026 45EA8315 		orr	r5, r5, r3, lsl #6
 934 002a 6DB2     		sxtb	r5, r5
 935 002c 9DF87430 		ldrb	r3, [sp, #116]	@ zero_extendqisi2
 936 0030 45EA4315 		orr	r5, r5, r3, lsl #5
 937 0034 6DB2     		sxtb	r5, r5
 938 0036 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 939 003a 45EA0315 		orr	r5, r5, r3, lsl #4
 940 003e 6DB2     		sxtb	r5, r5
 941 0040 9DF87630 		ldrb	r3, [sp, #118]	@ zero_extendqisi2
 942 0044 45EAC305 		orr	r5, r5, r3, lsl #3
 943 0048 6DB2     		sxtb	r5, r5
 944 004a 9DF87730 		ldrb	r3, [sp, #119]	@ zero_extendqisi2
 945 004e 45EA8305 		orr	r5, r5, r3, lsl #2
 946 0052 6DB2     		sxtb	r5, r5
 947 0054 9DF97830 		ldrsb	r3, [sp, #120]
 948 0058 1D43     		orrs	r5, r5, r3
 949 005a EDB2     		uxtb	r5, r5
 125:Src/LTC6811.c **** 	config[2] = (uint8_t) ((cfg.OvervoltageComparisonVoltage << 4) & 0xF0) | ((cfg.UndervoltageCompari
 950              		.loc 1 125 0
 951 005c BDF87A30 		ldrh	r3, [sp, #122]
 952 0060 5FFA83FA 		uxtb	r10, r3
 126:Src/LTC6811.c **** 	config[3] = (uint8_t) ((cfg.OvervoltageComparisonVoltage >> 4) & 0xFF);
 953              		.loc 1 126 0
 954 0064 BDF87C80 		ldrh	r8, [sp, #124]
 955 0068 4FEA0817 		lsl	r7, r8, #4
 956 006c 7FB2     		sxtb	r7, r7
 957 006e C3F30323 		ubfx	r3, r3, #8, #4
 958 0072 1F43     		orrs	r7, r7, r3
 959 0074 FFB2     		uxtb	r7, r7
 127:Src/LTC6811.c **** 	config[4] = (uint8_t) (cfg.DischargeCell8 << 7) | (cfg.DischargeCell7 << 6) | (cfg.DischargeCell6 
 960              		.loc 1 127 0
 961 0076 C8F30718 		ubfx	r8, r8, #4, #8
 128:Src/LTC6811.c **** 	config[5] = (uint8_t) ((cfg.DischargeTimeoutValue << 4) & 0xF0) | (cfg.DischargeCell12 << 3) | (cf
 962              		.loc 1 128 0
 963 007a 9DF88540 		ldrb	r4, [sp, #133]	@ zero_extendqisi2
 964 007e E401     		lsls	r4, r4, #7
 965 0080 64B2     		sxtb	r4, r4
 966 0082 9DF88430 		ldrb	r3, [sp, #132]	@ zero_extendqisi2
 967 0086 44EA8314 		orr	r4, r4, r3, lsl #6
 968 008a 64B2     		sxtb	r4, r4
 969 008c 9DF88330 		ldrb	r3, [sp, #131]	@ zero_extendqisi2
 970 0090 44EA4314 		orr	r4, r4, r3, lsl #5
 971 0094 64B2     		sxtb	r4, r4
 972 0096 9DF88230 		ldrb	r3, [sp, #130]	@ zero_extendqisi2
 973 009a 44EA0314 		orr	r4, r4, r3, lsl #4
 974 009e 64B2     		sxtb	r4, r4
 975 00a0 9DF88130 		ldrb	r3, [sp, #129]	@ zero_extendqisi2
 976 00a4 44EAC304 		orr	r4, r4, r3, lsl #3
 977 00a8 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccuL4tVn.s 			page 33


 978 00aa 9DF88030 		ldrb	r3, [sp, #128]	@ zero_extendqisi2
 979 00ae 44EA8304 		orr	r4, r4, r3, lsl #2
 980 00b2 64B2     		sxtb	r4, r4
 981 00b4 9DF87F30 		ldrb	r3, [sp, #127]	@ zero_extendqisi2
 982 00b8 44EA4304 		orr	r4, r4, r3, lsl #1
 983 00bc 64B2     		sxtb	r4, r4
 984 00be 9DF97E30 		ldrsb	r3, [sp, #126]
 985 00c2 1C43     		orrs	r4, r4, r3
 986 00c4 E4B2     		uxtb	r4, r4
 129:Src/LTC6811.c **** 	
 987              		.loc 1 129 0
 988 00c6 9DF88AB0 		ldrb	fp, [sp, #138]	@ zero_extendqisi2
 989 00ca 4FEA0B1B 		lsl	fp, fp, #4
 990 00ce 4FFA8BFB 		sxtb	fp, fp
 991 00d2 9DF88930 		ldrb	r3, [sp, #137]	@ zero_extendqisi2
 992 00d6 4BEAC30B 		orr	fp, fp, r3, lsl #3
 993 00da 4FFA8BFB 		sxtb	fp, fp
 994 00de 9DF88830 		ldrb	r3, [sp, #136]	@ zero_extendqisi2
 995 00e2 4BEA830B 		orr	fp, fp, r3, lsl #2
 996 00e6 4FFA8BFB 		sxtb	fp, fp
 997 00ea 9DF88730 		ldrb	r3, [sp, #135]	@ zero_extendqisi2
 998 00ee 4BEA430B 		orr	fp, fp, r3, lsl #1
 999 00f2 4FFA8BFB 		sxtb	fp, fp
 1000 00f6 9DF98630 		ldrsb	r3, [sp, #134]
 1001 00fa 4BEA030B 		orr	fp, fp, r3
 1002 00fe 5FFA8BFB 		uxtb	fp, fp
 131:Src/LTC6811.c **** 	cmd[1] = (uint8_t) (WriteConfigurationRegisterGroup & 0xFF);
 1003              		.loc 1 131 0
 1004 0102 4FEAC903 		lsl	r3, r9, #3
 1005 0106 03F07803 		and	r3, r3, #120
 1006 010a 43F08003 		orr	r3, r3, #128
 1007 010e 0370     		strb	r3, [r0]
 132:Src/LTC6811.c **** 	
 1008              		.loc 1 132 0
 1009 0110 0123     		movs	r3, #1
 1010 0112 4370     		strb	r3, [r0, #1]
 134:Src/LTC6811.c **** 	
 1011              		.loc 1 134 0
 1012 0114 0146     		mov	r1, r0
 1013 0116 0220     		movs	r0, #2
 1014              	.LVL97:
 1015 0118 FFF7FEFF 		bl	calculatePEC
 1016              	.LVL98:
 136:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 1017              		.loc 1 136 0
 1018 011c 030A     		lsrs	r3, r0, #8
 1019 011e B370     		strb	r3, [r6, #2]
 137:Src/LTC6811.c **** 
 1020              		.loc 1 137 0
 1021 0120 F070     		strb	r0, [r6, #3]
 139:Src/LTC6811.c **** 	cmd[5] = config[1];
 1022              		.loc 1 139 0
 1023 0122 3571     		strb	r5, [r6, #4]
 140:Src/LTC6811.c **** 	cmd[6] = config[2];
 1024              		.loc 1 140 0
 1025 0124 86F805A0 		strb	r10, [r6, #5]
 141:Src/LTC6811.c **** 	cmd[7] = config[3];
ARM GAS  /tmp/ccuL4tVn.s 			page 34


 1026              		.loc 1 141 0
 1027 0128 B771     		strb	r7, [r6, #6]
 142:Src/LTC6811.c **** 	cmd[8] = config[4];
 1028              		.loc 1 142 0
 1029 012a 86F80780 		strb	r8, [r6, #7]
 143:Src/LTC6811.c **** 	cmd[9] = config[5];
 1030              		.loc 1 143 0
 1031 012e 3472     		strb	r4, [r6, #8]
 144:Src/LTC6811.c **** 	
 1032              		.loc 1 144 0
 1033 0130 86F809B0 		strb	fp, [r6, #9]
 146:Src/LTC6811.c **** 
 1034              		.loc 1 146 0
 1035 0134 311D     		adds	r1, r6, #4
 1036 0136 0620     		movs	r0, #6
 1037              	.LVL99:
 1038 0138 FFF7FEFF 		bl	calculatePEC
 1039              	.LVL100:
 148:Src/LTC6811.c **** 	cmd[11] = PEC_return & 0xFF;
 1040              		.loc 1 148 0
 1041 013c 030A     		lsrs	r3, r0, #8
 1042 013e B372     		strb	r3, [r6, #10]
 149:Src/LTC6811.c **** 	
 1043              		.loc 1 149 0
 1044 0140 F072     		strb	r0, [r6, #11]
 151:Src/LTC6811.c **** 
 1045              		.loc 1 151 0
 1046 0142 0C21     		movs	r1, #12
 1047 0144 3046     		mov	r0, r6
 1048              	.LVL101:
 1049 0146 FFF7FEFF 		bl	SPIWrite
 1050              	.LVL102:
 153:Src/LTC6811.c **** 	
 1051              		.loc 1 153 0
 1052 014a 6946     		mov	r1, sp
 1053 014c 4846     		mov	r0, r9
 1054 014e FFF7FEFF 		bl	readConfig
 1055              	.LVL103:
 155:Src/LTC6811.c **** 
 1056              		.loc 1 155 0
 1057 0152 3046     		mov	r0, r6
 1058 0154 FFF7FEFF 		bl	free
 1059              	.LVL104:
 157:Src/LTC6811.c **** 
 1060              		.loc 1 157 0
 1061 0158 03B0     		add	sp, sp, #12
 1062              	.LCFI13:
 1063              		.cfi_def_cfa_offset 52
 1064              		@ sp needed
 1065 015a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1066              	.LCFI14:
 1067              		.cfi_restore 14
 1068              		.cfi_restore 11
 1069              		.cfi_restore 10
 1070              		.cfi_restore 9
 1071              		.cfi_restore 8
 1072              		.cfi_restore 7
ARM GAS  /tmp/ccuL4tVn.s 			page 35


 1073              		.cfi_restore 6
 1074              		.cfi_restore 5
 1075              		.cfi_restore 4
 1076              		.cfi_def_cfa_offset 16
 1077              	.LVL105:
 1078 015e 04B0     		add	sp, sp, #16
 1079              	.LCFI15:
 1080              		.cfi_def_cfa_offset 0
 1081 0160 7047     		bx	lr
 1082              		.cfi_endproc
 1083              	.LFE67:
 1085              		.section	.text.writeConfigAll,"ax",%progbits
 1086              		.align	1
 1087              		.global	writeConfigAll
 1088              		.syntax unified
 1089              		.thumb
 1090              		.thumb_func
 1091              		.fpu softvfp
 1093              	writeConfigAll:
 1094              	.LFB68:
 159:Src/LTC6811.c **** 
 1095              		.loc 1 159 0
 1096              		.cfi_startproc
 1097              		@ args = 96, pretend = 16, frame = 0
 1098              		@ frame_needed = 0, uses_anonymous_args = 0
 1099 0000 84B0     		sub	sp, sp, #16
 1100              	.LCFI16:
 1101              		.cfi_def_cfa_offset 16
 1102 0002 10B5     		push	{r4, lr}
 1103              	.LCFI17:
 1104              		.cfi_def_cfa_offset 24
 1105              		.cfi_offset 4, -24
 1106              		.cfi_offset 14, -20
 1107 0004 96B0     		sub	sp, sp, #88
 1108              	.LCFI18:
 1109              		.cfi_def_cfa_offset 112
 1110 0006 18AC     		add	r4, sp, #96
 1111 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 161:Src/LTC6811.c **** 
 1112              		.loc 1 161 0
 1113 000c FFF7FEFF 		bl	wakeup_idle
 1114              	.LVL106:
 1115              	.LBB10:
 163:Src/LTC6811.c **** 		writeConfigAddress(cfg, cfg.address[i]);
 1116              		.loc 1 163 0
 1117 0010 0024     		movs	r4, #0
 1118 0012 0EE0     		b	.L64
 1119              	.LVL107:
 1120              	.L65:
 164:Src/LTC6811.c **** 	}
 1121              		.loc 1 164 0 discriminator 3
 1122 0014 18AB     		add	r3, sp, #96
 1123 0016 2344     		add	r3, r3, r4
 1124 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1125 001a 1493     		str	r3, [sp, #80]
 1126 001c 4E22     		movs	r2, #78
 1127 001e 1CA9     		add	r1, sp, #112
ARM GAS  /tmp/ccuL4tVn.s 			page 36


 1128 0020 6846     		mov	r0, sp
 1129 0022 FFF7FEFF 		bl	memcpy
 1130              	.LVL108:
 1131 0026 18AB     		add	r3, sp, #96
 1132 0028 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1133 002a FFF7FEFF 		bl	writeConfigAddress
 1134              	.LVL109:
 163:Src/LTC6811.c **** 		writeConfigAddress(cfg, cfg.address[i]);
 1135              		.loc 1 163 0 discriminator 3
 1136 002e 0134     		adds	r4, r4, #1
 1137              	.LVL110:
 1138 0030 E4B2     		uxtb	r4, r4
 1139              	.LVL111:
 1140              	.L64:
 163:Src/LTC6811.c **** 		writeConfigAddress(cfg, cfg.address[i]);
 1141              		.loc 1 163 0 is_stmt 0 discriminator 1
 1142 0032 9DF86030 		ldrb	r3, [sp, #96]	@ zero_extendqisi2
 1143 0036 A342     		cmp	r3, r4
 1144 0038 ECD8     		bhi	.L65
 1145              	.LBE10:
 166:Src/LTC6811.c **** 
 1146              		.loc 1 166 0 is_stmt 1
 1147 003a 16B0     		add	sp, sp, #88
 1148              	.LCFI19:
 1149              		.cfi_def_cfa_offset 24
 1150              		@ sp needed
 1151 003c BDE81040 		pop	{r4, lr}
 1152              	.LCFI20:
 1153              		.cfi_restore 14
 1154              		.cfi_restore 4
 1155              		.cfi_def_cfa_offset 16
 1156              	.LVL112:
 1157 0040 04B0     		add	sp, sp, #16
 1158              	.LCFI21:
 1159              		.cfi_def_cfa_offset 0
 1160 0042 7047     		bx	lr
 1161              		.cfi_endproc
 1162              	.LFE68:
 1164              		.section	.text.dischargeCellGroups,"ax",%progbits
 1165              		.align	1
 1166              		.global	dischargeCellGroups
 1167              		.syntax unified
 1168              		.thumb
 1169              		.thumb_func
 1170              		.fpu softvfp
 1172              	dischargeCellGroups:
 1173              	.LFB75:
 523:Src/LTC6811.c **** 	
 1174              		.loc 1 523 0
 1175              		.cfi_startproc
 1176              		@ args = 100, pretend = 16, frame = 0
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 1178              	.LVL113:
 1179 0000 84B0     		sub	sp, sp, #16
 1180              	.LCFI22:
 1181              		.cfi_def_cfa_offset 16
 1182 0002 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccuL4tVn.s 			page 37


 1183              	.LCFI23:
 1184              		.cfi_def_cfa_offset 28
 1185              		.cfi_offset 4, -28
 1186              		.cfi_offset 5, -24
 1187              		.cfi_offset 14, -20
 1188 0004 97B0     		sub	sp, sp, #92
 1189              	.LCFI24:
 1190              		.cfi_def_cfa_offset 120
 1191 0006 1AAC     		add	r4, sp, #104
 1192 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1193 000c 329D     		ldr	r5, [sp, #200]
 1194              	.LVL114:
 529:Src/LTC6811.c **** 
 1195              		.loc 1 529 0
 1196 000e FFF7FEFF 		bl	wakeup_idle
 1197              	.LVL115:
 1198              	.LBB11:
 531:Src/LTC6811.c **** 
 1199              		.loc 1 531 0
 1200 0012 0024     		movs	r4, #0
 1201              	.LVL116:
 1202 0014 29E0     		b	.L68
 1203              	.LVL117:
 1204              	.L69:
 533:Src/LTC6811.c **** 		cfg->DischargeCell2 = cellDischarge[i][1];
 1205              		.loc 1 533 0 discriminator 3
 1206 0016 05EBC403 		add	r3, r5, r4, lsl #3
 1207 001a 15F83420 		ldrb	r2, [r5, r4, lsl #3]	@ zero_extendqisi2
 1208 001e 8DF8B620 		strb	r2, [sp, #182]
 534:Src/LTC6811.c **** 		cfg->DischargeCell3 = cellDischarge[i][2];
 1209              		.loc 1 534 0 discriminator 3
 1210 0022 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1211 0024 8DF8B720 		strb	r2, [sp, #183]
 535:Src/LTC6811.c **** 		cfg->DischargeCell4 = cellDischarge[i][3];
 1212              		.loc 1 535 0 discriminator 3
 1213 0028 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1214 002a 8DF8B820 		strb	r2, [sp, #184]
 536:Src/LTC6811.c **** 		cfg->DischargeCell7 = cellDischarge[i][4];
 1215              		.loc 1 536 0 discriminator 3
 1216 002e DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1217 0030 8DF8B920 		strb	r2, [sp, #185]
 537:Src/LTC6811.c **** 		cfg->DischargeCell8 = cellDischarge[i][5];
 1218              		.loc 1 537 0 discriminator 3
 1219 0034 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 1220 0036 8DF8BC20 		strb	r2, [sp, #188]
 538:Src/LTC6811.c **** 		cfg->DischargeCell9 = cellDischarge[i][6];
 1221              		.loc 1 538 0 discriminator 3
 1222 003a 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1223 003c 8DF8BD20 		strb	r2, [sp, #189]
 539:Src/LTC6811.c **** 		cfg->DischargeCell10 = cellDischarge[i][7];
 1224              		.loc 1 539 0 discriminator 3
 1225 0040 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1226 0042 8DF8BE20 		strb	r2, [sp, #190]
 540:Src/LTC6811.c **** 
 1227              		.loc 1 540 0 discriminator 3
 1228 0046 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1229 0048 8DF8BF30 		strb	r3, [sp, #191]
ARM GAS  /tmp/ccuL4tVn.s 			page 38


 542:Src/LTC6811.c **** 
 1230              		.loc 1 542 0 discriminator 3
 1231 004c 1AAB     		add	r3, sp, #104
 1232              	.LVL118:
 1233 004e 2344     		add	r3, r3, r4
 1234              	.LVL119:
 1235 0050 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1236 0052 1493     		str	r3, [sp, #80]
 1237 0054 4E22     		movs	r2, #78
 1238 0056 1EA9     		add	r1, sp, #120
 1239 0058 6846     		mov	r0, sp
 1240 005a FFF7FEFF 		bl	memcpy
 1241              	.LVL120:
 1242 005e 1AAB     		add	r3, sp, #104
 1243              	.LVL121:
 1244 0060 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1245              	.LVL122:
 1246 0062 FFF7FEFF 		bl	writeConfigAddress
 1247              	.LVL123:
 531:Src/LTC6811.c **** 
 1248              		.loc 1 531 0 discriminator 3
 1249 0066 0134     		adds	r4, r4, #1
 1250              	.LVL124:
 1251 0068 E4B2     		uxtb	r4, r4
 1252              	.LVL125:
 1253              	.L68:
 531:Src/LTC6811.c **** 
 1254              		.loc 1 531 0 is_stmt 0 discriminator 1
 1255 006a 9DF86830 		ldrb	r3, [sp, #104]	@ zero_extendqisi2
 1256 006e A342     		cmp	r3, r4
 1257 0070 D1D8     		bhi	.L69
 1258              	.LBE11:
 557:Src/LTC6811.c **** 
 1259              		.loc 1 557 0 is_stmt 1
 1260 0072 0020     		movs	r0, #0
 1261 0074 17B0     		add	sp, sp, #92
 1262              	.LCFI25:
 1263              		.cfi_def_cfa_offset 28
 1264              		@ sp needed
 1265 0076 BDE83040 		pop	{r4, r5, lr}
 1266              	.LCFI26:
 1267              		.cfi_restore 14
 1268              		.cfi_restore 5
 1269              		.cfi_restore 4
 1270              		.cfi_def_cfa_offset 16
 1271              	.LVL126:
 1272 007a 04B0     		add	sp, sp, #16
 1273              	.LCFI27:
 1274              		.cfi_def_cfa_offset 0
 1275              	.LVL127:
 1276 007c 7047     		bx	lr
 1277              		.cfi_endproc
 1278              	.LFE75:
 1280              		.section	.text.sendBroadcastCommand,"ax",%progbits
 1281              		.align	1
 1282              		.global	sendBroadcastCommand
 1283              		.syntax unified
ARM GAS  /tmp/ccuL4tVn.s 			page 39


 1284              		.thumb
 1285              		.thumb_func
 1286              		.fpu softvfp
 1288              	sendBroadcastCommand:
 1289              	.LFB78:
 687:Src/LTC6811.c **** 	
 1290              		.loc 1 687 0
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 8
 1293              		@ frame_needed = 0, uses_anonymous_args = 0
 1294              	.LVL128:
 1295 0000 00B5     		push	{lr}
 1296              	.LCFI28:
 1297              		.cfi_def_cfa_offset 4
 1298              		.cfi_offset 14, -4
 1299 0002 83B0     		sub	sp, sp, #12
 1300              	.LCFI29:
 1301              		.cfi_def_cfa_offset 16
 692:Src/LTC6811.c **** 	cmd[1] = (uint8_t) (command & 0xFF);
 1302              		.loc 1 692 0
 1303 0004 C0F30323 		ubfx	r3, r0, #8, #4
 1304 0008 8DF80430 		strb	r3, [sp, #4]
 693:Src/LTC6811.c **** 	
 1305              		.loc 1 693 0
 1306 000c 8DF80500 		strb	r0, [sp, #5]
 695:Src/LTC6811.c **** 	
 1307              		.loc 1 695 0
 1308 0010 01A9     		add	r1, sp, #4
 1309 0012 0220     		movs	r0, #2
 1310              	.LVL129:
 1311 0014 FFF7FEFF 		bl	calculatePEC
 1312              	.LVL130:
 697:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 1313              		.loc 1 697 0
 1314 0018 030A     		lsrs	r3, r0, #8
 1315 001a 8DF80630 		strb	r3, [sp, #6]
 698:Src/LTC6811.c **** 	
 1316              		.loc 1 698 0
 1317 001e 8DF80700 		strb	r0, [sp, #7]
 700:Src/LTC6811.c **** };
 1318              		.loc 1 700 0
 1319 0022 0421     		movs	r1, #4
 1320 0024 0DEB0100 		add	r0, sp, r1
 1321              	.LVL131:
 1322 0028 FFF7FEFF 		bl	SPIWrite
 1323              	.LVL132:
 701:Src/LTC6811.c **** 
 1324              		.loc 1 701 0
 1325 002c 03B0     		add	sp, sp, #12
 1326              	.LCFI30:
 1327              		.cfi_def_cfa_offset 4
 1328              		@ sp needed
 1329 002e 5DF804FB 		ldr	pc, [sp], #4
 1330              		.cfi_endproc
 1331              	.LFE78:
 1333              		.section	.text.readAllCellVoltages,"ax",%progbits
 1334              		.align	1
ARM GAS  /tmp/ccuL4tVn.s 			page 40


 1335              		.global	readAllCellVoltages
 1336              		.syntax unified
 1337              		.thumb
 1338              		.thumb_func
 1339              		.fpu softvfp
 1341              	readAllCellVoltages:
 1342              	.LFB70:
 204:Src/LTC6811.c **** 
 1343              		.loc 1 204 0
 1344              		.cfi_startproc
 1345              		@ args = 100, pretend = 16, frame = 24
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347              	.LVL133:
 1348 0000 84B0     		sub	sp, sp, #16
 1349              	.LCFI31:
 1350              		.cfi_def_cfa_offset 16
 1351 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1352              	.LCFI32:
 1353              		.cfi_def_cfa_offset 36
 1354              		.cfi_offset 4, -36
 1355              		.cfi_offset 5, -32
 1356              		.cfi_offset 6, -28
 1357              		.cfi_offset 7, -24
 1358              		.cfi_offset 14, -20
 1359 0004 87B0     		sub	sp, sp, #28
 1360              	.LCFI33:
 1361              		.cfi_def_cfa_offset 64
 1362 0006 0CAC     		add	r4, sp, #48
 1363 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1364 000c 249C     		ldr	r4, [sp, #144]
 1365              	.LVL134:
 254:Src/LTC6811.c **** 
 1366              		.loc 1 254 0
 1367 000e FFF7FEFF 		bl	wakeup_idle
 1368              	.LVL135:
 256:Src/LTC6811.c **** 	sendBroadcastCommand(StartCellVoltageADCConversionAll);
 1369              		.loc 1 256 0
 1370 0012 40F21170 		movw	r0, #1809
 1371 0016 FFF7FEFF 		bl	sendBroadcastCommand
 1372              	.LVL136:
 257:Src/LTC6811.c **** 	HAL_Delay(20);
 1373              		.loc 1 257 0
 1374 001a 4FF41870 		mov	r0, #608
 1375 001e FFF7FEFF 		bl	sendBroadcastCommand
 1376              	.LVL137:
 258:Src/LTC6811.c **** 
 1377              		.loc 1 258 0
 1378 0022 1420     		movs	r0, #20
 1379 0024 FFF7FEFF 		bl	HAL_Delay
 1380              	.LVL138:
 260:Src/LTC6811.c **** 
 1381              		.loc 1 260 0
 1382 0028 FFF7FEFF 		bl	wakeup_idle
 1383              	.LVL139:
 1384              	.LBB12:
 262:Src/LTC6811.c **** 
 1385              		.loc 1 262 0
ARM GAS  /tmp/ccuL4tVn.s 			page 41


 1386 002c 0025     		movs	r5, #0
 1387              	.LBE12:
 252:Src/LTC6811.c **** 
 1388              		.loc 1 252 0
 1389 002e 0127     		movs	r7, #1
 1390              	.LBB15:
 262:Src/LTC6811.c **** 
 1391              		.loc 1 262 0
 1392 0030 59E0     		b	.L74
 1393              	.LVL140:
 1394              	.L76:
 1395              	.LBB13:
 269:Src/LTC6811.c **** 			bmsData[(board * 8) + cell][0] = (uint8_t) ((board * 8) + cell + 1); //cell number
 1396              		.loc 1 269 0 discriminator 2
 1397 0032 0133     		adds	r3, r3, #1
 1398              	.LVL141:
 1399 0034 DBB2     		uxtb	r3, r3
 1400              	.LVL142:
 1401              	.L75:
 269:Src/LTC6811.c **** 			bmsData[(board * 8) + cell][0] = (uint8_t) ((board * 8) + cell + 1); //cell number
 1402              		.loc 1 269 0 is_stmt 0 discriminator 1
 1403 0036 072B     		cmp	r3, #7
 1404 0038 14D8     		bhi	.L80
 270:Src/LTC6811.c **** 			bmsData[(board * 8) + cell][1] = 0; //clear status byte 
 1405              		.loc 1 270 0 is_stmt 1
 1406 003a 03EBC502 		add	r2, r3, r5, lsl #3
 1407 003e D2B2     		uxtb	r2, r2
 1408 0040 03EBC601 		add	r1, r3, r6, lsl #3
 1409 0044 01EB4101 		add	r1, r1, r1, lsl #1
 1410 0048 4FEA410C 		lsl	ip, r1, #1
 1411 004c 04EB0C01 		add	r1, r4, ip
 1412 0050 0132     		adds	r2, r2, #1
 1413 0052 04F80C20 		strb	r2, [r4, ip]
 271:Src/LTC6811.c **** 			if (PEC_check[board])
 1414              		.loc 1 271 0
 1415 0056 0022     		movs	r2, #0
 1416 0058 4A70     		strb	r2, [r1, #1]
 272:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00000010; //set valid data bit
 1417              		.loc 1 272 0
 1418 005a 0028     		cmp	r0, #0
 1419 005c E9D0     		beq	.L76
 273:Src/LTC6811.c **** 		}
 1420              		.loc 1 273 0
 1421 005e 0222     		movs	r2, #2
 1422 0060 4A70     		strb	r2, [r1, #1]
 1423 0062 E6E7     		b	.L76
 1424              	.L80:
 1425              	.LBE13:
 277:Src/LTC6811.c **** 		bmsData[(board * 8) + 0][3] = (uint8_t) (boardVoltage[0] & 0xFF); //cell 1, voltage L
 1426              		.loc 1 277 0 discriminator 2
 1427 0064 BDF80010 		ldrh	r1, [sp]
 1428 0068 06EB4606 		add	r6, r6, r6, lsl #1
 1429 006c 3301     		lsls	r3, r6, #4
 1430              	.LVL143:
 1431 006e E218     		adds	r2, r4, r3
 1432 0070 080A     		lsrs	r0, r1, #8
 1433 0072 9070     		strb	r0, [r2, #2]
ARM GAS  /tmp/ccuL4tVn.s 			page 42


 278:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][2] = (uint8_t) ((boardVoltage[1] >> 8) & 0xFF); //cell 2, voltage H
 1434              		.loc 1 278 0 discriminator 2
 1435 0074 D170     		strb	r1, [r2, #3]
 279:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][3] = (uint8_t) (boardVoltage[1] & 0xFF); //cell 2, voltage L
 1436              		.loc 1 279 0 discriminator 2
 1437 0076 BDF80210 		ldrh	r1, [sp, #2]
 1438 007a 9A1D     		adds	r2, r3, #6
 1439 007c 2244     		add	r2, r2, r4
 1440 007e 080A     		lsrs	r0, r1, #8
 1441 0080 9070     		strb	r0, [r2, #2]
 280:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][2] = (uint8_t) ((boardVoltage[2] >> 8) & 0xFF); //cell 3, voltage H
 1442              		.loc 1 280 0 discriminator 2
 1443 0082 D170     		strb	r1, [r2, #3]
 281:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][3] = (uint8_t) (boardVoltage[2] & 0xFF); //cell 3, voltage L
 1444              		.loc 1 281 0 discriminator 2
 1445 0084 BDF80410 		ldrh	r1, [sp, #4]
 1446 0088 03F10C02 		add	r2, r3, #12
 1447 008c 2244     		add	r2, r2, r4
 1448 008e 080A     		lsrs	r0, r1, #8
 1449 0090 9070     		strb	r0, [r2, #2]
 282:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][2] = (uint8_t) ((boardVoltage[3] >> 8) & 0xFF); //cell 4, voltage H
 1450              		.loc 1 282 0 discriminator 2
 1451 0092 D170     		strb	r1, [r2, #3]
 283:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][3] = (uint8_t) (boardVoltage[3] & 0xFF); //cell 4, voltage L 
 1452              		.loc 1 283 0 discriminator 2
 1453 0094 BDF80610 		ldrh	r1, [sp, #6]
 1454 0098 03F11202 		add	r2, r3, #18
 1455 009c 2244     		add	r2, r2, r4
 1456 009e 080A     		lsrs	r0, r1, #8
 1457 00a0 9070     		strb	r0, [r2, #2]
 284:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][2] = (uint8_t) ((boardVoltage[6] >> 8) & 0xFF); //cell 7, voltage H
 1458              		.loc 1 284 0 discriminator 2
 1459 00a2 D170     		strb	r1, [r2, #3]
 285:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][3] = (uint8_t) (boardVoltage[6] & 0xFF); //cell 7, voltage L 
 1460              		.loc 1 285 0 discriminator 2
 1461 00a4 BDF80C10 		ldrh	r1, [sp, #12]
 1462 00a8 03F11802 		add	r2, r3, #24
 1463 00ac 2244     		add	r2, r2, r4
 1464 00ae 080A     		lsrs	r0, r1, #8
 1465 00b0 9070     		strb	r0, [r2, #2]
 286:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][2] = (uint8_t) ((boardVoltage[7] >> 8) & 0xFF); //cell 8, voltage H
 1466              		.loc 1 286 0 discriminator 2
 1467 00b2 D170     		strb	r1, [r2, #3]
 287:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][3] = (uint8_t) (boardVoltage[7] & 0xFF); //cell 8, voltage L
 1468              		.loc 1 287 0 discriminator 2
 1469 00b4 BDF80E10 		ldrh	r1, [sp, #14]
 1470 00b8 03F11E02 		add	r2, r3, #30
 1471 00bc 2244     		add	r2, r2, r4
 1472 00be 080A     		lsrs	r0, r1, #8
 1473 00c0 9070     		strb	r0, [r2, #2]
 288:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][2] = (uint8_t) ((boardVoltage[8] >> 8) & 0xFF); //cell 9, voltage H
 1474              		.loc 1 288 0 discriminator 2
 1475 00c2 D170     		strb	r1, [r2, #3]
 289:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][3] = (uint8_t) (boardVoltage[8] & 0xFF); //cell 9, voltage L
 1476              		.loc 1 289 0 discriminator 2
 1477 00c4 BDF81010 		ldrh	r1, [sp, #16]
 1478 00c8 03F12402 		add	r2, r3, #36
ARM GAS  /tmp/ccuL4tVn.s 			page 43


 1479 00cc 2244     		add	r2, r2, r4
 1480 00ce 080A     		lsrs	r0, r1, #8
 1481 00d0 9070     		strb	r0, [r2, #2]
 290:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][2] = (uint8_t) ((boardVoltage[9] >> 8) & 0xFF); //cell 10, voltage H
 1482              		.loc 1 290 0 discriminator 2
 1483 00d2 D170     		strb	r1, [r2, #3]
 291:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][3] = (uint8_t) (boardVoltage[9] & 0xFF); //cell 10, voltage L
 1484              		.loc 1 291 0 discriminator 2
 1485 00d4 BDF81220 		ldrh	r2, [sp, #18]
 1486 00d8 2A33     		adds	r3, r3, #42
 1487 00da 2344     		add	r3, r3, r4
 1488 00dc 110A     		lsrs	r1, r2, #8
 1489 00de 9970     		strb	r1, [r3, #2]
 292:Src/LTC6811.c **** 	
 1490              		.loc 1 292 0 discriminator 2
 1491 00e0 DA70     		strb	r2, [r3, #3]
 262:Src/LTC6811.c **** 
 1492              		.loc 1 262 0 discriminator 2
 1493 00e2 0135     		adds	r5, r5, #1
 1494              	.LVL144:
 1495 00e4 EDB2     		uxtb	r5, r5
 1496              	.LVL145:
 1497              	.L74:
 262:Src/LTC6811.c **** 
 1498              		.loc 1 262 0 is_stmt 0 discriminator 1
 1499 00e6 0B2D     		cmp	r5, #11
 1500 00e8 07D8     		bhi	.L81
 265:Src/LTC6811.c **** 		dataValid &= PEC_check[board];
 1501              		.loc 1 265 0 is_stmt 1
 1502 00ea 2E46     		mov	r6, r5
 1503 00ec 6946     		mov	r1, sp
 1504 00ee 2846     		mov	r0, r5
 1505 00f0 FFF7FEFF 		bl	readCellVoltage
 1506              	.LVL146:
 1507 00f4 0740     		ands	r7, r7, r0
 1508              	.LVL147:
 1509              	.LBB14:
 269:Src/LTC6811.c **** 			bmsData[(board * 8) + cell][0] = (uint8_t) ((board * 8) + cell + 1); //cell number
 1510              		.loc 1 269 0
 1511 00f6 0023     		movs	r3, #0
 1512 00f8 9DE7     		b	.L75
 1513              	.LVL148:
 1514              	.L81:
 1515              	.LBE14:
 1516              	.LBE15:
 302:Src/LTC6811.c **** 
 1517              		.loc 1 302 0
 1518 00fa 3846     		mov	r0, r7
 1519 00fc 07B0     		add	sp, sp, #28
 1520              	.LCFI34:
 1521              		.cfi_def_cfa_offset 36
 1522              		@ sp needed
 1523 00fe BDE8F040 		pop	{r4, r5, r6, r7, lr}
 1524              	.LCFI35:
 1525              		.cfi_restore 14
 1526              		.cfi_restore 7
 1527              		.cfi_restore 6
ARM GAS  /tmp/ccuL4tVn.s 			page 44


 1528              		.cfi_restore 5
 1529              		.cfi_restore 4
 1530              		.cfi_def_cfa_offset 16
 1531              	.LVL149:
 1532 0102 04B0     		add	sp, sp, #16
 1533              	.LCFI36:
 1534              		.cfi_def_cfa_offset 0
 1535 0104 7047     		bx	lr
 1536              		.cfi_endproc
 1537              	.LFE70:
 1539              		.section	.text.readAllCellTemps,"ax",%progbits
 1540              		.align	1
 1541              		.global	readAllCellTemps
 1542              		.syntax unified
 1543              		.thumb
 1544              		.thumb_func
 1545              		.fpu softvfp
 1547              	readAllCellTemps:
 1548              	.LFB72:
 363:Src/LTC6811.c **** 
 1549              		.loc 1 363 0
 1550              		.cfi_startproc
 1551              		@ args = 100, pretend = 16, frame = 16
 1552              		@ frame_needed = 0, uses_anonymous_args = 0
 1553              	.LVL150:
 1554 0000 84B0     		sub	sp, sp, #16
 1555              	.LCFI37:
 1556              		.cfi_def_cfa_offset 16
 1557 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1558              	.LCFI38:
 1559              		.cfi_def_cfa_offset 36
 1560              		.cfi_offset 4, -36
 1561              		.cfi_offset 5, -32
 1562              		.cfi_offset 6, -28
 1563              		.cfi_offset 7, -24
 1564              		.cfi_offset 14, -20
 1565 0004 85B0     		sub	sp, sp, #20
 1566              	.LCFI39:
 1567              		.cfi_def_cfa_offset 56
 1568 0006 0AAC     		add	r4, sp, #40
 1569 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1570 000c 229C     		ldr	r4, [sp, #136]
 1571              	.LVL151:
 371:Src/LTC6811.c **** 	HAL_Delay(2);
 1572              		.loc 1 371 0
 1573 000e FFF7FEFF 		bl	wakeup_idle
 1574              	.LVL152:
 372:Src/LTC6811.c **** 
 1575              		.loc 1 372 0
 1576 0012 0220     		movs	r0, #2
 1577 0014 FFF7FEFF 		bl	HAL_Delay
 1578              	.LVL153:
 374:Src/LTC6811.c **** 	sendBroadcastCommand(StartCellTempVoltageADCConversionAll);
 1579              		.loc 1 374 0
 1580 0018 40F21170 		movw	r0, #1809
 1581 001c FFF7FEFF 		bl	sendBroadcastCommand
 1582              	.LVL154:
ARM GAS  /tmp/ccuL4tVn.s 			page 45


 375:Src/LTC6811.c **** 	HAL_Delay(20);
 1583              		.loc 1 375 0
 1584 0020 4FF48C60 		mov	r0, #1120
 1585 0024 FFF7FEFF 		bl	sendBroadcastCommand
 1586              	.LVL155:
 376:Src/LTC6811.c **** 
 1587              		.loc 1 376 0
 1588 0028 1420     		movs	r0, #20
 1589 002a FFF7FEFF 		bl	HAL_Delay
 1590              	.LVL156:
 378:Src/LTC6811.c **** 	HAL_Delay(2);
 1591              		.loc 1 378 0
 1592 002e FFF7FEFF 		bl	wakeup_idle
 1593              	.LVL157:
 379:Src/LTC6811.c **** 
 1594              		.loc 1 379 0
 1595 0032 0220     		movs	r0, #2
 1596 0034 FFF7FEFF 		bl	HAL_Delay
 1597              	.LVL158:
 1598              	.LBB16:
 381:Src/LTC6811.c **** 
 1599              		.loc 1 381 0
 1600 0038 0026     		movs	r6, #0
 1601              	.LBE16:
 369:Src/LTC6811.c **** 
 1602              		.loc 1 369 0
 1603 003a 0127     		movs	r7, #1
 1604              	.LBB19:
 381:Src/LTC6811.c **** 
 1605              		.loc 1 381 0
 1606 003c 6BE0     		b	.L83
 1607              	.LVL159:
 1608              	.L87:
 1609              	.LBB17:
 388:Src/LTC6811.c **** 			if (PEC_check[board])
 1610              		.loc 1 388 0 discriminator 2
 1611 003e 0133     		adds	r3, r3, #1
 1612              	.LVL160:
 1613 0040 DBB2     		uxtb	r3, r3
 1614              	.LVL161:
 1615              	.L84:
 388:Src/LTC6811.c **** 			if (PEC_check[board])
 1616              		.loc 1 388 0 is_stmt 0 discriminator 1
 1617 0042 072B     		cmp	r3, #7
 1618 0044 2ED8     		bhi	.L91
 389:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00000010; //set valid data bit
 1619              		.loc 1 389 0 is_stmt 1
 1620 0046 48B1     		cbz	r0, .L85
 390:Src/LTC6811.c **** 
 1621              		.loc 1 390 0
 1622 0048 03EBC501 		add	r1, r3, r5, lsl #3
 1623 004c 01EB4101 		add	r1, r1, r1, lsl #1
 1624 0050 4A00     		lsls	r2, r1, #1
 1625 0052 2244     		add	r2, r2, r4
 1626 0054 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1627 0056 41F00201 		orr	r1, r1, #2
 1628 005a 5170     		strb	r1, [r2, #1]
ARM GAS  /tmp/ccuL4tVn.s 			page 46


 1629              	.L85:
 395:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00010000; //set OT bit
 1630              		.loc 1 395 0
 1631 005c 5A08     		lsrs	r2, r3, #1
 1632 005e 04A9     		add	r1, sp, #16
 1633 0060 1144     		add	r1, r1, r2
 1634 0062 11F8101C 		ldrb	r1, [r1, #-16]	@ zero_extendqisi2
 1635 0066 61B1     		cbz	r1, .L86
 396:Src/LTC6811.c **** 
 1636              		.loc 1 396 0
 1637 0068 03EBC50C 		add	ip, r3, r5, lsl #3
 1638 006c 0CEB4C0C 		add	ip, ip, ip, lsl #1
 1639 0070 4FEA4C01 		lsl	r1, ip, #1
 1640 0074 2144     		add	r1, r1, r4
 1641 0076 91F801C0 		ldrb	ip, [r1, #1]	@ zero_extendqisi2
 1642 007a 4CF0100C 		orr	ip, ip, #16
 1643 007e 81F801C0 		strb	ip, [r1, #1]
 1644              	.L86:
 398:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00001000; //set temp DC bit
 1645              		.loc 1 398 0
 1646 0082 04A9     		add	r1, sp, #16
 1647 0084 0A44     		add	r2, r2, r1
 1648 0086 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
 1649 008a 002A     		cmp	r2, #0
 1650 008c D7D0     		beq	.L87
 399:Src/LTC6811.c **** 		}
 1651              		.loc 1 399 0
 1652 008e 03EBC501 		add	r1, r3, r5, lsl #3
 1653 0092 01EB4101 		add	r1, r1, r1, lsl #1
 1654 0096 4A00     		lsls	r2, r1, #1
 1655 0098 2244     		add	r2, r2, r4
 1656 009a 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1657 009c 41F00801 		orr	r1, r1, #8
 1658 00a0 5170     		strb	r1, [r2, #1]
 1659 00a2 CCE7     		b	.L87
 1660              	.L91:
 1661              	.LBE17:
 403:Src/LTC6811.c **** 		bmsData[(board * 8) + 0][5] = (uint8_t) (boardTemp[0] & 0xFF); //temp1 L
 1662              		.loc 1 403 0 discriminator 2
 1663 00a4 BDF80820 		ldrh	r2, [sp, #8]
 1664 00a8 05EB4505 		add	r5, r5, r5, lsl #1
 1665 00ac 2B01     		lsls	r3, r5, #4
 1666              	.LVL162:
 1667 00ae E118     		adds	r1, r4, r3
 1668 00b0 100A     		lsrs	r0, r2, #8
 1669 00b2 0871     		strb	r0, [r1, #4]
 404:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][4] = (uint8_t) ((boardTemp[0] >> 8) & 0xFF); //temp1 H
 1670              		.loc 1 404 0 discriminator 2
 1671 00b4 D2B2     		uxtb	r2, r2
 1672 00b6 4A71     		strb	r2, [r1, #5]
 405:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][5] = (uint8_t) (boardTemp[0] & 0xFF); //temp1 L
 1673              		.loc 1 405 0 discriminator 2
 1674 00b8 991D     		adds	r1, r3, #6
 1675 00ba 2144     		add	r1, r1, r4
 1676 00bc 0871     		strb	r0, [r1, #4]
 406:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][4] = (uint8_t) ((boardTemp[1] >> 8) & 0xFF); //temp2 H
 1677              		.loc 1 406 0 discriminator 2
ARM GAS  /tmp/ccuL4tVn.s 			page 47


 1678 00be 4A71     		strb	r2, [r1, #5]
 407:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][5] = (uint8_t) (boardTemp[1] & 0xFF); //temp2 L
 1679              		.loc 1 407 0 discriminator 2
 1680 00c0 BDF80A20 		ldrh	r2, [sp, #10]
 1681 00c4 03F10C01 		add	r1, r3, #12
 1682 00c8 2144     		add	r1, r1, r4
 1683 00ca 100A     		lsrs	r0, r2, #8
 1684 00cc 0871     		strb	r0, [r1, #4]
 408:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][4] = (uint8_t) ((boardTemp[1] >> 8) & 0xFF); //temp2 H
 1685              		.loc 1 408 0 discriminator 2
 1686 00ce D2B2     		uxtb	r2, r2
 1687 00d0 4A71     		strb	r2, [r1, #5]
 409:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][5] = (uint8_t) (boardTemp[1] & 0xFF); //temp2 L
 1688              		.loc 1 409 0 discriminator 2
 1689 00d2 03F11201 		add	r1, r3, #18
 1690 00d6 2144     		add	r1, r1, r4
 1691 00d8 0871     		strb	r0, [r1, #4]
 410:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][4] = (uint8_t) ((boardTemp[2] >> 8) & 0xFF); //temp3 H
 1692              		.loc 1 410 0 discriminator 2
 1693 00da 4A71     		strb	r2, [r1, #5]
 411:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][5] = (uint8_t) (boardTemp[2] & 0xFF); //temp3 L
 1694              		.loc 1 411 0 discriminator 2
 1695 00dc BDF80C20 		ldrh	r2, [sp, #12]
 1696 00e0 03F11801 		add	r1, r3, #24
 1697 00e4 2144     		add	r1, r1, r4
 1698 00e6 100A     		lsrs	r0, r2, #8
 1699 00e8 0871     		strb	r0, [r1, #4]
 412:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][4] = (uint8_t) ((boardTemp[2] >> 8) & 0xFF); //temp3 H
 1700              		.loc 1 412 0 discriminator 2
 1701 00ea D2B2     		uxtb	r2, r2
 1702 00ec 4A71     		strb	r2, [r1, #5]
 413:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][5] = (uint8_t) (boardTemp[2] & 0xFF); //temp3 L
 1703              		.loc 1 413 0 discriminator 2
 1704 00ee 03F11E01 		add	r1, r3, #30
 1705 00f2 2144     		add	r1, r1, r4
 1706 00f4 0871     		strb	r0, [r1, #4]
 414:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][4] = (uint8_t) ((boardTemp[3] >> 8) & 0xFF); //temp4 H
 1707              		.loc 1 414 0 discriminator 2
 1708 00f6 4A71     		strb	r2, [r1, #5]
 415:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][5] = (uint8_t) (boardTemp[3] & 0xFF); //temp4 L
 1709              		.loc 1 415 0 discriminator 2
 1710 00f8 BDF80E20 		ldrh	r2, [sp, #14]
 1711 00fc 03F12401 		add	r1, r3, #36
 1712 0100 2144     		add	r1, r1, r4
 1713 0102 100A     		lsrs	r0, r2, #8
 1714 0104 0871     		strb	r0, [r1, #4]
 416:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][4] = (uint8_t) ((boardTemp[3] >> 8) & 0xFF); //temp4 H
 1715              		.loc 1 416 0 discriminator 2
 1716 0106 D2B2     		uxtb	r2, r2
 1717 0108 4A71     		strb	r2, [r1, #5]
 417:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][5] = (uint8_t) (boardTemp[3] & 0xFF); //temp4 L
 1718              		.loc 1 417 0 discriminator 2
 1719 010a 2A33     		adds	r3, r3, #42
 1720 010c 2344     		add	r3, r3, r4
 1721 010e 1871     		strb	r0, [r3, #4]
 418:Src/LTC6811.c **** 	}
 1722              		.loc 1 418 0 discriminator 2
ARM GAS  /tmp/ccuL4tVn.s 			page 48


 1723 0110 5A71     		strb	r2, [r3, #5]
 381:Src/LTC6811.c **** 
 1724              		.loc 1 381 0 discriminator 2
 1725 0112 0136     		adds	r6, r6, #1
 1726              	.LVL163:
 1727 0114 F6B2     		uxtb	r6, r6
 1728              	.LVL164:
 1729              	.L83:
 381:Src/LTC6811.c **** 
 1730              		.loc 1 381 0 is_stmt 0 discriminator 1
 1731 0116 0B2E     		cmp	r6, #11
 1732 0118 09D8     		bhi	.L92
 384:Src/LTC6811.c **** 		dataValid &= PEC_check[board];
 1733              		.loc 1 384 0 is_stmt 1
 1734 011a 3546     		mov	r5, r6
 1735 011c 6B46     		mov	r3, sp
 1736 011e 01AA     		add	r2, sp, #4
 1737 0120 02A9     		add	r1, sp, #8
 1738 0122 3046     		mov	r0, r6
 1739 0124 FFF7FEFF 		bl	readCellTemp
 1740              	.LVL165:
 1741 0128 0740     		ands	r7, r7, r0
 1742              	.LVL166:
 1743              	.LBB18:
 388:Src/LTC6811.c **** 			if (PEC_check[board])
 1744              		.loc 1 388 0
 1745 012a 0023     		movs	r3, #0
 1746 012c 89E7     		b	.L84
 1747              	.LVL167:
 1748              	.L92:
 1749              	.LBE18:
 1750              	.LBE19:
 427:Src/LTC6811.c **** 
 1751              		.loc 1 427 0
 1752 012e 3846     		mov	r0, r7
 1753 0130 05B0     		add	sp, sp, #20
 1754              	.LCFI40:
 1755              		.cfi_def_cfa_offset 36
 1756              		@ sp needed
 1757 0132 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 1758              	.LCFI41:
 1759              		.cfi_restore 14
 1760              		.cfi_restore 7
 1761              		.cfi_restore 6
 1762              		.cfi_restore 5
 1763              		.cfi_restore 4
 1764              		.cfi_def_cfa_offset 16
 1765              	.LVL168:
 1766 0136 04B0     		add	sp, sp, #16
 1767              	.LCFI42:
 1768              		.cfi_def_cfa_offset 0
 1769 0138 7047     		bx	lr
 1770              		.cfi_endproc
 1771              	.LFE72:
 1773              		.section	.text.checkAllCellConnections,"ax",%progbits
 1774              		.align	1
 1775              		.global	checkAllCellConnections
ARM GAS  /tmp/ccuL4tVn.s 			page 49


 1776              		.syntax unified
 1777              		.thumb
 1778              		.thumb_func
 1779              		.fpu softvfp
 1781              	checkAllCellConnections:
 1782              	.LFB74:
 471:Src/LTC6811.c **** 	
 1783              		.loc 1 471 0
 1784              		.cfi_startproc
 1785              		@ args = 100, pretend = 16, frame = 0
 1786              		@ frame_needed = 1, uses_anonymous_args = 0
 1787              	.LVL169:
 1788 0000 84B0     		sub	sp, sp, #16
 1789              	.LCFI43:
 1790              		.cfi_def_cfa_offset 16
 1791 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1792              	.LCFI44:
 1793              		.cfi_def_cfa_offset 48
 1794              		.cfi_offset 3, -48
 1795              		.cfi_offset 4, -44
 1796              		.cfi_offset 5, -40
 1797              		.cfi_offset 6, -36
 1798              		.cfi_offset 7, -32
 1799              		.cfi_offset 8, -28
 1800              		.cfi_offset 9, -24
 1801              		.cfi_offset 14, -20
 1802 0006 00AF     		add	r7, sp, #0
 1803              	.LCFI45:
 1804              		.cfi_def_cfa_register 7
 1805 0008 07F12004 		add	r4, r7, #32
 1806 000c 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1807 0010 D7F88080 		ldr	r8, [r7, #128]
 473:Src/LTC6811.c **** 	uint16_t cellVoltage;
 1808              		.loc 1 473 0
 1809 0014 97F84130 		ldrb	r3, [r7, #65]	@ zero_extendqisi2
 1810              	.LVL170:
 1811 0018 5B00     		lsls	r3, r3, #1
 1812              	.LVL171:
 1813 001a 0833     		adds	r3, r3, #8
 1814 001c 03F47E73 		and	r3, r3, #1016
 1815 0020 ADEB030D 		sub	sp, sp, r3
 1816 0024 6C46     		mov	r4, sp
 1817              	.LVL172:
 479:Src/LTC6811.c **** 
 1818              		.loc 1 479 0
 1819 0026 FFF7FEFF 		bl	wakeup_idle
 1820              	.LVL173:
 482:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 1821              		.loc 1 482 0
 1822 002a 40F21170 		movw	r0, #1809
 1823 002e FFF7FEFF 		bl	sendBroadcastCommand
 1824              	.LVL174:
 483:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 1825              		.loc 1 483 0
 1826 0032 40F22920 		movw	r0, #553
 1827 0036 FFF7FEFF 		bl	sendBroadcastCommand
 1828              	.LVL175:
ARM GAS  /tmp/ccuL4tVn.s 			page 50


 484:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 1829              		.loc 1 484 0
 1830 003a 40F22920 		movw	r0, #553
 1831 003e FFF7FEFF 		bl	sendBroadcastCommand
 1832              	.LVL176:
 485:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 1833              		.loc 1 485 0
 1834 0042 40F22920 		movw	r0, #553
 1835 0046 FFF7FEFF 		bl	sendBroadcastCommand
 1836              	.LVL177:
 486:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 1837              		.loc 1 486 0
 1838 004a 40F22920 		movw	r0, #553
 1839 004e FFF7FEFF 		bl	sendBroadcastCommand
 1840              	.LVL178:
 487:Src/LTC6811.c **** 	HAL_Delay(20);
 1841              		.loc 1 487 0
 1842 0052 40F22920 		movw	r0, #553
 1843 0056 FFF7FEFF 		bl	sendBroadcastCommand
 1844              	.LVL179:
 488:Src/LTC6811.c **** 
 1845              		.loc 1 488 0
 1846 005a 1420     		movs	r0, #20
 1847 005c FFF7FEFF 		bl	HAL_Delay
 1848              	.LVL180:
 490:Src/LTC6811.c **** 
 1849              		.loc 1 490 0
 1850 0060 FFF7FEFF 		bl	wakeup_idle
 1851              	.LVL181:
 1852              	.LBB20:
 492:Src/LTC6811.c **** 
 1853              		.loc 1 492 0
 1854 0064 0025     		movs	r5, #0
 1855              	.LBE20:
 477:Src/LTC6811.c **** 
 1856              		.loc 1 477 0
 1857 0066 4FF00109 		mov	r9, #1
 1858              	.LBB23:
 492:Src/LTC6811.c **** 
 1859              		.loc 1 492 0
 1860 006a 1DE0     		b	.L94
 1861              	.LVL182:
 1862              	.L96:
 1863              	.LBB21:
 502:Src/LTC6811.c **** 
 1864              		.loc 1 502 0 discriminator 2
 1865 006c 0132     		adds	r2, r2, #1
 1866              	.LVL183:
 1867 006e D2B2     		uxtb	r2, r2
 1868              	.LVL184:
 1869              	.L95:
 502:Src/LTC6811.c **** 
 1870              		.loc 1 502 0 is_stmt 0 discriminator 1
 1871 0070 97F84230 		ldrb	r3, [r7, #66]	@ zero_extendqisi2
 1872 0074 9A42     		cmp	r2, r3
 1873 0076 15D2     		bcs	.L100
 1874              	.LVL185:
ARM GAS  /tmp/ccuL4tVn.s 			page 51


 505:Src/LTC6811.c **** 			cellVoltage = cellVoltage << 8;
 1875              		.loc 1 505 0 is_stmt 1
 1876 0078 03FB0623 		mla	r3, r3, r6, r2
 1877 007c 03EB4303 		add	r3, r3, r3, lsl #1
 1878 0080 5900     		lsls	r1, r3, #1
 1879 0082 4144     		add	r1, r1, r8
 1880 0084 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 1881              	.LVL186:
 507:Src/LTC6811.c **** 
 1882              		.loc 1 507 0
 1883 0086 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 1884 0088 03EB0023 		add	r3, r3, r0, lsl #8
 1885 008c 9BB2     		uxth	r3, r3
 1886              	.LVL187:
 509:Src/LTC6811.c **** 				bmsData[(board * cfg.numOfCellsPerIC) + cell][1] |= 0b00000001; //negligible drop in voltage, s
 1887              		.loc 1 509 0
 1888 008e 34F81200 		ldrh	r0, [r4, r2, lsl #1]
 1889 0092 1B1A     		subs	r3, r3, r0
 1890              	.LVL188:
 1891 0094 B3F57A7F 		cmp	r3, #1000
 1892 0098 E8DA     		bge	.L96
 510:Src/LTC6811.c **** 			}
 1893              		.loc 1 510 0
 1894 009a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1895 009c 43F00103 		orr	r3, r3, #1
 1896 00a0 4B70     		strb	r3, [r1, #1]
 1897 00a2 E3E7     		b	.L96
 1898              	.LVL189:
 1899              	.L100:
 1900              	.LBE21:
 492:Src/LTC6811.c **** 
 1901              		.loc 1 492 0 discriminator 2
 1902 00a4 0135     		adds	r5, r5, #1
 1903              	.LVL190:
 1904 00a6 EDB2     		uxtb	r5, r5
 1905              	.LVL191:
 1906              	.L94:
 492:Src/LTC6811.c **** 
 1907              		.loc 1 492 0 is_stmt 0 discriminator 1
 1908 00a8 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 1909 00ac 9D42     		cmp	r5, r3
 1910 00ae 13D2     		bcs	.L101
 494:Src/LTC6811.c **** 		dataValid &= PEC_check[board];
 1911              		.loc 1 494 0 is_stmt 1
 1912 00b0 2E46     		mov	r6, r5
 1913 00b2 07F12003 		add	r3, r7, #32
 1914 00b6 2B44     		add	r3, r3, r5
 1915 00b8 2146     		mov	r1, r4
 1916 00ba 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1917 00bc FFF7FEFF 		bl	readCellVoltage
 1918              	.LVL192:
 1919 00c0 09EA0009 		and	r9, r9, r0
 1920              	.LVL193:
 497:Src/LTC6811.c **** 		ADOWvoltage[5] = ADOWvoltage[7];
 1921              		.loc 1 497 0
 1922 00c4 A389     		ldrh	r3, [r4, #12]
 1923 00c6 2381     		strh	r3, [r4, #8]	@ movhi
ARM GAS  /tmp/ccuL4tVn.s 			page 52


 498:Src/LTC6811.c **** 		ADOWvoltage[6] = ADOWvoltage[8];
 1924              		.loc 1 498 0
 1925 00c8 E389     		ldrh	r3, [r4, #14]
 1926 00ca 6381     		strh	r3, [r4, #10]	@ movhi
 499:Src/LTC6811.c **** 		ADOWvoltage[7] = ADOWvoltage[9];
 1927              		.loc 1 499 0
 1928 00cc 238A     		ldrh	r3, [r4, #16]
 1929 00ce A381     		strh	r3, [r4, #12]	@ movhi
 500:Src/LTC6811.c **** 
 1930              		.loc 1 500 0
 1931 00d0 638A     		ldrh	r3, [r4, #18]
 1932 00d2 E381     		strh	r3, [r4, #14]	@ movhi
 1933              	.LVL194:
 1934              	.LBB22:
 502:Src/LTC6811.c **** 
 1935              		.loc 1 502 0
 1936 00d4 0022     		movs	r2, #0
 1937 00d6 CBE7     		b	.L95
 1938              	.LVL195:
 1939              	.L101:
 1940              	.LBE22:
 1941              	.LBE23:
 521:Src/LTC6811.c **** 
 1942              		.loc 1 521 0
 1943 00d8 4846     		mov	r0, r9
 1944 00da BD46     		mov	sp, r7
 1945              	.LCFI46:
 1946              		.cfi_def_cfa_register 13
 1947              		@ sp needed
 1948 00dc BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 1949              	.LCFI47:
 1950              		.cfi_restore 14
 1951              		.cfi_restore 9
 1952              		.cfi_restore 8
 1953              		.cfi_restore 7
 1954              		.cfi_restore 6
 1955              		.cfi_restore 5
 1956              		.cfi_restore 4
 1957              		.cfi_restore 3
 1958              		.cfi_def_cfa_offset 16
 1959              	.LVL196:
 1960 00e0 04B0     		add	sp, sp, #16
 1961              	.LCFI48:
 1962              		.cfi_def_cfa_offset 0
 1963 00e2 7047     		bx	lr
 1964              		.cfi_endproc
 1965              	.LFE74:
 1967              		.section	.text.sendAddressCommand,"ax",%progbits
 1968              		.align	1
 1969              		.global	sendAddressCommand
 1970              		.syntax unified
 1971              		.thumb
 1972              		.thumb_func
 1973              		.fpu softvfp
 1975              	sendAddressCommand:
 1976              	.LFB79:
 703:Src/LTC6811.c **** 	
ARM GAS  /tmp/ccuL4tVn.s 			page 53


 1977              		.loc 1 703 0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 8
 1980              		@ frame_needed = 0, uses_anonymous_args = 0
 1981              	.LVL197:
 1982 0000 70B5     		push	{r4, r5, r6, lr}
 1983              	.LCFI49:
 1984              		.cfi_def_cfa_offset 16
 1985              		.cfi_offset 4, -16
 1986              		.cfi_offset 5, -12
 1987              		.cfi_offset 6, -8
 1988              		.cfi_offset 14, -4
 1989 0002 82B0     		sub	sp, sp, #8
 1990              	.LCFI50:
 1991              		.cfi_def_cfa_offset 24
 1992 0004 0546     		mov	r5, r0
 1993 0006 0C46     		mov	r4, r1
 709:Src/LTC6811.c **** 	
 1994              		.loc 1 709 0
 1995 0008 0220     		movs	r0, #2
 1996              	.LVL198:
 1997 000a FFF7FEFF 		bl	malloc
 1998              	.LVL199:
 1999 000e 0646     		mov	r6, r0
 2000              	.LVL200:
 711:Src/LTC6811.c **** 	msbytes[1] = (uint8_t) (command & 0xFF);
 2001              		.loc 1 711 0
 2002 0010 E300     		lsls	r3, r4, #3
 2003 0012 03F07803 		and	r3, r3, #120
 2004 0016 63F07F03 		orn	r3, r3, #127
 2005 001a C5F30224 		ubfx	r4, r5, #8, #3
 2006 001e 2343     		orrs	r3, r3, r4
 2007 0020 DBB2     		uxtb	r3, r3
 2008 0022 0370     		strb	r3, [r0]
 712:Src/LTC6811.c **** 
 2009              		.loc 1 712 0
 2010 0024 EDB2     		uxtb	r5, r5
 2011 0026 4570     		strb	r5, [r0, #1]
 714:Src/LTC6811.c **** 	cmd[1] = msbytes[1];
 2012              		.loc 1 714 0
 2013 0028 8DF80430 		strb	r3, [sp, #4]
 715:Src/LTC6811.c **** 	
 2014              		.loc 1 715 0
 2015 002c 8DF80550 		strb	r5, [sp, #5]
 717:Src/LTC6811.c **** 	
 2016              		.loc 1 717 0
 2017 0030 0146     		mov	r1, r0
 2018 0032 0220     		movs	r0, #2
 2019              	.LVL201:
 2020 0034 FFF7FEFF 		bl	calculatePEC
 2021              	.LVL202:
 719:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 2022              		.loc 1 719 0
 2023 0038 030A     		lsrs	r3, r0, #8
 2024 003a 8DF80630 		strb	r3, [sp, #6]
 720:Src/LTC6811.c **** 	
 2025              		.loc 1 720 0
ARM GAS  /tmp/ccuL4tVn.s 			page 54


 2026 003e 8DF80700 		strb	r0, [sp, #7]
 722:Src/LTC6811.c **** 	
 2027              		.loc 1 722 0
 2028 0042 0421     		movs	r1, #4
 2029 0044 0DEB0100 		add	r0, sp, r1
 2030              	.LVL203:
 2031 0048 FFF7FEFF 		bl	SPIWrite
 2032              	.LVL204:
 724:Src/LTC6811.c **** };
 2033              		.loc 1 724 0
 2034 004c 3046     		mov	r0, r6
 2035 004e FFF7FEFF 		bl	free
 2036              	.LVL205:
 725:Src/LTC6811.c **** 
 2037              		.loc 1 725 0
 2038 0052 02B0     		add	sp, sp, #8
 2039              	.LCFI51:
 2040              		.cfi_def_cfa_offset 16
 2041              		@ sp needed
 2042 0054 70BD     		pop	{r4, r5, r6, pc}
 2043              		.cfi_endproc
 2044              	.LFE79:
 2046              		.global	CRC15_POLY
 2047              		.comm	pec15Table,512,4
 2048              		.section	.data.CRC15_POLY,"aw",%progbits
 2049              		.align	1
 2050              		.set	.LANCHOR0,. + 0
 2053              	CRC15_POLY:
 2054 0000 9945     		.short	17817
 2055              		.text
 2056              	.Letext0:
 2057              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2058              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2059              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 2060              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2061              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2062              		.file 7 "/usr/include/newlib/sys/lock.h"
 2063              		.file 8 "/usr/include/newlib/sys/_types.h"
 2064              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 2065              		.file 10 "/usr/include/newlib/sys/reent.h"
 2066              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2067              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2068              		.file 13 "/usr/include/newlib/stdlib.h"
 2069              		.file 14 "Inc/BMSconfig.h"
 2070              		.file 15 "/usr/include/newlib/math.h"
 2071              		.file 16 "Inc/LTC6811.h"
 2072              		.file 17 "Inc/SPI.h"
 2073              		.file 18 "<built-in>"
ARM GAS  /tmp/ccuL4tVn.s 			page 55


DEFINED SYMBOLS
                            *ABS*:0000000000000000 LTC6811.c
     /tmp/ccuL4tVn.s:16     .text.initPECTable:0000000000000000 $t
     /tmp/ccuL4tVn.s:23     .text.initPECTable:0000000000000000 initPECTable
     /tmp/ccuL4tVn.s:97     .text.initPECTable:0000000000000038 $d
                            *COM*:0000000000000200 pec15Table
     /tmp/ccuL4tVn.s:103    .text.wakeup_idle:0000000000000000 $t
     /tmp/ccuL4tVn.s:110    .text.wakeup_idle:0000000000000000 wakeup_idle
     /tmp/ccuL4tVn.s:154    .text.wakeup_idle:0000000000000024 $d
     /tmp/ccuL4tVn.s:159    .text.calculatePEC:0000000000000000 $t
     /tmp/ccuL4tVn.s:166    .text.calculatePEC:0000000000000000 calculatePEC
     /tmp/ccuL4tVn.s:227    .text.calculatePEC:000000000000002c $d
     /tmp/ccuL4tVn.s:232    .text.readRegister:0000000000000000 $t
     /tmp/ccuL4tVn.s:239    .text.readRegister:0000000000000000 readRegister
     /tmp/ccuL4tVn.s:558    .text.readCellVoltage:0000000000000000 $t
     /tmp/ccuL4tVn.s:565    .text.readCellVoltage:0000000000000000 readCellVoltage
     /tmp/ccuL4tVn.s:659    .text.readCellTemp:0000000000000000 $t
     /tmp/ccuL4tVn.s:666    .text.readCellTemp:0000000000000000 readCellTemp
     /tmp/ccuL4tVn.s:809    .text.readConfig:0000000000000000 $t
     /tmp/ccuL4tVn.s:816    .text.readConfig:0000000000000000 readConfig
     /tmp/ccuL4tVn.s:886    .text.writeConfigAddress:0000000000000000 $t
     /tmp/ccuL4tVn.s:893    .text.writeConfigAddress:0000000000000000 writeConfigAddress
     /tmp/ccuL4tVn.s:1086   .text.writeConfigAll:0000000000000000 $t
     /tmp/ccuL4tVn.s:1093   .text.writeConfigAll:0000000000000000 writeConfigAll
     /tmp/ccuL4tVn.s:1165   .text.dischargeCellGroups:0000000000000000 $t
     /tmp/ccuL4tVn.s:1172   .text.dischargeCellGroups:0000000000000000 dischargeCellGroups
     /tmp/ccuL4tVn.s:1281   .text.sendBroadcastCommand:0000000000000000 $t
     /tmp/ccuL4tVn.s:1288   .text.sendBroadcastCommand:0000000000000000 sendBroadcastCommand
     /tmp/ccuL4tVn.s:1334   .text.readAllCellVoltages:0000000000000000 $t
     /tmp/ccuL4tVn.s:1341   .text.readAllCellVoltages:0000000000000000 readAllCellVoltages
     /tmp/ccuL4tVn.s:1540   .text.readAllCellTemps:0000000000000000 $t
     /tmp/ccuL4tVn.s:1547   .text.readAllCellTemps:0000000000000000 readAllCellTemps
     /tmp/ccuL4tVn.s:1774   .text.checkAllCellConnections:0000000000000000 $t
     /tmp/ccuL4tVn.s:1781   .text.checkAllCellConnections:0000000000000000 checkAllCellConnections
     /tmp/ccuL4tVn.s:1968   .text.sendAddressCommand:0000000000000000 $t
     /tmp/ccuL4tVn.s:1975   .text.sendAddressCommand:0000000000000000 sendAddressCommand
     /tmp/ccuL4tVn.s:2053   .data.CRC15_POLY:0000000000000000 CRC15_POLY
     /tmp/ccuL4tVn.s:2049   .data.CRC15_POLY:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
malloc
SPIWriteRead
free
SPIWrite
memcpy
HAL_Delay
