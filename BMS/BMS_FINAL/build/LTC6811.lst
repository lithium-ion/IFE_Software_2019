ARM GAS  /tmp/ccIyoWCJ.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"LTC6811.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.initPECTable,"ax",%progbits
  16              		.align	1
  17              		.global	initPECTable
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	initPECTable:
  24              	.LFB66:
  25              		.file 1 "Src/LTC6811.c"
   1:Src/LTC6811.c **** /*
   2:Src/LTC6811.c **** 	LTC6811 Command Functions
   3:Src/LTC6811.c **** 	Matt Vlasaty
   4:Src/LTC6811.c **** 	March 29th, 2019
   5:Src/LTC6811.c **** 	
   6:Src/LTC6811.c **** 	General Functions
   7:Src/LTC6811.c **** 		sendBroadcastCommand: void sendBroadcastCommand(CommandCodeTypedef command);
   8:Src/LTC6811.c **** 			- sends specified write-only command to every LTC in the chain (ex: ADCV)
   9:Src/LTC6811.c **** 			- CommandCodeTypedef enum contains every command code used
  10:Src/LTC6811.c **** 		sendAddressCommand: void sendAddressCommand(CommandCodeTypedef command, uint8_t address);
  11:Src/LTC6811.c **** 			- sends specified write-only command to LTC with specified address
  12:Src/LTC6811.c **** 		readRegister: bool readRegister(CommandCodeTypedef command, uint8_t address, uint16_t *data);
  13:Src/LTC6811.c **** 			- reads register specified in command from specified board
  14:Src/LTC6811.c **** 			- ex: ReadCellVoltageRegisterGroup1to3, ReadAuxiliaryGroupA, ReadConfigurationRegisterGroup
  15:Src/LTC6811.c **** 			- returns true if received PEC matches calculated PEC
  16:Src/LTC6811.c **** 		
  17:Src/LTC6811.c **** 	Configuration Functions
  18:Src/LTC6811.c **** 		writeConfigAll: void writeConfigAll(BMSconfigStructTypedef cfg);
  19:Src/LTC6811.c **** 			- writes configuration data from BMSconfig struct into LTC configuration register
  20:Src/LTC6811.c **** 			- BMSconfig struct includes ADCMode, UV, OV, and discharge enable for each cell
  21:Src/LTC6811.c **** 			- BMSconfig struct also contains number of ICs and array of addresses used
  22:Src/LTC6811.c **** 		writeConfigAddress: void writeConfigAddress(BMSconfigStructTypedef cfg, uint8_t address);
  23:Src/LTC6811.c **** 			- this is only used for cellDischarge command
  24:Src/LTC6811.c **** 			- writes configuration data to LTC with specified address
  25:Src/LTC6811.c **** 		readConfig: bool readConfig(uint8_t address, uint8_t cfg[6]);
  26:Src/LTC6811.c **** 			- uses general readRegister function to check current state of LTC configuration register
  27:Src/LTC6811.c **** 			- this is mostly for testing purposes
  28:Src/LTC6811.c **** 			- returns true if received PEC matches calculated PEC (same as readRegister)
  29:Src/LTC6811.c **** 		
  30:Src/LTC6811.c **** 	Cell Voltage Functions
  31:Src/LTC6811.c **** 		readCellVoltage: bool readCellVoltage(uint8_t address, uint16_t cellVoltage[12]);
  32:Src/LTC6811.c **** 			- sends ADCV command that begins conversion for every cell to specified LTC
  33:Src/LTC6811.c **** 			- reads all cell voltage registers using general readRegister function
ARM GAS  /tmp/ccIyoWCJ.s 			page 2


  34:Src/LTC6811.c **** 			- used cell inputs (1, 2, 3, 4, 7, 8, 9, 10) must be chosen from cellVoltage[12] later
  35:Src/LTC6811.c **** 			- returns true if received PEC matches calculated PEC for every register read
  36:Src/LTC6811.c **** 		readAllCellVoltages: bool readAllCellVoltages(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6])
  37:Src/LTC6811.c **** 			- stores cell number, cell voltage, and data valid bit into bmsData
  38:Src/LTC6811.c **** 			- returns true if no PEC for any register read for any board
  39:Src/LTC6811.c **** 	Cell Temperature Functions
  40:Src/LTC6811.c **** 		readCellTemp: bool readCellTemp(uint8_t address, uint16_t cellTemp[4], bool dcFault[4], bool temp
  41:Src/LTC6811.c **** 			- initiates ADC conversion for GPIO inputs connected to temperature sensors
  42:Src/LTC6811.c **** 			- reads auxiliary register groups using general readRegister function
  43:Src/LTC6811.c **** 			- converts measured voltage into temperature based on temperature sensor response
  44:Src/LTC6811.c **** 			- checks for disconnected temperature sensor and overtemperature faults for each LTC and stores 
  45:Src/LTC6811.c **** 		readAllCellTemps: bool readAllCellTemps(uint8_t numBoards, uint16_t cellTemp[numBoards][4], bool 
  46:Src/LTC6811.c **** 			- not tested
  47:Src/LTC6811.c **** 			- using order of ICs in BMSconfig, stores cell temperature for every cell on every board into 2D
  48:Src/LTC6811.c **** 			- returns false if any readCellTemp returns false
  49:Src/LTC6811.c **** 	
  50:Src/LTC6811.c **** 	Cell Connection Functions
  51:Src/LTC6811.c **** 		checkCellConnection: void checkCellConnection(uint16_t cellVoltage[12], bool cellConnection[12]);
  52:Src/LTC6811.c **** 			- needs previously obtained cell voltage measurements
  53:Src/LTC6811.c **** 			- initiates ADOW command with PUP = 0 to source 100uA while measuring cell voltage
  54:Src/LTC6811.c **** 			- reads cell voltages with readCellVoltage function
  55:Src/LTC6811.c **** 			- compares previously measured values to open wire check values
  56:Src/LTC6811.c **** 			- if there is a significant drop in voltage (should be configurable), cell is disconnected
  57:Src/LTC6811.c **** 			- stores 1 into cellConnection if cell is connected
  58:Src/LTC6811.c **** 			- stores 0 into cellConnection if cell is disconnected
  59:Src/LTC6811.c **** 		checkAllCellConnections: 
  60:Src/LTC6811.c **** 	
  61:Src/LTC6811.c **** 	PEC Functions
  62:Src/LTC6811.c **** 		initPECTable: void initPECTable(void);
  63:Src/LTC6811.c **** 			- taken from LTC6811 datasheet
  64:Src/LTC6811.c **** 			- generates PEC look-up table
  65:Src/LTC6811.c **** 			- should be called on start-up
  66:Src/LTC6811.c **** 		calculatePEC: uint16_t calculatePEC(uint8_t len, uint8_t *data);
  67:Src/LTC6811.c **** 			- taken from LTC6811 datasheet
  68:Src/LTC6811.c **** 			- used when sending command to calculate necessary PEC bytes to follow command bytes
  69:Src/LTC6811.c **** 			- used when receiving data to compare received PEC with the PEC that should have been received b
  70:Src/LTC6811.c **** 			- returns uint16_t PEC value
  71:Src/LTC6811.c **** 			
  72:Src/LTC6811.c **** 	TODO:
  73:Src/LTC6811.c **** 		- checkCellConnection return value needs to disregard unused cell inputs
  74:Src/LTC6811.c **** 		- resolve issue with writeConfig not changing every bit in the first register group
  75:Src/LTC6811.c **** 		- test functions used to read from every board (readAllCellVoltages should be [12][8])
  76:Src/LTC6811.c **** 		- minor changes (using more user-defined constants, changing return values)
  77:Src/LTC6811.c **** 		
  78:Src/LTC6811.c **** 	NOTES:
  79:Src/LTC6811.c **** 		- writeConfig is called every loop for every LTC because dischargeCells is called every loop for 
  80:Src/LTC6811.c **** 		- always take measurements, only send when not charging? (CAN messages for charging?)
  81:Src/LTC6811.c **** 		- every 'readAll' function starts with address = 0 and increases sequentially
  82:Src/LTC6811.c **** 		
  83:Src/LTC6811.c **** 		- in temp read, faults are determined but not transferred
  84:Src/LTC6811.c **** 		- temperature conversion works, but error is +/- 1 degree
  85:Src/LTC6811.c **** */
  86:Src/LTC6811.c **** 
  87:Src/LTC6811.c **** 
  88:Src/LTC6811.c **** #include "LTC6811.h"
  89:Src/LTC6811.c **** 
  90:Src/LTC6811.c **** uint16_t pec15Table[256];
ARM GAS  /tmp/ccIyoWCJ.s 			page 3


  91:Src/LTC6811.c **** uint16_t CRC15_POLY = 0x4599;
  92:Src/LTC6811.c **** 
  93:Src/LTC6811.c **** void initPECTable(void) {
  26              		.loc 1 93 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32              	.LBB2:
  94:Src/LTC6811.c **** 	
  95:Src/LTC6811.c **** 	uint16_t remainder;
  96:Src/LTC6811.c **** 	
  97:Src/LTC6811.c **** 	for (int i = 0; i < 256; i++) {
  33              		.loc 1 97 0
  34 0000 0020     		movs	r0, #0
  35 0002 11E0     		b	.L2
  36              	.LVL1:
  37              	.L4:
  38              	.LBB3:
  98:Src/LTC6811.c **** 		remainder = i << 7;
  99:Src/LTC6811.c **** 		for (int bit = 8; bit > 0; bit--) {
 100:Src/LTC6811.c **** 			if (remainder & 0x4000) {
 101:Src/LTC6811.c **** 				remainder = ((remainder << 1));
 102:Src/LTC6811.c **** 				remainder = (remainder ^ CRC15_POLY);
 103:Src/LTC6811.c **** 			}
 104:Src/LTC6811.c **** 			else {
 105:Src/LTC6811.c **** 				remainder = ((remainder << 1));
  39              		.loc 1 105 0
  40 0004 5B00     		lsls	r3, r3, #1
  41              	.LVL2:
  42 0006 9BB2     		uxth	r3, r3
  43              	.LVL3:
  44              	.L5:
  99:Src/LTC6811.c **** 			if (remainder & 0x4000) {
  45              		.loc 1 99 0 discriminator 2
  46 0008 013A     		subs	r2, r2, #1
  47              	.LVL4:
  48              	.L3:
  99:Src/LTC6811.c **** 			if (remainder & 0x4000) {
  49              		.loc 1 99 0 is_stmt 0 discriminator 1
  50 000a 002A     		cmp	r2, #0
  51 000c 08DD     		ble	.L8
 100:Src/LTC6811.c **** 				remainder = ((remainder << 1));
  52              		.loc 1 100 0 is_stmt 1
  53 000e 13F4804F 		tst	r3, #16384
  54 0012 F7D0     		beq	.L4
 101:Src/LTC6811.c **** 				remainder = (remainder ^ CRC15_POLY);
  55              		.loc 1 101 0
  56 0014 5B00     		lsls	r3, r3, #1
  57              	.LVL5:
  58 0016 9BB2     		uxth	r3, r3
  59              	.LVL6:
 102:Src/LTC6811.c **** 			}
  60              		.loc 1 102 0
  61 0018 0749     		ldr	r1, .L10
  62 001a 0988     		ldrh	r1, [r1]
ARM GAS  /tmp/ccIyoWCJ.s 			page 4


  63 001c 4B40     		eors	r3, r3, r1
  64              	.LVL7:
  65 001e F3E7     		b	.L5
  66              	.L8:
  67              	.LBE3:
 106:Src/LTC6811.c **** 			}
 107:Src/LTC6811.c **** 		}
 108:Src/LTC6811.c **** 		pec15Table[i] = remainder & 0xFFFF;
  68              		.loc 1 108 0 discriminator 2
  69 0020 064A     		ldr	r2, .L10+4
  70              	.LVL8:
  71 0022 22F81030 		strh	r3, [r2, r0, lsl #1]	@ movhi
  97:Src/LTC6811.c **** 		remainder = i << 7;
  72              		.loc 1 97 0 discriminator 2
  73 0026 0130     		adds	r0, r0, #1
  74              	.LVL9:
  75              	.L2:
  97:Src/LTC6811.c **** 		remainder = i << 7;
  76              		.loc 1 97 0 is_stmt 0 discriminator 1
  77 0028 FF28     		cmp	r0, #255
  78 002a 04DC     		bgt	.L9
  98:Src/LTC6811.c **** 		for (int bit = 8; bit > 0; bit--) {
  79              		.loc 1 98 0 is_stmt 1
  80 002c 83B2     		uxth	r3, r0
  81 002e DB01     		lsls	r3, r3, #7
  82 0030 9BB2     		uxth	r3, r3
  83              	.LVL10:
  84              	.LBB4:
  99:Src/LTC6811.c **** 			if (remainder & 0x4000) {
  85              		.loc 1 99 0
  86 0032 0822     		movs	r2, #8
  87 0034 E9E7     		b	.L3
  88              	.LVL11:
  89              	.L9:
  90              	.LBE4:
  91              	.LBE2:
 109:Src/LTC6811.c **** 	}
 110:Src/LTC6811.c **** };
  92              		.loc 1 110 0
  93 0036 7047     		bx	lr
  94              	.L11:
  95              		.align	2
  96              	.L10:
  97 0038 00000000 		.word	.LANCHOR0
  98 003c 00000000 		.word	pec15Table
  99              		.cfi_endproc
 100              	.LFE66:
 102              		.section	.text.wakeup_idle,"ax",%progbits
 103              		.align	1
 104              		.global	wakeup_idle
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu softvfp
 110              	wakeup_idle:
 111              	.LFB76:
 111:Src/LTC6811.c **** 
ARM GAS  /tmp/ccIyoWCJ.s 			page 5


 112:Src/LTC6811.c **** void writeConfigAddress(BMSconfigStructTypedef cfg, uint8_t address) {
 113:Src/LTC6811.c **** 
 114:Src/LTC6811.c **** 	uint8_t config[6];
 115:Src/LTC6811.c **** 	uint8_t *cmd;
 116:Src/LTC6811.c **** 	uint8_t cmd_len = 12;
 117:Src/LTC6811.c **** 	uint16_t PEC_return;
 118:Src/LTC6811.c **** 	uint8_t dummy[8];
 119:Src/LTC6811.c **** 
 120:Src/LTC6811.c **** 	// readConfig(address, dummy);
 121:Src/LTC6811.c **** 	
 122:Src/LTC6811.c **** 	cmd = (uint8_t *)malloc(cmd_len*sizeof(uint8_t));
 123:Src/LTC6811.c **** 	
 124:Src/LTC6811.c **** 	config[0] = (uint8_t) (cfg.GPIO5PulldownOff << 7) | (cfg.GPIO4PulldownOff << 6) | (cfg.GPIO3Pulldo
 125:Src/LTC6811.c **** 	config[1] = (uint8_t) (cfg.UndervoltageComparisonVoltage & 0xFF);
 126:Src/LTC6811.c **** 	config[2] = (uint8_t) ((cfg.OvervoltageComparisonVoltage << 4) & 0xF0) | ((cfg.UndervoltageCompari
 127:Src/LTC6811.c **** 	config[3] = (uint8_t) ((cfg.OvervoltageComparisonVoltage >> 4) & 0xFF);
 128:Src/LTC6811.c **** 	config[4] = (uint8_t) (cfg.DischargeCell8 << 7) | (cfg.DischargeCell7 << 6) | (cfg.DischargeCell6 
 129:Src/LTC6811.c **** 	config[5] = (uint8_t) ((cfg.DischargeTimeoutValue << 4) & 0xF0) | (cfg.DischargeCell12 << 3) | (cf
 130:Src/LTC6811.c **** 	
 131:Src/LTC6811.c **** 	cmd[0] = (uint8_t) (0x80 | ((address << 3) & 0x78) | ((WriteConfigurationRegisterGroup >> 8) & 0x0
 132:Src/LTC6811.c **** 	cmd[1] = (uint8_t) (WriteConfigurationRegisterGroup & 0xFF);
 133:Src/LTC6811.c **** 	
 134:Src/LTC6811.c **** 	PEC_return = calculatePEC(2, cmd);
 135:Src/LTC6811.c **** 	
 136:Src/LTC6811.c **** 	cmd[2] = (PEC_return >> 8) & 0xFF;
 137:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 138:Src/LTC6811.c **** 
 139:Src/LTC6811.c **** 	cmd[4] = config[0];
 140:Src/LTC6811.c **** 	cmd[5] = config[1];
 141:Src/LTC6811.c **** 	cmd[6] = config[2];
 142:Src/LTC6811.c **** 	cmd[7] = config[3];
 143:Src/LTC6811.c **** 	cmd[8] = config[4];
 144:Src/LTC6811.c **** 	cmd[9] = config[5];
 145:Src/LTC6811.c **** 	
 146:Src/LTC6811.c **** 	PEC_return = calculatePEC(6, cmd + 4);
 147:Src/LTC6811.c **** 
 148:Src/LTC6811.c **** 	cmd[10] = (PEC_return >> 8) & 0xFF;
 149:Src/LTC6811.c **** 	cmd[11] = PEC_return & 0xFF;
 150:Src/LTC6811.c **** 	
 151:Src/LTC6811.c **** 	SPIWrite(cmd, cmd_len);
 152:Src/LTC6811.c **** 
 153:Src/LTC6811.c **** 	readConfig(address, dummy);
 154:Src/LTC6811.c **** 	
 155:Src/LTC6811.c **** 	free(cmd);
 156:Src/LTC6811.c **** 
 157:Src/LTC6811.c **** };
 158:Src/LTC6811.c **** 
 159:Src/LTC6811.c **** void writeConfigAll(BMSconfigStructTypedef cfg) {
 160:Src/LTC6811.c **** 
 161:Src/LTC6811.c **** 	wakeup_idle();
 162:Src/LTC6811.c **** 
 163:Src/LTC6811.c **** 	for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 164:Src/LTC6811.c **** 		writeConfigAddress(cfg, cfg.address[i]);
 165:Src/LTC6811.c **** 	}
 166:Src/LTC6811.c **** };
 167:Src/LTC6811.c **** 
 168:Src/LTC6811.c **** bool readCellVoltage(uint8_t address, uint16_t cellVoltage[12]) {
ARM GAS  /tmp/ccIyoWCJ.s 			page 6


 169:Src/LTC6811.c **** 	
 170:Src/LTC6811.c **** 	bool PEC_check = false;
 171:Src/LTC6811.c **** 	bool dataValid = true;
 172:Src/LTC6811.c **** 	uint16_t *voltage;
 173:Src/LTC6811.c **** 	
 174:Src/LTC6811.c **** 	voltage = (uint16_t *)malloc(12*sizeof(uint16_t));
 175:Src/LTC6811.c **** 	
 176:Src/LTC6811.c **** 	// sendAddressCommand(0x711, address); // clear cell voltage groups
 177:Src/LTC6811.c **** 	// sendAddressCommand(StartCellVoltageADCConversionAll, address); // start conversion for every ce
 178:Src/LTC6811.c **** 	// sendAddressCommand(0x261, address); // 1 and 7
 179:Src/LTC6811.c **** 	// sendAddressCommand(0x264, address); // 4 and 10
 180:Src/LTC6811.c **** 
 181:Src/LTC6811.c **** 	// HAL_Delay(50); // conversion time is 12.8ms at 422Hz, so wait 15ms
 182:Src/LTC6811.c **** 	
 183:Src/LTC6811.c **** 	PEC_check = readRegister(ReadCellVoltageRegisterGroup1to3, address, voltage);
 184:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 185:Src/LTC6811.c **** 	PEC_check = readRegister(ReadCellVoltageRegisterGroup4to6, address, voltage);
 186:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 187:Src/LTC6811.c **** 	PEC_check = readRegister(ReadCellVoltageRegisterGroup7to9, address, voltage);
 188:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 189:Src/LTC6811.c **** 	PEC_check = readRegister(ReadCellVoltageRegisterGroup10to12, address, voltage);
 190:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 191:Src/LTC6811.c **** 	//PEC_check = readRegister(ReadCellVoltageRegisterGroup1to3, address, voltage);
 192:Src/LTC6811.c **** 	//dataValid = dataValid & PEC_check;
 193:Src/LTC6811.c **** 	
 194:Src/LTC6811.c **** 	for (uint8_t i = 0; i < 12; i++) {
 195:Src/LTC6811.c **** 		cellVoltage[i] = voltage[i];
 196:Src/LTC6811.c **** 	}
 197:Src/LTC6811.c **** 	
 198:Src/LTC6811.c **** 	free(voltage);
 199:Src/LTC6811.c **** 	
 200:Src/LTC6811.c **** 	return(dataValid);
 201:Src/LTC6811.c **** 	
 202:Src/LTC6811.c **** };
 203:Src/LTC6811.c **** 
 204:Src/LTC6811.c **** bool readAllCellVoltages(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]) {
 205:Src/LTC6811.c **** 
 206:Src/LTC6811.c **** 	/*
 207:Src/LTC6811.c **** 	uint16_t boardVoltage[cfg.numOfCellInputs];
 208:Src/LTC6811.c **** 	bool PEC_check[cfg.numOfICs];
 209:Src/LTC6811.c **** 	bool dataValid = true;
 210:Src/LTC6811.c **** 
 211:Src/LTC6811.c **** 	for (uint8_t board = 0; board < cfg.numOfICs; board++) {
 212:Src/LTC6811.c **** 
 213:Src/LTC6811.c **** 		//read voltage of every cell input (1-12) for a specific address, store in boardVoltage
 214:Src/LTC6811.c **** 		PEC_check[board] = readCellVoltage(cfg.address[board], boardVoltage);
 215:Src/LTC6811.c **** 
 216:Src/LTC6811.c **** 		//store cell number and valid data bit in bmsData
 217:Src/LTC6811.c **** 		for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 218:Src/LTC6811.c **** 			bmsData[(board * cfg.numOfCellsPerIC) + cell][0] = (uint8_t) ((board * cfg.numOfCellsPerIC) + ce
 219:Src/LTC6811.c **** 			bmsData[(board * cfg.numOfCellsPerIC) + cell][1] = (uint8_t) (0x02 & (PEC_check[board] << 1)); /
 220:Src/LTC6811.c **** 		}
 221:Src/LTC6811.c **** 
 222:Src/LTC6811.c **** 		//store cell voltage in bmsData
 223:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 0][2] = (uint8_t) ((boardVoltage[0] >> 8) & 0xFF); //cell
 224:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 0][3] = (uint8_t) (boardVoltage[0] & 0xFF); //cell 1, vol
 225:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 1][2] = (uint8_t) ((boardVoltage[1] >> 8) & 0xFF); //cell
ARM GAS  /tmp/ccIyoWCJ.s 			page 7


 226:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 1][3] = (uint8_t) (boardVoltage[1] & 0xFF); //cell 2, vol
 227:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 2][2] = (uint8_t) ((boardVoltage[2] >> 8) & 0xFF); //cell
 228:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 2][3] = (uint8_t) (boardVoltage[2] & 0xFF); //cell 3, vol
 229:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 3][2] = (uint8_t) ((boardVoltage[3] >> 8) & 0xFF); //cell
 230:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 3][3] = (uint8_t) (boardVoltage[3] & 0xFF); //cell 4, vol
 231:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 4][2] = (uint8_t) ((boardVoltage[6] >> 8) & 0xFF); //cell
 232:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 4][3] = (uint8_t) (boardVoltage[6] & 0xFF); //cell 7, vol
 233:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 5][2] = (uint8_t) ((boardVoltage[7] >> 8) & 0xFF); //cell
 234:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 5][3] = (uint8_t) (boardVoltage[7] & 0xFF); //cell 8, vol
 235:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 6][2] = (uint8_t) ((boardVoltage[8] >> 8) & 0xFF); //cell
 236:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 6][3] = (uint8_t) (boardVoltage[8] & 0xFF); //cell 9, vol
 237:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 7][2] = (uint8_t) ((boardVoltage[9] >> 8) & 0xFF); //cell
 238:Src/LTC6811.c **** 		bmsData[(board * cfg.numOfCellsPerIC) + 7][3] = (uint8_t) (boardVoltage[9] & 0xFF); //cell 10, vo
 239:Src/LTC6811.c **** 	
 240:Src/LTC6811.c **** 	}
 241:Src/LTC6811.c **** 
 242:Src/LTC6811.c **** 	for (uint8_t board = 0; board < cfg.numOfICs; board++) {
 243:Src/LTC6811.c **** 		if (PEC_check[board] == 0)
 244:Src/LTC6811.c **** 			dataValid = false;
 245:Src/LTC6811.c **** 	}
 246:Src/LTC6811.c **** 
 247:Src/LTC6811.c **** 	return dataValid; //return true if no PEC errors for any board
 248:Src/LTC6811.c **** 	*/
 249:Src/LTC6811.c **** 
 250:Src/LTC6811.c **** 	uint16_t boardVoltage[12];
 251:Src/LTC6811.c **** 	bool PEC_check[12];
 252:Src/LTC6811.c **** 	bool dataValid = true;
 253:Src/LTC6811.c **** 
 254:Src/LTC6811.c **** 	wakeup_idle();
 255:Src/LTC6811.c **** 
 256:Src/LTC6811.c **** 	sendBroadcastCommand(ClearRegisters);
 257:Src/LTC6811.c **** 	sendBroadcastCommand(StartCellVoltageADCConversionAll);
 258:Src/LTC6811.c **** 	HAL_Delay(20);
 259:Src/LTC6811.c **** 
 260:Src/LTC6811.c **** 	wakeup_idle();
 261:Src/LTC6811.c **** 
 262:Src/LTC6811.c **** 	for (uint8_t board = 0; board < 12; board++) {
 263:Src/LTC6811.c **** 
 264:Src/LTC6811.c **** 		//read voltage of every cell input (1-12) for a specific address, store in boardVoltage
 265:Src/LTC6811.c **** 		PEC_check[board] = readCellVoltage(board, boardVoltage);
 266:Src/LTC6811.c **** 		dataValid &= PEC_check[board];
 267:Src/LTC6811.c **** 
 268:Src/LTC6811.c **** 		//store cell number and valid data bit in bmsData
 269:Src/LTC6811.c **** 		for (uint8_t cell = 0; cell < 8; cell++) {
 270:Src/LTC6811.c **** 			bmsData[(board * 8) + cell][0] = (uint8_t) ((board * 8) + cell + 1); //cell number
 271:Src/LTC6811.c **** 			bmsData[(board * 8) + cell][1] = 0; //clear status byte 
 272:Src/LTC6811.c **** 			if (PEC_check[board])
 273:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00000010; //set valid data bit
 274:Src/LTC6811.c **** 		}
 275:Src/LTC6811.c **** 
 276:Src/LTC6811.c **** 		//store cell voltage in bmsData
 277:Src/LTC6811.c **** 		bmsData[(board * 8) + 0][2] = (uint8_t) ((boardVoltage[0] >> 8) & 0xFF); //cell 1, voltage H
 278:Src/LTC6811.c **** 		bmsData[(board * 8) + 0][3] = (uint8_t) (boardVoltage[0] & 0xFF); //cell 1, voltage L
 279:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][2] = (uint8_t) ((boardVoltage[1] >> 8) & 0xFF); //cell 2, voltage H
 280:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][3] = (uint8_t) (boardVoltage[1] & 0xFF); //cell 2, voltage L
 281:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][2] = (uint8_t) ((boardVoltage[2] >> 8) & 0xFF); //cell 3, voltage H
 282:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][3] = (uint8_t) (boardVoltage[2] & 0xFF); //cell 3, voltage L
ARM GAS  /tmp/ccIyoWCJ.s 			page 8


 283:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][2] = (uint8_t) ((boardVoltage[3] >> 8) & 0xFF); //cell 4, voltage H
 284:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][3] = (uint8_t) (boardVoltage[3] & 0xFF); //cell 4, voltage L 
 285:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][2] = (uint8_t) ((boardVoltage[6] >> 8) & 0xFF); //cell 7, voltage H
 286:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][3] = (uint8_t) (boardVoltage[6] & 0xFF); //cell 7, voltage L 
 287:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][2] = (uint8_t) ((boardVoltage[7] >> 8) & 0xFF); //cell 8, voltage H
 288:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][3] = (uint8_t) (boardVoltage[7] & 0xFF); //cell 8, voltage L
 289:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][2] = (uint8_t) ((boardVoltage[8] >> 8) & 0xFF); //cell 9, voltage H
 290:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][3] = (uint8_t) (boardVoltage[8] & 0xFF); //cell 9, voltage L
 291:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][2] = (uint8_t) ((boardVoltage[9] >> 8) & 0xFF); //cell 10, voltage H
 292:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][3] = (uint8_t) (boardVoltage[9] & 0xFF); //cell 10, voltage L
 293:Src/LTC6811.c **** 	
 294:Src/LTC6811.c **** 	}
 295:Src/LTC6811.c **** 
 296:Src/LTC6811.c **** 	// for (uint8_t board = 0; board < 12; board++) {
 297:Src/LTC6811.c **** 	// 	if (PEC_check[board] == 0)
 298:Src/LTC6811.c **** 	// 		dataValid = false;
 299:Src/LTC6811.c **** 	// }
 300:Src/LTC6811.c **** 
 301:Src/LTC6811.c **** 	return dataValid; //return true if no PEC errors for any board
 302:Src/LTC6811.c **** }
 303:Src/LTC6811.c **** 
 304:Src/LTC6811.c **** bool readCellTemp(uint8_t address, uint16_t cellTemp[4], bool dcFault[4], bool tempFault[4]) {
 305:Src/LTC6811.c **** 	
 306:Src/LTC6811.c **** 	bool PEC_check = false;
 307:Src/LTC6811.c **** 	bool dataValid = true;
 308:Src/LTC6811.c **** 	uint16_t *temp;
 309:Src/LTC6811.c **** 	double dummy[4];
 310:Src/LTC6811.c **** 	double conversion[4];
 311:Src/LTC6811.c **** 	
 312:Src/LTC6811.c **** 	temp = (uint16_t *)malloc(4*sizeof(uint16_t));
 313:Src/LTC6811.c **** 	
 314:Src/LTC6811.c **** 	//sendAddressCommand(StartCellTempVoltageADCConversionAll, address);
 315:Src/LTC6811.c **** 	
 316:Src/LTC6811.c **** 	//HAL_Delay(50); // conversion time is 12.8ms at 422Hz, so wait 15ms
 317:Src/LTC6811.c **** 	
 318:Src/LTC6811.c **** 	PEC_check = readRegister(ReadAuxiliaryGroupA, address, temp);
 319:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 320:Src/LTC6811.c **** 	PEC_check = readRegister(ReadAuxiliaryGroupB, address, temp);
 321:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 322:Src/LTC6811.c **** 	//PEC_check = readRegister(ReadAuxiliaryGroupA, address, temp);
 323:Src/LTC6811.c **** 	//dataValid = dataValid & PEC_check;
 324:Src/LTC6811.c **** 	
 325:Src/LTC6811.c **** 	for (uint8_t i = 0; i < 4; i++) {
 326:Src/LTC6811.c **** 		if ((temp[i] > 24400) || (temp[i] < 13000)) {
 327:Src/LTC6811.c **** 			dcFault[i] = true;
 328:Src/LTC6811.c **** 			cellTemp[i] = 0x0000;
 329:Src/LTC6811.c **** 		}
 330:Src/LTC6811.c **** 		else
 331:Src/LTC6811.c **** 			dcFault[i] = false;
 332:Src/LTC6811.c **** 		
 333:Src/LTC6811.c **** 		if ((temp[i] >= 13000) && (temp[i] < 15100)) {
 334:Src/LTC6811.c **** 			tempFault[i] = true;
 335:Src/LTC6811.c **** 			cellTemp[i] = 0xFFFF;
 336:Src/LTC6811.c **** 		}
 337:Src/LTC6811.c **** 		else
 338:Src/LTC6811.c **** 			tempFault[i] = false;
 339:Src/LTC6811.c **** 		
ARM GAS  /tmp/ccIyoWCJ.s 			page 9


 340:Src/LTC6811.c **** 		if ((temp[i] >= 15100) && (temp[i] <= 24400)) {
 341:Src/LTC6811.c **** 			dummy[i] = (double) temp[i] / 10000; // convert from ADC value to voltage
 342:Src/LTC6811.c **** 			// convert from voltage to temperature
 343:Src/LTC6811.c **** 			conversion[i] = 37735 - 113923 * dummy[i] + 142663 * pow(dummy[i], 2) - 94465 * pow(dummy[i], 3)
 344:Src/LTC6811.c **** 			conversion[i] = 500 * (conversion[i] + 20); // map value to larger range
 345:Src/LTC6811.c **** 			cellTemp[i] = (uint16_t) conversion[i];
 346:Src/LTC6811.c **** 		}
 347:Src/LTC6811.c **** 	}
 348:Src/LTC6811.c **** 	
 349:Src/LTC6811.c **** 	free(temp);
 350:Src/LTC6811.c **** 	
 351:Src/LTC6811.c **** 	return (dataValid);
 352:Src/LTC6811.c **** 	
 353:Src/LTC6811.c **** };
 354:Src/LTC6811.c **** 
 355:Src/LTC6811.c **** bool readAllCellTemps(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]) {
 356:Src/LTC6811.c **** 
 357:Src/LTC6811.c **** 	uint16_t boardTemp[4];
 358:Src/LTC6811.c **** 	bool boardDCFault[4];
 359:Src/LTC6811.c **** 	bool boardTempFault[4];
 360:Src/LTC6811.c **** 	bool PEC_check[12];
 361:Src/LTC6811.c **** 	bool dataValid = true;
 362:Src/LTC6811.c **** 
 363:Src/LTC6811.c **** 	wakeup_idle();
 364:Src/LTC6811.c **** 
 365:Src/LTC6811.c **** 	sendBroadcastCommand(ClearRegisters);
 366:Src/LTC6811.c **** 	sendBroadcastCommand(StartCellTempVoltageADCConversionAll);
 367:Src/LTC6811.c **** 	HAL_Delay(20);
 368:Src/LTC6811.c **** 
 369:Src/LTC6811.c **** 	wakeup_idle();
 370:Src/LTC6811.c **** 
 371:Src/LTC6811.c **** 	for (uint8_t board = 0; board < 12; board++) {
 372:Src/LTC6811.c **** 
 373:Src/LTC6811.c **** 		//read temperature, check for OT and temp DC
 374:Src/LTC6811.c **** 		PEC_check[board] = readCellTemp(board, boardTemp, boardDCFault, boardTempFault);
 375:Src/LTC6811.c **** 		dataValid &= PEC_check[board];
 376:Src/LTC6811.c **** 
 377:Src/LTC6811.c **** 		//store OT and temp DC bits in status byte
 378:Src/LTC6811.c **** 		for (uint8_t cell = 0; cell < 8; cell++) {
 379:Src/LTC6811.c **** 			if (PEC_check[board])
 380:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00000010; //set valid data bit
 381:Src/LTC6811.c **** 
 382:Src/LTC6811.c **** 			// if (!PEC_check[board])
 383:Src/LTC6811.c **** 			// 	bmsData[(board * 8) + cell][1] &= 0b11111101; //reset valid data bit
 384:Src/LTC6811.c **** 
 385:Src/LTC6811.c **** 			if (boardTempFault[cell / 2])
 386:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00010000; //set OT bit
 387:Src/LTC6811.c **** 
 388:Src/LTC6811.c **** 			if (boardDCFault[cell / 2])
 389:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00001000; //set temp DC bit
 390:Src/LTC6811.c **** 		}
 391:Src/LTC6811.c **** 
 392:Src/LTC6811.c **** 		//store cell temperature in bmsData
 393:Src/LTC6811.c **** 		bmsData[(board * 8) + 0][4] = (uint8_t) ((boardTemp[0] >> 8) & 0xFF); //temp1 H
 394:Src/LTC6811.c **** 		bmsData[(board * 8) + 0][5] = (uint8_t) (boardTemp[0] & 0xFF); //temp1 L
 395:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][4] = (uint8_t) ((boardTemp[0] >> 8) & 0xFF); //temp1 H
 396:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][5] = (uint8_t) (boardTemp[0] & 0xFF); //temp1 L
ARM GAS  /tmp/ccIyoWCJ.s 			page 10


 397:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][4] = (uint8_t) ((boardTemp[1] >> 8) & 0xFF); //temp2 H
 398:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][5] = (uint8_t) (boardTemp[1] & 0xFF); //temp2 L
 399:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][4] = (uint8_t) ((boardTemp[1] >> 8) & 0xFF); //temp2 H
 400:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][5] = (uint8_t) (boardTemp[1] & 0xFF); //temp2 L
 401:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][4] = (uint8_t) ((boardTemp[2] >> 8) & 0xFF); //temp3 H
 402:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][5] = (uint8_t) (boardTemp[2] & 0xFF); //temp3 L
 403:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][4] = (uint8_t) ((boardTemp[2] >> 8) & 0xFF); //temp3 H
 404:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][5] = (uint8_t) (boardTemp[2] & 0xFF); //temp3 L
 405:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][4] = (uint8_t) ((boardTemp[3] >> 8) & 0xFF); //temp4 H
 406:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][5] = (uint8_t) (boardTemp[3] & 0xFF); //temp4 L
 407:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][4] = (uint8_t) ((boardTemp[3] >> 8) & 0xFF); //temp4 H
 408:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][5] = (uint8_t) (boardTemp[3] & 0xFF); //temp4 L
 409:Src/LTC6811.c **** 	}
 410:Src/LTC6811.c **** 	
 411:Src/LTC6811.c **** 	// for (uint8_t board = 0; board < 12; board++) {
 412:Src/LTC6811.c **** 	// 	if (PEC_check[board] == 0)
 413:Src/LTC6811.c **** 	// 		dataValid = false;
 414:Src/LTC6811.c **** 	// }
 415:Src/LTC6811.c **** 
 416:Src/LTC6811.c **** 	return dataValid;
 417:Src/LTC6811.c **** }
 418:Src/LTC6811.c **** 
 419:Src/LTC6811.c **** bool readConfig(uint8_t address, uint8_t cfg[8]) {
 420:Src/LTC6811.c **** 	
 421:Src/LTC6811.c **** 	uint16_t *config;
 422:Src/LTC6811.c **** 	bool dataValid = false;
 423:Src/LTC6811.c **** 	
 424:Src/LTC6811.c **** 	config = (uint16_t *)malloc(4*sizeof(uint16_t));
 425:Src/LTC6811.c **** 
 426:Src/LTC6811.c **** 	wakeup_idle();
 427:Src/LTC6811.c **** 	
 428:Src/LTC6811.c **** 	dataValid = readRegister(ReadConfigurationRegisterGroup, address, config);
 429:Src/LTC6811.c **** 	
 430:Src/LTC6811.c **** 	cfg[0] = (uint8_t) ((config[0] >> 8) & 0xFF);
 431:Src/LTC6811.c **** 	cfg[1] = (uint8_t) (config[0] & 0xFF);
 432:Src/LTC6811.c **** 	cfg[2] = (uint8_t) ((config[1] >> 8) & 0xFF);
 433:Src/LTC6811.c **** 	cfg[3] = (uint8_t) (config[1] & 0xFF);
 434:Src/LTC6811.c **** 	cfg[4] = (uint8_t) ((config[2] >> 8) & 0xFF);
 435:Src/LTC6811.c **** 	cfg[5] = (uint8_t) (config[2] & 0xFF);
 436:Src/LTC6811.c **** 	cfg[6] = (uint8_t) ((config[3] >> 8) & 0xFF);
 437:Src/LTC6811.c **** 	cfg[7] = (uint8_t) (config[3] & 0xFF);
 438:Src/LTC6811.c **** 
 439:Src/LTC6811.c **** 	free(config);
 440:Src/LTC6811.c **** 	
 441:Src/LTC6811.c **** 	return dataValid;
 442:Src/LTC6811.c **** }
 443:Src/LTC6811.c **** 
 444:Src/LTC6811.c **** /*bool checkCellConnection(uint8_t address, uint16_t cellVoltage[12], bool cellConnection[12]) {
 445:Src/LTC6811.c **** 		
 446:Src/LTC6811.c **** 
 447:Src/LTC6811.c **** 	
 448:Src/LTC6811.c **** 	for (uint8_t i = 0; i < 12; i++) {
 449:Src/LTC6811.c **** 		// if voltage fell by > 100mV
 450:Src/LTC6811.c **** 		if ((cellVoltage[i] - ADOWvoltage[i]) > 1000) {
 451:Src/LTC6811.c **** 			cellConnection[i] = 0; // cell is disconnected
 452:Src/LTC6811.c **** 			disconnect = true;
 453:Src/LTC6811.c **** 		}
ARM GAS  /tmp/ccIyoWCJ.s 			page 11


 454:Src/LTC6811.c **** 		else {
 455:Src/LTC6811.c **** 			cellConnection[i] = 1;
 456:Src/LTC6811.c **** 		}
 457:Src/LTC6811.c **** 	}
 458:Src/LTC6811.c **** 	return disconnect;
 459:Src/LTC6811.c **** }*/
 460:Src/LTC6811.c **** 
 461:Src/LTC6811.c **** bool checkAllCellConnections(BMSconfigStructTypedef cfg, uint8_t bmsData[96][6]) {
 462:Src/LTC6811.c **** 	
 463:Src/LTC6811.c **** 	uint16_t ADOWvoltage[cfg.numOfCellInputs];
 464:Src/LTC6811.c **** 	uint16_t cellVoltage;
 465:Src/LTC6811.c **** 	bool disconnect = false;
 466:Src/LTC6811.c **** 	bool PEC_check[12];
 467:Src/LTC6811.c **** 	bool dataValid = true;
 468:Src/LTC6811.c **** 
 469:Src/LTC6811.c **** 	wakeup_idle();
 470:Src/LTC6811.c **** 
 471:Src/LTC6811.c **** 	//at least 2
 472:Src/LTC6811.c **** 	sendBroadcastCommand(ClearRegisters);
 473:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 474:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 475:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 476:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 477:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 478:Src/LTC6811.c **** 	HAL_Delay(20);
 479:Src/LTC6811.c **** 
 480:Src/LTC6811.c **** 	wakeup_idle();
 481:Src/LTC6811.c **** 
 482:Src/LTC6811.c **** 	for (uint8_t board = 0; board < cfg.numOfICs; board++) {
 483:Src/LTC6811.c **** 
 484:Src/LTC6811.c **** 		PEC_check[board] = readCellVoltage(cfg.address[board], ADOWvoltage);
 485:Src/LTC6811.c **** 		dataValid &= PEC_check[board];
 486:Src/LTC6811.c **** 
 487:Src/LTC6811.c **** 		ADOWvoltage[4] = ADOWvoltage[6];
 488:Src/LTC6811.c **** 		ADOWvoltage[5] = ADOWvoltage[7];
 489:Src/LTC6811.c **** 		ADOWvoltage[6] = ADOWvoltage[8];
 490:Src/LTC6811.c **** 		ADOWvoltage[7] = ADOWvoltage[9];
 491:Src/LTC6811.c **** 
 492:Src/LTC6811.c **** 		for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 493:Src/LTC6811.c **** 
 494:Src/LTC6811.c **** 			cellVoltage = 0;
 495:Src/LTC6811.c **** 			cellVoltage = (uint16_t) (bmsData[(board * cfg.numOfCellsPerIC) + cell][2]);
 496:Src/LTC6811.c **** 			cellVoltage = cellVoltage << 8;
 497:Src/LTC6811.c **** 			cellVoltage += (uint16_t) (bmsData[(board * cfg.numOfCellsPerIC) + cell][3]);
 498:Src/LTC6811.c **** 
 499:Src/LTC6811.c **** 			if ((cellVoltage - ADOWvoltage[cell]) < 1000){
 500:Src/LTC6811.c **** 				bmsData[(board * cfg.numOfCellsPerIC) + cell][1] |= 0b00000001; //negligible drop in voltage, s
 501:Src/LTC6811.c **** 			}
 502:Src/LTC6811.c **** 
 503:Src/LTC6811.c **** 			// if ((cellVoltage - ADOWvoltage[cell]) > 1000)
 504:Src/LTC6811.c **** 			// 	bmsData[(board * cfg.numOfCellsPerIC) + cell][1] &= 0b11111110; //significant drop in voltag
 505:Src/LTC6811.c **** 			// else
 506:Src/LTC6811.c **** 			// 	bmsData[(board * cfg.numOfCellsPerIC) + cell][1] |= 0b00000001; //negligible drop in voltage
 507:Src/LTC6811.c **** 		}
 508:Src/LTC6811.c **** 	}
 509:Src/LTC6811.c **** 
 510:Src/LTC6811.c **** 	return dataValid;
ARM GAS  /tmp/ccIyoWCJ.s 			page 12


 511:Src/LTC6811.c **** }
 512:Src/LTC6811.c **** 
 513:Src/LTC6811.c **** bool dischargeCellGroups(BMSconfigStructTypedef config, bool cellDischarge[12][8]) {
 514:Src/LTC6811.c **** 	
 515:Src/LTC6811.c **** 	BMSconfigStructTypedef *cfg;
 516:Src/LTC6811.c **** 
 517:Src/LTC6811.c **** 	cfg = &config;
 518:Src/LTC6811.c **** 
 519:Src/LTC6811.c **** 	wakeup_idle();
 520:Src/LTC6811.c **** 
 521:Src/LTC6811.c **** 	for (uint8_t i = 0; i < config.numOfICs; i++) {
 522:Src/LTC6811.c **** 
 523:Src/LTC6811.c **** 		cfg->DischargeCell1 = cellDischarge[i][0];
 524:Src/LTC6811.c **** 		cfg->DischargeCell2 = cellDischarge[i][1];
 525:Src/LTC6811.c **** 		cfg->DischargeCell3 = cellDischarge[i][2];
 526:Src/LTC6811.c **** 		cfg->DischargeCell4 = cellDischarge[i][3];
 527:Src/LTC6811.c **** 		cfg->DischargeCell7 = cellDischarge[i][4];
 528:Src/LTC6811.c **** 		cfg->DischargeCell8 = cellDischarge[i][5];
 529:Src/LTC6811.c **** 		cfg->DischargeCell9 = cellDischarge[i][6];
 530:Src/LTC6811.c **** 		cfg->DischargeCell10 = cellDischarge[i][7];
 531:Src/LTC6811.c **** 
 532:Src/LTC6811.c **** 		writeConfigAddress(config, config.address[i]);
 533:Src/LTC6811.c **** 
 534:Src/LTC6811.c **** 	}
 535:Src/LTC6811.c **** 
 536:Src/LTC6811.c **** 	cfg->DischargeCell1 = 0;
 537:Src/LTC6811.c **** 	cfg->DischargeCell2 = 0;
 538:Src/LTC6811.c **** 	cfg->DischargeCell3 = 0;
 539:Src/LTC6811.c **** 	cfg->DischargeCell4 = 0;
 540:Src/LTC6811.c **** 	cfg->DischargeCell7 = 0;
 541:Src/LTC6811.c **** 	cfg->DischargeCell8 = 0;
 542:Src/LTC6811.c **** 	cfg->DischargeCell9 = 0;
 543:Src/LTC6811.c **** 	cfg->DischargeCell10 = 0;
 544:Src/LTC6811.c **** 
 545:Src/LTC6811.c **** 	return 0;
 546:Src/LTC6811.c **** 	
 547:Src/LTC6811.c **** }
 548:Src/LTC6811.c **** 
 549:Src/LTC6811.c **** /*bool dischargeCell(BMSconfigStructTypedef config, bool cellDischarge[8]) {
 550:Src/LTC6811.c **** 	
 551:Src/LTC6811.c **** 	BMSconfigStructTypedef *cfg;
 552:Src/LTC6811.c **** 	cfg = &config;
 553:Src/LTC6811.c **** 	
 554:Src/LTC6811.c **** 	cfg->DischargeCell1 = cellDischarge[0];
 555:Src/LTC6811.c **** 	cfg->DischargeCell2 = cellDischarge[1];
 556:Src/LTC6811.c **** 	cfg->DischargeCell3 = cellDischarge[2];
 557:Src/LTC6811.c **** 	cfg->DischargeCell4 = cellDischarge[3];
 558:Src/LTC6811.c **** 	cfg->DischargeCell7 = cellDischarge[4];
 559:Src/LTC6811.c **** 	cfg->DischargeCell8 = cellDischarge[5];
 560:Src/LTC6811.c **** 	cfg->DischargeCell9 = cellDischarge[6];
 561:Src/LTC6811.c **** 	cfg->DischargeCell10 = cellDischarge[7];
 562:Src/LTC6811.c **** 	
 563:Src/LTC6811.c **** 	writeConfig(config, 0, 1);
 564:Src/LTC6811.c **** 	
 565:Src/LTC6811.c **** 	return 0;
 566:Src/LTC6811.c **** 	
 567:Src/LTC6811.c **** }*/
ARM GAS  /tmp/ccIyoWCJ.s 			page 13


 568:Src/LTC6811.c **** 
 569:Src/LTC6811.c **** void wakeup_idle() {
 112              		.loc 1 569 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 08B5     		push	{r3, lr}
 117              	.LCFI0:
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 3, -8
 120              		.cfi_offset 14, -4
 121              	.LVL12:
 570:Src/LTC6811.c **** 	uint32_t delay = 15;
 571:Src/LTC6811.c **** 	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
 122              		.loc 1 571 0
 123 0002 0022     		movs	r2, #0
 124 0004 1021     		movs	r1, #16
 125 0006 0748     		ldr	r0, .L16
 126 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL13:
 570:Src/LTC6811.c **** 	uint32_t delay = 15;
 128              		.loc 1 570 0
 129 000c 0F23     		movs	r3, #15
 572:Src/LTC6811.c **** 	while(delay--);
 130              		.loc 1 572 0
 131 000e 00E0     		b	.L13
 132              	.LVL14:
 133              	.L14:
 134 0010 1346     		mov	r3, r2
 135              	.LVL15:
 136              	.L13:
 137              		.loc 1 572 0 is_stmt 0 discriminator 1
 138 0012 5A1E     		subs	r2, r3, #1
 139              	.LVL16:
 140 0014 002B     		cmp	r3, #0
 141 0016 FBD1     		bne	.L14
 573:Src/LTC6811.c **** 	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 142              		.loc 1 573 0 is_stmt 1
 143 0018 0122     		movs	r2, #1
 144              	.LVL17:
 145 001a 1021     		movs	r1, #16
 146 001c 0148     		ldr	r0, .L16
 147 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 148              	.LVL18:
 574:Src/LTC6811.c **** }
 149              		.loc 1 574 0
 150 0022 08BD     		pop	{r3, pc}
 151              	.L17:
 152              		.align	2
 153              	.L16:
 154 0024 00080140 		.word	1073809408
 155              		.cfi_endproc
 156              	.LFE76:
 158              		.section	.text.calculatePEC,"ax",%progbits
 159              		.align	1
 160              		.global	calculatePEC
 161              		.syntax unified
ARM GAS  /tmp/ccIyoWCJ.s 			page 14


 162              		.thumb
 163              		.thumb_func
 164              		.fpu softvfp
 166              	calculatePEC:
 167              	.LFB80:
 575:Src/LTC6811.c **** 
 576:Src/LTC6811.c **** bool readRegister(CommandCodeTypedef command, uint8_t address, uint16_t *data) {
 577:Src/LTC6811.c **** 	
 578:Src/LTC6811.c **** 	uint8_t cmd[12];
 579:Src/LTC6811.c **** 	uint8_t rx_data[12];
 580:Src/LTC6811.c **** 	uint16_t PEC_return;
 581:Src/LTC6811.c **** 	uint8_t *PEC_send;
 582:Src/LTC6811.c **** 	bool dataValid = true;
 583:Src/LTC6811.c **** 
 584:Src/LTC6811.c **** 	PEC_send = (uint8_t *)malloc(6*sizeof(uint8_t));
 585:Src/LTC6811.c **** 	
 586:Src/LTC6811.c **** 	PEC_send[0] = (uint8_t) (0x80 | ((address << 3) & 0x78) | ((command >> 8) & 0x07));
 587:Src/LTC6811.c **** 	PEC_send[1] = (uint8_t) (command & 0xFF);
 588:Src/LTC6811.c **** 
 589:Src/LTC6811.c **** 	cmd[0] = PEC_send[0];
 590:Src/LTC6811.c **** 	cmd[1] = PEC_send[1];
 591:Src/LTC6811.c **** 	
 592:Src/LTC6811.c **** 	PEC_return = calculatePEC(2, PEC_send);
 593:Src/LTC6811.c **** 	
 594:Src/LTC6811.c **** 	cmd[2] = (PEC_return >> 8) & 0xFF;
 595:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 596:Src/LTC6811.c **** 	
 597:Src/LTC6811.c **** 	cmd[4] = 0;
 598:Src/LTC6811.c **** 	cmd[5] = 0;
 599:Src/LTC6811.c **** 	cmd[6] = 0;
 600:Src/LTC6811.c **** 	cmd[7] = 0;
 601:Src/LTC6811.c **** 	cmd[8] = 0;
 602:Src/LTC6811.c **** 	cmd[9] = 0;
 603:Src/LTC6811.c **** 	cmd[10] = 0;
 604:Src/LTC6811.c **** 	cmd[11] = 0;
 605:Src/LTC6811.c **** 	
 606:Src/LTC6811.c **** 	SPIWriteRead(cmd, rx_data, sizeof(cmd)); // send 4 command bytes, receive 6 cell voltage bytes (4-
 607:Src/LTC6811.c **** 	
 608:Src/LTC6811.c **** 	// calculate PEC based on cell voltage data received
 609:Src/LTC6811.c **** 	PEC_send[0] = rx_data[4]; // cell 1 voltage low bytes
 610:Src/LTC6811.c **** 	PEC_send[1] = rx_data[5]; // cell 1 voltage high bytes
 611:Src/LTC6811.c **** 	PEC_send[2] = rx_data[6]; // cell 2 voltage low bytes
 612:Src/LTC6811.c **** 	PEC_send[3] = rx_data[7]; // cell 2 voltage high bytes
 613:Src/LTC6811.c **** 	PEC_send[4] = rx_data[8]; // cell 3 voltage low bytes
 614:Src/LTC6811.c **** 	PEC_send[5] = rx_data[9]; // cell 3 voltage high bytes
 615:Src/LTC6811.c **** 	
 616:Src/LTC6811.c **** 	PEC_return = calculatePEC(6, PEC_send);
 617:Src/LTC6811.c **** 	
 618:Src/LTC6811.c **** 	// check if received PEC matches calculated PEC
 619:Src/LTC6811.c **** 	if (PEC_return != (((rx_data[10] << 8) & 0xFF00) | (rx_data[11] & 0x00FF))) {
 620:Src/LTC6811.c **** 		dataValid = false;
 621:Src/LTC6811.c **** 	}
 622:Src/LTC6811.c **** 	
 623:Src/LTC6811.c **** 	if (command == ReadCellVoltageRegisterGroup1to3) {
 624:Src/LTC6811.c **** 		
 625:Src/LTC6811.c **** 		data[0] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 626:Src/LTC6811.c **** 		data[1] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
ARM GAS  /tmp/ccIyoWCJ.s 			page 15


 627:Src/LTC6811.c **** 		data[2] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 628:Src/LTC6811.c **** 		//data[3] = (uint16_t) ((rx_data[10] << 8) & 0xFF00) | (rx_data[11] & 0x00FF);
 629:Src/LTC6811.c **** 		//data[4] = PEC_return;
 630:Src/LTC6811.c **** 	}
 631:Src/LTC6811.c **** 
 632:Src/LTC6811.c **** 	if (command == ReadCellVoltageRegisterGroup4to6) {
 633:Src/LTC6811.c **** 		
 634:Src/LTC6811.c **** 		data[3] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 635:Src/LTC6811.c **** 		data[4] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 636:Src/LTC6811.c **** 		data[5] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 637:Src/LTC6811.c **** 	}
 638:Src/LTC6811.c **** 	
 639:Src/LTC6811.c **** 	if (command == ReadCellVoltageRegisterGroup7to9) {
 640:Src/LTC6811.c **** 		
 641:Src/LTC6811.c **** 		data[6] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 642:Src/LTC6811.c **** 		data[7] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 643:Src/LTC6811.c **** 		data[8] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 644:Src/LTC6811.c **** 	}
 645:Src/LTC6811.c **** 	
 646:Src/LTC6811.c **** 	if (command == ReadCellVoltageRegisterGroup10to12) {
 647:Src/LTC6811.c **** 		
 648:Src/LTC6811.c **** 		data[9] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 649:Src/LTC6811.c **** 		data[10] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 650:Src/LTC6811.c **** 		data[11] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 651:Src/LTC6811.c **** 	}
 652:Src/LTC6811.c **** 	
 653:Src/LTC6811.c **** 	if (command == ReadAuxiliaryGroupA) {
 654:Src/LTC6811.c **** 		
 655:Src/LTC6811.c **** 		data[0] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 656:Src/LTC6811.c **** 		data[1] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 657:Src/LTC6811.c **** 		data[2] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 658:Src/LTC6811.c **** 	}
 659:Src/LTC6811.c **** 	
 660:Src/LTC6811.c **** 	if (command == ReadAuxiliaryGroupB) {
 661:Src/LTC6811.c **** 		data[3] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 662:Src/LTC6811.c **** 	}
 663:Src/LTC6811.c **** 	
 664:Src/LTC6811.c **** 	if (command == ReadConfigurationRegisterGroup) {
 665:Src/LTC6811.c **** 		data[0] = (uint16_t) ((rx_data[4] << 8) & 0xFF00) | (rx_data[5] & 0x00FF);
 666:Src/LTC6811.c **** 		data[1] = (uint16_t) ((rx_data[6] << 8) & 0xFF00) | (rx_data[7] & 0x00FF);
 667:Src/LTC6811.c **** 		data[2] = (uint16_t) ((rx_data[8] << 8) & 0xFF00) | (rx_data[9] & 0x00FF);
 668:Src/LTC6811.c **** 		data[3] = (uint16_t) ((rx_data[10] << 8) & 0xFF00) | (rx_data[11] & 0x00FF);
 669:Src/LTC6811.c **** 	}
 670:Src/LTC6811.c **** 
 671:Src/LTC6811.c **** 	free(PEC_send);
 672:Src/LTC6811.c **** 	
 673:Src/LTC6811.c **** 	return(dataValid);
 674:Src/LTC6811.c **** 	
 675:Src/LTC6811.c **** };
 676:Src/LTC6811.c **** 
 677:Src/LTC6811.c **** void sendBroadcastCommand(CommandCodeTypedef command) {
 678:Src/LTC6811.c **** 	
 679:Src/LTC6811.c **** 	uint8_t cmd[4];
 680:Src/LTC6811.c **** 	uint16_t PEC_return;
 681:Src/LTC6811.c **** 	
 682:Src/LTC6811.c **** 	cmd[0] = (uint8_t) ((command >> 8) & 0x0F);
 683:Src/LTC6811.c **** 	cmd[1] = (uint8_t) (command & 0xFF);
ARM GAS  /tmp/ccIyoWCJ.s 			page 16


 684:Src/LTC6811.c **** 	
 685:Src/LTC6811.c **** 	PEC_return = calculatePEC(2, (uint8_t *)&(cmd));
 686:Src/LTC6811.c **** 	
 687:Src/LTC6811.c **** 	cmd[2] = (PEC_return >> 8) & 0xFF;
 688:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 689:Src/LTC6811.c **** 	
 690:Src/LTC6811.c **** 	SPIWrite(cmd, 4);
 691:Src/LTC6811.c **** };
 692:Src/LTC6811.c **** 
 693:Src/LTC6811.c **** void sendAddressCommand(CommandCodeTypedef command, uint8_t address) {
 694:Src/LTC6811.c **** 	
 695:Src/LTC6811.c **** 	uint8_t cmd[4];
 696:Src/LTC6811.c **** 	uint16_t PEC_return;
 697:Src/LTC6811.c **** 	uint8_t *msbytes;
 698:Src/LTC6811.c **** 	
 699:Src/LTC6811.c **** 	msbytes = (uint8_t *)malloc(2*sizeof(uint8_t));
 700:Src/LTC6811.c **** 	
 701:Src/LTC6811.c **** 	msbytes[0] = (uint8_t) (0x80 | ((address << 3) & 0x78) | ((command >> 8) & 0x07));
 702:Src/LTC6811.c **** 	msbytes[1] = (uint8_t) (command & 0xFF);
 703:Src/LTC6811.c **** 
 704:Src/LTC6811.c **** 	cmd[0] = msbytes[0];
 705:Src/LTC6811.c **** 	cmd[1] = msbytes[1];
 706:Src/LTC6811.c **** 	
 707:Src/LTC6811.c **** 	PEC_return = calculatePEC(2, msbytes);
 708:Src/LTC6811.c **** 	
 709:Src/LTC6811.c **** 	cmd[2] = (PEC_return >> 8) & 0xFF;
 710:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 711:Src/LTC6811.c **** 	
 712:Src/LTC6811.c **** 	SPIWrite(cmd, 4);
 713:Src/LTC6811.c **** 	
 714:Src/LTC6811.c **** 	free(msbytes);
 715:Src/LTC6811.c **** };
 716:Src/LTC6811.c **** 
 717:Src/LTC6811.c **** uint16_t calculatePEC(uint8_t len, uint8_t *data) {
 168              		.loc 1 717 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173              	.LVL19:
 174 0000 30B4     		push	{r4, r5}
 175              	.LCFI1:
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 4, -8
 178              		.cfi_offset 5, -4
 179              	.LVL20:
 180              	.LBB5:
 718:Src/LTC6811.c **** 	
 719:Src/LTC6811.c **** 	uint16_t remainder, address;
 720:Src/LTC6811.c **** 	remainder = 16; //PEC seed
 721:Src/LTC6811.c **** 	
 722:Src/LTC6811.c **** 	for (int i = 0; i < len; i++) {
 181              		.loc 1 722 0
 182 0002 0024     		movs	r4, #0
 183              	.LBE5:
 720:Src/LTC6811.c **** 	
 184              		.loc 1 720 0
ARM GAS  /tmp/ccIyoWCJ.s 			page 17


 185 0004 1023     		movs	r3, #16
 186              	.LBB6:
 187              		.loc 1 722 0
 188 0006 0AE0     		b	.L19
 189              	.LVL21:
 190              	.L20:
 723:Src/LTC6811.c **** 		address = ((remainder >> 7) ^ data[i]) & 0xFF; //calculate PEC table address
 191              		.loc 1 723 0 discriminator 3
 192 0008 0A5D     		ldrb	r2, [r1, r4]	@ zero_extendqisi2
 193 000a 82EAD312 		eor	r2, r2, r3, lsr #7
 194 000e D2B2     		uxtb	r2, r2
 195              	.LVL22:
 724:Src/LTC6811.c **** 		remainder = (remainder << 8) ^ pec15Table[address];
 196              		.loc 1 724 0 discriminator 3
 197 0010 064D     		ldr	r5, .L22
 198 0012 35F91220 		ldrsh	r2, [r5, r2, lsl #1]
 199              	.LVL23:
 200 0016 82EA0323 		eor	r3, r2, r3, lsl #8
 201              	.LVL24:
 202 001a 9BB2     		uxth	r3, r3
 203              	.LVL25:
 722:Src/LTC6811.c **** 		address = ((remainder >> 7) ^ data[i]) & 0xFF; //calculate PEC table address
 204              		.loc 1 722 0 discriminator 3
 205 001c 0134     		adds	r4, r4, #1
 206              	.LVL26:
 207              	.L19:
 722:Src/LTC6811.c **** 		address = ((remainder >> 7) ^ data[i]) & 0xFF; //calculate PEC table address
 208              		.loc 1 722 0 is_stmt 0 discriminator 1
 209 001e A042     		cmp	r0, r4
 210 0020 F2DC     		bgt	.L20
 211              	.LBE6:
 725:Src/LTC6811.c **** 	}
 726:Src/LTC6811.c **** 	
 727:Src/LTC6811.c **** 	return (remainder * 2); //The CRC15 has a 0 in the LSB so the final value must be multiplied by 2
 212              		.loc 1 727 0 is_stmt 1
 213 0022 5800     		lsls	r0, r3, #1
 214              	.LVL27:
 215 0024 80B2     		uxth	r0, r0
 728:Src/LTC6811.c **** };
 216              		.loc 1 728 0
 217 0026 30BC     		pop	{r4, r5}
 218              	.LCFI2:
 219              		.cfi_restore 5
 220              		.cfi_restore 4
 221              		.cfi_def_cfa_offset 0
 222              	.LVL28:
 223 0028 7047     		bx	lr
 224              	.L23:
 225 002a 00BF     		.align	2
 226              	.L22:
 227 002c 00000000 		.word	pec15Table
 228              		.cfi_endproc
 229              	.LFE80:
 231              		.section	.text.readRegister,"ax",%progbits
 232              		.align	1
 233              		.global	readRegister
 234              		.syntax unified
ARM GAS  /tmp/ccIyoWCJ.s 			page 18


 235              		.thumb
 236              		.thumb_func
 237              		.fpu softvfp
 239              	readRegister:
 240              	.LFB77:
 576:Src/LTC6811.c **** 	
 241              		.loc 1 576 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 24
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              	.LVL29:
 246 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 247              	.LCFI3:
 248              		.cfi_def_cfa_offset 20
 249              		.cfi_offset 4, -20
 250              		.cfi_offset 5, -16
 251              		.cfi_offset 6, -12
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 87B0     		sub	sp, sp, #28
 255              	.LCFI4:
 256              		.cfi_def_cfa_offset 48
 257 0004 0646     		mov	r6, r0
 258 0006 0C46     		mov	r4, r1
 259 0008 1746     		mov	r7, r2
 260              	.LVL30:
 584:Src/LTC6811.c **** 	
 261              		.loc 1 584 0
 262 000a 0620     		movs	r0, #6
 263              	.LVL31:
 264 000c FFF7FEFF 		bl	malloc
 265              	.LVL32:
 266 0010 0546     		mov	r5, r0
 267              	.LVL33:
 586:Src/LTC6811.c **** 	PEC_send[1] = (uint8_t) (command & 0xFF);
 268              		.loc 1 586 0
 269 0012 E300     		lsls	r3, r4, #3
 270 0014 03F07803 		and	r3, r3, #120
 271 0018 63F07F03 		orn	r3, r3, #127
 272 001c C6F30224 		ubfx	r4, r6, #8, #3
 273 0020 2343     		orrs	r3, r3, r4
 274 0022 DBB2     		uxtb	r3, r3
 275 0024 0370     		strb	r3, [r0]
 587:Src/LTC6811.c **** 
 276              		.loc 1 587 0
 277 0026 F2B2     		uxtb	r2, r6
 278 0028 4270     		strb	r2, [r0, #1]
 589:Src/LTC6811.c **** 	cmd[1] = PEC_send[1];
 279              		.loc 1 589 0
 280 002a 8DF80C30 		strb	r3, [sp, #12]
 590:Src/LTC6811.c **** 	
 281              		.loc 1 590 0
 282 002e 8DF80D20 		strb	r2, [sp, #13]
 592:Src/LTC6811.c **** 	
 283              		.loc 1 592 0
 284 0032 0146     		mov	r1, r0
 285 0034 0220     		movs	r0, #2
ARM GAS  /tmp/ccIyoWCJ.s 			page 19


 286              	.LVL34:
 287 0036 FFF7FEFF 		bl	calculatePEC
 288              	.LVL35:
 594:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 289              		.loc 1 594 0
 290 003a 030A     		lsrs	r3, r0, #8
 291 003c 8DF80E30 		strb	r3, [sp, #14]
 595:Src/LTC6811.c **** 	
 292              		.loc 1 595 0
 293 0040 8DF80F00 		strb	r0, [sp, #15]
 597:Src/LTC6811.c **** 	cmd[5] = 0;
 294              		.loc 1 597 0
 295 0044 0023     		movs	r3, #0
 296 0046 8DF81030 		strb	r3, [sp, #16]
 598:Src/LTC6811.c **** 	cmd[6] = 0;
 297              		.loc 1 598 0
 298 004a 8DF81130 		strb	r3, [sp, #17]
 599:Src/LTC6811.c **** 	cmd[7] = 0;
 299              		.loc 1 599 0
 300 004e 8DF81230 		strb	r3, [sp, #18]
 600:Src/LTC6811.c **** 	cmd[8] = 0;
 301              		.loc 1 600 0
 302 0052 8DF81330 		strb	r3, [sp, #19]
 601:Src/LTC6811.c **** 	cmd[9] = 0;
 303              		.loc 1 601 0
 304 0056 8DF81430 		strb	r3, [sp, #20]
 602:Src/LTC6811.c **** 	cmd[10] = 0;
 305              		.loc 1 602 0
 306 005a 8DF81530 		strb	r3, [sp, #21]
 603:Src/LTC6811.c **** 	cmd[11] = 0;
 307              		.loc 1 603 0
 308 005e 8DF81630 		strb	r3, [sp, #22]
 604:Src/LTC6811.c **** 	
 309              		.loc 1 604 0
 310 0062 8DF81730 		strb	r3, [sp, #23]
 606:Src/LTC6811.c **** 	
 311              		.loc 1 606 0
 312 0066 0C22     		movs	r2, #12
 313 0068 6946     		mov	r1, sp
 314 006a 0DEB0200 		add	r0, sp, r2
 315              	.LVL36:
 316 006e FFF7FEFF 		bl	SPIWriteRead
 317              	.LVL37:
 609:Src/LTC6811.c **** 	PEC_send[1] = rx_data[5]; // cell 1 voltage high bytes
 318              		.loc 1 609 0
 319 0072 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 320 0076 2B70     		strb	r3, [r5]
 610:Src/LTC6811.c **** 	PEC_send[2] = rx_data[6]; // cell 2 voltage low bytes
 321              		.loc 1 610 0
 322 0078 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 323 007c 6B70     		strb	r3, [r5, #1]
 611:Src/LTC6811.c **** 	PEC_send[3] = rx_data[7]; // cell 2 voltage high bytes
 324              		.loc 1 611 0
 325 007e 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 326 0082 AB70     		strb	r3, [r5, #2]
 612:Src/LTC6811.c **** 	PEC_send[4] = rx_data[8]; // cell 3 voltage low bytes
 327              		.loc 1 612 0
ARM GAS  /tmp/ccIyoWCJ.s 			page 20


 328 0084 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 329 0088 EB70     		strb	r3, [r5, #3]
 613:Src/LTC6811.c **** 	PEC_send[5] = rx_data[9]; // cell 3 voltage high bytes
 330              		.loc 1 613 0
 331 008a 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 332 008e 2B71     		strb	r3, [r5, #4]
 614:Src/LTC6811.c **** 	
 333              		.loc 1 614 0
 334 0090 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 335 0094 6B71     		strb	r3, [r5, #5]
 616:Src/LTC6811.c **** 	
 336              		.loc 1 616 0
 337 0096 2946     		mov	r1, r5
 338 0098 0620     		movs	r0, #6
 339 009a FFF7FEFF 		bl	calculatePEC
 340              	.LVL38:
 619:Src/LTC6811.c **** 		dataValid = false;
 341              		.loc 1 619 0
 342 009e 9DF80A20 		ldrb	r2, [sp, #10]	@ zero_extendqisi2
 343 00a2 9DF80B30 		ldrb	r3, [sp, #11]	@ zero_extendqisi2
 344 00a6 43EA0223 		orr	r3, r3, r2, lsl #8
 345 00aa 9842     		cmp	r0, r3
 346 00ac 16D0     		beq	.L35
 620:Src/LTC6811.c **** 	}
 347              		.loc 1 620 0
 348 00ae 0024     		movs	r4, #0
 349              	.L25:
 350              	.LVL39:
 623:Src/LTC6811.c **** 		
 351              		.loc 1 623 0
 352 00b0 042E     		cmp	r6, #4
 353 00b2 15D0     		beq	.L36
 354              	.L26:
 632:Src/LTC6811.c **** 		
 355              		.loc 1 632 0
 356 00b4 062E     		cmp	r6, #6
 357 00b6 2CD0     		beq	.L37
 358              	.L27:
 639:Src/LTC6811.c **** 		
 359              		.loc 1 639 0
 360 00b8 082E     		cmp	r6, #8
 361 00ba 43D0     		beq	.L38
 362              	.L28:
 646:Src/LTC6811.c **** 		
 363              		.loc 1 646 0
 364 00bc 0A2E     		cmp	r6, #10
 365 00be 5AD0     		beq	.L39
 366              	.L29:
 653:Src/LTC6811.c **** 		
 367              		.loc 1 653 0
 368 00c0 0C2E     		cmp	r6, #12
 369 00c2 71D0     		beq	.L40
 370              	.L30:
 660:Src/LTC6811.c **** 		data[3] = (uint16_t) ((rx_data[5] << 8) & 0xFF00) | (rx_data[4] & 0x00FF);
 371              		.loc 1 660 0
 372 00c4 0E2E     		cmp	r6, #14
 373 00c6 00F08880 		beq	.L41
ARM GAS  /tmp/ccIyoWCJ.s 			page 21


 374              	.L31:
 664:Src/LTC6811.c **** 		data[0] = (uint16_t) ((rx_data[4] << 8) & 0xFF00) | (rx_data[5] & 0x00FF);
 375              		.loc 1 664 0
 376 00ca 022E     		cmp	r6, #2
 377 00cc 00F08E80 		beq	.L42
 378              	.L32:
 671:Src/LTC6811.c **** 	
 379              		.loc 1 671 0
 380 00d0 2846     		mov	r0, r5
 381              	.LVL40:
 382 00d2 FFF7FEFF 		bl	free
 383              	.LVL41:
 675:Src/LTC6811.c **** 
 384              		.loc 1 675 0
 385 00d6 2046     		mov	r0, r4
 386 00d8 07B0     		add	sp, sp, #28
 387              	.LCFI5:
 388              		.cfi_remember_state
 389              		.cfi_def_cfa_offset 20
 390              		@ sp needed
 391 00da F0BD     		pop	{r4, r5, r6, r7, pc}
 392              	.LVL42:
 393              	.L35:
 394              	.LCFI6:
 395              		.cfi_restore_state
 582:Src/LTC6811.c **** 
 396              		.loc 1 582 0
 397 00dc 0124     		movs	r4, #1
 398 00de E7E7     		b	.L25
 399              	.LVL43:
 400              	.L36:
 625:Src/LTC6811.c **** 		data[1] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 401              		.loc 1 625 0
 402 00e0 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 403 00e4 1B02     		lsls	r3, r3, #8
 404 00e6 1BB2     		sxth	r3, r3
 405 00e8 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 406 00ec 1343     		orrs	r3, r3, r2
 407 00ee 3B80     		strh	r3, [r7]	@ movhi
 626:Src/LTC6811.c **** 		data[2] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 408              		.loc 1 626 0
 409 00f0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 410 00f4 1B02     		lsls	r3, r3, #8
 411 00f6 1BB2     		sxth	r3, r3
 412 00f8 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 413 00fc 1343     		orrs	r3, r3, r2
 414 00fe 7B80     		strh	r3, [r7, #2]	@ movhi
 627:Src/LTC6811.c **** 		//data[3] = (uint16_t) ((rx_data[10] << 8) & 0xFF00) | (rx_data[11] & 0x00FF);
 415              		.loc 1 627 0
 416 0100 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 417 0104 1B02     		lsls	r3, r3, #8
 418 0106 1BB2     		sxth	r3, r3
 419 0108 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 420 010c 1343     		orrs	r3, r3, r2
 421 010e BB80     		strh	r3, [r7, #4]	@ movhi
 422 0110 D0E7     		b	.L26
 423              	.L37:
ARM GAS  /tmp/ccIyoWCJ.s 			page 22


 634:Src/LTC6811.c **** 		data[4] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 424              		.loc 1 634 0
 425 0112 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 426 0116 1B02     		lsls	r3, r3, #8
 427 0118 1BB2     		sxth	r3, r3
 428 011a 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 429 011e 1343     		orrs	r3, r3, r2
 430 0120 FB80     		strh	r3, [r7, #6]	@ movhi
 635:Src/LTC6811.c **** 		data[5] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 431              		.loc 1 635 0
 432 0122 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 433 0126 1B02     		lsls	r3, r3, #8
 434 0128 1BB2     		sxth	r3, r3
 435 012a 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 436 012e 1343     		orrs	r3, r3, r2
 437 0130 3B81     		strh	r3, [r7, #8]	@ movhi
 636:Src/LTC6811.c **** 	}
 438              		.loc 1 636 0
 439 0132 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 440 0136 1B02     		lsls	r3, r3, #8
 441 0138 1BB2     		sxth	r3, r3
 442 013a 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 443 013e 1343     		orrs	r3, r3, r2
 444 0140 7B81     		strh	r3, [r7, #10]	@ movhi
 445 0142 B9E7     		b	.L27
 446              	.L38:
 641:Src/LTC6811.c **** 		data[7] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 447              		.loc 1 641 0
 448 0144 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 449 0148 1B02     		lsls	r3, r3, #8
 450 014a 1BB2     		sxth	r3, r3
 451 014c 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 452 0150 1343     		orrs	r3, r3, r2
 453 0152 BB81     		strh	r3, [r7, #12]	@ movhi
 642:Src/LTC6811.c **** 		data[8] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 454              		.loc 1 642 0
 455 0154 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 456 0158 1B02     		lsls	r3, r3, #8
 457 015a 1BB2     		sxth	r3, r3
 458 015c 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 459 0160 1343     		orrs	r3, r3, r2
 460 0162 FB81     		strh	r3, [r7, #14]	@ movhi
 643:Src/LTC6811.c **** 	}
 461              		.loc 1 643 0
 462 0164 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 463 0168 1B02     		lsls	r3, r3, #8
 464 016a 1BB2     		sxth	r3, r3
 465 016c 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 466 0170 1343     		orrs	r3, r3, r2
 467 0172 3B82     		strh	r3, [r7, #16]	@ movhi
 468 0174 A2E7     		b	.L28
 469              	.L39:
 648:Src/LTC6811.c **** 		data[10] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 470              		.loc 1 648 0
 471 0176 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 472 017a 1B02     		lsls	r3, r3, #8
 473 017c 1BB2     		sxth	r3, r3
ARM GAS  /tmp/ccIyoWCJ.s 			page 23


 474 017e 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 475 0182 1343     		orrs	r3, r3, r2
 476 0184 7B82     		strh	r3, [r7, #18]	@ movhi
 649:Src/LTC6811.c **** 		data[11] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 477              		.loc 1 649 0
 478 0186 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 479 018a 1B02     		lsls	r3, r3, #8
 480 018c 1BB2     		sxth	r3, r3
 481 018e 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 482 0192 1343     		orrs	r3, r3, r2
 483 0194 BB82     		strh	r3, [r7, #20]	@ movhi
 650:Src/LTC6811.c **** 	}
 484              		.loc 1 650 0
 485 0196 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 486 019a 1B02     		lsls	r3, r3, #8
 487 019c 1BB2     		sxth	r3, r3
 488 019e 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 489 01a2 1343     		orrs	r3, r3, r2
 490 01a4 FB82     		strh	r3, [r7, #22]	@ movhi
 491 01a6 8BE7     		b	.L29
 492              	.L40:
 655:Src/LTC6811.c **** 		data[1] = (uint16_t) ((rx_data[7] << 8) & 0xFF00) | (rx_data[6] & 0x00FF);
 493              		.loc 1 655 0
 494 01a8 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 495 01ac 1B02     		lsls	r3, r3, #8
 496 01ae 1BB2     		sxth	r3, r3
 497 01b0 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 498 01b4 1343     		orrs	r3, r3, r2
 499 01b6 3B80     		strh	r3, [r7]	@ movhi
 656:Src/LTC6811.c **** 		data[2] = (uint16_t) ((rx_data[9] << 8) & 0xFF00) | (rx_data[8] & 0x00FF);
 500              		.loc 1 656 0
 501 01b8 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 502 01bc 1B02     		lsls	r3, r3, #8
 503 01be 1BB2     		sxth	r3, r3
 504 01c0 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 505 01c4 1343     		orrs	r3, r3, r2
 506 01c6 7B80     		strh	r3, [r7, #2]	@ movhi
 657:Src/LTC6811.c **** 	}
 507              		.loc 1 657 0
 508 01c8 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 509 01cc 1B02     		lsls	r3, r3, #8
 510 01ce 1BB2     		sxth	r3, r3
 511 01d0 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 512 01d4 1343     		orrs	r3, r3, r2
 513 01d6 BB80     		strh	r3, [r7, #4]	@ movhi
 514 01d8 74E7     		b	.L30
 515              	.L41:
 661:Src/LTC6811.c **** 	}
 516              		.loc 1 661 0
 517 01da 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 518 01de 1B02     		lsls	r3, r3, #8
 519 01e0 1BB2     		sxth	r3, r3
 520 01e2 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 521 01e6 1343     		orrs	r3, r3, r2
 522 01e8 FB80     		strh	r3, [r7, #6]	@ movhi
 523 01ea 6EE7     		b	.L31
 524              	.L42:
ARM GAS  /tmp/ccIyoWCJ.s 			page 24


 665:Src/LTC6811.c **** 		data[1] = (uint16_t) ((rx_data[6] << 8) & 0xFF00) | (rx_data[7] & 0x00FF);
 525              		.loc 1 665 0
 526 01ec 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 527 01f0 1B02     		lsls	r3, r3, #8
 528 01f2 1BB2     		sxth	r3, r3
 529 01f4 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 530 01f8 1343     		orrs	r3, r3, r2
 531 01fa 3B80     		strh	r3, [r7]	@ movhi
 666:Src/LTC6811.c **** 		data[2] = (uint16_t) ((rx_data[8] << 8) & 0xFF00) | (rx_data[9] & 0x00FF);
 532              		.loc 1 666 0
 533 01fc 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 534 0200 1B02     		lsls	r3, r3, #8
 535 0202 1BB2     		sxth	r3, r3
 536 0204 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 537 0208 1343     		orrs	r3, r3, r2
 538 020a 7B80     		strh	r3, [r7, #2]	@ movhi
 667:Src/LTC6811.c **** 		data[3] = (uint16_t) ((rx_data[10] << 8) & 0xFF00) | (rx_data[11] & 0x00FF);
 539              		.loc 1 667 0
 540 020c 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 541 0210 1B02     		lsls	r3, r3, #8
 542 0212 1BB2     		sxth	r3, r3
 543 0214 9DF80920 		ldrb	r2, [sp, #9]	@ zero_extendqisi2
 544 0218 1343     		orrs	r3, r3, r2
 545 021a BB80     		strh	r3, [r7, #4]	@ movhi
 668:Src/LTC6811.c **** 	}
 546              		.loc 1 668 0
 547 021c 9DF80A30 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
 548 0220 1B02     		lsls	r3, r3, #8
 549 0222 1BB2     		sxth	r3, r3
 550 0224 9DF80B20 		ldrb	r2, [sp, #11]	@ zero_extendqisi2
 551 0228 1343     		orrs	r3, r3, r2
 552 022a FB80     		strh	r3, [r7, #6]	@ movhi
 553 022c 50E7     		b	.L32
 554              		.cfi_endproc
 555              	.LFE77:
 557              		.section	.text.readCellVoltage,"ax",%progbits
 558              		.align	1
 559              		.global	readCellVoltage
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu softvfp
 565              	readCellVoltage:
 566              	.LFB69:
 168:Src/LTC6811.c **** 	
 567              		.loc 1 168 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              	.LVL44:
 572 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 573              	.LCFI7:
 574              		.cfi_def_cfa_offset 24
 575              		.cfi_offset 3, -24
 576              		.cfi_offset 4, -20
 577              		.cfi_offset 5, -16
 578              		.cfi_offset 6, -12
ARM GAS  /tmp/ccIyoWCJ.s 			page 25


 579              		.cfi_offset 7, -8
 580              		.cfi_offset 14, -4
 581 0002 0746     		mov	r7, r0
 582 0004 0D46     		mov	r5, r1
 583              	.LVL45:
 174:Src/LTC6811.c **** 	
 584              		.loc 1 174 0
 585 0006 1820     		movs	r0, #24
 586              	.LVL46:
 587 0008 FFF7FEFF 		bl	malloc
 588              	.LVL47:
 589 000c 0446     		mov	r4, r0
 590              	.LVL48:
 183:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 591              		.loc 1 183 0
 592 000e 0246     		mov	r2, r0
 593 0010 3946     		mov	r1, r7
 594 0012 0420     		movs	r0, #4
 595              	.LVL49:
 596 0014 FFF7FEFF 		bl	readRegister
 597              	.LVL50:
 598 0018 0646     		mov	r6, r0
 599              	.LVL51:
 185:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 600              		.loc 1 185 0
 601 001a 2246     		mov	r2, r4
 602 001c 3946     		mov	r1, r7
 603 001e 0620     		movs	r0, #6
 604 0020 FFF7FEFF 		bl	readRegister
 605              	.LVL52:
 606 0024 0640     		ands	r6, r6, r0
 607              	.LVL53:
 608 0026 F6B2     		uxtb	r6, r6
 609              	.LVL54:
 187:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 610              		.loc 1 187 0
 611 0028 2246     		mov	r2, r4
 612 002a 3946     		mov	r1, r7
 613 002c 0820     		movs	r0, #8
 614              	.LVL55:
 615 002e FFF7FEFF 		bl	readRegister
 616              	.LVL56:
 617 0032 0640     		ands	r6, r6, r0
 618              	.LVL57:
 189:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 619              		.loc 1 189 0
 620 0034 2246     		mov	r2, r4
 621 0036 3946     		mov	r1, r7
 622 0038 0A20     		movs	r0, #10
 623              	.LVL58:
 624 003a FFF7FEFF 		bl	readRegister
 625              	.LVL59:
 626 003e 0640     		ands	r6, r6, r0
 627              	.LVL60:
 628              	.LBB7:
 194:Src/LTC6811.c **** 		cellVoltage[i] = voltage[i];
 629              		.loc 1 194 0
ARM GAS  /tmp/ccIyoWCJ.s 			page 26


 630 0040 0023     		movs	r3, #0
 631 0042 05E0     		b	.L44
 632              	.LVL61:
 633              	.L45:
 195:Src/LTC6811.c **** 	}
 634              		.loc 1 195 0 discriminator 3
 635 0044 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 636 0048 25F81320 		strh	r2, [r5, r3, lsl #1]	@ movhi
 194:Src/LTC6811.c **** 		cellVoltage[i] = voltage[i];
 637              		.loc 1 194 0 discriminator 3
 638 004c 0133     		adds	r3, r3, #1
 639              	.LVL62:
 640 004e DBB2     		uxtb	r3, r3
 641              	.LVL63:
 642              	.L44:
 194:Src/LTC6811.c **** 		cellVoltage[i] = voltage[i];
 643              		.loc 1 194 0 is_stmt 0 discriminator 1
 644 0050 0B2B     		cmp	r3, #11
 645 0052 F7D9     		bls	.L45
 646              	.LBE7:
 198:Src/LTC6811.c **** 	
 647              		.loc 1 198 0 is_stmt 1
 648 0054 2046     		mov	r0, r4
 649              	.LVL64:
 650 0056 FFF7FEFF 		bl	free
 651              	.LVL65:
 202:Src/LTC6811.c **** 
 652              		.loc 1 202 0
 653 005a 3046     		mov	r0, r6
 654 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 655              		.cfi_endproc
 656              	.LFE69:
 658              		.global	__aeabi_ui2d
 659              		.global	__aeabi_ddiv
 660              		.global	__aeabi_dmul
 661              		.global	__aeabi_dsub
 662              		.global	__aeabi_dadd
 663              		.global	__aeabi_d2uiz
 664              		.section	.text.readCellTemp,"ax",%progbits
 665              		.align	1
 666              		.global	readCellTemp
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu softvfp
 672              	readCellTemp:
 673              	.LFB71:
 304:Src/LTC6811.c **** 	
 674              		.loc 1 304 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 16
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              	.LVL66:
 679 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 680              	.LCFI8:
 681              		.cfi_def_cfa_offset 36
 682              		.cfi_offset 4, -36
ARM GAS  /tmp/ccIyoWCJ.s 			page 27


 683              		.cfi_offset 5, -32
 684              		.cfi_offset 6, -28
 685              		.cfi_offset 7, -24
 686              		.cfi_offset 8, -20
 687              		.cfi_offset 9, -16
 688              		.cfi_offset 10, -12
 689              		.cfi_offset 11, -8
 690              		.cfi_offset 14, -4
 691 0004 85B0     		sub	sp, sp, #20
 692              	.LCFI9:
 693              		.cfi_def_cfa_offset 56
 694 0006 0546     		mov	r5, r0
 695 0008 8B46     		mov	fp, r1
 696 000a 1646     		mov	r6, r2
 697 000c 1F46     		mov	r7, r3
 698              	.LVL67:
 312:Src/LTC6811.c **** 	
 699              		.loc 1 312 0
 700 000e 0820     		movs	r0, #8
 701              	.LVL68:
 702 0010 FFF7FEFF 		bl	malloc
 703              	.LVL69:
 704 0014 8246     		mov	r10, r0
 705              	.LVL70:
 318:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 706              		.loc 1 318 0
 707 0016 0246     		mov	r2, r0
 708 0018 2946     		mov	r1, r5
 709 001a 0C20     		movs	r0, #12
 710              	.LVL71:
 711 001c FFF7FEFF 		bl	readRegister
 712              	.LVL72:
 713 0020 0446     		mov	r4, r0
 714              	.LVL73:
 320:Src/LTC6811.c **** 	dataValid = dataValid & PEC_check;
 715              		.loc 1 320 0
 716 0022 5246     		mov	r2, r10
 717 0024 2946     		mov	r1, r5
 718 0026 0E20     		movs	r0, #14
 719 0028 FFF7FEFF 		bl	readRegister
 720              	.LVL74:
 721 002c 2040     		ands	r0, r0, r4
 722              	.LVL75:
 723 002e C3B2     		uxtb	r3, r0
 724 0030 0393     		str	r3, [sp, #12]
 725              	.LVL76:
 726              	.LBB8:
 325:Src/LTC6811.c **** 		if ((temp[i] > 24400) || (temp[i] < 13000)) {
 727              		.loc 1 325 0
 728 0032 0025     		movs	r5, #0
 729 0034 10E0     		b	.L48
 730              	.LVL77:
 731              	.L49:
 331:Src/LTC6811.c **** 		
 732              		.loc 1 331 0
 733 0036 0023     		movs	r3, #0
 734 0038 7355     		strb	r3, [r6, r5]
ARM GAS  /tmp/ccIyoWCJ.s 			page 28


 735 003a 21E0     		b	.L50
 736              	.L51:
 338:Src/LTC6811.c **** 		
 737              		.loc 1 338 0
 738 003c 0023     		movs	r3, #0
 739 003e BB54     		strb	r3, [r7, r2]
 740              	.L52:
 340:Src/LTC6811.c **** 			dummy[i] = (double) temp[i] / 10000; // convert from ADC value to voltage
 741              		.loc 1 340 0
 742 0040 3AF80400 		ldrh	r0, [r10, r4]
 743 0044 A0F56B53 		sub	r3, r0, #15040
 744 0048 3C3B     		subs	r3, r3, #60
 745 004a 9BB2     		uxth	r3, r3
 746 004c 42F25442 		movw	r2, #9300
 747 0050 9342     		cmp	r3, r2
 748 0052 26D9     		bls	.L56
 749              	.L53:
 325:Src/LTC6811.c **** 		if ((temp[i] > 24400) || (temp[i] < 13000)) {
 750              		.loc 1 325 0 discriminator 2
 751 0054 0135     		adds	r5, r5, #1
 752              	.LVL78:
 753 0056 EDB2     		uxtb	r5, r5
 754              	.LVL79:
 755              	.L48:
 325:Src/LTC6811.c **** 		if ((temp[i] > 24400) || (temp[i] < 13000)) {
 756              		.loc 1 325 0 is_stmt 0 discriminator 1
 757 0058 032D     		cmp	r5, #3
 758 005a 00F2A480 		bhi	.L57
 326:Src/LTC6811.c **** 			dcFault[i] = true;
 759              		.loc 1 326 0 is_stmt 1
 760 005e 2A46     		mov	r2, r5
 761 0060 6C00     		lsls	r4, r5, #1
 762 0062 3AF81530 		ldrh	r3, [r10, r5, lsl #1]
 763 0066 A3F54B53 		sub	r3, r3, #12992
 764 006a 083B     		subs	r3, r3, #8
 765 006c 9BB2     		uxth	r3, r3
 766 006e 42F68841 		movw	r1, #11400
 767 0072 8B42     		cmp	r3, r1
 768 0074 DFD9     		bls	.L49
 327:Src/LTC6811.c **** 			cellTemp[i] = 0x0000;
 769              		.loc 1 327 0
 770 0076 0123     		movs	r3, #1
 771 0078 7355     		strb	r3, [r6, r5]
 328:Src/LTC6811.c **** 		}
 772              		.loc 1 328 0
 773 007a 0023     		movs	r3, #0
 774 007c 2BF81530 		strh	r3, [fp, r5, lsl #1]	@ movhi
 775              	.L50:
 333:Src/LTC6811.c **** 			tempFault[i] = true;
 776              		.loc 1 333 0
 777 0080 3AF80430 		ldrh	r3, [r10, r4]
 778 0084 A3F54B53 		sub	r3, r3, #12992
 779 0088 083B     		subs	r3, r3, #8
 780 008a 9BB2     		uxth	r3, r3
 781 008c 40F63301 		movw	r1, #2099
 782 0090 8B42     		cmp	r3, r1
 783 0092 D3D8     		bhi	.L51
ARM GAS  /tmp/ccIyoWCJ.s 			page 29


 334:Src/LTC6811.c **** 			cellTemp[i] = 0xFFFF;
 784              		.loc 1 334 0
 785 0094 0123     		movs	r3, #1
 786 0096 BB54     		strb	r3, [r7, r2]
 335:Src/LTC6811.c **** 		}
 787              		.loc 1 335 0
 788 0098 4FF6FF73 		movw	r3, #65535
 789 009c 2BF80430 		strh	r3, [fp, r4]	@ movhi
 790 00a0 CEE7     		b	.L52
 791              	.L56:
 341:Src/LTC6811.c **** 			// convert from voltage to temperature
 792              		.loc 1 341 0
 793 00a2 FFF7FEFF 		bl	__aeabi_ui2d
 794              	.LVL80:
 795 00a6 44A3     		adr	r3, .L58
 796 00a8 D3E90023 		ldrd	r2, [r3]
 797 00ac FFF7FEFF 		bl	__aeabi_ddiv
 798              	.LVL81:
 799 00b0 CDE90001 		strd	r0, [sp]
 343:Src/LTC6811.c **** 			conversion[i] = 500 * (conversion[i] + 20); // map value to larger range
 800              		.loc 1 343 0
 801 00b4 42A3     		adr	r3, .L58+8
 802 00b6 D3E90023 		ldrd	r2, [r3]
 803 00ba FFF7FEFF 		bl	__aeabi_dmul
 804              	.LVL82:
 805 00be 0246     		mov	r2, r0
 806 00c0 0B46     		mov	r3, r1
 807 00c2 41A1     		adr	r1, .L58+16
 808 00c4 D1E90001 		ldrd	r0, [r1]
 809 00c8 FFF7FEFF 		bl	__aeabi_dsub
 810              	.LVL83:
 811 00cc 8046     		mov	r8, r0
 812 00ce 8946     		mov	r9, r1
 813 00d0 0022     		movs	r2, #0
 814 00d2 4FF08043 		mov	r3, #1073741824
 815 00d6 DDE90001 		ldrd	r0, [sp]
 816 00da FFF7FEFF 		bl	pow
 817              	.LVL84:
 818 00de 3CA3     		adr	r3, .L58+24
 819 00e0 D3E90023 		ldrd	r2, [r3]
 820 00e4 FFF7FEFF 		bl	__aeabi_dmul
 821              	.LVL85:
 822 00e8 0246     		mov	r2, r0
 823 00ea 0B46     		mov	r3, r1
 824 00ec 4046     		mov	r0, r8
 825 00ee 4946     		mov	r1, r9
 826 00f0 FFF7FEFF 		bl	__aeabi_dadd
 827              	.LVL86:
 828 00f4 8046     		mov	r8, r0
 829 00f6 8946     		mov	r9, r1
 830 00f8 0022     		movs	r2, #0
 831 00fa 3F4B     		ldr	r3, .L58+64
 832 00fc DDE90001 		ldrd	r0, [sp]
 833 0100 FFF7FEFF 		bl	pow
 834              	.LVL87:
 835 0104 34A3     		adr	r3, .L58+32
 836 0106 D3E90023 		ldrd	r2, [r3]
ARM GAS  /tmp/ccIyoWCJ.s 			page 30


 837 010a FFF7FEFF 		bl	__aeabi_dmul
 838              	.LVL88:
 839 010e 0246     		mov	r2, r0
 840 0110 0B46     		mov	r3, r1
 841 0112 4046     		mov	r0, r8
 842 0114 4946     		mov	r1, r9
 843 0116 FFF7FEFF 		bl	__aeabi_dsub
 844              	.LVL89:
 845 011a 8046     		mov	r8, r0
 846 011c 8946     		mov	r9, r1
 847 011e 0022     		movs	r2, #0
 848 0120 364B     		ldr	r3, .L58+68
 849 0122 DDE90001 		ldrd	r0, [sp]
 850 0126 FFF7FEFF 		bl	pow
 851              	.LVL90:
 852 012a 2DA3     		adr	r3, .L58+40
 853 012c D3E90023 		ldrd	r2, [r3]
 854 0130 FFF7FEFF 		bl	__aeabi_dmul
 855              	.LVL91:
 856 0134 0246     		mov	r2, r0
 857 0136 0B46     		mov	r3, r1
 858 0138 4046     		mov	r0, r8
 859 013a 4946     		mov	r1, r9
 860 013c FFF7FEFF 		bl	__aeabi_dadd
 861              	.LVL92:
 862 0140 8046     		mov	r8, r0
 863 0142 8946     		mov	r9, r1
 864 0144 0022     		movs	r2, #0
 865 0146 2E4B     		ldr	r3, .L58+72
 866 0148 DDE90001 		ldrd	r0, [sp]
 867 014c FFF7FEFF 		bl	pow
 868              	.LVL93:
 869 0150 25A3     		adr	r3, .L58+48
 870 0152 D3E90023 		ldrd	r2, [r3]
 871 0156 FFF7FEFF 		bl	__aeabi_dmul
 872              	.LVL94:
 873 015a 0246     		mov	r2, r0
 874 015c 0B46     		mov	r3, r1
 875 015e 4046     		mov	r0, r8
 876 0160 4946     		mov	r1, r9
 877 0162 FFF7FEFF 		bl	__aeabi_dsub
 878              	.LVL95:
 879 0166 8046     		mov	r8, r0
 880 0168 8946     		mov	r9, r1
 881 016a 0022     		movs	r2, #0
 882 016c 254B     		ldr	r3, .L58+76
 883 016e DDE90001 		ldrd	r0, [sp]
 884 0172 FFF7FEFF 		bl	pow
 885              	.LVL96:
 886 0176 1EA3     		adr	r3, .L58+56
 887 0178 D3E90023 		ldrd	r2, [r3]
 888 017c FFF7FEFF 		bl	__aeabi_dmul
 889              	.LVL97:
 890 0180 0246     		mov	r2, r0
 891 0182 0B46     		mov	r3, r1
 892 0184 4046     		mov	r0, r8
 893 0186 4946     		mov	r1, r9
ARM GAS  /tmp/ccIyoWCJ.s 			page 31


 894 0188 FFF7FEFF 		bl	__aeabi_dadd
 895              	.LVL98:
 344:Src/LTC6811.c **** 			cellTemp[i] = (uint16_t) conversion[i];
 896              		.loc 1 344 0
 897 018c 0022     		movs	r2, #0
 898 018e 1E4B     		ldr	r3, .L58+80
 899 0190 FFF7FEFF 		bl	__aeabi_dadd
 900              	.LVL99:
 901 0194 0022     		movs	r2, #0
 902 0196 1D4B     		ldr	r3, .L58+84
 903 0198 FFF7FEFF 		bl	__aeabi_dmul
 904              	.LVL100:
 345:Src/LTC6811.c **** 		}
 905              		.loc 1 345 0
 906 019c FFF7FEFF 		bl	__aeabi_d2uiz
 907              	.LVL101:
 908 01a0 2BF80400 		strh	r0, [fp, r4]	@ movhi
 909 01a4 56E7     		b	.L53
 910              	.L57:
 911              	.LBE8:
 349:Src/LTC6811.c **** 	
 912              		.loc 1 349 0
 913 01a6 5046     		mov	r0, r10
 914 01a8 FFF7FEFF 		bl	free
 915              	.LVL102:
 353:Src/LTC6811.c **** 
 916              		.loc 1 353 0
 917 01ac 0398     		ldr	r0, [sp, #12]
 918 01ae 05B0     		add	sp, sp, #20
 919              	.LCFI10:
 920              		.cfi_def_cfa_offset 36
 921              		@ sp needed
 922 01b0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 923              	.LVL103:
 924              	.L59:
 925 01b4 AFF30080 		.align	3
 926              	.L58:
 927 01b8 00000000 		.word	0
 928 01bc 0088C340 		.word	1086556160
 929 01c0 00000000 		.word	0
 930 01c4 30D0FB40 		.word	1090244656
 931 01c8 00000000 		.word	0
 932 01cc E06CE240 		.word	1088580832
 933 01d0 00000000 		.word	0
 934 01d4 386A0141 		.word	1090611768
 935 01d8 00000000 		.word	0
 936 01dc 1010F740 		.word	1089933328
 937 01e0 00000000 		.word	0
 938 01e4 E0FDE040 		.word	1088486880
 939 01e8 00000000 		.word	0
 940 01ec 005DBA40 		.word	1085955328
 941 01f0 7B14AE47 		.word	1202590843
 942 01f4 E1C88040 		.word	1082181857
 943 01f8 00000840 		.word	1074266112
 944 01fc 00001040 		.word	1074790400
 945 0200 00001440 		.word	1075052544
 946 0204 00001840 		.word	1075314688
ARM GAS  /tmp/ccIyoWCJ.s 			page 32


 947 0208 00003440 		.word	1077149696
 948 020c 00407F40 		.word	1082081280
 949              		.cfi_endproc
 950              	.LFE71:
 952              		.section	.text.readConfig,"ax",%progbits
 953              		.align	1
 954              		.global	readConfig
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu softvfp
 960              	readConfig:
 961              	.LFB73:
 419:Src/LTC6811.c **** 	
 962              		.loc 1 419 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              	.LVL104:
 967 0000 70B5     		push	{r4, r5, r6, lr}
 968              	.LCFI11:
 969              		.cfi_def_cfa_offset 16
 970              		.cfi_offset 4, -16
 971              		.cfi_offset 5, -12
 972              		.cfi_offset 6, -8
 973              		.cfi_offset 14, -4
 974 0002 0646     		mov	r6, r0
 975 0004 0C46     		mov	r4, r1
 976              	.LVL105:
 424:Src/LTC6811.c **** 
 977              		.loc 1 424 0
 978 0006 0820     		movs	r0, #8
 979              	.LVL106:
 980 0008 FFF7FEFF 		bl	malloc
 981              	.LVL107:
 982 000c 0546     		mov	r5, r0
 983              	.LVL108:
 426:Src/LTC6811.c **** 	
 984              		.loc 1 426 0
 985 000e FFF7FEFF 		bl	wakeup_idle
 986              	.LVL109:
 428:Src/LTC6811.c **** 	
 987              		.loc 1 428 0
 988 0012 2A46     		mov	r2, r5
 989 0014 3146     		mov	r1, r6
 990 0016 0220     		movs	r0, #2
 991 0018 FFF7FEFF 		bl	readRegister
 992              	.LVL110:
 993 001c 0646     		mov	r6, r0
 994              	.LVL111:
 430:Src/LTC6811.c **** 	cfg[1] = (uint8_t) (config[0] & 0xFF);
 995              		.loc 1 430 0
 996 001e 2B88     		ldrh	r3, [r5]
 997 0020 1A0A     		lsrs	r2, r3, #8
 998 0022 2270     		strb	r2, [r4]
 431:Src/LTC6811.c **** 	cfg[2] = (uint8_t) ((config[1] >> 8) & 0xFF);
 999              		.loc 1 431 0
ARM GAS  /tmp/ccIyoWCJ.s 			page 33


 1000 0024 6370     		strb	r3, [r4, #1]
 432:Src/LTC6811.c **** 	cfg[3] = (uint8_t) (config[1] & 0xFF);
 1001              		.loc 1 432 0
 1002 0026 6B88     		ldrh	r3, [r5, #2]
 1003 0028 1A0A     		lsrs	r2, r3, #8
 1004 002a A270     		strb	r2, [r4, #2]
 433:Src/LTC6811.c **** 	cfg[4] = (uint8_t) ((config[2] >> 8) & 0xFF);
 1005              		.loc 1 433 0
 1006 002c E370     		strb	r3, [r4, #3]
 434:Src/LTC6811.c **** 	cfg[5] = (uint8_t) (config[2] & 0xFF);
 1007              		.loc 1 434 0
 1008 002e AB88     		ldrh	r3, [r5, #4]
 1009 0030 1A0A     		lsrs	r2, r3, #8
 1010 0032 2271     		strb	r2, [r4, #4]
 435:Src/LTC6811.c **** 	cfg[6] = (uint8_t) ((config[3] >> 8) & 0xFF);
 1011              		.loc 1 435 0
 1012 0034 6371     		strb	r3, [r4, #5]
 436:Src/LTC6811.c **** 	cfg[7] = (uint8_t) (config[3] & 0xFF);
 1013              		.loc 1 436 0
 1014 0036 EB88     		ldrh	r3, [r5, #6]
 1015 0038 1A0A     		lsrs	r2, r3, #8
 1016 003a A271     		strb	r2, [r4, #6]
 437:Src/LTC6811.c **** 
 1017              		.loc 1 437 0
 1018 003c E371     		strb	r3, [r4, #7]
 439:Src/LTC6811.c **** 	
 1019              		.loc 1 439 0
 1020 003e 2846     		mov	r0, r5
 1021 0040 FFF7FEFF 		bl	free
 1022              	.LVL112:
 442:Src/LTC6811.c **** 
 1023              		.loc 1 442 0
 1024 0044 3046     		mov	r0, r6
 1025 0046 70BD     		pop	{r4, r5, r6, pc}
 1026              		.cfi_endproc
 1027              	.LFE73:
 1029              		.section	.text.writeConfigAddress,"ax",%progbits
 1030              		.align	1
 1031              		.global	writeConfigAddress
 1032              		.syntax unified
 1033              		.thumb
 1034              		.thumb_func
 1035              		.fpu softvfp
 1037              	writeConfigAddress:
 1038              	.LFB67:
 112:Src/LTC6811.c **** 
 1039              		.loc 1 112 0
 1040              		.cfi_startproc
 1041              		@ args = 100, pretend = 16, frame = 8
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              	.LVL113:
 1044 0000 84B0     		sub	sp, sp, #16
 1045              	.LCFI12:
 1046              		.cfi_def_cfa_offset 16
 1047 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1048              	.LCFI13:
 1049              		.cfi_def_cfa_offset 52
ARM GAS  /tmp/ccIyoWCJ.s 			page 34


 1050              		.cfi_offset 4, -52
 1051              		.cfi_offset 5, -48
 1052              		.cfi_offset 6, -44
 1053              		.cfi_offset 7, -40
 1054              		.cfi_offset 8, -36
 1055              		.cfi_offset 9, -32
 1056              		.cfi_offset 10, -28
 1057              		.cfi_offset 11, -24
 1058              		.cfi_offset 14, -20
 1059 0006 83B0     		sub	sp, sp, #12
 1060              	.LCFI14:
 1061              		.cfi_def_cfa_offset 64
 1062 0008 0CAC     		add	r4, sp, #48
 1063 000a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1064 000e 9DF89090 		ldrb	r9, [sp, #144]	@ zero_extendqisi2
 1065              	.LVL114:
 122:Src/LTC6811.c **** 	
 1066              		.loc 1 122 0
 1067 0012 0C20     		movs	r0, #12
 1068 0014 FFF7FEFF 		bl	malloc
 1069              	.LVL115:
 1070 0018 0646     		mov	r6, r0
 1071              	.LVL116:
 124:Src/LTC6811.c **** 	config[1] = (uint8_t) (cfg.UndervoltageComparisonVoltage & 0xFF);
 1072              		.loc 1 124 0
 1073 001a 9DF87250 		ldrb	r5, [sp, #114]	@ zero_extendqisi2
 1074 001e ED01     		lsls	r5, r5, #7
 1075 0020 6DB2     		sxtb	r5, r5
 1076 0022 9DF87330 		ldrb	r3, [sp, #115]	@ zero_extendqisi2
 1077 0026 45EA8315 		orr	r5, r5, r3, lsl #6
 1078 002a 6DB2     		sxtb	r5, r5
 1079 002c 9DF87430 		ldrb	r3, [sp, #116]	@ zero_extendqisi2
 1080 0030 45EA4315 		orr	r5, r5, r3, lsl #5
 1081 0034 6DB2     		sxtb	r5, r5
 1082 0036 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 1083 003a 45EA0315 		orr	r5, r5, r3, lsl #4
 1084 003e 6DB2     		sxtb	r5, r5
 1085 0040 9DF87630 		ldrb	r3, [sp, #118]	@ zero_extendqisi2
 1086 0044 45EAC305 		orr	r5, r5, r3, lsl #3
 1087 0048 6DB2     		sxtb	r5, r5
 1088 004a 9DF87730 		ldrb	r3, [sp, #119]	@ zero_extendqisi2
 1089 004e 45EA8305 		orr	r5, r5, r3, lsl #2
 1090 0052 6DB2     		sxtb	r5, r5
 1091 0054 9DF97830 		ldrsb	r3, [sp, #120]
 1092 0058 1D43     		orrs	r5, r5, r3
 1093 005a EDB2     		uxtb	r5, r5
 125:Src/LTC6811.c **** 	config[2] = (uint8_t) ((cfg.OvervoltageComparisonVoltage << 4) & 0xF0) | ((cfg.UndervoltageCompari
 1094              		.loc 1 125 0
 1095 005c BDF87A30 		ldrh	r3, [sp, #122]
 1096 0060 5FFA83FA 		uxtb	r10, r3
 126:Src/LTC6811.c **** 	config[3] = (uint8_t) ((cfg.OvervoltageComparisonVoltage >> 4) & 0xFF);
 1097              		.loc 1 126 0
 1098 0064 BDF87C80 		ldrh	r8, [sp, #124]
 1099 0068 4FEA0817 		lsl	r7, r8, #4
 1100 006c 7FB2     		sxtb	r7, r7
 1101 006e C3F30323 		ubfx	r3, r3, #8, #4
 1102 0072 1F43     		orrs	r7, r7, r3
ARM GAS  /tmp/ccIyoWCJ.s 			page 35


 1103 0074 FFB2     		uxtb	r7, r7
 127:Src/LTC6811.c **** 	config[4] = (uint8_t) (cfg.DischargeCell8 << 7) | (cfg.DischargeCell7 << 6) | (cfg.DischargeCell6 
 1104              		.loc 1 127 0
 1105 0076 C8F30718 		ubfx	r8, r8, #4, #8
 128:Src/LTC6811.c **** 	config[5] = (uint8_t) ((cfg.DischargeTimeoutValue << 4) & 0xF0) | (cfg.DischargeCell12 << 3) | (cf
 1106              		.loc 1 128 0
 1107 007a 9DF88540 		ldrb	r4, [sp, #133]	@ zero_extendqisi2
 1108 007e E401     		lsls	r4, r4, #7
 1109 0080 64B2     		sxtb	r4, r4
 1110 0082 9DF88430 		ldrb	r3, [sp, #132]	@ zero_extendqisi2
 1111 0086 44EA8314 		orr	r4, r4, r3, lsl #6
 1112 008a 64B2     		sxtb	r4, r4
 1113 008c 9DF88330 		ldrb	r3, [sp, #131]	@ zero_extendqisi2
 1114 0090 44EA4314 		orr	r4, r4, r3, lsl #5
 1115 0094 64B2     		sxtb	r4, r4
 1116 0096 9DF88230 		ldrb	r3, [sp, #130]	@ zero_extendqisi2
 1117 009a 44EA0314 		orr	r4, r4, r3, lsl #4
 1118 009e 64B2     		sxtb	r4, r4
 1119 00a0 9DF88130 		ldrb	r3, [sp, #129]	@ zero_extendqisi2
 1120 00a4 44EAC304 		orr	r4, r4, r3, lsl #3
 1121 00a8 64B2     		sxtb	r4, r4
 1122 00aa 9DF88030 		ldrb	r3, [sp, #128]	@ zero_extendqisi2
 1123 00ae 44EA8304 		orr	r4, r4, r3, lsl #2
 1124 00b2 64B2     		sxtb	r4, r4
 1125 00b4 9DF87F30 		ldrb	r3, [sp, #127]	@ zero_extendqisi2
 1126 00b8 44EA4304 		orr	r4, r4, r3, lsl #1
 1127 00bc 64B2     		sxtb	r4, r4
 1128 00be 9DF97E30 		ldrsb	r3, [sp, #126]
 1129 00c2 1C43     		orrs	r4, r4, r3
 1130 00c4 E4B2     		uxtb	r4, r4
 129:Src/LTC6811.c **** 	
 1131              		.loc 1 129 0
 1132 00c6 9DF88AB0 		ldrb	fp, [sp, #138]	@ zero_extendqisi2
 1133 00ca 4FEA0B1B 		lsl	fp, fp, #4
 1134 00ce 4FFA8BFB 		sxtb	fp, fp
 1135 00d2 9DF88930 		ldrb	r3, [sp, #137]	@ zero_extendqisi2
 1136 00d6 4BEAC30B 		orr	fp, fp, r3, lsl #3
 1137 00da 4FFA8BFB 		sxtb	fp, fp
 1138 00de 9DF88830 		ldrb	r3, [sp, #136]	@ zero_extendqisi2
 1139 00e2 4BEA830B 		orr	fp, fp, r3, lsl #2
 1140 00e6 4FFA8BFB 		sxtb	fp, fp
 1141 00ea 9DF88730 		ldrb	r3, [sp, #135]	@ zero_extendqisi2
 1142 00ee 4BEA430B 		orr	fp, fp, r3, lsl #1
 1143 00f2 4FFA8BFB 		sxtb	fp, fp
 1144 00f6 9DF98630 		ldrsb	r3, [sp, #134]
 1145 00fa 4BEA030B 		orr	fp, fp, r3
 1146 00fe 5FFA8BFB 		uxtb	fp, fp
 131:Src/LTC6811.c **** 	cmd[1] = (uint8_t) (WriteConfigurationRegisterGroup & 0xFF);
 1147              		.loc 1 131 0
 1148 0102 4FEAC903 		lsl	r3, r9, #3
 1149 0106 03F07803 		and	r3, r3, #120
 1150 010a 43F08003 		orr	r3, r3, #128
 1151 010e 0370     		strb	r3, [r0]
 132:Src/LTC6811.c **** 	
 1152              		.loc 1 132 0
 1153 0110 0123     		movs	r3, #1
 1154 0112 4370     		strb	r3, [r0, #1]
ARM GAS  /tmp/ccIyoWCJ.s 			page 36


 134:Src/LTC6811.c **** 	
 1155              		.loc 1 134 0
 1156 0114 0146     		mov	r1, r0
 1157 0116 0220     		movs	r0, #2
 1158              	.LVL117:
 1159 0118 FFF7FEFF 		bl	calculatePEC
 1160              	.LVL118:
 136:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 1161              		.loc 1 136 0
 1162 011c 030A     		lsrs	r3, r0, #8
 1163 011e B370     		strb	r3, [r6, #2]
 137:Src/LTC6811.c **** 
 1164              		.loc 1 137 0
 1165 0120 F070     		strb	r0, [r6, #3]
 139:Src/LTC6811.c **** 	cmd[5] = config[1];
 1166              		.loc 1 139 0
 1167 0122 3571     		strb	r5, [r6, #4]
 140:Src/LTC6811.c **** 	cmd[6] = config[2];
 1168              		.loc 1 140 0
 1169 0124 86F805A0 		strb	r10, [r6, #5]
 141:Src/LTC6811.c **** 	cmd[7] = config[3];
 1170              		.loc 1 141 0
 1171 0128 B771     		strb	r7, [r6, #6]
 142:Src/LTC6811.c **** 	cmd[8] = config[4];
 1172              		.loc 1 142 0
 1173 012a 86F80780 		strb	r8, [r6, #7]
 143:Src/LTC6811.c **** 	cmd[9] = config[5];
 1174              		.loc 1 143 0
 1175 012e 3472     		strb	r4, [r6, #8]
 144:Src/LTC6811.c **** 	
 1176              		.loc 1 144 0
 1177 0130 86F809B0 		strb	fp, [r6, #9]
 146:Src/LTC6811.c **** 
 1178              		.loc 1 146 0
 1179 0134 311D     		adds	r1, r6, #4
 1180 0136 0620     		movs	r0, #6
 1181              	.LVL119:
 1182 0138 FFF7FEFF 		bl	calculatePEC
 1183              	.LVL120:
 148:Src/LTC6811.c **** 	cmd[11] = PEC_return & 0xFF;
 1184              		.loc 1 148 0
 1185 013c 030A     		lsrs	r3, r0, #8
 1186 013e B372     		strb	r3, [r6, #10]
 149:Src/LTC6811.c **** 	
 1187              		.loc 1 149 0
 1188 0140 F072     		strb	r0, [r6, #11]
 151:Src/LTC6811.c **** 
 1189              		.loc 1 151 0
 1190 0142 0C21     		movs	r1, #12
 1191 0144 3046     		mov	r0, r6
 1192              	.LVL121:
 1193 0146 FFF7FEFF 		bl	SPIWrite
 1194              	.LVL122:
 153:Src/LTC6811.c **** 	
 1195              		.loc 1 153 0
 1196 014a 6946     		mov	r1, sp
 1197 014c 4846     		mov	r0, r9
ARM GAS  /tmp/ccIyoWCJ.s 			page 37


 1198 014e FFF7FEFF 		bl	readConfig
 1199              	.LVL123:
 155:Src/LTC6811.c **** 
 1200              		.loc 1 155 0
 1201 0152 3046     		mov	r0, r6
 1202 0154 FFF7FEFF 		bl	free
 1203              	.LVL124:
 157:Src/LTC6811.c **** 
 1204              		.loc 1 157 0
 1205 0158 03B0     		add	sp, sp, #12
 1206              	.LCFI15:
 1207              		.cfi_def_cfa_offset 52
 1208              		@ sp needed
 1209 015a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1210              	.LCFI16:
 1211              		.cfi_restore 14
 1212              		.cfi_restore 11
 1213              		.cfi_restore 10
 1214              		.cfi_restore 9
 1215              		.cfi_restore 8
 1216              		.cfi_restore 7
 1217              		.cfi_restore 6
 1218              		.cfi_restore 5
 1219              		.cfi_restore 4
 1220              		.cfi_def_cfa_offset 16
 1221              	.LVL125:
 1222 015e 04B0     		add	sp, sp, #16
 1223              	.LCFI17:
 1224              		.cfi_def_cfa_offset 0
 1225 0160 7047     		bx	lr
 1226              		.cfi_endproc
 1227              	.LFE67:
 1229              		.section	.text.writeConfigAll,"ax",%progbits
 1230              		.align	1
 1231              		.global	writeConfigAll
 1232              		.syntax unified
 1233              		.thumb
 1234              		.thumb_func
 1235              		.fpu softvfp
 1237              	writeConfigAll:
 1238              	.LFB68:
 159:Src/LTC6811.c **** 
 1239              		.loc 1 159 0
 1240              		.cfi_startproc
 1241              		@ args = 96, pretend = 16, frame = 0
 1242              		@ frame_needed = 0, uses_anonymous_args = 0
 1243 0000 84B0     		sub	sp, sp, #16
 1244              	.LCFI18:
 1245              		.cfi_def_cfa_offset 16
 1246 0002 10B5     		push	{r4, lr}
 1247              	.LCFI19:
 1248              		.cfi_def_cfa_offset 24
 1249              		.cfi_offset 4, -24
 1250              		.cfi_offset 14, -20
 1251 0004 96B0     		sub	sp, sp, #88
 1252              	.LCFI20:
 1253              		.cfi_def_cfa_offset 112
ARM GAS  /tmp/ccIyoWCJ.s 			page 38


 1254 0006 18AC     		add	r4, sp, #96
 1255 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 161:Src/LTC6811.c **** 
 1256              		.loc 1 161 0
 1257 000c FFF7FEFF 		bl	wakeup_idle
 1258              	.LVL126:
 1259              	.LBB9:
 163:Src/LTC6811.c **** 		writeConfigAddress(cfg, cfg.address[i]);
 1260              		.loc 1 163 0
 1261 0010 0024     		movs	r4, #0
 1262 0012 0EE0     		b	.L65
 1263              	.LVL127:
 1264              	.L66:
 164:Src/LTC6811.c **** 	}
 1265              		.loc 1 164 0 discriminator 3
 1266 0014 18AB     		add	r3, sp, #96
 1267 0016 2344     		add	r3, r3, r4
 1268 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1269 001a 1493     		str	r3, [sp, #80]
 1270 001c 4E22     		movs	r2, #78
 1271 001e 1CA9     		add	r1, sp, #112
 1272 0020 6846     		mov	r0, sp
 1273 0022 FFF7FEFF 		bl	memcpy
 1274              	.LVL128:
 1275 0026 18AB     		add	r3, sp, #96
 1276 0028 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1277 002a FFF7FEFF 		bl	writeConfigAddress
 1278              	.LVL129:
 163:Src/LTC6811.c **** 		writeConfigAddress(cfg, cfg.address[i]);
 1279              		.loc 1 163 0 discriminator 3
 1280 002e 0134     		adds	r4, r4, #1
 1281              	.LVL130:
 1282 0030 E4B2     		uxtb	r4, r4
 1283              	.LVL131:
 1284              	.L65:
 163:Src/LTC6811.c **** 		writeConfigAddress(cfg, cfg.address[i]);
 1285              		.loc 1 163 0 is_stmt 0 discriminator 1
 1286 0032 9DF86030 		ldrb	r3, [sp, #96]	@ zero_extendqisi2
 1287 0036 A342     		cmp	r3, r4
 1288 0038 ECD8     		bhi	.L66
 1289              	.LBE9:
 166:Src/LTC6811.c **** 
 1290              		.loc 1 166 0 is_stmt 1
 1291 003a 16B0     		add	sp, sp, #88
 1292              	.LCFI21:
 1293              		.cfi_def_cfa_offset 24
 1294              		@ sp needed
 1295 003c BDE81040 		pop	{r4, lr}
 1296              	.LCFI22:
 1297              		.cfi_restore 14
 1298              		.cfi_restore 4
 1299              		.cfi_def_cfa_offset 16
 1300              	.LVL132:
 1301 0040 04B0     		add	sp, sp, #16
 1302              	.LCFI23:
 1303              		.cfi_def_cfa_offset 0
 1304 0042 7047     		bx	lr
ARM GAS  /tmp/ccIyoWCJ.s 			page 39


 1305              		.cfi_endproc
 1306              	.LFE68:
 1308              		.section	.text.dischargeCellGroups,"ax",%progbits
 1309              		.align	1
 1310              		.global	dischargeCellGroups
 1311              		.syntax unified
 1312              		.thumb
 1313              		.thumb_func
 1314              		.fpu softvfp
 1316              	dischargeCellGroups:
 1317              	.LFB75:
 513:Src/LTC6811.c **** 	
 1318              		.loc 1 513 0
 1319              		.cfi_startproc
 1320              		@ args = 100, pretend = 16, frame = 0
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 1322              	.LVL133:
 1323 0000 84B0     		sub	sp, sp, #16
 1324              	.LCFI24:
 1325              		.cfi_def_cfa_offset 16
 1326 0002 30B5     		push	{r4, r5, lr}
 1327              	.LCFI25:
 1328              		.cfi_def_cfa_offset 28
 1329              		.cfi_offset 4, -28
 1330              		.cfi_offset 5, -24
 1331              		.cfi_offset 14, -20
 1332 0004 97B0     		sub	sp, sp, #92
 1333              	.LCFI26:
 1334              		.cfi_def_cfa_offset 120
 1335 0006 1AAC     		add	r4, sp, #104
 1336 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1337 000c 329D     		ldr	r5, [sp, #200]
 1338              	.LVL134:
 519:Src/LTC6811.c **** 
 1339              		.loc 1 519 0
 1340 000e FFF7FEFF 		bl	wakeup_idle
 1341              	.LVL135:
 1342              	.LBB10:
 521:Src/LTC6811.c **** 
 1343              		.loc 1 521 0
 1344 0012 0024     		movs	r4, #0
 1345              	.LVL136:
 1346 0014 29E0     		b	.L69
 1347              	.LVL137:
 1348              	.L70:
 523:Src/LTC6811.c **** 		cfg->DischargeCell2 = cellDischarge[i][1];
 1349              		.loc 1 523 0 discriminator 3
 1350 0016 05EBC403 		add	r3, r5, r4, lsl #3
 1351 001a 15F83420 		ldrb	r2, [r5, r4, lsl #3]	@ zero_extendqisi2
 1352 001e 8DF8B620 		strb	r2, [sp, #182]
 524:Src/LTC6811.c **** 		cfg->DischargeCell3 = cellDischarge[i][2];
 1353              		.loc 1 524 0 discriminator 3
 1354 0022 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1355 0024 8DF8B720 		strb	r2, [sp, #183]
 525:Src/LTC6811.c **** 		cfg->DischargeCell4 = cellDischarge[i][3];
 1356              		.loc 1 525 0 discriminator 3
 1357 0028 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
ARM GAS  /tmp/ccIyoWCJ.s 			page 40


 1358 002a 8DF8B820 		strb	r2, [sp, #184]
 526:Src/LTC6811.c **** 		cfg->DischargeCell7 = cellDischarge[i][4];
 1359              		.loc 1 526 0 discriminator 3
 1360 002e DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1361 0030 8DF8B920 		strb	r2, [sp, #185]
 527:Src/LTC6811.c **** 		cfg->DischargeCell8 = cellDischarge[i][5];
 1362              		.loc 1 527 0 discriminator 3
 1363 0034 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 1364 0036 8DF8BC20 		strb	r2, [sp, #188]
 528:Src/LTC6811.c **** 		cfg->DischargeCell9 = cellDischarge[i][6];
 1365              		.loc 1 528 0 discriminator 3
 1366 003a 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1367 003c 8DF8BD20 		strb	r2, [sp, #189]
 529:Src/LTC6811.c **** 		cfg->DischargeCell10 = cellDischarge[i][7];
 1368              		.loc 1 529 0 discriminator 3
 1369 0040 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1370 0042 8DF8BE20 		strb	r2, [sp, #190]
 530:Src/LTC6811.c **** 
 1371              		.loc 1 530 0 discriminator 3
 1372 0046 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1373 0048 8DF8BF30 		strb	r3, [sp, #191]
 532:Src/LTC6811.c **** 
 1374              		.loc 1 532 0 discriminator 3
 1375 004c 1AAB     		add	r3, sp, #104
 1376              	.LVL138:
 1377 004e 2344     		add	r3, r3, r4
 1378              	.LVL139:
 1379 0050 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1380 0052 1493     		str	r3, [sp, #80]
 1381 0054 4E22     		movs	r2, #78
 1382 0056 1EA9     		add	r1, sp, #120
 1383 0058 6846     		mov	r0, sp
 1384 005a FFF7FEFF 		bl	memcpy
 1385              	.LVL140:
 1386 005e 1AAB     		add	r3, sp, #104
 1387              	.LVL141:
 1388 0060 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1389              	.LVL142:
 1390 0062 FFF7FEFF 		bl	writeConfigAddress
 1391              	.LVL143:
 521:Src/LTC6811.c **** 
 1392              		.loc 1 521 0 discriminator 3
 1393 0066 0134     		adds	r4, r4, #1
 1394              	.LVL144:
 1395 0068 E4B2     		uxtb	r4, r4
 1396              	.LVL145:
 1397              	.L69:
 521:Src/LTC6811.c **** 
 1398              		.loc 1 521 0 is_stmt 0 discriminator 1
 1399 006a 9DF86830 		ldrb	r3, [sp, #104]	@ zero_extendqisi2
 1400 006e A342     		cmp	r3, r4
 1401 0070 D1D8     		bhi	.L70
 1402              	.LBE10:
 547:Src/LTC6811.c **** 
 1403              		.loc 1 547 0 is_stmt 1
 1404 0072 0020     		movs	r0, #0
 1405 0074 17B0     		add	sp, sp, #92
ARM GAS  /tmp/ccIyoWCJ.s 			page 41


 1406              	.LCFI27:
 1407              		.cfi_def_cfa_offset 28
 1408              		@ sp needed
 1409 0076 BDE83040 		pop	{r4, r5, lr}
 1410              	.LCFI28:
 1411              		.cfi_restore 14
 1412              		.cfi_restore 5
 1413              		.cfi_restore 4
 1414              		.cfi_def_cfa_offset 16
 1415              	.LVL146:
 1416 007a 04B0     		add	sp, sp, #16
 1417              	.LCFI29:
 1418              		.cfi_def_cfa_offset 0
 1419              	.LVL147:
 1420 007c 7047     		bx	lr
 1421              		.cfi_endproc
 1422              	.LFE75:
 1424              		.section	.text.sendBroadcastCommand,"ax",%progbits
 1425              		.align	1
 1426              		.global	sendBroadcastCommand
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1430              		.fpu softvfp
 1432              	sendBroadcastCommand:
 1433              	.LFB78:
 677:Src/LTC6811.c **** 	
 1434              		.loc 1 677 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 8
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 1438              	.LVL148:
 1439 0000 00B5     		push	{lr}
 1440              	.LCFI30:
 1441              		.cfi_def_cfa_offset 4
 1442              		.cfi_offset 14, -4
 1443 0002 83B0     		sub	sp, sp, #12
 1444              	.LCFI31:
 1445              		.cfi_def_cfa_offset 16
 682:Src/LTC6811.c **** 	cmd[1] = (uint8_t) (command & 0xFF);
 1446              		.loc 1 682 0
 1447 0004 C0F30323 		ubfx	r3, r0, #8, #4
 1448 0008 8DF80430 		strb	r3, [sp, #4]
 683:Src/LTC6811.c **** 	
 1449              		.loc 1 683 0
 1450 000c 8DF80500 		strb	r0, [sp, #5]
 685:Src/LTC6811.c **** 	
 1451              		.loc 1 685 0
 1452 0010 01A9     		add	r1, sp, #4
 1453 0012 0220     		movs	r0, #2
 1454              	.LVL149:
 1455 0014 FFF7FEFF 		bl	calculatePEC
 1456              	.LVL150:
 687:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 1457              		.loc 1 687 0
 1458 0018 030A     		lsrs	r3, r0, #8
 1459 001a 8DF80630 		strb	r3, [sp, #6]
ARM GAS  /tmp/ccIyoWCJ.s 			page 42


 688:Src/LTC6811.c **** 	
 1460              		.loc 1 688 0
 1461 001e 8DF80700 		strb	r0, [sp, #7]
 690:Src/LTC6811.c **** };
 1462              		.loc 1 690 0
 1463 0022 0421     		movs	r1, #4
 1464 0024 0DEB0100 		add	r0, sp, r1
 1465              	.LVL151:
 1466 0028 FFF7FEFF 		bl	SPIWrite
 1467              	.LVL152:
 691:Src/LTC6811.c **** 
 1468              		.loc 1 691 0
 1469 002c 03B0     		add	sp, sp, #12
 1470              	.LCFI32:
 1471              		.cfi_def_cfa_offset 4
 1472              		@ sp needed
 1473 002e 5DF804FB 		ldr	pc, [sp], #4
 1474              		.cfi_endproc
 1475              	.LFE78:
 1477              		.section	.text.readAllCellVoltages,"ax",%progbits
 1478              		.align	1
 1479              		.global	readAllCellVoltages
 1480              		.syntax unified
 1481              		.thumb
 1482              		.thumb_func
 1483              		.fpu softvfp
 1485              	readAllCellVoltages:
 1486              	.LFB70:
 204:Src/LTC6811.c **** 
 1487              		.loc 1 204 0
 1488              		.cfi_startproc
 1489              		@ args = 100, pretend = 16, frame = 24
 1490              		@ frame_needed = 0, uses_anonymous_args = 0
 1491              	.LVL153:
 1492 0000 84B0     		sub	sp, sp, #16
 1493              	.LCFI33:
 1494              		.cfi_def_cfa_offset 16
 1495 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1496              	.LCFI34:
 1497              		.cfi_def_cfa_offset 36
 1498              		.cfi_offset 4, -36
 1499              		.cfi_offset 5, -32
 1500              		.cfi_offset 6, -28
 1501              		.cfi_offset 7, -24
 1502              		.cfi_offset 14, -20
 1503 0004 87B0     		sub	sp, sp, #28
 1504              	.LCFI35:
 1505              		.cfi_def_cfa_offset 64
 1506 0006 0CAC     		add	r4, sp, #48
 1507 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1508 000c 249C     		ldr	r4, [sp, #144]
 1509              	.LVL154:
 254:Src/LTC6811.c **** 
 1510              		.loc 1 254 0
 1511 000e FFF7FEFF 		bl	wakeup_idle
 1512              	.LVL155:
 256:Src/LTC6811.c **** 	sendBroadcastCommand(StartCellVoltageADCConversionAll);
ARM GAS  /tmp/ccIyoWCJ.s 			page 43


 1513              		.loc 1 256 0
 1514 0012 40F21170 		movw	r0, #1809
 1515 0016 FFF7FEFF 		bl	sendBroadcastCommand
 1516              	.LVL156:
 257:Src/LTC6811.c **** 	HAL_Delay(20);
 1517              		.loc 1 257 0
 1518 001a 4FF41870 		mov	r0, #608
 1519 001e FFF7FEFF 		bl	sendBroadcastCommand
 1520              	.LVL157:
 258:Src/LTC6811.c **** 
 1521              		.loc 1 258 0
 1522 0022 1420     		movs	r0, #20
 1523 0024 FFF7FEFF 		bl	HAL_Delay
 1524              	.LVL158:
 260:Src/LTC6811.c **** 
 1525              		.loc 1 260 0
 1526 0028 FFF7FEFF 		bl	wakeup_idle
 1527              	.LVL159:
 1528              	.LBB11:
 262:Src/LTC6811.c **** 
 1529              		.loc 1 262 0
 1530 002c 0025     		movs	r5, #0
 1531              	.LBE11:
 252:Src/LTC6811.c **** 
 1532              		.loc 1 252 0
 1533 002e 0127     		movs	r7, #1
 1534              	.LBB14:
 262:Src/LTC6811.c **** 
 1535              		.loc 1 262 0
 1536 0030 59E0     		b	.L75
 1537              	.LVL160:
 1538              	.L77:
 1539              	.LBB12:
 269:Src/LTC6811.c **** 			bmsData[(board * 8) + cell][0] = (uint8_t) ((board * 8) + cell + 1); //cell number
 1540              		.loc 1 269 0 discriminator 2
 1541 0032 0133     		adds	r3, r3, #1
 1542              	.LVL161:
 1543 0034 DBB2     		uxtb	r3, r3
 1544              	.LVL162:
 1545              	.L76:
 269:Src/LTC6811.c **** 			bmsData[(board * 8) + cell][0] = (uint8_t) ((board * 8) + cell + 1); //cell number
 1546              		.loc 1 269 0 is_stmt 0 discriminator 1
 1547 0036 072B     		cmp	r3, #7
 1548 0038 14D8     		bhi	.L81
 270:Src/LTC6811.c **** 			bmsData[(board * 8) + cell][1] = 0; //clear status byte 
 1549              		.loc 1 270 0 is_stmt 1
 1550 003a 03EBC502 		add	r2, r3, r5, lsl #3
 1551 003e D2B2     		uxtb	r2, r2
 1552 0040 03EBC601 		add	r1, r3, r6, lsl #3
 1553 0044 01EB4101 		add	r1, r1, r1, lsl #1
 1554 0048 4FEA410C 		lsl	ip, r1, #1
 1555 004c 04EB0C01 		add	r1, r4, ip
 1556 0050 0132     		adds	r2, r2, #1
 1557 0052 04F80C20 		strb	r2, [r4, ip]
 271:Src/LTC6811.c **** 			if (PEC_check[board])
 1558              		.loc 1 271 0
 1559 0056 0022     		movs	r2, #0
ARM GAS  /tmp/ccIyoWCJ.s 			page 44


 1560 0058 4A70     		strb	r2, [r1, #1]
 272:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00000010; //set valid data bit
 1561              		.loc 1 272 0
 1562 005a 0028     		cmp	r0, #0
 1563 005c E9D0     		beq	.L77
 273:Src/LTC6811.c **** 		}
 1564              		.loc 1 273 0
 1565 005e 0222     		movs	r2, #2
 1566 0060 4A70     		strb	r2, [r1, #1]
 1567 0062 E6E7     		b	.L77
 1568              	.L81:
 1569              	.LBE12:
 277:Src/LTC6811.c **** 		bmsData[(board * 8) + 0][3] = (uint8_t) (boardVoltage[0] & 0xFF); //cell 1, voltage L
 1570              		.loc 1 277 0 discriminator 2
 1571 0064 BDF80010 		ldrh	r1, [sp]
 1572 0068 06EB4606 		add	r6, r6, r6, lsl #1
 1573 006c 3301     		lsls	r3, r6, #4
 1574              	.LVL163:
 1575 006e E218     		adds	r2, r4, r3
 1576 0070 080A     		lsrs	r0, r1, #8
 1577 0072 9070     		strb	r0, [r2, #2]
 278:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][2] = (uint8_t) ((boardVoltage[1] >> 8) & 0xFF); //cell 2, voltage H
 1578              		.loc 1 278 0 discriminator 2
 1579 0074 D170     		strb	r1, [r2, #3]
 279:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][3] = (uint8_t) (boardVoltage[1] & 0xFF); //cell 2, voltage L
 1580              		.loc 1 279 0 discriminator 2
 1581 0076 BDF80210 		ldrh	r1, [sp, #2]
 1582 007a 9A1D     		adds	r2, r3, #6
 1583 007c 2244     		add	r2, r2, r4
 1584 007e 080A     		lsrs	r0, r1, #8
 1585 0080 9070     		strb	r0, [r2, #2]
 280:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][2] = (uint8_t) ((boardVoltage[2] >> 8) & 0xFF); //cell 3, voltage H
 1586              		.loc 1 280 0 discriminator 2
 1587 0082 D170     		strb	r1, [r2, #3]
 281:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][3] = (uint8_t) (boardVoltage[2] & 0xFF); //cell 3, voltage L
 1588              		.loc 1 281 0 discriminator 2
 1589 0084 BDF80410 		ldrh	r1, [sp, #4]
 1590 0088 03F10C02 		add	r2, r3, #12
 1591 008c 2244     		add	r2, r2, r4
 1592 008e 080A     		lsrs	r0, r1, #8
 1593 0090 9070     		strb	r0, [r2, #2]
 282:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][2] = (uint8_t) ((boardVoltage[3] >> 8) & 0xFF); //cell 4, voltage H
 1594              		.loc 1 282 0 discriminator 2
 1595 0092 D170     		strb	r1, [r2, #3]
 283:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][3] = (uint8_t) (boardVoltage[3] & 0xFF); //cell 4, voltage L 
 1596              		.loc 1 283 0 discriminator 2
 1597 0094 BDF80610 		ldrh	r1, [sp, #6]
 1598 0098 03F11202 		add	r2, r3, #18
 1599 009c 2244     		add	r2, r2, r4
 1600 009e 080A     		lsrs	r0, r1, #8
 1601 00a0 9070     		strb	r0, [r2, #2]
 284:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][2] = (uint8_t) ((boardVoltage[6] >> 8) & 0xFF); //cell 7, voltage H
 1602              		.loc 1 284 0 discriminator 2
 1603 00a2 D170     		strb	r1, [r2, #3]
 285:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][3] = (uint8_t) (boardVoltage[6] & 0xFF); //cell 7, voltage L 
 1604              		.loc 1 285 0 discriminator 2
 1605 00a4 BDF80C10 		ldrh	r1, [sp, #12]
ARM GAS  /tmp/ccIyoWCJ.s 			page 45


 1606 00a8 03F11802 		add	r2, r3, #24
 1607 00ac 2244     		add	r2, r2, r4
 1608 00ae 080A     		lsrs	r0, r1, #8
 1609 00b0 9070     		strb	r0, [r2, #2]
 286:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][2] = (uint8_t) ((boardVoltage[7] >> 8) & 0xFF); //cell 8, voltage H
 1610              		.loc 1 286 0 discriminator 2
 1611 00b2 D170     		strb	r1, [r2, #3]
 287:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][3] = (uint8_t) (boardVoltage[7] & 0xFF); //cell 8, voltage L
 1612              		.loc 1 287 0 discriminator 2
 1613 00b4 BDF80E10 		ldrh	r1, [sp, #14]
 1614 00b8 03F11E02 		add	r2, r3, #30
 1615 00bc 2244     		add	r2, r2, r4
 1616 00be 080A     		lsrs	r0, r1, #8
 1617 00c0 9070     		strb	r0, [r2, #2]
 288:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][2] = (uint8_t) ((boardVoltage[8] >> 8) & 0xFF); //cell 9, voltage H
 1618              		.loc 1 288 0 discriminator 2
 1619 00c2 D170     		strb	r1, [r2, #3]
 289:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][3] = (uint8_t) (boardVoltage[8] & 0xFF); //cell 9, voltage L
 1620              		.loc 1 289 0 discriminator 2
 1621 00c4 BDF81010 		ldrh	r1, [sp, #16]
 1622 00c8 03F12402 		add	r2, r3, #36
 1623 00cc 2244     		add	r2, r2, r4
 1624 00ce 080A     		lsrs	r0, r1, #8
 1625 00d0 9070     		strb	r0, [r2, #2]
 290:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][2] = (uint8_t) ((boardVoltage[9] >> 8) & 0xFF); //cell 10, voltage H
 1626              		.loc 1 290 0 discriminator 2
 1627 00d2 D170     		strb	r1, [r2, #3]
 291:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][3] = (uint8_t) (boardVoltage[9] & 0xFF); //cell 10, voltage L
 1628              		.loc 1 291 0 discriminator 2
 1629 00d4 BDF81220 		ldrh	r2, [sp, #18]
 1630 00d8 2A33     		adds	r3, r3, #42
 1631 00da 2344     		add	r3, r3, r4
 1632 00dc 110A     		lsrs	r1, r2, #8
 1633 00de 9970     		strb	r1, [r3, #2]
 292:Src/LTC6811.c **** 	
 1634              		.loc 1 292 0 discriminator 2
 1635 00e0 DA70     		strb	r2, [r3, #3]
 262:Src/LTC6811.c **** 
 1636              		.loc 1 262 0 discriminator 2
 1637 00e2 0135     		adds	r5, r5, #1
 1638              	.LVL164:
 1639 00e4 EDB2     		uxtb	r5, r5
 1640              	.LVL165:
 1641              	.L75:
 262:Src/LTC6811.c **** 
 1642              		.loc 1 262 0 is_stmt 0 discriminator 1
 1643 00e6 0B2D     		cmp	r5, #11
 1644 00e8 07D8     		bhi	.L82
 265:Src/LTC6811.c **** 		dataValid &= PEC_check[board];
 1645              		.loc 1 265 0 is_stmt 1
 1646 00ea 2E46     		mov	r6, r5
 1647 00ec 6946     		mov	r1, sp
 1648 00ee 2846     		mov	r0, r5
 1649 00f0 FFF7FEFF 		bl	readCellVoltage
 1650              	.LVL166:
 1651 00f4 0740     		ands	r7, r7, r0
 1652              	.LVL167:
ARM GAS  /tmp/ccIyoWCJ.s 			page 46


 1653              	.LBB13:
 269:Src/LTC6811.c **** 			bmsData[(board * 8) + cell][0] = (uint8_t) ((board * 8) + cell + 1); //cell number
 1654              		.loc 1 269 0
 1655 00f6 0023     		movs	r3, #0
 1656 00f8 9DE7     		b	.L76
 1657              	.LVL168:
 1658              	.L82:
 1659              	.LBE13:
 1660              	.LBE14:
 302:Src/LTC6811.c **** 
 1661              		.loc 1 302 0
 1662 00fa 3846     		mov	r0, r7
 1663 00fc 07B0     		add	sp, sp, #28
 1664              	.LCFI36:
 1665              		.cfi_def_cfa_offset 36
 1666              		@ sp needed
 1667 00fe BDE8F040 		pop	{r4, r5, r6, r7, lr}
 1668              	.LCFI37:
 1669              		.cfi_restore 14
 1670              		.cfi_restore 7
 1671              		.cfi_restore 6
 1672              		.cfi_restore 5
 1673              		.cfi_restore 4
 1674              		.cfi_def_cfa_offset 16
 1675              	.LVL169:
 1676 0102 04B0     		add	sp, sp, #16
 1677              	.LCFI38:
 1678              		.cfi_def_cfa_offset 0
 1679 0104 7047     		bx	lr
 1680              		.cfi_endproc
 1681              	.LFE70:
 1683              		.section	.text.readAllCellTemps,"ax",%progbits
 1684              		.align	1
 1685              		.global	readAllCellTemps
 1686              		.syntax unified
 1687              		.thumb
 1688              		.thumb_func
 1689              		.fpu softvfp
 1691              	readAllCellTemps:
 1692              	.LFB72:
 355:Src/LTC6811.c **** 
 1693              		.loc 1 355 0
 1694              		.cfi_startproc
 1695              		@ args = 100, pretend = 16, frame = 16
 1696              		@ frame_needed = 0, uses_anonymous_args = 0
 1697              	.LVL170:
 1698 0000 84B0     		sub	sp, sp, #16
 1699              	.LCFI39:
 1700              		.cfi_def_cfa_offset 16
 1701 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1702              	.LCFI40:
 1703              		.cfi_def_cfa_offset 36
 1704              		.cfi_offset 4, -36
 1705              		.cfi_offset 5, -32
 1706              		.cfi_offset 6, -28
 1707              		.cfi_offset 7, -24
 1708              		.cfi_offset 14, -20
ARM GAS  /tmp/ccIyoWCJ.s 			page 47


 1709 0004 85B0     		sub	sp, sp, #20
 1710              	.LCFI41:
 1711              		.cfi_def_cfa_offset 56
 1712 0006 0AAC     		add	r4, sp, #40
 1713 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1714 000c 229C     		ldr	r4, [sp, #136]
 1715              	.LVL171:
 363:Src/LTC6811.c **** 
 1716              		.loc 1 363 0
 1717 000e FFF7FEFF 		bl	wakeup_idle
 1718              	.LVL172:
 365:Src/LTC6811.c **** 	sendBroadcastCommand(StartCellTempVoltageADCConversionAll);
 1719              		.loc 1 365 0
 1720 0012 40F21170 		movw	r0, #1809
 1721 0016 FFF7FEFF 		bl	sendBroadcastCommand
 1722              	.LVL173:
 366:Src/LTC6811.c **** 	HAL_Delay(20);
 1723              		.loc 1 366 0
 1724 001a 4FF48C60 		mov	r0, #1120
 1725 001e FFF7FEFF 		bl	sendBroadcastCommand
 1726              	.LVL174:
 367:Src/LTC6811.c **** 
 1727              		.loc 1 367 0
 1728 0022 1420     		movs	r0, #20
 1729 0024 FFF7FEFF 		bl	HAL_Delay
 1730              	.LVL175:
 369:Src/LTC6811.c **** 
 1731              		.loc 1 369 0
 1732 0028 FFF7FEFF 		bl	wakeup_idle
 1733              	.LVL176:
 1734              	.LBB15:
 371:Src/LTC6811.c **** 
 1735              		.loc 1 371 0
 1736 002c 0026     		movs	r6, #0
 1737              	.LBE15:
 361:Src/LTC6811.c **** 
 1738              		.loc 1 361 0
 1739 002e 0127     		movs	r7, #1
 1740              	.LBB18:
 371:Src/LTC6811.c **** 
 1741              		.loc 1 371 0
 1742 0030 6BE0     		b	.L84
 1743              	.LVL177:
 1744              	.L88:
 1745              	.LBB16:
 378:Src/LTC6811.c **** 			if (PEC_check[board])
 1746              		.loc 1 378 0 discriminator 2
 1747 0032 0133     		adds	r3, r3, #1
 1748              	.LVL178:
 1749 0034 DBB2     		uxtb	r3, r3
 1750              	.LVL179:
 1751              	.L85:
 378:Src/LTC6811.c **** 			if (PEC_check[board])
 1752              		.loc 1 378 0 is_stmt 0 discriminator 1
 1753 0036 072B     		cmp	r3, #7
 1754 0038 2ED8     		bhi	.L92
 379:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00000010; //set valid data bit
ARM GAS  /tmp/ccIyoWCJ.s 			page 48


 1755              		.loc 1 379 0 is_stmt 1
 1756 003a 48B1     		cbz	r0, .L86
 380:Src/LTC6811.c **** 
 1757              		.loc 1 380 0
 1758 003c 03EBC501 		add	r1, r3, r5, lsl #3
 1759 0040 01EB4101 		add	r1, r1, r1, lsl #1
 1760 0044 4A00     		lsls	r2, r1, #1
 1761 0046 2244     		add	r2, r2, r4
 1762 0048 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1763 004a 41F00201 		orr	r1, r1, #2
 1764 004e 5170     		strb	r1, [r2, #1]
 1765              	.L86:
 385:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00010000; //set OT bit
 1766              		.loc 1 385 0
 1767 0050 5A08     		lsrs	r2, r3, #1
 1768 0052 04A9     		add	r1, sp, #16
 1769 0054 1144     		add	r1, r1, r2
 1770 0056 11F8101C 		ldrb	r1, [r1, #-16]	@ zero_extendqisi2
 1771 005a 61B1     		cbz	r1, .L87
 386:Src/LTC6811.c **** 
 1772              		.loc 1 386 0
 1773 005c 03EBC50C 		add	ip, r3, r5, lsl #3
 1774 0060 0CEB4C0C 		add	ip, ip, ip, lsl #1
 1775 0064 4FEA4C01 		lsl	r1, ip, #1
 1776 0068 2144     		add	r1, r1, r4
 1777 006a 91F801C0 		ldrb	ip, [r1, #1]	@ zero_extendqisi2
 1778 006e 4CF0100C 		orr	ip, ip, #16
 1779 0072 81F801C0 		strb	ip, [r1, #1]
 1780              	.L87:
 388:Src/LTC6811.c **** 				bmsData[(board * 8) + cell][1] |= 0b00001000; //set temp DC bit
 1781              		.loc 1 388 0
 1782 0076 04A9     		add	r1, sp, #16
 1783 0078 0A44     		add	r2, r2, r1
 1784 007a 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
 1785 007e 002A     		cmp	r2, #0
 1786 0080 D7D0     		beq	.L88
 389:Src/LTC6811.c **** 		}
 1787              		.loc 1 389 0
 1788 0082 03EBC501 		add	r1, r3, r5, lsl #3
 1789 0086 01EB4101 		add	r1, r1, r1, lsl #1
 1790 008a 4A00     		lsls	r2, r1, #1
 1791 008c 2244     		add	r2, r2, r4
 1792 008e 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1793 0090 41F00801 		orr	r1, r1, #8
 1794 0094 5170     		strb	r1, [r2, #1]
 1795 0096 CCE7     		b	.L88
 1796              	.L92:
 1797              	.LBE16:
 393:Src/LTC6811.c **** 		bmsData[(board * 8) + 0][5] = (uint8_t) (boardTemp[0] & 0xFF); //temp1 L
 1798              		.loc 1 393 0 discriminator 2
 1799 0098 BDF80820 		ldrh	r2, [sp, #8]
 1800 009c 05EB4505 		add	r5, r5, r5, lsl #1
 1801 00a0 2B01     		lsls	r3, r5, #4
 1802              	.LVL180:
 1803 00a2 E118     		adds	r1, r4, r3
 1804 00a4 100A     		lsrs	r0, r2, #8
 1805 00a6 0871     		strb	r0, [r1, #4]
ARM GAS  /tmp/ccIyoWCJ.s 			page 49


 394:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][4] = (uint8_t) ((boardTemp[0] >> 8) & 0xFF); //temp1 H
 1806              		.loc 1 394 0 discriminator 2
 1807 00a8 D2B2     		uxtb	r2, r2
 1808 00aa 4A71     		strb	r2, [r1, #5]
 395:Src/LTC6811.c **** 		bmsData[(board * 8) + 1][5] = (uint8_t) (boardTemp[0] & 0xFF); //temp1 L
 1809              		.loc 1 395 0 discriminator 2
 1810 00ac 991D     		adds	r1, r3, #6
 1811 00ae 2144     		add	r1, r1, r4
 1812 00b0 0871     		strb	r0, [r1, #4]
 396:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][4] = (uint8_t) ((boardTemp[1] >> 8) & 0xFF); //temp2 H
 1813              		.loc 1 396 0 discriminator 2
 1814 00b2 4A71     		strb	r2, [r1, #5]
 397:Src/LTC6811.c **** 		bmsData[(board * 8) + 2][5] = (uint8_t) (boardTemp[1] & 0xFF); //temp2 L
 1815              		.loc 1 397 0 discriminator 2
 1816 00b4 BDF80A20 		ldrh	r2, [sp, #10]
 1817 00b8 03F10C01 		add	r1, r3, #12
 1818 00bc 2144     		add	r1, r1, r4
 1819 00be 100A     		lsrs	r0, r2, #8
 1820 00c0 0871     		strb	r0, [r1, #4]
 398:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][4] = (uint8_t) ((boardTemp[1] >> 8) & 0xFF); //temp2 H
 1821              		.loc 1 398 0 discriminator 2
 1822 00c2 D2B2     		uxtb	r2, r2
 1823 00c4 4A71     		strb	r2, [r1, #5]
 399:Src/LTC6811.c **** 		bmsData[(board * 8) + 3][5] = (uint8_t) (boardTemp[1] & 0xFF); //temp2 L
 1824              		.loc 1 399 0 discriminator 2
 1825 00c6 03F11201 		add	r1, r3, #18
 1826 00ca 2144     		add	r1, r1, r4
 1827 00cc 0871     		strb	r0, [r1, #4]
 400:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][4] = (uint8_t) ((boardTemp[2] >> 8) & 0xFF); //temp3 H
 1828              		.loc 1 400 0 discriminator 2
 1829 00ce 4A71     		strb	r2, [r1, #5]
 401:Src/LTC6811.c **** 		bmsData[(board * 8) + 4][5] = (uint8_t) (boardTemp[2] & 0xFF); //temp3 L
 1830              		.loc 1 401 0 discriminator 2
 1831 00d0 BDF80C20 		ldrh	r2, [sp, #12]
 1832 00d4 03F11801 		add	r1, r3, #24
 1833 00d8 2144     		add	r1, r1, r4
 1834 00da 100A     		lsrs	r0, r2, #8
 1835 00dc 0871     		strb	r0, [r1, #4]
 402:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][4] = (uint8_t) ((boardTemp[2] >> 8) & 0xFF); //temp3 H
 1836              		.loc 1 402 0 discriminator 2
 1837 00de D2B2     		uxtb	r2, r2
 1838 00e0 4A71     		strb	r2, [r1, #5]
 403:Src/LTC6811.c **** 		bmsData[(board * 8) + 5][5] = (uint8_t) (boardTemp[2] & 0xFF); //temp3 L
 1839              		.loc 1 403 0 discriminator 2
 1840 00e2 03F11E01 		add	r1, r3, #30
 1841 00e6 2144     		add	r1, r1, r4
 1842 00e8 0871     		strb	r0, [r1, #4]
 404:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][4] = (uint8_t) ((boardTemp[3] >> 8) & 0xFF); //temp4 H
 1843              		.loc 1 404 0 discriminator 2
 1844 00ea 4A71     		strb	r2, [r1, #5]
 405:Src/LTC6811.c **** 		bmsData[(board * 8) + 6][5] = (uint8_t) (boardTemp[3] & 0xFF); //temp4 L
 1845              		.loc 1 405 0 discriminator 2
 1846 00ec BDF80E20 		ldrh	r2, [sp, #14]
 1847 00f0 03F12401 		add	r1, r3, #36
 1848 00f4 2144     		add	r1, r1, r4
 1849 00f6 100A     		lsrs	r0, r2, #8
 1850 00f8 0871     		strb	r0, [r1, #4]
ARM GAS  /tmp/ccIyoWCJ.s 			page 50


 406:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][4] = (uint8_t) ((boardTemp[3] >> 8) & 0xFF); //temp4 H
 1851              		.loc 1 406 0 discriminator 2
 1852 00fa D2B2     		uxtb	r2, r2
 1853 00fc 4A71     		strb	r2, [r1, #5]
 407:Src/LTC6811.c **** 		bmsData[(board * 8) + 7][5] = (uint8_t) (boardTemp[3] & 0xFF); //temp4 L
 1854              		.loc 1 407 0 discriminator 2
 1855 00fe 2A33     		adds	r3, r3, #42
 1856 0100 2344     		add	r3, r3, r4
 1857 0102 1871     		strb	r0, [r3, #4]
 408:Src/LTC6811.c **** 	}
 1858              		.loc 1 408 0 discriminator 2
 1859 0104 5A71     		strb	r2, [r3, #5]
 371:Src/LTC6811.c **** 
 1860              		.loc 1 371 0 discriminator 2
 1861 0106 0136     		adds	r6, r6, #1
 1862              	.LVL181:
 1863 0108 F6B2     		uxtb	r6, r6
 1864              	.LVL182:
 1865              	.L84:
 371:Src/LTC6811.c **** 
 1866              		.loc 1 371 0 is_stmt 0 discriminator 1
 1867 010a 0B2E     		cmp	r6, #11
 1868 010c 09D8     		bhi	.L93
 374:Src/LTC6811.c **** 		dataValid &= PEC_check[board];
 1869              		.loc 1 374 0 is_stmt 1
 1870 010e 3546     		mov	r5, r6
 1871 0110 6B46     		mov	r3, sp
 1872 0112 01AA     		add	r2, sp, #4
 1873 0114 02A9     		add	r1, sp, #8
 1874 0116 3046     		mov	r0, r6
 1875 0118 FFF7FEFF 		bl	readCellTemp
 1876              	.LVL183:
 1877 011c 0740     		ands	r7, r7, r0
 1878              	.LVL184:
 1879              	.LBB17:
 378:Src/LTC6811.c **** 			if (PEC_check[board])
 1880              		.loc 1 378 0
 1881 011e 0023     		movs	r3, #0
 1882 0120 89E7     		b	.L85
 1883              	.LVL185:
 1884              	.L93:
 1885              	.LBE17:
 1886              	.LBE18:
 417:Src/LTC6811.c **** 
 1887              		.loc 1 417 0
 1888 0122 3846     		mov	r0, r7
 1889 0124 05B0     		add	sp, sp, #20
 1890              	.LCFI42:
 1891              		.cfi_def_cfa_offset 36
 1892              		@ sp needed
 1893 0126 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 1894              	.LCFI43:
 1895              		.cfi_restore 14
 1896              		.cfi_restore 7
 1897              		.cfi_restore 6
 1898              		.cfi_restore 5
 1899              		.cfi_restore 4
ARM GAS  /tmp/ccIyoWCJ.s 			page 51


 1900              		.cfi_def_cfa_offset 16
 1901              	.LVL186:
 1902 012a 04B0     		add	sp, sp, #16
 1903              	.LCFI44:
 1904              		.cfi_def_cfa_offset 0
 1905 012c 7047     		bx	lr
 1906              		.cfi_endproc
 1907              	.LFE72:
 1909              		.section	.text.checkAllCellConnections,"ax",%progbits
 1910              		.align	1
 1911              		.global	checkAllCellConnections
 1912              		.syntax unified
 1913              		.thumb
 1914              		.thumb_func
 1915              		.fpu softvfp
 1917              	checkAllCellConnections:
 1918              	.LFB74:
 461:Src/LTC6811.c **** 	
 1919              		.loc 1 461 0
 1920              		.cfi_startproc
 1921              		@ args = 100, pretend = 16, frame = 0
 1922              		@ frame_needed = 1, uses_anonymous_args = 0
 1923              	.LVL187:
 1924 0000 84B0     		sub	sp, sp, #16
 1925              	.LCFI45:
 1926              		.cfi_def_cfa_offset 16
 1927 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1928              	.LCFI46:
 1929              		.cfi_def_cfa_offset 48
 1930              		.cfi_offset 3, -48
 1931              		.cfi_offset 4, -44
 1932              		.cfi_offset 5, -40
 1933              		.cfi_offset 6, -36
 1934              		.cfi_offset 7, -32
 1935              		.cfi_offset 8, -28
 1936              		.cfi_offset 9, -24
 1937              		.cfi_offset 14, -20
 1938 0006 00AF     		add	r7, sp, #0
 1939              	.LCFI47:
 1940              		.cfi_def_cfa_register 7
 1941 0008 07F12004 		add	r4, r7, #32
 1942 000c 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1943 0010 D7F88080 		ldr	r8, [r7, #128]
 463:Src/LTC6811.c **** 	uint16_t cellVoltage;
 1944              		.loc 1 463 0
 1945 0014 97F84130 		ldrb	r3, [r7, #65]	@ zero_extendqisi2
 1946              	.LVL188:
 1947 0018 5B00     		lsls	r3, r3, #1
 1948              	.LVL189:
 1949 001a 0833     		adds	r3, r3, #8
 1950 001c 03F47E73 		and	r3, r3, #1016
 1951 0020 ADEB030D 		sub	sp, sp, r3
 1952 0024 6C46     		mov	r4, sp
 1953              	.LVL190:
 469:Src/LTC6811.c **** 
 1954              		.loc 1 469 0
 1955 0026 FFF7FEFF 		bl	wakeup_idle
ARM GAS  /tmp/ccIyoWCJ.s 			page 52


 1956              	.LVL191:
 472:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 1957              		.loc 1 472 0
 1958 002a 40F21170 		movw	r0, #1809
 1959 002e FFF7FEFF 		bl	sendBroadcastCommand
 1960              	.LVL192:
 473:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 1961              		.loc 1 473 0
 1962 0032 40F22920 		movw	r0, #553
 1963 0036 FFF7FEFF 		bl	sendBroadcastCommand
 1964              	.LVL193:
 474:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 1965              		.loc 1 474 0
 1966 003a 40F22920 		movw	r0, #553
 1967 003e FFF7FEFF 		bl	sendBroadcastCommand
 1968              	.LVL194:
 475:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 1969              		.loc 1 475 0
 1970 0042 40F22920 		movw	r0, #553
 1971 0046 FFF7FEFF 		bl	sendBroadcastCommand
 1972              	.LVL195:
 476:Src/LTC6811.c **** 	sendBroadcastCommand(StartOpenWireConversionPulldown);
 1973              		.loc 1 476 0
 1974 004a 40F22920 		movw	r0, #553
 1975 004e FFF7FEFF 		bl	sendBroadcastCommand
 1976              	.LVL196:
 477:Src/LTC6811.c **** 	HAL_Delay(20);
 1977              		.loc 1 477 0
 1978 0052 40F22920 		movw	r0, #553
 1979 0056 FFF7FEFF 		bl	sendBroadcastCommand
 1980              	.LVL197:
 478:Src/LTC6811.c **** 
 1981              		.loc 1 478 0
 1982 005a 1420     		movs	r0, #20
 1983 005c FFF7FEFF 		bl	HAL_Delay
 1984              	.LVL198:
 480:Src/LTC6811.c **** 
 1985              		.loc 1 480 0
 1986 0060 FFF7FEFF 		bl	wakeup_idle
 1987              	.LVL199:
 1988              	.LBB19:
 482:Src/LTC6811.c **** 
 1989              		.loc 1 482 0
 1990 0064 0025     		movs	r5, #0
 1991              	.LBE19:
 467:Src/LTC6811.c **** 
 1992              		.loc 1 467 0
 1993 0066 4FF00109 		mov	r9, #1
 1994              	.LBB22:
 482:Src/LTC6811.c **** 
 1995              		.loc 1 482 0
 1996 006a 1DE0     		b	.L95
 1997              	.LVL200:
 1998              	.L97:
 1999              	.LBB20:
 492:Src/LTC6811.c **** 
 2000              		.loc 1 492 0 discriminator 2
ARM GAS  /tmp/ccIyoWCJ.s 			page 53


 2001 006c 0132     		adds	r2, r2, #1
 2002              	.LVL201:
 2003 006e D2B2     		uxtb	r2, r2
 2004              	.LVL202:
 2005              	.L96:
 492:Src/LTC6811.c **** 
 2006              		.loc 1 492 0 is_stmt 0 discriminator 1
 2007 0070 97F84230 		ldrb	r3, [r7, #66]	@ zero_extendqisi2
 2008 0074 9A42     		cmp	r2, r3
 2009 0076 15D2     		bcs	.L101
 2010              	.LVL203:
 495:Src/LTC6811.c **** 			cellVoltage = cellVoltage << 8;
 2011              		.loc 1 495 0 is_stmt 1
 2012 0078 03FB0623 		mla	r3, r3, r6, r2
 2013 007c 03EB4303 		add	r3, r3, r3, lsl #1
 2014 0080 5900     		lsls	r1, r3, #1
 2015 0082 4144     		add	r1, r1, r8
 2016 0084 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 2017              	.LVL204:
 497:Src/LTC6811.c **** 
 2018              		.loc 1 497 0
 2019 0086 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 2020 0088 03EB0023 		add	r3, r3, r0, lsl #8
 2021 008c 9BB2     		uxth	r3, r3
 2022              	.LVL205:
 499:Src/LTC6811.c **** 				bmsData[(board * cfg.numOfCellsPerIC) + cell][1] |= 0b00000001; //negligible drop in voltage, s
 2023              		.loc 1 499 0
 2024 008e 34F81200 		ldrh	r0, [r4, r2, lsl #1]
 2025 0092 1B1A     		subs	r3, r3, r0
 2026              	.LVL206:
 2027 0094 B3F57A7F 		cmp	r3, #1000
 2028 0098 E8DA     		bge	.L97
 500:Src/LTC6811.c **** 			}
 2029              		.loc 1 500 0
 2030 009a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 2031 009c 43F00103 		orr	r3, r3, #1
 2032 00a0 4B70     		strb	r3, [r1, #1]
 2033 00a2 E3E7     		b	.L97
 2034              	.LVL207:
 2035              	.L101:
 2036              	.LBE20:
 482:Src/LTC6811.c **** 
 2037              		.loc 1 482 0 discriminator 2
 2038 00a4 0135     		adds	r5, r5, #1
 2039              	.LVL208:
 2040 00a6 EDB2     		uxtb	r5, r5
 2041              	.LVL209:
 2042              	.L95:
 482:Src/LTC6811.c **** 
 2043              		.loc 1 482 0 is_stmt 0 discriminator 1
 2044 00a8 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 2045 00ac 9D42     		cmp	r5, r3
 2046 00ae 13D2     		bcs	.L102
 484:Src/LTC6811.c **** 		dataValid &= PEC_check[board];
 2047              		.loc 1 484 0 is_stmt 1
 2048 00b0 2E46     		mov	r6, r5
 2049 00b2 07F12003 		add	r3, r7, #32
ARM GAS  /tmp/ccIyoWCJ.s 			page 54


 2050 00b6 2B44     		add	r3, r3, r5
 2051 00b8 2146     		mov	r1, r4
 2052 00ba 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 2053 00bc FFF7FEFF 		bl	readCellVoltage
 2054              	.LVL210:
 2055 00c0 09EA0009 		and	r9, r9, r0
 2056              	.LVL211:
 487:Src/LTC6811.c **** 		ADOWvoltage[5] = ADOWvoltage[7];
 2057              		.loc 1 487 0
 2058 00c4 A389     		ldrh	r3, [r4, #12]
 2059 00c6 2381     		strh	r3, [r4, #8]	@ movhi
 488:Src/LTC6811.c **** 		ADOWvoltage[6] = ADOWvoltage[8];
 2060              		.loc 1 488 0
 2061 00c8 E389     		ldrh	r3, [r4, #14]
 2062 00ca 6381     		strh	r3, [r4, #10]	@ movhi
 489:Src/LTC6811.c **** 		ADOWvoltage[7] = ADOWvoltage[9];
 2063              		.loc 1 489 0
 2064 00cc 238A     		ldrh	r3, [r4, #16]
 2065 00ce A381     		strh	r3, [r4, #12]	@ movhi
 490:Src/LTC6811.c **** 
 2066              		.loc 1 490 0
 2067 00d0 638A     		ldrh	r3, [r4, #18]
 2068 00d2 E381     		strh	r3, [r4, #14]	@ movhi
 2069              	.LVL212:
 2070              	.LBB21:
 492:Src/LTC6811.c **** 
 2071              		.loc 1 492 0
 2072 00d4 0022     		movs	r2, #0
 2073 00d6 CBE7     		b	.L96
 2074              	.LVL213:
 2075              	.L102:
 2076              	.LBE21:
 2077              	.LBE22:
 511:Src/LTC6811.c **** 
 2078              		.loc 1 511 0
 2079 00d8 4846     		mov	r0, r9
 2080 00da BD46     		mov	sp, r7
 2081              	.LCFI48:
 2082              		.cfi_def_cfa_register 13
 2083              		@ sp needed
 2084 00dc BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 2085              	.LCFI49:
 2086              		.cfi_restore 14
 2087              		.cfi_restore 9
 2088              		.cfi_restore 8
 2089              		.cfi_restore 7
 2090              		.cfi_restore 6
 2091              		.cfi_restore 5
 2092              		.cfi_restore 4
 2093              		.cfi_restore 3
 2094              		.cfi_def_cfa_offset 16
 2095              	.LVL214:
 2096 00e0 04B0     		add	sp, sp, #16
 2097              	.LCFI50:
 2098              		.cfi_def_cfa_offset 0
 2099 00e2 7047     		bx	lr
 2100              		.cfi_endproc
ARM GAS  /tmp/ccIyoWCJ.s 			page 55


 2101              	.LFE74:
 2103              		.section	.text.sendAddressCommand,"ax",%progbits
 2104              		.align	1
 2105              		.global	sendAddressCommand
 2106              		.syntax unified
 2107              		.thumb
 2108              		.thumb_func
 2109              		.fpu softvfp
 2111              	sendAddressCommand:
 2112              	.LFB79:
 693:Src/LTC6811.c **** 	
 2113              		.loc 1 693 0
 2114              		.cfi_startproc
 2115              		@ args = 0, pretend = 0, frame = 8
 2116              		@ frame_needed = 0, uses_anonymous_args = 0
 2117              	.LVL215:
 2118 0000 70B5     		push	{r4, r5, r6, lr}
 2119              	.LCFI51:
 2120              		.cfi_def_cfa_offset 16
 2121              		.cfi_offset 4, -16
 2122              		.cfi_offset 5, -12
 2123              		.cfi_offset 6, -8
 2124              		.cfi_offset 14, -4
 2125 0002 82B0     		sub	sp, sp, #8
 2126              	.LCFI52:
 2127              		.cfi_def_cfa_offset 24
 2128 0004 0546     		mov	r5, r0
 2129 0006 0C46     		mov	r4, r1
 699:Src/LTC6811.c **** 	
 2130              		.loc 1 699 0
 2131 0008 0220     		movs	r0, #2
 2132              	.LVL216:
 2133 000a FFF7FEFF 		bl	malloc
 2134              	.LVL217:
 2135 000e 0646     		mov	r6, r0
 2136              	.LVL218:
 701:Src/LTC6811.c **** 	msbytes[1] = (uint8_t) (command & 0xFF);
 2137              		.loc 1 701 0
 2138 0010 E300     		lsls	r3, r4, #3
 2139 0012 03F07803 		and	r3, r3, #120
 2140 0016 63F07F03 		orn	r3, r3, #127
 2141 001a C5F30224 		ubfx	r4, r5, #8, #3
 2142 001e 2343     		orrs	r3, r3, r4
 2143 0020 DBB2     		uxtb	r3, r3
 2144 0022 0370     		strb	r3, [r0]
 702:Src/LTC6811.c **** 
 2145              		.loc 1 702 0
 2146 0024 EDB2     		uxtb	r5, r5
 2147 0026 4570     		strb	r5, [r0, #1]
 704:Src/LTC6811.c **** 	cmd[1] = msbytes[1];
 2148              		.loc 1 704 0
 2149 0028 8DF80430 		strb	r3, [sp, #4]
 705:Src/LTC6811.c **** 	
 2150              		.loc 1 705 0
 2151 002c 8DF80550 		strb	r5, [sp, #5]
 707:Src/LTC6811.c **** 	
 2152              		.loc 1 707 0
ARM GAS  /tmp/ccIyoWCJ.s 			page 56


 2153 0030 0146     		mov	r1, r0
 2154 0032 0220     		movs	r0, #2
 2155              	.LVL219:
 2156 0034 FFF7FEFF 		bl	calculatePEC
 2157              	.LVL220:
 709:Src/LTC6811.c **** 	cmd[3] = PEC_return & 0xFF;
 2158              		.loc 1 709 0
 2159 0038 030A     		lsrs	r3, r0, #8
 2160 003a 8DF80630 		strb	r3, [sp, #6]
 710:Src/LTC6811.c **** 	
 2161              		.loc 1 710 0
 2162 003e 8DF80700 		strb	r0, [sp, #7]
 712:Src/LTC6811.c **** 	
 2163              		.loc 1 712 0
 2164 0042 0421     		movs	r1, #4
 2165 0044 0DEB0100 		add	r0, sp, r1
 2166              	.LVL221:
 2167 0048 FFF7FEFF 		bl	SPIWrite
 2168              	.LVL222:
 714:Src/LTC6811.c **** };
 2169              		.loc 1 714 0
 2170 004c 3046     		mov	r0, r6
 2171 004e FFF7FEFF 		bl	free
 2172              	.LVL223:
 715:Src/LTC6811.c **** 
 2173              		.loc 1 715 0
 2174 0052 02B0     		add	sp, sp, #8
 2175              	.LCFI53:
 2176              		.cfi_def_cfa_offset 16
 2177              		@ sp needed
 2178 0054 70BD     		pop	{r4, r5, r6, pc}
 2179              		.cfi_endproc
 2180              	.LFE79:
 2182              		.global	CRC15_POLY
 2183              		.comm	pec15Table,512,4
 2184              		.section	.data.CRC15_POLY,"aw",%progbits
 2185              		.align	1
 2186              		.set	.LANCHOR0,. + 0
 2189              	CRC15_POLY:
 2190 0000 9945     		.short	17817
 2191              		.text
 2192              	.Letext0:
 2193              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2194              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2195              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 2196              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2197              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2198              		.file 7 "/usr/include/newlib/sys/lock.h"
 2199              		.file 8 "/usr/include/newlib/sys/_types.h"
 2200              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 2201              		.file 10 "/usr/include/newlib/sys/reent.h"
 2202              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2203              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2204              		.file 13 "/usr/include/newlib/stdlib.h"
 2205              		.file 14 "Inc/BMSconfig.h"
 2206              		.file 15 "/usr/include/newlib/math.h"
 2207              		.file 16 "Inc/LTC6811.h"
ARM GAS  /tmp/ccIyoWCJ.s 			page 57


 2208              		.file 17 "Inc/SPI.h"
 2209              		.file 18 "<built-in>"
ARM GAS  /tmp/ccIyoWCJ.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 LTC6811.c
     /tmp/ccIyoWCJ.s:16     .text.initPECTable:0000000000000000 $t
     /tmp/ccIyoWCJ.s:23     .text.initPECTable:0000000000000000 initPECTable
     /tmp/ccIyoWCJ.s:97     .text.initPECTable:0000000000000038 $d
                            *COM*:0000000000000200 pec15Table
     /tmp/ccIyoWCJ.s:103    .text.wakeup_idle:0000000000000000 $t
     /tmp/ccIyoWCJ.s:110    .text.wakeup_idle:0000000000000000 wakeup_idle
     /tmp/ccIyoWCJ.s:154    .text.wakeup_idle:0000000000000024 $d
     /tmp/ccIyoWCJ.s:159    .text.calculatePEC:0000000000000000 $t
     /tmp/ccIyoWCJ.s:166    .text.calculatePEC:0000000000000000 calculatePEC
     /tmp/ccIyoWCJ.s:227    .text.calculatePEC:000000000000002c $d
     /tmp/ccIyoWCJ.s:232    .text.readRegister:0000000000000000 $t
     /tmp/ccIyoWCJ.s:239    .text.readRegister:0000000000000000 readRegister
     /tmp/ccIyoWCJ.s:558    .text.readCellVoltage:0000000000000000 $t
     /tmp/ccIyoWCJ.s:565    .text.readCellVoltage:0000000000000000 readCellVoltage
     /tmp/ccIyoWCJ.s:665    .text.readCellTemp:0000000000000000 $t
     /tmp/ccIyoWCJ.s:672    .text.readCellTemp:0000000000000000 readCellTemp
     /tmp/ccIyoWCJ.s:927    .text.readCellTemp:00000000000001b8 $d
     /tmp/ccIyoWCJ.s:953    .text.readConfig:0000000000000000 $t
     /tmp/ccIyoWCJ.s:960    .text.readConfig:0000000000000000 readConfig
     /tmp/ccIyoWCJ.s:1030   .text.writeConfigAddress:0000000000000000 $t
     /tmp/ccIyoWCJ.s:1037   .text.writeConfigAddress:0000000000000000 writeConfigAddress
     /tmp/ccIyoWCJ.s:1230   .text.writeConfigAll:0000000000000000 $t
     /tmp/ccIyoWCJ.s:1237   .text.writeConfigAll:0000000000000000 writeConfigAll
     /tmp/ccIyoWCJ.s:1309   .text.dischargeCellGroups:0000000000000000 $t
     /tmp/ccIyoWCJ.s:1316   .text.dischargeCellGroups:0000000000000000 dischargeCellGroups
     /tmp/ccIyoWCJ.s:1425   .text.sendBroadcastCommand:0000000000000000 $t
     /tmp/ccIyoWCJ.s:1432   .text.sendBroadcastCommand:0000000000000000 sendBroadcastCommand
     /tmp/ccIyoWCJ.s:1478   .text.readAllCellVoltages:0000000000000000 $t
     /tmp/ccIyoWCJ.s:1485   .text.readAllCellVoltages:0000000000000000 readAllCellVoltages
     /tmp/ccIyoWCJ.s:1684   .text.readAllCellTemps:0000000000000000 $t
     /tmp/ccIyoWCJ.s:1691   .text.readAllCellTemps:0000000000000000 readAllCellTemps
     /tmp/ccIyoWCJ.s:1910   .text.checkAllCellConnections:0000000000000000 $t
     /tmp/ccIyoWCJ.s:1917   .text.checkAllCellConnections:0000000000000000 checkAllCellConnections
     /tmp/ccIyoWCJ.s:2104   .text.sendAddressCommand:0000000000000000 $t
     /tmp/ccIyoWCJ.s:2111   .text.sendAddressCommand:0000000000000000 sendAddressCommand
     /tmp/ccIyoWCJ.s:2189   .data.CRC15_POLY:0000000000000000 CRC15_POLY
     /tmp/ccIyoWCJ.s:2185   .data.CRC15_POLY:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
malloc
SPIWriteRead
free
__aeabi_ui2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_d2uiz
pow
SPIWrite
memcpy
HAL_Delay
