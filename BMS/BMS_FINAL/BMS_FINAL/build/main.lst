ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB72:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "LTC6811.h"
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 2


  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** #define CELLVAL_ID      0x007
  37:Src/main.c    **** #define BMSSTAT_ID      0x008
  38:Src/main.c    **** #define BMSVINF_ID      0x009
  39:Src/main.c    **** #define BMSTINF_ID      0x00A
  40:Src/main.c    **** #define CHARGER_ID      0x1806E5F4
  41:Src/main.c    **** 
  42:Src/main.c    **** #define normalCurrent   0x003E		// 6.2 A
  43:Src/main.c    **** 
  44:Src/main.c    **** /* hex value of ten times the current (A) when any cell exceeds lowerVoltage_Threshold */
  45:Src/main.c    **** #define lowerCurrent    0x000A			// 1 A
  46:Src/main.c    **** 
  47:Src/main.c    **** /* hex value of ten times the voltage (V) of the charger */
  48:Src/main.c    **** #define chargerVoltage  0x0FA0		// 400 V
  49:Src/main.c    **** /* USER CODE END PD */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  52:Src/main.c    **** /* USER CODE BEGIN PM */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PM */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  57:Src/main.c    **** ADC_HandleTypeDef hadc1;
  58:Src/main.c    **** 
  59:Src/main.c    **** CAN_HandleTypeDef hcan;
  60:Src/main.c    **** 
  61:Src/main.c    **** SPI_HandleTypeDef hspi1;
  62:Src/main.c    **** 
  63:Src/main.c    **** TIM_HandleTypeDef htim2;
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN PV */
  66:Src/main.c    **** CommandCodeTypedef      CommandCode;
  67:Src/main.c    **** BMSconfigStructTypedef  BMSconfig;
  68:Src/main.c    **** 
  69:Src/main.c    **** CAN_TxHeaderTypeDef     TxHeader;
  70:Src/main.c    **** CAN_RxHeaderTypeDef     RxHeader;
  71:Src/main.c    **** uint8_t                 TxData[8];
  72:Src/main.c    **** uint8_t                 RxData[8];
  73:Src/main.c    **** uint32_t                TxMailbox;
  74:Src/main.c    **** 
  75:Src/main.c    **** CAN_TxHeaderTypeDef     ChargerTxHeader;
  76:Src/main.c    **** uint8_t                 ChargerTxData[8];
  77:Src/main.c    **** 
  78:Src/main.c    **** uint8_t                 CELLVAL_DATA[6];
  79:Src/main.c    **** uint8_t                 BMSSTAT_DATA[6];
  80:Src/main.c    **** 
  81:Src/main.c    **** uint16_t                minimum;
  82:Src/main.c    **** uint8_t                 PEC_counter = 0;
  83:Src/main.c    **** uint8_t                 chargeRate = 2;
  84:Src/main.c    **** 
  85:Src/main.c    **** uint8_t voltageState = 0;
  86:Src/main.c    **** 
  87:Src/main.c    **** /* USER CODE END PV */
  88:Src/main.c    **** 
  89:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  90:Src/main.c    **** void SystemClock_Config(void);
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 3


  91:Src/main.c    **** static void MX_GPIO_Init(void);
  92:Src/main.c    **** static void MX_ADC1_Init(void);
  93:Src/main.c    **** static void MX_CAN_Init(void);
  94:Src/main.c    **** static void MX_SPI1_Init(void);
  95:Src/main.c    **** static void MX_TIM2_Init(void);
  96:Src/main.c    **** /* USER CODE BEGIN PFP */
  97:Src/main.c    **** void VOLTAGE_sort(BMSconfigStructTypedef cfg, uint16_t voltage[12][12]);
  98:Src/main.c    **** void CONNECTION_sort(BMSconfigStructTypedef cfg, bool connection[12][12]);
  99:Src/main.c    **** bool FAULT_check(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool tempFault[12][4], b
 100:Src/main.c    **** void setDischarge(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool cellDischarge[12][
 101:Src/main.c    **** void checkDischarge(BMSconfigStructTypedef cfg, bool fullDischarge[12][8], uint16_t cellVoltage[12]
 102:Src/main.c    **** uint16_t balancingThreshold(BMSconfigStructTypedef cfg);
 103:Src/main.c    **** void CELLVAL_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], uint16_t cellTemp[12
 104:Src/main.c    **** void BMSVINF_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12]);
 105:Src/main.c    **** void BMSTINF_message(BMSconfigStructTypedef cfg, uint16_t cellTemp[12][4]);
 106:Src/main.c    **** void BMSSTAT_message(BMSconfigStructTypedef cfg, uint8_t cellNumber[5], bool faultType[5]);
 107:Src/main.c    **** void setChargerTxData();
 108:Src/main.c    **** /* USER CODE END PFP */
 109:Src/main.c    **** 
 110:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 111:Src/main.c    **** /* USER CODE BEGIN 0 */
 112:Src/main.c    **** 
 113:Src/main.c    **** /* USER CODE END 0 */
 114:Src/main.c    **** 
 115:Src/main.c    **** /**
 116:Src/main.c    ****   * @brief  The application entry point.
 117:Src/main.c    ****   * @retval int
 118:Src/main.c    ****   */
 119:Src/main.c    **** int main(void)
 120:Src/main.c    **** {
 121:Src/main.c    ****   /* USER CODE BEGIN 1 */
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* USER CODE END 1 */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 128:Src/main.c    ****   HAL_Init();
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* USER CODE BEGIN Init */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* USER CODE END Init */
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* Configure the system clock */
 135:Src/main.c    ****   SystemClock_Config();
 136:Src/main.c    **** 
 137:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* USER CODE END SysInit */
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* Initialize all configured peripherals */
 142:Src/main.c    ****   MX_GPIO_Init();
 143:Src/main.c    ****   MX_ADC1_Init();
 144:Src/main.c    ****   MX_CAN_Init();
 145:Src/main.c    ****   //MX_SPI1_Init();
 146:Src/main.c    ****   MX_TIM2_Init();
 147:Src/main.c    ****   /* USER CODE BEGIN 2 */
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 4


 148:Src/main.c    **** 
 149:Src/main.c    ****   SPI_Init();
 150:Src/main.c    ****   initPECTable();
 151:Src/main.c    ****   loadConfig(&BMSconfig);
 152:Src/main.c    ****   writeConfigAll(BMSconfig);
 153:Src/main.c    **** 
 154:Src/main.c    ****   uint16_t voltage[BMSconfig.numOfICs][BMSconfig.numOfCellInputs];        //12, 12
 155:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 156:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 157:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 158:Src/main.c    ****   bool connection[BMSconfig.numOfICs][BMSconfig.numOfCellInputs];         //12, 12
 159:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8
 160:Src/main.c    ****   bool fulldischarge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];    //12, 8
 161:Src/main.c    **** 
 162:Src/main.c    ****   fulldischarge[0][0] = 0;
 163:Src/main.c    ****   fulldischarge[0][1] = 0;
 164:Src/main.c    ****   fulldischarge[0][2] = 0;
 165:Src/main.c    ****   fulldischarge[0][3] = 0;
 166:Src/main.c    ****   fulldischarge[0][4] = 0;
 167:Src/main.c    ****   fulldischarge[0][5] = 0;
 168:Src/main.c    ****   fulldischarge[0][6] = 0;
 169:Src/main.c    ****   fulldischarge[0][7] = 0;
 170:Src/main.c    ****   fulldischarge[0][8] = 0;
 171:Src/main.c    ****   fulldischarge[0][9] = 0;
 172:Src/main.c    ****   fulldischarge[0][10] = 0;
 173:Src/main.c    ****   fulldischarge[0][11] = 0;
 174:Src/main.c    **** 
 175:Src/main.c    ****   bool vreturn = false;
 176:Src/main.c    ****   bool treturn = false;
 177:Src/main.c    ****   bool disconnectFault = false;
 178:Src/main.c    ****   uint8_t disconnectedCell;
 179:Src/main.c    **** 
 180:Src/main.c    ****   uint8_t number[5];
 181:Src/main.c    ****   bool faults[5];
 182:Src/main.c    **** 
 183:Src/main.c    ****   bool AIR = 0;
 184:Src/main.c    ****   bool CHARGE_EN = 0;
 185:Src/main.c    **** 
 186:Src/main.c    ****   /* TEST CHARGING */
 187:Src/main.c    **** 
 188:Src/main.c    ****   bool button = 0;
 189:Src/main.c    ****   bool lastButton = 0;
 190:Src/main.c    ****   bool fault = false;
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* TEST CHARGING */
 193:Src/main.c    **** 
 194:Src/main.c    ****   /* USER CODE END 2 */
 195:Src/main.c    **** 
 196:Src/main.c    ****   /* Infinite loop */
 197:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 198:Src/main.c    ****   while (1)
 199:Src/main.c    ****   {
 200:Src/main.c    ****     /* USER CODE END WHILE */
 201:Src/main.c    **** 
 202:Src/main.c    ****     /* USER CODE BEGIN 3 */
 203:Src/main.c    **** 
 204:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 5


 205:Src/main.c    ****     /* TEST CHARGING */
 206:Src/main.c    **** 
 207:Src/main.c    ****     //button = HAL_GPIO_ReadPin(GPIOB, AIR_Pin); //PB5
 208:Src/main.c    **** 
 209:Src/main.c    ****     /*if ((button == 1) && (lastButton == 0))
 210:Src/main.c    ****       voltageState++;
 211:Src/main.c    **** 
 212:Src/main.c    ****     if (voltageState > 1)
 213:Src/main.c    ****       voltageState = 0;
 214:Src/main.c    **** 
 215:Src/main.c    ****     lastButton = button;*/
 216:Src/main.c    **** 
 217:Src/main.c    ****     if (voltageState == 0) {
 218:Src/main.c    ****       for (uint8_t i = 0; i < 12; i++)
 219:Src/main.c    ****         voltage[0][i] = 40000;
 220:Src/main.c    ****       fault = false;
 221:Src/main.c    ****     }
 222:Src/main.c    **** 
 223:Src/main.c    ****     if (voltageState == 1) {
 224:Src/main.c    ****       for (uint8_t i = 0; i < 12; i++)
 225:Src/main.c    ****         voltage[0][i] = 40000;
 226:Src/main.c    ****       voltage[0][0] = 40600;
 227:Src/main.c    ****       voltage[0][1] = 40600;
 228:Src/main.c    ****       voltage[0][3] = 40600;
 229:Src/main.c    ****       fault = false;
 230:Src/main.c    ****     }
 231:Src/main.c    **** 
 232:Src/main.c    ****     if (voltageState == 2) {
 233:Src/main.c    ****       fault = true;
 234:Src/main.c    ****     }
 235:Src/main.c    **** 
 236:Src/main.c    ****     if (voltageState == 3) {
 237:Src/main.c    **** 
 238:Src/main.c    ****       for (uint8_t i = 0; i < 12; i++)
 239:Src/main.c    ****         voltage[0][i] = 41401;
 240:Src/main.c    ****       fault = false;
 241:Src/main.c    **** 
 242:Src/main.c    ****     }
 243:Src/main.c    **** 
 244:Src/main.c    ****     // Charger Comm Fault
 245:Src/main.c    ****     uint16_t count = TIM2->CNT;
 246:Src/main.c    **** 
 247:Src/main.c    ****     if (count > 20000) {
 248:Src/main.c    ****       HAL_GPIO_WritePin(GPIOC, DEBUG_Pin, GPIO_PIN_RESET);
 249:Src/main.c    ****       HAL_TIM_Base_Stop(&htim2);
 250:Src/main.c    ****     }
 251:Src/main.c    **** 
 252:Src/main.c    ****     BMSVINF_message(BMSconfig, voltage);
 253:Src/main.c    **** 
 254:Src/main.c    ****     setDischarge(BMSconfig, voltage, discharge, fault, fulldischarge);
 255:Src/main.c    **** 
 256:Src/main.c    ****     setChargerTxData();
 257:Src/main.c    **** 
 258:Src/main.c    ****     /*discharge[0][0] = 0;
 259:Src/main.c    ****     discharge[0][1] = 0;
 260:Src/main.c    ****     discharge[0][2] = 0;
 261:Src/main.c    ****     discharge[0][3] = 0;
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 6


 262:Src/main.c    ****     discharge[0][4] = 0;
 263:Src/main.c    ****     discharge[0][5] = 0;
 264:Src/main.c    ****     discharge[0][6] = 0;
 265:Src/main.c    ****     discharge[0][7] = 0;
 266:Src/main.c    ****     discharge[0][8] = 0;
 267:Src/main.c    ****     discharge[0][9] = 0;
 268:Src/main.c    ****     discharge[0][10] = 0;
 269:Src/main.c    ****     discharge[0][11] = 0;*/
 270:Src/main.c    **** 
 271:Src/main.c    ****     vreturn = 0;
 272:Src/main.c    **** 
 273:Src/main.c    ****     tempdisconnect[0][0] = 0;
 274:Src/main.c    ****     tempdisconnect[0][1] = 0;
 275:Src/main.c    ****     tempdisconnect[0][2] = 0;
 276:Src/main.c    ****     tempdisconnect[0][3] = 0;
 277:Src/main.c    **** 
 278:Src/main.c    ****     connection[0][0] = 1;
 279:Src/main.c    ****     connection[0][1] = 1;
 280:Src/main.c    ****     connection[0][2] = 1;
 281:Src/main.c    ****     connection[0][3] = 1;
 282:Src/main.c    ****     connection[0][4] = 1;
 283:Src/main.c    ****     connection[0][5] = 1;
 284:Src/main.c    ****     connection[0][6] = 1;
 285:Src/main.c    ****     connection[0][7] = 1;
 286:Src/main.c    ****     connection[0][8] = 1;
 287:Src/main.c    ****     connection[0][9] = 1;
 288:Src/main.c    ****     connection[0][10] = 1;
 289:Src/main.c    ****     connection[0][11] = 1;
 290:Src/main.c    **** 
 291:Src/main.c    ****     BMSSTAT_message(BMSconfig, number, faults);
 292:Src/main.c    ****     CELLVAL_message(BMSconfig, voltage, temp, connection, discharge, tempdisconnect, vreturn);
 293:Src/main.c    **** 
 294:Src/main.c    ****     checkDischarge(BMSconfig, fulldischarge, voltage);    
 295:Src/main.c    **** 
 296:Src/main.c    ****     HAL_Delay(500);
 297:Src/main.c    **** 
 298:Src/main.c    ****     //set faults to 0 by default, have one of the states be faulted
 299:Src/main.c    ****     //setDischarge, blink if still charging
 300:Src/main.c    ****     //check to see if every stop charging condition works correctly
 301:Src/main.c    **** 
 302:Src/main.c    **** 
 303:Src/main.c    ****     /* TEST CHARGING */
 304:Src/main.c    **** 
 305:Src/main.c    **** 
 306:Src/main.c    **** 
 307:Src/main.c    **** 
 308:Src/main.c    **** 
 309:Src/main.c    **** 
 310:Src/main.c    **** 
 311:Src/main.c    ****     //vreturn = readAllCellVoltages(BMSconfig, voltage);
 312:Src/main.c    ****     //VOLTAGE_sort(BMSconfig, voltage);
 313:Src/main.c    ****     //BMSVINF_message(BMSconfig, voltage);
 314:Src/main.c    ****     //
 315:Src/main.c    ****     //treturn = readAllCellTemps(BMSconfig, temp, tempdisconnect, overtemp);
 316:Src/main.c    ****     //BMSTINF_message(BMSconfig, temp);
 317:Src/main.c    ****     //
 318:Src/main.c    ****     //checkAllCellConnections(BMSconfig, voltage, connection);
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 7


 319:Src/main.c    ****     //CONNECTION_sort(BMSconfig, connection);
 320:Src/main.c    **** 
 321:Src/main.c    ****     //AIR = HAL_GPIO_ReadPin(GPIOB, AIR_Pin);
 322:Src/main.c    ****     //CHARGE_EN = HAL_GPIO_ReadPin(GPIOB, CHARGE_EN_Pin);
 323:Src/main.c    **** 
 324:Src/main.c    ****     /*if ((AIR == 0) && (CHARGE_EN == 0)) {
 325:Src/main.c    **** 
 326:Src/main.c    ****       if (chargeRate != 0)
 327:Src/main.c    ****         setDischarge(BMSconfig, voltage, discharge, chargerate, faults);
 328:Src/main.c    **** 
 329:Src/main.c    ****       //send charger CAN message
 330:Src/main.c    ****       setChargerTxData();
 331:Src/main.c    ****     
 332:Src/main.c    ****       if (chargeRate != 0) {
 333:Src/main.c    ****         dischargeCellGroups(BMSconfig, discharge);
 334:Src/main.c    ****         //blink LED to test
 335:Src/main.c    ****       }
 336:Src/main.c    **** 
 337:Src/main.c    ****       else if (chargeRate == 0) {
 338:Src/main.c    ****         checkDischarge(BMSconfig, fulldischarge, voltage);
 339:Src/main.c    ****         dischargeCellGroups(BMSconfig, fulldischarge);
 340:Src/main.c    ****       }
 341:Src/main.c    ****     }
 342:Src/main.c    ****     else {
 343:Src/main.c    **** 
 344:Src/main.c    ****       //stop discharging for every cell
 345:Src/main.c    **** 
 346:Src/main.c    ****     }*/
 347:Src/main.c    **** 
 348:Src/main.c    ****     //FAULT_check(BMSconfig, voltage, overtemp, tempdisconnect, connection, number, faults, vreturn
 349:Src/main.c    ****     //BMSSTAT_message(BMSconfig, number, faults);
 350:Src/main.c    **** 
 351:Src/main.c    ****     //CELLVAL_message(BMSconfig, voltage, temp, connection, discharge, tempdisconnect, vreturn);
 352:Src/main.c    **** 
 353:Src/main.c    ****     //if (vreturn == 1) HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 354:Src/main.c    **** 
 355:Src/main.c    ****     //HAL_Delay(100);
 356:Src/main.c    **** 
 357:Src/main.c    ****   }
 358:Src/main.c    ****   /* USER CODE END 3 */
 359:Src/main.c    **** }
 360:Src/main.c    **** 
 361:Src/main.c    **** /**
 362:Src/main.c    ****   * @brief System Clock Configuration
 363:Src/main.c    ****   * @retval None
 364:Src/main.c    ****   */
 365:Src/main.c    **** void SystemClock_Config(void)
 366:Src/main.c    **** {
 367:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 368:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 369:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 370:Src/main.c    **** 
 371:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 372:Src/main.c    ****   */
 373:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 374:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 375:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 8


 376:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 377:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 378:Src/main.c    ****   {
 379:Src/main.c    ****     Error_Handler();
 380:Src/main.c    ****   }
 381:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 382:Src/main.c    ****   */
 383:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 384:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 385:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 386:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 387:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 388:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 389:Src/main.c    **** 
 390:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 391:Src/main.c    ****   {
 392:Src/main.c    ****     Error_Handler();
 393:Src/main.c    ****   }
 394:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 395:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 396:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 397:Src/main.c    ****   {
 398:Src/main.c    ****     Error_Handler();
 399:Src/main.c    ****   }
 400:Src/main.c    **** }
 401:Src/main.c    **** 
 402:Src/main.c    **** /**
 403:Src/main.c    ****   * @brief ADC1 Initialization Function
 404:Src/main.c    ****   * @param None
 405:Src/main.c    ****   * @retval None
 406:Src/main.c    ****   */
 407:Src/main.c    **** static void MX_ADC1_Init(void)
 408:Src/main.c    **** {
 409:Src/main.c    **** 
 410:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 411:Src/main.c    **** 
 412:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 413:Src/main.c    **** 
 414:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 415:Src/main.c    **** 
 416:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 417:Src/main.c    **** 
 418:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 419:Src/main.c    ****   /** Common config 
 420:Src/main.c    ****   */
 421:Src/main.c    ****   hadc1.Instance = ADC1;
 422:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 423:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 424:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 425:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 426:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 427:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 428:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 429:Src/main.c    ****   {
 430:Src/main.c    ****     Error_Handler();
 431:Src/main.c    ****   }
 432:Src/main.c    ****   /** Configure Regular Channel 
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 9


 433:Src/main.c    ****   */
 434:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 435:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 436:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 437:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 438:Src/main.c    ****   {
 439:Src/main.c    ****     Error_Handler();
 440:Src/main.c    ****   }
 441:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 442:Src/main.c    **** 
 443:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 444:Src/main.c    **** 
 445:Src/main.c    **** }
 446:Src/main.c    **** 
 447:Src/main.c    **** /**
 448:Src/main.c    ****   * @brief CAN Initialization Function
 449:Src/main.c    ****   * @param None
 450:Src/main.c    ****   * @retval None
 451:Src/main.c    ****   */
 452:Src/main.c    **** static void MX_CAN_Init(void)
 453:Src/main.c    **** {
 454:Src/main.c    **** 
 455:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 0 */
 456:Src/main.c    **** 
 457:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
 458:Src/main.c    **** 
 459:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 1 */
 460:Src/main.c    ****   CAN_FilterTypeDef     sFilterConfig;
 461:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 462:Src/main.c    ****   hcan.Instance = CAN1;
 463:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 464:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 465:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 466:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 467:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 468:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 469:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 470:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 471:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 472:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 473:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 474:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 475:Src/main.c    ****   {
 476:Src/main.c    ****     Error_Handler();
 477:Src/main.c    ****   }
 478:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 2 */
 479:Src/main.c    ****   TxHeader.StdId = 0x321; 				// CAN standard ID
 480:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 481:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 482:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 483:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 484:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 485:Src/main.c    **** 
 486:Src/main.c    **** 	ChargerTxHeader.ExtId = CHARGER_ID; 					// CAN extended ID
 487:Src/main.c    **** 	ChargerTxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 488:Src/main.c    **** 	ChargerTxHeader.IDE = CAN_ID_EXT; 				// CAN ID type
 489:Src/main.c    **** 	ChargerTxHeader.DLC = 8; 						// CAN frame length in bytes
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 10


 490:Src/main.c    **** 	ChargerTxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 491:Src/main.c    **** 
 492:Src/main.c    **** 	sFilterConfig.FilterBank = 0;							// filter number (0-13)
 493:Src/main.c    **** 	sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 494:Src/main.c    **** 	sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;		
 495:Src/main.c    **** 	sFilterConfig.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifie
 496:Src/main.c    **** 	sFilterConfig.FilterIdLow = 0x0000;
 497:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare 
 498:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow = 0x0000;
 499:Src/main.c    **** 	sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen int
 500:Src/main.c    **** 	sFilterConfig.FilterActivation = ENABLE;
 501:Src/main.c    **** 	
 502:Src/main.c    **** 	HAL_CAN_ConfigFilter(&hcan, &sFilterConfig);
 503:Src/main.c    **** 
 504:Src/main.c    ****   HAL_CAN_Start(&hcan);
 505:Src/main.c    **** 
 506:Src/main.c    ****   HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 507:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 508:Src/main.c    **** 
 509:Src/main.c    **** }
 510:Src/main.c    **** 
 511:Src/main.c    **** /**
 512:Src/main.c    ****   * @brief SPI1 Initialization Function
 513:Src/main.c    ****   * @param None
 514:Src/main.c    ****   * @retval None
 515:Src/main.c    ****   */
 516:Src/main.c    **** static void MX_SPI1_Init(void)
 517:Src/main.c    **** {
 518:Src/main.c    **** 
 519:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 520:Src/main.c    **** 
 521:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 522:Src/main.c    **** 
 523:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 524:Src/main.c    **** 
 525:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 526:Src/main.c    ****   /* SPI1 parameter configuration*/
 527:Src/main.c    ****   hspi1.Instance = SPI1;
 528:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 529:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 530:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 531:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 532:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 533:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 534:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 535:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 536:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 537:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 538:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 539:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 540:Src/main.c    ****   {
 541:Src/main.c    ****     Error_Handler();
 542:Src/main.c    ****   }
 543:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 544:Src/main.c    **** 
 545:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 546:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 11


 547:Src/main.c    **** }
 548:Src/main.c    **** 
 549:Src/main.c    **** /**
 550:Src/main.c    ****   * @brief TIM2 Initialization Function
 551:Src/main.c    ****   * @param None
 552:Src/main.c    ****   * @retval None
 553:Src/main.c    ****   */
 554:Src/main.c    **** static void MX_TIM2_Init(void)
 555:Src/main.c    **** {
 556:Src/main.c    **** 
 557:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 558:Src/main.c    **** 
 559:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 560:Src/main.c    **** 
 561:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 562:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 563:Src/main.c    **** 
 564:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 565:Src/main.c    **** 
 566:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 567:Src/main.c    ****   htim2.Instance = TIM2;
 568:Src/main.c    ****   htim2.Init.Prescaler = 8000;
 569:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 570:Src/main.c    ****   htim2.Init.Period = 65535;
 571:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 572:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 573:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 574:Src/main.c    ****   {
 575:Src/main.c    ****     Error_Handler();
 576:Src/main.c    ****   }
 577:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 578:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 579:Src/main.c    ****   {
 580:Src/main.c    ****     Error_Handler();
 581:Src/main.c    ****   }
 582:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 583:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 584:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 585:Src/main.c    ****   {
 586:Src/main.c    ****     Error_Handler();
 587:Src/main.c    ****   }
 588:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 589:Src/main.c    ****   HAL_TIM_Base_Start(&htim2);
 590:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 591:Src/main.c    **** 
 592:Src/main.c    **** }
 593:Src/main.c    **** 
 594:Src/main.c    **** /**
 595:Src/main.c    ****   * @brief GPIO Initialization Function
 596:Src/main.c    ****   * @param None
 597:Src/main.c    ****   * @retval None
 598:Src/main.c    ****   */
 599:Src/main.c    **** static void MX_GPIO_Init(void)
 600:Src/main.c    **** {
  26              		.loc 1 600 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 12


  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 28
  33              		.cfi_offset 4, -28
  34              		.cfi_offset 5, -24
  35              		.cfi_offset 6, -20
  36              		.cfi_offset 7, -16
  37              		.cfi_offset 8, -12
  38              		.cfi_offset 9, -8
  39              		.cfi_offset 14, -4
  40 0004 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 601:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 601 3 view .LVU1
  44              		.loc 1 601 20 is_stmt 0 view .LVU2
  45 0006 0024     		movs	r4, #0
  46 0008 0494     		str	r4, [sp, #16]
  47 000a 0594     		str	r4, [sp, #20]
  48 000c 0694     		str	r4, [sp, #24]
  49 000e 0794     		str	r4, [sp, #28]
 602:Src/main.c    **** 
 603:Src/main.c    ****   /* GPIO Ports Clock Enable */
 604:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 604 3 is_stmt 1 view .LVU3
  51              	.LBB2:
  52              		.loc 1 604 3 view .LVU4
  53              		.loc 1 604 3 view .LVU5
  54 0010 334B     		ldr	r3, .L3
  55 0012 9A69     		ldr	r2, [r3, #24]
  56 0014 42F01002 		orr	r2, r2, #16
  57 0018 9A61     		str	r2, [r3, #24]
  58              		.loc 1 604 3 view .LVU6
  59 001a 9A69     		ldr	r2, [r3, #24]
  60 001c 02F01002 		and	r2, r2, #16
  61 0020 0092     		str	r2, [sp]
  62              		.loc 1 604 3 view .LVU7
  63 0022 009A     		ldr	r2, [sp]
  64              	.LBE2:
 605:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  65              		.loc 1 605 3 view .LVU8
  66              	.LBB3:
  67              		.loc 1 605 3 view .LVU9
  68              		.loc 1 605 3 view .LVU10
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F02002 		orr	r2, r2, #32
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 605 3 view .LVU11
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F02002 		and	r2, r2, #32
  75 0032 0192     		str	r2, [sp, #4]
  76              		.loc 1 605 3 view .LVU12
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE3:
 606:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 606 3 view .LVU13
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 13


  80              	.LBB4:
  81              		.loc 1 606 3 view .LVU14
  82              		.loc 1 606 3 view .LVU15
  83 0036 9A69     		ldr	r2, [r3, #24]
  84 0038 42F00402 		orr	r2, r2, #4
  85 003c 9A61     		str	r2, [r3, #24]
  86              		.loc 1 606 3 view .LVU16
  87 003e 9A69     		ldr	r2, [r3, #24]
  88 0040 02F00402 		and	r2, r2, #4
  89 0044 0292     		str	r2, [sp, #8]
  90              		.loc 1 606 3 view .LVU17
  91 0046 029A     		ldr	r2, [sp, #8]
  92              	.LBE4:
 607:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  93              		.loc 1 607 3 view .LVU18
  94              	.LBB5:
  95              		.loc 1 607 3 view .LVU19
  96              		.loc 1 607 3 view .LVU20
  97 0048 9A69     		ldr	r2, [r3, #24]
  98 004a 42F00802 		orr	r2, r2, #8
  99 004e 9A61     		str	r2, [r3, #24]
 100              		.loc 1 607 3 view .LVU21
 101 0050 9B69     		ldr	r3, [r3, #24]
 102 0052 03F00803 		and	r3, r3, #8
 103 0056 0393     		str	r3, [sp, #12]
 104              		.loc 1 607 3 view .LVU22
 105 0058 039B     		ldr	r3, [sp, #12]
 106              	.LBE5:
 608:Src/main.c    **** 
 609:Src/main.c    ****   /*Configure GPIO pin Output Level */
 610:Src/main.c    ****   HAL_GPIO_WritePin(DEBUG_GPIO_Port, DEBUG_Pin, GPIO_PIN_SET);
 107              		.loc 1 610 3 view .LVU23
 108 005a DFF88C90 		ldr	r9, .L3+8
 109 005e 0122     		movs	r2, #1
 110 0060 4FF40051 		mov	r1, #8192
 111 0064 4846     		mov	r0, r9
 112 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL0:
 611:Src/main.c    **** 
 612:Src/main.c    ****   /*Configure GPIO pin Output Level */
 613:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, BMS_CS_Pin|TRIGGER_Pin, GPIO_PIN_RESET);
 114              		.loc 1 613 3 view .LVU24
 115 006a DFF88080 		ldr	r8, .L3+12
 116 006e 2246     		mov	r2, r4
 117 0070 4FF48871 		mov	r1, #272
 118 0074 4046     		mov	r0, r8
 119 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL1:
 614:Src/main.c    **** 
 615:Src/main.c    ****   /*Configure GPIO pin Output Level */
 616:Src/main.c    ****   HAL_GPIO_WritePin(BMS_FLT_GPIO_Port, BMS_FLT_Pin, GPIO_PIN_RESET);
 121              		.loc 1 616 3 view .LVU25
 122 007a 1A4D     		ldr	r5, .L3+4
 123 007c 2246     		mov	r2, r4
 124 007e 4FF40071 		mov	r1, #512
 125 0082 2846     		mov	r0, r5
 126 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 14


 127              	.LVL2:
 617:Src/main.c    **** 
 618:Src/main.c    ****   /*Configure GPIO pin : DEBUG_Pin */
 619:Src/main.c    ****   GPIO_InitStruct.Pin = DEBUG_Pin;
 128              		.loc 1 619 3 view .LVU26
 129              		.loc 1 619 23 is_stmt 0 view .LVU27
 130 0088 4FF40053 		mov	r3, #8192
 131 008c 0493     		str	r3, [sp, #16]
 620:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 620 3 is_stmt 1 view .LVU28
 133              		.loc 1 620 24 is_stmt 0 view .LVU29
 134 008e 0127     		movs	r7, #1
 135 0090 0597     		str	r7, [sp, #20]
 621:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 621 3 is_stmt 1 view .LVU30
 137              		.loc 1 621 24 is_stmt 0 view .LVU31
 138 0092 0694     		str	r4, [sp, #24]
 622:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 622 3 is_stmt 1 view .LVU32
 140              		.loc 1 622 25 is_stmt 0 view .LVU33
 141 0094 0226     		movs	r6, #2
 142 0096 0796     		str	r6, [sp, #28]
 623:Src/main.c    ****   HAL_GPIO_Init(DEBUG_GPIO_Port, &GPIO_InitStruct);
 143              		.loc 1 623 3 is_stmt 1 view .LVU34
 144 0098 04A9     		add	r1, sp, #16
 145 009a 4846     		mov	r0, r9
 146 009c FFF7FEFF 		bl	HAL_GPIO_Init
 147              	.LVL3:
 624:Src/main.c    **** 
 625:Src/main.c    ****   /*Configure GPIO pins : BMS_CS_Pin TRIGGER_Pin */
 626:Src/main.c    ****   GPIO_InitStruct.Pin = BMS_CS_Pin|TRIGGER_Pin;
 148              		.loc 1 626 3 view .LVU35
 149              		.loc 1 626 23 is_stmt 0 view .LVU36
 150 00a0 4FF48873 		mov	r3, #272
 151 00a4 0493     		str	r3, [sp, #16]
 627:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 152              		.loc 1 627 3 is_stmt 1 view .LVU37
 153              		.loc 1 627 24 is_stmt 0 view .LVU38
 154 00a6 0597     		str	r7, [sp, #20]
 628:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 628 3 is_stmt 1 view .LVU39
 156              		.loc 1 628 24 is_stmt 0 view .LVU40
 157 00a8 0694     		str	r4, [sp, #24]
 629:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 158              		.loc 1 629 3 is_stmt 1 view .LVU41
 159              		.loc 1 629 25 is_stmt 0 view .LVU42
 160 00aa 0796     		str	r6, [sp, #28]
 630:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 161              		.loc 1 630 3 is_stmt 1 view .LVU43
 162 00ac 04A9     		add	r1, sp, #16
 163 00ae 4046     		mov	r0, r8
 164 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 165              	.LVL4:
 631:Src/main.c    **** 
 632:Src/main.c    ****   /*Configure GPIO pins : CHARGE_EN_Pin AIR_Pin */
 633:Src/main.c    ****   GPIO_InitStruct.Pin = CHARGE_EN_Pin|AIR_Pin;
 166              		.loc 1 633 3 view .LVU44
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 15


 167              		.loc 1 633 23 is_stmt 0 view .LVU45
 168 00b4 2823     		movs	r3, #40
 169 00b6 0493     		str	r3, [sp, #16]
 634:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 170              		.loc 1 634 3 is_stmt 1 view .LVU46
 171              		.loc 1 634 24 is_stmt 0 view .LVU47
 172 00b8 0594     		str	r4, [sp, #20]
 635:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 173              		.loc 1 635 3 is_stmt 1 view .LVU48
 174              		.loc 1 635 24 is_stmt 0 view .LVU49
 175 00ba 0694     		str	r4, [sp, #24]
 636:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 176              		.loc 1 636 3 is_stmt 1 view .LVU50
 177 00bc 04A9     		add	r1, sp, #16
 178 00be 2846     		mov	r0, r5
 179 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL5:
 637:Src/main.c    **** 
 638:Src/main.c    ****   /*Configure GPIO pin : BMS_FLT_Pin */
 639:Src/main.c    ****   GPIO_InitStruct.Pin = BMS_FLT_Pin;
 181              		.loc 1 639 3 view .LVU51
 182              		.loc 1 639 23 is_stmt 0 view .LVU52
 183 00c4 4FF40073 		mov	r3, #512
 184 00c8 0493     		str	r3, [sp, #16]
 640:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 185              		.loc 1 640 3 is_stmt 1 view .LVU53
 186              		.loc 1 640 24 is_stmt 0 view .LVU54
 187 00ca 0597     		str	r7, [sp, #20]
 641:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 188              		.loc 1 641 3 is_stmt 1 view .LVU55
 189              		.loc 1 641 24 is_stmt 0 view .LVU56
 190 00cc 0694     		str	r4, [sp, #24]
 642:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 191              		.loc 1 642 3 is_stmt 1 view .LVU57
 192              		.loc 1 642 25 is_stmt 0 view .LVU58
 193 00ce 0796     		str	r6, [sp, #28]
 643:Src/main.c    ****   HAL_GPIO_Init(BMS_FLT_GPIO_Port, &GPIO_InitStruct);
 194              		.loc 1 643 3 is_stmt 1 view .LVU59
 195 00d0 04A9     		add	r1, sp, #16
 196 00d2 2846     		mov	r0, r5
 197 00d4 FFF7FEFF 		bl	HAL_GPIO_Init
 198              	.LVL6:
 644:Src/main.c    **** 
 645:Src/main.c    **** }
 199              		.loc 1 645 1 is_stmt 0 view .LVU60
 200 00d8 09B0     		add	sp, sp, #36
 201              	.LCFI2:
 202              		.cfi_def_cfa_offset 28
 203              		@ sp needed
 204 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 205              	.L4:
 206 00de 00BF     		.align	2
 207              	.L3:
 208 00e0 00100240 		.word	1073876992
 209 00e4 000C0140 		.word	1073810432
 210 00e8 00100140 		.word	1073811456
 211 00ec 00080140 		.word	1073809408
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 16


 212              		.cfi_endproc
 213              	.LFE72:
 215              		.section	.text.MX_ADC1_Init,"ax",%progbits
 216              		.align	1
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 222              	MX_ADC1_Init:
 223              	.LFB68:
 408:Src/main.c    **** 
 224              		.loc 1 408 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 16
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 70B5     		push	{r4, r5, r6, lr}
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 16
 231              		.cfi_offset 4, -16
 232              		.cfi_offset 5, -12
 233              		.cfi_offset 6, -8
 234              		.cfi_offset 14, -4
 235 0002 84B0     		sub	sp, sp, #16
 236              	.LCFI4:
 237              		.cfi_def_cfa_offset 32
 414:Src/main.c    **** 
 238              		.loc 1 414 3 view .LVU62
 414:Src/main.c    **** 
 239              		.loc 1 414 26 is_stmt 0 view .LVU63
 240 0004 0025     		movs	r5, #0
 241 0006 0195     		str	r5, [sp, #4]
 242 0008 0295     		str	r5, [sp, #8]
 243 000a 0395     		str	r5, [sp, #12]
 421:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 244              		.loc 1 421 3 is_stmt 1 view .LVU64
 421:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 245              		.loc 1 421 18 is_stmt 0 view .LVU65
 246 000c 0C4C     		ldr	r4, .L7
 247 000e 0D4B     		ldr	r3, .L7+4
 248 0010 2360     		str	r3, [r4]
 422:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 249              		.loc 1 422 3 is_stmt 1 view .LVU66
 422:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 250              		.loc 1 422 27 is_stmt 0 view .LVU67
 251 0012 A560     		str	r5, [r4, #8]
 423:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 252              		.loc 1 423 3 is_stmt 1 view .LVU68
 423:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 253              		.loc 1 423 33 is_stmt 0 view .LVU69
 254 0014 E560     		str	r5, [r4, #12]
 424:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 255              		.loc 1 424 3 is_stmt 1 view .LVU70
 424:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 256              		.loc 1 424 36 is_stmt 0 view .LVU71
 257 0016 6561     		str	r5, [r4, #20]
 425:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 258              		.loc 1 425 3 is_stmt 1 view .LVU72
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 17


 425:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 259              		.loc 1 425 31 is_stmt 0 view .LVU73
 260 0018 4FF46023 		mov	r3, #917504
 261 001c E361     		str	r3, [r4, #28]
 426:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 262              		.loc 1 426 3 is_stmt 1 view .LVU74
 426:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 263              		.loc 1 426 24 is_stmt 0 view .LVU75
 264 001e 6560     		str	r5, [r4, #4]
 427:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 265              		.loc 1 427 3 is_stmt 1 view .LVU76
 427:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 266              		.loc 1 427 30 is_stmt 0 view .LVU77
 267 0020 0126     		movs	r6, #1
 268 0022 2661     		str	r6, [r4, #16]
 428:Src/main.c    ****   {
 269              		.loc 1 428 3 is_stmt 1 view .LVU78
 428:Src/main.c    ****   {
 270              		.loc 1 428 7 is_stmt 0 view .LVU79
 271 0024 2046     		mov	r0, r4
 272 0026 FFF7FEFF 		bl	HAL_ADC_Init
 273              	.LVL7:
 434:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 274              		.loc 1 434 3 is_stmt 1 view .LVU80
 434:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 275              		.loc 1 434 19 is_stmt 0 view .LVU81
 276 002a 0823     		movs	r3, #8
 277 002c 0193     		str	r3, [sp, #4]
 435:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 278              		.loc 1 435 3 is_stmt 1 view .LVU82
 435:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 279              		.loc 1 435 16 is_stmt 0 view .LVU83
 280 002e 0296     		str	r6, [sp, #8]
 436:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 281              		.loc 1 436 3 is_stmt 1 view .LVU84
 436:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 282              		.loc 1 436 24 is_stmt 0 view .LVU85
 283 0030 0395     		str	r5, [sp, #12]
 437:Src/main.c    ****   {
 284              		.loc 1 437 3 is_stmt 1 view .LVU86
 437:Src/main.c    ****   {
 285              		.loc 1 437 7 is_stmt 0 view .LVU87
 286 0032 01A9     		add	r1, sp, #4
 287 0034 2046     		mov	r0, r4
 288 0036 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 289              	.LVL8:
 445:Src/main.c    **** 
 290              		.loc 1 445 1 view .LVU88
 291 003a 04B0     		add	sp, sp, #16
 292              	.LCFI5:
 293              		.cfi_def_cfa_offset 16
 294              		@ sp needed
 295 003c 70BD     		pop	{r4, r5, r6, pc}
 296              	.L8:
 297 003e 00BF     		.align	2
 298              	.L7:
 299 0040 00000000 		.word	hadc1
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 18


 300 0044 00240140 		.word	1073816576
 301              		.cfi_endproc
 302              	.LFE68:
 304              		.section	.text.MX_CAN_Init,"ax",%progbits
 305              		.align	1
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu softvfp
 311              	MX_CAN_Init:
 312              	.LFB69:
 453:Src/main.c    **** 
 313              		.loc 1 453 1 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 40
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 70B5     		push	{r4, r5, r6, lr}
 318              	.LCFI6:
 319              		.cfi_def_cfa_offset 16
 320              		.cfi_offset 4, -16
 321              		.cfi_offset 5, -12
 322              		.cfi_offset 6, -8
 323              		.cfi_offset 14, -4
 324 0002 8AB0     		sub	sp, sp, #40
 325              	.LCFI7:
 326              		.cfi_def_cfa_offset 56
 460:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 327              		.loc 1 460 3 view .LVU90
 462:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 328              		.loc 1 462 3 view .LVU91
 462:Src/main.c    ****   hcan.Init.Prescaler = 1; //500kbit/s
 329              		.loc 1 462 17 is_stmt 0 view .LVU92
 330 0004 204D     		ldr	r5, .L11
 331 0006 214B     		ldr	r3, .L11+4
 332 0008 2B60     		str	r3, [r5]
 463:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 333              		.loc 1 463 3 is_stmt 1 view .LVU93
 463:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 334              		.loc 1 463 23 is_stmt 0 view .LVU94
 335 000a 0126     		movs	r6, #1
 336 000c 6E60     		str	r6, [r5, #4]
 464:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 337              		.loc 1 464 3 is_stmt 1 view .LVU95
 464:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;
 338              		.loc 1 464 18 is_stmt 0 view .LVU96
 339 000e 0024     		movs	r4, #0
 340 0010 AC60     		str	r4, [r5, #8]
 465:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 341              		.loc 1 465 3 is_stmt 1 view .LVU97
 465:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_13TQ;
 342              		.loc 1 465 27 is_stmt 0 view .LVU98
 343 0012 4FF08073 		mov	r3, #16777216
 344 0016 EB60     		str	r3, [r5, #12]
 466:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 345              		.loc 1 466 3 is_stmt 1 view .LVU99
 466:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_2TQ;
 346              		.loc 1 466 22 is_stmt 0 view .LVU100
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 19


 347 0018 4FF44023 		mov	r3, #786432
 348 001c 2B61     		str	r3, [r5, #16]
 467:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 349              		.loc 1 467 3 is_stmt 1 view .LVU101
 467:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 350              		.loc 1 467 22 is_stmt 0 view .LVU102
 351 001e 4FF48013 		mov	r3, #1048576
 352 0022 6B61     		str	r3, [r5, #20]
 468:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 353              		.loc 1 468 3 is_stmt 1 view .LVU103
 468:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 354              		.loc 1 468 31 is_stmt 0 view .LVU104
 355 0024 2C76     		strb	r4, [r5, #24]
 469:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 356              		.loc 1 469 3 is_stmt 1 view .LVU105
 469:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 357              		.loc 1 469 24 is_stmt 0 view .LVU106
 358 0026 6C76     		strb	r4, [r5, #25]
 470:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 359              		.loc 1 470 3 is_stmt 1 view .LVU107
 470:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 360              		.loc 1 470 24 is_stmt 0 view .LVU108
 361 0028 AC76     		strb	r4, [r5, #26]
 471:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 362              		.loc 1 471 3 is_stmt 1 view .LVU109
 471:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 363              		.loc 1 471 32 is_stmt 0 view .LVU110
 364 002a EC76     		strb	r4, [r5, #27]
 472:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 365              		.loc 1 472 3 is_stmt 1 view .LVU111
 472:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 366              		.loc 1 472 31 is_stmt 0 view .LVU112
 367 002c 2C77     		strb	r4, [r5, #28]
 473:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 368              		.loc 1 473 3 is_stmt 1 view .LVU113
 473:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 369              		.loc 1 473 34 is_stmt 0 view .LVU114
 370 002e 6C77     		strb	r4, [r5, #29]
 474:Src/main.c    ****   {
 371              		.loc 1 474 3 is_stmt 1 view .LVU115
 474:Src/main.c    ****   {
 372              		.loc 1 474 7 is_stmt 0 view .LVU116
 373 0030 2846     		mov	r0, r5
 374 0032 FFF7FEFF 		bl	HAL_CAN_Init
 375              	.LVL9:
 479:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 376              		.loc 1 479 3 is_stmt 1 view .LVU117
 479:Src/main.c    **** 	TxHeader.ExtId = 0x01; 					// CAN extended ID
 377              		.loc 1 479 18 is_stmt 0 view .LVU118
 378 0036 164B     		ldr	r3, .L11+8
 379 0038 40F22132 		movw	r2, #801
 380 003c 1A60     		str	r2, [r3]
 480:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 381              		.loc 1 480 2 is_stmt 1 view .LVU119
 480:Src/main.c    **** 	TxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 382              		.loc 1 480 17 is_stmt 0 view .LVU120
 383 003e 5E60     		str	r6, [r3, #4]
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 20


 481:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 384              		.loc 1 481 2 is_stmt 1 view .LVU121
 481:Src/main.c    **** 	TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 385              		.loc 1 481 15 is_stmt 0 view .LVU122
 386 0040 DC60     		str	r4, [r3, #12]
 482:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 387              		.loc 1 482 2 is_stmt 1 view .LVU123
 482:Src/main.c    **** 	TxHeader.DLC = 8; 						// CAN frame length in bytes
 388              		.loc 1 482 15 is_stmt 0 view .LVU124
 389 0042 9C60     		str	r4, [r3, #8]
 483:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 390              		.loc 1 483 2 is_stmt 1 view .LVU125
 483:Src/main.c    **** 	TxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 391              		.loc 1 483 15 is_stmt 0 view .LVU126
 392 0044 0822     		movs	r2, #8
 393 0046 1A61     		str	r2, [r3, #16]
 484:Src/main.c    **** 
 394              		.loc 1 484 2 is_stmt 1 view .LVU127
 484:Src/main.c    **** 
 395              		.loc 1 484 30 is_stmt 0 view .LVU128
 396 0048 1C75     		strb	r4, [r3, #20]
 486:Src/main.c    **** 	ChargerTxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 397              		.loc 1 486 2 is_stmt 1 view .LVU129
 486:Src/main.c    **** 	ChargerTxHeader.RTR = CAN_RTR_DATA; 			// CAN frame type
 398              		.loc 1 486 24 is_stmt 0 view .LVU130
 399 004a 124B     		ldr	r3, .L11+12
 400 004c 1249     		ldr	r1, .L11+16
 401 004e 5960     		str	r1, [r3, #4]
 487:Src/main.c    **** 	ChargerTxHeader.IDE = CAN_ID_EXT; 				// CAN ID type
 402              		.loc 1 487 2 is_stmt 1 view .LVU131
 487:Src/main.c    **** 	ChargerTxHeader.IDE = CAN_ID_EXT; 				// CAN ID type
 403              		.loc 1 487 22 is_stmt 0 view .LVU132
 404 0050 DC60     		str	r4, [r3, #12]
 488:Src/main.c    **** 	ChargerTxHeader.DLC = 8; 						// CAN frame length in bytes
 405              		.loc 1 488 2 is_stmt 1 view .LVU133
 488:Src/main.c    **** 	ChargerTxHeader.DLC = 8; 						// CAN frame length in bytes
 406              		.loc 1 488 22 is_stmt 0 view .LVU134
 407 0052 0421     		movs	r1, #4
 408 0054 9960     		str	r1, [r3, #8]
 489:Src/main.c    **** 	ChargerTxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 409              		.loc 1 489 2 is_stmt 1 view .LVU135
 489:Src/main.c    **** 	ChargerTxHeader.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 410              		.loc 1 489 22 is_stmt 0 view .LVU136
 411 0056 1A61     		str	r2, [r3, #16]
 490:Src/main.c    **** 
 412              		.loc 1 490 2 is_stmt 1 view .LVU137
 490:Src/main.c    **** 
 413              		.loc 1 490 37 is_stmt 0 view .LVU138
 414 0058 1C75     		strb	r4, [r3, #20]
 492:Src/main.c    **** 	sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 415              		.loc 1 492 2 is_stmt 1 view .LVU139
 492:Src/main.c    **** 	sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 416              		.loc 1 492 27 is_stmt 0 view .LVU140
 417 005a 0594     		str	r4, [sp, #20]
 493:Src/main.c    **** 	sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;		
 418              		.loc 1 493 2 is_stmt 1 view .LVU141
 493:Src/main.c    **** 	sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;		
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 21


 419              		.loc 1 493 27 is_stmt 0 view .LVU142
 420 005c 0694     		str	r4, [sp, #24]
 494:Src/main.c    **** 	sFilterConfig.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifie
 421              		.loc 1 494 2 is_stmt 1 view .LVU143
 494:Src/main.c    **** 	sFilterConfig.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifie
 422              		.loc 1 494 28 is_stmt 0 view .LVU144
 423 005e 0796     		str	r6, [sp, #28]
 495:Src/main.c    **** 	sFilterConfig.FilterIdLow = 0x0000;
 424              		.loc 1 495 2 is_stmt 1 view .LVU145
 495:Src/main.c    **** 	sFilterConfig.FilterIdLow = 0x0000;
 425              		.loc 1 495 29 is_stmt 0 view .LVU146
 426 0060 0094     		str	r4, [sp]
 496:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare 
 427              		.loc 1 496 2 is_stmt 1 view .LVU147
 496:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare 
 428              		.loc 1 496 28 is_stmt 0 view .LVU148
 429 0062 0194     		str	r4, [sp, #4]
 497:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow = 0x0000;
 430              		.loc 1 497 2 is_stmt 1 view .LVU149
 497:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow = 0x0000;
 431              		.loc 1 497 33 is_stmt 0 view .LVU150
 432 0064 0294     		str	r4, [sp, #8]
 498:Src/main.c    **** 	sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen int
 433              		.loc 1 498 2 is_stmt 1 view .LVU151
 498:Src/main.c    **** 	sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen int
 434              		.loc 1 498 32 is_stmt 0 view .LVU152
 435 0066 0394     		str	r4, [sp, #12]
 499:Src/main.c    **** 	sFilterConfig.FilterActivation = ENABLE;
 436              		.loc 1 499 2 is_stmt 1 view .LVU153
 499:Src/main.c    **** 	sFilterConfig.FilterActivation = ENABLE;
 437              		.loc 1 499 37 is_stmt 0 view .LVU154
 438 0068 0494     		str	r4, [sp, #16]
 500:Src/main.c    **** 	
 439              		.loc 1 500 2 is_stmt 1 view .LVU155
 500:Src/main.c    **** 	
 440              		.loc 1 500 33 is_stmt 0 view .LVU156
 441 006a 0896     		str	r6, [sp, #32]
 502:Src/main.c    **** 
 442              		.loc 1 502 2 is_stmt 1 view .LVU157
 443 006c 6946     		mov	r1, sp
 444 006e 2846     		mov	r0, r5
 445 0070 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 446              	.LVL10:
 504:Src/main.c    **** 
 447              		.loc 1 504 3 view .LVU158
 448 0074 2846     		mov	r0, r5
 449 0076 FFF7FEFF 		bl	HAL_CAN_Start
 450              	.LVL11:
 506:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 451              		.loc 1 506 3 view .LVU159
 452 007a 0221     		movs	r1, #2
 453 007c 2846     		mov	r0, r5
 454 007e FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 455              	.LVL12:
 509:Src/main.c    **** 
 456              		.loc 1 509 1 is_stmt 0 view .LVU160
 457 0082 0AB0     		add	sp, sp, #40
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 22


 458              	.LCFI8:
 459              		.cfi_def_cfa_offset 16
 460              		@ sp needed
 461 0084 70BD     		pop	{r4, r5, r6, pc}
 462              	.L12:
 463 0086 00BF     		.align	2
 464              	.L11:
 465 0088 00000000 		.word	hcan
 466 008c 00640040 		.word	1073767424
 467 0090 00000000 		.word	TxHeader
 468 0094 00000000 		.word	ChargerTxHeader
 469 0098 F4E50618 		.word	403105268
 470              		.cfi_endproc
 471              	.LFE69:
 473              		.section	.text.MX_TIM2_Init,"ax",%progbits
 474              		.align	1
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 478              		.fpu softvfp
 480              	MX_TIM2_Init:
 481              	.LFB71:
 555:Src/main.c    **** 
 482              		.loc 1 555 1 is_stmt 1 view -0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 24
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486 0000 30B5     		push	{r4, r5, lr}
 487              	.LCFI9:
 488              		.cfi_def_cfa_offset 12
 489              		.cfi_offset 4, -12
 490              		.cfi_offset 5, -8
 491              		.cfi_offset 14, -4
 492 0002 87B0     		sub	sp, sp, #28
 493              	.LCFI10:
 494              		.cfi_def_cfa_offset 40
 561:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 495              		.loc 1 561 3 view .LVU162
 561:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 496              		.loc 1 561 26 is_stmt 0 view .LVU163
 497 0004 0024     		movs	r4, #0
 498 0006 0294     		str	r4, [sp, #8]
 499 0008 0394     		str	r4, [sp, #12]
 500 000a 0494     		str	r4, [sp, #16]
 501 000c 0594     		str	r4, [sp, #20]
 562:Src/main.c    **** 
 502              		.loc 1 562 3 is_stmt 1 view .LVU164
 562:Src/main.c    **** 
 503              		.loc 1 562 27 is_stmt 0 view .LVU165
 504 000e 0094     		str	r4, [sp]
 505 0010 0194     		str	r4, [sp, #4]
 567:Src/main.c    ****   htim2.Init.Prescaler = 8000;
 506              		.loc 1 567 3 is_stmt 1 view .LVU166
 567:Src/main.c    ****   htim2.Init.Prescaler = 8000;
 507              		.loc 1 567 18 is_stmt 0 view .LVU167
 508 0012 114D     		ldr	r5, .L15
 509 0014 4FF08043 		mov	r3, #1073741824
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 23


 510 0018 2B60     		str	r3, [r5]
 568:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 511              		.loc 1 568 3 is_stmt 1 view .LVU168
 568:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 512              		.loc 1 568 24 is_stmt 0 view .LVU169
 513 001a 4FF4FA53 		mov	r3, #8000
 514 001e 6B60     		str	r3, [r5, #4]
 569:Src/main.c    ****   htim2.Init.Period = 65535;
 515              		.loc 1 569 3 is_stmt 1 view .LVU170
 569:Src/main.c    ****   htim2.Init.Period = 65535;
 516              		.loc 1 569 26 is_stmt 0 view .LVU171
 517 0020 AC60     		str	r4, [r5, #8]
 570:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 518              		.loc 1 570 3 is_stmt 1 view .LVU172
 570:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 519              		.loc 1 570 21 is_stmt 0 view .LVU173
 520 0022 4FF6FF73 		movw	r3, #65535
 521 0026 EB60     		str	r3, [r5, #12]
 571:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 522              		.loc 1 571 3 is_stmt 1 view .LVU174
 571:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 523              		.loc 1 571 28 is_stmt 0 view .LVU175
 524 0028 2C61     		str	r4, [r5, #16]
 572:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 525              		.loc 1 572 3 is_stmt 1 view .LVU176
 572:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 526              		.loc 1 572 32 is_stmt 0 view .LVU177
 527 002a AC61     		str	r4, [r5, #24]
 573:Src/main.c    ****   {
 528              		.loc 1 573 3 is_stmt 1 view .LVU178
 573:Src/main.c    ****   {
 529              		.loc 1 573 7 is_stmt 0 view .LVU179
 530 002c 2846     		mov	r0, r5
 531 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 532              	.LVL13:
 577:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 533              		.loc 1 577 3 is_stmt 1 view .LVU180
 577:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 534              		.loc 1 577 34 is_stmt 0 view .LVU181
 535 0032 4FF48053 		mov	r3, #4096
 536 0036 0293     		str	r3, [sp, #8]
 578:Src/main.c    ****   {
 537              		.loc 1 578 3 is_stmt 1 view .LVU182
 578:Src/main.c    ****   {
 538              		.loc 1 578 7 is_stmt 0 view .LVU183
 539 0038 02A9     		add	r1, sp, #8
 540 003a 2846     		mov	r0, r5
 541 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 542              	.LVL14:
 582:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 543              		.loc 1 582 3 is_stmt 1 view .LVU184
 582:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 544              		.loc 1 582 37 is_stmt 0 view .LVU185
 545 0040 0094     		str	r4, [sp]
 583:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 546              		.loc 1 583 3 is_stmt 1 view .LVU186
 583:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 24


 547              		.loc 1 583 33 is_stmt 0 view .LVU187
 548 0042 0194     		str	r4, [sp, #4]
 584:Src/main.c    ****   {
 549              		.loc 1 584 3 is_stmt 1 view .LVU188
 584:Src/main.c    ****   {
 550              		.loc 1 584 7 is_stmt 0 view .LVU189
 551 0044 6946     		mov	r1, sp
 552 0046 2846     		mov	r0, r5
 553 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 554              	.LVL15:
 589:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 555              		.loc 1 589 3 is_stmt 1 view .LVU190
 556 004c 2846     		mov	r0, r5
 557 004e FFF7FEFF 		bl	HAL_TIM_Base_Start
 558              	.LVL16:
 592:Src/main.c    **** 
 559              		.loc 1 592 1 is_stmt 0 view .LVU191
 560 0052 07B0     		add	sp, sp, #28
 561              	.LCFI11:
 562              		.cfi_def_cfa_offset 12
 563              		@ sp needed
 564 0054 30BD     		pop	{r4, r5, pc}
 565              	.L16:
 566 0056 00BF     		.align	2
 567              	.L15:
 568 0058 00000000 		.word	htim2
 569              		.cfi_endproc
 570              	.LFE71:
 572              		.section	.text.SystemClock_Config,"ax",%progbits
 573              		.align	1
 574              		.global	SystemClock_Config
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu softvfp
 580              	SystemClock_Config:
 581              	.LFB67:
 366:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 582              		.loc 1 366 1 is_stmt 1 view -0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 80
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586 0000 30B5     		push	{r4, r5, lr}
 587              	.LCFI12:
 588              		.cfi_def_cfa_offset 12
 589              		.cfi_offset 4, -12
 590              		.cfi_offset 5, -8
 591              		.cfi_offset 14, -4
 592 0002 95B0     		sub	sp, sp, #84
 593              	.LCFI13:
 594              		.cfi_def_cfa_offset 96
 367:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 595              		.loc 1 367 3 view .LVU193
 367:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 596              		.loc 1 367 22 is_stmt 0 view .LVU194
 597 0004 2422     		movs	r2, #36
 598 0006 0021     		movs	r1, #0
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 25


 599 0008 0BA8     		add	r0, sp, #44
 600 000a FFF7FEFF 		bl	memset
 601              	.LVL17:
 368:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 602              		.loc 1 368 3 is_stmt 1 view .LVU195
 368:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 603              		.loc 1 368 22 is_stmt 0 view .LVU196
 604 000e 0024     		movs	r4, #0
 605 0010 0594     		str	r4, [sp, #20]
 606 0012 0694     		str	r4, [sp, #24]
 607 0014 0794     		str	r4, [sp, #28]
 608 0016 0894     		str	r4, [sp, #32]
 609 0018 0994     		str	r4, [sp, #36]
 369:Src/main.c    **** 
 610              		.loc 1 369 3 is_stmt 1 view .LVU197
 369:Src/main.c    **** 
 611              		.loc 1 369 28 is_stmt 0 view .LVU198
 612 001a 0194     		str	r4, [sp, #4]
 613 001c 0294     		str	r4, [sp, #8]
 614 001e 0394     		str	r4, [sp, #12]
 615 0020 0494     		str	r4, [sp, #16]
 373:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 616              		.loc 1 373 3 is_stmt 1 view .LVU199
 373:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 617              		.loc 1 373 36 is_stmt 0 view .LVU200
 618 0022 0225     		movs	r5, #2
 619 0024 0A95     		str	r5, [sp, #40]
 374:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 620              		.loc 1 374 3 is_stmt 1 view .LVU201
 374:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 621              		.loc 1 374 30 is_stmt 0 view .LVU202
 622 0026 0123     		movs	r3, #1
 623 0028 0E93     		str	r3, [sp, #56]
 375:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 624              		.loc 1 375 3 is_stmt 1 view .LVU203
 375:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 625              		.loc 1 375 41 is_stmt 0 view .LVU204
 626 002a 1023     		movs	r3, #16
 627 002c 0F93     		str	r3, [sp, #60]
 376:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 628              		.loc 1 376 3 is_stmt 1 view .LVU205
 377:Src/main.c    ****   {
 629              		.loc 1 377 3 view .LVU206
 377:Src/main.c    ****   {
 630              		.loc 1 377 7 is_stmt 0 view .LVU207
 631 002e 0AA8     		add	r0, sp, #40
 632 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 633              	.LVL18:
 383:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 634              		.loc 1 383 3 is_stmt 1 view .LVU208
 383:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 635              		.loc 1 383 31 is_stmt 0 view .LVU209
 636 0034 0F23     		movs	r3, #15
 637 0036 0593     		str	r3, [sp, #20]
 385:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 638              		.loc 1 385 3 is_stmt 1 view .LVU210
 385:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 26


 639              		.loc 1 385 34 is_stmt 0 view .LVU211
 640 0038 0694     		str	r4, [sp, #24]
 386:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 641              		.loc 1 386 3 is_stmt 1 view .LVU212
 386:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 642              		.loc 1 386 35 is_stmt 0 view .LVU213
 643 003a 0794     		str	r4, [sp, #28]
 387:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 644              		.loc 1 387 3 is_stmt 1 view .LVU214
 387:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 645              		.loc 1 387 36 is_stmt 0 view .LVU215
 646 003c 0894     		str	r4, [sp, #32]
 388:Src/main.c    **** 
 647              		.loc 1 388 3 is_stmt 1 view .LVU216
 388:Src/main.c    **** 
 648              		.loc 1 388 36 is_stmt 0 view .LVU217
 649 003e 0994     		str	r4, [sp, #36]
 390:Src/main.c    ****   {
 650              		.loc 1 390 3 is_stmt 1 view .LVU218
 390:Src/main.c    ****   {
 651              		.loc 1 390 7 is_stmt 0 view .LVU219
 652 0040 2146     		mov	r1, r4
 653 0042 05A8     		add	r0, sp, #20
 654 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 655              	.LVL19:
 394:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 656              		.loc 1 394 3 is_stmt 1 view .LVU220
 394:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 657              		.loc 1 394 38 is_stmt 0 view .LVU221
 658 0048 0195     		str	r5, [sp, #4]
 395:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 659              		.loc 1 395 3 is_stmt 1 view .LVU222
 395:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 660              		.loc 1 395 35 is_stmt 0 view .LVU223
 661 004a 0394     		str	r4, [sp, #12]
 396:Src/main.c    ****   {
 662              		.loc 1 396 3 is_stmt 1 view .LVU224
 396:Src/main.c    ****   {
 663              		.loc 1 396 7 is_stmt 0 view .LVU225
 664 004c 01A8     		add	r0, sp, #4
 665 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 666              	.LVL20:
 400:Src/main.c    **** 
 667              		.loc 1 400 1 view .LVU226
 668 0052 15B0     		add	sp, sp, #84
 669              	.LCFI14:
 670              		.cfi_def_cfa_offset 12
 671              		@ sp needed
 672 0054 30BD     		pop	{r4, r5, pc}
 673              		.cfi_endproc
 674              	.LFE67:
 676              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 677              		.align	1
 678              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 27


 682              		.fpu softvfp
 684              	HAL_CAN_RxFifo0MsgPendingCallback:
 685              	.LVL21:
 686              	.LFB73:
 646:Src/main.c    **** 
 647:Src/main.c    **** /* USER CODE BEGIN 4 */
 648:Src/main.c    **** 
 649:Src/main.c    **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *CanHandle)
 650:Src/main.c    **** {
 687              		.loc 1 650 1 is_stmt 1 view -0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              		.loc 1 650 1 is_stmt 0 view .LVU228
 692 0000 10B5     		push	{r4, lr}
 693              	.LCFI15:
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 4, -8
 696              		.cfi_offset 14, -4
 651:Src/main.c    ****   /* Get RX message */
 652:Src/main.c    ****   HAL_CAN_GetRxMessage(&hcan, CAN_RX_FIFO0, &RxHeader, RxData);
 697              		.loc 1 652 3 is_stmt 1 view .LVU229
 698 0002 134C     		ldr	r4, .L25
 699 0004 134B     		ldr	r3, .L25+4
 700 0006 2246     		mov	r2, r4
 701 0008 0021     		movs	r1, #0
 702 000a 1348     		ldr	r0, .L25+8
 703              	.LVL22:
 704              		.loc 1 652 3 is_stmt 0 view .LVU230
 705 000c FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 706              	.LVL23:
 653:Src/main.c    **** 
 654:Src/main.c    ****   uint16_t ID = RxHeader.StdId;
 707              		.loc 1 654 3 is_stmt 1 view .LVU231
 708              		.loc 1 654 12 is_stmt 0 view .LVU232
 709 0010 2188     		ldrh	r1, [r4]
 710              	.LVL24:
 655:Src/main.c    ****   uint32_t ExtID = RxHeader.ExtId;
 711              		.loc 1 655 3 is_stmt 1 view .LVU233
 712              		.loc 1 655 12 is_stmt 0 view .LVU234
 713 0012 6268     		ldr	r2, [r4, #4]
 714              	.LVL25:
 656:Src/main.c    **** 
 657:Src/main.c    ****   /* TESTING */
 658:Src/main.c    ****   if (ID == 0x123) {
 715              		.loc 1 658 3 is_stmt 1 view .LVU235
 716              		.loc 1 658 6 is_stmt 0 view .LVU236
 717 0014 40F22313 		movw	r3, #291
 718 0018 9942     		cmp	r1, r3
 719 001a 03D0     		beq	.L23
 720              	.LVL26:
 721              	.L20:
 659:Src/main.c    **** 
 660:Src/main.c    ****     //HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 661:Src/main.c    ****     voltageState = RxData[0];
 662:Src/main.c    ****   }
 663:Src/main.c    ****   /* TESTING */
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 28


 664:Src/main.c    **** 
 665:Src/main.c    ****   if (ExtID == CHARGER_ID) {
 722              		.loc 1 665 3 is_stmt 1 view .LVU237
 723              		.loc 1 665 6 is_stmt 0 view .LVU238
 724 001c 0F4B     		ldr	r3, .L25+12
 725 001e 9A42     		cmp	r2, r3
 726 0020 05D0     		beq	.L24
 727              	.LVL27:
 728              	.L19:
 666:Src/main.c    ****     TIM2->CNT = 0; // reset timer
 667:Src/main.c    ****     HAL_TIM_Base_Start(&htim2);
 668:Src/main.c    ****     RxHeader.ExtId = 0;
 669:Src/main.c    ****     //HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 670:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, DEBUG_Pin, GPIO_PIN_SET);
 671:Src/main.c    ****   }
 672:Src/main.c    **** }
 729              		.loc 1 672 1 view .LVU239
 730 0022 10BD     		pop	{r4, pc}
 731              	.LVL28:
 732              	.L23:
 661:Src/main.c    ****   }
 733              		.loc 1 661 5 is_stmt 1 view .LVU240
 661:Src/main.c    ****   }
 734              		.loc 1 661 26 is_stmt 0 view .LVU241
 735 0024 0B4B     		ldr	r3, .L25+4
 736 0026 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 737              	.LVL29:
 661:Src/main.c    ****   }
 738              		.loc 1 661 18 view .LVU242
 739 0028 0D4B     		ldr	r3, .L25+16
 740 002a 1970     		strb	r1, [r3]
 741 002c F6E7     		b	.L20
 742              	.L24:
 666:Src/main.c    ****     TIM2->CNT = 0; // reset timer
 743              		.loc 1 666 5 is_stmt 1 view .LVU243
 666:Src/main.c    ****     TIM2->CNT = 0; // reset timer
 744              		.loc 1 666 15 is_stmt 0 view .LVU244
 745 002e 0024     		movs	r4, #0
 746              	.LVL30:
 666:Src/main.c    ****     TIM2->CNT = 0; // reset timer
 747              		.loc 1 666 15 view .LVU245
 748 0030 4FF08043 		mov	r3, #1073741824
 749 0034 5C62     		str	r4, [r3, #36]
 750              	.LVL31:
 667:Src/main.c    ****     RxHeader.ExtId = 0;
 751              		.loc 1 667 5 is_stmt 1 view .LVU246
 752 0036 0B48     		ldr	r0, .L25+20
 753 0038 FFF7FEFF 		bl	HAL_TIM_Base_Start
 754              	.LVL32:
 668:Src/main.c    ****     //HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 755              		.loc 1 668 5 view .LVU247
 668:Src/main.c    ****     //HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 756              		.loc 1 668 20 is_stmt 0 view .LVU248
 757 003c 044B     		ldr	r3, .L25
 758 003e 5C60     		str	r4, [r3, #4]
 670:Src/main.c    ****   }
 759              		.loc 1 670 5 is_stmt 1 view .LVU249
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 29


 760 0040 0122     		movs	r2, #1
 761 0042 4FF40051 		mov	r1, #8192
 762 0046 0848     		ldr	r0, .L25+24
 763 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 764              	.LVL33:
 765              		.loc 1 672 1 is_stmt 0 view .LVU250
 766 004c E9E7     		b	.L19
 767              	.L26:
 768 004e 00BF     		.align	2
 769              	.L25:
 770 0050 00000000 		.word	RxHeader
 771 0054 00000000 		.word	RxData
 772 0058 00000000 		.word	hcan
 773 005c F4E50618 		.word	403105268
 774 0060 00000000 		.word	.LANCHOR0
 775 0064 00000000 		.word	htim2
 776 0068 00100140 		.word	1073811456
 777              		.cfi_endproc
 778              	.LFE73:
 780              		.section	.text.VOLTAGE_sort,"ax",%progbits
 781              		.align	1
 782              		.global	VOLTAGE_sort
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 786              		.fpu softvfp
 788              	VOLTAGE_sort:
 789              	.LVL34:
 790              	.LFB74:
 673:Src/main.c    **** 
 674:Src/main.c    **** void VOLTAGE_sort(BMSconfigStructTypedef cfg, uint16_t voltage[12][12]) {
 791              		.loc 1 674 73 is_stmt 1 view -0
 792              		.cfi_startproc
 793              		@ args = 92, pretend = 16, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 796              		.loc 1 674 73 is_stmt 0 view .LVU252
 797 0000 84B0     		sub	sp, sp, #16
 798              	.LCFI16:
 799              		.cfi_def_cfa_offset 16
 800 0002 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 801 0006 1698     		ldr	r0, [sp, #88]
 675:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 802              		.loc 1 675 3 is_stmt 1 view .LVU253
 803              	.LBB6:
 804              		.loc 1 675 8 view .LVU254
 805              	.LVL35:
 806              		.loc 1 675 16 is_stmt 0 view .LVU255
 807 0008 0022     		movs	r2, #0
 808              	.LVL36:
 809              	.L28:
 810              		.loc 1 675 30 discriminator 1 view .LVU256
 811 000a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 812              		.loc 1 675 3 discriminator 1 view .LVU257
 813 000e 9342     		cmp	r3, r2
 814 0010 0ED9     		bls	.L31
 676:Src/main.c    ****     voltage[i][4] = voltage[i][6];
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 30


 815              		.loc 1 676 5 is_stmt 1 discriminator 3 view .LVU258
 816              		.loc 1 676 28 is_stmt 0 discriminator 3 view .LVU259
 817 0012 02EB4201 		add	r1, r2, r2, lsl #1
 818 0016 CB00     		lsls	r3, r1, #3
 819 0018 0344     		add	r3, r3, r0
 820              		.loc 1 676 31 discriminator 3 view .LVU260
 821 001a 9989     		ldrh	r1, [r3, #12]
 822              		.loc 1 676 19 discriminator 3 view .LVU261
 823 001c 1981     		strh	r1, [r3, #8]	@ movhi
 677:Src/main.c    ****     voltage[i][5] = voltage[i][7];
 824              		.loc 1 677 5 is_stmt 1 discriminator 3 view .LVU262
 825              		.loc 1 677 31 is_stmt 0 discriminator 3 view .LVU263
 826 001e D989     		ldrh	r1, [r3, #14]
 827              		.loc 1 677 19 discriminator 3 view .LVU264
 828 0020 5981     		strh	r1, [r3, #10]	@ movhi
 678:Src/main.c    ****     voltage[i][6] = voltage[i][8];
 829              		.loc 1 678 5 is_stmt 1 discriminator 3 view .LVU265
 830              		.loc 1 678 31 is_stmt 0 discriminator 3 view .LVU266
 831 0022 198A     		ldrh	r1, [r3, #16]
 832              		.loc 1 678 19 discriminator 3 view .LVU267
 833 0024 9981     		strh	r1, [r3, #12]	@ movhi
 679:Src/main.c    ****     voltage[i][7] = voltage[i][9];
 834              		.loc 1 679 5 is_stmt 1 discriminator 3 view .LVU268
 835              		.loc 1 679 31 is_stmt 0 discriminator 3 view .LVU269
 836 0026 598A     		ldrh	r1, [r3, #18]
 837              		.loc 1 679 19 discriminator 3 view .LVU270
 838 0028 D981     		strh	r1, [r3, #14]	@ movhi
 675:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 839              		.loc 1 675 42 discriminator 3 view .LVU271
 840 002a 0132     		adds	r2, r2, #1
 841              	.LVL37:
 675:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 842              		.loc 1 675 42 discriminator 3 view .LVU272
 843 002c D2B2     		uxtb	r2, r2
 844              	.LVL38:
 675:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 845              		.loc 1 675 42 discriminator 3 view .LVU273
 846 002e ECE7     		b	.L28
 847              	.L31:
 675:Src/main.c    ****     voltage[i][4] = voltage[i][6];
 848              		.loc 1 675 42 discriminator 3 view .LVU274
 849              	.LBE6:
 680:Src/main.c    ****   }
 681:Src/main.c    **** }
 850              		.loc 1 681 1 view .LVU275
 851 0030 04B0     		add	sp, sp, #16
 852              	.LCFI17:
 853              		.cfi_def_cfa_offset 0
 854 0032 7047     		bx	lr
 855              		.cfi_endproc
 856              	.LFE74:
 858              		.section	.text.CONNECTION_sort,"ax",%progbits
 859              		.align	1
 860              		.global	CONNECTION_sort
 861              		.syntax unified
 862              		.thumb
 863              		.thumb_func
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 31


 864              		.fpu softvfp
 866              	CONNECTION_sort:
 867              	.LVL39:
 868              	.LFB75:
 682:Src/main.c    **** 
 683:Src/main.c    **** void CONNECTION_sort(BMSconfigStructTypedef cfg, bool connection[12][12]) {
 869              		.loc 1 683 75 is_stmt 1 view -0
 870              		.cfi_startproc
 871              		@ args = 92, pretend = 16, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              		@ link register save eliminated.
 874              		.loc 1 683 75 is_stmt 0 view .LVU277
 875 0000 84B0     		sub	sp, sp, #16
 876              	.LCFI18:
 877              		.cfi_def_cfa_offset 16
 878 0002 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 879 0006 1698     		ldr	r0, [sp, #88]
 684:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 880              		.loc 1 684 3 is_stmt 1 view .LVU278
 881              	.LBB7:
 882              		.loc 1 684 8 view .LVU279
 883              	.LVL40:
 884              		.loc 1 684 16 is_stmt 0 view .LVU280
 885 0008 0022     		movs	r2, #0
 886              	.LVL41:
 887              	.L33:
 888              		.loc 1 684 30 discriminator 1 view .LVU281
 889 000a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 890              		.loc 1 684 3 discriminator 1 view .LVU282
 891 000e 9342     		cmp	r3, r2
 892 0010 0ED9     		bls	.L36
 685:Src/main.c    ****     connection[i][4] = connection[i][6];
 893              		.loc 1 685 5 is_stmt 1 discriminator 3 view .LVU283
 894              		.loc 1 685 34 is_stmt 0 discriminator 3 view .LVU284
 895 0012 02EB4201 		add	r1, r2, r2, lsl #1
 896 0016 8B00     		lsls	r3, r1, #2
 897 0018 0344     		add	r3, r3, r0
 898              		.loc 1 685 37 discriminator 3 view .LVU285
 899 001a 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 900              		.loc 1 685 22 discriminator 3 view .LVU286
 901 001c 1971     		strb	r1, [r3, #4]
 686:Src/main.c    ****     connection[i][5] = connection[i][7];
 902              		.loc 1 686 5 is_stmt 1 discriminator 3 view .LVU287
 903              		.loc 1 686 37 is_stmt 0 discriminator 3 view .LVU288
 904 001e D979     		ldrb	r1, [r3, #7]	@ zero_extendqisi2
 905              		.loc 1 686 22 discriminator 3 view .LVU289
 906 0020 5971     		strb	r1, [r3, #5]
 687:Src/main.c    ****     connection[i][6] = connection[i][8];
 907              		.loc 1 687 5 is_stmt 1 discriminator 3 view .LVU290
 908              		.loc 1 687 37 is_stmt 0 discriminator 3 view .LVU291
 909 0022 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 910              		.loc 1 687 22 discriminator 3 view .LVU292
 911 0024 9971     		strb	r1, [r3, #6]
 688:Src/main.c    ****     connection[i][7] = connection[i][9];
 912              		.loc 1 688 5 is_stmt 1 discriminator 3 view .LVU293
 913              		.loc 1 688 37 is_stmt 0 discriminator 3 view .LVU294
 914 0026 597A     		ldrb	r1, [r3, #9]	@ zero_extendqisi2
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 32


 915              		.loc 1 688 22 discriminator 3 view .LVU295
 916 0028 D971     		strb	r1, [r3, #7]
 684:Src/main.c    ****     connection[i][4] = connection[i][6];
 917              		.loc 1 684 42 discriminator 3 view .LVU296
 918 002a 0132     		adds	r2, r2, #1
 919              	.LVL42:
 684:Src/main.c    ****     connection[i][4] = connection[i][6];
 920              		.loc 1 684 42 discriminator 3 view .LVU297
 921 002c D2B2     		uxtb	r2, r2
 922              	.LVL43:
 684:Src/main.c    ****     connection[i][4] = connection[i][6];
 923              		.loc 1 684 42 discriminator 3 view .LVU298
 924 002e ECE7     		b	.L33
 925              	.L36:
 684:Src/main.c    ****     connection[i][4] = connection[i][6];
 926              		.loc 1 684 42 discriminator 3 view .LVU299
 927              	.LBE7:
 689:Src/main.c    ****   }
 690:Src/main.c    **** }
 928              		.loc 1 690 1 view .LVU300
 929 0030 04B0     		add	sp, sp, #16
 930              	.LCFI19:
 931              		.cfi_def_cfa_offset 0
 932 0032 7047     		bx	lr
 933              		.cfi_endproc
 934              	.LFE75:
 936              		.section	.text.FAULT_check,"ax",%progbits
 937              		.align	1
 938              		.global	FAULT_check
 939              		.syntax unified
 940              		.thumb
 941              		.thumb_func
 942              		.fpu softvfp
 944              	FAULT_check:
 945              	.LVL44:
 946              	.LFB76:
 691:Src/main.c    **** 
 692:Src/main.c    **** bool FAULT_check(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool tempFault[12][4], b
 947              		.loc 1 692 213 is_stmt 1 view -0
 948              		.cfi_startproc
 949              		@ args = 120, pretend = 16, frame = 8
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951              		.loc 1 692 213 is_stmt 0 view .LVU302
 952 0000 84B0     		sub	sp, sp, #16
 953              	.LCFI20:
 954              		.cfi_def_cfa_offset 16
 955 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 956              	.LCFI21:
 957              		.cfi_def_cfa_offset 52
 958              		.cfi_offset 4, -52
 959              		.cfi_offset 5, -48
 960              		.cfi_offset 6, -44
 961              		.cfi_offset 7, -40
 962              		.cfi_offset 8, -36
 963              		.cfi_offset 9, -32
 964              		.cfi_offset 10, -28
 965              		.cfi_offset 11, -24
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 33


 966              		.cfi_offset 14, -20
 967 0006 83B0     		sub	sp, sp, #12
 968              	.LCFI22:
 969              		.cfi_def_cfa_offset 64
 970 0008 0CAC     		add	r4, sp, #48
 971 000a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 972 000e DDF888B0 		ldr	fp, [sp, #136]
 973 0012 DDF89090 		ldr	r9, [sp, #144]
 974 0016 DDF894A0 		ldr	r10, [sp, #148]
 975 001a 269E     		ldr	r6, [sp, #152]
 976 001c 279F     		ldr	r7, [sp, #156]
 977 001e 9DF8A030 		ldrb	r3, [sp, #160]	@ zero_extendqisi2
 978 0022 0093     		str	r3, [sp]
 979 0024 9DF8A430 		ldrb	r3, [sp, #164]	@ zero_extendqisi2
 980 0028 0193     		str	r3, [sp, #4]
 693:Src/main.c    **** 
 694:Src/main.c    ****   bool BMS_FAULT = false;
 981              		.loc 1 694 3 is_stmt 1 view .LVU303
 982              	.LVL45:
 695:Src/main.c    ****   
 696:Src/main.c    ****   cellNumber[0] = 0; // OV cell number
 983              		.loc 1 696 3 view .LVU304
 984              		.loc 1 696 17 is_stmt 0 view .LVU305
 985 002a 0023     		movs	r3, #0
 986 002c 3370     		strb	r3, [r6]
 697:Src/main.c    ****   cellNumber[1] = 0; // UV cell number
 987              		.loc 1 697 3 is_stmt 1 view .LVU306
 988              		.loc 1 697 17 is_stmt 0 view .LVU307
 989 002e 7370     		strb	r3, [r6, #1]
 698:Src/main.c    ****   cellNumber[2] = 0; // OT cell number
 990              		.loc 1 698 3 is_stmt 1 view .LVU308
 991              		.loc 1 698 17 is_stmt 0 view .LVU309
 992 0030 B370     		strb	r3, [r6, #2]
 699:Src/main.c    ****   cellNumber[3] = 0; // disconnected cell cell number
 993              		.loc 1 699 3 is_stmt 1 view .LVU310
 994              		.loc 1 699 17 is_stmt 0 view .LVU311
 995 0032 F370     		strb	r3, [r6, #3]
 700:Src/main.c    ****   cellNumber[4] = 0; // disconnected temp sensor cell number
 996              		.loc 1 700 3 is_stmt 1 view .LVU312
 997              		.loc 1 700 17 is_stmt 0 view .LVU313
 998 0034 3371     		strb	r3, [r6, #4]
 701:Src/main.c    **** 
 702:Src/main.c    ****   faultType[0] = 0; // disconnected temp sensor fault
 999              		.loc 1 702 3 is_stmt 1 view .LVU314
 1000              		.loc 1 702 16 is_stmt 0 view .LVU315
 1001 0036 3B70     		strb	r3, [r7]
 703:Src/main.c    ****   faultType[1] = 0; // disconnected cell fault
 1002              		.loc 1 703 3 is_stmt 1 view .LVU316
 1003              		.loc 1 703 16 is_stmt 0 view .LVU317
 1004 0038 7B70     		strb	r3, [r7, #1]
 704:Src/main.c    ****   faultType[2] = 0; // OT fault
 1005              		.loc 1 704 3 is_stmt 1 view .LVU318
 1006              		.loc 1 704 16 is_stmt 0 view .LVU319
 1007 003a BB70     		strb	r3, [r7, #2]
 705:Src/main.c    ****   faultType[3] = 0; // UV fault
 1008              		.loc 1 705 3 is_stmt 1 view .LVU320
 1009              		.loc 1 705 16 is_stmt 0 view .LVU321
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 34


 1010 003c FB70     		strb	r3, [r7, #3]
 706:Src/main.c    ****   faultType[4] = 0; // OV fault
 1011              		.loc 1 706 3 is_stmt 1 view .LVU322
 1012              		.loc 1 706 16 is_stmt 0 view .LVU323
 1013 003e 3B71     		strb	r3, [r7, #4]
 707:Src/main.c    ****       
 708:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 1014              		.loc 1 708 3 is_stmt 1 view .LVU324
 1015              	.LBB8:
 1016              		.loc 1 708 8 view .LVU325
 1017              	.LVL46:
 1018              		.loc 1 708 16 is_stmt 0 view .LVU326
 1019 0040 1C46     		mov	r4, r3
 1020 0042 1846     		mov	r0, r3
 1021              		.loc 1 708 3 view .LVU327
 1022 0044 41E0     		b	.L38
 1023              	.LVL47:
 1024              	.L41:
 1025              	.LBB9:
 709:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 1026              		.loc 1 709 51 discriminator 2 view .LVU328
 1027 0046 0133     		adds	r3, r3, #1
 1028              	.LVL48:
 1029              		.loc 1 709 51 discriminator 2 view .LVU329
 1030 0048 DBB2     		uxtb	r3, r3
 1031              	.LVL49:
 1032              	.L43:
 1033              		.loc 1 709 32 discriminator 1 view .LVU330
 1034 004a 9DF85220 		ldrb	r2, [sp, #82]	@ zero_extendqisi2
 1035              		.loc 1 709 5 discriminator 1 view .LVU331
 1036 004e 9A42     		cmp	r2, r3
 1037 0050 39D9     		bls	.L60
 710:Src/main.c    **** 
 711:Src/main.c    ****       // OV Fault
 712:Src/main.c    ****       if (cellVoltage[i][j] > cfg.OV_threshold) {
 1038              		.loc 1 712 7 is_stmt 1 view .LVU332
 1039              		.loc 1 712 22 is_stmt 0 view .LVU333
 1040 0052 2146     		mov	r1, r4
 1041 0054 04EB440C 		add	ip, r4, r4, lsl #1
 1042 0058 4FEACC05 		lsl	r5, ip, #3
 1043 005c 5D44     		add	r5, r5, fp
 1044              		.loc 1 712 25 view .LVU334
 1045 005e 9C46     		mov	ip, r3
 1046 0060 35F81380 		ldrh	r8, [r5, r3, lsl #1]
 1047              		.loc 1 712 34 view .LVU335
 1048 0064 BDF856E0 		ldrh	lr, [sp, #86]
 1049              		.loc 1 712 10 view .LVU336
 1050 0068 F045     		cmp	r8, lr
 1051 006a 0BD9     		bls	.L39
 713:Src/main.c    ****         BMS_FAULT = true;
 1052              		.loc 1 713 9 is_stmt 1 view .LVU337
 1053              	.LVL50:
 714:Src/main.c    ****         faultType[4] = true;
 1054              		.loc 1 714 9 view .LVU338
 1055              		.loc 1 714 22 is_stmt 0 view .LVU339
 1056 006c 0120     		movs	r0, #1
 1057 006e 3871     		strb	r0, [r7, #4]
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 35


 715:Src/main.c    ****         cellNumber[0] = i * cfg.numOfCellsPerIC + j + 1;
 1058              		.loc 1 715 9 is_stmt 1 view .LVU340
 1059              		.loc 1 715 27 is_stmt 0 view .LVU341
 1060 0070 04FB02FE 		mul	lr, r4, r2
 1061 0074 5FFA8EFE 		uxtb	lr, lr
 1062              		.loc 1 715 49 view .LVU342
 1063 0078 9E44     		add	lr, lr, r3
 1064 007a 5FFA8EFE 		uxtb	lr, lr
 1065              		.loc 1 715 53 view .LVU343
 1066 007e 8644     		add	lr, lr, r0
 1067              		.loc 1 715 23 view .LVU344
 1068 0080 86F800E0 		strb	lr, [r6]
 1069              	.LVL51:
 1070              	.L39:
 716:Src/main.c    ****       }
 717:Src/main.c    **** 
 718:Src/main.c    ****       // UV Fault
 719:Src/main.c    ****       if (cellVoltage[i][j] < cfg.UV_threshold) {
 1071              		.loc 1 719 7 is_stmt 1 view .LVU345
 1072              		.loc 1 719 25 is_stmt 0 view .LVU346
 1073 0084 35F81CE0 		ldrh	lr, [r5, ip, lsl #1]
 1074              		.loc 1 719 34 view .LVU347
 1075 0088 BDF85850 		ldrh	r5, [sp, #88]
 1076              		.loc 1 719 10 view .LVU348
 1077 008c AE45     		cmp	lr, r5
 1078 008e 08D2     		bcs	.L40
 720:Src/main.c    ****         BMS_FAULT = true;
 1079              		.loc 1 720 9 is_stmt 1 view .LVU349
 1080              	.LVL52:
 721:Src/main.c    ****         faultType[3] = true;
 1081              		.loc 1 721 9 view .LVU350
 1082              		.loc 1 721 22 is_stmt 0 view .LVU351
 1083 0090 0120     		movs	r0, #1
 1084 0092 F870     		strb	r0, [r7, #3]
 722:Src/main.c    ****         cellNumber[1] = i * cfg.numOfCellsPerIC + j + 1;
 1085              		.loc 1 722 9 is_stmt 1 view .LVU352
 1086              		.loc 1 722 27 is_stmt 0 view .LVU353
 1087 0094 04FB02F5 		mul	r5, r4, r2
 1088 0098 EDB2     		uxtb	r5, r5
 1089              		.loc 1 722 49 view .LVU354
 1090 009a 1D44     		add	r5, r5, r3
 1091 009c EDB2     		uxtb	r5, r5
 1092              		.loc 1 722 53 view .LVU355
 1093 009e 0544     		add	r5, r5, r0
 1094              		.loc 1 722 23 view .LVU356
 1095 00a0 7570     		strb	r5, [r6, #1]
 1096              	.LVL53:
 1097              	.L40:
 723:Src/main.c    ****       }
 724:Src/main.c    **** 
 725:Src/main.c    ****       // Disconnected Cell Fault
 726:Src/main.c    ****       if (cellConnection[i][j] == 0) {
 1098              		.loc 1 726 7 is_stmt 1 view .LVU357
 1099              		.loc 1 726 25 is_stmt 0 view .LVU358
 1100 00a2 01EB4101 		add	r1, r1, r1, lsl #1
 1101 00a6 8D00     		lsls	r5, r1, #2
 1102 00a8 5544     		add	r5, r5, r10
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 36


 1103              		.loc 1 726 28 view .LVU359
 1104 00aa 15F80C10 		ldrb	r1, [r5, ip]	@ zero_extendqisi2
 1105              		.loc 1 726 10 view .LVU360
 1106 00ae 0029     		cmp	r1, #0
 1107 00b0 C9D1     		bne	.L41
 727:Src/main.c    ****         BMS_FAULT = true;
 1108              		.loc 1 727 9 is_stmt 1 view .LVU361
 1109              	.LVL54:
 728:Src/main.c    ****         faultType[1] = true;
 1110              		.loc 1 728 9 view .LVU362
 1111              		.loc 1 728 22 is_stmt 0 view .LVU363
 1112 00b2 0120     		movs	r0, #1
 1113 00b4 7870     		strb	r0, [r7, #1]
 729:Src/main.c    ****         cellNumber[3] = i * cfg.numOfCellsPerIC + j + 1;
 1114              		.loc 1 729 9 is_stmt 1 view .LVU364
 1115              		.loc 1 729 27 is_stmt 0 view .LVU365
 1116 00b6 04FB02F2 		mul	r2, r4, r2
 1117 00ba D2B2     		uxtb	r2, r2
 1118              		.loc 1 729 49 view .LVU366
 1119 00bc 1A44     		add	r2, r2, r3
 1120 00be D2B2     		uxtb	r2, r2
 1121              		.loc 1 729 53 view .LVU367
 1122 00c0 0244     		add	r2, r2, r0
 1123              		.loc 1 729 23 view .LVU368
 1124 00c2 F270     		strb	r2, [r6, #3]
 1125 00c4 BFE7     		b	.L41
 1126              	.LVL55:
 1127              	.L60:
 1128              		.loc 1 729 23 view .LVU369
 1129              	.LBE9:
 708:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 1130              		.loc 1 708 42 discriminator 2 view .LVU370
 1131 00c6 0134     		adds	r4, r4, #1
 1132              	.LVL56:
 708:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 1133              		.loc 1 708 42 discriminator 2 view .LVU371
 1134 00c8 E4B2     		uxtb	r4, r4
 1135              	.LVL57:
 1136              	.L38:
 708:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 1137              		.loc 1 708 30 discriminator 1 view .LVU372
 1138 00ca 9DF83010 		ldrb	r1, [sp, #48]	@ zero_extendqisi2
 708:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 1139              		.loc 1 708 3 discriminator 1 view .LVU373
 1140 00ce A142     		cmp	r1, r4
 1141 00d0 01D9     		bls	.L61
 1142              	.LBB10:
 709:Src/main.c    **** 
 1143              		.loc 1 709 18 view .LVU374
 1144 00d2 0023     		movs	r3, #0
 1145 00d4 B9E7     		b	.L43
 1146              	.L61:
 1147 00d6 8646     		mov	lr, r0
 1148 00d8 DDF88C80 		ldr	r8, [sp, #140]
 1149              	.LBE10:
 1150              	.LBE8:
 1151              	.LBB11:
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 37


 730:Src/main.c    ****       }
 731:Src/main.c    ****     }
 732:Src/main.c    ****   }
 733:Src/main.c    **** 
 734:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
 1152              		.loc 1 734 16 view .LVU375
 1153 00dc 0020     		movs	r0, #0
 1154              	.LVL58:
 1155              		.loc 1 734 16 view .LVU376
 1156 00de 2DE0     		b	.L44
 1157              	.LVL59:
 1158              	.L46:
 1159              	.LBB12:
 735:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 1160              		.loc 1 735 50 discriminator 2 view .LVU377
 1161 00e0 0133     		adds	r3, r3, #1
 1162              	.LVL60:
 1163              		.loc 1 735 50 discriminator 2 view .LVU378
 1164 00e2 DBB2     		uxtb	r3, r3
 1165              	.LVL61:
 1166              	.L48:
 1167              		.loc 1 735 32 discriminator 1 view .LVU379
 1168 00e4 9DF85320 		ldrb	r2, [sp, #83]	@ zero_extendqisi2
 1169              		.loc 1 735 5 discriminator 1 view .LVU380
 1170 00e8 9A42     		cmp	r2, r3
 1171 00ea 25D9     		bls	.L62
 736:Src/main.c    **** 
 737:Src/main.c    ****       // OT Fault
 738:Src/main.c    ****       if (tempFault[i][j] == 1) {
 1172              		.loc 1 738 7 is_stmt 1 view .LVU381
 1173              		.loc 1 738 20 is_stmt 0 view .LVU382
 1174 00ec 8400     		lsls	r4, r0, #2
 1175 00ee 08EB0402 		add	r2, r8, r4
 1176              		.loc 1 738 23 view .LVU383
 1177 00f2 9C46     		mov	ip, r3
 1178 00f4 D55C     		ldrb	r5, [r2, r3]	@ zero_extendqisi2
 1179              		.loc 1 738 10 view .LVU384
 1180 00f6 65B1     		cbz	r5, .L45
 739:Src/main.c    ****         BMS_FAULT = true;
 1181              		.loc 1 739 9 is_stmt 1 view .LVU385
 1182              	.LVL62:
 740:Src/main.c    ****         faultType[2] = true;
 1183              		.loc 1 740 9 view .LVU386
 1184              		.loc 1 740 22 is_stmt 0 view .LVU387
 1185 00f8 0122     		movs	r2, #1
 1186 00fa BA70     		strb	r2, [r7, #2]
 741:Src/main.c    ****         cellNumber[2] = i * cfg.numOfCellsPerIC + j*2 + 1;
 1187              		.loc 1 741 9 is_stmt 1 view .LVU388
 1188              		.loc 1 741 32 is_stmt 0 view .LVU389
 1189 00fc 9DF85220 		ldrb	r2, [sp, #82]	@ zero_extendqisi2
 1190              		.loc 1 741 27 view .LVU390
 1191 0100 00FB02F2 		mul	r2, r0, r2
 1192 0104 D2B2     		uxtb	r2, r2
 1193              		.loc 1 741 49 view .LVU391
 1194 0106 02EB4302 		add	r2, r2, r3, lsl #1
 1195 010a D2B2     		uxtb	r2, r2
 1196              		.loc 1 741 55 view .LVU392
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 38


 1197 010c 0132     		adds	r2, r2, #1
 1198              		.loc 1 741 23 view .LVU393
 1199 010e B270     		strb	r2, [r6, #2]
 739:Src/main.c    ****         BMS_FAULT = true;
 1200              		.loc 1 739 19 view .LVU394
 1201 0110 AE46     		mov	lr, r5
 1202              	.LVL63:
 1203              	.L45:
 742:Src/main.c    ****       }
 743:Src/main.c    **** 
 744:Src/main.c    ****       // Disconnected Temp Sensor Fault
 745:Src/main.c    ****       if (dcFault[i][j] == 1) {
 1204              		.loc 1 745 7 is_stmt 1 view .LVU395
 1205              		.loc 1 745 18 is_stmt 0 view .LVU396
 1206 0112 4C44     		add	r4, r4, r9
 1207              		.loc 1 745 21 view .LVU397
 1208 0114 14F80C40 		ldrb	r4, [r4, ip]	@ zero_extendqisi2
 1209              		.loc 1 745 10 view .LVU398
 1210 0118 002C     		cmp	r4, #0
 1211 011a E1D0     		beq	.L46
 746:Src/main.c    ****         BMS_FAULT = true;
 1212              		.loc 1 746 9 is_stmt 1 view .LVU399
 1213              	.LVL64:
 747:Src/main.c    ****         faultType[0] = true;
 1214              		.loc 1 747 9 view .LVU400
 1215              		.loc 1 747 22 is_stmt 0 view .LVU401
 1216 011c 0122     		movs	r2, #1
 1217 011e 3A70     		strb	r2, [r7]
 748:Src/main.c    ****         cellNumber[4] = i * cfg.numOfCellsPerIC + j*2 + 1;
 1218              		.loc 1 748 9 is_stmt 1 view .LVU402
 1219              		.loc 1 748 32 is_stmt 0 view .LVU403
 1220 0120 9DF85220 		ldrb	r2, [sp, #82]	@ zero_extendqisi2
 1221              		.loc 1 748 27 view .LVU404
 1222 0124 00FB02F2 		mul	r2, r0, r2
 1223 0128 D2B2     		uxtb	r2, r2
 1224              		.loc 1 748 49 view .LVU405
 1225 012a 02EB4302 		add	r2, r2, r3, lsl #1
 1226 012e D2B2     		uxtb	r2, r2
 1227              		.loc 1 748 55 view .LVU406
 1228 0130 0132     		adds	r2, r2, #1
 1229              		.loc 1 748 23 view .LVU407
 1230 0132 3271     		strb	r2, [r6, #4]
 746:Src/main.c    ****         BMS_FAULT = true;
 1231              		.loc 1 746 19 view .LVU408
 1232 0134 A646     		mov	lr, r4
 1233 0136 D3E7     		b	.L46
 1234              	.LVL65:
 1235              	.L62:
 746:Src/main.c    ****         BMS_FAULT = true;
 1236              		.loc 1 746 19 view .LVU409
 1237              	.LBE12:
 734:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 1238              		.loc 1 734 42 discriminator 2 view .LVU410
 1239 0138 0130     		adds	r0, r0, #1
 1240              	.LVL66:
 734:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 1241              		.loc 1 734 42 discriminator 2 view .LVU411
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 39


 1242 013a C0B2     		uxtb	r0, r0
 1243              	.LVL67:
 1244              	.L44:
 734:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfTempPerIC; j++) {
 1245              		.loc 1 734 3 discriminator 1 view .LVU412
 1246 013c 8142     		cmp	r1, r0
 1247 013e 01D9     		bls	.L63
 1248              	.LBB13:
 735:Src/main.c    **** 
 1249              		.loc 1 735 18 view .LVU413
 1250 0140 0023     		movs	r3, #0
 1251 0142 CFE7     		b	.L48
 1252              	.L63:
 1253 0144 7446     		mov	r4, lr
 1254              	.LBE13:
 1255              	.LBE11:
 749:Src/main.c    ****       }
 750:Src/main.c    ****     }
 751:Src/main.c    ****   }
 752:Src/main.c    **** 
 753:Src/main.c    ****   // Invalid PEC Fault
 754:Src/main.c    ****   if ((vPEC == false) || (tPEC == false))
 1256              		.loc 1 754 3 is_stmt 1 view .LVU414
 1257              		.loc 1 754 6 is_stmt 0 view .LVU415
 1258 0146 009B     		ldr	r3, [sp]
 1259 0148 0BB1     		cbz	r3, .L49
 1260              		.loc 1 754 23 discriminator 1 view .LVU416
 1261 014a 019B     		ldr	r3, [sp, #4]
 1262 014c DBB9     		cbnz	r3, .L50
 1263              	.L49:
 755:Src/main.c    ****     PEC_counter++;
 1264              		.loc 1 755 5 is_stmt 1 view .LVU417
 1265              		.loc 1 755 16 is_stmt 0 view .LVU418
 1266 014e 1B4A     		ldr	r2, .L67
 1267 0150 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1268 0152 0133     		adds	r3, r3, #1
 1269 0154 1370     		strb	r3, [r2]
 1270              	.L51:
 756:Src/main.c    ****   else
 757:Src/main.c    ****     PEC_counter = 0;
 758:Src/main.c    ****   
 759:Src/main.c    ****   if (PEC_counter >= cfg.invalidPECcount)
 1271              		.loc 1 759 3 is_stmt 1 view .LVU419
 1272              		.loc 1 759 25 is_stmt 0 view .LVU420
 1273 0156 9DF86220 		ldrb	r2, [sp, #98]	@ zero_extendqisi2
 1274              		.loc 1 759 19 view .LVU421
 1275 015a 184B     		ldr	r3, .L67
 1276 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1277              		.loc 1 759 6 view .LVU422
 1278 015e 9A42     		cmp	r2, r3
 1279 0160 01D8     		bhi	.L52
 760:Src/main.c    ****     BMS_FAULT = true;
 1280              		.loc 1 760 15 view .LVU423
 1281 0162 0123     		movs	r3, #1
 1282 0164 1C46     		mov	r4, r3
 1283              	.L52:
 1284              	.LVL68:
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 40


 761:Src/main.c    **** 
 762:Src/main.c    ****   // Charger Comm Fault
 763:Src/main.c    ****   uint16_t count = TIM2->CNT;
 1285              		.loc 1 763 3 is_stmt 1 view .LVU424
 1286              		.loc 1 763 24 is_stmt 0 view .LVU425
 1287 0166 4FF08043 		mov	r3, #1073741824
 1288 016a 5B6A     		ldr	r3, [r3, #36]
 1289              		.loc 1 763 12 view .LVU426
 1290 016c 9BB2     		uxth	r3, r3
 1291              	.LVL69:
 764:Src/main.c    **** 
 765:Src/main.c    ****   if (count > 20000) {
 1292              		.loc 1 765 3 is_stmt 1 view .LVU427
 1293              		.loc 1 765 6 is_stmt 0 view .LVU428
 1294 016e 44F62062 		movw	r2, #20000
 1295 0172 9342     		cmp	r3, r2
 1296 0174 0BD8     		bhi	.L64
 1297              	.LVL70:
 1298              	.L53:
 766:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, DEBUG_Pin);
 767:Src/main.c    ****     HAL_TIM_Base_Stop(&htim2);
 768:Src/main.c    ****   }
 769:Src/main.c    **** 
 770:Src/main.c    ****   if (BMS_FAULT == false)
 1299              		.loc 1 770 3 is_stmt 1 view .LVU429
 1300              		.loc 1 770 6 is_stmt 0 view .LVU430
 1301 0176 9CB1     		cbz	r4, .L65
 1302              	.L54:
 771:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_RESET);
 772:Src/main.c    ****   if (BMS_FAULT == true)
 1303              		.loc 1 772 3 is_stmt 1 view .LVU431
 1304              		.loc 1 772 6 is_stmt 0 view .LVU432
 1305 0178 CCB9     		cbnz	r4, .L66
 1306              	.L55:
 773:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, BMS_FLT_Pin, GPIO_PIN_SET);
 774:Src/main.c    **** 
 775:Src/main.c    ****   return BMS_FAULT;
 1307              		.loc 1 775 3 is_stmt 1 view .LVU433
 776:Src/main.c    **** }
 1308              		.loc 1 776 1 is_stmt 0 view .LVU434
 1309 017a 2046     		mov	r0, r4
 1310 017c 03B0     		add	sp, sp, #12
 1311              	.LCFI23:
 1312              		.cfi_remember_state
 1313              		.cfi_def_cfa_offset 52
 1314              		@ sp needed
 1315 017e BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1316              	.LCFI24:
 1317              		.cfi_restore 14
 1318              		.cfi_restore 11
 1319              		.cfi_restore 10
 1320              		.cfi_restore 9
 1321              		.cfi_restore 8
 1322              		.cfi_restore 7
 1323              		.cfi_restore 6
 1324              		.cfi_restore 5
 1325              		.cfi_restore 4
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 41


 1326              		.cfi_def_cfa_offset 16
 1327              	.LVL71:
 1328              		.loc 1 776 1 view .LVU435
 1329 0182 04B0     		add	sp, sp, #16
 1330              	.LCFI25:
 1331              		.cfi_def_cfa_offset 0
 1332 0184 7047     		bx	lr
 1333              	.LVL72:
 1334              	.L50:
 1335              	.LCFI26:
 1336              		.cfi_restore_state
 757:Src/main.c    ****   
 1337              		.loc 1 757 5 is_stmt 1 view .LVU436
 757:Src/main.c    ****   
 1338              		.loc 1 757 17 is_stmt 0 view .LVU437
 1339 0186 0D4B     		ldr	r3, .L67
 1340 0188 0022     		movs	r2, #0
 1341 018a 1A70     		strb	r2, [r3]
 1342 018c E3E7     		b	.L51
 1343              	.LVL73:
 1344              	.L64:
 766:Src/main.c    ****     HAL_TIM_Base_Stop(&htim2);
 1345              		.loc 1 766 5 is_stmt 1 view .LVU438
 1346 018e 4FF40051 		mov	r1, #8192
 1347 0192 0B48     		ldr	r0, .L67+4
 1348              	.LVL74:
 766:Src/main.c    ****     HAL_TIM_Base_Stop(&htim2);
 1349              		.loc 1 766 5 is_stmt 0 view .LVU439
 1350 0194 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1351              	.LVL75:
 767:Src/main.c    ****   }
 1352              		.loc 1 767 5 is_stmt 1 view .LVU440
 1353 0198 0A48     		ldr	r0, .L67+8
 1354 019a FFF7FEFF 		bl	HAL_TIM_Base_Stop
 1355              	.LVL76:
 1356 019e EAE7     		b	.L53
 1357              	.L65:
 771:Src/main.c    ****   if (BMS_FAULT == true)
 1358              		.loc 1 771 5 view .LVU441
 1359 01a0 0022     		movs	r2, #0
 1360 01a2 4FF40071 		mov	r1, #512
 1361 01a6 0848     		ldr	r0, .L67+12
 1362 01a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1363              	.LVL77:
 1364 01ac E4E7     		b	.L54
 1365              	.L66:
 773:Src/main.c    **** 
 1366              		.loc 1 773 5 view .LVU442
 1367 01ae 0122     		movs	r2, #1
 1368 01b0 4FF40071 		mov	r1, #512
 1369 01b4 0448     		ldr	r0, .L67+12
 1370 01b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1371              	.LVL78:
 1372 01ba DEE7     		b	.L55
 1373              	.L68:
 1374              		.align	2
 1375              	.L67:
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 42


 1376 01bc 00000000 		.word	.LANCHOR1
 1377 01c0 00100140 		.word	1073811456
 1378 01c4 00000000 		.word	htim2
 1379 01c8 000C0140 		.word	1073810432
 1380              		.cfi_endproc
 1381              	.LFE76:
 1383              		.global	__aeabi_i2f
 1384              		.global	__aeabi_fdiv
 1385              		.global	__aeabi_f2uiz
 1386              		.section	.text.balancingThreshold,"ax",%progbits
 1387              		.align	1
 1388              		.global	balancingThreshold
 1389              		.syntax unified
 1390              		.thumb
 1391              		.thumb_func
 1392              		.fpu softvfp
 1394              	balancingThreshold:
 1395              	.LFB78:
 777:Src/main.c    **** 
 778:Src/main.c    **** void setDischarge(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], bool cellDischarge[12][
 779:Src/main.c    **** 
 780:Src/main.c    ****   uint16_t threshold;
 781:Src/main.c    **** 	chargeRate = 2; // initialize the charging current to normal operation
 782:Src/main.c    **** 
 783:Src/main.c    ****   // if any BMS fault(change this), set charge current to 0
 784:Src/main.c    ****   if (bmsFault == 1)
 785:Src/main.c    ****     chargeRate = 0;
 786:Src/main.c    **** 	
 787:Src/main.c    **** 	for (int board = 0; board < cfg.numOfICs; board++) {
 788:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 789:Src/main.c    **** 
 790:Src/main.c    ****       // if any cell voltage is much greater than the minimum (>200mV), stop charging and discharge
 791:Src/main.c    ****       if (cellVoltage[board][cell] > (minimum + cfg.max_difference)) {
 792:Src/main.c    ****         chargeRate = 0;
 793:Src/main.c    ****         fullDischarge[board][cell] = 1;
 794:Src/main.c    ****       }
 795:Src/main.c    **** 
 796:Src/main.c    ****       // if any cell voltage is greater than some absolute threshold (4.18V), stop charging and dis
 797:Src/main.c    ****       // could discharge to a fixed value (4.15V) instead
 798:Src/main.c    ****       if (cellVoltage[board][cell] > cfg.stopCharge_threshold) {
 799:Src/main.c    ****         chargeRate = 0;
 800:Src/main.c    ****         fullDischarge[board][cell] = 1;
 801:Src/main.c    ****       }
 802:Src/main.c    **** 
 803:Src/main.c    ****       // if still charging AND cells above ~3V (add this)
 804:Src/main.c    ****       if (chargeRate != 0) {
 805:Src/main.c    **** 
 806:Src/main.c    ****         // if any cell is above some absolute threshold, charge slower 
 807:Src/main.c    ****         if (cellVoltage[board][cell] > cfg.slowCharge_threshold)
 808:Src/main.c    ****           chargeRate = 1;
 809:Src/main.c    **** 
 810:Src/main.c    ****         // determine the relative balancing threshold based on minimum voltage
 811:Src/main.c    ****         threshold = balancingThreshold(cfg);
 812:Src/main.c    **** 
 813:Src/main.c    ****         if (cellVoltage[board][cell] > (minimum + threshold))
 814:Src/main.c    ****           cellDischarge[board][cell] = 1;
 815:Src/main.c    ****         else
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 43


 816:Src/main.c    ****           cellDischarge[board][cell] = 0;
 817:Src/main.c    ****       }
 818:Src/main.c    ****     }
 819:Src/main.c    **** 	}
 820:Src/main.c    **** }
 821:Src/main.c    **** 
 822:Src/main.c    **** uint16_t balancingThreshold(BMSconfigStructTypedef cfg) {
 1396              		.loc 1 822 57 view -0
 1397              		.cfi_startproc
 1398              		@ args = 88, pretend = 16, frame = 0
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400 0000 84B0     		sub	sp, sp, #16
 1401              	.LCFI27:
 1402              		.cfi_def_cfa_offset 16
 1403 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1404              	.LCFI28:
 1405              		.cfi_def_cfa_offset 40
 1406              		.cfi_offset 3, -40
 1407              		.cfi_offset 4, -36
 1408              		.cfi_offset 5, -32
 1409              		.cfi_offset 6, -28
 1410              		.cfi_offset 7, -24
 1411              		.cfi_offset 14, -20
 1412 0004 06AC     		add	r4, sp, #24
 1413 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 823:Src/main.c    **** 
 824:Src/main.c    ****   if (minimum > cfg.start_scaling) {
 1414              		.loc 1 824 3 view .LVU444
 1415              		.loc 1 824 20 is_stmt 0 view .LVU445
 1416 000a BDF84E60 		ldrh	r6, [sp, #78]
 1417              		.loc 1 824 15 view .LVU446
 1418 000e 124B     		ldr	r3, .L73
 1419 0010 1C88     		ldrh	r4, [r3]
 1420              		.loc 1 824 6 view .LVU447
 1421 0012 A642     		cmp	r6, r4
 1422 0014 1DD2     		bcs	.L70
 1423              	.LBB14:
 825:Src/main.c    ****     // min1 = 4.1V   threshold1 = 50mV
 826:Src/main.c    ****     // min2 = 4.16V  threshold2 = 10mV
 827:Src/main.c    **** 
 828:Src/main.c    ****     // m = (threshold2 - threshold1) / (min2 - min1)
 829:Src/main.c    ****     // linear = m * (minimum - min1) + threshold1
 830:Src/main.c    **** 
 831:Src/main.c    ****     float m;
 1424              		.loc 1 831 5 is_stmt 1 view .LVU448
 832:Src/main.c    ****     uint16_t linear;
 1425              		.loc 1 832 5 view .LVU449
 833:Src/main.c    **** 
 834:Src/main.c    ****     //  ()
 835:Src/main.c    ****     m = ((float) (cfg.scale_to - cfg.balancing_difference)) / (cfg.stop_scaling - cfg.start_scaling
 1426              		.loc 1 835 5 view .LVU450
 1427              		.loc 1 835 22 is_stmt 0 view .LVU451
 1428 0016 BDF85200 		ldrh	r0, [sp, #82]
 1429              		.loc 1 835 37 view .LVU452
 1430 001a BDF84850 		ldrh	r5, [sp, #72]
 1431              		.loc 1 835 10 view .LVU453
 1432 001e 401B     		subs	r0, r0, r5
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 44


 1433 0020 FFF7FEFF 		bl	__aeabi_i2f
 1434              	.LVL79:
 1435 0024 0746     		mov	r7, r0
 1436              		.loc 1 835 67 view .LVU454
 1437 0026 BDF85000 		ldrh	r0, [sp, #80]
 1438              		.loc 1 835 61 view .LVU455
 1439 002a 801B     		subs	r0, r0, r6
 1440 002c FFF7FEFF 		bl	__aeabi_i2f
 1441              	.LVL80:
 1442              		.loc 1 835 7 view .LVU456
 1443 0030 0146     		mov	r1, r0
 1444 0032 3846     		mov	r0, r7
 1445 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1446              	.LVL81:
 836:Src/main.c    ****     linear = (uint16_t) m * (minimum - cfg.start_scaling) + cfg.balancing_difference;
 1447              		.loc 1 836 5 is_stmt 1 view .LVU457
 1448              		.loc 1 836 14 is_stmt 0 view .LVU458
 1449 0038 FFF7FEFF 		bl	__aeabi_f2uiz
 1450              	.LVL82:
 1451              		.loc 1 836 14 view .LVU459
 1452 003c 80B2     		uxth	r0, r0
 1453              		.loc 1 836 59 view .LVU460
 1454 003e A41B     		subs	r4, r4, r6
 1455 0040 04FB00F4 		mul	r4, r4, r0
 1456 0044 A4B2     		uxth	r4, r4
 1457              		.loc 1 836 12 view .LVU461
 1458 0046 2C44     		add	r4, r4, r5
 1459 0048 A0B2     		uxth	r0, r4
 1460              	.LVL83:
 837:Src/main.c    **** 
 838:Src/main.c    ****     return linear;
 1461              		.loc 1 838 5 is_stmt 1 view .LVU462
 1462              	.L71:
 1463              		.loc 1 838 5 is_stmt 0 view .LVU463
 1464              	.LBE14:
 839:Src/main.c    **** 
 840:Src/main.c    ****   }
 841:Src/main.c    ****   if (minimum <= cfg.start_scaling)
 842:Src/main.c    ****     return cfg.balancing_difference; 
 843:Src/main.c    **** 
 844:Src/main.c    ****   return 0;
 845:Src/main.c    **** 
 846:Src/main.c    **** }
 1465              		.loc 1 846 1 view .LVU464
 1466 004a BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1467              	.LCFI29:
 1468              		.cfi_remember_state
 1469              		.cfi_restore 14
 1470              		.cfi_restore 7
 1471              		.cfi_restore 6
 1472              		.cfi_restore 5
 1473              		.cfi_restore 4
 1474              		.cfi_restore 3
 1475              		.cfi_def_cfa_offset 16
 1476 004e 04B0     		add	sp, sp, #16
 1477              	.LCFI30:
 1478              		.cfi_def_cfa_offset 0
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 45


 1479 0050 7047     		bx	lr
 1480              	.L70:
 1481              	.LCFI31:
 1482              		.cfi_restore_state
 841:Src/main.c    ****     return cfg.balancing_difference; 
 1483              		.loc 1 841 3 is_stmt 1 view .LVU465
 842:Src/main.c    **** 
 1484              		.loc 1 842 5 view .LVU466
 842:Src/main.c    **** 
 1485              		.loc 1 842 15 is_stmt 0 view .LVU467
 1486 0052 BDF84800 		ldrh	r0, [sp, #72]
 1487 0056 F8E7     		b	.L71
 1488              	.L74:
 1489              		.align	2
 1490              	.L73:
 1491 0058 00000000 		.word	minimum
 1492              		.cfi_endproc
 1493              	.LFE78:
 1495              		.section	.text.setDischarge,"ax",%progbits
 1496              		.align	1
 1497              		.global	setDischarge
 1498              		.syntax unified
 1499              		.thumb
 1500              		.thumb_func
 1501              		.fpu softvfp
 1503              	setDischarge:
 1504              	.LVL84:
 1505              	.LFB77:
 778:Src/main.c    **** 
 1506              		.loc 1 778 146 is_stmt 1 view -0
 1507              		.cfi_startproc
 1508              		@ args = 104, pretend = 16, frame = 0
 1509              		@ frame_needed = 0, uses_anonymous_args = 0
 778:Src/main.c    **** 
 1510              		.loc 1 778 146 is_stmt 0 view .LVU469
 1511 0000 84B0     		sub	sp, sp, #16
 1512              	.LCFI32:
 1513              		.cfi_def_cfa_offset 16
 1514 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1515              	.LCFI33:
 1516              		.cfi_def_cfa_offset 48
 1517              		.cfi_offset 4, -48
 1518              		.cfi_offset 5, -44
 1519              		.cfi_offset 6, -40
 1520              		.cfi_offset 7, -36
 1521              		.cfi_offset 8, -32
 1522              		.cfi_offset 9, -28
 1523              		.cfi_offset 10, -24
 1524              		.cfi_offset 14, -20
 1525 0006 92B0     		sub	sp, sp, #72
 1526              	.LCFI34:
 1527              		.cfi_def_cfa_offset 120
 1528 0008 1AAC     		add	r4, sp, #104
 1529 000a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1530 000e DDF8C080 		ldr	r8, [sp, #192]
 1531 0012 DDF8C4A0 		ldr	r10, [sp, #196]
 1532 0016 9DF8C830 		ldrb	r3, [sp, #200]	@ zero_extendqisi2
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 46


 1533 001a DDF8CC90 		ldr	r9, [sp, #204]
 780:Src/main.c    **** 	chargeRate = 2; // initialize the charging current to normal operation
 1534              		.loc 1 780 3 is_stmt 1 view .LVU470
 781:Src/main.c    **** 
 1535              		.loc 1 781 2 view .LVU471
 781:Src/main.c    **** 
 1536              		.loc 1 781 13 is_stmt 0 view .LVU472
 1537 001e 314A     		ldr	r2, .L89
 1538 0020 0221     		movs	r1, #2
 1539 0022 1170     		strb	r1, [r2]
 784:Src/main.c    ****     chargeRate = 0;
 1540              		.loc 1 784 3 is_stmt 1 view .LVU473
 784:Src/main.c    ****     chargeRate = 0;
 1541              		.loc 1 784 6 is_stmt 0 view .LVU474
 1542 0024 13B1     		cbz	r3, .L76
 785:Src/main.c    **** 	
 1543              		.loc 1 785 5 is_stmt 1 view .LVU475
 785:Src/main.c    **** 	
 1544              		.loc 1 785 16 is_stmt 0 view .LVU476
 1545 0026 1346     		mov	r3, r2
 1546 0028 0022     		movs	r2, #0
 1547 002a 1A70     		strb	r2, [r3]
 1548              	.L76:
 1549              	.LBB15:
 1550              	.LBB16:
 788:Src/main.c    **** 
 1551              		.loc 1 788 12 discriminator 1 view .LVU477
 1552 002c 0026     		movs	r6, #0
 1553 002e 4DE0     		b	.L77
 1554              	.LVL85:
 1555              	.L82:
 816:Src/main.c    ****       }
 1556              		.loc 1 816 11 is_stmt 1 view .LVU478
 816:Src/main.c    ****       }
 1557              		.loc 1 816 24 is_stmt 0 view .LVU479
 1558 0030 0AEBC707 		add	r7, r10, r7, lsl #3
 816:Src/main.c    ****       }
 1559              		.loc 1 816 38 view .LVU480
 1560 0034 0023     		movs	r3, #0
 1561 0036 3B55     		strb	r3, [r7, r4]
 1562              	.L80:
 788:Src/main.c    **** 
 1563              		.loc 1 788 54 discriminator 2 view .LVU481
 1564 0038 0134     		adds	r4, r4, #1
 1565              	.LVL86:
 1566              	.L84:
 788:Src/main.c    **** 
 1567              		.loc 1 788 32 discriminator 1 view .LVU482
 1568 003a 9DF88A30 		ldrb	r3, [sp, #138]	@ zero_extendqisi2
 788:Src/main.c    **** 
 1569              		.loc 1 788 3 discriminator 1 view .LVU483
 1570 003e A342     		cmp	r3, r4
 1571 0040 43DD     		ble	.L87
 791:Src/main.c    ****         chargeRate = 0;
 1572              		.loc 1 791 7 is_stmt 1 view .LVU484
 791:Src/main.c    ****         chargeRate = 0;
 1573              		.loc 1 791 22 is_stmt 0 view .LVU485
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 47


 1574 0042 3746     		mov	r7, r6
 1575 0044 06EB4603 		add	r3, r6, r6, lsl #1
 1576 0048 DD00     		lsls	r5, r3, #3
 1577 004a 4544     		add	r5, r5, r8
 791:Src/main.c    ****         chargeRate = 0;
 1578              		.loc 1 791 29 view .LVU486
 1579 004c 35F81420 		ldrh	r2, [r5, r4, lsl #1]
 791:Src/main.c    ****         chargeRate = 0;
 1580              		.loc 1 791 52 view .LVU487
 1581 0050 BDF89610 		ldrh	r1, [sp, #150]
 791:Src/main.c    ****         chargeRate = 0;
 1582              		.loc 1 791 47 view .LVU488
 1583 0054 244B     		ldr	r3, .L89+4
 1584 0056 1B88     		ldrh	r3, [r3]
 1585 0058 0B44     		add	r3, r3, r1
 791:Src/main.c    ****         chargeRate = 0;
 1586              		.loc 1 791 10 view .LVU489
 1587 005a 9A42     		cmp	r2, r3
 1588 005c 06DD     		ble	.L78
 792:Src/main.c    ****         fullDischarge[board][cell] = 1;
 1589              		.loc 1 792 9 is_stmt 1 view .LVU490
 792:Src/main.c    ****         fullDischarge[board][cell] = 1;
 1590              		.loc 1 792 20 is_stmt 0 view .LVU491
 1591 005e 214B     		ldr	r3, .L89
 1592 0060 0022     		movs	r2, #0
 1593 0062 1A70     		strb	r2, [r3]
 793:Src/main.c    ****       }
 1594              		.loc 1 793 9 is_stmt 1 view .LVU492
 793:Src/main.c    ****       }
 1595              		.loc 1 793 22 is_stmt 0 view .LVU493
 1596 0064 09EBC603 		add	r3, r9, r6, lsl #3
 793:Src/main.c    ****       }
 1597              		.loc 1 793 36 view .LVU494
 1598 0068 0122     		movs	r2, #1
 1599 006a 1A55     		strb	r2, [r3, r4]
 1600              	.L78:
 798:Src/main.c    ****         chargeRate = 0;
 1601              		.loc 1 798 7 is_stmt 1 view .LVU495
 798:Src/main.c    ****         chargeRate = 0;
 1602              		.loc 1 798 29 is_stmt 0 view .LVU496
 1603 006c 35F81420 		ldrh	r2, [r5, r4, lsl #1]
 798:Src/main.c    ****         chargeRate = 0;
 1604              		.loc 1 798 41 view .LVU497
 1605 0070 BDF89430 		ldrh	r3, [sp, #148]
 798:Src/main.c    ****         chargeRate = 0;
 1606              		.loc 1 798 10 view .LVU498
 1607 0074 9A42     		cmp	r2, r3
 1608 0076 06D9     		bls	.L79
 799:Src/main.c    ****         fullDischarge[board][cell] = 1;
 1609              		.loc 1 799 9 is_stmt 1 view .LVU499
 799:Src/main.c    ****         fullDischarge[board][cell] = 1;
 1610              		.loc 1 799 20 is_stmt 0 view .LVU500
 1611 0078 1A4B     		ldr	r3, .L89
 1612 007a 0022     		movs	r2, #0
 1613 007c 1A70     		strb	r2, [r3]
 800:Src/main.c    ****       }
 1614              		.loc 1 800 9 is_stmt 1 view .LVU501
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 48


 800:Src/main.c    ****       }
 1615              		.loc 1 800 22 is_stmt 0 view .LVU502
 1616 007e 09EBC703 		add	r3, r9, r7, lsl #3
 800:Src/main.c    ****       }
 1617              		.loc 1 800 36 view .LVU503
 1618 0082 0122     		movs	r2, #1
 1619 0084 1A55     		strb	r2, [r3, r4]
 1620              	.L79:
 804:Src/main.c    **** 
 1621              		.loc 1 804 7 is_stmt 1 view .LVU504
 804:Src/main.c    **** 
 1622              		.loc 1 804 22 is_stmt 0 view .LVU505
 1623 0086 174B     		ldr	r3, .L89
 1624 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 804:Src/main.c    **** 
 1625              		.loc 1 804 10 view .LVU506
 1626 008a 002B     		cmp	r3, #0
 1627 008c D4D0     		beq	.L80
 807:Src/main.c    ****           chargeRate = 1;
 1628              		.loc 1 807 9 is_stmt 1 view .LVU507
 807:Src/main.c    ****           chargeRate = 1;
 1629              		.loc 1 807 31 is_stmt 0 view .LVU508
 1630 008e 35F81420 		ldrh	r2, [r5, r4, lsl #1]
 807:Src/main.c    ****           chargeRate = 1;
 1631              		.loc 1 807 43 view .LVU509
 1632 0092 BDF89230 		ldrh	r3, [sp, #146]
 807:Src/main.c    ****           chargeRate = 1;
 1633              		.loc 1 807 12 view .LVU510
 1634 0096 9A42     		cmp	r2, r3
 1635 0098 02D9     		bls	.L81
 808:Src/main.c    **** 
 1636              		.loc 1 808 11 is_stmt 1 view .LVU511
 808:Src/main.c    **** 
 1637              		.loc 1 808 22 is_stmt 0 view .LVU512
 1638 009a 124B     		ldr	r3, .L89
 1639 009c 0122     		movs	r2, #1
 1640 009e 1A70     		strb	r2, [r3]
 1641              	.L81:
 811:Src/main.c    **** 
 1642              		.loc 1 811 9 is_stmt 1 view .LVU513
 811:Src/main.c    **** 
 1643              		.loc 1 811 21 is_stmt 0 view .LVU514
 1644 00a0 4822     		movs	r2, #72
 1645 00a2 1EA9     		add	r1, sp, #120
 1646 00a4 6846     		mov	r0, sp
 1647 00a6 FFF7FEFF 		bl	memcpy
 1648              	.LVL87:
 1649 00aa 1AAB     		add	r3, sp, #104
 1650 00ac 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1651 00ae FFF7FEFF 		bl	balancingThreshold
 1652              	.LVL88:
 813:Src/main.c    ****           cellDischarge[board][cell] = 1;
 1653              		.loc 1 813 9 is_stmt 1 view .LVU515
 813:Src/main.c    ****           cellDischarge[board][cell] = 1;
 1654              		.loc 1 813 31 is_stmt 0 view .LVU516
 1655 00b2 35F81420 		ldrh	r2, [r5, r4, lsl #1]
 813:Src/main.c    ****           cellDischarge[board][cell] = 1;
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 49


 1656              		.loc 1 813 49 view .LVU517
 1657 00b6 0C4B     		ldr	r3, .L89+4
 1658 00b8 1B88     		ldrh	r3, [r3]
 1659 00ba 1844     		add	r0, r0, r3
 1660              	.LVL89:
 813:Src/main.c    ****           cellDischarge[board][cell] = 1;
 1661              		.loc 1 813 12 view .LVU518
 1662 00bc 8242     		cmp	r2, r0
 1663 00be B7DD     		ble	.L82
 814:Src/main.c    ****         else
 1664              		.loc 1 814 11 is_stmt 1 view .LVU519
 814:Src/main.c    ****         else
 1665              		.loc 1 814 24 is_stmt 0 view .LVU520
 1666 00c0 0AEBC707 		add	r7, r10, r7, lsl #3
 814:Src/main.c    ****         else
 1667              		.loc 1 814 38 view .LVU521
 1668 00c4 0123     		movs	r3, #1
 1669 00c6 3B55     		strb	r3, [r7, r4]
 1670 00c8 B6E7     		b	.L80
 1671              	.L87:
 814:Src/main.c    ****         else
 1672              		.loc 1 814 38 view .LVU522
 1673              	.LBE16:
 787:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1674              		.loc 1 787 49 discriminator 2 view .LVU523
 1675 00ca 0136     		adds	r6, r6, #1
 1676              	.LVL90:
 1677              	.L77:
 787:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1678              		.loc 1 787 33 discriminator 1 view .LVU524
 1679 00cc 9DF86830 		ldrb	r3, [sp, #104]	@ zero_extendqisi2
 787:Src/main.c    **** 		for (int cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1680              		.loc 1 787 2 discriminator 1 view .LVU525
 1681 00d0 B342     		cmp	r3, r6
 1682 00d2 01DD     		ble	.L88
 1683              	.LBB17:
 788:Src/main.c    **** 
 1684              		.loc 1 788 12 view .LVU526
 1685 00d4 0024     		movs	r4, #0
 1686 00d6 B0E7     		b	.L84
 1687              	.L88:
 1688              	.LBE17:
 1689              	.LBE15:
 820:Src/main.c    **** 
 1690              		.loc 1 820 1 view .LVU527
 1691 00d8 12B0     		add	sp, sp, #72
 1692              	.LCFI35:
 1693              		.cfi_def_cfa_offset 48
 1694              		@ sp needed
 1695 00da BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 1696              	.LCFI36:
 1697              		.cfi_restore 14
 1698              		.cfi_restore 10
 1699              		.cfi_restore 9
 1700              		.cfi_restore 8
 1701              		.cfi_restore 7
 1702              		.cfi_restore 6
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 50


 1703              		.cfi_restore 5
 1704              		.cfi_restore 4
 1705              		.cfi_def_cfa_offset 16
 1706              	.LVL91:
 820:Src/main.c    **** 
 1707              		.loc 1 820 1 view .LVU528
 1708 00de 04B0     		add	sp, sp, #16
 1709              	.LCFI37:
 1710              		.cfi_def_cfa_offset 0
 1711 00e0 7047     		bx	lr
 1712              	.L90:
 1713 00e2 00BF     		.align	2
 1714              	.L89:
 1715 00e4 00000000 		.word	.LANCHOR2
 1716 00e8 00000000 		.word	minimum
 1717              		.cfi_endproc
 1718              	.LFE77:
 1720              		.section	.text.checkDischarge,"ax",%progbits
 1721              		.align	1
 1722              		.global	checkDischarge
 1723              		.syntax unified
 1724              		.thumb
 1725              		.thumb_func
 1726              		.fpu softvfp
 1728              	checkDischarge:
 1729              	.LVL92:
 1730              	.LFB79:
 847:Src/main.c    **** 
 848:Src/main.c    **** void checkDischarge(BMSconfigStructTypedef cfg, bool fullDischarge[12][8], uint16_t cellVoltage[12]
 1731              		.loc 1 848 106 is_stmt 1 view -0
 1732              		.cfi_startproc
 1733              		@ args = 96, pretend = 16, frame = 0
 1734              		@ frame_needed = 0, uses_anonymous_args = 0
 1735              		@ link register save eliminated.
 1736              		.loc 1 848 106 is_stmt 0 view .LVU530
 1737 0000 84B0     		sub	sp, sp, #16
 1738              	.LCFI38:
 1739              		.cfi_def_cfa_offset 16
 1740 0002 F0B4     		push	{r4, r5, r6, r7}
 1741              	.LCFI39:
 1742              		.cfi_def_cfa_offset 32
 1743              		.cfi_offset 4, -32
 1744              		.cfi_offset 5, -28
 1745              		.cfi_offset 6, -24
 1746              		.cfi_offset 7, -20
 1747 0004 04AC     		add	r4, sp, #16
 1748 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1749 000a 1A9F     		ldr	r7, [sp, #104]
 1750 000c DDF86CC0 		ldr	ip, [sp, #108]
 849:Src/main.c    **** 
 850:Src/main.c    ****   uint8_t sum = 0;
 1751              		.loc 1 850 3 is_stmt 1 view .LVU531
 1752              	.LVL93:
 851:Src/main.c    **** 
 852:Src/main.c    ****   for (uint8_t board = 0; board < cfg.numOfICs; board++) {
 1753              		.loc 1 852 3 view .LVU532
 1754              	.LBB18:
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 51


 1755              		.loc 1 852 8 view .LVU533
 1756              		.loc 1 852 16 is_stmt 0 view .LVU534
 1757 0010 0020     		movs	r0, #0
 1758              	.LBE18:
 850:Src/main.c    **** 
 1759              		.loc 1 850 11 view .LVU535
 1760 0012 0646     		mov	r6, r0
 1761              	.LBB21:
 1762              		.loc 1 852 3 view .LVU536
 1763 0014 1BE0     		b	.L92
 1764              	.LVL94:
 1765              	.L94:
 1766              	.LBB19:
 853:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 854:Src/main.c    ****       if (fullDischarge[board][cell] == 1) {
 855:Src/main.c    ****         if (cellVoltage[board][cell] <= minimum)
 856:Src/main.c    ****           fullDischarge[board][cell] = 0;
 857:Src/main.c    ****         else
 858:Src/main.c    ****           sum = sum + 1;
 1767              		.loc 1 858 11 is_stmt 1 view .LVU537
 1768              		.loc 1 858 15 is_stmt 0 view .LVU538
 1769 0016 0136     		adds	r6, r6, #1
 1770              	.LVL95:
 1771              		.loc 1 858 15 view .LVU539
 1772 0018 F6B2     		uxtb	r6, r6
 1773              	.LVL96:
 1774              	.L93:
 853:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1775              		.loc 1 853 60 discriminator 2 view .LVU540
 1776 001a 0133     		adds	r3, r3, #1
 1777              	.LVL97:
 853:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1778              		.loc 1 853 60 discriminator 2 view .LVU541
 1779 001c DBB2     		uxtb	r3, r3
 1780              	.LVL98:
 1781              	.L96:
 853:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1782              		.loc 1 853 38 discriminator 1 view .LVU542
 1783 001e 9DF83220 		ldrb	r2, [sp, #50]	@ zero_extendqisi2
 853:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1784              		.loc 1 853 5 discriminator 1 view .LVU543
 1785 0022 9A42     		cmp	r2, r3
 1786 0024 11D9     		bls	.L100
 854:Src/main.c    ****         if (cellVoltage[board][cell] <= minimum)
 1787              		.loc 1 854 7 is_stmt 1 view .LVU544
 854:Src/main.c    ****         if (cellVoltage[board][cell] <= minimum)
 1788              		.loc 1 854 24 is_stmt 0 view .LVU545
 1789 0026 07EBC001 		add	r1, r7, r0, lsl #3
 854:Src/main.c    ****         if (cellVoltage[board][cell] <= minimum)
 1790              		.loc 1 854 31 view .LVU546
 1791 002a CA5C     		ldrb	r2, [r1, r3]	@ zero_extendqisi2
 854:Src/main.c    ****         if (cellVoltage[board][cell] <= minimum)
 1792              		.loc 1 854 10 view .LVU547
 1793 002c 002A     		cmp	r2, #0
 1794 002e F4D0     		beq	.L93
 855:Src/main.c    ****           fullDischarge[board][cell] = 0;
 1795              		.loc 1 855 9 is_stmt 1 view .LVU548
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 52


 855:Src/main.c    ****           fullDischarge[board][cell] = 0;
 1796              		.loc 1 855 24 is_stmt 0 view .LVU549
 1797 0030 00EB4004 		add	r4, r0, r0, lsl #1
 1798 0034 E200     		lsls	r2, r4, #3
 1799 0036 6244     		add	r2, r2, ip
 855:Src/main.c    ****           fullDischarge[board][cell] = 0;
 1800              		.loc 1 855 31 view .LVU550
 1801 0038 32F81340 		ldrh	r4, [r2, r3, lsl #1]
 855:Src/main.c    ****           fullDischarge[board][cell] = 0;
 1802              		.loc 1 855 38 view .LVU551
 1803 003c 0A4A     		ldr	r2, .L102
 1804 003e 1288     		ldrh	r2, [r2]
 855:Src/main.c    ****           fullDischarge[board][cell] = 0;
 1805              		.loc 1 855 12 view .LVU552
 1806 0040 9442     		cmp	r4, r2
 1807 0042 E8D8     		bhi	.L94
 856:Src/main.c    ****         else
 1808              		.loc 1 856 11 is_stmt 1 view .LVU553
 856:Src/main.c    ****         else
 1809              		.loc 1 856 38 is_stmt 0 view .LVU554
 1810 0044 0022     		movs	r2, #0
 1811 0046 CA54     		strb	r2, [r1, r3]
 1812 0048 E7E7     		b	.L93
 1813              	.L100:
 1814              	.LBE19:
 852:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1815              		.loc 1 852 54 discriminator 2 view .LVU555
 1816 004a 0130     		adds	r0, r0, #1
 1817              	.LVL99:
 852:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1818              		.loc 1 852 54 discriminator 2 view .LVU556
 1819 004c C0B2     		uxtb	r0, r0
 1820              	.LVL100:
 1821              	.L92:
 852:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1822              		.loc 1 852 38 discriminator 1 view .LVU557
 1823 004e 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 852:Src/main.c    ****     for (uint8_t cell = 0; cell < cfg.numOfCellsPerIC; cell++) {
 1824              		.loc 1 852 3 discriminator 1 view .LVU558
 1825 0052 8342     		cmp	r3, r0
 1826 0054 01D9     		bls	.L101
 1827              	.LBB20:
 853:Src/main.c    ****       if (fullDischarge[board][cell] == 1) {
 1828              		.loc 1 853 18 view .LVU559
 1829 0056 0023     		movs	r3, #0
 1830 0058 E1E7     		b	.L96
 1831              	.L101:
 1832              	.LBE20:
 1833              	.LBE21:
 859:Src/main.c    ****       }
 860:Src/main.c    ****     }
 861:Src/main.c    ****   }
 862:Src/main.c    **** 
 863:Src/main.c    ****   if (sum == 0)
 1834              		.loc 1 863 3 is_stmt 1 view .LVU560
 1835              		.loc 1 863 6 is_stmt 0 view .LVU561
 1836 005a 16B9     		cbnz	r6, .L91
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 53


 864:Src/main.c    ****     chargeRate = 2;
 1837              		.loc 1 864 5 is_stmt 1 view .LVU562
 1838              		.loc 1 864 16 is_stmt 0 view .LVU563
 1839 005c 034B     		ldr	r3, .L102+4
 1840 005e 0222     		movs	r2, #2
 1841 0060 1A70     		strb	r2, [r3]
 1842              	.L91:
 865:Src/main.c    **** 
 866:Src/main.c    **** }
 1843              		.loc 1 866 1 view .LVU564
 1844 0062 F0BC     		pop	{r4, r5, r6, r7}
 1845              	.LCFI40:
 1846              		.cfi_restore 7
 1847              		.cfi_restore 6
 1848              		.cfi_restore 5
 1849              		.cfi_restore 4
 1850              		.cfi_def_cfa_offset 16
 1851              	.LVL101:
 1852              		.loc 1 866 1 view .LVU565
 1853 0064 04B0     		add	sp, sp, #16
 1854              	.LCFI41:
 1855              		.cfi_def_cfa_offset 0
 1856 0066 7047     		bx	lr
 1857              	.L103:
 1858              		.align	2
 1859              	.L102:
 1860 0068 00000000 		.word	minimum
 1861 006c 00000000 		.word	.LANCHOR2
 1862              		.cfi_endproc
 1863              	.LFE79:
 1865              		.section	.text.setChargerTxData,"ax",%progbits
 1866              		.align	1
 1867              		.global	setChargerTxData
 1868              		.syntax unified
 1869              		.thumb
 1870              		.thumb_func
 1871              		.fpu softvfp
 1873              	setChargerTxData:
 1874              	.LFB80:
 867:Src/main.c    **** 
 868:Src/main.c    **** void setChargerTxData() {
 1875              		.loc 1 868 25 is_stmt 1 view -0
 1876              		.cfi_startproc
 1877              		@ args = 0, pretend = 0, frame = 0
 1878              		@ frame_needed = 0, uses_anonymous_args = 0
 1879 0000 08B5     		push	{r3, lr}
 1880              	.LCFI42:
 1881              		.cfi_def_cfa_offset 8
 1882              		.cfi_offset 3, -8
 1883              		.cfi_offset 14, -4
 869:Src/main.c    **** 
 870:Src/main.c    **** 	/* voltage data (hex value of desired voltage (V) times 10)*/
 871:Src/main.c    **** 	ChargerTxData[0] = (uint8_t)(chargerVoltage >> 8);
 1884              		.loc 1 871 2 view .LVU567
 1885              		.loc 1 871 19 is_stmt 0 view .LVU568
 1886 0002 134B     		ldr	r3, .L111
 1887 0004 0F22     		movs	r2, #15
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 54


 1888 0006 1A70     		strb	r2, [r3]
 872:Src/main.c    **** 	ChargerTxData[1] = (uint8_t)chargerVoltage;
 1889              		.loc 1 872 2 is_stmt 1 view .LVU569
 1890              		.loc 1 872 19 is_stmt 0 view .LVU570
 1891 0008 A022     		movs	r2, #160
 1892 000a 5A70     		strb	r2, [r3, #1]
 873:Src/main.c    **** 
 874:Src/main.c    **** 	/* set the current data (hex value of desired current (A) times 10) */
 875:Src/main.c    **** 	switch (chargeRate) {
 1893              		.loc 1 875 2 is_stmt 1 view .LVU571
 1894 000c 114B     		ldr	r3, .L111+4
 1895 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1896 0010 012B     		cmp	r3, #1
 1897 0012 06D0     		beq	.L105
 1898 0014 022B     		cmp	r3, #2
 1899 0016 15D0     		beq	.L106
 876:Src/main.c    **** 		case 1:
 877:Src/main.c    **** 			/* lower current */
 878:Src/main.c    **** 			ChargerTxData[2] = (uint8_t)(lowerCurrent >> 8);
 879:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)lowerCurrent;
 880:Src/main.c    **** 			break;
 881:Src/main.c    **** 
 882:Src/main.c    **** 		case 2:
 883:Src/main.c    **** 			/* normal current */
 884:Src/main.c    **** 			ChargerTxData[2] = (uint8_t)(normalCurrent >> 8);
 885:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)normalCurrent;
 886:Src/main.c    **** 			break;
 887:Src/main.c    **** 
 888:Src/main.c    **** 		default:
 889:Src/main.c    **** 			/* no current */
 890:Src/main.c    **** 			ChargerTxData[2] = 0x00;
 1900              		.loc 1 890 4 view .LVU572
 1901              		.loc 1 890 21 is_stmt 0 view .LVU573
 1902 0018 0D4B     		ldr	r3, .L111
 1903 001a 0022     		movs	r2, #0
 1904 001c 9A70     		strb	r2, [r3, #2]
 891:Src/main.c    **** 			ChargerTxData[3] = 0x00;
 1905              		.loc 1 891 4 is_stmt 1 view .LVU574
 1906              		.loc 1 891 21 is_stmt 0 view .LVU575
 1907 001e DA70     		strb	r2, [r3, #3]
 1908 0020 04E0     		b	.L108
 1909              	.L105:
 878:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)lowerCurrent;
 1910              		.loc 1 878 4 is_stmt 1 view .LVU576
 878:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)lowerCurrent;
 1911              		.loc 1 878 21 is_stmt 0 view .LVU577
 1912 0022 0B4B     		ldr	r3, .L111
 1913 0024 0022     		movs	r2, #0
 1914 0026 9A70     		strb	r2, [r3, #2]
 879:Src/main.c    **** 			break;
 1915              		.loc 1 879 4 is_stmt 1 view .LVU578
 879:Src/main.c    **** 			break;
 1916              		.loc 1 879 21 is_stmt 0 view .LVU579
 1917 0028 0A22     		movs	r2, #10
 1918 002a DA70     		strb	r2, [r3, #3]
 880:Src/main.c    **** 
 1919              		.loc 1 880 4 is_stmt 1 view .LVU580
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 55


 1920              	.L108:
 892:Src/main.c    **** 	}
 893:Src/main.c    **** 
 894:Src/main.c    **** 	/* these data bytes are not used */
 895:Src/main.c    **** 	ChargerTxData[4] = 0x00;
 1921              		.loc 1 895 2 view .LVU581
 1922              		.loc 1 895 19 is_stmt 0 view .LVU582
 1923 002c 084A     		ldr	r2, .L111
 1924 002e 0023     		movs	r3, #0
 1925 0030 1371     		strb	r3, [r2, #4]
 896:Src/main.c    **** 	ChargerTxData[5] = 0x00;
 1926              		.loc 1 896 2 is_stmt 1 view .LVU583
 1927              		.loc 1 896 19 is_stmt 0 view .LVU584
 1928 0032 5371     		strb	r3, [r2, #5]
 897:Src/main.c    **** 	ChargerTxData[6] = 0x00;
 1929              		.loc 1 897 2 is_stmt 1 view .LVU585
 1930              		.loc 1 897 19 is_stmt 0 view .LVU586
 1931 0034 9371     		strb	r3, [r2, #6]
 898:Src/main.c    **** 	ChargerTxData[7] = 0x00;
 1932              		.loc 1 898 2 is_stmt 1 view .LVU587
 1933              		.loc 1 898 19 is_stmt 0 view .LVU588
 1934 0036 D371     		strb	r3, [r2, #7]
 899:Src/main.c    **** 
 900:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &ChargerTxHeader, ChargerTxData, &TxMailbox);
 1935              		.loc 1 900 3 is_stmt 1 view .LVU589
 1936 0038 074B     		ldr	r3, .L111+8
 1937 003a 0849     		ldr	r1, .L111+12
 1938 003c 0848     		ldr	r0, .L111+16
 1939 003e FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1940              	.LVL102:
 901:Src/main.c    **** }
 1941              		.loc 1 901 1 is_stmt 0 view .LVU590
 1942 0042 08BD     		pop	{r3, pc}
 1943              	.L106:
 884:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)normalCurrent;
 1944              		.loc 1 884 4 is_stmt 1 view .LVU591
 884:Src/main.c    **** 			ChargerTxData[3] = (uint8_t)normalCurrent;
 1945              		.loc 1 884 21 is_stmt 0 view .LVU592
 1946 0044 024B     		ldr	r3, .L111
 1947 0046 0022     		movs	r2, #0
 1948 0048 9A70     		strb	r2, [r3, #2]
 885:Src/main.c    **** 			break;
 1949              		.loc 1 885 4 is_stmt 1 view .LVU593
 885:Src/main.c    **** 			break;
 1950              		.loc 1 885 21 is_stmt 0 view .LVU594
 1951 004a 3E22     		movs	r2, #62
 1952 004c DA70     		strb	r2, [r3, #3]
 886:Src/main.c    **** 
 1953              		.loc 1 886 4 is_stmt 1 view .LVU595
 1954 004e EDE7     		b	.L108
 1955              	.L112:
 1956              		.align	2
 1957              	.L111:
 1958 0050 00000000 		.word	ChargerTxData
 1959 0054 00000000 		.word	.LANCHOR2
 1960 0058 00000000 		.word	TxMailbox
 1961 005c 00000000 		.word	ChargerTxHeader
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 56


 1962 0060 00000000 		.word	hcan
 1963              		.cfi_endproc
 1964              	.LFE80:
 1966              		.section	.text.CELLVAL_message,"ax",%progbits
 1967              		.align	1
 1968              		.global	CELLVAL_message
 1969              		.syntax unified
 1970              		.thumb
 1971              		.thumb_func
 1972              		.fpu softvfp
 1974              	CELLVAL_message:
 1975              	.LVL103:
 1976              	.LFB81:
 902:Src/main.c    **** 
 903:Src/main.c    **** void CELLVAL_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12], uint16_t cellTemp[12
 1977              		.loc 1 903 197 view -0
 1978              		.cfi_startproc
 1979              		@ args = 112, pretend = 16, frame = 0
 1980              		@ frame_needed = 0, uses_anonymous_args = 0
 1981              		.loc 1 903 197 is_stmt 0 view .LVU597
 1982 0000 84B0     		sub	sp, sp, #16
 1983              	.LCFI43:
 1984              		.cfi_def_cfa_offset 16
 1985 0002 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1986              	.LCFI44:
 1987              		.cfi_def_cfa_offset 56
 1988              		.cfi_offset 3, -56
 1989              		.cfi_offset 4, -52
 1990              		.cfi_offset 5, -48
 1991              		.cfi_offset 6, -44
 1992              		.cfi_offset 7, -40
 1993              		.cfi_offset 8, -36
 1994              		.cfi_offset 9, -32
 1995              		.cfi_offset 10, -28
 1996              		.cfi_offset 11, -24
 1997              		.cfi_offset 14, -20
 1998 0006 0AAC     		add	r4, sp, #40
 1999 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 2000 000c DDF880A0 		ldr	r10, [sp, #128]
 2001 0010 DDF88490 		ldr	r9, [sp, #132]
 2002 0014 DDF88880 		ldr	r8, [sp, #136]
 2003 0018 239F     		ldr	r7, [sp, #140]
 2004 001a 9DF89460 		ldrb	r6, [sp, #148]	@ zero_extendqisi2
 904:Src/main.c    **** 	
 905:Src/main.c    ****   TxHeader.StdId = CELLVAL_ID;
 2005              		.loc 1 905 3 is_stmt 1 view .LVU598
 2006              		.loc 1 905 18 is_stmt 0 view .LVU599
 2007 001e 2D4B     		ldr	r3, .L121
 2008 0020 0722     		movs	r2, #7
 2009 0022 1A60     		str	r2, [r3]
 906:Src/main.c    ****   TxHeader.DLC = 6;
 2010              		.loc 1 906 3 is_stmt 1 view .LVU600
 2011              		.loc 1 906 16 is_stmt 0 view .LVU601
 2012 0024 0622     		movs	r2, #6
 2013 0026 1A61     		str	r2, [r3, #16]
 907:Src/main.c    **** 
 908:Src/main.c    ****   for (uint8_t i = 0; i < cfg.numOfICs; i++) {
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 57


 2014              		.loc 1 908 3 is_stmt 1 view .LVU602
 2015              	.LBB22:
 2016              		.loc 1 908 8 view .LVU603
 2017              	.LVL104:
 2018              		.loc 1 908 16 is_stmt 0 view .LVU604
 2019 0028 0025     		movs	r5, #0
 2020              		.loc 1 908 3 view .LVU605
 2021 002a 01E0     		b	.L114
 2022              	.LVL105:
 2023              	.L120:
 2024              		.loc 1 908 42 discriminator 2 view .LVU606
 2025 002c 0135     		adds	r5, r5, #1
 2026              	.LVL106:
 2027              		.loc 1 908 42 discriminator 2 view .LVU607
 2028 002e EDB2     		uxtb	r5, r5
 2029              	.LVL107:
 2030              	.L114:
 2031              		.loc 1 908 30 discriminator 1 view .LVU608
 2032 0030 9DF82830 		ldrb	r3, [sp, #40]	@ zero_extendqisi2
 2033              		.loc 1 908 3 discriminator 1 view .LVU609
 2034 0034 AB42     		cmp	r3, r5
 2035 0036 49D9     		bls	.L119
 2036              	.LBB23:
 909:Src/main.c    ****     for (uint8_t j = 0; j < cfg.numOfCellsPerIC; j++) {
 2037              		.loc 1 909 18 view .LVU610
 2038 0038 0024     		movs	r4, #0
 2039              	.L116:
 2040              	.LVL108:
 2041              		.loc 1 909 32 discriminator 1 view .LVU611
 2042 003a 9DF84A30 		ldrb	r3, [sp, #74]	@ zero_extendqisi2
 2043              		.loc 1 909 5 discriminator 1 view .LVU612
 2044 003e A342     		cmp	r3, r4
 2045 0040 F4D9     		bls	.L120
 910:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number
 2046              		.loc 1 910 7 is_stmt 1 discriminator 3 view .LVU613
 2047              		.loc 1 910 27 is_stmt 0 discriminator 3 view .LVU614
 2048 0042 05FB03F3 		mul	r3, r5, r3
 2049 0046 DBB2     		uxtb	r3, r3
 2050              		.loc 1 910 49 discriminator 3 view .LVU615
 2051 0048 2344     		add	r3, r3, r4
 2052 004a DBB2     		uxtb	r3, r3
 2053              		.loc 1 910 53 discriminator 3 view .LVU616
 2054 004c 0133     		adds	r3, r3, #1
 2055              		.loc 1 910 23 discriminator 3 view .LVU617
 2056 004e 224A     		ldr	r2, .L121+4
 2057 0050 1370     		strb	r3, [r2]
 911:Src/main.c    ****       CELLVAL_DATA[1] = (uint8_t) (((dcFault[i][(uint8_t) j/2] << 3) & 0x08) | ((cellDischarge[i][j
 2058              		.loc 1 911 7 is_stmt 1 discriminator 3 view .LVU618
 2059              		.loc 1 911 45 is_stmt 0 discriminator 3 view .LVU619
 2060 0052 249B     		ldr	r3, [sp, #144]
 2061 0054 03EB8503 		add	r3, r3, r5, lsl #2
 2062              		.loc 1 911 60 discriminator 3 view .LVU620
 2063 0058 4FEA540E 		lsr	lr, r4, #1
 2064              		.loc 1 911 48 discriminator 3 view .LVU621
 2065 005c 13F80E00 		ldrb	r0, [r3, lr]	@ zero_extendqisi2
 2066              		.loc 1 911 64 discriminator 3 view .LVU622
 2067 0060 C000     		lsls	r0, r0, #3
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 58


 2068              		.loc 1 911 70 discriminator 3 view .LVU623
 2069 0062 00F00800 		and	r0, r0, #8
 2070              		.loc 1 911 95 discriminator 3 view .LVU624
 2071 0066 E900     		lsls	r1, r5, #3
 2072 0068 7B18     		adds	r3, r7, r1
 2073              		.loc 1 911 98 discriminator 3 view .LVU625
 2074 006a 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 2075              		.loc 1 911 102 discriminator 3 view .LVU626
 2076 006c 9B00     		lsls	r3, r3, #2
 2077              		.loc 1 911 108 discriminator 3 view .LVU627
 2078 006e 03F00403 		and	r3, r3, #4
 2079              		.loc 1 911 78 discriminator 3 view .LVU628
 2080 0072 1843     		orrs	r0, r0, r3
 2081              		.loc 1 911 128 discriminator 3 view .LVU629
 2082 0074 7300     		lsls	r3, r6, #1
 2083              		.loc 1 911 134 discriminator 3 view .LVU630
 2084 0076 03F00203 		and	r3, r3, #2
 2085              		.loc 1 911 116 discriminator 3 view .LVU631
 2086 007a 0343     		orrs	r3, r3, r0
 2087              		.loc 1 911 160 discriminator 3 view .LVU632
 2088 007c 6800     		lsls	r0, r5, #1
 2089 007e 00EB050B 		add	fp, r0, r5
 2090 0082 4FEA8B0C 		lsl	ip, fp, #2
 2091 0086 C444     		add	ip, ip, r8
 2092              		.loc 1 911 163 discriminator 3 view .LVU633
 2093 0088 1CF904C0 		ldrsb	ip, [ip, r4]
 2094              		.loc 1 911 142 discriminator 3 view .LVU634
 2095 008c 43EA0C03 		orr	r3, r3, ip
 2096              		.loc 1 911 23 discriminator 3 view .LVU635
 2097 0090 5370     		strb	r3, [r2, #1]
 912:Src/main.c    ****       CELLVAL_DATA[2] = (uint8_t) ((cellVoltage[i][j] >> 8) & 0xFF);
 2098              		.loc 1 912 7 is_stmt 1 discriminator 3 view .LVU636
 2099              		.loc 1 912 48 is_stmt 0 discriminator 3 view .LVU637
 2100 0092 2844     		add	r0, r0, r5
 2101 0094 C300     		lsls	r3, r0, #3
 2102 0096 5344     		add	r3, r3, r10
 2103              		.loc 1 912 51 discriminator 3 view .LVU638
 2104 0098 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 2105              		.loc 1 912 25 discriminator 3 view .LVU639
 2106 009c 000A     		lsrs	r0, r0, #8
 2107              		.loc 1 912 23 discriminator 3 view .LVU640
 2108 009e 9070     		strb	r0, [r2, #2]
 913:Src/main.c    ****       CELLVAL_DATA[3] = (uint8_t) (cellVoltage[i][j] & 0xFF);
 2109              		.loc 1 913 7 is_stmt 1 discriminator 3 view .LVU641
 2110              		.loc 1 913 25 is_stmt 0 discriminator 3 view .LVU642
 2111 00a0 13F81430 		ldrb	r3, [r3, r4, lsl #1]	@ zero_extendqisi2
 2112              		.loc 1 913 23 discriminator 3 view .LVU643
 2113 00a4 D370     		strb	r3, [r2, #3]
 914:Src/main.c    ****       CELLVAL_DATA[4] = (uint8_t) ((cellTemp[i][(uint8_t) j/2] >> 8) & 0xFF);
 2114              		.loc 1 914 7 is_stmt 1 discriminator 3 view .LVU644
 2115              		.loc 1 914 45 is_stmt 0 discriminator 3 view .LVU645
 2116 00a6 4944     		add	r1, r1, r9
 2117              		.loc 1 914 48 discriminator 3 view .LVU646
 2118 00a8 31F81E30 		ldrh	r3, [r1, lr, lsl #1]
 2119              		.loc 1 914 25 discriminator 3 view .LVU647
 2120 00ac 1B0A     		lsrs	r3, r3, #8
 2121              		.loc 1 914 23 discriminator 3 view .LVU648
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 59


 2122 00ae 1371     		strb	r3, [r2, #4]
 915:Src/main.c    ****       CELLVAL_DATA[5] = (uint8_t) (cellTemp[i][(uint8_t) j/2] & 0xFF);
 2123              		.loc 1 915 7 is_stmt 1 discriminator 3 view .LVU649
 2124              		.loc 1 915 25 is_stmt 0 discriminator 3 view .LVU650
 2125 00b0 11F81E30 		ldrb	r3, [r1, lr, lsl #1]	@ zero_extendqisi2
 2126              		.loc 1 915 23 discriminator 3 view .LVU651
 2127 00b4 5371     		strb	r3, [r2, #5]
 916:Src/main.c    **** 
 917:Src/main.c    ****       HAL_CAN_AddTxMessage(&hcan, &TxHeader, CELLVAL_DATA, &TxMailbox);
 2128              		.loc 1 917 7 is_stmt 1 discriminator 3 view .LVU652
 2129 00b6 094B     		ldr	r3, .L121+8
 2130 00b8 0649     		ldr	r1, .L121
 2131 00ba 0948     		ldr	r0, .L121+12
 2132 00bc FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 2133              	.LVL109:
 918:Src/main.c    ****       HAL_Delay(10);
 2134              		.loc 1 918 7 discriminator 3 view .LVU653
 2135 00c0 0A20     		movs	r0, #10
 2136 00c2 FFF7FEFF 		bl	HAL_Delay
 2137              	.LVL110:
 909:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number
 2138              		.loc 1 909 51 is_stmt 0 discriminator 3 view .LVU654
 2139 00c6 0134     		adds	r4, r4, #1
 2140              	.LVL111:
 909:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number
 2141              		.loc 1 909 51 discriminator 3 view .LVU655
 2142 00c8 E4B2     		uxtb	r4, r4
 2143              	.LVL112:
 909:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number
 2144              		.loc 1 909 51 discriminator 3 view .LVU656
 2145 00ca B6E7     		b	.L116
 2146              	.LVL113:
 2147              	.L119:
 909:Src/main.c    ****       CELLVAL_DATA[0] = i * cfg.numOfCellsPerIC + j + 1; // cell number
 2148              		.loc 1 909 51 discriminator 3 view .LVU657
 2149              	.LBE23:
 2150              	.LBE22:
 919:Src/main.c    ****     }
 920:Src/main.c    ****   }
 921:Src/main.c    **** }
 2151              		.loc 1 921 1 view .LVU658
 2152 00cc BDE8F84F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2153              	.LCFI45:
 2154              		.cfi_restore 14
 2155              		.cfi_restore 11
 2156              		.cfi_restore 10
 2157              		.cfi_restore 9
 2158              		.cfi_restore 8
 2159              		.cfi_restore 7
 2160              		.cfi_restore 6
 2161              		.cfi_restore 5
 2162              		.cfi_restore 4
 2163              		.cfi_restore 3
 2164              		.cfi_def_cfa_offset 16
 2165              	.LVL114:
 2166              		.loc 1 921 1 view .LVU659
 2167 00d0 04B0     		add	sp, sp, #16
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 60


 2168              	.LCFI46:
 2169              		.cfi_def_cfa_offset 0
 2170 00d2 7047     		bx	lr
 2171              	.L122:
 2172              		.align	2
 2173              	.L121:
 2174 00d4 00000000 		.word	TxHeader
 2175 00d8 00000000 		.word	CELLVAL_DATA
 2176 00dc 00000000 		.word	TxMailbox
 2177 00e0 00000000 		.word	hcan
 2178              		.cfi_endproc
 2179              	.LFE81:
 2181              		.section	.text.BMSSTAT_message,"ax",%progbits
 2182              		.align	1
 2183              		.global	BMSSTAT_message
 2184              		.syntax unified
 2185              		.thumb
 2186              		.thumb_func
 2187              		.fpu softvfp
 2189              	BMSSTAT_message:
 2190              	.LVL115:
 2191              	.LFB82:
 922:Src/main.c    **** 
 923:Src/main.c    **** void BMSSTAT_message(BMSconfigStructTypedef cfg, uint8_t cellNumber[5], bool faultType[5]) {
 2192              		.loc 1 923 92 is_stmt 1 view -0
 2193              		.cfi_startproc
 2194              		@ args = 96, pretend = 16, frame = 0
 2195              		@ frame_needed = 0, uses_anonymous_args = 0
 2196              		.loc 1 923 92 is_stmt 0 view .LVU661
 2197 0000 84B0     		sub	sp, sp, #16
 2198              	.LCFI47:
 2199              		.cfi_def_cfa_offset 16
 2200 0002 10B5     		push	{r4, lr}
 2201              	.LCFI48:
 2202              		.cfi_def_cfa_offset 24
 2203              		.cfi_offset 4, -24
 2204              		.cfi_offset 14, -20
 2205 0004 02AC     		add	r4, sp, #8
 2206 0006 84E80F00 		stm	r4, {r0, r1, r2, r3}
 2207 000a 1898     		ldr	r0, [sp, #96]
 2208 000c 199A     		ldr	r2, [sp, #100]
 924:Src/main.c    **** 
 925:Src/main.c    ****   TxHeader.StdId = BMSSTAT_ID;
 2209              		.loc 1 925 3 is_stmt 1 view .LVU662
 2210              		.loc 1 925 18 is_stmt 0 view .LVU663
 2211 000e 1749     		ldr	r1, .L125
 2212 0010 0823     		movs	r3, #8
 2213 0012 0B60     		str	r3, [r1]
 926:Src/main.c    ****   TxHeader.DLC = 6;
 2214              		.loc 1 926 3 is_stmt 1 view .LVU664
 2215              		.loc 1 926 16 is_stmt 0 view .LVU665
 2216 0014 0623     		movs	r3, #6
 2217 0016 0B61     		str	r3, [r1, #16]
 927:Src/main.c    **** 
 928:Src/main.c    ****   BMSSTAT_DATA[0] = (uint8_t) ((chargeRate << 5) | (faultType[0] << 4) | (faultType[1] << 3) | (fau
 2218              		.loc 1 928 3 is_stmt 1 view .LVU666
 2219              		.loc 1 928 44 is_stmt 0 view .LVU667
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 61


 2220 0018 154B     		ldr	r3, .L125+4
 2221 001a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 2222              		.loc 1 928 62 view .LVU668
 2223 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2224              		.loc 1 928 66 view .LVU669
 2225 001e 1B01     		lsls	r3, r3, #4
 2226              		.loc 1 928 50 view .LVU670
 2227 0020 43EA4413 		orr	r3, r3, r4, lsl #5
 2228 0024 5BB2     		sxtb	r3, r3
 2229              		.loc 1 928 84 view .LVU671
 2230 0026 5478     		ldrb	r4, [r2, #1]	@ zero_extendqisi2
 2231              		.loc 1 928 72 view .LVU672
 2232 0028 43EAC403 		orr	r3, r3, r4, lsl #3
 2233 002c 5BB2     		sxtb	r3, r3
 2234              		.loc 1 928 106 view .LVU673
 2235 002e 9478     		ldrb	r4, [r2, #2]	@ zero_extendqisi2
 2236              		.loc 1 928 94 view .LVU674
 2237 0030 43EA8403 		orr	r3, r3, r4, lsl #2
 2238 0034 5BB2     		sxtb	r3, r3
 2239              		.loc 1 928 128 view .LVU675
 2240 0036 D478     		ldrb	r4, [r2, #3]	@ zero_extendqisi2
 2241              		.loc 1 928 116 view .LVU676
 2242 0038 43EA4403 		orr	r3, r3, r4, lsl #1
 2243 003c 5BB2     		sxtb	r3, r3
 2244              		.loc 1 928 150 view .LVU677
 2245 003e 92F90420 		ldrsb	r2, [r2, #4]
 2246              		.loc 1 928 138 view .LVU678
 2247 0042 1343     		orrs	r3, r3, r2
 2248              		.loc 1 928 19 view .LVU679
 2249 0044 0B4A     		ldr	r2, .L125+8
 2250 0046 1370     		strb	r3, [r2]
 929:Src/main.c    ****   BMSSTAT_DATA[1] = cellNumber[0]; // OV cell number
 2251              		.loc 1 929 3 is_stmt 1 view .LVU680
 2252              		.loc 1 929 31 is_stmt 0 view .LVU681
 2253 0048 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2254              		.loc 1 929 19 view .LVU682
 2255 004a 5370     		strb	r3, [r2, #1]
 930:Src/main.c    ****   BMSSTAT_DATA[2] = cellNumber[1]; // UV cell number
 2256              		.loc 1 930 3 is_stmt 1 view .LVU683
 2257              		.loc 1 930 19 is_stmt 0 view .LVU684
 2258 004c 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 2259 004e 9370     		strb	r3, [r2, #2]
 931:Src/main.c    ****   BMSSTAT_DATA[3] = cellNumber[2]; // OT cell number
 2260              		.loc 1 931 3 is_stmt 1 view .LVU685
 2261              		.loc 1 931 19 is_stmt 0 view .LVU686
 2262 0050 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 2263 0052 D370     		strb	r3, [r2, #3]
 932:Src/main.c    ****   BMSSTAT_DATA[4] = cellNumber[3]; // disconnected cell cell number
 2264              		.loc 1 932 3 is_stmt 1 view .LVU687
 2265              		.loc 1 932 19 is_stmt 0 view .LVU688
 2266 0054 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 2267 0056 1371     		strb	r3, [r2, #4]
 933:Src/main.c    ****   BMSSTAT_DATA[5] = cellNumber[4]; // disconnected temp sensor cell number
 2268              		.loc 1 933 3 is_stmt 1 view .LVU689
 2269              		.loc 1 933 19 is_stmt 0 view .LVU690
 2270 0058 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2271 005a 5371     		strb	r3, [r2, #5]
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 62


 934:Src/main.c    **** 
 935:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, BMSSTAT_DATA, &TxMailbox);
 2272              		.loc 1 935 3 is_stmt 1 view .LVU691
 2273 005c 064B     		ldr	r3, .L125+12
 2274 005e 0748     		ldr	r0, .L125+16
 2275 0060 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 2276              	.LVL116:
 936:Src/main.c    **** }
 2277              		.loc 1 936 1 is_stmt 0 view .LVU692
 2278 0064 BDE81040 		pop	{r4, lr}
 2279              	.LCFI49:
 2280              		.cfi_restore 14
 2281              		.cfi_restore 4
 2282              		.cfi_def_cfa_offset 16
 2283 0068 04B0     		add	sp, sp, #16
 2284              	.LCFI50:
 2285              		.cfi_def_cfa_offset 0
 2286 006a 7047     		bx	lr
 2287              	.L126:
 2288              		.align	2
 2289              	.L125:
 2290 006c 00000000 		.word	TxHeader
 2291 0070 00000000 		.word	.LANCHOR2
 2292 0074 00000000 		.word	BMSSTAT_DATA
 2293 0078 00000000 		.word	TxMailbox
 2294 007c 00000000 		.word	hcan
 2295              		.cfi_endproc
 2296              	.LFE82:
 2298              		.section	.text.BMSVINF_message,"ax",%progbits
 2299              		.align	1
 2300              		.global	BMSVINF_message
 2301              		.syntax unified
 2302              		.thumb
 2303              		.thumb_func
 2304              		.fpu softvfp
 2306              	BMSVINF_message:
 2307              	.LVL117:
 2308              	.LFB83:
 937:Src/main.c    **** 
 938:Src/main.c    **** void BMSVINF_message(BMSconfigStructTypedef cfg, uint16_t cellVoltage[12][12]) {
 2309              		.loc 1 938 80 is_stmt 1 view -0
 2310              		.cfi_startproc
 2311              		@ args = 92, pretend = 16, frame = 8
 2312              		@ frame_needed = 0, uses_anonymous_args = 0
 2313              		.loc 1 938 80 is_stmt 0 view .LVU694
 2314 0000 84B0     		sub	sp, sp, #16
 2315              	.LCFI51:
 2316              		.cfi_def_cfa_offset 16
 2317 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2318              	.LCFI52:
 2319              		.cfi_def_cfa_offset 40
 2320              		.cfi_offset 4, -40
 2321              		.cfi_offset 5, -36
 2322              		.cfi_offset 6, -32
 2323              		.cfi_offset 7, -28
 2324              		.cfi_offset 8, -24
 2325              		.cfi_offset 14, -20
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 63


 2326 0006 82B0     		sub	sp, sp, #8
 2327              	.LCFI53:
 2328              		.cfi_def_cfa_offset 48
 2329 0008 08AC     		add	r4, sp, #32
 2330 000a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 2331 000e 1E9F     		ldr	r7, [sp, #120]
 939:Src/main.c    **** 
 940:Src/main.c    ****   uint16_t minV;
 2332              		.loc 1 940 3 is_stmt 1 view .LVU695
 941:Src/main.c    ****   uint8_t minCell;
 2333              		.loc 1 941 3 view .LVU696
 942:Src/main.c    ****   uint16_t maxV;
 2334              		.loc 1 942 3 view .LVU697
 943:Src/main.c    ****   uint8_t maxCell;
 2335              		.loc 1 943 3 view .LVU698
 944:Src/main.c    ****   uint16_t averageV;
 2336              		.loc 1 944 3 view .LVU699
 945:Src/main.c    ****   uint32_t sum = 0;
 2337              		.loc 1 945 3 view .LVU700
 2338              	.LVL118:
 946:Src/main.c    **** 
 947:Src/main.c    ****   minV = cellVoltage[0][0];
 2339              		.loc 1 947 3 view .LVU701
 2340              		.loc 1 947 8 is_stmt 0 view .LVU702
 2341 0010 B7F800C0 		ldrh	ip, [r7]
 2342              	.LVL119:
 948:Src/main.c    ****   minCell = 1;
 2343              		.loc 1 948 3 is_stmt 1 view .LVU703
 949:Src/main.c    ****   maxV = cellVoltage[0][0];
 2344              		.loc 1 949 3 view .LVU704
 950:Src/main.c    ****   maxCell = 1;
 2345              		.loc 1 950 3 view .LVU705
 951:Src/main.c    **** 
 952:Src/main.c    ****   for (int i = 0; i < cfg.numOfICs; i++) {
 2346              		.loc 1 952 3 view .LVU706
 2347              	.LBB24:
 2348              		.loc 1 952 8 view .LVU707
 2349              		.loc 1 952 8 is_stmt 0 view .LVU708
 2350              	.LBE24:
 949:Src/main.c    ****   maxCell = 1;
 2351              		.loc 1 949 8 view .LVU709
 2352 0014 E646     		mov	lr, ip
 2353              	.LBB27:
 2354              		.loc 1 952 12 view .LVU710
 2355 0016 0025     		movs	r5, #0
 2356              	.LBE27:
 945:Src/main.c    **** 
 2357              		.loc 1 945 12 view .LVU711
 2358 0018 2E46     		mov	r6, r5
 950:Src/main.c    **** 
 2359              		.loc 1 950 11 view .LVU712
 2360 001a 0120     		movs	r0, #1
 948:Src/main.c    ****   maxV = cellVoltage[0][0];
 2361              		.loc 1 948 11 view .LVU713
 2362 001c 0446     		mov	r4, r0
 2363              	.LBB28:
 2364              		.loc 1 952 3 view .LVU714
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 64


 2365 001e 1EE0     		b	.L128
 2366              	.LVL120:
 2367              	.L130:
 2368              	.LBB25:
 953:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 954:Src/main.c    **** 
 955:Src/main.c    **** 			if (cellVoltage[i][j] < minV) {
 956:Src/main.c    ****         minV = cellVoltage[i][j];
 957:Src/main.c    ****         minCell = i * cfg.numOfCellsPerIC + j + 1;
 958:Src/main.c    ****       }
 959:Src/main.c    **** 
 960:Src/main.c    ****       if (cellVoltage[i][j] > maxV) {
 961:Src/main.c    ****         maxV = cellVoltage[i][j];
 962:Src/main.c    ****         maxCell = i * cfg.numOfCellsPerIC + j + 1;
 963:Src/main.c    ****       }
 964:Src/main.c    **** 
 965:Src/main.c    ****       sum = sum + cellVoltage[i][j];
 2369              		.loc 1 965 7 is_stmt 1 discriminator 2 view .LVU715
 2370              		.loc 1 965 11 is_stmt 0 discriminator 2 view .LVU716
 2371 0020 1644     		add	r6, r6, r2
 2372              	.LVL121:
 953:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 2373              		.loc 1 953 45 discriminator 2 view .LVU717
 2374 0022 0133     		adds	r3, r3, #1
 2375              	.LVL122:
 2376              	.L132:
 953:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 2377              		.loc 1 953 26 discriminator 1 view .LVU718
 2378 0024 9DF84210 		ldrb	r1, [sp, #66]	@ zero_extendqisi2
 953:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 2379              		.loc 1 953 3 discriminator 1 view .LVU719
 2380 0028 9942     		cmp	r1, r3
 2381 002a 17DD     		ble	.L135
 955:Src/main.c    ****         minV = cellVoltage[i][j];
 2382              		.loc 1 955 4 is_stmt 1 view .LVU720
 955:Src/main.c    ****         minV = cellVoltage[i][j];
 2383              		.loc 1 955 19 is_stmt 0 view .LVU721
 2384 002c 05EB4508 		add	r8, r5, r5, lsl #1
 2385 0030 4FEAC802 		lsl	r2, r8, #3
 2386 0034 3A44     		add	r2, r2, r7
 955:Src/main.c    ****         minV = cellVoltage[i][j];
 2387              		.loc 1 955 22 view .LVU722
 2388 0036 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 955:Src/main.c    ****         minV = cellVoltage[i][j];
 2389              		.loc 1 955 7 view .LVU723
 2390 003a 6245     		cmp	r2, ip
 2391 003c 05D2     		bcs	.L129
 956:Src/main.c    ****         minCell = i * cfg.numOfCellsPerIC + j + 1;
 2392              		.loc 1 956 9 is_stmt 1 view .LVU724
 2393              	.LVL123:
 957:Src/main.c    ****       }
 2394              		.loc 1 957 9 view .LVU725
 957:Src/main.c    ****       }
 2395              		.loc 1 957 43 is_stmt 0 view .LVU726
 2396 003e 05FB0134 		mla	r4, r5, r1, r3
 2397              	.LVL124:
 957:Src/main.c    ****       }
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 65


 2398              		.loc 1 957 43 view .LVU727
 2399 0042 E4B2     		uxtb	r4, r4
 957:Src/main.c    ****       }
 2400              		.loc 1 957 17 view .LVU728
 2401 0044 0134     		adds	r4, r4, #1
 2402 0046 E4B2     		uxtb	r4, r4
 2403              	.LVL125:
 956:Src/main.c    ****         minCell = i * cfg.numOfCellsPerIC + j + 1;
 2404              		.loc 1 956 14 view .LVU729
 2405 0048 9446     		mov	ip, r2
 2406              	.LVL126:
 2407              	.L129:
 960:Src/main.c    ****         maxV = cellVoltage[i][j];
 2408              		.loc 1 960 7 is_stmt 1 view .LVU730
 960:Src/main.c    ****         maxV = cellVoltage[i][j];
 2409              		.loc 1 960 10 is_stmt 0 view .LVU731
 2410 004a 7245     		cmp	r2, lr
 2411 004c E8D9     		bls	.L130
 961:Src/main.c    ****         maxCell = i * cfg.numOfCellsPerIC + j + 1;
 2412              		.loc 1 961 9 is_stmt 1 view .LVU732
 2413              	.LVL127:
 962:Src/main.c    ****       }
 2414              		.loc 1 962 9 view .LVU733
 962:Src/main.c    ****       }
 2415              		.loc 1 962 43 is_stmt 0 view .LVU734
 2416 004e 05FB0131 		mla	r1, r5, r1, r3
 2417 0052 C9B2     		uxtb	r1, r1
 962:Src/main.c    ****       }
 2418              		.loc 1 962 17 view .LVU735
 2419 0054 0131     		adds	r1, r1, #1
 2420 0056 C8B2     		uxtb	r0, r1
 2421              	.LVL128:
 961:Src/main.c    ****         maxCell = i * cfg.numOfCellsPerIC + j + 1;
 2422              		.loc 1 961 14 view .LVU736
 2423 0058 9646     		mov	lr, r2
 2424 005a E1E7     		b	.L130
 2425              	.LVL129:
 2426              	.L135:
 961:Src/main.c    ****         maxCell = i * cfg.numOfCellsPerIC + j + 1;
 2427              		.loc 1 961 14 view .LVU737
 2428              	.LBE25:
 952:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 2429              		.loc 1 952 38 discriminator 2 view .LVU738
 2430 005c 0135     		adds	r5, r5, #1
 2431              	.LVL130:
 2432              	.L128:
 952:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 2433              		.loc 1 952 26 discriminator 1 view .LVU739
 2434 005e 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 952:Src/main.c    **** 		for (int j = 0; j < cfg.numOfCellsPerIC; j++) {
 2435              		.loc 1 952 3 discriminator 1 view .LVU740
 2436 0062 AB42     		cmp	r3, r5
 2437 0064 01DD     		ble	.L136
 2438              	.LBB26:
 953:Src/main.c    **** 
 2439              		.loc 1 953 12 view .LVU741
 2440 0066 0023     		movs	r3, #0
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 66


 2441 0068 DCE7     		b	.L132
 2442              	.L136:
 2443              	.LBE26:
 2444              	.LBE28:
 966:Src/main.c    **** 
 967:Src/main.c    **** 		}
 968:Src/main.c    ****   }
 969:Src/main.c    **** 
 970:Src/main.c    ****   minimum = minV;
 2445              		.loc 1 970 3 is_stmt 1 view .LVU742
 2446              		.loc 1 970 11 is_stmt 0 view .LVU743
 2447 006a 174A     		ldr	r2, .L137
 2448 006c A2F800C0 		strh	ip, [r2]	@ movhi
 971:Src/main.c    ****   averageV = (uint16_t) (sum / (cfg.numOfICs * cfg.numOfCellsPerIC));
 2449              		.loc 1 971 3 is_stmt 1 view .LVU744
 2450              		.loc 1 971 51 is_stmt 0 view .LVU745
 2451 0070 9DF84220 		ldrb	r2, [sp, #66]	@ zero_extendqisi2
 2452              		.loc 1 971 46 view .LVU746
 2453 0074 02FB03F3 		mul	r3, r2, r3
 2454              		.loc 1 971 30 view .LVU747
 2455 0078 B6FBF3F6 		udiv	r6, r6, r3
 2456              	.LVL131:
 972:Src/main.c    **** 
 973:Src/main.c    ****   TxHeader.StdId = BMSVINF_ID;
 2457              		.loc 1 973 3 is_stmt 1 view .LVU748
 2458              		.loc 1 973 18 is_stmt 0 view .LVU749
 2459 007c 1349     		ldr	r1, .L137+4
 2460 007e 0923     		movs	r3, #9
 2461 0080 0B60     		str	r3, [r1]
 974:Src/main.c    ****   TxHeader.DLC = 8;
 2462              		.loc 1 974 3 is_stmt 1 view .LVU750
 2463              		.loc 1 974 16 is_stmt 0 view .LVU751
 2464 0082 0823     		movs	r3, #8
 2465 0084 0B61     		str	r3, [r1, #16]
 975:Src/main.c    ****   uint8_t BMSVINF_DATA[8];
 2466              		.loc 1 975 3 is_stmt 1 view .LVU752
 976:Src/main.c    **** 
 977:Src/main.c    ****   BMSVINF_DATA[0] = (uint8_t) ((maxV >> 8) & 0xFF);
 2467              		.loc 1 977 3 view .LVU753
 2468              		.loc 1 977 21 is_stmt 0 view .LVU754
 2469 0086 2EFA03F3 		lsr	r3, lr, r3
 2470              		.loc 1 977 19 view .LVU755
 2471 008a 8DF80030 		strb	r3, [sp]
 978:Src/main.c    ****   BMSVINF_DATA[1] = (uint8_t) (maxV & 0xFF);
 2472              		.loc 1 978 3 is_stmt 1 view .LVU756
 2473              		.loc 1 978 19 is_stmt 0 view .LVU757
 2474 008e 8DF801E0 		strb	lr, [sp, #1]
 979:Src/main.c    ****   BMSVINF_DATA[2] = maxCell;
 2475              		.loc 1 979 3 is_stmt 1 view .LVU758
 2476              		.loc 1 979 19 is_stmt 0 view .LVU759
 2477 0092 8DF80200 		strb	r0, [sp, #2]
 980:Src/main.c    ****   BMSVINF_DATA[3] = (uint8_t) ((minV >> 8) & 0xFF);
 2478              		.loc 1 980 3 is_stmt 1 view .LVU760
 2479              		.loc 1 980 21 is_stmt 0 view .LVU761
 2480 0096 4FEA1C23 		lsr	r3, ip, #8
 2481              		.loc 1 980 19 view .LVU762
 2482 009a 8DF80330 		strb	r3, [sp, #3]
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 67


 981:Src/main.c    ****   BMSVINF_DATA[4] = (uint8_t) (minV & 0xFF);
 2483              		.loc 1 981 3 is_stmt 1 view .LVU763
 2484              		.loc 1 981 19 is_stmt 0 view .LVU764
 2485 009e 8DF804C0 		strb	ip, [sp, #4]
 982:Src/main.c    ****   BMSVINF_DATA[5] = minCell;
 2486              		.loc 1 982 3 is_stmt 1 view .LVU765
 2487              		.loc 1 982 19 is_stmt 0 view .LVU766
 2488 00a2 8DF80540 		strb	r4, [sp, #5]
 983:Src/main.c    ****   BMSVINF_DATA[6] = (uint8_t) ((averageV >> 8) & 0xFF);
 2489              		.loc 1 983 3 is_stmt 1 view .LVU767
 2490              		.loc 1 983 21 is_stmt 0 view .LVU768
 2491 00a6 C6F30723 		ubfx	r3, r6, #8, #8
 2492              		.loc 1 983 19 view .LVU769
 2493 00aa 8DF80630 		strb	r3, [sp, #6]
 984:Src/main.c    ****   BMSVINF_DATA[7] = (uint8_t) (averageV & 0xFF);
 2494              		.loc 1 984 3 is_stmt 1 view .LVU770
 2495              		.loc 1 984 19 is_stmt 0 view .LVU771
 2496 00ae 8DF80760 		strb	r6, [sp, #7]
 985:Src/main.c    **** 
 986:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, BMSVINF_DATA, &TxMailbox);
 2497              		.loc 1 986 3 is_stmt 1 view .LVU772
 2498 00b2 074B     		ldr	r3, .L137+8
 2499 00b4 6A46     		mov	r2, sp
 2500 00b6 0748     		ldr	r0, .L137+12
 2501              	.LVL132:
 2502              		.loc 1 986 3 is_stmt 0 view .LVU773
 2503 00b8 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 2504              	.LVL133:
 987:Src/main.c    **** 
 988:Src/main.c    **** }
 2505              		.loc 1 988 1 view .LVU774
 2506 00bc 02B0     		add	sp, sp, #8
 2507              	.LCFI54:
 2508              		.cfi_def_cfa_offset 40
 2509              		@ sp needed
 2510 00be BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2511              	.LCFI55:
 2512              		.cfi_restore 14
 2513              		.cfi_restore 8
 2514              		.cfi_restore 7
 2515              		.cfi_restore 6
 2516              		.cfi_restore 5
 2517              		.cfi_restore 4
 2518              		.cfi_def_cfa_offset 16
 2519              	.LVL134:
 2520              		.loc 1 988 1 view .LVU775
 2521 00c2 04B0     		add	sp, sp, #16
 2522              	.LCFI56:
 2523              		.cfi_def_cfa_offset 0
 2524 00c4 7047     		bx	lr
 2525              	.L138:
 2526 00c6 00BF     		.align	2
 2527              	.L137:
 2528 00c8 00000000 		.word	minimum
 2529 00cc 00000000 		.word	TxHeader
 2530 00d0 00000000 		.word	TxMailbox
 2531 00d4 00000000 		.word	hcan
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 68


 2532              		.cfi_endproc
 2533              	.LFE83:
 2535              		.section	.text.main,"ax",%progbits
 2536              		.align	1
 2537              		.global	main
 2538              		.syntax unified
 2539              		.thumb
 2540              		.thumb_func
 2541              		.fpu softvfp
 2543              	main:
 2544              	.LFB66:
 120:Src/main.c    ****   /* USER CODE BEGIN 1 */
 2545              		.loc 1 120 1 is_stmt 1 view -0
 2546              		.cfi_startproc
 2547              		@ args = 0, pretend = 0, frame = 40
 2548              		@ frame_needed = 1, uses_anonymous_args = 0
 2549 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2550              	.LCFI57:
 2551              		.cfi_def_cfa_offset 36
 2552              		.cfi_offset 4, -36
 2553              		.cfi_offset 5, -32
 2554              		.cfi_offset 6, -28
 2555              		.cfi_offset 7, -24
 2556              		.cfi_offset 8, -20
 2557              		.cfi_offset 9, -16
 2558              		.cfi_offset 10, -12
 2559              		.cfi_offset 11, -8
 2560              		.cfi_offset 14, -4
 2561 0004 A3B0     		sub	sp, sp, #140
 2562              	.LCFI58:
 2563              		.cfi_def_cfa_offset 176
 2564 0006 18AF     		add	r7, sp, #96
 2565              	.LCFI59:
 2566              		.cfi_def_cfa 7, 80
 128:Src/main.c    **** 
 2567              		.loc 1 128 3 view .LVU777
 2568 0008 FFF7FEFF 		bl	HAL_Init
 2569              	.LVL135:
 135:Src/main.c    **** 
 2570              		.loc 1 135 3 view .LVU778
 2571 000c FFF7FEFF 		bl	SystemClock_Config
 2572              	.LVL136:
 142:Src/main.c    ****   MX_ADC1_Init();
 2573              		.loc 1 142 3 view .LVU779
 2574 0010 FFF7FEFF 		bl	MX_GPIO_Init
 2575              	.LVL137:
 143:Src/main.c    ****   MX_CAN_Init();
 2576              		.loc 1 143 3 view .LVU780
 2577 0014 FFF7FEFF 		bl	MX_ADC1_Init
 2578              	.LVL138:
 144:Src/main.c    ****   //MX_SPI1_Init();
 2579              		.loc 1 144 3 view .LVU781
 2580 0018 FFF7FEFF 		bl	MX_CAN_Init
 2581              	.LVL139:
 146:Src/main.c    ****   /* USER CODE BEGIN 2 */
 2582              		.loc 1 146 3 view .LVU782
 2583 001c FFF7FEFF 		bl	MX_TIM2_Init
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 69


 2584              	.LVL140:
 149:Src/main.c    ****   initPECTable();
 2585              		.loc 1 149 3 view .LVU783
 2586 0020 FFF7FEFF 		bl	SPI_Init
 2587              	.LVL141:
 150:Src/main.c    ****   loadConfig(&BMSconfig);
 2588              		.loc 1 150 3 view .LVU784
 2589 0024 FFF7FEFF 		bl	initPECTable
 2590              	.LVL142:
 151:Src/main.c    ****   writeConfigAll(BMSconfig);
 2591              		.loc 1 151 3 view .LVU785
 2592 0028 AC4C     		ldr	r4, .L161
 2593 002a 2046     		mov	r0, r4
 2594 002c FFF7FEFF 		bl	loadConfig
 2595              	.LVL143:
 152:Src/main.c    **** 
 2596              		.loc 1 152 3 view .LVU786
 2597 0030 D4F80090 		ldr	r9, [r4]	@ unaligned
 2598 0034 D4F80480 		ldr	r8, [r4, #4]	@ unaligned
 2599 0038 A668     		ldr	r6, [r4, #8]	@ unaligned
 2600 003a E568     		ldr	r5, [r4, #12]	@ unaligned
 2601 003c 4822     		movs	r2, #72
 2602 003e 04F11001 		add	r1, r4, #16
 2603 0042 6846     		mov	r0, sp
 2604 0044 FFF7FEFF 		bl	memcpy
 2605              	.LVL144:
 2606 0048 4846     		mov	r0, r9
 2607 004a 4146     		mov	r1, r8
 2608 004c 3246     		mov	r2, r6
 2609 004e 2B46     		mov	r3, r5
 2610 0050 FFF7FEFF 		bl	writeConfigAll
 2611              	.LVL145:
 154:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2612              		.loc 1 154 3 view .LVU787
 154:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2613              		.loc 1 154 49 is_stmt 0 view .LVU788
 2614 0054 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 154:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2615              		.loc 1 154 29 view .LVU789
 2616 0058 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 2617              	.LVL146:
 154:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2618              		.loc 1 154 12 view .LVU790
 2619 005a 01FB03F3 		mul	r3, r1, r3
 2620              	.LVL147:
 154:Src/main.c    ****   uint16_t temp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2621              		.loc 1 154 12 view .LVU791
 2622 005e 5A00     		lsls	r2, r3, #1
 2623 0060 0732     		adds	r2, r2, #7
 2624 0062 D208     		lsrs	r2, r2, #3
 2625 0064 6846     		mov	r0, sp
 2626 0066 A0EBC202 		sub	r2, r0, r2, lsl #3
 2627 006a 9546     		mov	sp, r2
 2628 006c 18AD     		add	r5, sp, #96
 2629              	.LVL148:
 155:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 2630              		.loc 1 155 3 is_stmt 1 view .LVU792
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 70


 155:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 2631              		.loc 1 155 46 is_stmt 0 view .LVU793
 2632 006e 94F82320 		ldrb	r2, [r4, #35]	@ zero_extendqisi2
 2633              	.LVL149:
 155:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 2634              		.loc 1 155 12 view .LVU794
 2635 0072 02FB01F2 		mul	r2, r2, r1
 2636              	.LVL150:
 155:Src/main.c    ****   bool tempdisconnect[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];      //12, 4
 2637              		.loc 1 155 12 view .LVU795
 2638 0076 5000     		lsls	r0, r2, #1
 2639 0078 0730     		adds	r0, r0, #7
 2640 007a C008     		lsrs	r0, r0, #3
 2641 007c 6E46     		mov	r6, sp
 2642 007e A6EBC000 		sub	r0, r6, r0, lsl #3
 2643 0082 8546     		mov	sp, r0
 2644 0084 18A8     		add	r0, sp, #96
 2645 0086 3860     		str	r0, [r7]
 2646              	.LVL151:
 156:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2647              		.loc 1 156 3 is_stmt 1 view .LVU796
 156:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2648              		.loc 1 156 8 is_stmt 0 view .LVU797
 2649 0088 0732     		adds	r2, r2, #7
 2650 008a D208     		lsrs	r2, r2, #3
 2651 008c 6846     		mov	r0, sp
 2652              	.LVL152:
 156:Src/main.c    ****   bool overtemp[BMSconfig.numOfICs][BMSconfig.numOfTempPerIC];            //12, 4
 2653              		.loc 1 156 8 view .LVU798
 2654 008e A0EBC202 		sub	r2, r0, r2, lsl #3
 2655 0092 9546     		mov	sp, r2
 2656 0094 18A8     		add	r0, sp, #96
 2657              	.LVL153:
 157:Src/main.c    ****   bool connection[BMSconfig.numOfICs][BMSconfig.numOfCellInputs];         //12, 12
 2658              		.loc 1 157 3 is_stmt 1 view .LVU799
 158:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8
 2659              		.loc 1 158 3 view .LVU800
 158:Src/main.c    ****   bool discharge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];          //12, 8
 2660              		.loc 1 158 8 is_stmt 0 view .LVU801
 2661 0096 0733     		adds	r3, r3, #7
 2662 0098 DB08     		lsrs	r3, r3, #3
 2663 009a A2EBC303 		sub	r3, r2, r3, lsl #3
 2664 009e 9D46     		mov	sp, r3
 2665 00a0 0DF1600B 		add	fp, sp, #96
 2666              	.LVL154:
 159:Src/main.c    ****   bool fulldischarge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];    //12, 8
 2667              		.loc 1 159 3 is_stmt 1 view .LVU802
 159:Src/main.c    ****   bool fulldischarge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];    //12, 8
 2668              		.loc 1 159 47 is_stmt 0 view .LVU803
 2669 00a4 94F82230 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 2670              	.LVL155:
 159:Src/main.c    ****   bool fulldischarge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];    //12, 8
 2671              		.loc 1 159 8 view .LVU804
 2672 00a8 03FB01F3 		mul	r3, r3, r1
 2673              	.LVL156:
 159:Src/main.c    ****   bool fulldischarge[BMSconfig.numOfICs][BMSconfig.numOfCellsPerIC];    //12, 8
 2674              		.loc 1 159 8 view .LVU805
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 71


 2675 00ac 0733     		adds	r3, r3, #7
 2676 00ae DB08     		lsrs	r3, r3, #3
 2677 00b0 DB00     		lsls	r3, r3, #3
 2678 00b2 ADEB030D 		sub	sp, sp, r3
 2679 00b6 18AA     		add	r2, sp, #96
 2680 00b8 7A61     		str	r2, [r7, #20]
 2681              	.LVL157:
 160:Src/main.c    **** 
 2682              		.loc 1 160 3 is_stmt 1 view .LVU806
 160:Src/main.c    **** 
 2683              		.loc 1 160 8 is_stmt 0 view .LVU807
 2684 00ba ADEB030D 		sub	sp, sp, r3
 2685 00be 18AA     		add	r2, sp, #96
 2686              	.LVL158:
 160:Src/main.c    **** 
 2687              		.loc 1 160 8 view .LVU808
 2688 00c0 3A61     		str	r2, [r7, #16]
 2689              	.LVL159:
 162:Src/main.c    ****   fulldischarge[0][1] = 0;
 2690              		.loc 1 162 3 is_stmt 1 view .LVU809
 162:Src/main.c    ****   fulldischarge[0][1] = 0;
 2691              		.loc 1 162 23 is_stmt 0 view .LVU810
 2692 00c2 0023     		movs	r3, #0
 2693 00c4 8DF86030 		strb	r3, [sp, #96]
 163:Src/main.c    ****   fulldischarge[0][2] = 0;
 2694              		.loc 1 163 3 is_stmt 1 view .LVU811
 163:Src/main.c    ****   fulldischarge[0][2] = 0;
 2695              		.loc 1 163 23 is_stmt 0 view .LVU812
 2696 00c8 8DF86130 		strb	r3, [sp, #97]
 164:Src/main.c    ****   fulldischarge[0][3] = 0;
 2697              		.loc 1 164 3 is_stmt 1 view .LVU813
 164:Src/main.c    ****   fulldischarge[0][3] = 0;
 2698              		.loc 1 164 23 is_stmt 0 view .LVU814
 2699 00cc 8DF86230 		strb	r3, [sp, #98]
 165:Src/main.c    ****   fulldischarge[0][4] = 0;
 2700              		.loc 1 165 3 is_stmt 1 view .LVU815
 165:Src/main.c    ****   fulldischarge[0][4] = 0;
 2701              		.loc 1 165 23 is_stmt 0 view .LVU816
 2702 00d0 8DF86330 		strb	r3, [sp, #99]
 166:Src/main.c    ****   fulldischarge[0][5] = 0;
 2703              		.loc 1 166 3 is_stmt 1 view .LVU817
 166:Src/main.c    ****   fulldischarge[0][5] = 0;
 2704              		.loc 1 166 23 is_stmt 0 view .LVU818
 2705 00d4 8DF86430 		strb	r3, [sp, #100]
 167:Src/main.c    ****   fulldischarge[0][6] = 0;
 2706              		.loc 1 167 3 is_stmt 1 view .LVU819
 167:Src/main.c    ****   fulldischarge[0][6] = 0;
 2707              		.loc 1 167 23 is_stmt 0 view .LVU820
 2708 00d8 8DF86530 		strb	r3, [sp, #101]
 168:Src/main.c    ****   fulldischarge[0][7] = 0;
 2709              		.loc 1 168 3 is_stmt 1 view .LVU821
 168:Src/main.c    ****   fulldischarge[0][7] = 0;
 2710              		.loc 1 168 23 is_stmt 0 view .LVU822
 2711 00dc 8DF86630 		strb	r3, [sp, #102]
 169:Src/main.c    ****   fulldischarge[0][8] = 0;
 2712              		.loc 1 169 3 is_stmt 1 view .LVU823
 169:Src/main.c    ****   fulldischarge[0][8] = 0;
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 72


 2713              		.loc 1 169 23 is_stmt 0 view .LVU824
 2714 00e0 8DF86730 		strb	r3, [sp, #103]
 170:Src/main.c    ****   fulldischarge[0][9] = 0;
 2715              		.loc 1 170 3 is_stmt 1 view .LVU825
 170:Src/main.c    ****   fulldischarge[0][9] = 0;
 2716              		.loc 1 170 23 is_stmt 0 view .LVU826
 2717 00e4 8DF86830 		strb	r3, [sp, #104]
 171:Src/main.c    ****   fulldischarge[0][10] = 0;
 2718              		.loc 1 171 3 is_stmt 1 view .LVU827
 171:Src/main.c    ****   fulldischarge[0][10] = 0;
 2719              		.loc 1 171 23 is_stmt 0 view .LVU828
 2720 00e8 8DF86930 		strb	r3, [sp, #105]
 172:Src/main.c    ****   fulldischarge[0][11] = 0;
 2721              		.loc 1 172 3 is_stmt 1 view .LVU829
 172:Src/main.c    ****   fulldischarge[0][11] = 0;
 2722              		.loc 1 172 24 is_stmt 0 view .LVU830
 2723 00ec 8DF86A30 		strb	r3, [sp, #106]
 173:Src/main.c    **** 
 2724              		.loc 1 173 3 is_stmt 1 view .LVU831
 173:Src/main.c    **** 
 2725              		.loc 1 173 24 is_stmt 0 view .LVU832
 2726 00f0 8DF86B30 		strb	r3, [sp, #107]
 175:Src/main.c    ****   bool treturn = false;
 2727              		.loc 1 175 3 is_stmt 1 view .LVU833
 2728              	.LVL160:
 176:Src/main.c    ****   bool disconnectFault = false;
 2729              		.loc 1 176 3 view .LVU834
 177:Src/main.c    ****   uint8_t disconnectedCell;
 2730              		.loc 1 177 3 view .LVU835
 178:Src/main.c    **** 
 2731              		.loc 1 178 3 view .LVU836
 180:Src/main.c    ****   bool faults[5];
 2732              		.loc 1 180 3 view .LVU837
 181:Src/main.c    **** 
 2733              		.loc 1 181 3 view .LVU838
 183:Src/main.c    ****   bool CHARGE_EN = 0;
 2734              		.loc 1 183 3 view .LVU839
 184:Src/main.c    **** 
 2735              		.loc 1 184 3 view .LVU840
 188:Src/main.c    ****   bool lastButton = 0;
 2736              		.loc 1 188 3 view .LVU841
 189:Src/main.c    ****   bool fault = false;
 2737              		.loc 1 189 3 view .LVU842
 190:Src/main.c    **** 
 2738              		.loc 1 190 3 view .LVU843
 190:Src/main.c    **** 
 2739              		.loc 1 190 8 is_stmt 0 view .LVU844
 2740 00f4 7B60     		str	r3, [r7, #4]
 2741 00f6 8246     		mov	r10, r0
 2742 00f8 5B46     		mov	r3, fp
 2743 00fa AB46     		mov	fp, r5
 2744              	.LVL161:
 190:Src/main.c    **** 
 2745              		.loc 1 190 8 view .LVU845
 2746 00fc 1D46     		mov	r5, r3
 2747              	.LVL162:
 190:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 73


 2748              		.loc 1 190 8 view .LVU846
 2749 00fe CDE0     		b	.L151
 2750              	.LVL163:
 2751              	.L140:
 2752              	.LBB29:
 2753              	.LBB30:
 218:Src/main.c    ****         voltage[0][i] = 40000;
 2754              		.loc 1 218 7 discriminator 1 view .LVU847
 2755 0100 0B2B     		cmp	r3, #11
 2756 0102 06D8     		bhi	.L156
 219:Src/main.c    ****       fault = false;
 2757              		.loc 1 219 9 is_stmt 1 discriminator 3 view .LVU848
 219:Src/main.c    ****       fault = false;
 2758              		.loc 1 219 23 is_stmt 0 discriminator 3 view .LVU849
 2759 0104 49F64042 		movw	r2, #40000
 2760 0108 2BF81320 		strh	r2, [fp, r3, lsl #1]	@ movhi
 218:Src/main.c    ****         voltage[0][i] = 40000;
 2761              		.loc 1 218 36 discriminator 3 view .LVU850
 2762 010c 0133     		adds	r3, r3, #1
 2763              	.LVL164:
 218:Src/main.c    ****         voltage[0][i] = 40000;
 2764              		.loc 1 218 36 discriminator 3 view .LVU851
 2765 010e DBB2     		uxtb	r3, r3
 2766              	.LVL165:
 218:Src/main.c    ****         voltage[0][i] = 40000;
 2767              		.loc 1 218 36 discriminator 3 view .LVU852
 2768 0110 F6E7     		b	.L140
 2769              	.L156:
 218:Src/main.c    ****         voltage[0][i] = 40000;
 2770              		.loc 1 218 36 discriminator 3 view .LVU853
 2771              	.LBE30:
 220:Src/main.c    ****     }
 2772              		.loc 1 220 13 view .LVU854
 2773 0112 0023     		movs	r3, #0
 2774              	.LVL166:
 220:Src/main.c    ****     }
 2775              		.loc 1 220 13 view .LVU855
 2776 0114 7B60     		str	r3, [r7, #4]
 2777              	.LVL167:
 220:Src/main.c    ****     }
 2778              		.loc 1 220 13 view .LVU856
 2779 0116 C6E0     		b	.L141
 2780              	.LVL168:
 2781              	.L159:
 2782              	.LBB31:
 224:Src/main.c    ****         voltage[0][i] = 40000;
 2783              		.loc 1 224 20 view .LVU857
 2784 0118 0023     		movs	r3, #0
 2785              	.L143:
 2786              	.LVL169:
 224:Src/main.c    ****         voltage[0][i] = 40000;
 2787              		.loc 1 224 7 discriminator 1 view .LVU858
 2788 011a 0B2B     		cmp	r3, #11
 2789 011c 06D8     		bhi	.L157
 225:Src/main.c    ****       voltage[0][0] = 40600;
 2790              		.loc 1 225 9 is_stmt 1 discriminator 3 view .LVU859
 225:Src/main.c    ****       voltage[0][0] = 40600;
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 74


 2791              		.loc 1 225 23 is_stmt 0 discriminator 3 view .LVU860
 2792 011e 49F64042 		movw	r2, #40000
 2793 0122 2BF81320 		strh	r2, [fp, r3, lsl #1]	@ movhi
 224:Src/main.c    ****         voltage[0][i] = 40000;
 2794              		.loc 1 224 36 discriminator 3 view .LVU861
 2795 0126 0133     		adds	r3, r3, #1
 2796              	.LVL170:
 224:Src/main.c    ****         voltage[0][i] = 40000;
 2797              		.loc 1 224 36 discriminator 3 view .LVU862
 2798 0128 DBB2     		uxtb	r3, r3
 2799              	.LVL171:
 224:Src/main.c    ****         voltage[0][i] = 40000;
 2800              		.loc 1 224 36 discriminator 3 view .LVU863
 2801 012a F6E7     		b	.L143
 2802              	.L157:
 224:Src/main.c    ****         voltage[0][i] = 40000;
 2803              		.loc 1 224 36 discriminator 3 view .LVU864
 2804              	.LBE31:
 226:Src/main.c    ****       voltage[0][1] = 40600;
 2805              		.loc 1 226 7 is_stmt 1 view .LVU865
 226:Src/main.c    ****       voltage[0][1] = 40600;
 2806              		.loc 1 226 21 is_stmt 0 view .LVU866
 2807 012c 49F69863 		movw	r3, #40600
 2808              	.LVL172:
 226:Src/main.c    ****       voltage[0][1] = 40600;
 2809              		.loc 1 226 21 view .LVU867
 2810 0130 ABF80030 		strh	r3, [fp]	@ movhi
 227:Src/main.c    ****       voltage[0][3] = 40600;
 2811              		.loc 1 227 7 is_stmt 1 view .LVU868
 227:Src/main.c    ****       voltage[0][3] = 40600;
 2812              		.loc 1 227 21 is_stmt 0 view .LVU869
 2813 0134 ABF80230 		strh	r3, [fp, #2]	@ movhi
 228:Src/main.c    ****       fault = false;
 2814              		.loc 1 228 7 is_stmt 1 view .LVU870
 228:Src/main.c    ****       fault = false;
 2815              		.loc 1 228 21 is_stmt 0 view .LVU871
 2816 0138 ABF80630 		strh	r3, [fp, #6]	@ movhi
 229:Src/main.c    ****     }
 2817              		.loc 1 229 7 is_stmt 1 view .LVU872
 2818              	.LVL173:
 229:Src/main.c    ****     }
 2819              		.loc 1 229 13 is_stmt 0 view .LVU873
 2820 013c 0023     		movs	r3, #0
 2821 013e 7B60     		str	r3, [r7, #4]
 2822 0140 B6E0     		b	.L144
 2823              	.LVL174:
 2824              	.L146:
 236:Src/main.c    **** 
 2825              		.loc 1 236 5 is_stmt 1 view .LVU874
 236:Src/main.c    **** 
 2826              		.loc 1 236 8 is_stmt 0 view .LVU875
 2827 0142 032B     		cmp	r3, #3
 2828 0144 00F0BC80 		beq	.L158
 2829              	.LVL175:
 2830              	.L148:
 245:Src/main.c    **** 
 2831              		.loc 1 245 5 is_stmt 1 view .LVU876
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 75


 245:Src/main.c    **** 
 2832              		.loc 1 245 26 is_stmt 0 view .LVU877
 2833 0148 4FF08043 		mov	r3, #1073741824
 2834 014c 5B6A     		ldr	r3, [r3, #36]
 245:Src/main.c    **** 
 2835              		.loc 1 245 14 view .LVU878
 2836 014e 9BB2     		uxth	r3, r3
 2837              	.LVL176:
 247:Src/main.c    ****       HAL_GPIO_WritePin(GPIOC, DEBUG_Pin, GPIO_PIN_RESET);
 2838              		.loc 1 247 5 is_stmt 1 view .LVU879
 247:Src/main.c    ****       HAL_GPIO_WritePin(GPIOC, DEBUG_Pin, GPIO_PIN_RESET);
 2839              		.loc 1 247 8 is_stmt 0 view .LVU880
 2840 0150 44F62062 		movw	r2, #20000
 2841 0154 9342     		cmp	r3, r2
 2842 0156 08D9     		bls	.L150
 248:Src/main.c    ****       HAL_TIM_Base_Stop(&htim2);
 2843              		.loc 1 248 7 is_stmt 1 view .LVU881
 2844 0158 0022     		movs	r2, #0
 2845 015a 4FF40051 		mov	r1, #8192
 2846 015e 6048     		ldr	r0, .L161+4
 2847 0160 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2848              	.LVL177:
 249:Src/main.c    ****     }
 2849              		.loc 1 249 7 view .LVU882
 2850 0164 5F48     		ldr	r0, .L161+8
 2851 0166 FFF7FEFF 		bl	HAL_TIM_Base_Stop
 2852              	.LVL178:
 2853              	.L150:
 252:Src/main.c    **** 
 2854              		.loc 1 252 5 view .LVU883
 2855 016a 5C4C     		ldr	r4, .L161
 2856 016c CDF848B0 		str	fp, [sp, #72]
 2857 0170 2368     		ldr	r3, [r4]	@ unaligned
 2858 0172 FB60     		str	r3, [r7, #12]
 2859 0174 D4F80490 		ldr	r9, [r4, #4]	@ unaligned
 2860 0178 D4F80880 		ldr	r8, [r4, #8]	@ unaligned
 2861 017c E668     		ldr	r6, [r4, #12]	@ unaligned
 2862 017e 4822     		movs	r2, #72
 2863 0180 04F11001 		add	r1, r4, #16
 2864 0184 6846     		mov	r0, sp
 2865 0186 FFF7FEFF 		bl	memcpy
 2866              	.LVL179:
 2867 018a F868     		ldr	r0, [r7, #12]
 2868 018c 4946     		mov	r1, r9
 2869 018e 4246     		mov	r2, r8
 2870 0190 3346     		mov	r3, r6
 2871 0192 FFF7FEFF 		bl	BMSVINF_message
 2872              	.LVL180:
 254:Src/main.c    **** 
 2873              		.loc 1 254 5 view .LVU884
 2874 0196 3B69     		ldr	r3, [r7, #16]
 2875 0198 1593     		str	r3, [sp, #84]
 2876 019a 7A68     		ldr	r2, [r7, #4]
 2877 019c 1492     		str	r2, [sp, #80]
 2878 019e 7A69     		ldr	r2, [r7, #20]
 2879 01a0 1392     		str	r2, [sp, #76]
 2880 01a2 CDF848B0 		str	fp, [sp, #72]
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 76


 2881 01a6 2168     		ldr	r1, [r4]	@ unaligned
 2882 01a8 F960     		str	r1, [r7, #12]
 2883 01aa D4F80490 		ldr	r9, [r4, #4]	@ unaligned
 2884 01ae D4F80880 		ldr	r8, [r4, #8]	@ unaligned
 2885 01b2 E668     		ldr	r6, [r4, #12]	@ unaligned
 2886 01b4 4822     		movs	r2, #72
 2887 01b6 04F11001 		add	r1, r4, #16
 2888 01ba 6846     		mov	r0, sp
 2889 01bc FFF7FEFF 		bl	memcpy
 2890              	.LVL181:
 2891 01c0 F868     		ldr	r0, [r7, #12]
 2892 01c2 4946     		mov	r1, r9
 2893 01c4 4246     		mov	r2, r8
 2894 01c6 3346     		mov	r3, r6
 2895 01c8 FFF7FEFF 		bl	setDischarge
 2896              	.LVL182:
 256:Src/main.c    **** 
 2897              		.loc 1 256 5 view .LVU885
 2898 01cc FFF7FEFF 		bl	setChargerTxData
 2899              	.LVL183:
 271:Src/main.c    **** 
 2900              		.loc 1 271 5 view .LVU886
 273:Src/main.c    ****     tempdisconnect[0][1] = 0;
 2901              		.loc 1 273 5 view .LVU887
 273:Src/main.c    ****     tempdisconnect[0][1] = 0;
 2902              		.loc 1 273 26 is_stmt 0 view .LVU888
 2903 01d0 0026     		movs	r6, #0
 2904 01d2 8AF80060 		strb	r6, [r10]
 274:Src/main.c    ****     tempdisconnect[0][2] = 0;
 2905              		.loc 1 274 5 is_stmt 1 view .LVU889
 274:Src/main.c    ****     tempdisconnect[0][2] = 0;
 2906              		.loc 1 274 26 is_stmt 0 view .LVU890
 2907 01d6 8AF80160 		strb	r6, [r10, #1]
 275:Src/main.c    ****     tempdisconnect[0][3] = 0;
 2908              		.loc 1 275 5 is_stmt 1 view .LVU891
 275:Src/main.c    ****     tempdisconnect[0][3] = 0;
 2909              		.loc 1 275 26 is_stmt 0 view .LVU892
 2910 01da 8AF80260 		strb	r6, [r10, #2]
 276:Src/main.c    **** 
 2911              		.loc 1 276 5 is_stmt 1 view .LVU893
 276:Src/main.c    **** 
 2912              		.loc 1 276 26 is_stmt 0 view .LVU894
 2913 01de 8AF80360 		strb	r6, [r10, #3]
 278:Src/main.c    ****     connection[0][1] = 1;
 2914              		.loc 1 278 5 is_stmt 1 view .LVU895
 278:Src/main.c    ****     connection[0][1] = 1;
 2915              		.loc 1 278 22 is_stmt 0 view .LVU896
 2916 01e2 0123     		movs	r3, #1
 2917 01e4 2B70     		strb	r3, [r5]
 279:Src/main.c    ****     connection[0][2] = 1;
 2918              		.loc 1 279 5 is_stmt 1 view .LVU897
 279:Src/main.c    ****     connection[0][2] = 1;
 2919              		.loc 1 279 22 is_stmt 0 view .LVU898
 2920 01e6 6B70     		strb	r3, [r5, #1]
 280:Src/main.c    ****     connection[0][3] = 1;
 2921              		.loc 1 280 5 is_stmt 1 view .LVU899
 280:Src/main.c    ****     connection[0][3] = 1;
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 77


 2922              		.loc 1 280 22 is_stmt 0 view .LVU900
 2923 01e8 AB70     		strb	r3, [r5, #2]
 281:Src/main.c    ****     connection[0][4] = 1;
 2924              		.loc 1 281 5 is_stmt 1 view .LVU901
 281:Src/main.c    ****     connection[0][4] = 1;
 2925              		.loc 1 281 22 is_stmt 0 view .LVU902
 2926 01ea EB70     		strb	r3, [r5, #3]
 282:Src/main.c    ****     connection[0][5] = 1;
 2927              		.loc 1 282 5 is_stmt 1 view .LVU903
 282:Src/main.c    ****     connection[0][5] = 1;
 2928              		.loc 1 282 22 is_stmt 0 view .LVU904
 2929 01ec 2B71     		strb	r3, [r5, #4]
 283:Src/main.c    ****     connection[0][6] = 1;
 2930              		.loc 1 283 5 is_stmt 1 view .LVU905
 283:Src/main.c    ****     connection[0][6] = 1;
 2931              		.loc 1 283 22 is_stmt 0 view .LVU906
 2932 01ee 6B71     		strb	r3, [r5, #5]
 284:Src/main.c    ****     connection[0][7] = 1;
 2933              		.loc 1 284 5 is_stmt 1 view .LVU907
 284:Src/main.c    ****     connection[0][7] = 1;
 2934              		.loc 1 284 22 is_stmt 0 view .LVU908
 2935 01f0 AB71     		strb	r3, [r5, #6]
 285:Src/main.c    ****     connection[0][8] = 1;
 2936              		.loc 1 285 5 is_stmt 1 view .LVU909
 285:Src/main.c    ****     connection[0][8] = 1;
 2937              		.loc 1 285 22 is_stmt 0 view .LVU910
 2938 01f2 EB71     		strb	r3, [r5, #7]
 286:Src/main.c    ****     connection[0][9] = 1;
 2939              		.loc 1 286 5 is_stmt 1 view .LVU911
 286:Src/main.c    ****     connection[0][9] = 1;
 2940              		.loc 1 286 22 is_stmt 0 view .LVU912
 2941 01f4 2B72     		strb	r3, [r5, #8]
 287:Src/main.c    ****     connection[0][10] = 1;
 2942              		.loc 1 287 5 is_stmt 1 view .LVU913
 287:Src/main.c    ****     connection[0][10] = 1;
 2943              		.loc 1 287 22 is_stmt 0 view .LVU914
 2944 01f6 6B72     		strb	r3, [r5, #9]
 288:Src/main.c    ****     connection[0][11] = 1;
 2945              		.loc 1 288 5 is_stmt 1 view .LVU915
 288:Src/main.c    ****     connection[0][11] = 1;
 2946              		.loc 1 288 23 is_stmt 0 view .LVU916
 2947 01f8 AB72     		strb	r3, [r5, #10]
 289:Src/main.c    **** 
 2948              		.loc 1 289 5 is_stmt 1 view .LVU917
 289:Src/main.c    **** 
 2949              		.loc 1 289 23 is_stmt 0 view .LVU918
 2950 01fa EB72     		strb	r3, [r5, #11]
 291:Src/main.c    ****     CELLVAL_message(BMSconfig, voltage, temp, connection, discharge, tempdisconnect, vreturn);
 2951              		.loc 1 291 5 is_stmt 1 view .LVU919
 2952 01fc 07F11803 		add	r3, r7, #24
 2953              	.LVL184:
 291:Src/main.c    ****     CELLVAL_message(BMSconfig, voltage, temp, connection, discharge, tempdisconnect, vreturn);
 2954              		.loc 1 291 5 is_stmt 0 view .LVU920
 2955 0200 1393     		str	r3, [sp, #76]
 2956 0202 07F12003 		add	r3, r7, #32
 2957              	.LVL185:
 291:Src/main.c    ****     CELLVAL_message(BMSconfig, voltage, temp, connection, discharge, tempdisconnect, vreturn);
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 78


 2958              		.loc 1 291 5 view .LVU921
 2959 0206 1293     		str	r3, [sp, #72]
 2960 0208 2168     		ldr	r1, [r4]	@ unaligned
 2961 020a F960     		str	r1, [r7, #12]
 2962 020c 6168     		ldr	r1, [r4, #4]	@ unaligned
 2963 020e B960     		str	r1, [r7, #8]
 2964 0210 D4F80890 		ldr	r9, [r4, #8]	@ unaligned
 2965 0214 D4F80C80 		ldr	r8, [r4, #12]	@ unaligned
 2966 0218 4822     		movs	r2, #72
 2967 021a 04F11001 		add	r1, r4, #16
 2968 021e 6846     		mov	r0, sp
 2969 0220 FFF7FEFF 		bl	memcpy
 2970              	.LVL186:
 291:Src/main.c    ****     CELLVAL_message(BMSconfig, voltage, temp, connection, discharge, tempdisconnect, vreturn);
 2971              		.loc 1 291 5 view .LVU922
 2972 0224 F868     		ldr	r0, [r7, #12]
 2973 0226 B968     		ldr	r1, [r7, #8]
 2974 0228 4A46     		mov	r2, r9
 2975 022a 4346     		mov	r3, r8
 2976 022c FFF7FEFF 		bl	BMSSTAT_message
 2977              	.LVL187:
 292:Src/main.c    **** 
 2978              		.loc 1 292 5 is_stmt 1 view .LVU923
 2979 0230 1796     		str	r6, [sp, #92]
 2980 0232 CDF858A0 		str	r10, [sp, #88]
 2981 0236 7A69     		ldr	r2, [r7, #20]
 2982 0238 1592     		str	r2, [sp, #84]
 2983 023a 1495     		str	r5, [sp, #80]
 2984 023c 3A68     		ldr	r2, [r7]
 2985 023e 1392     		str	r2, [sp, #76]
 2986 0240 CDF848B0 		str	fp, [sp, #72]
 2987 0244 2268     		ldr	r2, [r4]	@ unaligned
 2988 0246 FA60     		str	r2, [r7, #12]
 2989 0248 D4F80490 		ldr	r9, [r4, #4]	@ unaligned
 2990 024c D4F80880 		ldr	r8, [r4, #8]	@ unaligned
 2991 0250 E668     		ldr	r6, [r4, #12]	@ unaligned
 2992 0252 4822     		movs	r2, #72
 2993 0254 04F11001 		add	r1, r4, #16
 2994 0258 6846     		mov	r0, sp
 2995 025a FFF7FEFF 		bl	memcpy
 2996              	.LVL188:
 2997 025e F868     		ldr	r0, [r7, #12]
 2998 0260 4946     		mov	r1, r9
 2999 0262 4246     		mov	r2, r8
 3000 0264 3346     		mov	r3, r6
 3001 0266 FFF7FEFF 		bl	CELLVAL_message
 3002              	.LVL189:
 294:Src/main.c    **** 
 3003              		.loc 1 294 5 view .LVU924
 3004 026a CDF84CB0 		str	fp, [sp, #76]
 3005 026e 3B69     		ldr	r3, [r7, #16]
 3006 0270 1293     		str	r3, [sp, #72]
 3007 0272 D4F80090 		ldr	r9, [r4]	@ unaligned
 3008 0276 D4F80480 		ldr	r8, [r4, #4]	@ unaligned
 3009 027a A668     		ldr	r6, [r4, #8]	@ unaligned
 3010 027c E468     		ldr	r4, [r4, #12]	@ unaligned
 3011 027e 4822     		movs	r2, #72
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 79


 3012 0280 1949     		ldr	r1, .L161+12
 3013 0282 6846     		mov	r0, sp
 3014 0284 FFF7FEFF 		bl	memcpy
 3015              	.LVL190:
 3016 0288 4846     		mov	r0, r9
 3017 028a 4146     		mov	r1, r8
 3018 028c 3246     		mov	r2, r6
 3019 028e 2346     		mov	r3, r4
 3020 0290 FFF7FEFF 		bl	checkDischarge
 3021              	.LVL191:
 296:Src/main.c    **** 
 3022              		.loc 1 296 5 view .LVU925
 3023 0294 4FF4FA70 		mov	r0, #500
 3024 0298 FFF7FEFF 		bl	HAL_Delay
 3025              	.LVL192:
 3026              	.L151:
 296:Src/main.c    **** 
 3027              		.loc 1 296 5 is_stmt 0 view .LVU926
 3028              	.LBE29:
 198:Src/main.c    ****   {
 3029              		.loc 1 198 3 is_stmt 1 view .LVU927
 3030              	.LBB33:
 217:Src/main.c    ****       for (uint8_t i = 0; i < 12; i++)
 3031              		.loc 1 217 5 view .LVU928
 217:Src/main.c    ****       for (uint8_t i = 0; i < 12; i++)
 3032              		.loc 1 217 22 is_stmt 0 view .LVU929
 3033 029c 134B     		ldr	r3, .L161+16
 3034 029e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 217:Src/main.c    ****       for (uint8_t i = 0; i < 12; i++)
 3035              		.loc 1 217 8 view .LVU930
 3036 02a0 002B     		cmp	r3, #0
 3037 02a2 3FF42DAF 		beq	.L140
 3038              	.LVL193:
 3039              	.L141:
 223:Src/main.c    ****       for (uint8_t i = 0; i < 12; i++)
 3040              		.loc 1 223 5 is_stmt 1 view .LVU931
 223:Src/main.c    ****       for (uint8_t i = 0; i < 12; i++)
 3041              		.loc 1 223 22 is_stmt 0 view .LVU932
 3042 02a6 114B     		ldr	r3, .L161+16
 3043 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 223:Src/main.c    ****       for (uint8_t i = 0; i < 12; i++)
 3044              		.loc 1 223 8 view .LVU933
 3045 02aa 012B     		cmp	r3, #1
 3046 02ac 3FF434AF 		beq	.L159
 3047              	.LVL194:
 3048              	.L144:
 232:Src/main.c    ****       fault = true;
 3049              		.loc 1 232 5 is_stmt 1 view .LVU934
 232:Src/main.c    ****       fault = true;
 3050              		.loc 1 232 22 is_stmt 0 view .LVU935
 3051 02b0 0E4B     		ldr	r3, .L161+16
 3052 02b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 232:Src/main.c    ****       fault = true;
 3053              		.loc 1 232 8 view .LVU936
 3054 02b4 022B     		cmp	r3, #2
 3055 02b6 7FF444AF 		bne	.L146
 233:Src/main.c    ****     }
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 80


 3056              		.loc 1 233 13 view .LVU937
 3057 02ba 0122     		movs	r2, #1
 3058 02bc 7A60     		str	r2, [r7, #4]
 3059              	.LVL195:
 233:Src/main.c    ****     }
 3060              		.loc 1 233 13 view .LVU938
 3061 02be 40E7     		b	.L146
 3062              	.LVL196:
 3063              	.L158:
 3064              	.LBB32:
 238:Src/main.c    ****         voltage[0][i] = 41401;
 3065              		.loc 1 238 20 view .LVU939
 3066 02c0 0023     		movs	r3, #0
 3067              	.L147:
 3068              	.LVL197:
 238:Src/main.c    ****         voltage[0][i] = 41401;
 3069              		.loc 1 238 7 discriminator 1 view .LVU940
 3070 02c2 0B2B     		cmp	r3, #11
 3071 02c4 06D8     		bhi	.L160
 239:Src/main.c    ****       fault = false;
 3072              		.loc 1 239 9 is_stmt 1 discriminator 3 view .LVU941
 239:Src/main.c    ****       fault = false;
 3073              		.loc 1 239 23 is_stmt 0 discriminator 3 view .LVU942
 3074 02c6 4AF2B912 		movw	r2, #41401
 3075 02ca 2BF81320 		strh	r2, [fp, r3, lsl #1]	@ movhi
 238:Src/main.c    ****         voltage[0][i] = 41401;
 3076              		.loc 1 238 36 discriminator 3 view .LVU943
 3077 02ce 0133     		adds	r3, r3, #1
 3078              	.LVL198:
 238:Src/main.c    ****         voltage[0][i] = 41401;
 3079              		.loc 1 238 36 discriminator 3 view .LVU944
 3080 02d0 DBB2     		uxtb	r3, r3
 3081              	.LVL199:
 238:Src/main.c    ****         voltage[0][i] = 41401;
 3082              		.loc 1 238 36 discriminator 3 view .LVU945
 3083 02d2 F6E7     		b	.L147
 3084              	.L160:
 238:Src/main.c    ****         voltage[0][i] = 41401;
 3085              		.loc 1 238 36 discriminator 3 view .LVU946
 3086              	.LBE32:
 240:Src/main.c    **** 
 3087              		.loc 1 240 13 view .LVU947
 3088 02d4 0023     		movs	r3, #0
 3089              	.LVL200:
 240:Src/main.c    **** 
 3090              		.loc 1 240 13 view .LVU948
 3091 02d6 7B60     		str	r3, [r7, #4]
 3092              	.LVL201:
 240:Src/main.c    **** 
 3093              		.loc 1 240 13 view .LVU949
 3094 02d8 36E7     		b	.L148
 3095              	.L162:
 3096 02da 00BF     		.align	2
 3097              	.L161:
 3098 02dc 00000000 		.word	BMSconfig
 3099 02e0 00100140 		.word	1073811456
 3100 02e4 00000000 		.word	htim2
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 81


 3101 02e8 10000000 		.word	BMSconfig+16
 3102 02ec 00000000 		.word	.LANCHOR0
 3103              	.LBE33:
 3104              		.cfi_endproc
 3105              	.LFE66:
 3107              		.section	.text.BMSTINF_message,"ax",%progbits
 3108              		.align	1
 3109              		.global	BMSTINF_message
 3110              		.syntax unified
 3111              		.thumb
 3112              		.thumb_func
 3113              		.fpu softvfp
 3115              	BMSTINF_message:
 3116              	.LVL202:
 3117              	.LFB84:
 989:Src/main.c    **** 
 990:Src/main.c    **** void BMSTINF_message(BMSconfigStructTypedef cfg, uint16_t cellTemp[12][4]) {
 3118              		.loc 1 990 76 is_stmt 1 view -0
 3119              		.cfi_startproc
 3120              		@ args = 92, pretend = 16, frame = 8
 3121              		@ frame_needed = 0, uses_anonymous_args = 0
 3122              		.loc 1 990 76 is_stmt 0 view .LVU951
 3123 0000 84B0     		sub	sp, sp, #16
 3124              	.LCFI60:
 3125              		.cfi_def_cfa_offset 16
 3126 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3127              	.LCFI61:
 3128              		.cfi_def_cfa_offset 40
 3129              		.cfi_offset 4, -40
 3130              		.cfi_offset 5, -36
 3131              		.cfi_offset 6, -32
 3132              		.cfi_offset 7, -28
 3133              		.cfi_offset 8, -24
 3134              		.cfi_offset 14, -20
 3135 0006 82B0     		sub	sp, sp, #8
 3136              	.LCFI62:
 3137              		.cfi_def_cfa_offset 48
 3138 0008 08AC     		add	r4, sp, #32
 3139 000a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 3140 000e 1E9F     		ldr	r7, [sp, #120]
 991:Src/main.c    **** 
 992:Src/main.c    ****   uint16_t minT;
 3141              		.loc 1 992 3 is_stmt 1 view .LVU952
 993:Src/main.c    ****   uint8_t minCell;
 3142              		.loc 1 993 3 view .LVU953
 994:Src/main.c    ****   uint16_t maxT;
 3143              		.loc 1 994 3 view .LVU954
 995:Src/main.c    ****   uint8_t maxCell;
 3144              		.loc 1 995 3 view .LVU955
 996:Src/main.c    ****   uint16_t averageT;
 3145              		.loc 1 996 3 view .LVU956
 997:Src/main.c    ****   uint32_t sum = 0;
 3146              		.loc 1 997 3 view .LVU957
 3147              	.LVL203:
 998:Src/main.c    **** 
 999:Src/main.c    ****   minT = cellTemp[0][0];
 3148              		.loc 1 999 3 view .LVU958
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 82


 3149              		.loc 1 999 8 is_stmt 0 view .LVU959
 3150 0010 B7F800E0 		ldrh	lr, [r7]
 3151              	.LVL204:
1000:Src/main.c    ****   minCell = 1;
 3152              		.loc 1 1000 3 is_stmt 1 view .LVU960
1001:Src/main.c    ****   maxT = cellTemp[0][0];
 3153              		.loc 1 1001 3 view .LVU961
1002:Src/main.c    ****   maxCell = 1;
 3154              		.loc 1 1002 3 view .LVU962
1003:Src/main.c    **** 
1004:Src/main.c    ****   for (int i = 0; i < cfg.numOfICs; i++) {
 3155              		.loc 1 1004 3 view .LVU963
 3156              	.LBB34:
 3157              		.loc 1 1004 8 view .LVU964
 3158              		.loc 1 1004 8 is_stmt 0 view .LVU965
 3159              	.LBE34:
1001:Src/main.c    ****   maxCell = 1;
 3160              		.loc 1 1001 8 view .LVU966
 3161 0014 F046     		mov	r8, lr
 3162              	.LBB37:
 3163              		.loc 1 1004 12 view .LVU967
 3164 0016 0025     		movs	r5, #0
 3165              	.LBE37:
 997:Src/main.c    **** 
 3166              		.loc 1 997 12 view .LVU968
 3167 0018 2E46     		mov	r6, r5
1002:Src/main.c    **** 
 3168              		.loc 1 1002 11 view .LVU969
 3169 001a 0120     		movs	r0, #1
1000:Src/main.c    ****   maxT = cellTemp[0][0];
 3170              		.loc 1 1000 11 view .LVU970
 3171 001c 0446     		mov	r4, r0
 3172              	.LBB38:
 3173              		.loc 1 1004 3 view .LVU971
 3174 001e 1DE0     		b	.L164
 3175              	.LVL205:
 3176              	.L166:
 3177              	.LBB35:
1005:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
1006:Src/main.c    **** 
1007:Src/main.c    **** 			if (cellTemp[i][j] < minT) {
1008:Src/main.c    ****         minT = cellTemp[i][j];
1009:Src/main.c    ****         minCell = i * cfg.numOfTempPerIC + j*2 + 1;
1010:Src/main.c    ****       }
1011:Src/main.c    **** 
1012:Src/main.c    ****       if (cellTemp[i][j] > maxT) {
1013:Src/main.c    ****         maxT = cellTemp[i][j];
1014:Src/main.c    ****         maxCell = i * cfg.numOfTempPerIC + j*2 + 1;
1015:Src/main.c    ****       }
1016:Src/main.c    **** 
1017:Src/main.c    ****       sum = sum + cellTemp[i][j];
 3178              		.loc 1 1017 7 is_stmt 1 discriminator 2 view .LVU972
 3179              		.loc 1 1017 11 is_stmt 0 discriminator 2 view .LVU973
 3180 0020 1644     		add	r6, r6, r2
 3181              	.LVL206:
1005:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 3182              		.loc 1 1005 44 discriminator 2 view .LVU974
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 83


 3183 0022 0133     		adds	r3, r3, #1
 3184              	.LVL207:
 3185              	.L168:
1005:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 3186              		.loc 1 1005 26 discriminator 1 view .LVU975
 3187 0024 9DF843C0 		ldrb	ip, [sp, #67]	@ zero_extendqisi2
1005:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 3188              		.loc 1 1005 3 discriminator 1 view .LVU976
 3189 0028 9C45     		cmp	ip, r3
 3190 002a 16DD     		ble	.L171
1007:Src/main.c    ****         minT = cellTemp[i][j];
 3191              		.loc 1 1007 4 is_stmt 1 view .LVU977
1007:Src/main.c    ****         minT = cellTemp[i][j];
 3192              		.loc 1 1007 16 is_stmt 0 view .LVU978
 3193 002c 07EBC502 		add	r2, r7, r5, lsl #3
1007:Src/main.c    ****         minT = cellTemp[i][j];
 3194              		.loc 1 1007 19 view .LVU979
 3195 0030 32F81320 		ldrh	r2, [r2, r3, lsl #1]
1007:Src/main.c    ****         minT = cellTemp[i][j];
 3196              		.loc 1 1007 7 view .LVU980
 3197 0034 7245     		cmp	r2, lr
 3198 0036 06D2     		bcs	.L165
1008:Src/main.c    ****         minCell = i * cfg.numOfTempPerIC + j*2 + 1;
 3199              		.loc 1 1008 9 is_stmt 1 view .LVU981
 3200              	.LVL208:
1009:Src/main.c    ****       }
 3201              		.loc 1 1009 9 view .LVU982
1009:Src/main.c    ****       }
 3202              		.loc 1 1009 42 is_stmt 0 view .LVU983
 3203 0038 5C00     		lsls	r4, r3, #1
 3204              	.LVL209:
1009:Src/main.c    ****       }
 3205              		.loc 1 1009 42 view .LVU984
 3206 003a 05FB0C44 		mla	r4, r5, ip, r4
 3207 003e E4B2     		uxtb	r4, r4
1009:Src/main.c    ****       }
 3208              		.loc 1 1009 17 view .LVU985
 3209 0040 0134     		adds	r4, r4, #1
 3210 0042 E4B2     		uxtb	r4, r4
 3211              	.LVL210:
1008:Src/main.c    ****         minCell = i * cfg.numOfTempPerIC + j*2 + 1;
 3212              		.loc 1 1008 14 view .LVU986
 3213 0044 9646     		mov	lr, r2
 3214              	.LVL211:
 3215              	.L165:
1012:Src/main.c    ****         maxT = cellTemp[i][j];
 3216              		.loc 1 1012 7 is_stmt 1 view .LVU987
1012:Src/main.c    ****         maxT = cellTemp[i][j];
 3217              		.loc 1 1012 10 is_stmt 0 view .LVU988
 3218 0046 4245     		cmp	r2, r8
 3219 0048 EAD9     		bls	.L166
1013:Src/main.c    ****         maxCell = i * cfg.numOfTempPerIC + j*2 + 1;
 3220              		.loc 1 1013 9 is_stmt 1 view .LVU989
 3221              	.LVL212:
1014:Src/main.c    ****       }
 3222              		.loc 1 1014 9 view .LVU990
1014:Src/main.c    ****       }
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 84


 3223              		.loc 1 1014 42 is_stmt 0 view .LVU991
 3224 004a 5900     		lsls	r1, r3, #1
 3225 004c 05FB0C11 		mla	r1, r5, ip, r1
 3226 0050 C9B2     		uxtb	r1, r1
1014:Src/main.c    ****       }
 3227              		.loc 1 1014 17 view .LVU992
 3228 0052 0131     		adds	r1, r1, #1
 3229 0054 C8B2     		uxtb	r0, r1
 3230              	.LVL213:
1013:Src/main.c    ****         maxCell = i * cfg.numOfTempPerIC + j*2 + 1;
 3231              		.loc 1 1013 14 view .LVU993
 3232 0056 9046     		mov	r8, r2
 3233 0058 E2E7     		b	.L166
 3234              	.LVL214:
 3235              	.L171:
1013:Src/main.c    ****         maxCell = i * cfg.numOfTempPerIC + j*2 + 1;
 3236              		.loc 1 1013 14 view .LVU994
 3237              	.LBE35:
1004:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 3238              		.loc 1 1004 38 discriminator 2 view .LVU995
 3239 005a 0135     		adds	r5, r5, #1
 3240              	.LVL215:
 3241              	.L164:
1004:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 3242              		.loc 1 1004 26 discriminator 1 view .LVU996
 3243 005c 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
1004:Src/main.c    **** 		for (int j = 0; j < cfg.numOfTempPerIC; j++) {
 3244              		.loc 1 1004 3 discriminator 1 view .LVU997
 3245 0060 AB42     		cmp	r3, r5
 3246 0062 01DD     		ble	.L172
 3247              	.LBB36:
1005:Src/main.c    **** 
 3248              		.loc 1 1005 12 view .LVU998
 3249 0064 0023     		movs	r3, #0
 3250 0066 DDE7     		b	.L168
 3251              	.L172:
 3252              	.LBE36:
 3253              	.LBE38:
1018:Src/main.c    **** 
1019:Src/main.c    **** 		}
1020:Src/main.c    ****   }
1021:Src/main.c    **** 
1022:Src/main.c    ****   averageT = (uint16_t) (sum / (cfg.numOfICs * cfg.numOfTempPerIC));
 3254              		.loc 1 1022 3 is_stmt 1 view .LVU999
 3255              		.loc 1 1022 51 is_stmt 0 view .LVU1000
 3256 0068 9DF84320 		ldrb	r2, [sp, #67]	@ zero_extendqisi2
 3257              		.loc 1 1022 46 view .LVU1001
 3258 006c 02FB03F3 		mul	r3, r2, r3
 3259              		.loc 1 1022 30 view .LVU1002
 3260 0070 B6FBF3F6 		udiv	r6, r6, r3
 3261              	.LVL216:
1023:Src/main.c    **** 
1024:Src/main.c    ****   TxHeader.StdId = BMSTINF_ID;
 3262              		.loc 1 1024 3 is_stmt 1 view .LVU1003
 3263              		.loc 1 1024 18 is_stmt 0 view .LVU1004
 3264 0074 1249     		ldr	r1, .L173
 3265 0076 0A23     		movs	r3, #10
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 85


 3266 0078 0B60     		str	r3, [r1]
1025:Src/main.c    ****   TxHeader.DLC = 8;
 3267              		.loc 1 1025 3 is_stmt 1 view .LVU1005
 3268              		.loc 1 1025 16 is_stmt 0 view .LVU1006
 3269 007a 0823     		movs	r3, #8
 3270 007c 0B61     		str	r3, [r1, #16]
1026:Src/main.c    ****   uint8_t BMSTINF_DATA[8];
 3271              		.loc 1 1026 3 is_stmt 1 view .LVU1007
1027:Src/main.c    **** 
1028:Src/main.c    ****   BMSTINF_DATA[0] = (uint8_t) ((maxT >> 8) & 0xFF);
 3272              		.loc 1 1028 3 view .LVU1008
 3273              		.loc 1 1028 21 is_stmt 0 view .LVU1009
 3274 007e 28FA03F3 		lsr	r3, r8, r3
 3275              		.loc 1 1028 19 view .LVU1010
 3276 0082 8DF80030 		strb	r3, [sp]
1029:Src/main.c    ****   BMSTINF_DATA[1] = (uint8_t) (maxT & 0xFF);
 3277              		.loc 1 1029 3 is_stmt 1 view .LVU1011
 3278              		.loc 1 1029 19 is_stmt 0 view .LVU1012
 3279 0086 8DF80180 		strb	r8, [sp, #1]
1030:Src/main.c    ****   BMSTINF_DATA[2] = maxCell;
 3280              		.loc 1 1030 3 is_stmt 1 view .LVU1013
 3281              		.loc 1 1030 19 is_stmt 0 view .LVU1014
 3282 008a 8DF80200 		strb	r0, [sp, #2]
1031:Src/main.c    ****   BMSTINF_DATA[3] = (uint8_t) ((minT >> 8) & 0xFF);
 3283              		.loc 1 1031 3 is_stmt 1 view .LVU1015
 3284              		.loc 1 1031 21 is_stmt 0 view .LVU1016
 3285 008e 4FEA1E23 		lsr	r3, lr, #8
 3286              		.loc 1 1031 19 view .LVU1017
 3287 0092 8DF80330 		strb	r3, [sp, #3]
1032:Src/main.c    ****   BMSTINF_DATA[4] = (uint8_t) (minT & 0xFF);
 3288              		.loc 1 1032 3 is_stmt 1 view .LVU1018
 3289              		.loc 1 1032 19 is_stmt 0 view .LVU1019
 3290 0096 8DF804E0 		strb	lr, [sp, #4]
1033:Src/main.c    ****   BMSTINF_DATA[5] = minCell;
 3291              		.loc 1 1033 3 is_stmt 1 view .LVU1020
 3292              		.loc 1 1033 19 is_stmt 0 view .LVU1021
 3293 009a 8DF80540 		strb	r4, [sp, #5]
1034:Src/main.c    ****   BMSTINF_DATA[6] = (uint8_t) ((averageT >> 8) & 0xFF);
 3294              		.loc 1 1034 3 is_stmt 1 view .LVU1022
 3295              		.loc 1 1034 21 is_stmt 0 view .LVU1023
 3296 009e C6F30723 		ubfx	r3, r6, #8, #8
 3297              		.loc 1 1034 19 view .LVU1024
 3298 00a2 8DF80630 		strb	r3, [sp, #6]
1035:Src/main.c    ****   BMSTINF_DATA[7] = (uint8_t) (averageT & 0xFF);
 3299              		.loc 1 1035 3 is_stmt 1 view .LVU1025
 3300              		.loc 1 1035 19 is_stmt 0 view .LVU1026
 3301 00a6 8DF80760 		strb	r6, [sp, #7]
1036:Src/main.c    **** 
1037:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxHeader, BMSTINF_DATA, &TxMailbox);  
 3302              		.loc 1 1037 3 is_stmt 1 view .LVU1027
 3303 00aa 064B     		ldr	r3, .L173+4
 3304 00ac 6A46     		mov	r2, sp
 3305 00ae 0648     		ldr	r0, .L173+8
 3306              	.LVL217:
 3307              		.loc 1 1037 3 is_stmt 0 view .LVU1028
 3308 00b0 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 3309              	.LVL218:
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 86


1038:Src/main.c    **** 
1039:Src/main.c    **** };
 3310              		.loc 1 1039 1 view .LVU1029
 3311 00b4 02B0     		add	sp, sp, #8
 3312              	.LCFI63:
 3313              		.cfi_def_cfa_offset 40
 3314              		@ sp needed
 3315 00b6 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 3316              	.LCFI64:
 3317              		.cfi_restore 14
 3318              		.cfi_restore 8
 3319              		.cfi_restore 7
 3320              		.cfi_restore 6
 3321              		.cfi_restore 5
 3322              		.cfi_restore 4
 3323              		.cfi_def_cfa_offset 16
 3324              	.LVL219:
 3325              		.loc 1 1039 1 view .LVU1030
 3326 00ba 04B0     		add	sp, sp, #16
 3327              	.LCFI65:
 3328              		.cfi_def_cfa_offset 0
 3329 00bc 7047     		bx	lr
 3330              	.L174:
 3331 00be 00BF     		.align	2
 3332              	.L173:
 3333 00c0 00000000 		.word	TxHeader
 3334 00c4 00000000 		.word	TxMailbox
 3335 00c8 00000000 		.word	hcan
 3336              		.cfi_endproc
 3337              	.LFE84:
 3339              		.section	.text.Error_Handler,"ax",%progbits
 3340              		.align	1
 3341              		.global	Error_Handler
 3342              		.syntax unified
 3343              		.thumb
 3344              		.thumb_func
 3345              		.fpu softvfp
 3347              	Error_Handler:
 3348              	.LFB85:
1040:Src/main.c    **** 
1041:Src/main.c    **** /* USER CODE END 4 */
1042:Src/main.c    **** 
1043:Src/main.c    **** /**
1044:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
1045:Src/main.c    ****   * @retval None
1046:Src/main.c    ****   */
1047:Src/main.c    **** void Error_Handler(void)
1048:Src/main.c    **** {
 3349              		.loc 1 1048 1 is_stmt 1 view -0
 3350              		.cfi_startproc
 3351              		@ args = 0, pretend = 0, frame = 0
 3352              		@ frame_needed = 0, uses_anonymous_args = 0
 3353              		@ link register save eliminated.
1049:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
1050:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
1051:Src/main.c    **** 
1052:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 87


1053:Src/main.c    **** }
 3354              		.loc 1 1053 1 view .LVU1032
 3355 0000 7047     		bx	lr
 3356              		.cfi_endproc
 3357              	.LFE85:
 3359              		.global	voltageState
 3360              		.global	chargeRate
 3361              		.global	PEC_counter
 3362              		.comm	minimum,2,2
 3363              		.comm	BMSSTAT_DATA,6,4
 3364              		.comm	CELLVAL_DATA,6,4
 3365              		.comm	ChargerTxData,8,4
 3366              		.comm	ChargerTxHeader,24,4
 3367              		.comm	TxMailbox,4,4
 3368              		.comm	RxData,8,4
 3369              		.comm	TxData,8,4
 3370              		.comm	RxHeader,28,4
 3371              		.comm	TxHeader,24,4
 3372              		.comm	BMSconfig,88,4
 3373              		.comm	CommandCode,2,2
 3374              		.comm	htim2,64,4
 3375              		.comm	hspi1,88,4
 3376              		.comm	hcan,40,4
 3377              		.comm	hadc1,48,4
 3378              		.section	.bss.PEC_counter,"aw",%nobits
 3379              		.set	.LANCHOR1,. + 0
 3382              	PEC_counter:
 3383 0000 00       		.space	1
 3384              		.section	.bss.voltageState,"aw",%nobits
 3385              		.set	.LANCHOR0,. + 0
 3388              	voltageState:
 3389 0000 00       		.space	1
 3390              		.section	.data.chargeRate,"aw"
 3391              		.set	.LANCHOR2,. + 0
 3394              	chargeRate:
 3395 0000 02       		.byte	2
 3396              		.text
 3397              	.Letext0:
 3398              		.file 2 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 3399              		.file 3 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 3400              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 3401              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 3402              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 3403              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 3404              		.file 8 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 3405              		.file 9 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 3406              		.file 10 "c:\\arm-gcc\\8-2018-q4-major\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 3407              		.file 11 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 3408              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 3409              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 3410              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 3411              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 3412              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 3413              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 3414              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 3415              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 3416              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 88


 3417              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 3418              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 3419              		.file 23 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\stdlib.h"
 3420              		.file 24 "Inc/BMSconfig.h"
 3421              		.file 25 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\math.h"
 3422              		.file 26 "Inc/LTC6811.h"
 3423              		.file 27 "<built-in>"
 3424              		.file 28 "Inc/SPI.h"
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 89


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\cygwin64\tmp\cchsYoQY.s:16     .text.MX_GPIO_Init:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\cygwin64\tmp\cchsYoQY.s:208    .text.MX_GPIO_Init:000000e0 $d
C:\cygwin64\tmp\cchsYoQY.s:216    .text.MX_ADC1_Init:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:222    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\cygwin64\tmp\cchsYoQY.s:299    .text.MX_ADC1_Init:00000040 $d
                            *COM*:00000030 hadc1
C:\cygwin64\tmp\cchsYoQY.s:305    .text.MX_CAN_Init:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:311    .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\cygwin64\tmp\cchsYoQY.s:465    .text.MX_CAN_Init:00000088 $d
                            *COM*:00000028 hcan
                            *COM*:00000018 TxHeader
                            *COM*:00000018 ChargerTxHeader
C:\cygwin64\tmp\cchsYoQY.s:474    .text.MX_TIM2_Init:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:480    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\cygwin64\tmp\cchsYoQY.s:568    .text.MX_TIM2_Init:00000058 $d
                            *COM*:00000040 htim2
C:\cygwin64\tmp\cchsYoQY.s:573    .text.SystemClock_Config:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:580    .text.SystemClock_Config:00000000 SystemClock_Config
C:\cygwin64\tmp\cchsYoQY.s:677    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:684    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\cygwin64\tmp\cchsYoQY.s:770    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000050 $d
                            *COM*:0000001c RxHeader
                            *COM*:00000008 RxData
C:\cygwin64\tmp\cchsYoQY.s:781    .text.VOLTAGE_sort:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:788    .text.VOLTAGE_sort:00000000 VOLTAGE_sort
C:\cygwin64\tmp\cchsYoQY.s:859    .text.CONNECTION_sort:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:866    .text.CONNECTION_sort:00000000 CONNECTION_sort
C:\cygwin64\tmp\cchsYoQY.s:937    .text.FAULT_check:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:944    .text.FAULT_check:00000000 FAULT_check
C:\cygwin64\tmp\cchsYoQY.s:1376   .text.FAULT_check:000001bc $d
C:\cygwin64\tmp\cchsYoQY.s:1387   .text.balancingThreshold:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:1394   .text.balancingThreshold:00000000 balancingThreshold
C:\cygwin64\tmp\cchsYoQY.s:1491   .text.balancingThreshold:00000058 $d
                            *COM*:00000002 minimum
C:\cygwin64\tmp\cchsYoQY.s:1496   .text.setDischarge:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:1503   .text.setDischarge:00000000 setDischarge
C:\cygwin64\tmp\cchsYoQY.s:1715   .text.setDischarge:000000e4 $d
C:\cygwin64\tmp\cchsYoQY.s:1721   .text.checkDischarge:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:1728   .text.checkDischarge:00000000 checkDischarge
C:\cygwin64\tmp\cchsYoQY.s:1860   .text.checkDischarge:00000068 $d
C:\cygwin64\tmp\cchsYoQY.s:1866   .text.setChargerTxData:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:1873   .text.setChargerTxData:00000000 setChargerTxData
C:\cygwin64\tmp\cchsYoQY.s:1958   .text.setChargerTxData:00000050 $d
                            *COM*:00000008 ChargerTxData
                            *COM*:00000004 TxMailbox
C:\cygwin64\tmp\cchsYoQY.s:1967   .text.CELLVAL_message:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:1974   .text.CELLVAL_message:00000000 CELLVAL_message
C:\cygwin64\tmp\cchsYoQY.s:2174   .text.CELLVAL_message:000000d4 $d
                            *COM*:00000006 CELLVAL_DATA
C:\cygwin64\tmp\cchsYoQY.s:2182   .text.BMSSTAT_message:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:2189   .text.BMSSTAT_message:00000000 BMSSTAT_message
C:\cygwin64\tmp\cchsYoQY.s:2290   .text.BMSSTAT_message:0000006c $d
                            *COM*:00000006 BMSSTAT_DATA
C:\cygwin64\tmp\cchsYoQY.s:2299   .text.BMSVINF_message:00000000 $t
ARM GAS  C:\cygwin64\tmp\cchsYoQY.s 			page 90


C:\cygwin64\tmp\cchsYoQY.s:2306   .text.BMSVINF_message:00000000 BMSVINF_message
C:\cygwin64\tmp\cchsYoQY.s:2528   .text.BMSVINF_message:000000c8 $d
C:\cygwin64\tmp\cchsYoQY.s:2536   .text.main:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:2543   .text.main:00000000 main
C:\cygwin64\tmp\cchsYoQY.s:3098   .text.main:000002dc $d
                            *COM*:00000058 BMSconfig
C:\cygwin64\tmp\cchsYoQY.s:3108   .text.BMSTINF_message:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:3115   .text.BMSTINF_message:00000000 BMSTINF_message
C:\cygwin64\tmp\cchsYoQY.s:3333   .text.BMSTINF_message:000000c0 $d
C:\cygwin64\tmp\cchsYoQY.s:3340   .text.Error_Handler:00000000 $t
C:\cygwin64\tmp\cchsYoQY.s:3347   .text.Error_Handler:00000000 Error_Handler
C:\cygwin64\tmp\cchsYoQY.s:3388   .bss.voltageState:00000000 voltageState
C:\cygwin64\tmp\cchsYoQY.s:3394   .data.chargeRate:00000000 chargeRate
C:\cygwin64\tmp\cchsYoQY.s:3382   .bss.PEC_counter:00000000 PEC_counter
                            *COM*:00000008 TxData
                            *COM*:00000002 CommandCode
                            *COM*:00000058 hspi1
C:\cygwin64\tmp\cchsYoQY.s:3383   .bss.PEC_counter:00000000 $d
C:\cygwin64\tmp\cchsYoQY.s:3389   .bss.voltageState:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Start
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_CAN_GetRxMessage
HAL_GPIO_TogglePin
HAL_TIM_Base_Stop
__aeabi_i2f
__aeabi_fdiv
__aeabi_f2uiz
memcpy
HAL_CAN_AddTxMessage
HAL_Delay
HAL_Init
SPI_Init
initPECTable
loadConfig
writeConfigAll
