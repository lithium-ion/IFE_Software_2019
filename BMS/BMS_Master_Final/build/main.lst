ARM GAS  /tmp/ccrQkL4m.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB138:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "LTC6811.h"
  27:Src/main.c    **** #include "ChargerFunctions.h"
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccrQkL4m.s 			page 2


  32:Src/main.c    **** 
  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  46:Src/main.c    **** ADC_HandleTypeDef hadc1;
  47:Src/main.c    **** 
  48:Src/main.c    **** CAN_HandleTypeDef hcan1;
  49:Src/main.c    **** CAN_HandleTypeDef hcan2;
  50:Src/main.c    **** 
  51:Src/main.c    **** SPI_HandleTypeDef hspi1;
  52:Src/main.c    **** 
  53:Src/main.c    **** TIM_HandleTypeDef htim3;
  54:Src/main.c    **** 
  55:Src/main.c    **** UART_HandleTypeDef huart1;
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE BEGIN PV */
  58:Src/main.c    **** CommandCodeTypedef CommandCode;
  59:Src/main.c    **** BMSconfigStructTypedef BMSconfig;
  60:Src/main.c    **** 
  61:Src/main.c    **** CAN_TxHeaderTypeDef   TxHeader1;
  62:Src/main.c    **** CAN_RxHeaderTypeDef   RxHeader1;
  63:Src/main.c    **** uint8_t               TxData1[8];
  64:Src/main.c    **** uint8_t               RxData1[8];
  65:Src/main.c    **** uint32_t              TxMailbox;
  66:Src/main.c    **** 
  67:Src/main.c    **** CAN_TxHeaderTypeDef   TxHeader2;
  68:Src/main.c    **** CAN_RxHeaderTypeDef   RxHeader2;
  69:Src/main.c    **** uint8_t               TxData2[8];
  70:Src/main.c    **** uint8_t               RxData2[8];
  71:Src/main.c    **** 
  72:Src/main.c    **** uint8_t flag = 0;
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE END PV */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  77:Src/main.c    **** void SystemClock_Config(void);
  78:Src/main.c    **** static void MX_GPIO_Init(void);
  79:Src/main.c    **** static void MX_ADC1_Init(void);
  80:Src/main.c    **** static void MX_CAN1_Init(void);
  81:Src/main.c    **** static void MX_CAN2_Init(void);
  82:Src/main.c    **** static void MX_SPI1_Init(void);
  83:Src/main.c    **** static void MX_USART1_UART_Init(void);
  84:Src/main.c    **** static void MX_TIM3_Init(void);
  85:Src/main.c    **** /* USER CODE BEGIN PFP */
  86:Src/main.c    **** void SerialPrint(uint8_t data[], uint8_t len);
  87:Src/main.c    **** /* USER CODE END PFP */
  88:Src/main.c    **** 
ARM GAS  /tmp/ccrQkL4m.s 			page 3


  89:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  90:Src/main.c    **** /* USER CODE BEGIN 0 */
  91:Src/main.c    **** 
  92:Src/main.c    **** /* USER CODE END 0 */
  93:Src/main.c    **** 
  94:Src/main.c    **** /**
  95:Src/main.c    ****   * @brief  The application entry point.
  96:Src/main.c    ****   * @retval int
  97:Src/main.c    ****   */
  98:Src/main.c    **** int main(void)
  99:Src/main.c    **** {
 100:Src/main.c    ****   /* USER CODE BEGIN 1 */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE END 1 */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 107:Src/main.c    ****   HAL_Init();
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN Init */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END Init */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Configure the system clock */
 114:Src/main.c    ****   SystemClock_Config();
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE END SysInit */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Initialize all configured peripherals */
 121:Src/main.c    ****   MX_GPIO_Init();
 122:Src/main.c    ****   MX_ADC1_Init();
 123:Src/main.c    ****   MX_CAN1_Init();
 124:Src/main.c    ****   MX_CAN2_Init();
 125:Src/main.c    ****   //MX_SPI1_Init();
 126:Src/main.c    ****   MX_USART1_UART_Init();
 127:Src/main.c    ****   MX_TIM3_Init();
 128:Src/main.c    ****   /* USER CODE BEGIN 2 */
 129:Src/main.c    ****   SPI_Init();
 130:Src/main.c    ****   initPECTable();
 131:Src/main.c    ****   loadConfig(&BMSconfig); // loads configuration settings from config.c
 132:Src/main.c    ****   writeConfig(BMSconfig, 1); // number specifies how many ICs are connected
 133:Src/main.c    ****   // !! this assumes that the addresses for each IC count up from 1 !! //
 134:Src/main.c    ****   float cellVoltage[numBoards][cellsPerBoard];
 135:Src/main.c    ****   uint16_t voltage[8];
 136:Src/main.c    ****   uint8_t printbuffer[16];
 137:Src/main.c    ****   /* USER CODE END 2 */
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* Infinite loop */
 140:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 141:Src/main.c    ****   while (1)
 142:Src/main.c    ****   {
 143:Src/main.c    ****     /* USER CODE END WHILE */
 144:Src/main.c    **** 	// readCellVoltage(uint8_t address, uint16_t cellVoltage[8])
 145:Src/main.c    **** 	// after calling this, the cellVoltage array will contain the 16-bit voltage values for all 8 cell
ARM GAS  /tmp/ccrQkL4m.s 			page 4


 146:Src/main.c    **** 	// cellVoltage[0] holds cell 1 voltage
 147:Src/main.c    **** 	// cellVoltage[1] holds cell 2 voltage
 148:Src/main.c    **** 	// cellVoltage[2] holds cell 3 voltage
 149:Src/main.c    **** 	// cellVoltage[3] holds cell 4 voltage
 150:Src/main.c    **** 	// cellVoltage[4] holds cell 7 voltage
 151:Src/main.c    **** 	// cellVoltage[5] holds cell 8 voltage
 152:Src/main.c    **** 	// cellVoltage[6] holds cell 9 voltage
 153:Src/main.c    **** 	// cellVoltage[7] holds cell 10 voltage
 154:Src/main.c    **** 	
 155:Src/main.c    **** 	//if (readCellVoltage(1, voltage) == true) HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 156:Src/main.c    **** 	
 157:Src/main.c    **** 	if (flag == 1) HAL_GPIO_TogglePin(DEBUG_GPIO_Port, DEBUG_Pin);
 158:Src/main.c    **** 	
 159:Src/main.c    **** 	// print cell voltage data
 160:Src/main.c    **** 	
 161:Src/main.c    **** 	printbuffer[0] = (uint8_t) (voltage[0] >> 8) & 0xFF;
 162:Src/main.c    **** 	printbuffer[1] = (uint8_t) voltage[0] & 0xFF;
 163:Src/main.c    **** 	printbuffer[2] = (uint8_t) (voltage[1] >> 8) & 0xFF;
 164:Src/main.c    **** 	printbuffer[3] = (uint8_t) voltage[1] & 0xFF;
 165:Src/main.c    **** 	printbuffer[4] = (uint8_t) (voltage[2] >> 8) & 0xFF;
 166:Src/main.c    **** 	printbuffer[5] = (uint8_t) voltage[2] & 0xFF;
 167:Src/main.c    **** 	printbuffer[6] = (uint8_t) (voltage[3] >> 8) & 0xFF;
 168:Src/main.c    **** 	printbuffer[7] = (uint8_t) voltage[3] & 0xFF;
 169:Src/main.c    **** 	printbuffer[8] = (uint8_t) (voltage[4] >> 8) & 0xFF;
 170:Src/main.c    **** 	printbuffer[9] = (uint8_t) voltage[4] & 0xFF;
 171:Src/main.c    **** 	printbuffer[10] = (uint8_t) (voltage[5] >> 8) & 0xFF;
 172:Src/main.c    **** 	printbuffer[11] = (uint8_t) voltage[5] & 0xFF;
 173:Src/main.c    **** 	printbuffer[12] = (uint8_t) (voltage[6] >> 8) & 0xFF;
 174:Src/main.c    **** 	printbuffer[13] = (uint8_t) voltage[6] & 0xFF;
 175:Src/main.c    **** 	printbuffer[14] = (uint8_t) (voltage[7] >> 8) & 0xFF;
 176:Src/main.c    **** 	printbuffer[15] = (uint8_t) voltage[7] & 0xFF;
 177:Src/main.c    **** 	
 178:Src/main.c    **** 	SerialPrint(printbuffer, 8);
 179:Src/main.c    **** 	SerialPrint(printbuffer + 8, 8);
 180:Src/main.c    **** 
 181:Src/main.c    **** 	/* Charger functions assume voltage data from every cell has already been receieved */
 182:Src/main.c    **** 	//while (/* data for every cell has not been received */){}
 183:Src/main.c    **** 
 184:Src/main.c    **** 	/*** Charging  ***/
 185:Src/main.c    **** 	setChargeDischarge(cellsDischarge, &chargeCurrent, cellVoltage);
 186:Src/main.c    **** 	setChargerTxData();
 187:Src/main.c    **** 
 188:Src/main.c    **** 	if (HAL_CAN_AddTxMessage(&hcan2, &TxHeader2, CANtx, &TxMailbox) == HAL_OK) {
 189:Src/main.c    **** 		HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 190:Src/main.c    **** 	}
 191:Src/main.c    **** 
 192:Src/main.c    **** 	/*** End Charging ***/
 193:Src/main.c    **** 
 194:Src/main.c    **** 	HAL_Delay(500);
 195:Src/main.c    ****     /* USER CODE BEGIN 3 */
 196:Src/main.c    ****   }
 197:Src/main.c    ****   /* USER CODE END 3 */
 198:Src/main.c    **** }
 199:Src/main.c    **** 
 200:Src/main.c    **** /**
 201:Src/main.c    ****   * @brief System Clock Configuration
 202:Src/main.c    ****   * @retval None
ARM GAS  /tmp/ccrQkL4m.s 			page 5


 203:Src/main.c    ****   */
 204:Src/main.c    **** void SystemClock_Config(void)
 205:Src/main.c    **** {
 206:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 207:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 208:Src/main.c    **** 
 209:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 210:Src/main.c    ****   */
 211:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 212:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 213:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 214:Src/main.c    ****   */
 215:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 216:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 217:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 218:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 219:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 220:Src/main.c    ****   {
 221:Src/main.c    ****     Error_Handler();
 222:Src/main.c    ****   }
 223:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 224:Src/main.c    ****   */
 225:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 226:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 227:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 228:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 229:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 230:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 231:Src/main.c    **** 
 232:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 233:Src/main.c    ****   {
 234:Src/main.c    ****     Error_Handler();
 235:Src/main.c    ****   }
 236:Src/main.c    **** }
 237:Src/main.c    **** 
 238:Src/main.c    **** /**
 239:Src/main.c    ****   * @brief ADC1 Initialization Function
 240:Src/main.c    ****   * @param None
 241:Src/main.c    ****   * @retval None
 242:Src/main.c    ****   */
 243:Src/main.c    **** static void MX_ADC1_Init(void)
 244:Src/main.c    **** {
 245:Src/main.c    **** 
 246:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 247:Src/main.c    **** 
 248:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 249:Src/main.c    **** 
 250:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 251:Src/main.c    **** 
 252:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 253:Src/main.c    **** 
 254:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 255:Src/main.c    ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 256:Src/main.c    ****   */
 257:Src/main.c    ****   hadc1.Instance = ADC1;
 258:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 259:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
ARM GAS  /tmp/ccrQkL4m.s 			page 6


 260:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 261:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 262:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 263:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 264:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 265:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 266:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 267:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 268:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 269:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 270:Src/main.c    ****   {
 271:Src/main.c    ****     Error_Handler();
 272:Src/main.c    ****   }
 273:Src/main.c    ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 274:Src/main.c    ****   */
 275:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 276:Src/main.c    ****   sConfig.Rank = 1;
 277:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 278:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 279:Src/main.c    ****   {
 280:Src/main.c    ****     Error_Handler();
 281:Src/main.c    ****   }
 282:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 283:Src/main.c    **** 
 284:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 285:Src/main.c    **** 
 286:Src/main.c    **** }
 287:Src/main.c    **** 
 288:Src/main.c    **** /**
 289:Src/main.c    ****   * @brief CAN1 Initialization Function
 290:Src/main.c    ****   * @param None
 291:Src/main.c    ****   * @retval None
 292:Src/main.c    ****   */
 293:Src/main.c    **** static void MX_CAN1_Init(void)
 294:Src/main.c    **** {
 295:Src/main.c    **** 
 296:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 0 */
 297:Src/main.c    **** 
 298:Src/main.c    ****   /* USER CODE END CAN1_Init 0 */
 299:Src/main.c    **** 
 300:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 1 */
 301:Src/main.c    **** 	CAN_FilterTypeDef     sFilterConfig1;
 302:Src/main.c    ****   /* USER CODE END CAN1_Init 1 */
 303:Src/main.c    ****   hcan1.Instance = CAN1;
 304:Src/main.c    ****   hcan1.Init.Prescaler = 32;
 305:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 306:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 307:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_1TQ;
 308:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 309:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 310:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 311:Src/main.c    ****   hcan1.Init.AutoWakeUp = DISABLE;
 312:Src/main.c    ****   hcan1.Init.AutoRetransmission = DISABLE;
 313:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 314:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 315:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 316:Src/main.c    ****   {
ARM GAS  /tmp/ccrQkL4m.s 			page 7


 317:Src/main.c    ****     Error_Handler();
 318:Src/main.c    ****   }
 319:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 2 */
 320:Src/main.c    **** 	sFilterConfig1.FilterBank = 0;							// filter number (0-13)
 321:Src/main.c    **** 	sFilterConfig1.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 322:Src/main.c    **** 	sFilterConfig1.FilterScale = CAN_FILTERSCALE_32BIT;		
 323:Src/main.c    **** 	sFilterConfig1.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifi
 324:Src/main.c    **** 	sFilterConfig1.FilterIdLow = 0x0000;
 325:Src/main.c    **** 	sFilterConfig1.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare
 326:Src/main.c    **** 	sFilterConfig1.FilterMaskIdLow = 0x0000;
 327:Src/main.c    **** 	sFilterConfig1.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen in
 328:Src/main.c    **** 	sFilterConfig1.FilterActivation = ENABLE;
 329:Src/main.c    **** 	
 330:Src/main.c    **** 	HAL_CAN_ConfigFilter(&hcan1, &sFilterConfig1);
 331:Src/main.c    ****   
 332:Src/main.c    **** 	HAL_CAN_Start(&hcan1);
 333:Src/main.c    **** 	
 334:Src/main.c    **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 335:Src/main.c    ****   /* USER CODE END CAN1_Init 2 */
 336:Src/main.c    **** 
 337:Src/main.c    **** }
 338:Src/main.c    **** 
 339:Src/main.c    **** /**
 340:Src/main.c    ****   * @brief CAN2 Initialization Function
 341:Src/main.c    ****   * @param None
 342:Src/main.c    ****   * @retval None
 343:Src/main.c    ****   */
 344:Src/main.c    **** static void MX_CAN2_Init(void)
 345:Src/main.c    **** {
 346:Src/main.c    **** 
 347:Src/main.c    ****   /* USER CODE BEGIN CAN2_Init 0 */
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* USER CODE END CAN2_Init 0 */
 350:Src/main.c    **** 
 351:Src/main.c    ****   /* USER CODE BEGIN CAN2_Init 1 */
 352:Src/main.c    **** 	CAN_FilterTypeDef     sFilterConfig2;
 353:Src/main.c    ****   /* USER CODE END CAN2_Init 1 */
 354:Src/main.c    ****   hcan2.Instance = CAN2;
 355:Src/main.c    ****   hcan2.Init.Prescaler = 32; //change back to 64?
 356:Src/main.c    ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 357:Src/main.c    ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 358:Src/main.c    ****   hcan2.Init.TimeSeg1 = CAN_BS1_1TQ;
 359:Src/main.c    ****   hcan2.Init.TimeSeg2 = CAN_BS2_1TQ;
 360:Src/main.c    ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 361:Src/main.c    ****   hcan2.Init.AutoBusOff = DISABLE;
 362:Src/main.c    ****   hcan2.Init.AutoWakeUp = DISABLE;
 363:Src/main.c    ****   hcan2.Init.AutoRetransmission = DISABLE;
 364:Src/main.c    ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 365:Src/main.c    ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 366:Src/main.c    ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 367:Src/main.c    ****   {
 368:Src/main.c    ****     Error_Handler();
 369:Src/main.c    ****   }
 370:Src/main.c    ****   /* USER CODE BEGIN CAN2_Init 2 */
 371:Src/main.c    **** 	sFilterConfig2.FilterBank = 1;							// filter number (0-13)
 372:Src/main.c    **** 	sFilterConfig2.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 373:Src/main.c    **** 	sFilterConfig2.FilterScale = CAN_FILTERSCALE_32BIT;		
ARM GAS  /tmp/ccrQkL4m.s 			page 8


 374:Src/main.c    **** 	sFilterConfig2.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifi
 375:Src/main.c    **** 	sFilterConfig2.FilterIdLow = 0x0000;
 376:Src/main.c    **** 	sFilterConfig2.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare
 377:Src/main.c    **** 	sFilterConfig2.FilterMaskIdLow = 0x0000;
 378:Src/main.c    **** 	sFilterConfig2.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen in
 379:Src/main.c    **** 	sFilterConfig2.FilterActivation = ENABLE;
 380:Src/main.c    **** 	
 381:Src/main.c    **** 	HAL_CAN_ConfigFilter(&hcan2, &sFilterConfig2);
 382:Src/main.c    ****   
 383:Src/main.c    **** 	HAL_CAN_Start(&hcan2);
 384:Src/main.c    **** 	
 385:Src/main.c    **** 	HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING);
 386:Src/main.c    **** 
 387:Src/main.c    **** 	TxHeader2.StdId = 0x321; 					// CAN standard ID
 388:Src/main.c    **** 	TxHeader2.ExtId = 0x1806E5F4; 					// CAN extended ID
 389:Src/main.c    **** 	TxHeader2.RTR = CAN_RTR_DATA; 				// CAN frame type
 390:Src/main.c    **** 	TxHeader2.IDE = CAN_ID_EXT; 				// CAN ID type
 391:Src/main.c    **** 	TxHeader2.DLC = 8; 						// CAN frame length in bytes
 392:Src/main.c    **** 	TxHeader2.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 393:Src/main.c    ****   /* USER CODE END CAN2_Init 2 */
 394:Src/main.c    **** 
 395:Src/main.c    **** }
 396:Src/main.c    **** 
 397:Src/main.c    **** /**
 398:Src/main.c    ****   * @brief SPI1 Initialization Function
 399:Src/main.c    ****   * @param None
 400:Src/main.c    ****   * @retval None
 401:Src/main.c    ****   */
 402:Src/main.c    **** static void MX_SPI1_Init(void)
 403:Src/main.c    **** {
 404:Src/main.c    **** 
 405:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 408:Src/main.c    **** 
 409:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 410:Src/main.c    **** 
 411:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 412:Src/main.c    ****   /* SPI1 parameter configuration*/
 413:Src/main.c    ****   hspi1.Instance = SPI1;
 414:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 415:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 416:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 417:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 418:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 419:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 420:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 421:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 422:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 423:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 424:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 425:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 426:Src/main.c    ****   {
 427:Src/main.c    ****     Error_Handler();
 428:Src/main.c    ****   }
 429:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 430:Src/main.c    **** 
ARM GAS  /tmp/ccrQkL4m.s 			page 9


 431:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 432:Src/main.c    **** 
 433:Src/main.c    **** }
 434:Src/main.c    **** 
 435:Src/main.c    **** /**
 436:Src/main.c    ****   * @brief TIM3 Initialization Function
 437:Src/main.c    ****   * @param None
 438:Src/main.c    ****   * @retval None
 439:Src/main.c    ****   */
 440:Src/main.c    **** static void MX_TIM3_Init(void)
 441:Src/main.c    **** {
 442:Src/main.c    **** 
 443:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
 444:Src/main.c    **** 
 445:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
 446:Src/main.c    **** 
 447:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 448:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 449:Src/main.c    **** 
 450:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
 451:Src/main.c    **** 
 452:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
 453:Src/main.c    ****   htim3.Instance = TIM3;
 454:Src/main.c    ****   htim3.Init.Prescaler = 0;
 455:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 456:Src/main.c    ****   htim3.Init.Period = 0;
 457:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 458:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 459:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 460:Src/main.c    ****   {
 461:Src/main.c    ****     Error_Handler();
 462:Src/main.c    ****   }
 463:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 464:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 465:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 466:Src/main.c    ****   {
 467:Src/main.c    ****     Error_Handler();
 468:Src/main.c    ****   }
 469:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 470:Src/main.c    ****   sConfigOC.Pulse = 0;
 471:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 472:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 473:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 474:Src/main.c    ****   {
 475:Src/main.c    ****     Error_Handler();
 476:Src/main.c    ****   }
 477:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
 478:Src/main.c    **** 
 479:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 480:Src/main.c    ****   HAL_TIM_MspPostInit(&htim3);
 481:Src/main.c    **** 
 482:Src/main.c    **** }
 483:Src/main.c    **** 
 484:Src/main.c    **** /**
 485:Src/main.c    ****   * @brief USART1 Initialization Function
 486:Src/main.c    ****   * @param None
 487:Src/main.c    ****   * @retval None
ARM GAS  /tmp/ccrQkL4m.s 			page 10


 488:Src/main.c    ****   */
 489:Src/main.c    **** static void MX_USART1_UART_Init(void)
 490:Src/main.c    **** {
 491:Src/main.c    **** 
 492:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 493:Src/main.c    **** 
 494:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 495:Src/main.c    **** 
 496:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 497:Src/main.c    **** 
 498:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 499:Src/main.c    ****   huart1.Instance = USART1;
 500:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 501:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 502:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 503:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 504:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 505:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 506:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 507:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 508:Src/main.c    ****   {
 509:Src/main.c    ****     Error_Handler();
 510:Src/main.c    ****   }
 511:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 512:Src/main.c    **** 
 513:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 514:Src/main.c    **** 
 515:Src/main.c    **** }
 516:Src/main.c    **** 
 517:Src/main.c    **** /**
 518:Src/main.c    ****   * @brief GPIO Initialization Function
 519:Src/main.c    ****   * @param None
 520:Src/main.c    ****   * @retval None
 521:Src/main.c    ****   */
 522:Src/main.c    **** static void MX_GPIO_Init(void)
 523:Src/main.c    **** {
  28              		.loc 1 523 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 4, -24
  36              		.cfi_offset 5, -20
  37              		.cfi_offset 6, -16
  38              		.cfi_offset 7, -12
  39              		.cfi_offset 8, -8
  40              		.cfi_offset 14, -4
  41 0004 88B0     		sub	sp, sp, #32
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 56
 524:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  44              		.loc 1 524 3 view .LVU1
  45              		.loc 1 524 20 is_stmt 0 view .LVU2
  46 0006 0024     		movs	r4, #0
  47 0008 0394     		str	r4, [sp, #12]
ARM GAS  /tmp/ccrQkL4m.s 			page 11


  48 000a 0494     		str	r4, [sp, #16]
  49 000c 0594     		str	r4, [sp, #20]
  50 000e 0694     		str	r4, [sp, #24]
  51 0010 0794     		str	r4, [sp, #28]
 525:Src/main.c    **** 
 526:Src/main.c    ****   /* GPIO Ports Clock Enable */
 527:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  52              		.loc 1 527 3 is_stmt 1 view .LVU3
  53              	.LBB2:
  54              		.loc 1 527 3 view .LVU4
  55 0012 0094     		str	r4, [sp]
  56              		.loc 1 527 3 view .LVU5
  57 0014 2D4B     		ldr	r3, .L3
  58 0016 1A6B     		ldr	r2, [r3, #48]
  59 0018 42F00402 		orr	r2, r2, #4
  60 001c 1A63     		str	r2, [r3, #48]
  61              		.loc 1 527 3 view .LVU6
  62 001e 1A6B     		ldr	r2, [r3, #48]
  63 0020 02F00402 		and	r2, r2, #4
  64 0024 0092     		str	r2, [sp]
  65              		.loc 1 527 3 view .LVU7
  66 0026 009A     		ldr	r2, [sp]
  67              	.LBE2:
 528:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 528 3 view .LVU8
  69              	.LBB3:
  70              		.loc 1 528 3 view .LVU9
  71 0028 0194     		str	r4, [sp, #4]
  72              		.loc 1 528 3 view .LVU10
  73 002a 1A6B     		ldr	r2, [r3, #48]
  74 002c 42F00102 		orr	r2, r2, #1
  75 0030 1A63     		str	r2, [r3, #48]
  76              		.loc 1 528 3 view .LVU11
  77 0032 1A6B     		ldr	r2, [r3, #48]
  78 0034 02F00102 		and	r2, r2, #1
  79 0038 0192     		str	r2, [sp, #4]
  80              		.loc 1 528 3 view .LVU12
  81 003a 019A     		ldr	r2, [sp, #4]
  82              	.LBE3:
 529:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  83              		.loc 1 529 3 view .LVU13
  84              	.LBB4:
  85              		.loc 1 529 3 view .LVU14
  86 003c 0294     		str	r4, [sp, #8]
  87              		.loc 1 529 3 view .LVU15
  88 003e 1A6B     		ldr	r2, [r3, #48]
  89 0040 42F00202 		orr	r2, r2, #2
  90 0044 1A63     		str	r2, [r3, #48]
  91              		.loc 1 529 3 view .LVU16
  92 0046 1B6B     		ldr	r3, [r3, #48]
  93 0048 03F00203 		and	r3, r3, #2
  94 004c 0293     		str	r3, [sp, #8]
  95              		.loc 1 529 3 view .LVU17
  96 004e 029B     		ldr	r3, [sp, #8]
  97              	.LBE4:
 530:Src/main.c    **** 
 531:Src/main.c    ****   /*Configure GPIO pin Output Level */
ARM GAS  /tmp/ccrQkL4m.s 			page 12


 532:Src/main.c    ****   HAL_GPIO_WritePin(DEBUG_GPIO_Port, DEBUG_Pin, GPIO_PIN_RESET);
  98              		.loc 1 532 3 view .LVU18
  99 0050 DFF88480 		ldr	r8, .L3+12
 100 0054 2246     		mov	r2, r4
 101 0056 4FF40051 		mov	r1, #8192
 102 005a 4046     		mov	r0, r8
 103 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 533:Src/main.c    **** 
 534:Src/main.c    ****   /*Configure GPIO pin Output Level */
 535:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
 105              		.loc 1 535 3 view .LVU19
 106 0060 1B4F     		ldr	r7, .L3+4
 107 0062 2246     		mov	r2, r4
 108 0064 1021     		movs	r1, #16
 109 0066 3846     		mov	r0, r7
 110 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 111              	.LVL1:
 536:Src/main.c    **** 
 537:Src/main.c    ****   /*Configure GPIO pin Output Level */
 538:Src/main.c    ****   HAL_GPIO_WritePin(FAULT_GPIO_Port, FAULT_Pin, GPIO_PIN_RESET);
 112              		.loc 1 538 3 view .LVU20
 113 006c 194D     		ldr	r5, .L3+8
 114 006e 2246     		mov	r2, r4
 115 0070 4FF48061 		mov	r1, #1024
 116 0074 2846     		mov	r0, r5
 117 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 118              	.LVL2:
 539:Src/main.c    **** 
 540:Src/main.c    ****   /*Configure GPIO pin : DEBUG_Pin */
 541:Src/main.c    ****   GPIO_InitStruct.Pin = DEBUG_Pin;
 119              		.loc 1 541 3 view .LVU21
 120              		.loc 1 541 23 is_stmt 0 view .LVU22
 121 007a 4FF40053 		mov	r3, #8192
 122 007e 0393     		str	r3, [sp, #12]
 542:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 123              		.loc 1 542 3 is_stmt 1 view .LVU23
 124              		.loc 1 542 24 is_stmt 0 view .LVU24
 125 0080 0126     		movs	r6, #1
 126 0082 0496     		str	r6, [sp, #16]
 543:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 127              		.loc 1 543 3 is_stmt 1 view .LVU25
 128              		.loc 1 543 24 is_stmt 0 view .LVU26
 129 0084 0594     		str	r4, [sp, #20]
 544:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 130              		.loc 1 544 3 is_stmt 1 view .LVU27
 131              		.loc 1 544 25 is_stmt 0 view .LVU28
 132 0086 0694     		str	r4, [sp, #24]
 545:Src/main.c    ****   HAL_GPIO_Init(DEBUG_GPIO_Port, &GPIO_InitStruct);
 133              		.loc 1 545 3 is_stmt 1 view .LVU29
 134 0088 03A9     		add	r1, sp, #12
 135 008a 4046     		mov	r0, r8
 136 008c FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL3:
 546:Src/main.c    **** 
 547:Src/main.c    ****   /*Configure GPIO pin : PA4 */
 548:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
ARM GAS  /tmp/ccrQkL4m.s 			page 13


 138              		.loc 1 548 3 view .LVU30
 139              		.loc 1 548 23 is_stmt 0 view .LVU31
 140 0090 1023     		movs	r3, #16
 141 0092 0393     		str	r3, [sp, #12]
 549:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 142              		.loc 1 549 3 is_stmt 1 view .LVU32
 143              		.loc 1 549 24 is_stmt 0 view .LVU33
 144 0094 0496     		str	r6, [sp, #16]
 550:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 550 3 is_stmt 1 view .LVU34
 146              		.loc 1 550 24 is_stmt 0 view .LVU35
 147 0096 0594     		str	r4, [sp, #20]
 551:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 148              		.loc 1 551 3 is_stmt 1 view .LVU36
 149              		.loc 1 551 25 is_stmt 0 view .LVU37
 150 0098 0694     		str	r4, [sp, #24]
 552:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 151              		.loc 1 552 3 is_stmt 1 view .LVU38
 152 009a 03A9     		add	r1, sp, #12
 153 009c 3846     		mov	r0, r7
 154 009e FFF7FEFF 		bl	HAL_GPIO_Init
 155              	.LVL4:
 553:Src/main.c    **** 
 554:Src/main.c    ****   /*Configure GPIO pin : FAULT_Pin */
 555:Src/main.c    ****   GPIO_InitStruct.Pin = FAULT_Pin;
 156              		.loc 1 555 3 view .LVU39
 157              		.loc 1 555 23 is_stmt 0 view .LVU40
 158 00a2 4FF48063 		mov	r3, #1024
 159 00a6 0393     		str	r3, [sp, #12]
 556:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 160              		.loc 1 556 3 is_stmt 1 view .LVU41
 161              		.loc 1 556 24 is_stmt 0 view .LVU42
 162 00a8 0496     		str	r6, [sp, #16]
 557:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 163              		.loc 1 557 3 is_stmt 1 view .LVU43
 164              		.loc 1 557 24 is_stmt 0 view .LVU44
 165 00aa 0594     		str	r4, [sp, #20]
 558:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 166              		.loc 1 558 3 is_stmt 1 view .LVU45
 167              		.loc 1 558 25 is_stmt 0 view .LVU46
 168 00ac 0694     		str	r4, [sp, #24]
 559:Src/main.c    ****   HAL_GPIO_Init(FAULT_GPIO_Port, &GPIO_InitStruct);
 169              		.loc 1 559 3 is_stmt 1 view .LVU47
 170 00ae 03A9     		add	r1, sp, #12
 171 00b0 2846     		mov	r0, r5
 172 00b2 FFF7FEFF 		bl	HAL_GPIO_Init
 173              	.LVL5:
 560:Src/main.c    **** 
 561:Src/main.c    ****   /*Configure GPIO pin : AIR_SNS_Pin */
 562:Src/main.c    ****   GPIO_InitStruct.Pin = AIR_SNS_Pin;
 174              		.loc 1 562 3 view .LVU48
 175              		.loc 1 562 23 is_stmt 0 view .LVU49
 176 00b6 2023     		movs	r3, #32
 177 00b8 0393     		str	r3, [sp, #12]
 563:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 178              		.loc 1 563 3 is_stmt 1 view .LVU50
 179              		.loc 1 563 24 is_stmt 0 view .LVU51
ARM GAS  /tmp/ccrQkL4m.s 			page 14


 180 00ba 0494     		str	r4, [sp, #16]
 564:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 181              		.loc 1 564 3 is_stmt 1 view .LVU52
 182              		.loc 1 564 24 is_stmt 0 view .LVU53
 183 00bc 0594     		str	r4, [sp, #20]
 565:Src/main.c    ****   HAL_GPIO_Init(AIR_SNS_GPIO_Port, &GPIO_InitStruct);
 184              		.loc 1 565 3 is_stmt 1 view .LVU54
 185 00be 03A9     		add	r1, sp, #12
 186 00c0 2846     		mov	r0, r5
 187 00c2 FFF7FEFF 		bl	HAL_GPIO_Init
 188              	.LVL6:
 566:Src/main.c    **** 
 567:Src/main.c    **** }
 189              		.loc 1 567 1 is_stmt 0 view .LVU55
 190 00c6 08B0     		add	sp, sp, #32
 191              	.LCFI2:
 192              		.cfi_def_cfa_offset 24
 193              		@ sp needed
 194 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 195              	.L4:
 196              		.align	2
 197              	.L3:
 198 00cc 00380240 		.word	1073887232
 199 00d0 00000240 		.word	1073872896
 200 00d4 00040240 		.word	1073873920
 201 00d8 00080240 		.word	1073874944
 202              		.cfi_endproc
 203              	.LFE138:
 205              		.section	.text.MX_ADC1_Init,"ax",%progbits
 206              		.align	1
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 210              		.fpu fpv4-sp-d16
 212              	MX_ADC1_Init:
 213              	.LFB132:
 244:Src/main.c    **** 
 214              		.loc 1 244 1 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 16
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 70B5     		push	{r4, r5, r6, lr}
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 16
 221              		.cfi_offset 4, -16
 222              		.cfi_offset 5, -12
 223              		.cfi_offset 6, -8
 224              		.cfi_offset 14, -4
 225 0002 84B0     		sub	sp, sp, #16
 226              	.LCFI4:
 227              		.cfi_def_cfa_offset 32
 250:Src/main.c    **** 
 228              		.loc 1 250 3 view .LVU57
 250:Src/main.c    **** 
 229              		.loc 1 250 26 is_stmt 0 view .LVU58
 230 0004 0025     		movs	r5, #0
 231 0006 0095     		str	r5, [sp]
ARM GAS  /tmp/ccrQkL4m.s 			page 15


 232 0008 0195     		str	r5, [sp, #4]
 233 000a 0295     		str	r5, [sp, #8]
 234 000c 0395     		str	r5, [sp, #12]
 257:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 235              		.loc 1 257 3 is_stmt 1 view .LVU59
 257:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 236              		.loc 1 257 18 is_stmt 0 view .LVU60
 237 000e 0F4C     		ldr	r4, .L7
 238 0010 0F4B     		ldr	r3, .L7+4
 239 0012 2360     		str	r3, [r4]
 258:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 240              		.loc 1 258 3 is_stmt 1 view .LVU61
 258:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 241              		.loc 1 258 29 is_stmt 0 view .LVU62
 242 0014 6560     		str	r5, [r4, #4]
 259:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 243              		.loc 1 259 3 is_stmt 1 view .LVU63
 259:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 244              		.loc 1 259 25 is_stmt 0 view .LVU64
 245 0016 A560     		str	r5, [r4, #8]
 260:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 246              		.loc 1 260 3 is_stmt 1 view .LVU65
 260:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 247              		.loc 1 260 27 is_stmt 0 view .LVU66
 248 0018 2561     		str	r5, [r4, #16]
 261:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 249              		.loc 1 261 3 is_stmt 1 view .LVU67
 261:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 250              		.loc 1 261 33 is_stmt 0 view .LVU68
 251 001a 2576     		strb	r5, [r4, #24]
 262:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 252              		.loc 1 262 3 is_stmt 1 view .LVU69
 262:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 253              		.loc 1 262 36 is_stmt 0 view .LVU70
 254 001c 84F82050 		strb	r5, [r4, #32]
 263:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 255              		.loc 1 263 3 is_stmt 1 view .LVU71
 263:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 256              		.loc 1 263 35 is_stmt 0 view .LVU72
 257 0020 E562     		str	r5, [r4, #44]
 264:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 258              		.loc 1 264 3 is_stmt 1 view .LVU73
 264:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 259              		.loc 1 264 31 is_stmt 0 view .LVU74
 260 0022 0C4B     		ldr	r3, .L7+8
 261 0024 A362     		str	r3, [r4, #40]
 265:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 262              		.loc 1 265 3 is_stmt 1 view .LVU75
 265:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 263              		.loc 1 265 24 is_stmt 0 view .LVU76
 264 0026 E560     		str	r5, [r4, #12]
 266:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 265              		.loc 1 266 3 is_stmt 1 view .LVU77
 266:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 266              		.loc 1 266 30 is_stmt 0 view .LVU78
 267 0028 0126     		movs	r6, #1
 268 002a E661     		str	r6, [r4, #28]
ARM GAS  /tmp/ccrQkL4m.s 			page 16


 267:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 269              		.loc 1 267 3 is_stmt 1 view .LVU79
 267:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 270              		.loc 1 267 36 is_stmt 0 view .LVU80
 271 002c 84F83050 		strb	r5, [r4, #48]
 268:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 272              		.loc 1 268 3 is_stmt 1 view .LVU81
 268:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 273              		.loc 1 268 27 is_stmt 0 view .LVU82
 274 0030 6661     		str	r6, [r4, #20]
 269:Src/main.c    ****   {
 275              		.loc 1 269 3 is_stmt 1 view .LVU83
 269:Src/main.c    ****   {
 276              		.loc 1 269 7 is_stmt 0 view .LVU84
 277 0032 2046     		mov	r0, r4
 278 0034 FFF7FEFF 		bl	HAL_ADC_Init
 279              	.LVL7:
 275:Src/main.c    ****   sConfig.Rank = 1;
 280              		.loc 1 275 3 is_stmt 1 view .LVU85
 275:Src/main.c    ****   sConfig.Rank = 1;
 281              		.loc 1 275 19 is_stmt 0 view .LVU86
 282 0038 0823     		movs	r3, #8
 283 003a 0093     		str	r3, [sp]
 276:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 284              		.loc 1 276 3 is_stmt 1 view .LVU87
 276:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 285              		.loc 1 276 16 is_stmt 0 view .LVU88
 286 003c 0196     		str	r6, [sp, #4]
 277:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 287              		.loc 1 277 3 is_stmt 1 view .LVU89
 277:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 288              		.loc 1 277 24 is_stmt 0 view .LVU90
 289 003e 0295     		str	r5, [sp, #8]
 278:Src/main.c    ****   {
 290              		.loc 1 278 3 is_stmt 1 view .LVU91
 278:Src/main.c    ****   {
 291              		.loc 1 278 7 is_stmt 0 view .LVU92
 292 0040 6946     		mov	r1, sp
 293 0042 2046     		mov	r0, r4
 294 0044 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 295              	.LVL8:
 286:Src/main.c    **** 
 296              		.loc 1 286 1 view .LVU93
 297 0048 04B0     		add	sp, sp, #16
 298              	.LCFI5:
 299              		.cfi_def_cfa_offset 16
 300              		@ sp needed
 301 004a 70BD     		pop	{r4, r5, r6, pc}
 302              	.L8:
 303              		.align	2
 304              	.L7:
 305 004c 00000000 		.word	hadc1
 306 0050 00200140 		.word	1073815552
 307 0054 0100000F 		.word	251658241
 308              		.cfi_endproc
 309              	.LFE132:
 311              		.section	.text.MX_CAN1_Init,"ax",%progbits
ARM GAS  /tmp/ccrQkL4m.s 			page 17


 312              		.align	1
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv4-sp-d16
 318              	MX_CAN1_Init:
 319              	.LFB133:
 294:Src/main.c    **** 
 320              		.loc 1 294 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 40
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 30B5     		push	{r4, r5, lr}
 325              	.LCFI6:
 326              		.cfi_def_cfa_offset 12
 327              		.cfi_offset 4, -12
 328              		.cfi_offset 5, -8
 329              		.cfi_offset 14, -4
 330 0002 8BB0     		sub	sp, sp, #44
 331              	.LCFI7:
 332              		.cfi_def_cfa_offset 56
 301:Src/main.c    ****   /* USER CODE END CAN1_Init 1 */
 333              		.loc 1 301 2 view .LVU95
 303:Src/main.c    ****   hcan1.Init.Prescaler = 32;
 334              		.loc 1 303 3 view .LVU96
 303:Src/main.c    ****   hcan1.Init.Prescaler = 32;
 335              		.loc 1 303 18 is_stmt 0 view .LVU97
 336 0004 144D     		ldr	r5, .L11
 337 0006 154B     		ldr	r3, .L11+4
 338 0008 2B60     		str	r3, [r5]
 304:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 339              		.loc 1 304 3 is_stmt 1 view .LVU98
 304:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 340              		.loc 1 304 24 is_stmt 0 view .LVU99
 341 000a 2023     		movs	r3, #32
 342 000c 6B60     		str	r3, [r5, #4]
 305:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 343              		.loc 1 305 3 is_stmt 1 view .LVU100
 305:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 344              		.loc 1 305 19 is_stmt 0 view .LVU101
 345 000e 0024     		movs	r4, #0
 346 0010 AC60     		str	r4, [r5, #8]
 306:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_1TQ;
 347              		.loc 1 306 3 is_stmt 1 view .LVU102
 306:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_1TQ;
 348              		.loc 1 306 28 is_stmt 0 view .LVU103
 349 0012 EC60     		str	r4, [r5, #12]
 307:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 350              		.loc 1 307 3 is_stmt 1 view .LVU104
 307:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 351              		.loc 1 307 23 is_stmt 0 view .LVU105
 352 0014 2C61     		str	r4, [r5, #16]
 308:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 353              		.loc 1 308 3 is_stmt 1 view .LVU106
 308:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 354              		.loc 1 308 23 is_stmt 0 view .LVU107
 355 0016 6C61     		str	r4, [r5, #20]
ARM GAS  /tmp/ccrQkL4m.s 			page 18


 309:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 356              		.loc 1 309 3 is_stmt 1 view .LVU108
 309:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 357              		.loc 1 309 32 is_stmt 0 view .LVU109
 358 0018 2C76     		strb	r4, [r5, #24]
 310:Src/main.c    ****   hcan1.Init.AutoWakeUp = DISABLE;
 359              		.loc 1 310 3 is_stmt 1 view .LVU110
 310:Src/main.c    ****   hcan1.Init.AutoWakeUp = DISABLE;
 360              		.loc 1 310 25 is_stmt 0 view .LVU111
 361 001a 6C76     		strb	r4, [r5, #25]
 311:Src/main.c    ****   hcan1.Init.AutoRetransmission = DISABLE;
 362              		.loc 1 311 3 is_stmt 1 view .LVU112
 311:Src/main.c    ****   hcan1.Init.AutoRetransmission = DISABLE;
 363              		.loc 1 311 25 is_stmt 0 view .LVU113
 364 001c AC76     		strb	r4, [r5, #26]
 312:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 365              		.loc 1 312 3 is_stmt 1 view .LVU114
 312:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 366              		.loc 1 312 33 is_stmt 0 view .LVU115
 367 001e EC76     		strb	r4, [r5, #27]
 313:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 368              		.loc 1 313 3 is_stmt 1 view .LVU116
 313:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 369              		.loc 1 313 32 is_stmt 0 view .LVU117
 370 0020 2C77     		strb	r4, [r5, #28]
 314:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 371              		.loc 1 314 3 is_stmt 1 view .LVU118
 314:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 372              		.loc 1 314 35 is_stmt 0 view .LVU119
 373 0022 6C77     		strb	r4, [r5, #29]
 315:Src/main.c    ****   {
 374              		.loc 1 315 3 is_stmt 1 view .LVU120
 315:Src/main.c    ****   {
 375              		.loc 1 315 7 is_stmt 0 view .LVU121
 376 0024 2846     		mov	r0, r5
 377 0026 FFF7FEFF 		bl	HAL_CAN_Init
 378              	.LVL9:
 320:Src/main.c    **** 	sFilterConfig1.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 379              		.loc 1 320 2 is_stmt 1 view .LVU122
 320:Src/main.c    **** 	sFilterConfig1.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 380              		.loc 1 320 28 is_stmt 0 view .LVU123
 381 002a 0594     		str	r4, [sp, #20]
 321:Src/main.c    **** 	sFilterConfig1.FilterScale = CAN_FILTERSCALE_32BIT;		
 382              		.loc 1 321 2 is_stmt 1 view .LVU124
 321:Src/main.c    **** 	sFilterConfig1.FilterScale = CAN_FILTERSCALE_32BIT;		
 383              		.loc 1 321 28 is_stmt 0 view .LVU125
 384 002c 0694     		str	r4, [sp, #24]
 322:Src/main.c    **** 	sFilterConfig1.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifi
 385              		.loc 1 322 2 is_stmt 1 view .LVU126
 322:Src/main.c    **** 	sFilterConfig1.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifi
 386              		.loc 1 322 29 is_stmt 0 view .LVU127
 387 002e 0123     		movs	r3, #1
 388 0030 0793     		str	r3, [sp, #28]
 323:Src/main.c    **** 	sFilterConfig1.FilterIdLow = 0x0000;
 389              		.loc 1 323 2 is_stmt 1 view .LVU128
 323:Src/main.c    **** 	sFilterConfig1.FilterIdLow = 0x0000;
 390              		.loc 1 323 30 is_stmt 0 view .LVU129
ARM GAS  /tmp/ccrQkL4m.s 			page 19


 391 0032 0094     		str	r4, [sp]
 324:Src/main.c    **** 	sFilterConfig1.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare
 392              		.loc 1 324 2 is_stmt 1 view .LVU130
 324:Src/main.c    **** 	sFilterConfig1.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare
 393              		.loc 1 324 29 is_stmt 0 view .LVU131
 394 0034 0194     		str	r4, [sp, #4]
 325:Src/main.c    **** 	sFilterConfig1.FilterMaskIdLow = 0x0000;
 395              		.loc 1 325 2 is_stmt 1 view .LVU132
 325:Src/main.c    **** 	sFilterConfig1.FilterMaskIdLow = 0x0000;
 396              		.loc 1 325 34 is_stmt 0 view .LVU133
 397 0036 0294     		str	r4, [sp, #8]
 326:Src/main.c    **** 	sFilterConfig1.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen in
 398              		.loc 1 326 2 is_stmt 1 view .LVU134
 326:Src/main.c    **** 	sFilterConfig1.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen in
 399              		.loc 1 326 33 is_stmt 0 view .LVU135
 400 0038 0394     		str	r4, [sp, #12]
 327:Src/main.c    **** 	sFilterConfig1.FilterActivation = ENABLE;
 401              		.loc 1 327 2 is_stmt 1 view .LVU136
 327:Src/main.c    **** 	sFilterConfig1.FilterActivation = ENABLE;
 402              		.loc 1 327 38 is_stmt 0 view .LVU137
 403 003a 0494     		str	r4, [sp, #16]
 328:Src/main.c    **** 	
 404              		.loc 1 328 2 is_stmt 1 view .LVU138
 328:Src/main.c    **** 	
 405              		.loc 1 328 34 is_stmt 0 view .LVU139
 406 003c 0893     		str	r3, [sp, #32]
 330:Src/main.c    ****   
 407              		.loc 1 330 2 is_stmt 1 view .LVU140
 408 003e 6946     		mov	r1, sp
 409 0040 2846     		mov	r0, r5
 410 0042 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 411              	.LVL10:
 332:Src/main.c    **** 	
 412              		.loc 1 332 2 view .LVU141
 413 0046 2846     		mov	r0, r5
 414 0048 FFF7FEFF 		bl	HAL_CAN_Start
 415              	.LVL11:
 334:Src/main.c    ****   /* USER CODE END CAN1_Init 2 */
 416              		.loc 1 334 2 view .LVU142
 417 004c 0221     		movs	r1, #2
 418 004e 2846     		mov	r0, r5
 419 0050 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 420              	.LVL12:
 337:Src/main.c    **** 
 421              		.loc 1 337 1 is_stmt 0 view .LVU143
 422 0054 0BB0     		add	sp, sp, #44
 423              	.LCFI8:
 424              		.cfi_def_cfa_offset 12
 425              		@ sp needed
 426 0056 30BD     		pop	{r4, r5, pc}
 427              	.L12:
 428              		.align	2
 429              	.L11:
 430 0058 00000000 		.word	hcan1
 431 005c 00640040 		.word	1073767424
 432              		.cfi_endproc
 433              	.LFE133:
ARM GAS  /tmp/ccrQkL4m.s 			page 20


 435              		.section	.text.MX_CAN2_Init,"ax",%progbits
 436              		.align	1
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv4-sp-d16
 442              	MX_CAN2_Init:
 443              	.LFB134:
 345:Src/main.c    **** 
 444              		.loc 1 345 1 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 40
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448 0000 30B5     		push	{r4, r5, lr}
 449              	.LCFI9:
 450              		.cfi_def_cfa_offset 12
 451              		.cfi_offset 4, -12
 452              		.cfi_offset 5, -8
 453              		.cfi_offset 14, -4
 454 0002 8BB0     		sub	sp, sp, #44
 455              	.LCFI10:
 456              		.cfi_def_cfa_offset 56
 352:Src/main.c    ****   /* USER CODE END CAN2_Init 1 */
 457              		.loc 1 352 2 view .LVU145
 354:Src/main.c    ****   hcan2.Init.Prescaler = 32; //change back to 64?
 458              		.loc 1 354 3 view .LVU146
 354:Src/main.c    ****   hcan2.Init.Prescaler = 32; //change back to 64?
 459              		.loc 1 354 18 is_stmt 0 view .LVU147
 460 0004 1A4D     		ldr	r5, .L15
 461 0006 1B4B     		ldr	r3, .L15+4
 462 0008 2B60     		str	r3, [r5]
 355:Src/main.c    ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 463              		.loc 1 355 3 is_stmt 1 view .LVU148
 355:Src/main.c    ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 464              		.loc 1 355 24 is_stmt 0 view .LVU149
 465 000a 2023     		movs	r3, #32
 466 000c 6B60     		str	r3, [r5, #4]
 356:Src/main.c    ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 467              		.loc 1 356 3 is_stmt 1 view .LVU150
 356:Src/main.c    ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 468              		.loc 1 356 19 is_stmt 0 view .LVU151
 469 000e 0024     		movs	r4, #0
 470 0010 AC60     		str	r4, [r5, #8]
 357:Src/main.c    ****   hcan2.Init.TimeSeg1 = CAN_BS1_1TQ;
 471              		.loc 1 357 3 is_stmt 1 view .LVU152
 357:Src/main.c    ****   hcan2.Init.TimeSeg1 = CAN_BS1_1TQ;
 472              		.loc 1 357 28 is_stmt 0 view .LVU153
 473 0012 EC60     		str	r4, [r5, #12]
 358:Src/main.c    ****   hcan2.Init.TimeSeg2 = CAN_BS2_1TQ;
 474              		.loc 1 358 3 is_stmt 1 view .LVU154
 358:Src/main.c    ****   hcan2.Init.TimeSeg2 = CAN_BS2_1TQ;
 475              		.loc 1 358 23 is_stmt 0 view .LVU155
 476 0014 2C61     		str	r4, [r5, #16]
 359:Src/main.c    ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 477              		.loc 1 359 3 is_stmt 1 view .LVU156
 359:Src/main.c    ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 478              		.loc 1 359 23 is_stmt 0 view .LVU157
ARM GAS  /tmp/ccrQkL4m.s 			page 21


 479 0016 6C61     		str	r4, [r5, #20]
 360:Src/main.c    ****   hcan2.Init.AutoBusOff = DISABLE;
 480              		.loc 1 360 3 is_stmt 1 view .LVU158
 360:Src/main.c    ****   hcan2.Init.AutoBusOff = DISABLE;
 481              		.loc 1 360 32 is_stmt 0 view .LVU159
 482 0018 2C76     		strb	r4, [r5, #24]
 361:Src/main.c    ****   hcan2.Init.AutoWakeUp = DISABLE;
 483              		.loc 1 361 3 is_stmt 1 view .LVU160
 361:Src/main.c    ****   hcan2.Init.AutoWakeUp = DISABLE;
 484              		.loc 1 361 25 is_stmt 0 view .LVU161
 485 001a 6C76     		strb	r4, [r5, #25]
 362:Src/main.c    ****   hcan2.Init.AutoRetransmission = DISABLE;
 486              		.loc 1 362 3 is_stmt 1 view .LVU162
 362:Src/main.c    ****   hcan2.Init.AutoRetransmission = DISABLE;
 487              		.loc 1 362 25 is_stmt 0 view .LVU163
 488 001c AC76     		strb	r4, [r5, #26]
 363:Src/main.c    ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 489              		.loc 1 363 3 is_stmt 1 view .LVU164
 363:Src/main.c    ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 490              		.loc 1 363 33 is_stmt 0 view .LVU165
 491 001e EC76     		strb	r4, [r5, #27]
 364:Src/main.c    ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 492              		.loc 1 364 3 is_stmt 1 view .LVU166
 364:Src/main.c    ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 493              		.loc 1 364 32 is_stmt 0 view .LVU167
 494 0020 2C77     		strb	r4, [r5, #28]
 365:Src/main.c    ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 495              		.loc 1 365 3 is_stmt 1 view .LVU168
 365:Src/main.c    ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 496              		.loc 1 365 35 is_stmt 0 view .LVU169
 497 0022 6C77     		strb	r4, [r5, #29]
 366:Src/main.c    ****   {
 498              		.loc 1 366 3 is_stmt 1 view .LVU170
 366:Src/main.c    ****   {
 499              		.loc 1 366 7 is_stmt 0 view .LVU171
 500 0024 2846     		mov	r0, r5
 501 0026 FFF7FEFF 		bl	HAL_CAN_Init
 502              	.LVL13:
 371:Src/main.c    **** 	sFilterConfig2.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 503              		.loc 1 371 2 is_stmt 1 view .LVU172
 371:Src/main.c    **** 	sFilterConfig2.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 504              		.loc 1 371 28 is_stmt 0 view .LVU173
 505 002a 0123     		movs	r3, #1
 506 002c 0593     		str	r3, [sp, #20]
 372:Src/main.c    **** 	sFilterConfig2.FilterScale = CAN_FILTERSCALE_32BIT;		
 507              		.loc 1 372 2 is_stmt 1 view .LVU174
 372:Src/main.c    **** 	sFilterConfig2.FilterScale = CAN_FILTERSCALE_32BIT;		
 508              		.loc 1 372 28 is_stmt 0 view .LVU175
 509 002e 0694     		str	r4, [sp, #24]
 373:Src/main.c    **** 	sFilterConfig2.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifi
 510              		.loc 1 373 2 is_stmt 1 view .LVU176
 373:Src/main.c    **** 	sFilterConfig2.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifi
 511              		.loc 1 373 29 is_stmt 0 view .LVU177
 512 0030 0793     		str	r3, [sp, #28]
 374:Src/main.c    **** 	sFilterConfig2.FilterIdLow = 0x0000;
 513              		.loc 1 374 2 is_stmt 1 view .LVU178
 374:Src/main.c    **** 	sFilterConfig2.FilterIdLow = 0x0000;
ARM GAS  /tmp/ccrQkL4m.s 			page 22


 514              		.loc 1 374 30 is_stmt 0 view .LVU179
 515 0032 0094     		str	r4, [sp]
 375:Src/main.c    **** 	sFilterConfig2.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare
 516              		.loc 1 375 2 is_stmt 1 view .LVU180
 375:Src/main.c    **** 	sFilterConfig2.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare
 517              		.loc 1 375 29 is_stmt 0 view .LVU181
 518 0034 0194     		str	r4, [sp, #4]
 376:Src/main.c    **** 	sFilterConfig2.FilterMaskIdLow = 0x0000;
 519              		.loc 1 376 2 is_stmt 1 view .LVU182
 376:Src/main.c    **** 	sFilterConfig2.FilterMaskIdLow = 0x0000;
 520              		.loc 1 376 34 is_stmt 0 view .LVU183
 521 0036 0294     		str	r4, [sp, #8]
 377:Src/main.c    **** 	sFilterConfig2.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen in
 522              		.loc 1 377 2 is_stmt 1 view .LVU184
 377:Src/main.c    **** 	sFilterConfig2.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen in
 523              		.loc 1 377 33 is_stmt 0 view .LVU185
 524 0038 0394     		str	r4, [sp, #12]
 378:Src/main.c    **** 	sFilterConfig2.FilterActivation = ENABLE;
 525              		.loc 1 378 2 is_stmt 1 view .LVU186
 378:Src/main.c    **** 	sFilterConfig2.FilterActivation = ENABLE;
 526              		.loc 1 378 38 is_stmt 0 view .LVU187
 527 003a 0494     		str	r4, [sp, #16]
 379:Src/main.c    **** 	
 528              		.loc 1 379 2 is_stmt 1 view .LVU188
 379:Src/main.c    **** 	
 529              		.loc 1 379 34 is_stmt 0 view .LVU189
 530 003c 0893     		str	r3, [sp, #32]
 381:Src/main.c    ****   
 531              		.loc 1 381 2 is_stmt 1 view .LVU190
 532 003e 6946     		mov	r1, sp
 533 0040 2846     		mov	r0, r5
 534 0042 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 535              	.LVL14:
 383:Src/main.c    **** 	
 536              		.loc 1 383 2 view .LVU191
 537 0046 2846     		mov	r0, r5
 538 0048 FFF7FEFF 		bl	HAL_CAN_Start
 539              	.LVL15:
 385:Src/main.c    **** 
 540              		.loc 1 385 2 view .LVU192
 541 004c 0221     		movs	r1, #2
 542 004e 2846     		mov	r0, r5
 543 0050 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 544              	.LVL16:
 387:Src/main.c    **** 	TxHeader2.ExtId = 0x1806E5F4; 					// CAN extended ID
 545              		.loc 1 387 2 view .LVU193
 387:Src/main.c    **** 	TxHeader2.ExtId = 0x1806E5F4; 					// CAN extended ID
 546              		.loc 1 387 18 is_stmt 0 view .LVU194
 547 0054 084B     		ldr	r3, .L15+8
 548 0056 40F22132 		movw	r2, #801
 549 005a 1A60     		str	r2, [r3]
 388:Src/main.c    **** 	TxHeader2.RTR = CAN_RTR_DATA; 				// CAN frame type
 550              		.loc 1 388 2 is_stmt 1 view .LVU195
 388:Src/main.c    **** 	TxHeader2.RTR = CAN_RTR_DATA; 				// CAN frame type
 551              		.loc 1 388 18 is_stmt 0 view .LVU196
 552 005c 074A     		ldr	r2, .L15+12
 553 005e 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccrQkL4m.s 			page 23


 389:Src/main.c    **** 	TxHeader2.IDE = CAN_ID_EXT; 				// CAN ID type
 554              		.loc 1 389 2 is_stmt 1 view .LVU197
 389:Src/main.c    **** 	TxHeader2.IDE = CAN_ID_EXT; 				// CAN ID type
 555              		.loc 1 389 16 is_stmt 0 view .LVU198
 556 0060 DC60     		str	r4, [r3, #12]
 390:Src/main.c    **** 	TxHeader2.DLC = 8; 						// CAN frame length in bytes
 557              		.loc 1 390 2 is_stmt 1 view .LVU199
 390:Src/main.c    **** 	TxHeader2.DLC = 8; 						// CAN frame length in bytes
 558              		.loc 1 390 16 is_stmt 0 view .LVU200
 559 0062 0422     		movs	r2, #4
 560 0064 9A60     		str	r2, [r3, #8]
 391:Src/main.c    **** 	TxHeader2.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 561              		.loc 1 391 2 is_stmt 1 view .LVU201
 391:Src/main.c    **** 	TxHeader2.TransmitGlobalTime = DISABLE;	// CAN timestamp in TxData[6] and TxData[7]
 562              		.loc 1 391 16 is_stmt 0 view .LVU202
 563 0066 0822     		movs	r2, #8
 564 0068 1A61     		str	r2, [r3, #16]
 392:Src/main.c    ****   /* USER CODE END CAN2_Init 2 */
 565              		.loc 1 392 2 is_stmt 1 view .LVU203
 392:Src/main.c    ****   /* USER CODE END CAN2_Init 2 */
 566              		.loc 1 392 31 is_stmt 0 view .LVU204
 567 006a 1C75     		strb	r4, [r3, #20]
 395:Src/main.c    **** 
 568              		.loc 1 395 1 view .LVU205
 569 006c 0BB0     		add	sp, sp, #44
 570              	.LCFI11:
 571              		.cfi_def_cfa_offset 12
 572              		@ sp needed
 573 006e 30BD     		pop	{r4, r5, pc}
 574              	.L16:
 575              		.align	2
 576              	.L15:
 577 0070 00000000 		.word	hcan2
 578 0074 00680040 		.word	1073768448
 579 0078 00000000 		.word	TxHeader2
 580 007c F4E50618 		.word	403105268
 581              		.cfi_endproc
 582              	.LFE134:
 584              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 585              		.align	1
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 589              		.fpu fpv4-sp-d16
 591              	MX_USART1_UART_Init:
 592              	.LFB137:
 490:Src/main.c    **** 
 593              		.loc 1 490 1 is_stmt 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597 0000 08B5     		push	{r3, lr}
 598              	.LCFI12:
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 3, -8
 601              		.cfi_offset 14, -4
 499:Src/main.c    ****   huart1.Init.BaudRate = 115200;
ARM GAS  /tmp/ccrQkL4m.s 			page 24


 602              		.loc 1 499 3 view .LVU207
 499:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 603              		.loc 1 499 19 is_stmt 0 view .LVU208
 604 0002 0848     		ldr	r0, .L19
 605 0004 084B     		ldr	r3, .L19+4
 606 0006 0360     		str	r3, [r0]
 500:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 607              		.loc 1 500 3 is_stmt 1 view .LVU209
 500:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 608              		.loc 1 500 24 is_stmt 0 view .LVU210
 609 0008 4FF4E133 		mov	r3, #115200
 610 000c 4360     		str	r3, [r0, #4]
 501:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 611              		.loc 1 501 3 is_stmt 1 view .LVU211
 501:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 612              		.loc 1 501 26 is_stmt 0 view .LVU212
 613 000e 0023     		movs	r3, #0
 614 0010 8360     		str	r3, [r0, #8]
 502:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 615              		.loc 1 502 3 is_stmt 1 view .LVU213
 502:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 616              		.loc 1 502 24 is_stmt 0 view .LVU214
 617 0012 C360     		str	r3, [r0, #12]
 503:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 618              		.loc 1 503 3 is_stmt 1 view .LVU215
 503:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 619              		.loc 1 503 22 is_stmt 0 view .LVU216
 620 0014 0361     		str	r3, [r0, #16]
 504:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 621              		.loc 1 504 3 is_stmt 1 view .LVU217
 504:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 622              		.loc 1 504 20 is_stmt 0 view .LVU218
 623 0016 0C22     		movs	r2, #12
 624 0018 4261     		str	r2, [r0, #20]
 505:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 625              		.loc 1 505 3 is_stmt 1 view .LVU219
 505:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 626              		.loc 1 505 25 is_stmt 0 view .LVU220
 627 001a 8361     		str	r3, [r0, #24]
 506:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 628              		.loc 1 506 3 is_stmt 1 view .LVU221
 506:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 629              		.loc 1 506 28 is_stmt 0 view .LVU222
 630 001c C361     		str	r3, [r0, #28]
 507:Src/main.c    ****   {
 631              		.loc 1 507 3 is_stmt 1 view .LVU223
 507:Src/main.c    ****   {
 632              		.loc 1 507 7 is_stmt 0 view .LVU224
 633 001e FFF7FEFF 		bl	HAL_UART_Init
 634              	.LVL17:
 515:Src/main.c    **** 
 635              		.loc 1 515 1 view .LVU225
 636 0022 08BD     		pop	{r3, pc}
 637              	.L20:
 638              		.align	2
 639              	.L19:
 640 0024 00000000 		.word	huart1
ARM GAS  /tmp/ccrQkL4m.s 			page 25


 641 0028 00100140 		.word	1073811456
 642              		.cfi_endproc
 643              	.LFE137:
 645              		.section	.text.MX_TIM3_Init,"ax",%progbits
 646              		.align	1
 647              		.syntax unified
 648              		.thumb
 649              		.thumb_func
 650              		.fpu fpv4-sp-d16
 652              	MX_TIM3_Init:
 653              	.LFB136:
 441:Src/main.c    **** 
 654              		.loc 1 441 1 is_stmt 1 view -0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 40
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658 0000 30B5     		push	{r4, r5, lr}
 659              	.LCFI13:
 660              		.cfi_def_cfa_offset 12
 661              		.cfi_offset 4, -12
 662              		.cfi_offset 5, -8
 663              		.cfi_offset 14, -4
 664 0002 8BB0     		sub	sp, sp, #44
 665              	.LCFI14:
 666              		.cfi_def_cfa_offset 56
 447:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 667              		.loc 1 447 3 view .LVU227
 447:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 668              		.loc 1 447 27 is_stmt 0 view .LVU228
 669 0004 0024     		movs	r4, #0
 670 0006 0894     		str	r4, [sp, #32]
 671 0008 0994     		str	r4, [sp, #36]
 448:Src/main.c    **** 
 672              		.loc 1 448 3 is_stmt 1 view .LVU229
 448:Src/main.c    **** 
 673              		.loc 1 448 22 is_stmt 0 view .LVU230
 674 000a 0194     		str	r4, [sp, #4]
 675 000c 0294     		str	r4, [sp, #8]
 676 000e 0394     		str	r4, [sp, #12]
 677 0010 0494     		str	r4, [sp, #16]
 678 0012 0594     		str	r4, [sp, #20]
 679 0014 0694     		str	r4, [sp, #24]
 680 0016 0794     		str	r4, [sp, #28]
 453:Src/main.c    ****   htim3.Init.Prescaler = 0;
 681              		.loc 1 453 3 is_stmt 1 view .LVU231
 453:Src/main.c    ****   htim3.Init.Prescaler = 0;
 682              		.loc 1 453 18 is_stmt 0 view .LVU232
 683 0018 0F4D     		ldr	r5, .L23
 684 001a 104B     		ldr	r3, .L23+4
 685 001c 2B60     		str	r3, [r5]
 454:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 686              		.loc 1 454 3 is_stmt 1 view .LVU233
 454:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 687              		.loc 1 454 24 is_stmt 0 view .LVU234
 688 001e 6C60     		str	r4, [r5, #4]
 455:Src/main.c    ****   htim3.Init.Period = 0;
 689              		.loc 1 455 3 is_stmt 1 view .LVU235
ARM GAS  /tmp/ccrQkL4m.s 			page 26


 455:Src/main.c    ****   htim3.Init.Period = 0;
 690              		.loc 1 455 26 is_stmt 0 view .LVU236
 691 0020 AC60     		str	r4, [r5, #8]
 456:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 692              		.loc 1 456 3 is_stmt 1 view .LVU237
 456:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 693              		.loc 1 456 21 is_stmt 0 view .LVU238
 694 0022 EC60     		str	r4, [r5, #12]
 457:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 695              		.loc 1 457 3 is_stmt 1 view .LVU239
 457:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 696              		.loc 1 457 28 is_stmt 0 view .LVU240
 697 0024 2C61     		str	r4, [r5, #16]
 458:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 698              		.loc 1 458 3 is_stmt 1 view .LVU241
 458:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 699              		.loc 1 458 32 is_stmt 0 view .LVU242
 700 0026 AC61     		str	r4, [r5, #24]
 459:Src/main.c    ****   {
 701              		.loc 1 459 3 is_stmt 1 view .LVU243
 459:Src/main.c    ****   {
 702              		.loc 1 459 7 is_stmt 0 view .LVU244
 703 0028 2846     		mov	r0, r5
 704 002a FFF7FEFF 		bl	HAL_TIM_PWM_Init
 705              	.LVL18:
 463:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 706              		.loc 1 463 3 is_stmt 1 view .LVU245
 463:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 707              		.loc 1 463 37 is_stmt 0 view .LVU246
 708 002e 0894     		str	r4, [sp, #32]
 464:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 709              		.loc 1 464 3 is_stmt 1 view .LVU247
 464:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 710              		.loc 1 464 33 is_stmt 0 view .LVU248
 711 0030 0994     		str	r4, [sp, #36]
 465:Src/main.c    ****   {
 712              		.loc 1 465 3 is_stmt 1 view .LVU249
 465:Src/main.c    ****   {
 713              		.loc 1 465 7 is_stmt 0 view .LVU250
 714 0032 08A9     		add	r1, sp, #32
 715 0034 2846     		mov	r0, r5
 716 0036 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 717              	.LVL19:
 469:Src/main.c    ****   sConfigOC.Pulse = 0;
 718              		.loc 1 469 3 is_stmt 1 view .LVU251
 469:Src/main.c    ****   sConfigOC.Pulse = 0;
 719              		.loc 1 469 20 is_stmt 0 view .LVU252
 720 003a 6023     		movs	r3, #96
 721 003c 0193     		str	r3, [sp, #4]
 470:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 722              		.loc 1 470 3 is_stmt 1 view .LVU253
 470:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 723              		.loc 1 470 19 is_stmt 0 view .LVU254
 724 003e 0294     		str	r4, [sp, #8]
 471:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 725              		.loc 1 471 3 is_stmt 1 view .LVU255
 471:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
ARM GAS  /tmp/ccrQkL4m.s 			page 27


 726              		.loc 1 471 24 is_stmt 0 view .LVU256
 727 0040 0394     		str	r4, [sp, #12]
 472:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 728              		.loc 1 472 3 is_stmt 1 view .LVU257
 472:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 729              		.loc 1 472 24 is_stmt 0 view .LVU258
 730 0042 0594     		str	r4, [sp, #20]
 473:Src/main.c    ****   {
 731              		.loc 1 473 3 is_stmt 1 view .LVU259
 473:Src/main.c    ****   {
 732              		.loc 1 473 7 is_stmt 0 view .LVU260
 733 0044 2246     		mov	r2, r4
 734 0046 01A9     		add	r1, sp, #4
 735 0048 2846     		mov	r0, r5
 736 004a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 737              	.LVL20:
 480:Src/main.c    **** 
 738              		.loc 1 480 3 is_stmt 1 view .LVU261
 739 004e 2846     		mov	r0, r5
 740 0050 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 741              	.LVL21:
 482:Src/main.c    **** 
 742              		.loc 1 482 1 is_stmt 0 view .LVU262
 743 0054 0BB0     		add	sp, sp, #44
 744              	.LCFI15:
 745              		.cfi_def_cfa_offset 12
 746              		@ sp needed
 747 0056 30BD     		pop	{r4, r5, pc}
 748              	.L24:
 749              		.align	2
 750              	.L23:
 751 0058 00000000 		.word	htim3
 752 005c 00040040 		.word	1073742848
 753              		.cfi_endproc
 754              	.LFE136:
 756              		.section	.text.SystemClock_Config,"ax",%progbits
 757              		.align	1
 758              		.global	SystemClock_Config
 759              		.syntax unified
 760              		.thumb
 761              		.thumb_func
 762              		.fpu fpv4-sp-d16
 764              	SystemClock_Config:
 765              	.LFB131:
 205:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 766              		.loc 1 205 1 is_stmt 1 view -0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 80
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770 0000 10B5     		push	{r4, lr}
 771              	.LCFI16:
 772              		.cfi_def_cfa_offset 8
 773              		.cfi_offset 4, -8
 774              		.cfi_offset 14, -4
 775 0002 94B0     		sub	sp, sp, #80
 776              	.LCFI17:
 777              		.cfi_def_cfa_offset 88
ARM GAS  /tmp/ccrQkL4m.s 			page 28


 206:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 778              		.loc 1 206 3 view .LVU264
 206:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 779              		.loc 1 206 22 is_stmt 0 view .LVU265
 780 0004 3422     		movs	r2, #52
 781 0006 0021     		movs	r1, #0
 782 0008 07A8     		add	r0, sp, #28
 783 000a FFF7FEFF 		bl	memset
 784              	.LVL22:
 207:Src/main.c    **** 
 785              		.loc 1 207 3 is_stmt 1 view .LVU266
 207:Src/main.c    **** 
 786              		.loc 1 207 22 is_stmt 0 view .LVU267
 787 000e 0024     		movs	r4, #0
 788 0010 0294     		str	r4, [sp, #8]
 789 0012 0394     		str	r4, [sp, #12]
 790 0014 0494     		str	r4, [sp, #16]
 791 0016 0594     		str	r4, [sp, #20]
 792 0018 0694     		str	r4, [sp, #24]
 211:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 793              		.loc 1 211 3 is_stmt 1 view .LVU268
 794              	.LBB5:
 211:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 795              		.loc 1 211 3 view .LVU269
 796 001a 0094     		str	r4, [sp]
 211:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 797              		.loc 1 211 3 view .LVU270
 798 001c 164B     		ldr	r3, .L27
 799 001e 1A6C     		ldr	r2, [r3, #64]
 800 0020 42F08052 		orr	r2, r2, #268435456
 801 0024 1A64     		str	r2, [r3, #64]
 211:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 802              		.loc 1 211 3 view .LVU271
 803 0026 1B6C     		ldr	r3, [r3, #64]
 804 0028 03F08053 		and	r3, r3, #268435456
 805 002c 0093     		str	r3, [sp]
 211:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 806              		.loc 1 211 3 view .LVU272
 807 002e 009B     		ldr	r3, [sp]
 808              	.LBE5:
 212:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 809              		.loc 1 212 3 view .LVU273
 810              	.LBB6:
 212:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 811              		.loc 1 212 3 view .LVU274
 812 0030 0194     		str	r4, [sp, #4]
 212:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 813              		.loc 1 212 3 view .LVU275
 814 0032 124A     		ldr	r2, .L27+4
 815 0034 1368     		ldr	r3, [r2]
 816 0036 23F44043 		bic	r3, r3, #49152
 817 003a 43F48043 		orr	r3, r3, #16384
 818 003e 1360     		str	r3, [r2]
 212:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 819              		.loc 1 212 3 view .LVU276
 820 0040 1368     		ldr	r3, [r2]
 821 0042 03F44043 		and	r3, r3, #49152
ARM GAS  /tmp/ccrQkL4m.s 			page 29


 822 0046 0193     		str	r3, [sp, #4]
 212:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 823              		.loc 1 212 3 view .LVU277
 824 0048 019B     		ldr	r3, [sp, #4]
 825              	.LBE6:
 215:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 826              		.loc 1 215 3 view .LVU278
 215:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 827              		.loc 1 215 36 is_stmt 0 view .LVU279
 828 004a 0223     		movs	r3, #2
 829 004c 0793     		str	r3, [sp, #28]
 216:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 830              		.loc 1 216 3 is_stmt 1 view .LVU280
 216:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 831              		.loc 1 216 30 is_stmt 0 view .LVU281
 832 004e 0123     		movs	r3, #1
 833 0050 0A93     		str	r3, [sp, #40]
 217:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 834              		.loc 1 217 3 is_stmt 1 view .LVU282
 217:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 835              		.loc 1 217 41 is_stmt 0 view .LVU283
 836 0052 1023     		movs	r3, #16
 837 0054 0B93     		str	r3, [sp, #44]
 218:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 838              		.loc 1 218 3 is_stmt 1 view .LVU284
 218:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 839              		.loc 1 218 34 is_stmt 0 view .LVU285
 840 0056 0D94     		str	r4, [sp, #52]
 219:Src/main.c    ****   {
 841              		.loc 1 219 3 is_stmt 1 view .LVU286
 219:Src/main.c    ****   {
 842              		.loc 1 219 7 is_stmt 0 view .LVU287
 843 0058 07A8     		add	r0, sp, #28
 844 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 845              	.LVL23:
 225:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 846              		.loc 1 225 3 is_stmt 1 view .LVU288
 225:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 847              		.loc 1 225 31 is_stmt 0 view .LVU289
 848 005e 0F23     		movs	r3, #15
 849 0060 0293     		str	r3, [sp, #8]
 227:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 850              		.loc 1 227 3 is_stmt 1 view .LVU290
 227:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 851              		.loc 1 227 34 is_stmt 0 view .LVU291
 852 0062 0394     		str	r4, [sp, #12]
 228:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 853              		.loc 1 228 3 is_stmt 1 view .LVU292
 228:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 854              		.loc 1 228 35 is_stmt 0 view .LVU293
 855 0064 0494     		str	r4, [sp, #16]
 229:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 856              		.loc 1 229 3 is_stmt 1 view .LVU294
 229:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 857              		.loc 1 229 36 is_stmt 0 view .LVU295
 858 0066 0594     		str	r4, [sp, #20]
 230:Src/main.c    **** 
ARM GAS  /tmp/ccrQkL4m.s 			page 30


 859              		.loc 1 230 3 is_stmt 1 view .LVU296
 230:Src/main.c    **** 
 860              		.loc 1 230 36 is_stmt 0 view .LVU297
 861 0068 0694     		str	r4, [sp, #24]
 232:Src/main.c    ****   {
 862              		.loc 1 232 3 is_stmt 1 view .LVU298
 232:Src/main.c    ****   {
 863              		.loc 1 232 7 is_stmt 0 view .LVU299
 864 006a 2146     		mov	r1, r4
 865 006c 02A8     		add	r0, sp, #8
 866 006e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 867              	.LVL24:
 236:Src/main.c    **** 
 868              		.loc 1 236 1 view .LVU300
 869 0072 14B0     		add	sp, sp, #80
 870              	.LCFI18:
 871              		.cfi_def_cfa_offset 8
 872              		@ sp needed
 873 0074 10BD     		pop	{r4, pc}
 874              	.L28:
 875 0076 00BF     		.align	2
 876              	.L27:
 877 0078 00380240 		.word	1073887232
 878 007c 00700040 		.word	1073770496
 879              		.cfi_endproc
 880              	.LFE131:
 882              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 883              		.align	1
 884              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 885              		.syntax unified
 886              		.thumb
 887              		.thumb_func
 888              		.fpu fpv4-sp-d16
 890              	HAL_CAN_RxFifo0MsgPendingCallback:
 891              	.LVL25:
 892              	.LFB139:
 568:Src/main.c    **** 
 569:Src/main.c    **** /* USER CODE BEGIN 4 */
 570:Src/main.c    **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 893              		.loc 1 570 65 is_stmt 1 view -0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 897              		.loc 1 570 65 is_stmt 0 view .LVU302
 898 0000 10B5     		push	{r4, lr}
 899              	.LCFI19:
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 4, -8
 902              		.cfi_offset 14, -4
 571:Src/main.c    **** 	
 572:Src/main.c    **** 	HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &RxHeader1, RxData1);
 903              		.loc 1 572 2 is_stmt 1 view .LVU303
 904 0002 084C     		ldr	r4, .L31
 905 0004 084B     		ldr	r3, .L31+4
 906 0006 2246     		mov	r2, r4
 907 0008 0021     		movs	r1, #0
 908 000a 0848     		ldr	r0, .L31+8
ARM GAS  /tmp/ccrQkL4m.s 			page 31


 909              	.LVL26:
 910              		.loc 1 572 2 is_stmt 0 view .LVU304
 911 000c FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 912              	.LVL27:
 573:Src/main.c    **** 	HAL_CAN_GetRxMessage(&hcan2, CAN_RX_FIFO0, &RxHeader1, RxData2);
 913              		.loc 1 573 2 is_stmt 1 view .LVU305
 914 0010 074B     		ldr	r3, .L31+12
 915 0012 2246     		mov	r2, r4
 916 0014 0021     		movs	r1, #0
 917 0016 0748     		ldr	r0, .L31+16
 918 0018 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 919              	.LVL28:
 574:Src/main.c    **** 	
 575:Src/main.c    **** 	flag = 1;
 920              		.loc 1 575 2 view .LVU306
 921              		.loc 1 575 7 is_stmt 0 view .LVU307
 922 001c 064B     		ldr	r3, .L31+20
 923 001e 0122     		movs	r2, #1
 924 0020 1A70     		strb	r2, [r3]
 576:Src/main.c    **** 	
 577:Src/main.c    **** }
 925              		.loc 1 577 1 view .LVU308
 926 0022 10BD     		pop	{r4, pc}
 927              	.L32:
 928              		.align	2
 929              	.L31:
 930 0024 00000000 		.word	RxHeader1
 931 0028 00000000 		.word	RxData1
 932 002c 00000000 		.word	hcan1
 933 0030 00000000 		.word	RxData2
 934 0034 00000000 		.word	hcan2
 935 0038 00000000 		.word	.LANCHOR0
 936              		.cfi_endproc
 937              	.LFE139:
 939              		.section	.text.SerialPrint,"ax",%progbits
 940              		.align	1
 941              		.global	SerialPrint
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu fpv4-sp-d16
 947              	SerialPrint:
 948              	.LVL29:
 949              	.LFB140:
 578:Src/main.c    **** 
 579:Src/main.c    **** void SerialPrint(uint8_t data[], uint8_t len) {
 950              		.loc 1 579 47 is_stmt 1 view -0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 1, uses_anonymous_args = 0
 954              		.loc 1 579 47 is_stmt 0 view .LVU310
 955 0000 98B5     		push	{r3, r4, r7, lr}
 956              	.LCFI20:
 957              		.cfi_def_cfa_offset 16
 958              		.cfi_offset 3, -16
 959              		.cfi_offset 4, -12
 960              		.cfi_offset 7, -8
ARM GAS  /tmp/ccrQkL4m.s 			page 32


 961              		.cfi_offset 14, -4
 962 0002 00AF     		add	r7, sp, #0
 963              	.LCFI21:
 964              		.cfi_def_cfa_register 7
 965 0004 0A46     		mov	r2, r1
 580:Src/main.c    **** 	
 581:Src/main.c    **** 	unsigned char serial[len];
 966              		.loc 1 581 2 is_stmt 1 view .LVU311
 967              	.LVL30:
 968              		.loc 1 581 16 is_stmt 0 view .LVU312
 969 0006 CB1D     		adds	r3, r1, #7
 970 0008 03F4FC73 		and	r3, r3, #504
 971 000c ADEB030D 		sub	sp, sp, r3
 972 0010 6946     		mov	r1, sp
 973              	.LVL31:
 582:Src/main.c    **** 	
 583:Src/main.c    **** 	for (uint8_t i = 0; i < len; i++) {
 974              		.loc 1 583 2 is_stmt 1 view .LVU313
 975              	.LBB7:
 976              		.loc 1 583 7 view .LVU314
 977              		.loc 1 583 15 is_stmt 0 view .LVU315
 978 0012 0023     		movs	r3, #0
 979              	.LVL32:
 980              	.L34:
 981              		.loc 1 583 2 discriminator 1 view .LVU316
 982 0014 9342     		cmp	r3, r2
 983 0016 04D2     		bcs	.L37
 584:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 984              		.loc 1 584 3 is_stmt 1 discriminator 3 view .LVU317
 985              		.loc 1 584 15 is_stmt 0 discriminator 3 view .LVU318
 986 0018 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
 987              		.loc 1 584 13 discriminator 3 view .LVU319
 988 001a CC54     		strb	r4, [r1, r3]
 583:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 989              		.loc 1 583 32 discriminator 3 view .LVU320
 990 001c 0133     		adds	r3, r3, #1
 991              	.LVL33:
 583:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 992              		.loc 1 583 32 discriminator 3 view .LVU321
 993 001e DBB2     		uxtb	r3, r3
 994              	.LVL34:
 583:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 995              		.loc 1 583 32 discriminator 3 view .LVU322
 996 0020 F8E7     		b	.L34
 997              	.L37:
 583:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 998              		.loc 1 583 32 discriminator 3 view .LVU323
 999              	.LBE7:
 585:Src/main.c    **** 	}
 586:Src/main.c    **** 	
 587:Src/main.c    **** 	HAL_UART_Transmit(&huart1, serial, len, 1000);
 1000              		.loc 1 587 2 is_stmt 1 view .LVU324
 1001 0022 4FF47A73 		mov	r3, #1000
 1002              	.LVL35:
 1003              		.loc 1 587 2 is_stmt 0 view .LVU325
 1004 0026 0248     		ldr	r0, .L38
 1005              	.LVL36:
ARM GAS  /tmp/ccrQkL4m.s 			page 33


 1006              		.loc 1 587 2 view .LVU326
 1007 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 1008              	.LVL37:
 588:Src/main.c    **** }
 1009              		.loc 1 588 1 view .LVU327
 1010 002c BD46     		mov	sp, r7
 1011              	.LCFI22:
 1012              		.cfi_def_cfa_register 13
 1013              	.LVL38:
 1014              		.loc 1 588 1 view .LVU328
 1015              		@ sp needed
 1016 002e 98BD     		pop	{r3, r4, r7, pc}
 1017              	.L39:
 1018              		.align	2
 1019              	.L38:
 1020 0030 00000000 		.word	huart1
 1021              		.cfi_endproc
 1022              	.LFE140:
 1024              		.section	.text.main,"ax",%progbits
 1025              		.align	1
 1026              		.global	main
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1030              		.fpu fpv4-sp-d16
 1032              	main:
 1033              	.LFB130:
  99:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1034              		.loc 1 99 1 is_stmt 1 view -0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 32
 1037              		@ frame_needed = 1, uses_anonymous_args = 0
 1038 0000 90B5     		push	{r4, r7, lr}
 1039              	.LCFI23:
 1040              		.cfi_def_cfa_offset 12
 1041              		.cfi_offset 4, -12
 1042              		.cfi_offset 7, -8
 1043              		.cfi_offset 14, -4
 1044 0002 8DB0     		sub	sp, sp, #52
 1045              	.LCFI24:
 1046              		.cfi_def_cfa_offset 64
 1047 0004 04AF     		add	r7, sp, #16
 1048              	.LCFI25:
 1049              		.cfi_def_cfa 7, 48
 107:Src/main.c    **** 
 1050              		.loc 1 107 3 view .LVU330
 1051 0006 FFF7FEFF 		bl	HAL_Init
 1052              	.LVL39:
 114:Src/main.c    **** 
 1053              		.loc 1 114 3 view .LVU331
 1054 000a FFF7FEFF 		bl	SystemClock_Config
 1055              	.LVL40:
 121:Src/main.c    ****   MX_ADC1_Init();
 1056              		.loc 1 121 3 view .LVU332
 1057 000e FFF7FEFF 		bl	MX_GPIO_Init
 1058              	.LVL41:
 122:Src/main.c    ****   MX_CAN1_Init();
ARM GAS  /tmp/ccrQkL4m.s 			page 34


 1059              		.loc 1 122 3 view .LVU333
 1060 0012 FFF7FEFF 		bl	MX_ADC1_Init
 1061              	.LVL42:
 123:Src/main.c    ****   MX_CAN2_Init();
 1062              		.loc 1 123 3 view .LVU334
 1063 0016 FFF7FEFF 		bl	MX_CAN1_Init
 1064              	.LVL43:
 124:Src/main.c    ****   //MX_SPI1_Init();
 1065              		.loc 1 124 3 view .LVU335
 1066 001a FFF7FEFF 		bl	MX_CAN2_Init
 1067              	.LVL44:
 126:Src/main.c    ****   MX_TIM3_Init();
 1068              		.loc 1 126 3 view .LVU336
 1069 001e FFF7FEFF 		bl	MX_USART1_UART_Init
 1070              	.LVL45:
 127:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1071              		.loc 1 127 3 view .LVU337
 1072 0022 FFF7FEFF 		bl	MX_TIM3_Init
 1073              	.LVL46:
 129:Src/main.c    ****   initPECTable();
 1074              		.loc 1 129 3 view .LVU338
 1075 0026 FFF7FEFF 		bl	SPI_Init
 1076              	.LVL47:
 130:Src/main.c    ****   loadConfig(&BMSconfig); // loads configuration settings from config.c
 1077              		.loc 1 130 3 view .LVU339
 1078 002a FFF7FEFF 		bl	initPECTable
 1079              	.LVL48:
 131:Src/main.c    ****   writeConfig(BMSconfig, 1); // number specifies how many ICs are connected
 1080              		.loc 1 131 3 view .LVU340
 1081 002e 374C     		ldr	r4, .L46
 1082 0030 2046     		mov	r0, r4
 1083 0032 FFF7FEFF 		bl	loadConfig
 1084              	.LVL49:
 132:Src/main.c    ****   // !! this assumes that the addresses for each IC count up from 1 !! //
 1085              		.loc 1 132 3 view .LVU341
 1086 0036 0123     		movs	r3, #1
 1087 0038 0393     		str	r3, [sp, #12]
 1088 003a 6B46     		mov	r3, sp
 1089 003c 2246     		mov	r2, r4
 1090 003e 52F8100F 		ldr	r0, [r2, #16]!	@ unaligned
 1091 0042 5168     		ldr	r1, [r2, #4]	@ unaligned
 1092 0044 9268     		ldr	r2, [r2, #8]	@ unaligned
 1093 0046 07C3     		stmia	r3!, {r0, r1, r2}
 1094 0048 2068     		ldr	r0, [r4]	@ unaligned
 1095 004a 6168     		ldr	r1, [r4, #4]	@ unaligned
 1096 004c A268     		ldr	r2, [r4, #8]	@ unaligned
 1097 004e E368     		ldr	r3, [r4, #12]	@ unaligned
 1098 0050 FFF7FEFF 		bl	writeConfig
 1099              	.LVL50:
 134:Src/main.c    ****   uint16_t voltage[8];
 1100              		.loc 1 134 3 view .LVU342
 1101 0054 2E4B     		ldr	r3, .L46+4
 1102 0056 1A68     		ldr	r2, [r3]
 1103 0058 2E4B     		ldr	r3, .L46+8
 1104 005a 1B68     		ldr	r3, [r3]
 1105              	.LVL51:
 134:Src/main.c    ****   uint16_t voltage[8];
ARM GAS  /tmp/ccrQkL4m.s 			page 35


 1106              		.loc 1 134 9 is_stmt 0 view .LVU343
 1107 005c 03FB02F3 		mul	r3, r3, r2
 1108              	.LVL52:
 134:Src/main.c    ****   uint16_t voltage[8];
 1109              		.loc 1 134 9 view .LVU344
 1110 0060 9B00     		lsls	r3, r3, #2
 1111 0062 0733     		adds	r3, r3, #7
 1112 0064 23F00703 		bic	r3, r3, #7
 1113 0068 ADEB030D 		sub	sp, sp, r3
 1114 006c 04AC     		add	r4, sp, #16
 1115              	.LVL53:
 134:Src/main.c    ****   uint16_t voltage[8];
 1116              		.loc 1 134 9 view .LVU345
 1117 006e 09E0     		b	.L43
 1118              	.LVL54:
 1119              	.L45:
 157:Src/main.c    **** 	
 1120              		.loc 1 157 17 is_stmt 1 discriminator 1 view .LVU346
 1121 0070 4FF40051 		mov	r1, #8192
 1122 0074 2848     		ldr	r0, .L46+12
 1123 0076 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1124              	.LVL55:
 1125 007a 07E0     		b	.L41
 1126              	.L42:
 194:Src/main.c    ****     /* USER CODE BEGIN 3 */
 1127              		.loc 1 194 2 view .LVU347
 1128 007c 4FF4FA70 		mov	r0, #500
 1129 0080 FFF7FEFF 		bl	HAL_Delay
 1130              	.LVL56:
 1131              	.L43:
 135:Src/main.c    ****   uint8_t printbuffer[16];
 1132              		.loc 1 135 3 view .LVU348
 136:Src/main.c    ****   /* USER CODE END 2 */
 1133              		.loc 1 136 3 view .LVU349
 141:Src/main.c    ****   {
 1134              		.loc 1 141 3 view .LVU350
 157:Src/main.c    **** 	
 1135              		.loc 1 157 2 view .LVU351
 157:Src/main.c    **** 	
 1136              		.loc 1 157 11 is_stmt 0 view .LVU352
 1137 0084 254B     		ldr	r3, .L46+16
 1138 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 157:Src/main.c    **** 	
 1139              		.loc 1 157 5 view .LVU353
 1140 0088 012B     		cmp	r3, #1
 1141 008a F1D0     		beq	.L45
 1142              	.L41:
 161:Src/main.c    **** 	printbuffer[1] = (uint8_t) voltage[0] & 0xFF;
 1143              		.loc 1 161 2 is_stmt 1 view .LVU354
 161:Src/main.c    **** 	printbuffer[1] = (uint8_t) voltage[0] & 0xFF;
 1144              		.loc 1 161 37 is_stmt 0 view .LVU355
 1145 008c 3B8A     		ldrh	r3, [r7, #16]
 161:Src/main.c    **** 	printbuffer[1] = (uint8_t) voltage[0] & 0xFF;
 1146              		.loc 1 161 19 view .LVU356
 1147 008e 1A0A     		lsrs	r2, r3, #8
 161:Src/main.c    **** 	printbuffer[1] = (uint8_t) voltage[0] & 0xFF;
 1148              		.loc 1 161 17 view .LVU357
ARM GAS  /tmp/ccrQkL4m.s 			page 36


 1149 0090 3A70     		strb	r2, [r7]
 162:Src/main.c    **** 	printbuffer[2] = (uint8_t) (voltage[1] >> 8) & 0xFF;
 1150              		.loc 1 162 2 is_stmt 1 view .LVU358
 162:Src/main.c    **** 	printbuffer[2] = (uint8_t) (voltage[1] >> 8) & 0xFF;
 1151              		.loc 1 162 17 is_stmt 0 view .LVU359
 1152 0092 7B70     		strb	r3, [r7, #1]
 163:Src/main.c    **** 	printbuffer[3] = (uint8_t) voltage[1] & 0xFF;
 1153              		.loc 1 163 2 is_stmt 1 view .LVU360
 163:Src/main.c    **** 	printbuffer[3] = (uint8_t) voltage[1] & 0xFF;
 1154              		.loc 1 163 37 is_stmt 0 view .LVU361
 1155 0094 7B8A     		ldrh	r3, [r7, #18]
 163:Src/main.c    **** 	printbuffer[3] = (uint8_t) voltage[1] & 0xFF;
 1156              		.loc 1 163 19 view .LVU362
 1157 0096 1A0A     		lsrs	r2, r3, #8
 163:Src/main.c    **** 	printbuffer[3] = (uint8_t) voltage[1] & 0xFF;
 1158              		.loc 1 163 17 view .LVU363
 1159 0098 BA70     		strb	r2, [r7, #2]
 164:Src/main.c    **** 	printbuffer[4] = (uint8_t) (voltage[2] >> 8) & 0xFF;
 1160              		.loc 1 164 2 is_stmt 1 view .LVU364
 164:Src/main.c    **** 	printbuffer[4] = (uint8_t) (voltage[2] >> 8) & 0xFF;
 1161              		.loc 1 164 17 is_stmt 0 view .LVU365
 1162 009a FB70     		strb	r3, [r7, #3]
 165:Src/main.c    **** 	printbuffer[5] = (uint8_t) voltage[2] & 0xFF;
 1163              		.loc 1 165 2 is_stmt 1 view .LVU366
 165:Src/main.c    **** 	printbuffer[5] = (uint8_t) voltage[2] & 0xFF;
 1164              		.loc 1 165 37 is_stmt 0 view .LVU367
 1165 009c BB8A     		ldrh	r3, [r7, #20]
 165:Src/main.c    **** 	printbuffer[5] = (uint8_t) voltage[2] & 0xFF;
 1166              		.loc 1 165 19 view .LVU368
 1167 009e 1A0A     		lsrs	r2, r3, #8
 165:Src/main.c    **** 	printbuffer[5] = (uint8_t) voltage[2] & 0xFF;
 1168              		.loc 1 165 17 view .LVU369
 1169 00a0 3A71     		strb	r2, [r7, #4]
 166:Src/main.c    **** 	printbuffer[6] = (uint8_t) (voltage[3] >> 8) & 0xFF;
 1170              		.loc 1 166 2 is_stmt 1 view .LVU370
 166:Src/main.c    **** 	printbuffer[6] = (uint8_t) (voltage[3] >> 8) & 0xFF;
 1171              		.loc 1 166 17 is_stmt 0 view .LVU371
 1172 00a2 7B71     		strb	r3, [r7, #5]
 167:Src/main.c    **** 	printbuffer[7] = (uint8_t) voltage[3] & 0xFF;
 1173              		.loc 1 167 2 is_stmt 1 view .LVU372
 167:Src/main.c    **** 	printbuffer[7] = (uint8_t) voltage[3] & 0xFF;
 1174              		.loc 1 167 37 is_stmt 0 view .LVU373
 1175 00a4 FB8A     		ldrh	r3, [r7, #22]
 167:Src/main.c    **** 	printbuffer[7] = (uint8_t) voltage[3] & 0xFF;
 1176              		.loc 1 167 19 view .LVU374
 1177 00a6 1A0A     		lsrs	r2, r3, #8
 167:Src/main.c    **** 	printbuffer[7] = (uint8_t) voltage[3] & 0xFF;
 1178              		.loc 1 167 17 view .LVU375
 1179 00a8 BA71     		strb	r2, [r7, #6]
 168:Src/main.c    **** 	printbuffer[8] = (uint8_t) (voltage[4] >> 8) & 0xFF;
 1180              		.loc 1 168 2 is_stmt 1 view .LVU376
 168:Src/main.c    **** 	printbuffer[8] = (uint8_t) (voltage[4] >> 8) & 0xFF;
 1181              		.loc 1 168 17 is_stmt 0 view .LVU377
 1182 00aa FB71     		strb	r3, [r7, #7]
 169:Src/main.c    **** 	printbuffer[9] = (uint8_t) voltage[4] & 0xFF;
 1183              		.loc 1 169 2 is_stmt 1 view .LVU378
 169:Src/main.c    **** 	printbuffer[9] = (uint8_t) voltage[4] & 0xFF;
ARM GAS  /tmp/ccrQkL4m.s 			page 37


 1184              		.loc 1 169 37 is_stmt 0 view .LVU379
 1185 00ac 3B8B     		ldrh	r3, [r7, #24]
 169:Src/main.c    **** 	printbuffer[9] = (uint8_t) voltage[4] & 0xFF;
 1186              		.loc 1 169 19 view .LVU380
 1187 00ae 1A0A     		lsrs	r2, r3, #8
 169:Src/main.c    **** 	printbuffer[9] = (uint8_t) voltage[4] & 0xFF;
 1188              		.loc 1 169 17 view .LVU381
 1189 00b0 3A72     		strb	r2, [r7, #8]
 170:Src/main.c    **** 	printbuffer[10] = (uint8_t) (voltage[5] >> 8) & 0xFF;
 1190              		.loc 1 170 2 is_stmt 1 view .LVU382
 170:Src/main.c    **** 	printbuffer[10] = (uint8_t) (voltage[5] >> 8) & 0xFF;
 1191              		.loc 1 170 17 is_stmt 0 view .LVU383
 1192 00b2 7B72     		strb	r3, [r7, #9]
 171:Src/main.c    **** 	printbuffer[11] = (uint8_t) voltage[5] & 0xFF;
 1193              		.loc 1 171 2 is_stmt 1 view .LVU384
 171:Src/main.c    **** 	printbuffer[11] = (uint8_t) voltage[5] & 0xFF;
 1194              		.loc 1 171 38 is_stmt 0 view .LVU385
 1195 00b4 7B8B     		ldrh	r3, [r7, #26]
 171:Src/main.c    **** 	printbuffer[11] = (uint8_t) voltage[5] & 0xFF;
 1196              		.loc 1 171 20 view .LVU386
 1197 00b6 1A0A     		lsrs	r2, r3, #8
 171:Src/main.c    **** 	printbuffer[11] = (uint8_t) voltage[5] & 0xFF;
 1198              		.loc 1 171 18 view .LVU387
 1199 00b8 BA72     		strb	r2, [r7, #10]
 172:Src/main.c    **** 	printbuffer[12] = (uint8_t) (voltage[6] >> 8) & 0xFF;
 1200              		.loc 1 172 2 is_stmt 1 view .LVU388
 172:Src/main.c    **** 	printbuffer[12] = (uint8_t) (voltage[6] >> 8) & 0xFF;
 1201              		.loc 1 172 18 is_stmt 0 view .LVU389
 1202 00ba FB72     		strb	r3, [r7, #11]
 173:Src/main.c    **** 	printbuffer[13] = (uint8_t) voltage[6] & 0xFF;
 1203              		.loc 1 173 2 is_stmt 1 view .LVU390
 173:Src/main.c    **** 	printbuffer[13] = (uint8_t) voltage[6] & 0xFF;
 1204              		.loc 1 173 38 is_stmt 0 view .LVU391
 1205 00bc BB8B     		ldrh	r3, [r7, #28]
 173:Src/main.c    **** 	printbuffer[13] = (uint8_t) voltage[6] & 0xFF;
 1206              		.loc 1 173 20 view .LVU392
 1207 00be 1A0A     		lsrs	r2, r3, #8
 173:Src/main.c    **** 	printbuffer[13] = (uint8_t) voltage[6] & 0xFF;
 1208              		.loc 1 173 18 view .LVU393
 1209 00c0 3A73     		strb	r2, [r7, #12]
 174:Src/main.c    **** 	printbuffer[14] = (uint8_t) (voltage[7] >> 8) & 0xFF;
 1210              		.loc 1 174 2 is_stmt 1 view .LVU394
 174:Src/main.c    **** 	printbuffer[14] = (uint8_t) (voltage[7] >> 8) & 0xFF;
 1211              		.loc 1 174 18 is_stmt 0 view .LVU395
 1212 00c2 7B73     		strb	r3, [r7, #13]
 175:Src/main.c    **** 	printbuffer[15] = (uint8_t) voltage[7] & 0xFF;
 1213              		.loc 1 175 2 is_stmt 1 view .LVU396
 175:Src/main.c    **** 	printbuffer[15] = (uint8_t) voltage[7] & 0xFF;
 1214              		.loc 1 175 38 is_stmt 0 view .LVU397
 1215 00c4 FB8B     		ldrh	r3, [r7, #30]
 175:Src/main.c    **** 	printbuffer[15] = (uint8_t) voltage[7] & 0xFF;
 1216              		.loc 1 175 20 view .LVU398
 1217 00c6 1A0A     		lsrs	r2, r3, #8
 175:Src/main.c    **** 	printbuffer[15] = (uint8_t) voltage[7] & 0xFF;
 1218              		.loc 1 175 18 view .LVU399
 1219 00c8 BA73     		strb	r2, [r7, #14]
 176:Src/main.c    **** 	
ARM GAS  /tmp/ccrQkL4m.s 			page 38


 1220              		.loc 1 176 2 is_stmt 1 view .LVU400
 176:Src/main.c    **** 	
 1221              		.loc 1 176 18 is_stmt 0 view .LVU401
 1222 00ca FB73     		strb	r3, [r7, #15]
 178:Src/main.c    **** 	SerialPrint(printbuffer + 8, 8);
 1223              		.loc 1 178 2 is_stmt 1 view .LVU402
 1224 00cc 0821     		movs	r1, #8
 1225 00ce 3846     		mov	r0, r7
 1226 00d0 FFF7FEFF 		bl	SerialPrint
 1227              	.LVL57:
 179:Src/main.c    **** 
 1228              		.loc 1 179 2 view .LVU403
 1229 00d4 0821     		movs	r1, #8
 1230 00d6 7818     		adds	r0, r7, r1
 1231 00d8 FFF7FEFF 		bl	SerialPrint
 1232              	.LVL58:
 185:Src/main.c    **** 	setChargerTxData();
 1233              		.loc 1 185 2 view .LVU404
 1234 00dc 2246     		mov	r2, r4
 1235 00de 1049     		ldr	r1, .L46+20
 1236 00e0 1048     		ldr	r0, .L46+24
 1237 00e2 FFF7FEFF 		bl	setChargeDischarge
 1238              	.LVL59:
 186:Src/main.c    **** 
 1239              		.loc 1 186 2 view .LVU405
 1240 00e6 FFF7FEFF 		bl	setChargerTxData
 1241              	.LVL60:
 188:Src/main.c    **** 		HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 1242              		.loc 1 188 2 view .LVU406
 188:Src/main.c    **** 		HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 1243              		.loc 1 188 6 is_stmt 0 view .LVU407
 1244 00ea 0F4B     		ldr	r3, .L46+28
 1245 00ec 0F4A     		ldr	r2, .L46+32
 1246 00ee 1049     		ldr	r1, .L46+36
 1247 00f0 1048     		ldr	r0, .L46+40
 1248 00f2 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1249              	.LVL61:
 188:Src/main.c    **** 		HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 1250              		.loc 1 188 5 view .LVU408
 1251 00f6 0028     		cmp	r0, #0
 1252 00f8 C0D1     		bne	.L42
 189:Src/main.c    **** 	}
 1253              		.loc 1 189 3 is_stmt 1 view .LVU409
 1254 00fa 4FF40051 		mov	r1, #8192
 1255 00fe 00F18040 		add	r0, r0, #1073741824
 1256 0102 00F50230 		add	r0, r0, #133120
 1257 0106 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1258              	.LVL62:
 1259 010a B7E7     		b	.L42
 1260              	.L47:
 1261              		.align	2
 1262              	.L46:
 1263 010c 00000000 		.word	BMSconfig
 1264 0110 00000000 		.word	cellsPerBoard
 1265 0114 00000000 		.word	numBoards
 1266 0118 00080240 		.word	1073874944
 1267 011c 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccrQkL4m.s 			page 39


 1268 0120 00000000 		.word	chargeCurrent
 1269 0124 00000000 		.word	cellsDischarge
 1270 0128 00000000 		.word	TxMailbox
 1271 012c 00000000 		.word	CANtx
 1272 0130 00000000 		.word	TxHeader2
 1273 0134 00000000 		.word	hcan2
 1274              		.cfi_endproc
 1275              	.LFE130:
 1277              		.section	.text.Error_Handler,"ax",%progbits
 1278              		.align	1
 1279              		.global	Error_Handler
 1280              		.syntax unified
 1281              		.thumb
 1282              		.thumb_func
 1283              		.fpu fpv4-sp-d16
 1285              	Error_Handler:
 1286              	.LFB141:
 589:Src/main.c    **** /* USER CODE END 4 */
 590:Src/main.c    **** 
 591:Src/main.c    **** /**
 592:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 593:Src/main.c    ****   * @retval None
 594:Src/main.c    ****   */
 595:Src/main.c    **** void Error_Handler(void)
 596:Src/main.c    **** {
 1287              		.loc 1 596 1 view -0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 0
 1290              		@ frame_needed = 0, uses_anonymous_args = 0
 1291              		@ link register save eliminated.
 597:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 598:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 599:Src/main.c    **** 
 600:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 601:Src/main.c    **** }
 1292              		.loc 1 601 1 view .LVU411
 1293 0000 7047     		bx	lr
 1294              		.cfi_endproc
 1295              	.LFE141:
 1297              		.global	flag
 1298              		.comm	RxData2,8,4
 1299              		.comm	TxData2,8,4
 1300              		.comm	RxHeader2,28,4
 1301              		.comm	TxHeader2,24,4
 1302              		.comm	TxMailbox,4,4
 1303              		.comm	RxData1,8,4
 1304              		.comm	TxData1,8,4
 1305              		.comm	RxHeader1,28,4
 1306              		.comm	TxHeader1,24,4
 1307              		.comm	BMSconfig,28,4
 1308              		.comm	CommandCode,2,2
 1309              		.comm	huart1,64,4
 1310              		.comm	htim3,64,4
 1311              		.comm	hspi1,88,4
 1312              		.comm	hcan2,40,4
 1313              		.comm	hcan1,40,4
 1314              		.comm	hadc1,72,4
ARM GAS  /tmp/ccrQkL4m.s 			page 40


 1315              		.section	.bss.flag,"aw",%nobits
 1316              		.set	.LANCHOR0,. + 0
 1319              	flag:
 1320 0000 00       		.space	1
 1321              		.text
 1322              	.Letext0:
 1323              		.file 2 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/
 1324              		.file 3 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/
 1325              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1326              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1327              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1328              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1329              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1330              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1331              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1332              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1333              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1334              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1335              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1336              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1337              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1338              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1339              		.file 18 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include
 1340              		.file 19 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include
 1341              		.file 20 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi
 1342              		.file 21 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include
 1343              		.file 22 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include
 1344              		.file 23 "Inc/BMSconfig.h"
 1345              		.file 24 "Inc/LTC6811.h"
 1346              		.file 25 "Inc/ChargerFunctions.h"
 1347              		.file 26 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1348              		.file 27 "Inc/main.h"
 1349              		.file 28 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1350              		.file 29 "Inc/SPI.h"
 1351              		.file 30 "<built-in>"
ARM GAS  /tmp/ccrQkL4m.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccrQkL4m.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccrQkL4m.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccrQkL4m.s:198    .text.MX_GPIO_Init:00000000000000cc $d
     /tmp/ccrQkL4m.s:206    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccrQkL4m.s:212    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccrQkL4m.s:305    .text.MX_ADC1_Init:000000000000004c $d
                            *COM*:0000000000000048 hadc1
     /tmp/ccrQkL4m.s:312    .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccrQkL4m.s:318    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccrQkL4m.s:430    .text.MX_CAN1_Init:0000000000000058 $d
                            *COM*:0000000000000028 hcan1
     /tmp/ccrQkL4m.s:436    .text.MX_CAN2_Init:0000000000000000 $t
     /tmp/ccrQkL4m.s:442    .text.MX_CAN2_Init:0000000000000000 MX_CAN2_Init
     /tmp/ccrQkL4m.s:577    .text.MX_CAN2_Init:0000000000000070 $d
                            *COM*:0000000000000028 hcan2
                            *COM*:0000000000000018 TxHeader2
     /tmp/ccrQkL4m.s:585    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccrQkL4m.s:591    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccrQkL4m.s:640    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccrQkL4m.s:646    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccrQkL4m.s:652    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccrQkL4m.s:751    .text.MX_TIM3_Init:0000000000000058 $d
                            *COM*:0000000000000040 htim3
     /tmp/ccrQkL4m.s:757    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccrQkL4m.s:764    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccrQkL4m.s:877    .text.SystemClock_Config:0000000000000078 $d
     /tmp/ccrQkL4m.s:883    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccrQkL4m.s:890    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccrQkL4m.s:930    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000024 $d
                            *COM*:000000000000001c RxHeader1
                            *COM*:0000000000000008 RxData1
                            *COM*:0000000000000008 RxData2
     /tmp/ccrQkL4m.s:940    .text.SerialPrint:0000000000000000 $t
     /tmp/ccrQkL4m.s:947    .text.SerialPrint:0000000000000000 SerialPrint
     /tmp/ccrQkL4m.s:1020   .text.SerialPrint:0000000000000030 $d
     /tmp/ccrQkL4m.s:1025   .text.main:0000000000000000 $t
     /tmp/ccrQkL4m.s:1032   .text.main:0000000000000000 main
     /tmp/ccrQkL4m.s:1263   .text.main:000000000000010c $d
                            *COM*:000000000000001c BMSconfig
                            *COM*:0000000000000004 TxMailbox
     /tmp/ccrQkL4m.s:1278   .text.Error_Handler:0000000000000000 $t
     /tmp/ccrQkL4m.s:1285   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccrQkL4m.s:1319   .bss.flag:0000000000000000 flag
                            *COM*:0000000000000008 TxData2
                            *COM*:000000000000001c RxHeader2
                            *COM*:0000000000000008 TxData1
                            *COM*:0000000000000018 TxHeader1
                            *COM*:0000000000000002 CommandCode
                            *COM*:0000000000000058 hspi1
     /tmp/ccrQkL4m.s:1320   .bss.flag:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
ARM GAS  /tmp/ccrQkL4m.s 			page 42


HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_UART_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_CAN_GetRxMessage
HAL_UART_Transmit
HAL_Init
SPI_Init
initPECTable
loadConfig
writeConfig
HAL_GPIO_TogglePin
HAL_Delay
setChargeDischarge
setChargerTxData
HAL_CAN_AddTxMessage
cellsPerBoard
numBoards
chargeCurrent
cellsDischarge
CANtx
