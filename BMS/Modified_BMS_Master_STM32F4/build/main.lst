ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB137:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "LTC6811.h"
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 2


  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** ADC_HandleTypeDef hadc1;
  46:Src/main.c    **** 
  47:Src/main.c    **** CAN_HandleTypeDef hcan1;
  48:Src/main.c    **** CAN_HandleTypeDef hcan2;
  49:Src/main.c    **** 
  50:Src/main.c    **** SPI_HandleTypeDef hspi1;
  51:Src/main.c    **** 
  52:Src/main.c    **** UART_HandleTypeDef huart1;
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** CommandCodeTypedef CommandCode;
  56:Src/main.c    **** BMSconfigStructTypedef BMSconfig;
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** static void MX_GPIO_Init(void);
  62:Src/main.c    **** static void MX_ADC1_Init(void);
  63:Src/main.c    **** static void MX_CAN1_Init(void);
  64:Src/main.c    **** static void MX_CAN2_Init(void);
  65:Src/main.c    **** static void MX_SPI1_Init(void);
  66:Src/main.c    **** static void MX_USART1_UART_Init(void);
  67:Src/main.c    **** /* USER CODE BEGIN PFP */
  68:Src/main.c    **** void SerialPrint(uint8_t data[], uint8_t len);
  69:Src/main.c    **** /* USER CODE END PFP */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  72:Src/main.c    **** /* USER CODE BEGIN 0 */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE END 0 */
  75:Src/main.c    **** 
  76:Src/main.c    **** /**
  77:Src/main.c    ****   * @brief  The application entry point.
  78:Src/main.c    ****   * @retval int
  79:Src/main.c    ****   */
  80:Src/main.c    **** int main(void)
  81:Src/main.c    **** {
  82:Src/main.c    ****   /* USER CODE BEGIN 1 */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE END 1 */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 3


  89:Src/main.c    ****   HAL_Init();
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN Init */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END Init */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Configure the system clock */
  96:Src/main.c    ****   SystemClock_Config();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END SysInit */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Initialize all configured peripherals */
 103:Src/main.c    ****   MX_GPIO_Init();
 104:Src/main.c    ****   MX_ADC1_Init();
 105:Src/main.c    ****   MX_CAN1_Init();
 106:Src/main.c    ****   MX_CAN2_Init();
 107:Src/main.c    ****   //MX_SPI1_Init();
 108:Src/main.c    ****   MX_USART1_UART_Init();
 109:Src/main.c    ****   /* USER CODE BEGIN 2 */
 110:Src/main.c    ****   SPI_Init();
 111:Src/main.c    ****   initPECTable();
 112:Src/main.c    ****   loadConfig(&BMSconfig); // loads configuration settings from config.c
 113:Src/main.c    ****   writeConfig(BMSconfig, 1); // number specifies how many ICs are connected
 114:Src/main.c    ****   // !! this assumes that the addresses for each IC count up from 1 !! //
 115:Src/main.c    ****   
 116:Src/main.c    ****   uint16_t voltage[8];
 117:Src/main.c    ****   uint8_t printbuffer[16];
 118:Src/main.c    ****   /* USER CODE END 2 */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Infinite loop */
 121:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 122:Src/main.c    ****   while (1)
 123:Src/main.c    ****   {
 124:Src/main.c    **** 	  
 125:Src/main.c    **** 	// readCellVoltage(uint8_t address, uint16_t cellVoltage[8])
 126:Src/main.c    **** 	// after calling this, the cellVoltage array will contain the 16-bit voltage values for all 8 cell
 127:Src/main.c    **** 	// cellVoltage[0] holds cell 1 voltage
 128:Src/main.c    **** 	// cellVoltage[1] holds cell 2 voltage
 129:Src/main.c    **** 	// cellVoltage[2] holds cell 3 voltage
 130:Src/main.c    **** 	// cellVoltage[3] holds cell 4 voltage
 131:Src/main.c    **** 	// cellVoltage[4] holds cell 7 voltage
 132:Src/main.c    **** 	// cellVoltage[5] holds cell 8 voltage
 133:Src/main.c    **** 	// cellVoltage[6] holds cell 9 voltage
 134:Src/main.c    **** 	// cellVoltage[7] holds cell 10 voltage
 135:Src/main.c    **** 	
 136:Src/main.c    **** 	if (readCellVoltage(1, voltage) == true) HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 137:Src/main.c    **** 	
 138:Src/main.c    **** 	// print cell voltage data
 139:Src/main.c    **** 	
 140:Src/main.c    **** 	printbuffer[0] = (uint8_t) (voltage[0] >> 8) & 0xFF;
 141:Src/main.c    **** 	printbuffer[1] = (uint8_t) voltage[0] & 0xFF;
 142:Src/main.c    **** 	printbuffer[2] = (uint8_t) (voltage[1] >> 8) & 0xFF;
 143:Src/main.c    **** 	printbuffer[3] = (uint8_t) voltage[1] & 0xFF;
 144:Src/main.c    **** 	printbuffer[4] = (uint8_t) (voltage[2] >> 8) & 0xFF;
 145:Src/main.c    **** 	printbuffer[5] = (uint8_t) voltage[2] & 0xFF;
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 4


 146:Src/main.c    **** 	printbuffer[6] = (uint8_t) (voltage[3] >> 8) & 0xFF;
 147:Src/main.c    **** 	printbuffer[7] = (uint8_t) voltage[3] & 0xFF;
 148:Src/main.c    **** 	printbuffer[8] = (uint8_t) (voltage[4] >> 8) & 0xFF;
 149:Src/main.c    **** 	printbuffer[9] = (uint8_t) voltage[4] & 0xFF;
 150:Src/main.c    **** 	printbuffer[10] = (uint8_t) (voltage[5] >> 8) & 0xFF;
 151:Src/main.c    **** 	printbuffer[11] = (uint8_t) voltage[5] & 0xFF;
 152:Src/main.c    **** 	printbuffer[12] = (uint8_t) (voltage[6] >> 8) & 0xFF;
 153:Src/main.c    **** 	printbuffer[13] = (uint8_t) voltage[6] & 0xFF;
 154:Src/main.c    **** 	printbuffer[14] = (uint8_t) (voltage[7] >> 8) & 0xFF;
 155:Src/main.c    **** 	printbuffer[15] = (uint8_t) voltage[7] & 0xFF;
 156:Src/main.c    **** 	
 157:Src/main.c    **** 	SerialPrint(printbuffer, 8);
 158:Src/main.c    **** 	SerialPrint(printbuffer + 8, 8);
 159:Src/main.c    **** 	
 160:Src/main.c    **** 	HAL_Delay(500);
 161:Src/main.c    ****     /* USER CODE END WHILE */
 162:Src/main.c    **** 
 163:Src/main.c    ****     /* USER CODE BEGIN 3 */
 164:Src/main.c    ****   }
 165:Src/main.c    ****   /* USER CODE END 3 */
 166:Src/main.c    **** }
 167:Src/main.c    **** 
 168:Src/main.c    **** /**
 169:Src/main.c    ****   * @brief System Clock Configuration
 170:Src/main.c    ****   * @retval None
 171:Src/main.c    ****   */
 172:Src/main.c    **** void SystemClock_Config(void)
 173:Src/main.c    **** {
 174:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 175:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 176:Src/main.c    **** 
 177:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 178:Src/main.c    ****   */
 179:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 180:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 181:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 182:Src/main.c    ****   */
 183:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 184:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 185:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 186:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 187:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 188:Src/main.c    ****   {
 189:Src/main.c    ****     Error_Handler();
 190:Src/main.c    ****   }
 191:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 192:Src/main.c    ****   */
 193:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 194:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 195:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 196:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 197:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 198:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 199:Src/main.c    **** 
 200:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 201:Src/main.c    ****   {
 202:Src/main.c    ****     Error_Handler();
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 5


 203:Src/main.c    ****   }
 204:Src/main.c    **** }
 205:Src/main.c    **** 
 206:Src/main.c    **** /**
 207:Src/main.c    ****   * @brief ADC1 Initialization Function
 208:Src/main.c    ****   * @param None
 209:Src/main.c    ****   * @retval None
 210:Src/main.c    ****   */
 211:Src/main.c    **** static void MX_ADC1_Init(void)
 212:Src/main.c    **** {
 213:Src/main.c    **** 
 214:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 215:Src/main.c    **** 
 216:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 217:Src/main.c    **** 
 218:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 219:Src/main.c    **** 
 220:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 221:Src/main.c    **** 
 222:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 223:Src/main.c    ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 224:Src/main.c    ****   */
 225:Src/main.c    ****   hadc1.Instance = ADC1;
 226:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 227:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 228:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 229:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 230:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 231:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 232:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 233:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 234:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 235:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 236:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 237:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 238:Src/main.c    ****   {
 239:Src/main.c    ****     Error_Handler();
 240:Src/main.c    ****   }
 241:Src/main.c    ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 242:Src/main.c    ****   */
 243:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 244:Src/main.c    ****   sConfig.Rank = 1;
 245:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 246:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 247:Src/main.c    ****   {
 248:Src/main.c    ****     Error_Handler();
 249:Src/main.c    ****   }
 250:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 251:Src/main.c    **** 
 252:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 253:Src/main.c    **** 
 254:Src/main.c    **** }
 255:Src/main.c    **** 
 256:Src/main.c    **** /**
 257:Src/main.c    ****   * @brief CAN1 Initialization Function
 258:Src/main.c    ****   * @param None
 259:Src/main.c    ****   * @retval None
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 6


 260:Src/main.c    ****   */
 261:Src/main.c    **** static void MX_CAN1_Init(void)
 262:Src/main.c    **** {
 263:Src/main.c    **** 
 264:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 0 */
 265:Src/main.c    **** 
 266:Src/main.c    ****   /* USER CODE END CAN1_Init 0 */
 267:Src/main.c    **** 
 268:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 1 */
 269:Src/main.c    **** 
 270:Src/main.c    ****   /* USER CODE END CAN1_Init 1 */
 271:Src/main.c    ****   hcan1.Instance = CAN1;
 272:Src/main.c    ****   hcan1.Init.Prescaler = 32;
 273:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 274:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 275:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_1TQ;
 276:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 277:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 278:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 279:Src/main.c    ****   hcan1.Init.AutoWakeUp = DISABLE;
 280:Src/main.c    ****   hcan1.Init.AutoRetransmission = DISABLE;
 281:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 282:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 283:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 284:Src/main.c    ****   {
 285:Src/main.c    ****     Error_Handler();
 286:Src/main.c    ****   }
 287:Src/main.c    ****   /* USER CODE BEGIN CAN1_Init 2 */
 288:Src/main.c    **** 
 289:Src/main.c    ****   /* USER CODE END CAN1_Init 2 */
 290:Src/main.c    **** 
 291:Src/main.c    **** }
 292:Src/main.c    **** 
 293:Src/main.c    **** /**
 294:Src/main.c    ****   * @brief CAN2 Initialization Function
 295:Src/main.c    ****   * @param None
 296:Src/main.c    ****   * @retval None
 297:Src/main.c    ****   */
 298:Src/main.c    **** static void MX_CAN2_Init(void)
 299:Src/main.c    **** {
 300:Src/main.c    **** 
 301:Src/main.c    ****   /* USER CODE BEGIN CAN2_Init 0 */
 302:Src/main.c    **** 
 303:Src/main.c    ****   /* USER CODE END CAN2_Init 0 */
 304:Src/main.c    **** 
 305:Src/main.c    ****   /* USER CODE BEGIN CAN2_Init 1 */
 306:Src/main.c    **** 
 307:Src/main.c    ****   /* USER CODE END CAN2_Init 1 */
 308:Src/main.c    ****   hcan2.Instance = CAN2;
 309:Src/main.c    ****   hcan2.Init.Prescaler = 64;
 310:Src/main.c    ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 311:Src/main.c    ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 312:Src/main.c    ****   hcan2.Init.TimeSeg1 = CAN_BS1_1TQ;
 313:Src/main.c    ****   hcan2.Init.TimeSeg2 = CAN_BS2_1TQ;
 314:Src/main.c    ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 315:Src/main.c    ****   hcan2.Init.AutoBusOff = DISABLE;
 316:Src/main.c    ****   hcan2.Init.AutoWakeUp = DISABLE;
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 7


 317:Src/main.c    ****   hcan2.Init.AutoRetransmission = DISABLE;
 318:Src/main.c    ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 319:Src/main.c    ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 320:Src/main.c    ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 321:Src/main.c    ****   {
 322:Src/main.c    ****     Error_Handler();
 323:Src/main.c    ****   }
 324:Src/main.c    ****   /* USER CODE BEGIN CAN2_Init 2 */
 325:Src/main.c    **** 
 326:Src/main.c    ****   /* USER CODE END CAN2_Init 2 */
 327:Src/main.c    **** 
 328:Src/main.c    **** }
 329:Src/main.c    **** 
 330:Src/main.c    **** /**
 331:Src/main.c    ****   * @brief SPI1 Initialization Function
 332:Src/main.c    ****   * @param None
 333:Src/main.c    ****   * @retval None
 334:Src/main.c    ****   */
 335:Src/main.c    **** static void MX_SPI1_Init(void)
 336:Src/main.c    **** {
 337:Src/main.c    **** 
 338:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 339:Src/main.c    **** 
 340:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 341:Src/main.c    **** 
 342:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 343:Src/main.c    **** 
 344:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 345:Src/main.c    ****   /* SPI1 parameter configuration*/
 346:Src/main.c    ****   hspi1.Instance = SPI1;
 347:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 348:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 349:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 350:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 351:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 352:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 353:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 354:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 355:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 356:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 357:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 358:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 359:Src/main.c    ****   {
 360:Src/main.c    ****     Error_Handler();
 361:Src/main.c    ****   }
 362:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 363:Src/main.c    **** 
 364:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 365:Src/main.c    **** 
 366:Src/main.c    **** }
 367:Src/main.c    **** 
 368:Src/main.c    **** /**
 369:Src/main.c    ****   * @brief USART1 Initialization Function
 370:Src/main.c    ****   * @param None
 371:Src/main.c    ****   * @retval None
 372:Src/main.c    ****   */
 373:Src/main.c    **** static void MX_USART1_UART_Init(void)
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 8


 374:Src/main.c    **** {
 375:Src/main.c    **** 
 376:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 377:Src/main.c    **** 
 378:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 379:Src/main.c    **** 
 380:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 381:Src/main.c    **** 
 382:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 383:Src/main.c    ****   huart1.Instance = USART1;
 384:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 385:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 386:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 387:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 388:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 389:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 390:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 391:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 392:Src/main.c    ****   {
 393:Src/main.c    ****     Error_Handler();
 394:Src/main.c    ****   }
 395:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 396:Src/main.c    **** 
 397:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 398:Src/main.c    **** 
 399:Src/main.c    **** }
 400:Src/main.c    **** 
 401:Src/main.c    **** /**
 402:Src/main.c    ****   * @brief GPIO Initialization Function
 403:Src/main.c    ****   * @param None
 404:Src/main.c    ****   * @retval None
 405:Src/main.c    ****   */
 406:Src/main.c    **** static void MX_GPIO_Init(void)
 407:Src/main.c    **** {
  28              		.loc 1 407 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 4, -24
  36              		.cfi_offset 5, -20
  37              		.cfi_offset 6, -16
  38              		.cfi_offset 7, -12
  39              		.cfi_offset 8, -8
  40              		.cfi_offset 14, -4
  41 0004 88B0     		sub	sp, sp, #32
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 56
 408:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  44              		.loc 1 408 3 view .LVU1
  45              		.loc 1 408 20 is_stmt 0 view .LVU2
  46 0006 0024     		movs	r4, #0
  47 0008 0394     		str	r4, [sp, #12]
  48 000a 0494     		str	r4, [sp, #16]
  49 000c 0594     		str	r4, [sp, #20]
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 9


  50 000e 0694     		str	r4, [sp, #24]
  51 0010 0794     		str	r4, [sp, #28]
 409:Src/main.c    **** 
 410:Src/main.c    ****   /* GPIO Ports Clock Enable */
 411:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  52              		.loc 1 411 3 is_stmt 1 view .LVU3
  53              	.LBB2:
  54              		.loc 1 411 3 view .LVU4
  55 0012 0094     		str	r4, [sp]
  56              		.loc 1 411 3 view .LVU5
  57 0014 2D4B     		ldr	r3, .L3
  58 0016 1A6B     		ldr	r2, [r3, #48]
  59 0018 42F00402 		orr	r2, r2, #4
  60 001c 1A63     		str	r2, [r3, #48]
  61              		.loc 1 411 3 view .LVU6
  62 001e 1A6B     		ldr	r2, [r3, #48]
  63 0020 02F00402 		and	r2, r2, #4
  64 0024 0092     		str	r2, [sp]
  65              		.loc 1 411 3 view .LVU7
  66 0026 009A     		ldr	r2, [sp]
  67              	.LBE2:
 412:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 412 3 view .LVU8
  69              	.LBB3:
  70              		.loc 1 412 3 view .LVU9
  71 0028 0194     		str	r4, [sp, #4]
  72              		.loc 1 412 3 view .LVU10
  73 002a 1A6B     		ldr	r2, [r3, #48]
  74 002c 42F00102 		orr	r2, r2, #1
  75 0030 1A63     		str	r2, [r3, #48]
  76              		.loc 1 412 3 view .LVU11
  77 0032 1A6B     		ldr	r2, [r3, #48]
  78 0034 02F00102 		and	r2, r2, #1
  79 0038 0192     		str	r2, [sp, #4]
  80              		.loc 1 412 3 view .LVU12
  81 003a 019A     		ldr	r2, [sp, #4]
  82              	.LBE3:
 413:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  83              		.loc 1 413 3 view .LVU13
  84              	.LBB4:
  85              		.loc 1 413 3 view .LVU14
  86 003c 0294     		str	r4, [sp, #8]
  87              		.loc 1 413 3 view .LVU15
  88 003e 1A6B     		ldr	r2, [r3, #48]
  89 0040 42F00202 		orr	r2, r2, #2
  90 0044 1A63     		str	r2, [r3, #48]
  91              		.loc 1 413 3 view .LVU16
  92 0046 1B6B     		ldr	r3, [r3, #48]
  93 0048 03F00203 		and	r3, r3, #2
  94 004c 0293     		str	r3, [sp, #8]
  95              		.loc 1 413 3 view .LVU17
  96 004e 029B     		ldr	r3, [sp, #8]
  97              	.LBE4:
 414:Src/main.c    **** 
 415:Src/main.c    ****   /*Configure GPIO pin Output Level */
 416:Src/main.c    ****   HAL_GPIO_WritePin(DEBUG_GPIO_Port, DEBUG_Pin, GPIO_PIN_RESET);
  98              		.loc 1 416 3 view .LVU18
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 10


  99 0050 DFF88480 		ldr	r8, .L3+12
 100 0054 2246     		mov	r2, r4
 101 0056 4FF40051 		mov	r1, #8192
 102 005a 4046     		mov	r0, r8
 103 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 417:Src/main.c    **** 
 418:Src/main.c    ****   /*Configure GPIO pin Output Level */
 419:Src/main.c    ****   HAL_GPIO_WritePin(BMS_CS_GPIO_Port, BMS_CS_Pin, GPIO_PIN_RESET);
 105              		.loc 1 419 3 view .LVU19
 106 0060 1B4F     		ldr	r7, .L3+4
 107 0062 2246     		mov	r2, r4
 108 0064 1021     		movs	r1, #16
 109 0066 3846     		mov	r0, r7
 110 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 111              	.LVL1:
 420:Src/main.c    **** 
 421:Src/main.c    ****   /*Configure GPIO pin Output Level */
 422:Src/main.c    ****   HAL_GPIO_WritePin(FAULT_GPIO_Port, FAULT_Pin, GPIO_PIN_RESET);
 112              		.loc 1 422 3 view .LVU20
 113 006c 194D     		ldr	r5, .L3+8
 114 006e 2246     		mov	r2, r4
 115 0070 4FF48061 		mov	r1, #1024
 116 0074 2846     		mov	r0, r5
 117 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 118              	.LVL2:
 423:Src/main.c    **** 
 424:Src/main.c    ****   /*Configure GPIO pin : DEBUG_Pin */
 425:Src/main.c    ****   GPIO_InitStruct.Pin = DEBUG_Pin;
 119              		.loc 1 425 3 view .LVU21
 120              		.loc 1 425 23 is_stmt 0 view .LVU22
 121 007a 4FF40053 		mov	r3, #8192
 122 007e 0393     		str	r3, [sp, #12]
 426:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 123              		.loc 1 426 3 is_stmt 1 view .LVU23
 124              		.loc 1 426 24 is_stmt 0 view .LVU24
 125 0080 0126     		movs	r6, #1
 126 0082 0496     		str	r6, [sp, #16]
 427:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 127              		.loc 1 427 3 is_stmt 1 view .LVU25
 128              		.loc 1 427 24 is_stmt 0 view .LVU26
 129 0084 0594     		str	r4, [sp, #20]
 428:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 130              		.loc 1 428 3 is_stmt 1 view .LVU27
 131              		.loc 1 428 25 is_stmt 0 view .LVU28
 132 0086 0694     		str	r4, [sp, #24]
 429:Src/main.c    ****   HAL_GPIO_Init(DEBUG_GPIO_Port, &GPIO_InitStruct);
 133              		.loc 1 429 3 is_stmt 1 view .LVU29
 134 0088 03A9     		add	r1, sp, #12
 135 008a 4046     		mov	r0, r8
 136 008c FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL3:
 430:Src/main.c    **** 
 431:Src/main.c    ****   /*Configure GPIO pin : BMS_CS_Pin */
 432:Src/main.c    ****   GPIO_InitStruct.Pin = BMS_CS_Pin;
 138              		.loc 1 432 3 view .LVU30
 139              		.loc 1 432 23 is_stmt 0 view .LVU31
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 11


 140 0090 1023     		movs	r3, #16
 141 0092 0393     		str	r3, [sp, #12]
 433:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 142              		.loc 1 433 3 is_stmt 1 view .LVU32
 143              		.loc 1 433 24 is_stmt 0 view .LVU33
 144 0094 0496     		str	r6, [sp, #16]
 434:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 434 3 is_stmt 1 view .LVU34
 146              		.loc 1 434 24 is_stmt 0 view .LVU35
 147 0096 0594     		str	r4, [sp, #20]
 435:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 148              		.loc 1 435 3 is_stmt 1 view .LVU36
 149              		.loc 1 435 25 is_stmt 0 view .LVU37
 150 0098 0694     		str	r4, [sp, #24]
 436:Src/main.c    ****   HAL_GPIO_Init(BMS_CS_GPIO_Port, &GPIO_InitStruct);
 151              		.loc 1 436 3 is_stmt 1 view .LVU38
 152 009a 03A9     		add	r1, sp, #12
 153 009c 3846     		mov	r0, r7
 154 009e FFF7FEFF 		bl	HAL_GPIO_Init
 155              	.LVL4:
 437:Src/main.c    **** 
 438:Src/main.c    ****   /*Configure GPIO pin : FAULT_Pin */
 439:Src/main.c    ****   GPIO_InitStruct.Pin = FAULT_Pin;
 156              		.loc 1 439 3 view .LVU39
 157              		.loc 1 439 23 is_stmt 0 view .LVU40
 158 00a2 4FF48063 		mov	r3, #1024
 159 00a6 0393     		str	r3, [sp, #12]
 440:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 160              		.loc 1 440 3 is_stmt 1 view .LVU41
 161              		.loc 1 440 24 is_stmt 0 view .LVU42
 162 00a8 0496     		str	r6, [sp, #16]
 441:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 163              		.loc 1 441 3 is_stmt 1 view .LVU43
 164              		.loc 1 441 24 is_stmt 0 view .LVU44
 165 00aa 0594     		str	r4, [sp, #20]
 442:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 166              		.loc 1 442 3 is_stmt 1 view .LVU45
 167              		.loc 1 442 25 is_stmt 0 view .LVU46
 168 00ac 0694     		str	r4, [sp, #24]
 443:Src/main.c    ****   HAL_GPIO_Init(FAULT_GPIO_Port, &GPIO_InitStruct);
 169              		.loc 1 443 3 is_stmt 1 view .LVU47
 170 00ae 03A9     		add	r1, sp, #12
 171 00b0 2846     		mov	r0, r5
 172 00b2 FFF7FEFF 		bl	HAL_GPIO_Init
 173              	.LVL5:
 444:Src/main.c    **** 
 445:Src/main.c    ****   /*Configure GPIO pin : AIR_SNS_Pin */
 446:Src/main.c    ****   GPIO_InitStruct.Pin = AIR_SNS_Pin;
 174              		.loc 1 446 3 view .LVU48
 175              		.loc 1 446 23 is_stmt 0 view .LVU49
 176 00b6 2023     		movs	r3, #32
 177 00b8 0393     		str	r3, [sp, #12]
 447:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 178              		.loc 1 447 3 is_stmt 1 view .LVU50
 179              		.loc 1 447 24 is_stmt 0 view .LVU51
 180 00ba 0494     		str	r4, [sp, #16]
 448:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 12


 181              		.loc 1 448 3 is_stmt 1 view .LVU52
 182              		.loc 1 448 24 is_stmt 0 view .LVU53
 183 00bc 0594     		str	r4, [sp, #20]
 449:Src/main.c    ****   HAL_GPIO_Init(AIR_SNS_GPIO_Port, &GPIO_InitStruct);
 184              		.loc 1 449 3 is_stmt 1 view .LVU54
 185 00be 03A9     		add	r1, sp, #12
 186 00c0 2846     		mov	r0, r5
 187 00c2 FFF7FEFF 		bl	HAL_GPIO_Init
 188              	.LVL6:
 450:Src/main.c    **** 
 451:Src/main.c    **** }
 189              		.loc 1 451 1 is_stmt 0 view .LVU55
 190 00c6 08B0     		add	sp, sp, #32
 191              	.LCFI2:
 192              		.cfi_def_cfa_offset 24
 193              		@ sp needed
 194 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 195              	.L4:
 196              		.align	2
 197              	.L3:
 198 00cc 00380240 		.word	1073887232
 199 00d0 00000240 		.word	1073872896
 200 00d4 00040240 		.word	1073873920
 201 00d8 00080240 		.word	1073874944
 202              		.cfi_endproc
 203              	.LFE137:
 205              		.section	.text.MX_ADC1_Init,"ax",%progbits
 206              		.align	1
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 210              		.fpu fpv4-sp-d16
 212              	MX_ADC1_Init:
 213              	.LFB132:
 212:Src/main.c    **** 
 214              		.loc 1 212 1 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 16
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 70B5     		push	{r4, r5, r6, lr}
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 16
 221              		.cfi_offset 4, -16
 222              		.cfi_offset 5, -12
 223              		.cfi_offset 6, -8
 224              		.cfi_offset 14, -4
 225 0002 84B0     		sub	sp, sp, #16
 226              	.LCFI4:
 227              		.cfi_def_cfa_offset 32
 218:Src/main.c    **** 
 228              		.loc 1 218 3 view .LVU57
 218:Src/main.c    **** 
 229              		.loc 1 218 26 is_stmt 0 view .LVU58
 230 0004 0025     		movs	r5, #0
 231 0006 0095     		str	r5, [sp]
 232 0008 0195     		str	r5, [sp, #4]
 233 000a 0295     		str	r5, [sp, #8]
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 13


 234 000c 0395     		str	r5, [sp, #12]
 225:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 235              		.loc 1 225 3 is_stmt 1 view .LVU59
 225:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 236              		.loc 1 225 18 is_stmt 0 view .LVU60
 237 000e 0F4C     		ldr	r4, .L7
 238 0010 0F4B     		ldr	r3, .L7+4
 239 0012 2360     		str	r3, [r4]
 226:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 240              		.loc 1 226 3 is_stmt 1 view .LVU61
 226:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 241              		.loc 1 226 29 is_stmt 0 view .LVU62
 242 0014 6560     		str	r5, [r4, #4]
 227:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 243              		.loc 1 227 3 is_stmt 1 view .LVU63
 227:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 244              		.loc 1 227 25 is_stmt 0 view .LVU64
 245 0016 A560     		str	r5, [r4, #8]
 228:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 246              		.loc 1 228 3 is_stmt 1 view .LVU65
 228:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 247              		.loc 1 228 27 is_stmt 0 view .LVU66
 248 0018 2561     		str	r5, [r4, #16]
 229:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 249              		.loc 1 229 3 is_stmt 1 view .LVU67
 229:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 250              		.loc 1 229 33 is_stmt 0 view .LVU68
 251 001a 2576     		strb	r5, [r4, #24]
 230:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 252              		.loc 1 230 3 is_stmt 1 view .LVU69
 230:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 253              		.loc 1 230 36 is_stmt 0 view .LVU70
 254 001c 84F82050 		strb	r5, [r4, #32]
 231:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 255              		.loc 1 231 3 is_stmt 1 view .LVU71
 231:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 256              		.loc 1 231 35 is_stmt 0 view .LVU72
 257 0020 E562     		str	r5, [r4, #44]
 232:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 258              		.loc 1 232 3 is_stmt 1 view .LVU73
 232:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 259              		.loc 1 232 31 is_stmt 0 view .LVU74
 260 0022 0C4B     		ldr	r3, .L7+8
 261 0024 A362     		str	r3, [r4, #40]
 233:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 262              		.loc 1 233 3 is_stmt 1 view .LVU75
 233:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 263              		.loc 1 233 24 is_stmt 0 view .LVU76
 264 0026 E560     		str	r5, [r4, #12]
 234:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 265              		.loc 1 234 3 is_stmt 1 view .LVU77
 234:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 266              		.loc 1 234 30 is_stmt 0 view .LVU78
 267 0028 0126     		movs	r6, #1
 268 002a E661     		str	r6, [r4, #28]
 235:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 269              		.loc 1 235 3 is_stmt 1 view .LVU79
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 14


 235:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 270              		.loc 1 235 36 is_stmt 0 view .LVU80
 271 002c 84F83050 		strb	r5, [r4, #48]
 236:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 272              		.loc 1 236 3 is_stmt 1 view .LVU81
 236:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 273              		.loc 1 236 27 is_stmt 0 view .LVU82
 274 0030 6661     		str	r6, [r4, #20]
 237:Src/main.c    ****   {
 275              		.loc 1 237 3 is_stmt 1 view .LVU83
 237:Src/main.c    ****   {
 276              		.loc 1 237 7 is_stmt 0 view .LVU84
 277 0032 2046     		mov	r0, r4
 278 0034 FFF7FEFF 		bl	HAL_ADC_Init
 279              	.LVL7:
 243:Src/main.c    ****   sConfig.Rank = 1;
 280              		.loc 1 243 3 is_stmt 1 view .LVU85
 243:Src/main.c    ****   sConfig.Rank = 1;
 281              		.loc 1 243 19 is_stmt 0 view .LVU86
 282 0038 0823     		movs	r3, #8
 283 003a 0093     		str	r3, [sp]
 244:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 284              		.loc 1 244 3 is_stmt 1 view .LVU87
 244:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 285              		.loc 1 244 16 is_stmt 0 view .LVU88
 286 003c 0196     		str	r6, [sp, #4]
 245:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 287              		.loc 1 245 3 is_stmt 1 view .LVU89
 245:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 288              		.loc 1 245 24 is_stmt 0 view .LVU90
 289 003e 0295     		str	r5, [sp, #8]
 246:Src/main.c    ****   {
 290              		.loc 1 246 3 is_stmt 1 view .LVU91
 246:Src/main.c    ****   {
 291              		.loc 1 246 7 is_stmt 0 view .LVU92
 292 0040 6946     		mov	r1, sp
 293 0042 2046     		mov	r0, r4
 294 0044 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 295              	.LVL8:
 254:Src/main.c    **** 
 296              		.loc 1 254 1 view .LVU93
 297 0048 04B0     		add	sp, sp, #16
 298              	.LCFI5:
 299              		.cfi_def_cfa_offset 16
 300              		@ sp needed
 301 004a 70BD     		pop	{r4, r5, r6, pc}
 302              	.L8:
 303              		.align	2
 304              	.L7:
 305 004c 00000000 		.word	hadc1
 306 0050 00200140 		.word	1073815552
 307 0054 0100000F 		.word	251658241
 308              		.cfi_endproc
 309              	.LFE132:
 311              		.section	.text.MX_CAN1_Init,"ax",%progbits
 312              		.align	1
 313              		.syntax unified
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 15


 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv4-sp-d16
 318              	MX_CAN1_Init:
 319              	.LFB133:
 262:Src/main.c    **** 
 320              		.loc 1 262 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              	.LCFI6:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 271:Src/main.c    ****   hcan1.Init.Prescaler = 32;
 329              		.loc 1 271 3 view .LVU95
 271:Src/main.c    ****   hcan1.Init.Prescaler = 32;
 330              		.loc 1 271 18 is_stmt 0 view .LVU96
 331 0002 0948     		ldr	r0, .L11
 332 0004 094B     		ldr	r3, .L11+4
 333 0006 0360     		str	r3, [r0]
 272:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 334              		.loc 1 272 3 is_stmt 1 view .LVU97
 272:Src/main.c    ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 335              		.loc 1 272 24 is_stmt 0 view .LVU98
 336 0008 2023     		movs	r3, #32
 337 000a 4360     		str	r3, [r0, #4]
 273:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 338              		.loc 1 273 3 is_stmt 1 view .LVU99
 273:Src/main.c    ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 339              		.loc 1 273 19 is_stmt 0 view .LVU100
 340 000c 0023     		movs	r3, #0
 341 000e 8360     		str	r3, [r0, #8]
 274:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_1TQ;
 342              		.loc 1 274 3 is_stmt 1 view .LVU101
 274:Src/main.c    ****   hcan1.Init.TimeSeg1 = CAN_BS1_1TQ;
 343              		.loc 1 274 28 is_stmt 0 view .LVU102
 344 0010 C360     		str	r3, [r0, #12]
 275:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 345              		.loc 1 275 3 is_stmt 1 view .LVU103
 275:Src/main.c    ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 346              		.loc 1 275 23 is_stmt 0 view .LVU104
 347 0012 0361     		str	r3, [r0, #16]
 276:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 348              		.loc 1 276 3 is_stmt 1 view .LVU105
 276:Src/main.c    ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 349              		.loc 1 276 23 is_stmt 0 view .LVU106
 350 0014 4361     		str	r3, [r0, #20]
 277:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 351              		.loc 1 277 3 is_stmt 1 view .LVU107
 277:Src/main.c    ****   hcan1.Init.AutoBusOff = DISABLE;
 352              		.loc 1 277 32 is_stmt 0 view .LVU108
 353 0016 0376     		strb	r3, [r0, #24]
 278:Src/main.c    ****   hcan1.Init.AutoWakeUp = DISABLE;
 354              		.loc 1 278 3 is_stmt 1 view .LVU109
 278:Src/main.c    ****   hcan1.Init.AutoWakeUp = DISABLE;
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 16


 355              		.loc 1 278 25 is_stmt 0 view .LVU110
 356 0018 4376     		strb	r3, [r0, #25]
 279:Src/main.c    ****   hcan1.Init.AutoRetransmission = DISABLE;
 357              		.loc 1 279 3 is_stmt 1 view .LVU111
 279:Src/main.c    ****   hcan1.Init.AutoRetransmission = DISABLE;
 358              		.loc 1 279 25 is_stmt 0 view .LVU112
 359 001a 8376     		strb	r3, [r0, #26]
 280:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 360              		.loc 1 280 3 is_stmt 1 view .LVU113
 280:Src/main.c    ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 361              		.loc 1 280 33 is_stmt 0 view .LVU114
 362 001c C376     		strb	r3, [r0, #27]
 281:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 363              		.loc 1 281 3 is_stmt 1 view .LVU115
 281:Src/main.c    ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 364              		.loc 1 281 32 is_stmt 0 view .LVU116
 365 001e 0377     		strb	r3, [r0, #28]
 282:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 366              		.loc 1 282 3 is_stmt 1 view .LVU117
 282:Src/main.c    ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 367              		.loc 1 282 35 is_stmt 0 view .LVU118
 368 0020 4377     		strb	r3, [r0, #29]
 283:Src/main.c    ****   {
 369              		.loc 1 283 3 is_stmt 1 view .LVU119
 283:Src/main.c    ****   {
 370              		.loc 1 283 7 is_stmt 0 view .LVU120
 371 0022 FFF7FEFF 		bl	HAL_CAN_Init
 372              	.LVL9:
 291:Src/main.c    **** 
 373              		.loc 1 291 1 view .LVU121
 374 0026 08BD     		pop	{r3, pc}
 375              	.L12:
 376              		.align	2
 377              	.L11:
 378 0028 00000000 		.word	hcan1
 379 002c 00640040 		.word	1073767424
 380              		.cfi_endproc
 381              	.LFE133:
 383              		.section	.text.MX_CAN2_Init,"ax",%progbits
 384              		.align	1
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu fpv4-sp-d16
 390              	MX_CAN2_Init:
 391              	.LFB134:
 299:Src/main.c    **** 
 392              		.loc 1 299 1 is_stmt 1 view -0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396 0000 08B5     		push	{r3, lr}
 397              	.LCFI7:
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 3, -8
 400              		.cfi_offset 14, -4
 308:Src/main.c    ****   hcan2.Init.Prescaler = 64;
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 17


 401              		.loc 1 308 3 view .LVU123
 308:Src/main.c    ****   hcan2.Init.Prescaler = 64;
 402              		.loc 1 308 18 is_stmt 0 view .LVU124
 403 0002 0948     		ldr	r0, .L15
 404 0004 094B     		ldr	r3, .L15+4
 405 0006 0360     		str	r3, [r0]
 309:Src/main.c    ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 406              		.loc 1 309 3 is_stmt 1 view .LVU125
 309:Src/main.c    ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 407              		.loc 1 309 24 is_stmt 0 view .LVU126
 408 0008 4023     		movs	r3, #64
 409 000a 4360     		str	r3, [r0, #4]
 310:Src/main.c    ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 410              		.loc 1 310 3 is_stmt 1 view .LVU127
 310:Src/main.c    ****   hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 411              		.loc 1 310 19 is_stmt 0 view .LVU128
 412 000c 0023     		movs	r3, #0
 413 000e 8360     		str	r3, [r0, #8]
 311:Src/main.c    ****   hcan2.Init.TimeSeg1 = CAN_BS1_1TQ;
 414              		.loc 1 311 3 is_stmt 1 view .LVU129
 311:Src/main.c    ****   hcan2.Init.TimeSeg1 = CAN_BS1_1TQ;
 415              		.loc 1 311 28 is_stmt 0 view .LVU130
 416 0010 C360     		str	r3, [r0, #12]
 312:Src/main.c    ****   hcan2.Init.TimeSeg2 = CAN_BS2_1TQ;
 417              		.loc 1 312 3 is_stmt 1 view .LVU131
 312:Src/main.c    ****   hcan2.Init.TimeSeg2 = CAN_BS2_1TQ;
 418              		.loc 1 312 23 is_stmt 0 view .LVU132
 419 0012 0361     		str	r3, [r0, #16]
 313:Src/main.c    ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 420              		.loc 1 313 3 is_stmt 1 view .LVU133
 313:Src/main.c    ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 421              		.loc 1 313 23 is_stmt 0 view .LVU134
 422 0014 4361     		str	r3, [r0, #20]
 314:Src/main.c    ****   hcan2.Init.AutoBusOff = DISABLE;
 423              		.loc 1 314 3 is_stmt 1 view .LVU135
 314:Src/main.c    ****   hcan2.Init.AutoBusOff = DISABLE;
 424              		.loc 1 314 32 is_stmt 0 view .LVU136
 425 0016 0376     		strb	r3, [r0, #24]
 315:Src/main.c    ****   hcan2.Init.AutoWakeUp = DISABLE;
 426              		.loc 1 315 3 is_stmt 1 view .LVU137
 315:Src/main.c    ****   hcan2.Init.AutoWakeUp = DISABLE;
 427              		.loc 1 315 25 is_stmt 0 view .LVU138
 428 0018 4376     		strb	r3, [r0, #25]
 316:Src/main.c    ****   hcan2.Init.AutoRetransmission = DISABLE;
 429              		.loc 1 316 3 is_stmt 1 view .LVU139
 316:Src/main.c    ****   hcan2.Init.AutoRetransmission = DISABLE;
 430              		.loc 1 316 25 is_stmt 0 view .LVU140
 431 001a 8376     		strb	r3, [r0, #26]
 317:Src/main.c    ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 432              		.loc 1 317 3 is_stmt 1 view .LVU141
 317:Src/main.c    ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 433              		.loc 1 317 33 is_stmt 0 view .LVU142
 434 001c C376     		strb	r3, [r0, #27]
 318:Src/main.c    ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 435              		.loc 1 318 3 is_stmt 1 view .LVU143
 318:Src/main.c    ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 436              		.loc 1 318 32 is_stmt 0 view .LVU144
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 18


 437 001e 0377     		strb	r3, [r0, #28]
 319:Src/main.c    ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 438              		.loc 1 319 3 is_stmt 1 view .LVU145
 319:Src/main.c    ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 439              		.loc 1 319 35 is_stmt 0 view .LVU146
 440 0020 4377     		strb	r3, [r0, #29]
 320:Src/main.c    ****   {
 441              		.loc 1 320 3 is_stmt 1 view .LVU147
 320:Src/main.c    ****   {
 442              		.loc 1 320 7 is_stmt 0 view .LVU148
 443 0022 FFF7FEFF 		bl	HAL_CAN_Init
 444              	.LVL10:
 328:Src/main.c    **** 
 445              		.loc 1 328 1 view .LVU149
 446 0026 08BD     		pop	{r3, pc}
 447              	.L16:
 448              		.align	2
 449              	.L15:
 450 0028 00000000 		.word	hcan2
 451 002c 00680040 		.word	1073768448
 452              		.cfi_endproc
 453              	.LFE134:
 455              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 456              		.align	1
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 460              		.fpu fpv4-sp-d16
 462              	MX_USART1_UART_Init:
 463              	.LFB136:
 374:Src/main.c    **** 
 464              		.loc 1 374 1 is_stmt 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468 0000 08B5     		push	{r3, lr}
 469              	.LCFI8:
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 3, -8
 472              		.cfi_offset 14, -4
 383:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 473              		.loc 1 383 3 view .LVU151
 383:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 474              		.loc 1 383 19 is_stmt 0 view .LVU152
 475 0002 0848     		ldr	r0, .L19
 476 0004 084B     		ldr	r3, .L19+4
 477 0006 0360     		str	r3, [r0]
 384:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 478              		.loc 1 384 3 is_stmt 1 view .LVU153
 384:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 479              		.loc 1 384 24 is_stmt 0 view .LVU154
 480 0008 4FF4E133 		mov	r3, #115200
 481 000c 4360     		str	r3, [r0, #4]
 385:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 482              		.loc 1 385 3 is_stmt 1 view .LVU155
 385:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 483              		.loc 1 385 26 is_stmt 0 view .LVU156
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 19


 484 000e 0023     		movs	r3, #0
 485 0010 8360     		str	r3, [r0, #8]
 386:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 486              		.loc 1 386 3 is_stmt 1 view .LVU157
 386:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 487              		.loc 1 386 24 is_stmt 0 view .LVU158
 488 0012 C360     		str	r3, [r0, #12]
 387:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 489              		.loc 1 387 3 is_stmt 1 view .LVU159
 387:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 490              		.loc 1 387 22 is_stmt 0 view .LVU160
 491 0014 0361     		str	r3, [r0, #16]
 388:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 492              		.loc 1 388 3 is_stmt 1 view .LVU161
 388:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 493              		.loc 1 388 20 is_stmt 0 view .LVU162
 494 0016 0C22     		movs	r2, #12
 495 0018 4261     		str	r2, [r0, #20]
 389:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 496              		.loc 1 389 3 is_stmt 1 view .LVU163
 389:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 497              		.loc 1 389 25 is_stmt 0 view .LVU164
 498 001a 8361     		str	r3, [r0, #24]
 390:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 499              		.loc 1 390 3 is_stmt 1 view .LVU165
 390:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 500              		.loc 1 390 28 is_stmt 0 view .LVU166
 501 001c C361     		str	r3, [r0, #28]
 391:Src/main.c    ****   {
 502              		.loc 1 391 3 is_stmt 1 view .LVU167
 391:Src/main.c    ****   {
 503              		.loc 1 391 7 is_stmt 0 view .LVU168
 504 001e FFF7FEFF 		bl	HAL_UART_Init
 505              	.LVL11:
 399:Src/main.c    **** 
 506              		.loc 1 399 1 view .LVU169
 507 0022 08BD     		pop	{r3, pc}
 508              	.L20:
 509              		.align	2
 510              	.L19:
 511 0024 00000000 		.word	huart1
 512 0028 00100140 		.word	1073811456
 513              		.cfi_endproc
 514              	.LFE136:
 516              		.section	.text.SystemClock_Config,"ax",%progbits
 517              		.align	1
 518              		.global	SystemClock_Config
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 522              		.fpu fpv4-sp-d16
 524              	SystemClock_Config:
 525              	.LFB131:
 173:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 526              		.loc 1 173 1 is_stmt 1 view -0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 80
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 20


 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530 0000 10B5     		push	{r4, lr}
 531              	.LCFI9:
 532              		.cfi_def_cfa_offset 8
 533              		.cfi_offset 4, -8
 534              		.cfi_offset 14, -4
 535 0002 94B0     		sub	sp, sp, #80
 536              	.LCFI10:
 537              		.cfi_def_cfa_offset 88
 174:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 538              		.loc 1 174 3 view .LVU171
 174:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 539              		.loc 1 174 22 is_stmt 0 view .LVU172
 540 0004 3422     		movs	r2, #52
 541 0006 0021     		movs	r1, #0
 542 0008 07A8     		add	r0, sp, #28
 543 000a FFF7FEFF 		bl	memset
 544              	.LVL12:
 175:Src/main.c    **** 
 545              		.loc 1 175 3 is_stmt 1 view .LVU173
 175:Src/main.c    **** 
 546              		.loc 1 175 22 is_stmt 0 view .LVU174
 547 000e 0024     		movs	r4, #0
 548 0010 0294     		str	r4, [sp, #8]
 549 0012 0394     		str	r4, [sp, #12]
 550 0014 0494     		str	r4, [sp, #16]
 551 0016 0594     		str	r4, [sp, #20]
 552 0018 0694     		str	r4, [sp, #24]
 179:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 553              		.loc 1 179 3 is_stmt 1 view .LVU175
 554              	.LBB5:
 179:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 555              		.loc 1 179 3 view .LVU176
 556 001a 0094     		str	r4, [sp]
 179:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 557              		.loc 1 179 3 view .LVU177
 558 001c 164B     		ldr	r3, .L23
 559 001e 1A6C     		ldr	r2, [r3, #64]
 560 0020 42F08052 		orr	r2, r2, #268435456
 561 0024 1A64     		str	r2, [r3, #64]
 179:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 562              		.loc 1 179 3 view .LVU178
 563 0026 1B6C     		ldr	r3, [r3, #64]
 564 0028 03F08053 		and	r3, r3, #268435456
 565 002c 0093     		str	r3, [sp]
 179:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 566              		.loc 1 179 3 view .LVU179
 567 002e 009B     		ldr	r3, [sp]
 568              	.LBE5:
 180:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 569              		.loc 1 180 3 view .LVU180
 570              	.LBB6:
 180:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 571              		.loc 1 180 3 view .LVU181
 572 0030 0194     		str	r4, [sp, #4]
 180:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 573              		.loc 1 180 3 view .LVU182
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 21


 574 0032 124A     		ldr	r2, .L23+4
 575 0034 1368     		ldr	r3, [r2]
 576 0036 23F44043 		bic	r3, r3, #49152
 577 003a 43F48043 		orr	r3, r3, #16384
 578 003e 1360     		str	r3, [r2]
 180:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 579              		.loc 1 180 3 view .LVU183
 580 0040 1368     		ldr	r3, [r2]
 581 0042 03F44043 		and	r3, r3, #49152
 582 0046 0193     		str	r3, [sp, #4]
 180:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 583              		.loc 1 180 3 view .LVU184
 584 0048 019B     		ldr	r3, [sp, #4]
 585              	.LBE6:
 183:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 586              		.loc 1 183 3 view .LVU185
 183:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 587              		.loc 1 183 36 is_stmt 0 view .LVU186
 588 004a 0223     		movs	r3, #2
 589 004c 0793     		str	r3, [sp, #28]
 184:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 590              		.loc 1 184 3 is_stmt 1 view .LVU187
 184:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 591              		.loc 1 184 30 is_stmt 0 view .LVU188
 592 004e 0123     		movs	r3, #1
 593 0050 0A93     		str	r3, [sp, #40]
 185:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 594              		.loc 1 185 3 is_stmt 1 view .LVU189
 185:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 595              		.loc 1 185 41 is_stmt 0 view .LVU190
 596 0052 1023     		movs	r3, #16
 597 0054 0B93     		str	r3, [sp, #44]
 186:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 598              		.loc 1 186 3 is_stmt 1 view .LVU191
 186:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 599              		.loc 1 186 34 is_stmt 0 view .LVU192
 600 0056 0D94     		str	r4, [sp, #52]
 187:Src/main.c    ****   {
 601              		.loc 1 187 3 is_stmt 1 view .LVU193
 187:Src/main.c    ****   {
 602              		.loc 1 187 7 is_stmt 0 view .LVU194
 603 0058 07A8     		add	r0, sp, #28
 604 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 605              	.LVL13:
 193:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 606              		.loc 1 193 3 is_stmt 1 view .LVU195
 193:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 607              		.loc 1 193 31 is_stmt 0 view .LVU196
 608 005e 0F23     		movs	r3, #15
 609 0060 0293     		str	r3, [sp, #8]
 195:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 610              		.loc 1 195 3 is_stmt 1 view .LVU197
 195:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 611              		.loc 1 195 34 is_stmt 0 view .LVU198
 612 0062 0394     		str	r4, [sp, #12]
 196:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 613              		.loc 1 196 3 is_stmt 1 view .LVU199
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 22


 196:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 614              		.loc 1 196 35 is_stmt 0 view .LVU200
 615 0064 0494     		str	r4, [sp, #16]
 197:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 616              		.loc 1 197 3 is_stmt 1 view .LVU201
 197:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 617              		.loc 1 197 36 is_stmt 0 view .LVU202
 618 0066 0594     		str	r4, [sp, #20]
 198:Src/main.c    **** 
 619              		.loc 1 198 3 is_stmt 1 view .LVU203
 198:Src/main.c    **** 
 620              		.loc 1 198 36 is_stmt 0 view .LVU204
 621 0068 0694     		str	r4, [sp, #24]
 200:Src/main.c    ****   {
 622              		.loc 1 200 3 is_stmt 1 view .LVU205
 200:Src/main.c    ****   {
 623              		.loc 1 200 7 is_stmt 0 view .LVU206
 624 006a 2146     		mov	r1, r4
 625 006c 02A8     		add	r0, sp, #8
 626 006e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 627              	.LVL14:
 204:Src/main.c    **** 
 628              		.loc 1 204 1 view .LVU207
 629 0072 14B0     		add	sp, sp, #80
 630              	.LCFI11:
 631              		.cfi_def_cfa_offset 8
 632              		@ sp needed
 633 0074 10BD     		pop	{r4, pc}
 634              	.L24:
 635 0076 00BF     		.align	2
 636              	.L23:
 637 0078 00380240 		.word	1073887232
 638 007c 00700040 		.word	1073770496
 639              		.cfi_endproc
 640              	.LFE131:
 642              		.section	.text.SerialPrint,"ax",%progbits
 643              		.align	1
 644              		.global	SerialPrint
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 648              		.fpu fpv4-sp-d16
 650              	SerialPrint:
 651              	.LVL15:
 652              	.LFB138:
 452:Src/main.c    **** 
 453:Src/main.c    **** /* USER CODE BEGIN 4 */
 454:Src/main.c    **** void SerialPrint(uint8_t data[], uint8_t len) {
 653              		.loc 1 454 47 is_stmt 1 view -0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 1, uses_anonymous_args = 0
 657              		.loc 1 454 47 is_stmt 0 view .LVU209
 658 0000 98B5     		push	{r3, r4, r7, lr}
 659              	.LCFI12:
 660              		.cfi_def_cfa_offset 16
 661              		.cfi_offset 3, -16
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 23


 662              		.cfi_offset 4, -12
 663              		.cfi_offset 7, -8
 664              		.cfi_offset 14, -4
 665 0002 00AF     		add	r7, sp, #0
 666              	.LCFI13:
 667              		.cfi_def_cfa_register 7
 668 0004 0A46     		mov	r2, r1
 455:Src/main.c    **** 	
 456:Src/main.c    **** 	unsigned char serial[len];
 669              		.loc 1 456 2 is_stmt 1 view .LVU210
 670              	.LVL16:
 671              		.loc 1 456 16 is_stmt 0 view .LVU211
 672 0006 CB1D     		adds	r3, r1, #7
 673 0008 03F4FC73 		and	r3, r3, #504
 674 000c ADEB030D 		sub	sp, sp, r3
 675 0010 6946     		mov	r1, sp
 676              	.LVL17:
 457:Src/main.c    **** 	
 458:Src/main.c    **** 	for (uint8_t i = 0; i < len; i++) {
 677              		.loc 1 458 2 is_stmt 1 view .LVU212
 678              	.LBB7:
 679              		.loc 1 458 7 view .LVU213
 680              		.loc 1 458 15 is_stmt 0 view .LVU214
 681 0012 0023     		movs	r3, #0
 682              	.LVL18:
 683              	.L26:
 684              		.loc 1 458 2 discriminator 1 view .LVU215
 685 0014 9342     		cmp	r3, r2
 686 0016 04D2     		bcs	.L29
 459:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 687              		.loc 1 459 3 is_stmt 1 discriminator 3 view .LVU216
 688              		.loc 1 459 15 is_stmt 0 discriminator 3 view .LVU217
 689 0018 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
 690              		.loc 1 459 13 discriminator 3 view .LVU218
 691 001a CC54     		strb	r4, [r1, r3]
 458:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 692              		.loc 1 458 32 discriminator 3 view .LVU219
 693 001c 0133     		adds	r3, r3, #1
 694              	.LVL19:
 458:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 695              		.loc 1 458 32 discriminator 3 view .LVU220
 696 001e DBB2     		uxtb	r3, r3
 697              	.LVL20:
 458:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 698              		.loc 1 458 32 discriminator 3 view .LVU221
 699 0020 F8E7     		b	.L26
 700              	.L29:
 458:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 701              		.loc 1 458 32 discriminator 3 view .LVU222
 702              	.LBE7:
 460:Src/main.c    **** 	}
 461:Src/main.c    **** 	
 462:Src/main.c    **** 	HAL_UART_Transmit(&huart1, serial, len, 1000);
 703              		.loc 1 462 2 is_stmt 1 view .LVU223
 704 0022 4FF47A73 		mov	r3, #1000
 705              	.LVL21:
 706              		.loc 1 462 2 is_stmt 0 view .LVU224
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 24


 707 0026 0248     		ldr	r0, .L30
 708              	.LVL22:
 709              		.loc 1 462 2 view .LVU225
 710 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 711              	.LVL23:
 463:Src/main.c    **** }	
 712              		.loc 1 463 1 view .LVU226
 713 002c BD46     		mov	sp, r7
 714              	.LCFI14:
 715              		.cfi_def_cfa_register 13
 716              	.LVL24:
 717              		.loc 1 463 1 view .LVU227
 718              		@ sp needed
 719 002e 98BD     		pop	{r3, r4, r7, pc}
 720              	.L31:
 721              		.align	2
 722              	.L30:
 723 0030 00000000 		.word	huart1
 724              		.cfi_endproc
 725              	.LFE138:
 727              		.section	.text.main,"ax",%progbits
 728              		.align	1
 729              		.global	main
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 733              		.fpu fpv4-sp-d16
 735              	main:
 736              	.LFB130:
  81:Src/main.c    ****   /* USER CODE BEGIN 1 */
 737              		.loc 1 81 1 is_stmt 1 view -0
 738              		.cfi_startproc
 739              		@ Volatile: function does not return.
 740              		@ args = 0, pretend = 0, frame = 32
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742 0000 00B5     		push	{lr}
 743              	.LCFI15:
 744              		.cfi_def_cfa_offset 4
 745              		.cfi_offset 14, -4
 746 0002 8DB0     		sub	sp, sp, #52
 747              	.LCFI16:
 748              		.cfi_def_cfa_offset 56
  89:Src/main.c    **** 
 749              		.loc 1 89 3 view .LVU229
 750 0004 FFF7FEFF 		bl	HAL_Init
 751              	.LVL25:
  96:Src/main.c    **** 
 752              		.loc 1 96 3 view .LVU230
 753 0008 FFF7FEFF 		bl	SystemClock_Config
 754              	.LVL26:
 103:Src/main.c    ****   MX_ADC1_Init();
 755              		.loc 1 103 3 view .LVU231
 756 000c FFF7FEFF 		bl	MX_GPIO_Init
 757              	.LVL27:
 104:Src/main.c    ****   MX_CAN1_Init();
 758              		.loc 1 104 3 view .LVU232
 759 0010 FFF7FEFF 		bl	MX_ADC1_Init
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 25


 760              	.LVL28:
 105:Src/main.c    ****   MX_CAN2_Init();
 761              		.loc 1 105 3 view .LVU233
 762 0014 FFF7FEFF 		bl	MX_CAN1_Init
 763              	.LVL29:
 106:Src/main.c    ****   //MX_SPI1_Init();
 764              		.loc 1 106 3 view .LVU234
 765 0018 FFF7FEFF 		bl	MX_CAN2_Init
 766              	.LVL30:
 108:Src/main.c    ****   /* USER CODE BEGIN 2 */
 767              		.loc 1 108 3 view .LVU235
 768 001c FFF7FEFF 		bl	MX_USART1_UART_Init
 769              	.LVL31:
 110:Src/main.c    ****   initPECTable();
 770              		.loc 1 110 3 view .LVU236
 771 0020 FFF7FEFF 		bl	SPI_Init
 772              	.LVL32:
 111:Src/main.c    ****   loadConfig(&BMSconfig); // loads configuration settings from config.c
 773              		.loc 1 111 3 view .LVU237
 774 0024 FFF7FEFF 		bl	initPECTable
 775              	.LVL33:
 112:Src/main.c    ****   writeConfig(BMSconfig, 1); // number specifies how many ICs are connected
 776              		.loc 1 112 3 view .LVU238
 777 0028 314C     		ldr	r4, .L36
 778 002a 2046     		mov	r0, r4
 779 002c FFF7FEFF 		bl	loadConfig
 780              	.LVL34:
 113:Src/main.c    ****   // !! this assumes that the addresses for each IC count up from 1 !! //
 781              		.loc 1 113 3 view .LVU239
 782 0030 0123     		movs	r3, #1
 783 0032 0393     		str	r3, [sp, #12]
 784 0034 6B46     		mov	r3, sp
 785 0036 2246     		mov	r2, r4
 786 0038 52F8100F 		ldr	r0, [r2, #16]!	@ unaligned
 787 003c 5168     		ldr	r1, [r2, #4]	@ unaligned
 788 003e 9268     		ldr	r2, [r2, #8]	@ unaligned
 789 0040 07C3     		stmia	r3!, {r0, r1, r2}
 790 0042 2068     		ldr	r0, [r4]	@ unaligned
 791 0044 6168     		ldr	r1, [r4, #4]	@ unaligned
 792 0046 A268     		ldr	r2, [r4, #8]	@ unaligned
 793 0048 E368     		ldr	r3, [r4, #12]	@ unaligned
 794 004a FFF7FEFF 		bl	writeConfig
 795              	.LVL35:
 796 004e 43E0     		b	.L34
 797              	.L33:
 140:Src/main.c    **** 	printbuffer[1] = (uint8_t) voltage[0] & 0xFF;
 798              		.loc 1 140 2 view .LVU240
 140:Src/main.c    **** 	printbuffer[1] = (uint8_t) voltage[0] & 0xFF;
 799              		.loc 1 140 37 is_stmt 0 view .LVU241
 800 0050 BDF82030 		ldrh	r3, [sp, #32]
 140:Src/main.c    **** 	printbuffer[1] = (uint8_t) voltage[0] & 0xFF;
 801              		.loc 1 140 19 view .LVU242
 802 0054 1A0A     		lsrs	r2, r3, #8
 140:Src/main.c    **** 	printbuffer[1] = (uint8_t) voltage[0] & 0xFF;
 803              		.loc 1 140 17 view .LVU243
 804 0056 8DF81020 		strb	r2, [sp, #16]
 141:Src/main.c    **** 	printbuffer[2] = (uint8_t) (voltage[1] >> 8) & 0xFF;
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 26


 805              		.loc 1 141 2 is_stmt 1 view .LVU244
 141:Src/main.c    **** 	printbuffer[2] = (uint8_t) (voltage[1] >> 8) & 0xFF;
 806              		.loc 1 141 17 is_stmt 0 view .LVU245
 807 005a 8DF81130 		strb	r3, [sp, #17]
 142:Src/main.c    **** 	printbuffer[3] = (uint8_t) voltage[1] & 0xFF;
 808              		.loc 1 142 2 is_stmt 1 view .LVU246
 142:Src/main.c    **** 	printbuffer[3] = (uint8_t) voltage[1] & 0xFF;
 809              		.loc 1 142 37 is_stmt 0 view .LVU247
 810 005e BDF82230 		ldrh	r3, [sp, #34]
 142:Src/main.c    **** 	printbuffer[3] = (uint8_t) voltage[1] & 0xFF;
 811              		.loc 1 142 19 view .LVU248
 812 0062 1A0A     		lsrs	r2, r3, #8
 142:Src/main.c    **** 	printbuffer[3] = (uint8_t) voltage[1] & 0xFF;
 813              		.loc 1 142 17 view .LVU249
 814 0064 8DF81220 		strb	r2, [sp, #18]
 143:Src/main.c    **** 	printbuffer[4] = (uint8_t) (voltage[2] >> 8) & 0xFF;
 815              		.loc 1 143 2 is_stmt 1 view .LVU250
 143:Src/main.c    **** 	printbuffer[4] = (uint8_t) (voltage[2] >> 8) & 0xFF;
 816              		.loc 1 143 17 is_stmt 0 view .LVU251
 817 0068 8DF81330 		strb	r3, [sp, #19]
 144:Src/main.c    **** 	printbuffer[5] = (uint8_t) voltage[2] & 0xFF;
 818              		.loc 1 144 2 is_stmt 1 view .LVU252
 144:Src/main.c    **** 	printbuffer[5] = (uint8_t) voltage[2] & 0xFF;
 819              		.loc 1 144 37 is_stmt 0 view .LVU253
 820 006c BDF82430 		ldrh	r3, [sp, #36]
 144:Src/main.c    **** 	printbuffer[5] = (uint8_t) voltage[2] & 0xFF;
 821              		.loc 1 144 19 view .LVU254
 822 0070 1A0A     		lsrs	r2, r3, #8
 144:Src/main.c    **** 	printbuffer[5] = (uint8_t) voltage[2] & 0xFF;
 823              		.loc 1 144 17 view .LVU255
 824 0072 8DF81420 		strb	r2, [sp, #20]
 145:Src/main.c    **** 	printbuffer[6] = (uint8_t) (voltage[3] >> 8) & 0xFF;
 825              		.loc 1 145 2 is_stmt 1 view .LVU256
 145:Src/main.c    **** 	printbuffer[6] = (uint8_t) (voltage[3] >> 8) & 0xFF;
 826              		.loc 1 145 17 is_stmt 0 view .LVU257
 827 0076 8DF81530 		strb	r3, [sp, #21]
 146:Src/main.c    **** 	printbuffer[7] = (uint8_t) voltage[3] & 0xFF;
 828              		.loc 1 146 2 is_stmt 1 view .LVU258
 146:Src/main.c    **** 	printbuffer[7] = (uint8_t) voltage[3] & 0xFF;
 829              		.loc 1 146 37 is_stmt 0 view .LVU259
 830 007a BDF82630 		ldrh	r3, [sp, #38]
 146:Src/main.c    **** 	printbuffer[7] = (uint8_t) voltage[3] & 0xFF;
 831              		.loc 1 146 19 view .LVU260
 832 007e 1A0A     		lsrs	r2, r3, #8
 146:Src/main.c    **** 	printbuffer[7] = (uint8_t) voltage[3] & 0xFF;
 833              		.loc 1 146 17 view .LVU261
 834 0080 8DF81620 		strb	r2, [sp, #22]
 147:Src/main.c    **** 	printbuffer[8] = (uint8_t) (voltage[4] >> 8) & 0xFF;
 835              		.loc 1 147 2 is_stmt 1 view .LVU262
 147:Src/main.c    **** 	printbuffer[8] = (uint8_t) (voltage[4] >> 8) & 0xFF;
 836              		.loc 1 147 17 is_stmt 0 view .LVU263
 837 0084 8DF81730 		strb	r3, [sp, #23]
 148:Src/main.c    **** 	printbuffer[9] = (uint8_t) voltage[4] & 0xFF;
 838              		.loc 1 148 2 is_stmt 1 view .LVU264
 148:Src/main.c    **** 	printbuffer[9] = (uint8_t) voltage[4] & 0xFF;
 839              		.loc 1 148 37 is_stmt 0 view .LVU265
 840 0088 BDF82830 		ldrh	r3, [sp, #40]
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 27


 148:Src/main.c    **** 	printbuffer[9] = (uint8_t) voltage[4] & 0xFF;
 841              		.loc 1 148 19 view .LVU266
 842 008c 1A0A     		lsrs	r2, r3, #8
 148:Src/main.c    **** 	printbuffer[9] = (uint8_t) voltage[4] & 0xFF;
 843              		.loc 1 148 17 view .LVU267
 844 008e 8DF81820 		strb	r2, [sp, #24]
 149:Src/main.c    **** 	printbuffer[10] = (uint8_t) (voltage[5] >> 8) & 0xFF;
 845              		.loc 1 149 2 is_stmt 1 view .LVU268
 149:Src/main.c    **** 	printbuffer[10] = (uint8_t) (voltage[5] >> 8) & 0xFF;
 846              		.loc 1 149 17 is_stmt 0 view .LVU269
 847 0092 8DF81930 		strb	r3, [sp, #25]
 150:Src/main.c    **** 	printbuffer[11] = (uint8_t) voltage[5] & 0xFF;
 848              		.loc 1 150 2 is_stmt 1 view .LVU270
 150:Src/main.c    **** 	printbuffer[11] = (uint8_t) voltage[5] & 0xFF;
 849              		.loc 1 150 38 is_stmt 0 view .LVU271
 850 0096 BDF82A30 		ldrh	r3, [sp, #42]
 150:Src/main.c    **** 	printbuffer[11] = (uint8_t) voltage[5] & 0xFF;
 851              		.loc 1 150 20 view .LVU272
 852 009a 1A0A     		lsrs	r2, r3, #8
 150:Src/main.c    **** 	printbuffer[11] = (uint8_t) voltage[5] & 0xFF;
 853              		.loc 1 150 18 view .LVU273
 854 009c 8DF81A20 		strb	r2, [sp, #26]
 151:Src/main.c    **** 	printbuffer[12] = (uint8_t) (voltage[6] >> 8) & 0xFF;
 855              		.loc 1 151 2 is_stmt 1 view .LVU274
 151:Src/main.c    **** 	printbuffer[12] = (uint8_t) (voltage[6] >> 8) & 0xFF;
 856              		.loc 1 151 18 is_stmt 0 view .LVU275
 857 00a0 8DF81B30 		strb	r3, [sp, #27]
 152:Src/main.c    **** 	printbuffer[13] = (uint8_t) voltage[6] & 0xFF;
 858              		.loc 1 152 2 is_stmt 1 view .LVU276
 152:Src/main.c    **** 	printbuffer[13] = (uint8_t) voltage[6] & 0xFF;
 859              		.loc 1 152 38 is_stmt 0 view .LVU277
 860 00a4 BDF82C30 		ldrh	r3, [sp, #44]
 152:Src/main.c    **** 	printbuffer[13] = (uint8_t) voltage[6] & 0xFF;
 861              		.loc 1 152 20 view .LVU278
 862 00a8 1A0A     		lsrs	r2, r3, #8
 152:Src/main.c    **** 	printbuffer[13] = (uint8_t) voltage[6] & 0xFF;
 863              		.loc 1 152 18 view .LVU279
 864 00aa 8DF81C20 		strb	r2, [sp, #28]
 153:Src/main.c    **** 	printbuffer[14] = (uint8_t) (voltage[7] >> 8) & 0xFF;
 865              		.loc 1 153 2 is_stmt 1 view .LVU280
 153:Src/main.c    **** 	printbuffer[14] = (uint8_t) (voltage[7] >> 8) & 0xFF;
 866              		.loc 1 153 18 is_stmt 0 view .LVU281
 867 00ae 8DF81D30 		strb	r3, [sp, #29]
 154:Src/main.c    **** 	printbuffer[15] = (uint8_t) voltage[7] & 0xFF;
 868              		.loc 1 154 2 is_stmt 1 view .LVU282
 154:Src/main.c    **** 	printbuffer[15] = (uint8_t) voltage[7] & 0xFF;
 869              		.loc 1 154 38 is_stmt 0 view .LVU283
 870 00b2 BDF82E30 		ldrh	r3, [sp, #46]
 154:Src/main.c    **** 	printbuffer[15] = (uint8_t) voltage[7] & 0xFF;
 871              		.loc 1 154 20 view .LVU284
 872 00b6 1A0A     		lsrs	r2, r3, #8
 154:Src/main.c    **** 	printbuffer[15] = (uint8_t) voltage[7] & 0xFF;
 873              		.loc 1 154 18 view .LVU285
 874 00b8 8DF81E20 		strb	r2, [sp, #30]
 155:Src/main.c    **** 	
 875              		.loc 1 155 2 is_stmt 1 view .LVU286
 155:Src/main.c    **** 	
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 28


 876              		.loc 1 155 18 is_stmt 0 view .LVU287
 877 00bc 8DF81F30 		strb	r3, [sp, #31]
 157:Src/main.c    **** 	SerialPrint(printbuffer + 8, 8);
 878              		.loc 1 157 2 is_stmt 1 view .LVU288
 879 00c0 0821     		movs	r1, #8
 880 00c2 04A8     		add	r0, sp, #16
 881 00c4 FFF7FEFF 		bl	SerialPrint
 882              	.LVL36:
 158:Src/main.c    **** 	
 883              		.loc 1 158 2 view .LVU289
 884 00c8 0821     		movs	r1, #8
 885 00ca 06A8     		add	r0, sp, #24
 886 00cc FFF7FEFF 		bl	SerialPrint
 887              	.LVL37:
 160:Src/main.c    ****     /* USER CODE END WHILE */
 888              		.loc 1 160 2 view .LVU290
 889 00d0 4FF4FA70 		mov	r0, #500
 890 00d4 FFF7FEFF 		bl	HAL_Delay
 891              	.LVL38:
 892              	.L34:
 116:Src/main.c    ****   uint8_t printbuffer[16];
 893              		.loc 1 116 3 view .LVU291
 117:Src/main.c    ****   /* USER CODE END 2 */
 894              		.loc 1 117 3 view .LVU292
 122:Src/main.c    ****   {
 895              		.loc 1 122 3 view .LVU293
 136:Src/main.c    **** 	
 896              		.loc 1 136 2 view .LVU294
 136:Src/main.c    **** 	
 897              		.loc 1 136 6 is_stmt 0 view .LVU295
 898 00d8 08A9     		add	r1, sp, #32
 899 00da 0120     		movs	r0, #1
 900 00dc FFF7FEFF 		bl	readCellVoltage
 901              	.LVL39:
 136:Src/main.c    **** 	
 902              		.loc 1 136 5 view .LVU296
 903 00e0 0028     		cmp	r0, #0
 904 00e2 B5D0     		beq	.L33
 136:Src/main.c    **** 	
 905              		.loc 1 136 43 is_stmt 1 discriminator 1 view .LVU297
 906 00e4 4FF40051 		mov	r1, #8192
 907 00e8 0248     		ldr	r0, .L36+4
 908 00ea FFF7FEFF 		bl	HAL_GPIO_TogglePin
 909              	.LVL40:
 910 00ee AFE7     		b	.L33
 911              	.L37:
 912              		.align	2
 913              	.L36:
 914 00f0 00000000 		.word	BMSconfig
 915 00f4 00080240 		.word	1073874944
 916              		.cfi_endproc
 917              	.LFE130:
 919              		.section	.text.Error_Handler,"ax",%progbits
 920              		.align	1
 921              		.global	Error_Handler
 922              		.syntax unified
 923              		.thumb
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 29


 924              		.thumb_func
 925              		.fpu fpv4-sp-d16
 927              	Error_Handler:
 928              	.LFB139:
 464:Src/main.c    **** /* USER CODE END 4 */
 465:Src/main.c    **** 
 466:Src/main.c    **** /**
 467:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 468:Src/main.c    ****   * @retval None
 469:Src/main.c    ****   */
 470:Src/main.c    **** void Error_Handler(void)
 471:Src/main.c    **** {
 929              		.loc 1 471 1 view -0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933              		@ link register save eliminated.
 472:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 473:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 474:Src/main.c    **** 
 475:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 476:Src/main.c    **** }
 934              		.loc 1 476 1 view .LVU299
 935 0000 7047     		bx	lr
 936              		.cfi_endproc
 937              	.LFE139:
 939              		.comm	BMSconfig,28,4
 940              		.comm	CommandCode,2,2
 941              		.comm	huart1,64,4
 942              		.comm	hspi1,88,4
 943              		.comm	hcan2,40,4
 944              		.comm	hcan1,40,4
 945              		.comm	hadc1,72,4
 946              		.text
 947              	.Letext0:
 948              		.file 2 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 949              		.file 3 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 950              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 951              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 952              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 953              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 954              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 955              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 956              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 957              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 958              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 959              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 960              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 961              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 962              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 963              		.file 17 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 964              		.file 18 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 965              		.file 19 "c:\\arm-gcc\\8-2018-q4-major\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 966              		.file 20 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 967              		.file 21 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\stdlib.h"
 968              		.file 22 "Inc/BMSconfig.h"
 969              		.file 23 "Inc/LTC6811.h"
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 30


 970              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 971              		.file 25 "Inc/SPI.h"
 972              		.file 26 "<built-in>"
ARM GAS  C:\cygwin64\tmp\cc4a0Ukg.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\cygwin64\tmp\cc4a0Ukg.s:18     .text.MX_GPIO_Init:00000000 $t
C:\cygwin64\tmp\cc4a0Ukg.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\cygwin64\tmp\cc4a0Ukg.s:198    .text.MX_GPIO_Init:000000cc $d
C:\cygwin64\tmp\cc4a0Ukg.s:206    .text.MX_ADC1_Init:00000000 $t
C:\cygwin64\tmp\cc4a0Ukg.s:212    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\cygwin64\tmp\cc4a0Ukg.s:305    .text.MX_ADC1_Init:0000004c $d
                            *COM*:00000048 hadc1
C:\cygwin64\tmp\cc4a0Ukg.s:312    .text.MX_CAN1_Init:00000000 $t
C:\cygwin64\tmp\cc4a0Ukg.s:318    .text.MX_CAN1_Init:00000000 MX_CAN1_Init
C:\cygwin64\tmp\cc4a0Ukg.s:378    .text.MX_CAN1_Init:00000028 $d
                            *COM*:00000028 hcan1
C:\cygwin64\tmp\cc4a0Ukg.s:384    .text.MX_CAN2_Init:00000000 $t
C:\cygwin64\tmp\cc4a0Ukg.s:390    .text.MX_CAN2_Init:00000000 MX_CAN2_Init
C:\cygwin64\tmp\cc4a0Ukg.s:450    .text.MX_CAN2_Init:00000028 $d
                            *COM*:00000028 hcan2
C:\cygwin64\tmp\cc4a0Ukg.s:456    .text.MX_USART1_UART_Init:00000000 $t
C:\cygwin64\tmp\cc4a0Ukg.s:462    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\cygwin64\tmp\cc4a0Ukg.s:511    .text.MX_USART1_UART_Init:00000024 $d
                            *COM*:00000040 huart1
C:\cygwin64\tmp\cc4a0Ukg.s:517    .text.SystemClock_Config:00000000 $t
C:\cygwin64\tmp\cc4a0Ukg.s:524    .text.SystemClock_Config:00000000 SystemClock_Config
C:\cygwin64\tmp\cc4a0Ukg.s:637    .text.SystemClock_Config:00000078 $d
C:\cygwin64\tmp\cc4a0Ukg.s:643    .text.SerialPrint:00000000 $t
C:\cygwin64\tmp\cc4a0Ukg.s:650    .text.SerialPrint:00000000 SerialPrint
C:\cygwin64\tmp\cc4a0Ukg.s:723    .text.SerialPrint:00000030 $d
C:\cygwin64\tmp\cc4a0Ukg.s:728    .text.main:00000000 $t
C:\cygwin64\tmp\cc4a0Ukg.s:735    .text.main:00000000 main
C:\cygwin64\tmp\cc4a0Ukg.s:914    .text.main:000000f0 $d
                            *COM*:0000001c BMSconfig
C:\cygwin64\tmp\cc4a0Ukg.s:920    .text.Error_Handler:00000000 $t
C:\cygwin64\tmp\cc4a0Ukg.s:927    .text.Error_Handler:00000000 Error_Handler
                            *COM*:00000002 CommandCode
                            *COM*:00000058 hspi1

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_UART_Transmit
HAL_Init
SPI_Init
initPECTable
loadConfig
writeConfig
HAL_Delay
readCellVoltage
HAL_GPIO_TogglePin
