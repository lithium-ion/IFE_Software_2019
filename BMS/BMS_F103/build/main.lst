ARM GAS  /tmp/cchr5x9g.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB73:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/cchr5x9g.s 			page 2


  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** //#include "SPI.h"
  47:Src/main.c    **** #include "LTC6811.h"
  48:Src/main.c    **** #include "ChargerFunctions.h"
  49:Src/main.c    **** /* USER CODE END Includes */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  52:Src/main.c    **** /* USER CODE BEGIN PTD */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PTD */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN PD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PD */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN PM */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PM */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  67:Src/main.c    **** CAN_HandleTypeDef hcan;
  68:Src/main.c    **** 
  69:Src/main.c    **** SPI_HandleTypeDef hspi1;
  70:Src/main.c    **** 
  71:Src/main.c    **** TIM_HandleTypeDef htim2;
  72:Src/main.c    **** 
  73:Src/main.c    **** UART_HandleTypeDef huart1;
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE BEGIN PV */
  76:Src/main.c    **** CommandCodeTypedef CommandCode;
  77:Src/main.c    **** BMSconfigStructTypedef BMSconfig;
  78:Src/main.c    **** /* USER CODE END PV */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  81:Src/main.c    **** void SystemClock_Config(void);
  82:Src/main.c    **** static void MX_GPIO_Init(void);
  83:Src/main.c    **** static void MX_SPI1_Init(void);
  84:Src/main.c    **** static void MX_USART1_UART_Init(void);
  85:Src/main.c    **** static void MX_CAN_Init(void);
  86:Src/main.c    **** static void MX_TIM2_Init(void);
  87:Src/main.c    **** static void MX_NVIC_Init(void);
  88:Src/main.c    **** /* USER CODE BEGIN PFP */
  89:Src/main.c    **** void SerialPrint(uint8_t data[], uint8_t len);
  90:Src/main.c    **** /* USER CODE END PFP */
ARM GAS  /tmp/cchr5x9g.s 			page 3


  91:Src/main.c    **** 
  92:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  93:Src/main.c    **** /* USER CODE BEGIN 0 */
  94:Src/main.c    **** 
  95:Src/main.c    **** /* USER CODE END 0 */
  96:Src/main.c    **** 
  97:Src/main.c    **** /**
  98:Src/main.c    ****   * @brief  The application entry point.
  99:Src/main.c    ****   * @retval int
 100:Src/main.c    ****   */
 101:Src/main.c    **** int main(void)
 102:Src/main.c    **** {
 103:Src/main.c    ****   /* USER CODE BEGIN 1 */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE END 1 */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 110:Src/main.c    ****   HAL_Init();
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* USER CODE BEGIN Init */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE END Init */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* Configure the system clock */
 117:Src/main.c    ****   SystemClock_Config();
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* USER CODE END SysInit */
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* Initialize all configured peripherals */
 124:Src/main.c    ****   MX_GPIO_Init();
 125:Src/main.c    ****   //MX_SPI1_Init();
 126:Src/main.c    ****   MX_USART1_UART_Init();
 127:Src/main.c    ****   MX_CAN_Init();
 128:Src/main.c    ****   MX_TIM2_Init();
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* Initialize interrupts */
 131:Src/main.c    ****   MX_NVIC_Init();
 132:Src/main.c    ****   /* USER CODE BEGIN 2 */
 133:Src/main.c    ****   
 134:Src/main.c    ****   SPI_Init();
 135:Src/main.c    ****   initPECTable();
 136:Src/main.c    ****   loadConfig(&BMSconfig); // loads configuration settings from config.c
 137:Src/main.c    ****   writeConfig(BMSconfig, 1); // number specifies how many ICs are connected
 138:Src/main.c    ****   // !! this assumes that the addresses for each IC count up from 1 !! //
 139:Src/main.c    ****   
 140:Src/main.c    ****   uint16_t voltage[8];
 141:Src/main.c    ****   uint16_t temp[4];
 142:Src/main.c    ****   bool connection[12];
 143:Src/main.c    ****   uint8_t rdcfg[6];
 144:Src/main.c    ****   uint8_t printbuffer[16];
 145:Src/main.c    ****   bool discharging[12] = {false, false, false, false, false, false, false, false, false, false, fal
 146:Src/main.c    ****   /* USER CODE END 2 */
 147:Src/main.c    **** 
ARM GAS  /tmp/cchr5x9g.s 			page 4


 148:Src/main.c    ****   /* Infinite loop */
 149:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 150:Src/main.c    ****   while (1)
 151:Src/main.c    ****   {
 152:Src/main.c    **** 	  
 153:Src/main.c    **** 	// read cell voltage
 154:Src/main.c    **** 	// read cell temp
 155:Src/main.c    **** 	// check for disconnected cells
 156:Src/main.c    **** 	// handle faults and send CAN messages
 157:Src/main.c    **** 	
 158:Src/main.c    **** 	if (readCellVoltage(0, voltage) == true) HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 159:Src/main.c    **** 	
 160:Src/main.c    **** 	//if (readCellTemp(0, temp) == true) HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 161:Src/main.c    **** 	
 162:Src/main.c    **** 	writeConfig(BMSconfig, 1);
 163:Src/main.c    **** 	
 164:Src/main.c    **** 	readConfig(0, rdcfg);
 165:Src/main.c    **** 	
 166:Src/main.c    **** 	printbuffer[0] = rdcfg[0];
 167:Src/main.c    **** 	printbuffer[1] = rdcfg[1];
 168:Src/main.c    **** 	printbuffer[2] = rdcfg[2];
 169:Src/main.c    **** 	printbuffer[3] = rdcfg[3];
 170:Src/main.c    **** 	printbuffer[4] = rdcfg[4];
 171:Src/main.c    **** 	printbuffer[5] = rdcfg[5];
 172:Src/main.c    **** 	
 173:Src/main.c    **** 	// print cell voltage data
 174:Src/main.c    **** 	
 175:Src/main.c    **** 	/*printbuffer[0] = (uint8_t) (voltage[0] >> 8) & 0xFF;
 176:Src/main.c    **** 	printbuffer[1] = (uint8_t) voltage[0] & 0xFF;
 177:Src/main.c    **** 	printbuffer[2] = (uint8_t) (voltage[1] >> 8) & 0xFF;
 178:Src/main.c    **** 	printbuffer[3] = (uint8_t) voltage[1] & 0xFF;
 179:Src/main.c    **** 	printbuffer[4] = (uint8_t) (voltage[2] >> 8) & 0xFF;
 180:Src/main.c    **** 	printbuffer[5] = (uint8_t) voltage[2] & 0xFF;
 181:Src/main.c    **** 	printbuffer[6] = (uint8_t) (voltage[3] >> 8) & 0xFF;
 182:Src/main.c    **** 	printbuffer[7] = (uint8_t) voltage[3] & 0xFF;
 183:Src/main.c    **** 	printbuffer[8] = (uint8_t) (voltage[4] >> 8) & 0xFF;
 184:Src/main.c    **** 	printbuffer[9] = (uint8_t) voltage[4] & 0xFF;
 185:Src/main.c    **** 	printbuffer[10] = (uint8_t) (voltage[5] >> 8) & 0xFF;
 186:Src/main.c    **** 	printbuffer[11] = (uint8_t) voltage[5] & 0xFF;
 187:Src/main.c    **** 	printbuffer[12] = (uint8_t) (voltage[6] >> 8) & 0xFF;
 188:Src/main.c    **** 	printbuffer[13] = (uint8_t) voltage[6] & 0xFF;
 189:Src/main.c    **** 	printbuffer[14] = (uint8_t) (voltage[7] >> 8) & 0xFF;
 190:Src/main.c    **** 	printbuffer[15] = (uint8_t) voltage[7] & 0xFF;*/
 191:Src/main.c    **** 	
 192:Src/main.c    **** 	/*printbuffer[0] = (uint8_t) (temp[0] >> 8) & 0xFF;
 193:Src/main.c    **** 	printbuffer[1] = (uint8_t) temp[0] & 0xFF;
 194:Src/main.c    **** 	printbuffer[2] = (uint8_t) (temp[1] >> 8) & 0xFF;
 195:Src/main.c    **** 	printbuffer[3] = (uint8_t) temp[1] & 0xFF;
 196:Src/main.c    **** 	printbuffer[4] = (uint8_t) (temp[2] >> 8) & 0xFF;
 197:Src/main.c    **** 	printbuffer[5] = (uint8_t) temp[2] & 0xFF;
 198:Src/main.c    **** 	printbuffer[6] = (uint8_t) (temp[3] >> 8) & 0xFF;
 199:Src/main.c    **** 	printbuffer[7] = (uint8_t) temp[3] & 0xFF;*/
 200:Src/main.c    **** 	
 201:Src/main.c    **** 	SerialPrint(printbuffer, 6);
 202:Src/main.c    **** 	//SerialPrint(printbuffer, 8);
 203:Src/main.c    **** 	//SerialPrint(printbuffer + 8, 8);
 204:Src/main.c    **** 	
ARM GAS  /tmp/cchr5x9g.s 			page 5


 205:Src/main.c    **** 	/*** Charging  ***/
 206:Src/main.c    **** 	// Charger functions assume voltage data from every cell has already been receieved
 207:Src/main.c    **** 	/*
 208:Src/main.c    **** 	setChargeDischarge(cellsDischarge, &chargeCurrent, cellVoltage);
 209:Src/main.c    **** 	setChargerTxData();
 210:Src/main.c    **** 	
 211:Src/main.c    **** 	if (HAL_CAN_AddTxMessage(&hcan, &TxHeader2, CANtx, &TxMailbox) == HAL_OK) {
 212:Src/main.c    **** 		HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 213:Src/main.c    **** 	}
 214:Src/main.c    **** 	*/
 215:Src/main.c    **** 	/*** End Charging ***/
 216:Src/main.c    **** 
 217:Src/main.c    **** 	/*** Set which cells to discharge ***/
 218:Src/main.c    **** 	// cellsDischarge[boardNumber][cell]
 219:Src/main.c    **** 	discharging[0] = cellsDischarge[0][0];
 220:Src/main.c    **** 	discharging[1] = cellsDischarge[0][1];
 221:Src/main.c    **** 	discharging[2] = cellsDischarge[0][2];
 222:Src/main.c    **** 	discharging[3] = cellsDischarge[0][3];
 223:Src/main.c    **** 	discharging[6] = cellsDischarge[0][4];
 224:Src/main.c    **** 	discharging[7] = cellsDischarge[0][5];
 225:Src/main.c    **** 	discharging[8] = cellsDischarge[0][6];
 226:Src/main.c    **** 	discharging[9] = cellsDischarge[0][7];
 227:Src/main.c    **** 
 228:Src/main.c    **** 	setDischarge(discharging, &BMSconfig, 1);
 229:Src/main.c    **** 	/*** End Set which cells to discharge ***/
 230:Src/main.c    **** 
 231:Src/main.c    **** 
 232:Src/main.c    **** 	HAL_Delay(500);
 233:Src/main.c    **** 	
 234:Src/main.c    ****     /* USER CODE END WHILE */
 235:Src/main.c    **** 	
 236:Src/main.c    ****     /* USER CODE BEGIN 3 */
 237:Src/main.c    ****   }
 238:Src/main.c    ****   /* USER CODE END 3 */
 239:Src/main.c    **** }
 240:Src/main.c    **** 
 241:Src/main.c    **** /**
 242:Src/main.c    ****   * @brief System Clock Configuration
 243:Src/main.c    ****   * @retval None
 244:Src/main.c    ****   */
 245:Src/main.c    **** void SystemClock_Config(void)
 246:Src/main.c    **** {
 247:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 248:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 249:Src/main.c    **** 
 250:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 251:Src/main.c    ****   */
 252:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 253:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 254:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 255:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 256:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 257:Src/main.c    ****   {
 258:Src/main.c    ****     Error_Handler();
 259:Src/main.c    ****   }
 260:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 261:Src/main.c    ****   */
ARM GAS  /tmp/cchr5x9g.s 			page 6


 262:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 263:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 264:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 265:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 266:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 267:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 268:Src/main.c    **** 
 269:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 270:Src/main.c    ****   {
 271:Src/main.c    ****     Error_Handler();
 272:Src/main.c    ****   }
 273:Src/main.c    **** }
 274:Src/main.c    **** 
 275:Src/main.c    **** /**
 276:Src/main.c    ****   * @brief NVIC Configuration.
 277:Src/main.c    ****   * @retval None
 278:Src/main.c    ****   */
 279:Src/main.c    **** static void MX_NVIC_Init(void)
 280:Src/main.c    **** {
 281:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 282:Src/main.c    ****   HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 283:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 284:Src/main.c    **** }
 285:Src/main.c    **** 
 286:Src/main.c    **** /**
 287:Src/main.c    ****   * @brief CAN Initialization Function
 288:Src/main.c    ****   * @param None
 289:Src/main.c    ****   * @retval None
 290:Src/main.c    ****   */
 291:Src/main.c    **** static void MX_CAN_Init(void)
 292:Src/main.c    **** {
 293:Src/main.c    **** 
 294:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 0 */
 295:Src/main.c    **** 
 296:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
 297:Src/main.c    **** 
 298:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 1 */
 299:Src/main.c    **** 
 300:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 301:Src/main.c    ****   hcan.Instance = CAN1;
 302:Src/main.c    ****   hcan.Init.Prescaler = 16;
 303:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 304:Src/main.c    ****   hcan.Init.SJW = CAN_SJW_1TQ;
 305:Src/main.c    ****   hcan.Init.BS1 = CAN_BS1_3TQ;
 306:Src/main.c    ****   hcan.Init.BS2 = CAN_BS2_4TQ;
 307:Src/main.c    ****   hcan.Init.TTCM = DISABLE;
 308:Src/main.c    ****   hcan.Init.ABOM = ENABLE;
 309:Src/main.c    ****   hcan.Init.AWUM = DISABLE;
 310:Src/main.c    ****   hcan.Init.NART = DISABLE;
 311:Src/main.c    ****   hcan.Init.RFLM = DISABLE;
 312:Src/main.c    ****   hcan.Init.TXFP = DISABLE;
 313:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 314:Src/main.c    ****   {
 315:Src/main.c    ****     Error_Handler();
 316:Src/main.c    ****   }
 317:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 2 */
 318:Src/main.c    **** 
ARM GAS  /tmp/cchr5x9g.s 			page 7


 319:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 320:Src/main.c    **** 
 321:Src/main.c    **** }
 322:Src/main.c    **** 
 323:Src/main.c    **** /**
 324:Src/main.c    ****   * @brief SPI1 Initialization Function
 325:Src/main.c    ****   * @param None
 326:Src/main.c    ****   * @retval None
 327:Src/main.c    ****   */
 328:Src/main.c    **** static void MX_SPI1_Init(void)
 329:Src/main.c    **** {
 330:Src/main.c    **** 
 331:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 332:Src/main.c    **** 
 333:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 334:Src/main.c    **** 
 335:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 336:Src/main.c    **** 
 337:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 338:Src/main.c    ****   /* SPI1 parameter configuration*/
 339:Src/main.c    ****   hspi1.Instance = SPI1;
 340:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 341:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 342:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 343:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 344:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 345:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 346:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 347:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 348:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 349:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 350:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 351:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 352:Src/main.c    ****   {
 353:Src/main.c    ****     Error_Handler();
 354:Src/main.c    ****   }
 355:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 356:Src/main.c    **** 
 357:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 358:Src/main.c    **** 
 359:Src/main.c    **** }
 360:Src/main.c    **** 
 361:Src/main.c    **** /**
 362:Src/main.c    ****   * @brief TIM2 Initialization Function
 363:Src/main.c    ****   * @param None
 364:Src/main.c    ****   * @retval None
 365:Src/main.c    ****   */
 366:Src/main.c    **** static void MX_TIM2_Init(void)
 367:Src/main.c    **** {
 368:Src/main.c    **** 
 369:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 370:Src/main.c    **** 
 371:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 372:Src/main.c    **** 
 373:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 374:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 375:Src/main.c    **** 
ARM GAS  /tmp/cchr5x9g.s 			page 8


 376:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 377:Src/main.c    **** 
 378:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 379:Src/main.c    ****   htim2.Instance = TIM2;
 380:Src/main.c    ****   htim2.Init.Prescaler = 199;
 381:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 382:Src/main.c    ****   htim2.Init.Period = 0;
 383:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 384:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 385:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 386:Src/main.c    ****   {
 387:Src/main.c    ****     Error_Handler();
 388:Src/main.c    ****   }
 389:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 390:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 391:Src/main.c    ****   {
 392:Src/main.c    ****     Error_Handler();
 393:Src/main.c    ****   }
 394:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 395:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 396:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 397:Src/main.c    ****   {
 398:Src/main.c    ****     Error_Handler();
 399:Src/main.c    ****   }
 400:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 401:Src/main.c    **** 
 402:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 403:Src/main.c    **** 
 404:Src/main.c    **** }
 405:Src/main.c    **** 
 406:Src/main.c    **** /**
 407:Src/main.c    ****   * @brief USART1 Initialization Function
 408:Src/main.c    ****   * @param None
 409:Src/main.c    ****   * @retval None
 410:Src/main.c    ****   */
 411:Src/main.c    **** static void MX_USART1_UART_Init(void)
 412:Src/main.c    **** {
 413:Src/main.c    **** 
 414:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 415:Src/main.c    **** 
 416:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 417:Src/main.c    **** 
 418:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 419:Src/main.c    **** 
 420:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 421:Src/main.c    ****   huart1.Instance = USART1;
 422:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 423:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 424:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 425:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 426:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 427:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 428:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 429:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 430:Src/main.c    ****   {
 431:Src/main.c    ****     Error_Handler();
 432:Src/main.c    ****   }
ARM GAS  /tmp/cchr5x9g.s 			page 9


 433:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 434:Src/main.c    **** 
 435:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 436:Src/main.c    **** 
 437:Src/main.c    **** }
 438:Src/main.c    **** 
 439:Src/main.c    **** /**
 440:Src/main.c    ****   * @brief GPIO Initialization Function
 441:Src/main.c    ****   * @param None
 442:Src/main.c    ****   * @retval None
 443:Src/main.c    ****   */
 444:Src/main.c    **** static void MX_GPIO_Init(void)
 445:Src/main.c    **** {
  26              		.loc 1 445 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 87B0     		sub	sp, sp, #28
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 446:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 446 3 view .LVU1
  42              		.loc 1 446 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0294     		str	r4, [sp, #8]
  45 0008 0394     		str	r4, [sp, #12]
  46 000a 0494     		str	r4, [sp, #16]
  47 000c 0594     		str	r4, [sp, #20]
 447:Src/main.c    **** 
 448:Src/main.c    ****   /* GPIO Ports Clock Enable */
 449:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 449 3 is_stmt 1 view .LVU3
  49              	.LBB2:
  50              		.loc 1 449 3 view .LVU4
  51              		.loc 1 449 3 view .LVU5
  52 000e 184B     		ldr	r3, .L3
  53 0010 9A69     		ldr	r2, [r3, #24]
  54 0012 42F01002 		orr	r2, r2, #16
  55 0016 9A61     		str	r2, [r3, #24]
  56              		.loc 1 449 3 view .LVU6
  57 0018 9A69     		ldr	r2, [r3, #24]
  58 001a 02F01002 		and	r2, r2, #16
  59 001e 0092     		str	r2, [sp]
  60              		.loc 1 449 3 view .LVU7
  61 0020 009A     		ldr	r2, [sp]
  62              	.LBE2:
 450:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 450 3 view .LVU8
  64              	.LBB3:
ARM GAS  /tmp/cchr5x9g.s 			page 10


  65              		.loc 1 450 3 view .LVU9
  66              		.loc 1 450 3 view .LVU10
  67 0022 9A69     		ldr	r2, [r3, #24]
  68 0024 42F00402 		orr	r2, r2, #4
  69 0028 9A61     		str	r2, [r3, #24]
  70              		.loc 1 450 3 view .LVU11
  71 002a 9B69     		ldr	r3, [r3, #24]
  72 002c 03F00403 		and	r3, r3, #4
  73 0030 0193     		str	r3, [sp, #4]
  74              		.loc 1 450 3 view .LVU12
  75 0032 019B     		ldr	r3, [sp, #4]
  76              	.LBE3:
 451:Src/main.c    **** 
 452:Src/main.c    ****   /*Configure GPIO pin Output Level */
 453:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  77              		.loc 1 453 3 view .LVU13
  78 0034 0F4F     		ldr	r7, .L3+4
  79 0036 2246     		mov	r2, r4
  80 0038 4FF40051 		mov	r1, #8192
  81 003c 3846     		mov	r0, r7
  82 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  83              	.LVL0:
 454:Src/main.c    **** 
 455:Src/main.c    ****   /*Configure GPIO pin : PC13 */
 456:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  84              		.loc 1 456 3 view .LVU14
  85              		.loc 1 456 23 is_stmt 0 view .LVU15
  86 0042 4FF40053 		mov	r3, #8192
  87 0046 0293     		str	r3, [sp, #8]
 457:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  88              		.loc 1 457 3 is_stmt 1 view .LVU16
  89              		.loc 1 457 24 is_stmt 0 view .LVU17
  90 0048 0126     		movs	r6, #1
  91 004a 0396     		str	r6, [sp, #12]
 458:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  92              		.loc 1 458 3 is_stmt 1 view .LVU18
  93              		.loc 1 458 24 is_stmt 0 view .LVU19
  94 004c 0494     		str	r4, [sp, #16]
 459:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  95              		.loc 1 459 3 is_stmt 1 view .LVU20
  96              		.loc 1 459 25 is_stmt 0 view .LVU21
  97 004e 0225     		movs	r5, #2
  98 0050 0595     		str	r5, [sp, #20]
 460:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  99              		.loc 1 460 3 is_stmt 1 view .LVU22
 100 0052 02A9     		add	r1, sp, #8
 101 0054 3846     		mov	r0, r7
 102 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 103              	.LVL1:
 461:Src/main.c    ****   
 462:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 104              		.loc 1 462 3 view .LVU23
 105              		.loc 1 462 23 is_stmt 0 view .LVU24
 106 005a 1023     		movs	r3, #16
 107 005c 0293     		str	r3, [sp, #8]
 463:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 463 3 is_stmt 1 view .LVU25
ARM GAS  /tmp/cchr5x9g.s 			page 11


 109              		.loc 1 463 24 is_stmt 0 view .LVU26
 110 005e 0396     		str	r6, [sp, #12]
 464:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 111              		.loc 1 464 3 is_stmt 1 view .LVU27
 112              		.loc 1 464 24 is_stmt 0 view .LVU28
 113 0060 0494     		str	r4, [sp, #16]
 465:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 114              		.loc 1 465 3 is_stmt 1 view .LVU29
 115              		.loc 1 465 25 is_stmt 0 view .LVU30
 116 0062 0595     		str	r5, [sp, #20]
 466:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 117              		.loc 1 466 3 is_stmt 1 view .LVU31
 118 0064 02A9     		add	r1, sp, #8
 119 0066 0448     		ldr	r0, .L3+8
 120 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 121              	.LVL2:
 467:Src/main.c    **** 
 468:Src/main.c    **** }
 122              		.loc 1 468 1 is_stmt 0 view .LVU32
 123 006c 07B0     		add	sp, sp, #28
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 20
 126              		@ sp needed
 127 006e F0BD     		pop	{r4, r5, r6, r7, pc}
 128              	.L4:
 129              		.align	2
 130              	.L3:
 131 0070 00100240 		.word	1073876992
 132 0074 00100140 		.word	1073811456
 133 0078 00080140 		.word	1073809408
 134              		.cfi_endproc
 135              	.LFE73:
 137              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 138              		.align	1
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 142              		.fpu softvfp
 144              	MX_USART1_UART_Init:
 145              	.LFB72:
 412:Src/main.c    **** 
 146              		.loc 1 412 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150 0000 08B5     		push	{r3, lr}
 151              	.LCFI3:
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 3, -8
 154              		.cfi_offset 14, -4
 421:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 155              		.loc 1 421 3 view .LVU34
 421:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 156              		.loc 1 421 19 is_stmt 0 view .LVU35
 157 0002 0848     		ldr	r0, .L7
 158 0004 084B     		ldr	r3, .L7+4
 159 0006 0360     		str	r3, [r0]
ARM GAS  /tmp/cchr5x9g.s 			page 12


 422:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 160              		.loc 1 422 3 is_stmt 1 view .LVU36
 422:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 161              		.loc 1 422 24 is_stmt 0 view .LVU37
 162 0008 4FF4E133 		mov	r3, #115200
 163 000c 4360     		str	r3, [r0, #4]
 423:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 164              		.loc 1 423 3 is_stmt 1 view .LVU38
 423:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 165              		.loc 1 423 26 is_stmt 0 view .LVU39
 166 000e 0023     		movs	r3, #0
 167 0010 8360     		str	r3, [r0, #8]
 424:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 168              		.loc 1 424 3 is_stmt 1 view .LVU40
 424:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 169              		.loc 1 424 24 is_stmt 0 view .LVU41
 170 0012 C360     		str	r3, [r0, #12]
 425:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 171              		.loc 1 425 3 is_stmt 1 view .LVU42
 425:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 172              		.loc 1 425 22 is_stmt 0 view .LVU43
 173 0014 0361     		str	r3, [r0, #16]
 426:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 174              		.loc 1 426 3 is_stmt 1 view .LVU44
 426:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 175              		.loc 1 426 20 is_stmt 0 view .LVU45
 176 0016 0C22     		movs	r2, #12
 177 0018 4261     		str	r2, [r0, #20]
 427:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 178              		.loc 1 427 3 is_stmt 1 view .LVU46
 427:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 179              		.loc 1 427 25 is_stmt 0 view .LVU47
 180 001a 8361     		str	r3, [r0, #24]
 428:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 181              		.loc 1 428 3 is_stmt 1 view .LVU48
 428:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 182              		.loc 1 428 28 is_stmt 0 view .LVU49
 183 001c C361     		str	r3, [r0, #28]
 429:Src/main.c    ****   {
 184              		.loc 1 429 3 is_stmt 1 view .LVU50
 429:Src/main.c    ****   {
 185              		.loc 1 429 7 is_stmt 0 view .LVU51
 186 001e FFF7FEFF 		bl	HAL_UART_Init
 187              	.LVL3:
 437:Src/main.c    **** 
 188              		.loc 1 437 1 view .LVU52
 189 0022 08BD     		pop	{r3, pc}
 190              	.L8:
 191              		.align	2
 192              	.L7:
 193 0024 00000000 		.word	huart1
 194 0028 00380140 		.word	1073821696
 195              		.cfi_endproc
 196              	.LFE72:
 198              		.section	.text.MX_CAN_Init,"ax",%progbits
 199              		.align	1
 200              		.syntax unified
ARM GAS  /tmp/cchr5x9g.s 			page 13


 201              		.thumb
 202              		.thumb_func
 203              		.fpu softvfp
 205              	MX_CAN_Init:
 206              	.LFB69:
 292:Src/main.c    **** 
 207              		.loc 1 292 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 08B5     		push	{r3, lr}
 212              	.LCFI4:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 3, -8
 215              		.cfi_offset 14, -4
 301:Src/main.c    ****   hcan.Init.Prescaler = 16;
 216              		.loc 1 301 3 view .LVU54
 301:Src/main.c    ****   hcan.Init.Prescaler = 16;
 217              		.loc 1 301 17 is_stmt 0 view .LVU55
 218 0002 0C48     		ldr	r0, .L11
 219 0004 0C4B     		ldr	r3, .L11+4
 220 0006 0360     		str	r3, [r0]
 302:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 221              		.loc 1 302 3 is_stmt 1 view .LVU56
 302:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 222              		.loc 1 302 23 is_stmt 0 view .LVU57
 223 0008 1023     		movs	r3, #16
 224 000a 4360     		str	r3, [r0, #4]
 303:Src/main.c    ****   hcan.Init.SJW = CAN_SJW_1TQ;
 225              		.loc 1 303 3 is_stmt 1 view .LVU58
 303:Src/main.c    ****   hcan.Init.SJW = CAN_SJW_1TQ;
 226              		.loc 1 303 18 is_stmt 0 view .LVU59
 227 000c 0023     		movs	r3, #0
 228 000e 8360     		str	r3, [r0, #8]
 304:Src/main.c    ****   hcan.Init.BS1 = CAN_BS1_3TQ;
 229              		.loc 1 304 3 is_stmt 1 view .LVU60
 304:Src/main.c    ****   hcan.Init.BS1 = CAN_BS1_3TQ;
 230              		.loc 1 304 17 is_stmt 0 view .LVU61
 231 0010 C360     		str	r3, [r0, #12]
 305:Src/main.c    ****   hcan.Init.BS2 = CAN_BS2_4TQ;
 232              		.loc 1 305 3 is_stmt 1 view .LVU62
 305:Src/main.c    ****   hcan.Init.BS2 = CAN_BS2_4TQ;
 233              		.loc 1 305 17 is_stmt 0 view .LVU63
 234 0012 4FF40032 		mov	r2, #131072
 235 0016 0261     		str	r2, [r0, #16]
 306:Src/main.c    ****   hcan.Init.TTCM = DISABLE;
 236              		.loc 1 306 3 is_stmt 1 view .LVU64
 306:Src/main.c    ****   hcan.Init.TTCM = DISABLE;
 237              		.loc 1 306 17 is_stmt 0 view .LVU65
 238 0018 4FF44012 		mov	r2, #3145728
 239 001c 4261     		str	r2, [r0, #20]
 307:Src/main.c    ****   hcan.Init.ABOM = ENABLE;
 240              		.loc 1 307 3 is_stmt 1 view .LVU66
 307:Src/main.c    ****   hcan.Init.ABOM = ENABLE;
 241              		.loc 1 307 18 is_stmt 0 view .LVU67
 242 001e 8361     		str	r3, [r0, #24]
 308:Src/main.c    ****   hcan.Init.AWUM = DISABLE;
ARM GAS  /tmp/cchr5x9g.s 			page 14


 243              		.loc 1 308 3 is_stmt 1 view .LVU68
 308:Src/main.c    ****   hcan.Init.AWUM = DISABLE;
 244              		.loc 1 308 18 is_stmt 0 view .LVU69
 245 0020 0122     		movs	r2, #1
 246 0022 C261     		str	r2, [r0, #28]
 309:Src/main.c    ****   hcan.Init.NART = DISABLE;
 247              		.loc 1 309 3 is_stmt 1 view .LVU70
 309:Src/main.c    ****   hcan.Init.NART = DISABLE;
 248              		.loc 1 309 18 is_stmt 0 view .LVU71
 249 0024 0362     		str	r3, [r0, #32]
 310:Src/main.c    ****   hcan.Init.RFLM = DISABLE;
 250              		.loc 1 310 3 is_stmt 1 view .LVU72
 310:Src/main.c    ****   hcan.Init.RFLM = DISABLE;
 251              		.loc 1 310 18 is_stmt 0 view .LVU73
 252 0026 4362     		str	r3, [r0, #36]
 311:Src/main.c    ****   hcan.Init.TXFP = DISABLE;
 253              		.loc 1 311 3 is_stmt 1 view .LVU74
 311:Src/main.c    ****   hcan.Init.TXFP = DISABLE;
 254              		.loc 1 311 18 is_stmt 0 view .LVU75
 255 0028 8362     		str	r3, [r0, #40]
 312:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 256              		.loc 1 312 3 is_stmt 1 view .LVU76
 312:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 257              		.loc 1 312 18 is_stmt 0 view .LVU77
 258 002a C362     		str	r3, [r0, #44]
 313:Src/main.c    ****   {
 259              		.loc 1 313 3 is_stmt 1 view .LVU78
 313:Src/main.c    ****   {
 260              		.loc 1 313 7 is_stmt 0 view .LVU79
 261 002c FFF7FEFF 		bl	HAL_CAN_Init
 262              	.LVL4:
 321:Src/main.c    **** 
 263              		.loc 1 321 1 view .LVU80
 264 0030 08BD     		pop	{r3, pc}
 265              	.L12:
 266 0032 00BF     		.align	2
 267              	.L11:
 268 0034 00000000 		.word	hcan
 269 0038 00640040 		.word	1073767424
 270              		.cfi_endproc
 271              	.LFE69:
 273              		.section	.text.MX_TIM2_Init,"ax",%progbits
 274              		.align	1
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu softvfp
 280              	MX_TIM2_Init:
 281              	.LFB71:
 367:Src/main.c    **** 
 282              		.loc 1 367 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 24
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286 0000 30B5     		push	{r4, r5, lr}
 287              	.LCFI5:
 288              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cchr5x9g.s 			page 15


 289              		.cfi_offset 4, -12
 290              		.cfi_offset 5, -8
 291              		.cfi_offset 14, -4
 292 0002 87B0     		sub	sp, sp, #28
 293              	.LCFI6:
 294              		.cfi_def_cfa_offset 40
 373:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 295              		.loc 1 373 3 view .LVU82
 373:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 296              		.loc 1 373 26 is_stmt 0 view .LVU83
 297 0004 0024     		movs	r4, #0
 298 0006 0294     		str	r4, [sp, #8]
 299 0008 0394     		str	r4, [sp, #12]
 300 000a 0494     		str	r4, [sp, #16]
 301 000c 0594     		str	r4, [sp, #20]
 374:Src/main.c    **** 
 302              		.loc 1 374 3 is_stmt 1 view .LVU84
 374:Src/main.c    **** 
 303              		.loc 1 374 27 is_stmt 0 view .LVU85
 304 000e 0094     		str	r4, [sp]
 305 0010 0194     		str	r4, [sp, #4]
 379:Src/main.c    ****   htim2.Init.Prescaler = 199;
 306              		.loc 1 379 3 is_stmt 1 view .LVU86
 379:Src/main.c    ****   htim2.Init.Prescaler = 199;
 307              		.loc 1 379 18 is_stmt 0 view .LVU87
 308 0012 0E4D     		ldr	r5, .L15
 309 0014 4FF08043 		mov	r3, #1073741824
 310 0018 2B60     		str	r3, [r5]
 380:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 311              		.loc 1 380 3 is_stmt 1 view .LVU88
 380:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 312              		.loc 1 380 24 is_stmt 0 view .LVU89
 313 001a C723     		movs	r3, #199
 314 001c 6B60     		str	r3, [r5, #4]
 381:Src/main.c    ****   htim2.Init.Period = 0;
 315              		.loc 1 381 3 is_stmt 1 view .LVU90
 381:Src/main.c    ****   htim2.Init.Period = 0;
 316              		.loc 1 381 26 is_stmt 0 view .LVU91
 317 001e AC60     		str	r4, [r5, #8]
 382:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 318              		.loc 1 382 3 is_stmt 1 view .LVU92
 382:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 319              		.loc 1 382 21 is_stmt 0 view .LVU93
 320 0020 EC60     		str	r4, [r5, #12]
 383:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 321              		.loc 1 383 3 is_stmt 1 view .LVU94
 383:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 322              		.loc 1 383 28 is_stmt 0 view .LVU95
 323 0022 2C61     		str	r4, [r5, #16]
 384:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 324              		.loc 1 384 3 is_stmt 1 view .LVU96
 384:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 325              		.loc 1 384 32 is_stmt 0 view .LVU97
 326 0024 AC61     		str	r4, [r5, #24]
 385:Src/main.c    ****   {
 327              		.loc 1 385 3 is_stmt 1 view .LVU98
 385:Src/main.c    ****   {
ARM GAS  /tmp/cchr5x9g.s 			page 16


 328              		.loc 1 385 7 is_stmt 0 view .LVU99
 329 0026 2846     		mov	r0, r5
 330 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 331              	.LVL5:
 389:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 332              		.loc 1 389 3 is_stmt 1 view .LVU100
 389:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 333              		.loc 1 389 34 is_stmt 0 view .LVU101
 334 002c 4FF48053 		mov	r3, #4096
 335 0030 0293     		str	r3, [sp, #8]
 390:Src/main.c    ****   {
 336              		.loc 1 390 3 is_stmt 1 view .LVU102
 390:Src/main.c    ****   {
 337              		.loc 1 390 7 is_stmt 0 view .LVU103
 338 0032 02A9     		add	r1, sp, #8
 339 0034 2846     		mov	r0, r5
 340 0036 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 341              	.LVL6:
 394:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 342              		.loc 1 394 3 is_stmt 1 view .LVU104
 394:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 343              		.loc 1 394 37 is_stmt 0 view .LVU105
 344 003a 0094     		str	r4, [sp]
 395:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 345              		.loc 1 395 3 is_stmt 1 view .LVU106
 395:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 346              		.loc 1 395 33 is_stmt 0 view .LVU107
 347 003c 0194     		str	r4, [sp, #4]
 396:Src/main.c    ****   {
 348              		.loc 1 396 3 is_stmt 1 view .LVU108
 396:Src/main.c    ****   {
 349              		.loc 1 396 7 is_stmt 0 view .LVU109
 350 003e 6946     		mov	r1, sp
 351 0040 2846     		mov	r0, r5
 352 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 353              	.LVL7:
 404:Src/main.c    **** 
 354              		.loc 1 404 1 view .LVU110
 355 0046 07B0     		add	sp, sp, #28
 356              	.LCFI7:
 357              		.cfi_def_cfa_offset 12
 358              		@ sp needed
 359 0048 30BD     		pop	{r4, r5, pc}
 360              	.L16:
 361 004a 00BF     		.align	2
 362              	.L15:
 363 004c 00000000 		.word	htim2
 364              		.cfi_endproc
 365              	.LFE71:
 367              		.section	.text.MX_NVIC_Init,"ax",%progbits
 368              		.align	1
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu softvfp
 374              	MX_NVIC_Init:
 375              	.LFB68:
ARM GAS  /tmp/cchr5x9g.s 			page 17


 280:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 376              		.loc 1 280 1 is_stmt 1 view -0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380 0000 08B5     		push	{r3, lr}
 381              	.LCFI8:
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 3, -8
 384              		.cfi_offset 14, -4
 282:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 385              		.loc 1 282 3 view .LVU112
 386 0002 0022     		movs	r2, #0
 387 0004 1146     		mov	r1, r2
 388 0006 1C20     		movs	r0, #28
 389 0008 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 390              	.LVL8:
 283:Src/main.c    **** }
 391              		.loc 1 283 3 view .LVU113
 392 000c 1C20     		movs	r0, #28
 393 000e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 394              	.LVL9:
 284:Src/main.c    **** 
 395              		.loc 1 284 1 is_stmt 0 view .LVU114
 396 0012 08BD     		pop	{r3, pc}
 397              		.cfi_endproc
 398              	.LFE68:
 400              		.section	.text.SystemClock_Config,"ax",%progbits
 401              		.align	1
 402              		.global	SystemClock_Config
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
 406              		.fpu softvfp
 408              	SystemClock_Config:
 409              	.LFB67:
 246:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 410              		.loc 1 246 1 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 64
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414 0000 10B5     		push	{r4, lr}
 415              	.LCFI9:
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 4, -8
 418              		.cfi_offset 14, -4
 419 0002 90B0     		sub	sp, sp, #64
 420              	.LCFI10:
 421              		.cfi_def_cfa_offset 72
 247:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 422              		.loc 1 247 3 view .LVU116
 247:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 423              		.loc 1 247 22 is_stmt 0 view .LVU117
 424 0004 2422     		movs	r2, #36
 425 0006 0021     		movs	r1, #0
 426 0008 07A8     		add	r0, sp, #28
 427 000a FFF7FEFF 		bl	memset
ARM GAS  /tmp/cchr5x9g.s 			page 18


 428              	.LVL10:
 248:Src/main.c    **** 
 429              		.loc 1 248 3 is_stmt 1 view .LVU118
 248:Src/main.c    **** 
 430              		.loc 1 248 22 is_stmt 0 view .LVU119
 431 000e 0024     		movs	r4, #0
 432 0010 0194     		str	r4, [sp, #4]
 433 0012 0294     		str	r4, [sp, #8]
 434 0014 0394     		str	r4, [sp, #12]
 435 0016 0494     		str	r4, [sp, #16]
 436 0018 0594     		str	r4, [sp, #20]
 252:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 437              		.loc 1 252 3 is_stmt 1 view .LVU120
 252:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 438              		.loc 1 252 36 is_stmt 0 view .LVU121
 439 001a 0223     		movs	r3, #2
 440 001c 0693     		str	r3, [sp, #24]
 253:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 441              		.loc 1 253 3 is_stmt 1 view .LVU122
 253:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 442              		.loc 1 253 30 is_stmt 0 view .LVU123
 443 001e 0123     		movs	r3, #1
 444 0020 0A93     		str	r3, [sp, #40]
 254:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 445              		.loc 1 254 3 is_stmt 1 view .LVU124
 254:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 446              		.loc 1 254 41 is_stmt 0 view .LVU125
 447 0022 1023     		movs	r3, #16
 448 0024 0B93     		str	r3, [sp, #44]
 255:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 449              		.loc 1 255 3 is_stmt 1 view .LVU126
 256:Src/main.c    ****   {
 450              		.loc 1 256 3 view .LVU127
 256:Src/main.c    ****   {
 451              		.loc 1 256 7 is_stmt 0 view .LVU128
 452 0026 06A8     		add	r0, sp, #24
 453 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 454              	.LVL11:
 262:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 455              		.loc 1 262 3 is_stmt 1 view .LVU129
 262:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 456              		.loc 1 262 31 is_stmt 0 view .LVU130
 457 002c 0F23     		movs	r3, #15
 458 002e 0193     		str	r3, [sp, #4]
 264:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 459              		.loc 1 264 3 is_stmt 1 view .LVU131
 264:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 460              		.loc 1 264 34 is_stmt 0 view .LVU132
 461 0030 0294     		str	r4, [sp, #8]
 265:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 462              		.loc 1 265 3 is_stmt 1 view .LVU133
 265:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 463              		.loc 1 265 35 is_stmt 0 view .LVU134
 464 0032 0394     		str	r4, [sp, #12]
 266:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 465              		.loc 1 266 3 is_stmt 1 view .LVU135
 266:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/cchr5x9g.s 			page 19


 466              		.loc 1 266 36 is_stmt 0 view .LVU136
 467 0034 0494     		str	r4, [sp, #16]
 267:Src/main.c    **** 
 468              		.loc 1 267 3 is_stmt 1 view .LVU137
 267:Src/main.c    **** 
 469              		.loc 1 267 36 is_stmt 0 view .LVU138
 470 0036 0594     		str	r4, [sp, #20]
 269:Src/main.c    ****   {
 471              		.loc 1 269 3 is_stmt 1 view .LVU139
 269:Src/main.c    ****   {
 472              		.loc 1 269 7 is_stmt 0 view .LVU140
 473 0038 2146     		mov	r1, r4
 474 003a 01A8     		add	r0, sp, #4
 475 003c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 476              	.LVL12:
 273:Src/main.c    **** 
 477              		.loc 1 273 1 view .LVU141
 478 0040 10B0     		add	sp, sp, #64
 479              	.LCFI11:
 480              		.cfi_def_cfa_offset 8
 481              		@ sp needed
 482 0042 10BD     		pop	{r4, pc}
 483              		.cfi_endproc
 484              	.LFE67:
 486              		.section	.text.SerialPrint,"ax",%progbits
 487              		.align	1
 488              		.global	SerialPrint
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu softvfp
 494              	SerialPrint:
 495              	.LVL13:
 496              	.LFB74:
 469:Src/main.c    **** 
 470:Src/main.c    **** /* USER CODE BEGIN 4 */
 471:Src/main.c    **** void SerialPrint(uint8_t data[], uint8_t len) {
 497              		.loc 1 471 47 is_stmt 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 1, uses_anonymous_args = 0
 501              		.loc 1 471 47 is_stmt 0 view .LVU143
 502 0000 98B5     		push	{r3, r4, r7, lr}
 503              	.LCFI12:
 504              		.cfi_def_cfa_offset 16
 505              		.cfi_offset 3, -16
 506              		.cfi_offset 4, -12
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 00AF     		add	r7, sp, #0
 510              	.LCFI13:
 511              		.cfi_def_cfa_register 7
 512 0004 0A46     		mov	r2, r1
 472:Src/main.c    **** 	
 473:Src/main.c    **** 	unsigned char serial[len];
 513              		.loc 1 473 2 is_stmt 1 view .LVU144
 514              	.LVL14:
ARM GAS  /tmp/cchr5x9g.s 			page 20


 515              		.loc 1 473 16 is_stmt 0 view .LVU145
 516 0006 CB1D     		adds	r3, r1, #7
 517 0008 03F4FC73 		and	r3, r3, #504
 518 000c ADEB030D 		sub	sp, sp, r3
 519 0010 6946     		mov	r1, sp
 520              	.LVL15:
 474:Src/main.c    **** 	
 475:Src/main.c    **** 	for (uint8_t i = 0; i < len; i++) {
 521              		.loc 1 475 2 is_stmt 1 view .LVU146
 522              	.LBB4:
 523              		.loc 1 475 7 view .LVU147
 524              		.loc 1 475 15 is_stmt 0 view .LVU148
 525 0012 0023     		movs	r3, #0
 526              	.LVL16:
 527              	.L22:
 528              		.loc 1 475 2 discriminator 1 view .LVU149
 529 0014 9342     		cmp	r3, r2
 530 0016 04D2     		bcs	.L25
 476:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 531              		.loc 1 476 3 is_stmt 1 discriminator 3 view .LVU150
 532              		.loc 1 476 15 is_stmt 0 discriminator 3 view .LVU151
 533 0018 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
 534              		.loc 1 476 13 discriminator 3 view .LVU152
 535 001a CC54     		strb	r4, [r1, r3]
 475:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 536              		.loc 1 475 32 discriminator 3 view .LVU153
 537 001c 0133     		adds	r3, r3, #1
 538              	.LVL17:
 475:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 539              		.loc 1 475 32 discriminator 3 view .LVU154
 540 001e DBB2     		uxtb	r3, r3
 541              	.LVL18:
 475:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 542              		.loc 1 475 32 discriminator 3 view .LVU155
 543 0020 F8E7     		b	.L22
 544              	.L25:
 475:Src/main.c    **** 		serial[i] = (unsigned char) data[i];
 545              		.loc 1 475 32 discriminator 3 view .LVU156
 546              	.LBE4:
 477:Src/main.c    **** 	}
 478:Src/main.c    **** 	
 479:Src/main.c    **** 	HAL_UART_Transmit(&huart1, serial, len, 1000);
 547              		.loc 1 479 2 is_stmt 1 view .LVU157
 548 0022 4FF47A73 		mov	r3, #1000
 549              	.LVL19:
 550              		.loc 1 479 2 is_stmt 0 view .LVU158
 551 0026 0248     		ldr	r0, .L26
 552              	.LVL20:
 553              		.loc 1 479 2 view .LVU159
 554 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 555              	.LVL21:
 480:Src/main.c    **** }	
 556              		.loc 1 480 1 view .LVU160
 557 002c BD46     		mov	sp, r7
 558              	.LCFI14:
 559              		.cfi_def_cfa_register 13
 560              	.LVL22:
ARM GAS  /tmp/cchr5x9g.s 			page 21


 561              		.loc 1 480 1 view .LVU161
 562              		@ sp needed
 563 002e 98BD     		pop	{r3, r4, r7, pc}
 564              	.L27:
 565              		.align	2
 566              	.L26:
 567 0030 00000000 		.word	huart1
 568              		.cfi_endproc
 569              	.LFE74:
 571              		.section	.text.main,"ax",%progbits
 572              		.align	1
 573              		.global	main
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 577              		.fpu softvfp
 579              	main:
 580              	.LFB66:
 102:Src/main.c    ****   /* USER CODE BEGIN 1 */
 581              		.loc 1 102 1 is_stmt 1 view -0
 582              		.cfi_startproc
 583              		@ Volatile: function does not return.
 584              		@ args = 0, pretend = 0, frame = 56
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586 0000 00B5     		push	{lr}
 587              	.LCFI15:
 588              		.cfi_def_cfa_offset 4
 589              		.cfi_offset 14, -4
 590 0002 93B0     		sub	sp, sp, #76
 591              	.LCFI16:
 592              		.cfi_def_cfa_offset 80
 110:Src/main.c    **** 
 593              		.loc 1 110 3 view .LVU163
 594 0004 FFF7FEFF 		bl	HAL_Init
 595              	.LVL23:
 117:Src/main.c    **** 
 596              		.loc 1 117 3 view .LVU164
 597 0008 FFF7FEFF 		bl	SystemClock_Config
 598              	.LVL24:
 124:Src/main.c    ****   //MX_SPI1_Init();
 599              		.loc 1 124 3 view .LVU165
 600 000c FFF7FEFF 		bl	MX_GPIO_Init
 601              	.LVL25:
 126:Src/main.c    ****   MX_CAN_Init();
 602              		.loc 1 126 3 view .LVU166
 603 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 604              	.LVL26:
 127:Src/main.c    ****   MX_TIM2_Init();
 605              		.loc 1 127 3 view .LVU167
 606 0014 FFF7FEFF 		bl	MX_CAN_Init
 607              	.LVL27:
 128:Src/main.c    **** 
 608              		.loc 1 128 3 view .LVU168
 609 0018 FFF7FEFF 		bl	MX_TIM2_Init
 610              	.LVL28:
 131:Src/main.c    ****   /* USER CODE BEGIN 2 */
 611              		.loc 1 131 3 view .LVU169
ARM GAS  /tmp/cchr5x9g.s 			page 22


 612 001c FFF7FEFF 		bl	MX_NVIC_Init
 613              	.LVL29:
 134:Src/main.c    ****   initPECTable();
 614              		.loc 1 134 3 view .LVU170
 615 0020 FFF7FEFF 		bl	SPI_Init
 616              	.LVL30:
 135:Src/main.c    ****   loadConfig(&BMSconfig); // loads configuration settings from config.c
 617              		.loc 1 135 3 view .LVU171
 618 0024 FFF7FEFF 		bl	initPECTable
 619              	.LVL31:
 136:Src/main.c    ****   writeConfig(BMSconfig, 1); // number specifies how many ICs are connected
 620              		.loc 1 136 3 view .LVU172
 621 0028 3A4C     		ldr	r4, .L32
 622 002a 2046     		mov	r0, r4
 623 002c FFF7FEFF 		bl	loadConfig
 624              	.LVL32:
 137:Src/main.c    ****   // !! this assumes that the addresses for each IC count up from 1 !! //
 625              		.loc 1 137 3 view .LVU173
 626 0030 0123     		movs	r3, #1
 627 0032 0393     		str	r3, [sp, #12]
 628 0034 6B46     		mov	r3, sp
 629 0036 2246     		mov	r2, r4
 630 0038 52F8100F 		ldr	r0, [r2, #16]!	@ unaligned
 631 003c 5168     		ldr	r1, [r2, #4]	@ unaligned
 632 003e 9268     		ldr	r2, [r2, #8]	@ unaligned
 633 0040 07C3     		stmia	r3!, {r0, r1, r2}
 634 0042 2068     		ldr	r0, [r4]	@ unaligned
 635 0044 6168     		ldr	r1, [r4, #4]	@ unaligned
 636 0046 A268     		ldr	r2, [r4, #8]	@ unaligned
 637 0048 E368     		ldr	r3, [r4, #12]	@ unaligned
 638 004a FFF7FEFF 		bl	writeConfig
 639              	.LVL33:
 140:Src/main.c    ****   uint16_t temp[4];
 640              		.loc 1 140 3 view .LVU174
 141:Src/main.c    ****   bool connection[12];
 641              		.loc 1 141 3 view .LVU175
 142:Src/main.c    ****   uint8_t rdcfg[6];
 642              		.loc 1 142 3 view .LVU176
 143:Src/main.c    ****   uint8_t printbuffer[16];
 643              		.loc 1 143 3 view .LVU177
 144:Src/main.c    ****   bool discharging[12] = {false, false, false, false, false, false, false, false, false, false, fal
 644              		.loc 1 144 3 view .LVU178
 145:Src/main.c    ****   /* USER CODE END 2 */
 645              		.loc 1 145 3 view .LVU179
 145:Src/main.c    ****   /* USER CODE END 2 */
 646              		.loc 1 145 8 is_stmt 0 view .LVU180
 647 004e 0023     		movs	r3, #0
 648 0050 0593     		str	r3, [sp, #20]
 649 0052 0693     		str	r3, [sp, #24]
 650 0054 0793     		str	r3, [sp, #28]
 651 0056 51E0     		b	.L30
 652              	.L29:
 162:Src/main.c    **** 	
 653              		.loc 1 162 2 is_stmt 1 view .LVU181
 654 0058 2E4C     		ldr	r4, .L32
 655 005a 0125     		movs	r5, #1
 656 005c 0395     		str	r5, [sp, #12]
ARM GAS  /tmp/cchr5x9g.s 			page 23


 657 005e 6B46     		mov	r3, sp
 658 0060 2246     		mov	r2, r4
 659 0062 52F8100F 		ldr	r0, [r2, #16]!	@ unaligned
 660 0066 5168     		ldr	r1, [r2, #4]	@ unaligned
 661 0068 9268     		ldr	r2, [r2, #8]	@ unaligned
 662 006a 07C3     		stmia	r3!, {r0, r1, r2}
 663 006c 2068     		ldr	r0, [r4]	@ unaligned
 664 006e 6168     		ldr	r1, [r4, #4]	@ unaligned
 665 0070 A268     		ldr	r2, [r4, #8]	@ unaligned
 666 0072 E368     		ldr	r3, [r4, #12]	@ unaligned
 667 0074 FFF7FEFF 		bl	writeConfig
 668              	.LVL34:
 164:Src/main.c    **** 	
 669              		.loc 1 164 2 view .LVU182
 670 0078 0CA9     		add	r1, sp, #48
 671 007a 0020     		movs	r0, #0
 672 007c FFF7FEFF 		bl	readConfig
 673              	.LVL35:
 166:Src/main.c    **** 	printbuffer[1] = rdcfg[1];
 674              		.loc 1 166 2 view .LVU183
 166:Src/main.c    **** 	printbuffer[1] = rdcfg[1];
 675              		.loc 1 166 24 is_stmt 0 view .LVU184
 676 0080 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 166:Src/main.c    **** 	printbuffer[1] = rdcfg[1];
 677              		.loc 1 166 17 view .LVU185
 678 0084 8DF82030 		strb	r3, [sp, #32]
 167:Src/main.c    **** 	printbuffer[2] = rdcfg[2];
 679              		.loc 1 167 2 is_stmt 1 view .LVU186
 167:Src/main.c    **** 	printbuffer[2] = rdcfg[2];
 680              		.loc 1 167 24 is_stmt 0 view .LVU187
 681 0088 9DF83130 		ldrb	r3, [sp, #49]	@ zero_extendqisi2
 167:Src/main.c    **** 	printbuffer[2] = rdcfg[2];
 682              		.loc 1 167 17 view .LVU188
 683 008c 8DF82130 		strb	r3, [sp, #33]
 168:Src/main.c    **** 	printbuffer[3] = rdcfg[3];
 684              		.loc 1 168 2 is_stmt 1 view .LVU189
 168:Src/main.c    **** 	printbuffer[3] = rdcfg[3];
 685              		.loc 1 168 24 is_stmt 0 view .LVU190
 686 0090 9DF83230 		ldrb	r3, [sp, #50]	@ zero_extendqisi2
 168:Src/main.c    **** 	printbuffer[3] = rdcfg[3];
 687              		.loc 1 168 17 view .LVU191
 688 0094 8DF82230 		strb	r3, [sp, #34]
 169:Src/main.c    **** 	printbuffer[4] = rdcfg[4];
 689              		.loc 1 169 2 is_stmt 1 view .LVU192
 169:Src/main.c    **** 	printbuffer[4] = rdcfg[4];
 690              		.loc 1 169 24 is_stmt 0 view .LVU193
 691 0098 9DF83330 		ldrb	r3, [sp, #51]	@ zero_extendqisi2
 169:Src/main.c    **** 	printbuffer[4] = rdcfg[4];
 692              		.loc 1 169 17 view .LVU194
 693 009c 8DF82330 		strb	r3, [sp, #35]
 170:Src/main.c    **** 	printbuffer[5] = rdcfg[5];
 694              		.loc 1 170 2 is_stmt 1 view .LVU195
 170:Src/main.c    **** 	printbuffer[5] = rdcfg[5];
 695              		.loc 1 170 24 is_stmt 0 view .LVU196
 696 00a0 9DF83430 		ldrb	r3, [sp, #52]	@ zero_extendqisi2
 170:Src/main.c    **** 	printbuffer[5] = rdcfg[5];
 697              		.loc 1 170 17 view .LVU197
ARM GAS  /tmp/cchr5x9g.s 			page 24


 698 00a4 8DF82430 		strb	r3, [sp, #36]
 171:Src/main.c    **** 	
 699              		.loc 1 171 2 is_stmt 1 view .LVU198
 171:Src/main.c    **** 	
 700              		.loc 1 171 24 is_stmt 0 view .LVU199
 701 00a8 9DF83530 		ldrb	r3, [sp, #53]	@ zero_extendqisi2
 171:Src/main.c    **** 	
 702              		.loc 1 171 17 view .LVU200
 703 00ac 8DF82530 		strb	r3, [sp, #37]
 201:Src/main.c    **** 	//SerialPrint(printbuffer, 8);
 704              		.loc 1 201 2 is_stmt 1 view .LVU201
 705 00b0 0621     		movs	r1, #6
 706 00b2 08A8     		add	r0, sp, #32
 707 00b4 FFF7FEFF 		bl	SerialPrint
 708              	.LVL36:
 219:Src/main.c    **** 	discharging[1] = cellsDischarge[0][1];
 709              		.loc 1 219 2 view .LVU202
 219:Src/main.c    **** 	discharging[1] = cellsDischarge[0][1];
 710              		.loc 1 219 36 is_stmt 0 view .LVU203
 711 00b8 174B     		ldr	r3, .L32+4
 712 00ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 219:Src/main.c    **** 	discharging[1] = cellsDischarge[0][1];
 713              		.loc 1 219 17 view .LVU204
 714 00bc 8DF81420 		strb	r2, [sp, #20]
 220:Src/main.c    **** 	discharging[2] = cellsDischarge[0][2];
 715              		.loc 1 220 2 is_stmt 1 view .LVU205
 220:Src/main.c    **** 	discharging[2] = cellsDischarge[0][2];
 716              		.loc 1 220 36 is_stmt 0 view .LVU206
 717 00c0 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 220:Src/main.c    **** 	discharging[2] = cellsDischarge[0][2];
 718              		.loc 1 220 17 view .LVU207
 719 00c2 8DF81520 		strb	r2, [sp, #21]
 221:Src/main.c    **** 	discharging[3] = cellsDischarge[0][3];
 720              		.loc 1 221 2 is_stmt 1 view .LVU208
 221:Src/main.c    **** 	discharging[3] = cellsDischarge[0][3];
 721              		.loc 1 221 36 is_stmt 0 view .LVU209
 722 00c6 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 221:Src/main.c    **** 	discharging[3] = cellsDischarge[0][3];
 723              		.loc 1 221 17 view .LVU210
 724 00c8 8DF81620 		strb	r2, [sp, #22]
 222:Src/main.c    **** 	discharging[6] = cellsDischarge[0][4];
 725              		.loc 1 222 2 is_stmt 1 view .LVU211
 222:Src/main.c    **** 	discharging[6] = cellsDischarge[0][4];
 726              		.loc 1 222 36 is_stmt 0 view .LVU212
 727 00cc DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 222:Src/main.c    **** 	discharging[6] = cellsDischarge[0][4];
 728              		.loc 1 222 17 view .LVU213
 729 00ce 8DF81720 		strb	r2, [sp, #23]
 223:Src/main.c    **** 	discharging[7] = cellsDischarge[0][5];
 730              		.loc 1 223 2 is_stmt 1 view .LVU214
 223:Src/main.c    **** 	discharging[7] = cellsDischarge[0][5];
 731              		.loc 1 223 36 is_stmt 0 view .LVU215
 732 00d2 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 223:Src/main.c    **** 	discharging[7] = cellsDischarge[0][5];
 733              		.loc 1 223 17 view .LVU216
 734 00d4 8DF81A20 		strb	r2, [sp, #26]
 224:Src/main.c    **** 	discharging[8] = cellsDischarge[0][6];
ARM GAS  /tmp/cchr5x9g.s 			page 25


 735              		.loc 1 224 2 is_stmt 1 view .LVU217
 224:Src/main.c    **** 	discharging[8] = cellsDischarge[0][6];
 736              		.loc 1 224 36 is_stmt 0 view .LVU218
 737 00d8 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 224:Src/main.c    **** 	discharging[8] = cellsDischarge[0][6];
 738              		.loc 1 224 17 view .LVU219
 739 00da 8DF81B20 		strb	r2, [sp, #27]
 225:Src/main.c    **** 	discharging[9] = cellsDischarge[0][7];
 740              		.loc 1 225 2 is_stmt 1 view .LVU220
 225:Src/main.c    **** 	discharging[9] = cellsDischarge[0][7];
 741              		.loc 1 225 36 is_stmt 0 view .LVU221
 742 00de 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 225:Src/main.c    **** 	discharging[9] = cellsDischarge[0][7];
 743              		.loc 1 225 17 view .LVU222
 744 00e0 8DF81C20 		strb	r2, [sp, #28]
 226:Src/main.c    **** 
 745              		.loc 1 226 2 is_stmt 1 view .LVU223
 226:Src/main.c    **** 
 746              		.loc 1 226 36 is_stmt 0 view .LVU224
 747 00e4 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 226:Src/main.c    **** 
 748              		.loc 1 226 17 view .LVU225
 749 00e6 8DF81D30 		strb	r3, [sp, #29]
 228:Src/main.c    **** 	/*** End Set which cells to discharge ***/
 750              		.loc 1 228 2 is_stmt 1 view .LVU226
 751 00ea 2A46     		mov	r2, r5
 752 00ec 2146     		mov	r1, r4
 753 00ee 05A8     		add	r0, sp, #20
 754 00f0 FFF7FEFF 		bl	setDischarge
 755              	.LVL37:
 232:Src/main.c    **** 	
 756              		.loc 1 232 2 view .LVU227
 757 00f4 4FF4FA70 		mov	r0, #500
 758 00f8 FFF7FEFF 		bl	HAL_Delay
 759              	.LVL38:
 760              	.L30:
 150:Src/main.c    ****   {
 761              		.loc 1 150 3 view .LVU228
 158:Src/main.c    **** 	
 762              		.loc 1 158 2 view .LVU229
 158:Src/main.c    **** 	
 763              		.loc 1 158 6 is_stmt 0 view .LVU230
 764 00fc 0EA9     		add	r1, sp, #56
 765 00fe 0020     		movs	r0, #0
 766 0100 FFF7FEFF 		bl	readCellVoltage
 767              	.LVL39:
 158:Src/main.c    **** 	
 768              		.loc 1 158 5 view .LVU231
 769 0104 0028     		cmp	r0, #0
 770 0106 A7D0     		beq	.L29
 158:Src/main.c    **** 	
 771              		.loc 1 158 43 is_stmt 1 discriminator 1 view .LVU232
 772 0108 4FF40051 		mov	r1, #8192
 773 010c 0348     		ldr	r0, .L32+8
 774 010e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 775              	.LVL40:
 776 0112 A1E7     		b	.L29
ARM GAS  /tmp/cchr5x9g.s 			page 26


 777              	.L33:
 778              		.align	2
 779              	.L32:
 780 0114 00000000 		.word	BMSconfig
 781 0118 00000000 		.word	cellsDischarge
 782 011c 00100140 		.word	1073811456
 783              		.cfi_endproc
 784              	.LFE66:
 786              		.section	.text.Error_Handler,"ax",%progbits
 787              		.align	1
 788              		.global	Error_Handler
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu softvfp
 794              	Error_Handler:
 795              	.LFB75:
 481:Src/main.c    **** /* USER CODE END 4 */
 482:Src/main.c    **** 
 483:Src/main.c    **** /**
 484:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 485:Src/main.c    ****   * @retval None
 486:Src/main.c    ****   */
 487:Src/main.c    **** void Error_Handler(void)
 488:Src/main.c    **** {
 796              		.loc 1 488 1 view -0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 489:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 490:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 491:Src/main.c    **** 
 492:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 493:Src/main.c    **** }
 801              		.loc 1 493 1 view .LVU234
 802 0000 7047     		bx	lr
 803              		.cfi_endproc
 804              	.LFE75:
 806              		.comm	BMSconfig,28,4
 807              		.comm	CommandCode,2,2
 808              		.comm	huart1,64,4
 809              		.comm	htim2,64,4
 810              		.comm	hspi1,88,4
 811              		.comm	hcan,68,4
 812              		.text
 813              	.Letext0:
 814              		.file 2 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/
 815              		.file 3 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/
 816              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 817              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 818              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 819              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 820              		.file 8 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/
 821              		.file 9 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/
 822              		.file 10 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi
 823              		.file 11 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include
ARM GAS  /tmp/cchr5x9g.s 			page 27


 824              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 825              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 826              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 827              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 828              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 829              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 830              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 831              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 832              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 833              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 834              		.file 22 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include
 835              		.file 23 "Inc/BMSconfig.h"
 836              		.file 24 "/mnt/c/Users/evanc/Documents/IFE/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include
 837              		.file 25 "Inc/LTC6811.h"
 838              		.file 26 "Inc/ChargerFunctions.h"
 839              		.file 27 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 840              		.file 28 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 841              		.file 29 "Inc/SPI.h"
 842              		.file 30 "<built-in>"
ARM GAS  /tmp/cchr5x9g.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cchr5x9g.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cchr5x9g.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cchr5x9g.s:131    .text.MX_GPIO_Init:0000000000000070 $d
     /tmp/cchr5x9g.s:138    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cchr5x9g.s:144    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cchr5x9g.s:193    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/cchr5x9g.s:199    .text.MX_CAN_Init:0000000000000000 $t
     /tmp/cchr5x9g.s:205    .text.MX_CAN_Init:0000000000000000 MX_CAN_Init
     /tmp/cchr5x9g.s:268    .text.MX_CAN_Init:0000000000000034 $d
                            *COM*:0000000000000044 hcan
     /tmp/cchr5x9g.s:274    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/cchr5x9g.s:280    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/cchr5x9g.s:363    .text.MX_TIM2_Init:000000000000004c $d
                            *COM*:0000000000000040 htim2
     /tmp/cchr5x9g.s:368    .text.MX_NVIC_Init:0000000000000000 $t
     /tmp/cchr5x9g.s:374    .text.MX_NVIC_Init:0000000000000000 MX_NVIC_Init
     /tmp/cchr5x9g.s:401    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cchr5x9g.s:408    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cchr5x9g.s:487    .text.SerialPrint:0000000000000000 $t
     /tmp/cchr5x9g.s:494    .text.SerialPrint:0000000000000000 SerialPrint
     /tmp/cchr5x9g.s:567    .text.SerialPrint:0000000000000030 $d
     /tmp/cchr5x9g.s:572    .text.main:0000000000000000 $t
     /tmp/cchr5x9g.s:579    .text.main:0000000000000000 main
     /tmp/cchr5x9g.s:780    .text.main:0000000000000114 $d
                            *COM*:000000000000001c BMSconfig
     /tmp/cchr5x9g.s:787    .text.Error_Handler:0000000000000000 $t
     /tmp/cchr5x9g.s:794    .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000002 CommandCode
                            *COM*:0000000000000058 hspi1

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_CAN_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_UART_Transmit
HAL_Init
SPI_Init
initPECTable
loadConfig
writeConfig
readConfig
setDischarge
HAL_Delay
readCellVoltage
HAL_GPIO_TogglePin
ARM GAS  /tmp/cchr5x9g.s 			page 29


cellsDischarge
