ARM GAS  /tmp/ccbYAz4J.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB79:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccbYAz4J.s 			page 2


  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** 
  40:Src/main.c    **** 
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END Header */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  45:Src/main.c    **** #include "main.h"
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** #include "stdlib.h"
  50:Src/main.c    **** 
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END Includes */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  55:Src/main.c    **** /* USER CODE BEGIN PTD */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PTD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN PD */
  61:Src/main.c    **** 
  62:Src/main.c    **** 
  63:Src/main.c    **** 
  64:Src/main.c    **** #define APPS_STDID        0x300
  65:Src/main.c    **** #define BTSF_STDID        0x301
  66:Src/main.c    **** #define FAULTS            0x0D0
  67:Src/main.c    **** // FAULT DEFS
  68:Src/main.c    ****   #define FAULT_ACTIVE    0xFF
  69:Src/main.c    ****   #define FAULT_INACTIVE  0x00
  70:Src/main.c    **** 
  71:Src/main.c    **** //FAULT DEGS
  72:Src/main.c    **** #define CAR_STATE         0x0D1
  73:Src/main.c    **** // CAR STATES
  74:Src/main.c    ****   #define LV_ON           0x01
  75:Src/main.c    ****   #define PRECHARGED      0x02
  76:Src/main.c    ****   #define ENABLE_FLIPPED  0x04
  77:Src/main.c    ****   #define RTDS_SOUND      0x08
  78:Src/main.c    ****   #define PWR_AVAILABLE   0x10 
  79:Src/main.c    ****   #define SOFT_FAULT      0x20
  80:Src/main.c    **** // CAR STATES
  81:Src/main.c    **** // 1 volt is 1241.21
  82:Src/main.c    **** //throttle A .66-3.2 scaled to .396-1.866
  83:Src/main.c    **** //throttle B .33-2.7 scaled to .198-1.62
  84:Src/main.c    **** // That means 5% from 0 is .4705 volts
  85:Src/main.c    **** const uint16_t ThrottleA_5 = 584;
  86:Src/main.c    **** // That means 25% from 0 is .7635 volts
  87:Src/main.c    **** const uint16_t ThrottleA_25 = 947;
  88:Src/main.c    **** const uint16_t brakeThreshold = 2000; //80; >> 3.5 volts on 5 v scale, 2.1 on 3.3v scale
  89:Src/main.c    **** const uint16_t RTD_Threshold = 2500; // NO idea for this
  90:Src/main.c    **** 
ARM GAS  /tmp/ccbYAz4J.s 			page 3


  91:Src/main.c    **** // APPS is .35 volts, so .21 volts scaled
  92:Src/main.c    **** //This values is 0-100 based
  93:Src/main.c    **** const int APPS_difference = 600; //~0.5 voltz
  94:Src/main.c    **** 
  95:Src/main.c    **** //These are based off above values measured
  96:Src/main.c    **** const int throttle_A_min = 491;
  97:Src/main.c    **** const int throttle_A_max = 2316;
  98:Src/main.c    **** const int throttle_B_min = 246;
  99:Src/main.c    **** const int throttle_B_max = 2010;
 100:Src/main.c    **** 
 101:Src/main.c    **** 
 102:Src/main.c    **** 
 103:Src/main.c    **** /* USER CODE END PD */
 104:Src/main.c    **** 
 105:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
 106:Src/main.c    **** /* USER CODE BEGIN PM */
 107:Src/main.c    **** 
 108:Src/main.c    **** /* USER CODE END PM */
 109:Src/main.c    **** 
 110:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
 111:Src/main.c    **** ADC_HandleTypeDef hadc1;
 112:Src/main.c    **** 
 113:Src/main.c    **** CAN_HandleTypeDef hcan;
 114:Src/main.c    **** 
 115:Src/main.c    **** SPI_HandleTypeDef hspi1;
 116:Src/main.c    **** 
 117:Src/main.c    **** /* USER CODE BEGIN PV */
 118:Src/main.c    **** 
 119:Src/main.c    **** uint16_t brakePos;
 120:Src/main.c    **** uint16_t steeringPos;
 121:Src/main.c    **** uint16_t brakePressure_1;
 122:Src/main.c    **** uint16_t brakePressure_2;
 123:Src/main.c    **** uint16_t throttle_A;
 124:Src/main.c    **** uint16_t throttle_B;
 125:Src/main.c    **** 
 126:Src/main.c    **** 
 127:Src/main.c    **** //need to figure out:
 128:Src/main.c    **** uint16_t max_throttle = 10;
 129:Src/main.c    **** 
 130:Src/main.c    **** 
 131:Src/main.c    **** //STATE FLAGS
 132:Src/main.c    **** char Prev_State = 0x00;     //boolean
 133:Src/main.c    **** int hardFaultFlag = 0;  //boolean
 134:Src/main.c    **** char BTSF_ACTIVE = 0x00;
 135:Src/main.c    **** 
 136:Src/main.c    **** // CAR STAT STATES FOR CAN
 137:Src/main.c    **** CAN_TxHeaderTypeDef TxCar_state;
 138:Src/main.c    **** uint8_t TxCar_state_data[8] = {0x00,0x45,0x45,0x86,0x56,0x97,0x67,0x98};
 139:Src/main.c    **** uint32_t TxCar_stateMailbox;
 140:Src/main.c    **** 
 141:Src/main.c    **** //CAN FAULT VARIABLES
 142:Src/main.c    **** CAN_TxHeaderTypeDef TxFaults;
 143:Src/main.c    **** uint8_t TxFault_data[8] = {0x55, 0x55, 0x55, 0x55,0x55, 0x55, 0x55, 0x55};
 144:Src/main.c    **** /*Set these values: 0xFF = Fault present
 145:Src/main.c    ****                     0x00 = No fault*/
 146:Src/main.c    **** uint8_t bms;        //TxData[0]
 147:Src/main.c    **** uint8_t imd;        //TxData[1]
ARM GAS  /tmp/ccbYAz4J.s 			page 4


 148:Src/main.c    **** uint8_t bspd;       //TxData[2]
 149:Src/main.c    **** uint8_t apps;       //TxData[3]
 150:Src/main.c    **** uint32_t TxFaultsMailbox;
 151:Src/main.c    **** 
 152:Src/main.c    **** //For Timers
 153:Src/main.c    **** extern uint32_t millisTimer;
 154:Src/main.c    **** extern uint32_t RTDS_Timer;
 155:Src/main.c    **** extern uint32_t CAN_Timer;
 156:Src/main.c    **** 
 157:Src/main.c    **** ADC_ChannelConfTypeDef sConfig = {0};
 158:Src/main.c    **** /* USER CODE END PV */
 159:Src/main.c    **** 
 160:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 161:Src/main.c    **** void SystemClock_Config(void);
 162:Src/main.c    **** static void MX_GPIO_Init(void);
 163:Src/main.c    **** static void MX_SPI1_Init(void);
 164:Src/main.c    **** static void MX_ADC1_Init(void);
 165:Src/main.c    **** static void MX_CAN_Init(void);
 166:Src/main.c    **** /* USER CODE BEGIN PFP */
 167:Src/main.c    **** 
 168:Src/main.c    **** char checkBTSF();
 169:Src/main.c    **** char checkAPPS();
 170:Src/main.c    **** char APPS_Diff();
 171:Src/main.c    **** void sendFaultMsg();
 172:Src/main.c    **** void sendCar_state();
 173:Src/main.c    **** void readFaults();
 174:Src/main.c    **** void car_state_machine(char STATE);
 175:Src/main.c    **** uint16_t updateADC(int channel); 
 176:Src/main.c    **** /* USER CODE END PFP */
 177:Src/main.c    **** 
 178:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 179:Src/main.c    **** /* USER CODE BEGIN 0 */
 180:Src/main.c    **** 
 181:Src/main.c    **** //int refTime = millis();
 182:Src/main.c    **** //int APPSFlag = 0; //boolean
 183:Src/main.c    **** 
 184:Src/main.c    **** /**
 185:Src/main.c    ****   * @brief  The application entry point.
 186:Src/main.c    ****   * @retval int
 187:Src/main.c    ****   */
 188:Src/main.c    **** int main(void)
 189:Src/main.c    **** {
 190:Src/main.c    ****   /* USER CODE BEGIN 1 */
 191:Src/main.c    ****   //HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 192:Src/main.c    ****   //HAL_Delay(200);
 193:Src/main.c    **** 
 194:Src/main.c    **** 
 195:Src/main.c    ****   //For Timers
 196:Src/main.c    ****   millisTimer = 100; //100 millis
 197:Src/main.c    ****   RTDS_Timer = 2500; //3 seconds
 198:Src/main.c    ****   CAN_Timer = 1000; //timer to send message every second
 199:Src/main.c    **** 
 200:Src/main.c    ****   /* USER CODE END 1 */
 201:Src/main.c    **** 
 202:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 203:Src/main.c    **** 
 204:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  /tmp/ccbYAz4J.s 			page 5


 205:Src/main.c    ****   HAL_Init();
 206:Src/main.c    **** 
 207:Src/main.c    ****   /* USER CODE BEGIN Init */
 208:Src/main.c    **** 
 209:Src/main.c    ****   // Update SystemCoreClock value
 210:Src/main.c    ****   SystemCoreClockUpdate();
 211:Src/main.c    ****   // Configure the SysTick timer to overflow every 1 ms
 212:Src/main.c    ****   SysTick_Config(SystemCoreClock / 1000);
 213:Src/main.c    **** 
 214:Src/main.c    ****   /* USER CODE END Init */
 215:Src/main.c    **** 
 216:Src/main.c    ****   /* Configure the system clock */
 217:Src/main.c    ****   SystemClock_Config();
 218:Src/main.c    **** 
 219:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 220:Src/main.c    **** 
 221:Src/main.c    ****   /* USER CODE END SysInit */
 222:Src/main.c    **** 
 223:Src/main.c    ****   /* Initialize all configured peripherals */
 224:Src/main.c    ****   MX_GPIO_Init();
 225:Src/main.c    ****   MX_SPI1_Init();
 226:Src/main.c    ****   MX_ADC1_Init();
 227:Src/main.c    ****   MX_CAN_Init();
 228:Src/main.c    ****   /* USER CODE BEGIN 2 */
 229:Src/main.c    **** 
 230:Src/main.c    **** 
 231:Src/main.c    ****   /* USER CODE END 2 */
 232:Src/main.c    **** 
 233:Src/main.c    ****   /* Infinite loop */
 234:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 235:Src/main.c    **** 
 236:Src/main.c    ****    while (1)
 237:Src/main.c    ****    {
 238:Src/main.c    ****      //READ FOR PRECHARGE
 239:Src/main.c    ****    if(HAL_GPIO_ReadPin(GPIOB, PRECHARGE_COMPLETE_Pin) == GPIO_PIN_RESET){
 240:Src/main.c    ****      car_state_machine(PRECHARGED);
 241:Src/main.c    ****      //READ FOR ENABLE
 242:Src/main.c    ****     if(HAL_GPIO_ReadPin(GPIOB,ENABLE_IN_Pin) == GPIO_PIN_RESET){
 243:Src/main.c    ****        car_state_machine(ENABLE_FLIPPED);
 244:Src/main.c    ****        //ADC for Brake pressure
 245:Src/main.c    ****        brakePressure_2 = updateADC(BRAKE_PRESSURE_2_ADC_CHANNEL);
 246:Src/main.c    ****        //SEE IF BRAKE IS PRESSED 
 247:Src/main.c    ****        if(brakePressure_2 >= RTD_Threshold){
 248:Src/main.c    ****        //set 3 second timer
 249:Src/main.c    ****         if(TxCar_state_data[0] == ENABLE_FLIPPED) {
 250:Src/main.c    ****          RTDS_Timer = 2500; //change to 3000 for 3 seconds
 251:Src/main.c    ****          car_state_machine(RTDS_SOUND);
 252:Src/main.c    ****           
 253:Src/main.c    ****          HAL_GPIO_WritePin(GPIOB, RTD_EN_Pin | RTDS_EN_Pin | BTSF_EN_Pin | APPS_EN_Pin, GPIO_PIN_SE
 254:Src/main.c    ****          } 
 255:Src/main.c    ****        //RTD Sound Enable Play sound for 2.5 seconds 
 256:Src/main.c    ****        }
 257:Src/main.c    ****       
 258:Src/main.c    ****        // IF OUR TIMER IS OVER FINALLY //we also stop timer if we started it from RTDS state or Sof
 259:Src/main.c    ****          if((RTDS_Timer == 0) && (TxCar_state_data[0] & 0x38)){
 260:Src/main.c    ****            HAL_GPIO_WritePin(GPIOB, RTDS_EN_Pin, GPIO_PIN_RESET);
 261:Src/main.c    ****            //SeT pwr
ARM GAS  /tmp/ccbYAz4J.s 			page 6


 262:Src/main.c    ****            car_state_machine(PWR_AVAILABLE);
 263:Src/main.c    ****             }// rtds buzzer stop
 264:Src/main.c    ****      }//END OF RTD SEQUENCE*/
 265:Src/main.c    ****      else if(HAL_GPIO_ReadPin(GPIOB,ENABLE_IN_Pin) == GPIO_PIN_SET)
 266:Src/main.c    ****      { //IF WE HAVE DE ENABLED LA COCHE
 267:Src/main.c    ****        TxCar_state_data[0] = PRECHARGED;
 268:Src/main.c    ****        HAL_GPIO_WritePin(GPIOB, RTD_EN_Pin,GPIO_PIN_RESET);
 269:Src/main.c    ****        HAL_Delay(500);//THIS IS PUT HERE TO AVOID BOUNCING WHEN ITS REMOVED
 270:Src/main.c    ****      }
 271:Src/main.c    ****    } // end of if precharge complete statement
 272:Src/main.c    ****       if(RTDS_Timer == 0)
 273:Src/main.c    ****        HAL_GPIO_WritePin(GPIOB, RTDS_EN_Pin, GPIO_PIN_RESET);
 274:Src/main.c    ****   
 275:Src/main.c    ****      // SEQUENCE FOR CHECKING SOFT FAULTS
 276:Src/main.c    ****      if(TxCar_state_data[0] >= RTDS_SOUND){
 277:Src/main.c    ****      if (checkBTSF()){
 278:Src/main.c    ****        HAL_GPIO_WritePin(GPIOB,BTSF_EN_Pin | APPS_EN_Pin,GPIO_PIN_RESET);
 279:Src/main.c    ****        TxCar_state_data[0] = SOFT_FAULT;
 280:Src/main.c    ****      }
 281:Src/main.c    ****      else if(TxCar_state_data[0] == SOFT_FAULT) {
 282:Src/main.c    ****          TxCar_state_data[0] = PWR_AVAILABLE;
 283:Src/main.c    ****          HAL_GPIO_WritePin(GPIOB, BTSF_EN_Pin|APPS_EN_Pin ,GPIO_PIN_SET);
 284:Src/main.c    ****      }
 285:Src/main.c    ****    }
 286:Src/main.c    **** 
 287:Src/main.c    ****    readFaults(); 
 288:Src/main.c    ****    if (CAN_Timer == 0){ //sending routine message every 1 second
 289:Src/main.c    ****      sendFaultMsg();
 290:Src/main.c    ****      sendCar_state();
 291:Src/main.c    ****      CAN_Timer = 1000;
 292:Src/main.c    ****      //HAL_GPIO_WritePin(BRAKE_LIGHT_EN_GPIO_Port, BRAKE_LIGHT_EN_Pin, GPIO_PIN_SET);
 293:Src/main.c    **** 
 294:Src/main.c    ****    }
 295:Src/main.c    **** 
 296:Src/main.c    ****    //Brake Light
 297:Src/main.c    ****    brakePressure_2 = updateADC(BRAKE_PRESSURE_2_ADC_CHANNEL);
 298:Src/main.c    ****    if(brakePressure_2 > brakeThreshold){
 299:Src/main.c    ****      HAL_GPIO_WritePin(GPIOB, BRAKE_LIGHT_EN_Pin, GPIO_PIN_SET);
 300:Src/main.c    ****    }
 301:Src/main.c    ****    else
 302:Src/main.c    ****      HAL_GPIO_WritePin(GPIOB, BRAKE_LIGHT_EN_Pin, GPIO_PIN_RESET);
 303:Src/main.c    **** 
 304:Src/main.c    **** 
 305:Src/main.c    ****      /* USER CODE END WHILE */
 306:Src/main.c    **** 
 307:Src/main.c    ****     /* USER CODE BEGIN 3 */
 308:Src/main.c    ****    }
 309:Src/main.c    ****   /* USER CODE END 3 */
 310:Src/main.c    **** 
 311:Src/main.c    ****   //TEST WHILE
 312:Src/main.c    ****  /* while(1){
 313:Src/main.c    **** 
 314:Src/main.c    ****     HAL_GPIO_WritePin(BRAKE_LIGHT_EN_GPIO_Port, BRAKE_LIGHT_EN_Pin, GPIO_PIN_SET);
 315:Src/main.c    ****     HAL_Delay(500);
 316:Src/main.c    ****   }
 317:Src/main.c    ****   */
 318:Src/main.c    **** 
ARM GAS  /tmp/ccbYAz4J.s 			page 7


 319:Src/main.c    ****   
 320:Src/main.c    **** }
 321:Src/main.c    **** 
 322:Src/main.c    **** /********************************************************************************/
 323:Src/main.c    **** //Checks for APPS errors, sends fault if there is one 
 324:Src/main.c    **** //Returns one if difference in throttleA/B is greater than 10% for 100 ms
 325:Src/main.c    **** //Returns zero if else
 326:Src/main.c    **** /********************************************************************************/
 327:Src/main.c    **** char checkAPPS(){
 328:Src/main.c    **** 
 329:Src/main.c    ****   throttle_A = updateADC(THROTTLE_A_ADC_CHANNEL); 
 330:Src/main.c    ****   throttle_B = updateADC(THROTTLE_B_ADC_CHANNEL); 
 331:Src/main.c    **** 
 332:Src/main.c    **** /*
 333:Src/main.c    ****   if(throttle_A > throttle_B){
 334:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 335:Src/main.c    ****     HAL_Delay(100);
 336:Src/main.c    ****   }
 337:Src/main.c    ****   else
 338:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 339:Src/main.c    ****   return 1;*/
 340:Src/main.c    ****   
 341:Src/main.c    ****   //Throttles Agree
 342:Src/main.c    ****   if(APPS_Diff() == 0){
 343:Src/main.c    ****    millisTimer = 100;
 344:Src/main.c    ****    //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 345:Src/main.c    ****   }
 346:Src/main.c    ****   
 347:Src/main.c    ****   //APPS_EN Fault
 348:Src/main.c    ****   if(millisTimer == 0){ //this occurs when APPS_diff is true for > 100 ms
 349:Src/main.c    ****     //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 350:Src/main.c    ****     return 1; //will set driving = 0;
 351:Src/main.c    ****   }
 352:Src/main.c    ****   return 0; //APPS is good
 353:Src/main.c    **** 
 354:Src/main.c    **** }
 355:Src/main.c    **** 
 356:Src/main.c    **** /********************************************************************************/
 357:Src/main.c    **** //Checks for BTSF errors, If the brake and throttle are pressed at the same time, above a certain t
 358:Src/main.c    **** //Returns one if fault was sensed and sent out
 359:Src/main.c    **** //zero if nothing is detected
 360:Src/main.c    **** /********************************************************************************/
 361:Src/main.c    **** char checkBTSF(){
 362:Src/main.c    ****   brakePressure_2 = updateADC(BRAKE_PRESSURE_2_ADC_CHANNEL);
 363:Src/main.c    ****   throttle_A = updateADC(THROTTLE_A_ADC_CHANNEL); 
 364:Src/main.c    ****   
 365:Src/main.c    ****   if(BTSF_ACTIVE)
 366:Src/main.c    ****   {
 367:Src/main.c    ****     if(throttle_A <= ThrottleA_5)
 368:Src/main.c    ****     {
 369:Src/main.c    ****       BTSF_ACTIVE = 0x00;
 370:Src/main.c    ****       //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 371:Src/main.c    ****       return 0;
 372:Src/main.c    ****     }
 373:Src/main.c    ****     return 1;
 374:Src/main.c    ****   }
 375:Src/main.c    **** 
ARM GAS  /tmp/ccbYAz4J.s 			page 8


 376:Src/main.c    ****   if((brakePressure_2 > brakeThreshold) && (throttle_A > ThrottleA_25)){
 377:Src/main.c    ****        //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 378:Src/main.c    ****        BTSF_ACTIVE = 0xFF;
 379:Src/main.c    ****        return 1;
 380:Src/main.c    ****   }
 381:Src/main.c    ****   
 382:Src/main.c    ****   
 383:Src/main.c    ****   return 0;
 384:Src/main.c    **** }
 385:Src/main.c    **** 
 386:Src/main.c    **** /********************************************************************************/
 387:Src/main.c    **** // This function updates the ADC values for all positions/pressures
 388:Src/main.c    **** //
 389:Src/main.c    **** //
 390:Src/main.c    **** /********************************************************************************/
 391:Src/main.c    **** uint16_t updateADC(int channel){  
 392:Src/main.c    ****   //HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 393:Src/main.c    ****   if (channel == BRAKE_POS_ADC_CHANNEL) //Brake position 
 394:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_0;
 395:Src/main.c    ****   if (channel == STEERING_POS_ADC_CHANNEL) //steering position 
 396:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_1;
 397:Src/main.c    ****   if (channel == BRAKE_PRESSURE_1_ADC_CHANNEL) //brake pressure 1
 398:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_3;
 399:Src/main.c    ****   if (channel == BRAKE_PRESSURE_2_ADC_CHANNEL) //brake pressure 2
 400:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_2;
 401:Src/main.c    ****   if (channel == THROTTLE_A_ADC_CHANNEL) //throttle A
 402:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_8;
 403:Src/main.c    ****   if (channel == THROTTLE_B_ADC_CHANNEL) //throttle B 
 404:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_9;
 405:Src/main.c    **** 
 406:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 407:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_7CYCLES_5;
 408:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 409:Src/main.c    **** 
 410:Src/main.c    ****   HAL_ADC_Start(&hadc1);
 411:Src/main.c    ****   HAL_ADC_PollForConversion(&hadc1, 1000);
 412:Src/main.c    ****   return HAL_ADC_GetValue(&hadc1);
 413:Src/main.c    ****   //HAL_ADC_Stop(&hadc1);
 414:Src/main.c    ****   //////////////////////////////////////////////////////////////
 415:Src/main.c    ****   /*
 416:Src/main.c    ****   HAL_ADC_Start(&hadc1);
 417:Src/main.c    ****   
 418:Src/main.c    ****   HAL_ADC_PollForConversion(&hadc1, 1000);
 419:Src/main.c    ****   brakePos = HAL_ADC_GetValue(&hadc1);  //brakePos
 420:Src/main.c    ****   HAL_ADC_PollForConversion(&hadc1, 1000);
 421:Src/main.c    ****   steeringPos = HAL_ADC_GetValue(&hadc1);  //steeringPos
 422:Src/main.c    ****   HAL_ADC_PollForConversion(&hadc1, 1000);
 423:Src/main.c    ****   brakePressure_1 = HAL_ADC_GetValue(&hadc1);  //brakePressure_1
 424:Src/main.c    ****   HAL_ADC_PollForConversion(&hadc1, 1000);
 425:Src/main.c    ****   brakePressure_2 = HAL_ADC_GetValue(&hadc1);  //brakePressure_2
 426:Src/main.c    ****   HAL_ADC_PollForConversion(&hadc1, 1000);
 427:Src/main.c    ****   throttle_A = HAL_ADC_GetValue(&hadc1);  //throttle_A
 428:Src/main.c    ****   HAL_ADC_PollForConversion(&hadc1, 1000);
 429:Src/main.c    ****   throttle_B = HAL_ADC_GetValue(&hadc1);  //throttle_B
 430:Src/main.c    ****   
 431:Src/main.c    ****   HAL_ADC_Stop(&hadc1);
 432:Src/main.c    ****   */
ARM GAS  /tmp/ccbYAz4J.s 			page 9


 433:Src/main.c    **** }
 434:Src/main.c    **** 
 435:Src/main.c    **** /********************************************************************************/
 436:Src/main.c    **** //Determines if the throttle percent difference is above 10%
 437:Src/main.c    **** //Returns: 1 if difference > 10%
 438:Src/main.c    **** //       0 if everything is good 
 439:Src/main.c    **** //
 440:Src/main.c    **** //Throttle_A will get values 491 to 2316 (throttle_A_min to max)
 441:Src/main.c    **** //Throttle_B will get values 246 to 2010 (throttle_B_min to max)
 442:Src/main.c    **** /********************************************************************************/
 443:Src/main.c    **** char APPS_Diff(){
 444:Src/main.c    **** 
 445:Src/main.c    **** //0.66 3.11
 446:Src/main.c    **** //0.32 2.77
 447:Src/main.c    ****  // int t_A = (int)throttle_A;
 448:Src/main.c    ****   //int t_B = (int)throttle_B;
 449:Src/main.c    **** 
 450:Src/main.c    ****   if(abs(throttle_A - throttle_B) > APPS_difference){ //600 ~ 0.5v
 451:Src/main.c    ****     return 1;
 452:Src/main.c    ****   }
 453:Src/main.c    ****   else return 0;
 454:Src/main.c    **** 
 455:Src/main.c    ****   /*
 456:Src/main.c    **** 
 457:Src/main.c    ****   t_A = (t_A - throttle_A_min)/(throttle_A_max - throttle_A_min); //Normalize both values to be 0-1
 458:Src/main.c    ****   t_B = (t_B - throttle_B_min)/(throttle_B_max - throttle_B_min);
 459:Src/main.c    **** 
 460:Src/main.c    ****   if(abs(t_A-t_B) > APPS_difference)
 461:Src/main.c    ****     return 1;
 462:Src/main.c    ****   else
 463:Src/main.c    ****     return 0;
 464:Src/main.c    **** 
 465:Src/main.c    ****     */
 466:Src/main.c    **** 
 467:Src/main.c    **** 
 468:Src/main.c    **** }
 469:Src/main.c    **** void sendFaultMsg(){
 470:Src/main.c    ****   TxFault_data[0] = bms;  //Set all the data (faults) to their current values
 471:Src/main.c    ****   TxFault_data[1] = imd;
 472:Src/main.c    ****   TxFault_data[2] = bspd;
 473:Src/main.c    ****   TxFault_data[3] = apps;
 474:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxFaults, TxFault_data, &TxFaultsMailbox);
 475:Src/main.c    **** }
 476:Src/main.c    **** 
 477:Src/main.c    **** void sendCar_state(){
 478:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxCar_state,TxCar_state_data, &TxCar_stateMailbox);
 479:Src/main.c    **** }
 480:Src/main.c    **** 
 481:Src/main.c    **** void car_state_machine(char STATE)
 482:Src/main.c    **** {
 483:Src/main.c    ****   if(STATE > TxCar_state_data[0])
 484:Src/main.c    ****   {
 485:Src/main.c    ****     TxCar_state_data[0] = STATE;
 486:Src/main.c    ****   }
 487:Src/main.c    **** }
 488:Src/main.c    **** 
 489:Src/main.c    **** void readFaults(){
ARM GAS  /tmp/ccbYAz4J.s 			page 10


 490:Src/main.c    ****   if (HAL_GPIO_ReadPin(GPIOD, FAULT_BSPD_STATUS_Pin) == GPIO_PIN_SET)
 491:Src/main.c    ****     bspd = FAULT_ACTIVE;
 492:Src/main.c    ****   else bspd = FAULT_INACTIVE;
 493:Src/main.c    ****   
 494:Src/main.c    ****   if (HAL_GPIO_ReadPin(GPIOC, FAULT_IMD_STATUS_Pin) == GPIO_PIN_SET)
 495:Src/main.c    ****     imd = FAULT_ACTIVE;
 496:Src/main.c    ****   else imd = FAULT_INACTIVE;
 497:Src/main.c    ****   
 498:Src/main.c    ****   if (HAL_GPIO_ReadPin(GPIOC, FAULT_BMS_STATUS_Pin) == GPIO_PIN_SET)
 499:Src/main.c    ****     bms = FAULT_ACTIVE;
 500:Src/main.c    ****   else bms = FAULT_INACTIVE;
 501:Src/main.c    **** 
 502:Src/main.c    ****   if(bms || imd){
 503:Src/main.c    ****     TxCar_state_data[0] = LV_ON;
 504:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, RTD_EN_Pin | RTDS_EN_Pin, GPIO_PIN_RESET);
 505:Src/main.c    ****   }
 506:Src/main.c    **** 
 507:Src/main.c    **** }
 508:Src/main.c    **** 
 509:Src/main.c    **** /* USER CODE END 0 */
 510:Src/main.c    **** 
 511:Src/main.c    **** 
 512:Src/main.c    **** 
 513:Src/main.c    **** /**
 514:Src/main.c    ****   * @brief System Clock Configuration
 515:Src/main.c    ****   * @retval None
 516:Src/main.c    ****   */
 517:Src/main.c    **** void SystemClock_Config(void)
 518:Src/main.c    **** {
 519:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 520:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 521:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 522:Src/main.c    **** 
 523:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 524:Src/main.c    ****   */
 525:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 526:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 527:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 528:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 529:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 530:Src/main.c    ****   {
 531:Src/main.c    ****     Error_Handler();
 532:Src/main.c    ****   }
 533:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 534:Src/main.c    ****   */
 535:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 536:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 537:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 538:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 539:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 540:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 541:Src/main.c    **** 
 542:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 543:Src/main.c    ****   {
 544:Src/main.c    ****     Error_Handler();
 545:Src/main.c    ****   }
 546:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
ARM GAS  /tmp/ccbYAz4J.s 			page 11


 547:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 548:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 549:Src/main.c    ****   {
 550:Src/main.c    ****     Error_Handler();
 551:Src/main.c    ****   }
 552:Src/main.c    **** }
 553:Src/main.c    **** 
 554:Src/main.c    **** /**
 555:Src/main.c    ****   * @brief ADC1 Initialization Function
 556:Src/main.c    ****   * @param None
 557:Src/main.c    ****   * @retval None
 558:Src/main.c    ****   */
 559:Src/main.c    **** static void MX_ADC1_Init(void)
 560:Src/main.c    **** {
 561:Src/main.c    **** 
 562:Src/main.c    ****    /* USER CODE BEGIN ADC1_Init 0 */
 563:Src/main.c    **** 
 564:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 565:Src/main.c    **** 
 566:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 567:Src/main.c    **** 
 568:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 569:Src/main.c    ****   /**Common config 
 570:Src/main.c    ****   */
 571:Src/main.c    ****   hadc1.Instance = ADC1;
 572:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE; //enable 
 573:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE; //enable 
 574:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 575:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 576:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 577:Src/main.c    ****   hadc1.Init.NbrOfConversion = 6;
 578:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 579:Src/main.c    ****   {
 580:Src/main.c    ****     Error_Handler();
 581:Src/main.c    ****   }
 582:Src/main.c    ****   /**Configure Regular Channel 
 583:Src/main.c    ****   */
 584:Src/main.c    ****   //Brake position
 585:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_0;
 586:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 587:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 588:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 589:Src/main.c    ****   {
 590:Src/main.c    ****     Error_Handler();
 591:Src/main.c    ****   }
 592:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 593:Src/main.c    **** 
 594:Src/main.c    ****   //Steering Position 
 595:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_1;
 596:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 597:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 598:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 599:Src/main.c    ****     Error_Handler();
 600:Src/main.c    ****   }
 601:Src/main.c    ****   
 602:Src/main.c    ****   //Brake Pressure 1
 603:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_3;
ARM GAS  /tmp/ccbYAz4J.s 			page 12


 604:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 605:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 606:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 607:Src/main.c    ****     Error_Handler();
 608:Src/main.c    ****   }
 609:Src/main.c    ****   
 610:Src/main.c    ****   //Brake Pressure 2
 611:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_2;
 612:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 613:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 614:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 615:Src/main.c    ****     Error_Handler();
 616:Src/main.c    ****   }
 617:Src/main.c    ****   
 618:Src/main.c    ****   //ADC for throttle_A
 619:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 620:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 621:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 622:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 623:Src/main.c    ****     Error_Handler();
 624:Src/main.c    ****   }
 625:Src/main.c    ****   
 626:Src/main.c    ****   //ADC for throttle_B
 627:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_9;
 628:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 629:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 630:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 631:Src/main.c    ****     Error_Handler();
 632:Src/main.c    ****   }
 633:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 634:Src/main.c    **** 
 635:Src/main.c    **** }
 636:Src/main.c    **** 
 637:Src/main.c    **** /**
 638:Src/main.c    ****   * @brief CAN Initialization Function
 639:Src/main.c    ****   * @param None
 640:Src/main.c    ****   * @retval None
 641:Src/main.c    ****   */
 642:Src/main.c    **** static void MX_CAN_Init(void)
 643:Src/main.c    **** {
 644:Src/main.c    **** 
 645:Src/main.c    ****  /* USER CODE BEGIN CAN_Init 0 */
 646:Src/main.c    **** 
 647:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
 648:Src/main.c    **** 
 649:Src/main.c    **** 
 650:Src/main.c    ****   hcan.Instance = CAN1;
 651:Src/main.c    ****   hcan.Init.Prescaler = 2;
 652:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 653:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 654:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_3TQ;
 655:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_4TQ;
 656:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 657:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE; //enable this if no other nodes on bus
 658:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 659:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 660:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
ARM GAS  /tmp/ccbYAz4J.s 			page 13


 661:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 662:Src/main.c    **** 
 663:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 664:Src/main.c    ****   {
 665:Src/main.c    ****     Error_Handler();
 666:Src/main.c    ****   }
 667:Src/main.c    ****   
 668:Src/main.c    ****     /* USER CODE BEGIN CAN_Init 1 */
 669:Src/main.c    ****  // HAL_CAN_Start(&hcan);
 670:Src/main.c    ****   TxFaults.StdId = FAULTS;         // CAN standard ID
 671:Src/main.c    ****   TxFaults.ExtId = 0x01;          // CAN extended ID
 672:Src/main.c    ****   TxFaults.RTR = CAN_RTR_DATA;      // CAN frame type
 673:Src/main.c    ****   TxFaults.IDE = CAN_ID_STD;        // CAN ID type
 674:Src/main.c    ****   TxFaults.DLC = 8;             // CAN frame length in bytes
 675:Src/main.c    ****   TxFaults.TransmitGlobalTime = DISABLE;  // CAN timestamp in TxData[6] and TxData[7]
 676:Src/main.c    **** 
 677:Src/main.c    ****   TxCar_state.StdId = CAR_STATE;         // CAN standard ID
 678:Src/main.c    ****   TxCar_state.ExtId = 0x01;          // CAN extended ID
 679:Src/main.c    ****   TxCar_state.RTR = CAN_RTR_DATA;      // CAN frame type
 680:Src/main.c    ****   TxCar_state.IDE = CAN_ID_STD;        // CAN ID type
 681:Src/main.c    ****   TxCar_state.DLC = 8;             // CAN frame length in bytes
 682:Src/main.c    ****   TxCar_state.TransmitGlobalTime = DISABLE;
 683:Src/main.c    **** 
 684:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 685:Src/main.c    **** 
 686:Src/main.c    ****     HAL_CAN_Start(&hcan);
 687:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 688:Src/main.c    **** 
 689:Src/main.c    **** }
 690:Src/main.c    **** 
 691:Src/main.c    **** /**
 692:Src/main.c    ****   * @brief SPI1 Initialization Function
 693:Src/main.c    ****   * @param None
 694:Src/main.c    ****   * @retval None
 695:Src/main.c    ****   */
 696:Src/main.c    **** static void MX_SPI1_Init(void)
 697:Src/main.c    **** {
 698:Src/main.c    **** 
 699:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 700:Src/main.c    **** 
 701:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 702:Src/main.c    **** 
 703:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 704:Src/main.c    **** 
 705:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 706:Src/main.c    ****   /* SPI1 parameter configuration*/
 707:Src/main.c    ****   hspi1.Instance = SPI1;
 708:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 709:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 710:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 711:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 712:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 713:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 714:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 715:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 716:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 717:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
ARM GAS  /tmp/ccbYAz4J.s 			page 14


 718:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 719:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 720:Src/main.c    ****   {
 721:Src/main.c    ****     Error_Handler();
 722:Src/main.c    ****   }
 723:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 724:Src/main.c    **** 
 725:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 726:Src/main.c    **** 
 727:Src/main.c    **** }
 728:Src/main.c    **** 
 729:Src/main.c    **** /**
 730:Src/main.c    ****   * @brief GPIO Initialization Function
 731:Src/main.c    ****   * @param None
 732:Src/main.c    ****   * @retval None
 733:Src/main.c    ****   */
 734:Src/main.c    **** static void MX_GPIO_Init(void)
 735:Src/main.c    **** {
  26              		.loc 1 735 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 736:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 736 3 view .LVU1
  43              		.loc 1 736 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 737:Src/main.c    **** 
 738:Src/main.c    ****   /* GPIO Ports Clock Enable */
 739:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 739 3 is_stmt 1 view .LVU3
  50              	.LBB8:
  51              		.loc 1 739 3 view .LVU4
  52              		.loc 1 739 3 view .LVU5
  53 0010 374B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F01002 		orr	r2, r2, #16
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 739 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F01002 		and	r2, r2, #16
  60 0020 0092     		str	r2, [sp]
ARM GAS  /tmp/ccbYAz4J.s 			page 15


  61              		.loc 1 739 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE8:
 740:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  64              		.loc 1 740 3 view .LVU8
  65              	.LBB9:
  66              		.loc 1 740 3 view .LVU9
  67              		.loc 1 740 3 view .LVU10
  68 0024 9A69     		ldr	r2, [r3, #24]
  69 0026 42F02002 		orr	r2, r2, #32
  70 002a 9A61     		str	r2, [r3, #24]
  71              		.loc 1 740 3 view .LVU11
  72 002c 9A69     		ldr	r2, [r3, #24]
  73 002e 02F02002 		and	r2, r2, #32
  74 0032 0192     		str	r2, [sp, #4]
  75              		.loc 1 740 3 view .LVU12
  76 0034 019A     		ldr	r2, [sp, #4]
  77              	.LBE9:
 741:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  78              		.loc 1 741 3 view .LVU13
  79              	.LBB10:
  80              		.loc 1 741 3 view .LVU14
  81              		.loc 1 741 3 view .LVU15
  82 0036 9A69     		ldr	r2, [r3, #24]
  83 0038 42F00402 		orr	r2, r2, #4
  84 003c 9A61     		str	r2, [r3, #24]
  85              		.loc 1 741 3 view .LVU16
  86 003e 9A69     		ldr	r2, [r3, #24]
  87 0040 02F00402 		and	r2, r2, #4
  88 0044 0292     		str	r2, [sp, #8]
  89              		.loc 1 741 3 view .LVU17
  90 0046 029A     		ldr	r2, [sp, #8]
  91              	.LBE10:
 742:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  92              		.loc 1 742 3 view .LVU18
  93              	.LBB11:
  94              		.loc 1 742 3 view .LVU19
  95              		.loc 1 742 3 view .LVU20
  96 0048 9A69     		ldr	r2, [r3, #24]
  97 004a 42F00802 		orr	r2, r2, #8
  98 004e 9A61     		str	r2, [r3, #24]
  99              		.loc 1 742 3 view .LVU21
 100 0050 9B69     		ldr	r3, [r3, #24]
 101 0052 03F00803 		and	r3, r3, #8
 102 0056 0393     		str	r3, [sp, #12]
 103              		.loc 1 742 3 view .LVU22
 104 0058 039B     		ldr	r3, [sp, #12]
 105              	.LBE11:
 743:Src/main.c    **** 
 744:Src/main.c    ****   /*Configure GPIO pin Output Level */
 745:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, BRAKE_LIGHT_EN_Pin|RTDS_EN_Pin|APPS_EN_Pin|RTD_EN_Pin 
 106              		.loc 1 745 3 view .LVU23
 107 005a 264E     		ldr	r6, .L3+4
 108 005c 2246     		mov	r2, r4
 109 005e 42F23811 		movw	r1, #8504
 110 0062 3046     		mov	r0, r6
 111 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccbYAz4J.s 			page 16


 112              	.LVL0:
 746:Src/main.c    ****                           |BTSF_EN_Pin, GPIO_PIN_RESET);
 747:Src/main.c    **** 
 748:Src/main.c    ****   /*Configure GPIO pin Output Level */
 749:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 113              		.loc 1 749 3 view .LVU24
 114 0068 234F     		ldr	r7, .L3+8
 115 006a 2246     		mov	r2, r4
 116 006c 4FF48061 		mov	r1, #1024
 117 0070 3846     		mov	r0, r7
 118 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 119              	.LVL1:
 750:Src/main.c    **** 
 751:Src/main.c    ****   /*Configure GPIO pins : FAULT_IMD_STATUS_Pin FAULT_BMS_STATUS_Pin */
 752:Src/main.c    ****   GPIO_InitStruct.Pin = FAULT_IMD_STATUS_Pin|FAULT_BMS_STATUS_Pin;
 120              		.loc 1 752 3 view .LVU25
 121              		.loc 1 752 23 is_stmt 0 view .LVU26
 122 0076 4FF44043 		mov	r3, #49152
 123 007a 0493     		str	r3, [sp, #16]
 753:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 124              		.loc 1 753 3 is_stmt 1 view .LVU27
 125              		.loc 1 753 24 is_stmt 0 view .LVU28
 126 007c 0594     		str	r4, [sp, #20]
 754:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 127              		.loc 1 754 3 is_stmt 1 view .LVU29
 128              		.loc 1 754 24 is_stmt 0 view .LVU30
 129 007e 0694     		str	r4, [sp, #24]
 755:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 130              		.loc 1 755 3 is_stmt 1 view .LVU31
 131 0080 04A9     		add	r1, sp, #16
 132 0082 1E48     		ldr	r0, .L3+12
 133 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL2:
 756:Src/main.c    **** 
 757:Src/main.c    ****   /*Configure GPIO pin : FAULT_BSPD_STATUS_Pin */
 758:Src/main.c    ****   GPIO_InitStruct.Pin = FAULT_BSPD_STATUS_Pin;
 135              		.loc 1 758 3 view .LVU32
 136              		.loc 1 758 23 is_stmt 0 view .LVU33
 137 0088 0125     		movs	r5, #1
 138 008a 0495     		str	r5, [sp, #16]
 759:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 139              		.loc 1 759 3 is_stmt 1 view .LVU34
 140              		.loc 1 759 24 is_stmt 0 view .LVU35
 141 008c 0594     		str	r4, [sp, #20]
 760:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 142              		.loc 1 760 3 is_stmt 1 view .LVU36
 143              		.loc 1 760 24 is_stmt 0 view .LVU37
 144 008e 0694     		str	r4, [sp, #24]
 761:Src/main.c    ****   HAL_GPIO_Init(FAULT_BSPD_STATUS_GPIO_Port, &GPIO_InitStruct);
 145              		.loc 1 761 3 is_stmt 1 view .LVU38
 146 0090 04A9     		add	r1, sp, #16
 147 0092 1B48     		ldr	r0, .L3+16
 148 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL3:
 762:Src/main.c    **** 
 763:Src/main.c    ****   /*Configure GPIO pins : HV_CONNECTED_Pin ENABLE_IN_Pin PRECHARGE_COMPLETE_Pin */
 764:Src/main.c    ****   GPIO_InitStruct.Pin = HV_CONNECTED_Pin|ENABLE_IN_Pin|PRECHARGE_COMPLETE_Pin;
ARM GAS  /tmp/ccbYAz4J.s 			page 17


 150              		.loc 1 764 3 view .LVU39
 151              		.loc 1 764 23 is_stmt 0 view .LVU40
 152 0098 48F24043 		movw	r3, #33856
 153 009c 0493     		str	r3, [sp, #16]
 765:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 154              		.loc 1 765 3 is_stmt 1 view .LVU41
 155              		.loc 1 765 24 is_stmt 0 view .LVU42
 156 009e 0594     		str	r4, [sp, #20]
 766:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 157              		.loc 1 766 3 is_stmt 1 view .LVU43
 158              		.loc 1 766 24 is_stmt 0 view .LVU44
 159 00a0 0694     		str	r4, [sp, #24]
 767:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 160              		.loc 1 767 3 is_stmt 1 view .LVU45
 161 00a2 04A9     		add	r1, sp, #16
 162 00a4 3046     		mov	r0, r6
 163 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 164              	.LVL4:
 768:Src/main.c    **** 
 769:Src/main.c    ****   /*Configure GPIO pins : BRAKE_LIGHT_EN_Pin RTDS_EN_Pin APPS_EN_Pin RTD_EN_Pin 
 770:Src/main.c    ****                            BTSF_EN_Pin */
 771:Src/main.c    ****   GPIO_InitStruct.Pin = BRAKE_LIGHT_EN_Pin|RTDS_EN_Pin|APPS_EN_Pin|RTD_EN_Pin 
 165              		.loc 1 771 3 view .LVU46
 166              		.loc 1 771 23 is_stmt 0 view .LVU47
 167 00aa 42F23813 		movw	r3, #8504
 168 00ae 0493     		str	r3, [sp, #16]
 772:Src/main.c    ****                           |BTSF_EN_Pin;
 773:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 169              		.loc 1 773 3 is_stmt 1 view .LVU48
 170              		.loc 1 773 24 is_stmt 0 view .LVU49
 171 00b0 0595     		str	r5, [sp, #20]
 774:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 172              		.loc 1 774 3 is_stmt 1 view .LVU50
 173              		.loc 1 774 24 is_stmt 0 view .LVU51
 174 00b2 0694     		str	r4, [sp, #24]
 775:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 175              		.loc 1 775 3 is_stmt 1 view .LVU52
 176              		.loc 1 775 25 is_stmt 0 view .LVU53
 177 00b4 4FF00208 		mov	r8, #2
 178 00b8 CDF81C80 		str	r8, [sp, #28]
 776:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 179              		.loc 1 776 3 is_stmt 1 view .LVU54
 180 00bc 04A9     		add	r1, sp, #16
 181 00be 3046     		mov	r0, r6
 182 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 183              	.LVL5:
 777:Src/main.c    **** 
 778:Src/main.c    ****   /*Configure GPIO pin : PA10 */
 779:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 184              		.loc 1 779 3 view .LVU55
 185              		.loc 1 779 23 is_stmt 0 view .LVU56
 186 00c4 4FF48063 		mov	r3, #1024
 187 00c8 0493     		str	r3, [sp, #16]
 780:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 188              		.loc 1 780 3 is_stmt 1 view .LVU57
 189              		.loc 1 780 24 is_stmt 0 view .LVU58
 190 00ca 0595     		str	r5, [sp, #20]
ARM GAS  /tmp/ccbYAz4J.s 			page 18


 781:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 191              		.loc 1 781 3 is_stmt 1 view .LVU59
 192              		.loc 1 781 24 is_stmt 0 view .LVU60
 193 00cc 0694     		str	r4, [sp, #24]
 782:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 194              		.loc 1 782 3 is_stmt 1 view .LVU61
 195              		.loc 1 782 25 is_stmt 0 view .LVU62
 196 00ce CDF81C80 		str	r8, [sp, #28]
 783:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 197              		.loc 1 783 3 is_stmt 1 view .LVU63
 198 00d2 04A9     		add	r1, sp, #16
 199 00d4 3846     		mov	r0, r7
 200 00d6 FFF7FEFF 		bl	HAL_GPIO_Init
 201              	.LVL6:
 784:Src/main.c    **** 
 785:Src/main.c    ****   /*Configure peripheral I/O remapping */
 786:Src/main.c    ****   __HAL_AFIO_REMAP_PD01_ENABLE();
 202              		.loc 1 786 3 view .LVU64
 203              	.LBB12:
 204              		.loc 1 786 3 view .LVU65
 205 00da 0A4A     		ldr	r2, .L3+20
 206 00dc 5368     		ldr	r3, [r2, #4]
 207              	.LVL7:
 208              		.loc 1 786 3 view .LVU66
 209              		.loc 1 786 3 view .LVU67
 210 00de 43F0E063 		orr	r3, r3, #117440512
 211              	.LVL8:
 212              		.loc 1 786 3 is_stmt 0 view .LVU68
 213 00e2 43F40043 		orr	r3, r3, #32768
 214              	.LVL9:
 215              		.loc 1 786 3 is_stmt 1 view .LVU69
 216 00e6 5360     		str	r3, [r2, #4]
 217              	.LBE12:
 787:Src/main.c    **** 
 788:Src/main.c    **** }
 218              		.loc 1 788 1 is_stmt 0 view .LVU70
 219 00e8 08B0     		add	sp, sp, #32
 220              	.LCFI2:
 221              		.cfi_def_cfa_offset 24
 222              		@ sp needed
 223 00ea BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 224              	.L4:
 225 00ee 00BF     		.align	2
 226              	.L3:
 227 00f0 00100240 		.word	1073876992
 228 00f4 000C0140 		.word	1073810432
 229 00f8 00080140 		.word	1073809408
 230 00fc 00100140 		.word	1073811456
 231 0100 00140140 		.word	1073812480
 232 0104 00000140 		.word	1073807360
 233              		.cfi_endproc
 234              	.LFE79:
 236              		.section	.text.MX_SPI1_Init,"ax",%progbits
 237              		.align	1
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
ARM GAS  /tmp/ccbYAz4J.s 			page 19


 241              		.fpu softvfp
 243              	MX_SPI1_Init:
 244              	.LFB78:
 697:Src/main.c    **** 
 245              		.loc 1 697 1 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249 0000 08B5     		push	{r3, lr}
 250              	.LCFI3:
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 3, -8
 253              		.cfi_offset 14, -4
 707:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 254              		.loc 1 707 3 view .LVU72
 707:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 255              		.loc 1 707 18 is_stmt 0 view .LVU73
 256 0002 0B48     		ldr	r0, .L7
 257 0004 0B4B     		ldr	r3, .L7+4
 258 0006 0360     		str	r3, [r0]
 708:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 259              		.loc 1 708 3 is_stmt 1 view .LVU74
 708:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 260              		.loc 1 708 19 is_stmt 0 view .LVU75
 261 0008 4FF48273 		mov	r3, #260
 262 000c 4360     		str	r3, [r0, #4]
 709:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 263              		.loc 1 709 3 is_stmt 1 view .LVU76
 709:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 264              		.loc 1 709 24 is_stmt 0 view .LVU77
 265 000e 0023     		movs	r3, #0
 266 0010 8360     		str	r3, [r0, #8]
 710:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 267              		.loc 1 710 3 is_stmt 1 view .LVU78
 710:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 268              		.loc 1 710 23 is_stmt 0 view .LVU79
 269 0012 C360     		str	r3, [r0, #12]
 711:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 270              		.loc 1 711 3 is_stmt 1 view .LVU80
 711:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 271              		.loc 1 711 26 is_stmt 0 view .LVU81
 272 0014 0361     		str	r3, [r0, #16]
 712:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 273              		.loc 1 712 3 is_stmt 1 view .LVU82
 712:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 274              		.loc 1 712 23 is_stmt 0 view .LVU83
 275 0016 4361     		str	r3, [r0, #20]
 713:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 276              		.loc 1 713 3 is_stmt 1 view .LVU84
 713:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 277              		.loc 1 713 18 is_stmt 0 view .LVU85
 278 0018 4FF48022 		mov	r2, #262144
 279 001c 8261     		str	r2, [r0, #24]
 714:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 280              		.loc 1 714 3 is_stmt 1 view .LVU86
 714:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 281              		.loc 1 714 32 is_stmt 0 view .LVU87
ARM GAS  /tmp/ccbYAz4J.s 			page 20


 282 001e C361     		str	r3, [r0, #28]
 715:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 283              		.loc 1 715 3 is_stmt 1 view .LVU88
 715:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 284              		.loc 1 715 23 is_stmt 0 view .LVU89
 285 0020 0362     		str	r3, [r0, #32]
 716:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 286              		.loc 1 716 3 is_stmt 1 view .LVU90
 716:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 287              		.loc 1 716 21 is_stmt 0 view .LVU91
 288 0022 4362     		str	r3, [r0, #36]
 717:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 289              		.loc 1 717 3 is_stmt 1 view .LVU92
 717:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 290              		.loc 1 717 29 is_stmt 0 view .LVU93
 291 0024 8362     		str	r3, [r0, #40]
 718:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 292              		.loc 1 718 3 is_stmt 1 view .LVU94
 718:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 293              		.loc 1 718 28 is_stmt 0 view .LVU95
 294 0026 0A23     		movs	r3, #10
 295 0028 C362     		str	r3, [r0, #44]
 719:Src/main.c    ****   {
 296              		.loc 1 719 3 is_stmt 1 view .LVU96
 719:Src/main.c    ****   {
 297              		.loc 1 719 7 is_stmt 0 view .LVU97
 298 002a FFF7FEFF 		bl	HAL_SPI_Init
 299              	.LVL10:
 727:Src/main.c    **** 
 300              		.loc 1 727 1 view .LVU98
 301 002e 08BD     		pop	{r3, pc}
 302              	.L8:
 303              		.align	2
 304              	.L7:
 305 0030 00000000 		.word	hspi1
 306 0034 00300140 		.word	1073819648
 307              		.cfi_endproc
 308              	.LFE78:
 310              		.section	.text.MX_ADC1_Init,"ax",%progbits
 311              		.align	1
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 317              	MX_ADC1_Init:
 318              	.LFB76:
 560:Src/main.c    **** 
 319              		.loc 1 560 1 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 324              	.LCFI4:
 325              		.cfi_def_cfa_offset 24
 326              		.cfi_offset 4, -24
 327              		.cfi_offset 5, -20
 328              		.cfi_offset 6, -16
ARM GAS  /tmp/ccbYAz4J.s 			page 21


 329              		.cfi_offset 7, -12
 330              		.cfi_offset 8, -8
 331              		.cfi_offset 14, -4
 571:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE; //enable 
 332              		.loc 1 571 3 view .LVU100
 571:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE; //enable 
 333              		.loc 1 571 18 is_stmt 0 view .LVU101
 334 0004 2A4D     		ldr	r5, .L11
 335 0006 2B4B     		ldr	r3, .L11+4
 336 0008 2B60     		str	r3, [r5]
 572:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE; //enable 
 337              		.loc 1 572 3 is_stmt 1 view .LVU102
 572:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE; //enable 
 338              		.loc 1 572 27 is_stmt 0 view .LVU103
 339 000a 0026     		movs	r6, #0
 340 000c AE60     		str	r6, [r5, #8]
 573:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 341              		.loc 1 573 3 is_stmt 1 view .LVU104
 573:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 342              		.loc 1 573 33 is_stmt 0 view .LVU105
 343 000e EE60     		str	r6, [r5, #12]
 574:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 344              		.loc 1 574 3 is_stmt 1 view .LVU106
 574:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 345              		.loc 1 574 36 is_stmt 0 view .LVU107
 346 0010 6E61     		str	r6, [r5, #20]
 575:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 347              		.loc 1 575 3 is_stmt 1 view .LVU108
 575:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 348              		.loc 1 575 31 is_stmt 0 view .LVU109
 349 0012 4FF46023 		mov	r3, #917504
 350 0016 EB61     		str	r3, [r5, #28]
 576:Src/main.c    ****   hadc1.Init.NbrOfConversion = 6;
 351              		.loc 1 576 3 is_stmt 1 view .LVU110
 576:Src/main.c    ****   hadc1.Init.NbrOfConversion = 6;
 352              		.loc 1 576 24 is_stmt 0 view .LVU111
 353 0018 6E60     		str	r6, [r5, #4]
 577:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 354              		.loc 1 577 3 is_stmt 1 view .LVU112
 577:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 355              		.loc 1 577 30 is_stmt 0 view .LVU113
 356 001a 0627     		movs	r7, #6
 357 001c 2F61     		str	r7, [r5, #16]
 578:Src/main.c    ****   {
 358              		.loc 1 578 3 is_stmt 1 view .LVU114
 578:Src/main.c    ****   {
 359              		.loc 1 578 7 is_stmt 0 view .LVU115
 360 001e 2846     		mov	r0, r5
 361 0020 FFF7FEFF 		bl	HAL_ADC_Init
 362              	.LVL11:
 585:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 363              		.loc 1 585 3 is_stmt 1 view .LVU116
 585:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 364              		.loc 1 585 19 is_stmt 0 view .LVU117
 365 0024 244C     		ldr	r4, .L11+8
 366 0026 2660     		str	r6, [r4]
 586:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
ARM GAS  /tmp/ccbYAz4J.s 			page 22


 367              		.loc 1 586 3 is_stmt 1 view .LVU118
 586:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 368              		.loc 1 586 16 is_stmt 0 view .LVU119
 369 0028 4FF00108 		mov	r8, #1
 370 002c C4F80480 		str	r8, [r4, #4]
 587:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 371              		.loc 1 587 3 is_stmt 1 view .LVU120
 587:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 372              		.loc 1 587 24 is_stmt 0 view .LVU121
 373 0030 A660     		str	r6, [r4, #8]
 588:Src/main.c    ****   {
 374              		.loc 1 588 3 is_stmt 1 view .LVU122
 588:Src/main.c    ****   {
 375              		.loc 1 588 7 is_stmt 0 view .LVU123
 376 0032 2146     		mov	r1, r4
 377 0034 2846     		mov	r0, r5
 378 0036 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 379              	.LVL12:
 595:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 380              		.loc 1 595 3 is_stmt 1 view .LVU124
 595:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 381              		.loc 1 595 19 is_stmt 0 view .LVU125
 382 003a C4F80080 		str	r8, [r4]
 596:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 383              		.loc 1 596 3 is_stmt 1 view .LVU126
 596:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 384              		.loc 1 596 16 is_stmt 0 view .LVU127
 385 003e 0226     		movs	r6, #2
 386 0040 6660     		str	r6, [r4, #4]
 597:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 387              		.loc 1 597 3 is_stmt 1 view .LVU128
 388 0042 2146     		mov	r1, r4
 389 0044 2846     		mov	r0, r5
 390 0046 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 391              	.LVL13:
 598:Src/main.c    ****     Error_Handler();
 392              		.loc 1 598 3 view .LVU129
 598:Src/main.c    ****     Error_Handler();
 393              		.loc 1 598 7 is_stmt 0 view .LVU130
 394 004a 2146     		mov	r1, r4
 395 004c 2846     		mov	r0, r5
 396 004e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 397              	.LVL14:
 603:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 398              		.loc 1 603 3 is_stmt 1 view .LVU131
 603:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 399              		.loc 1 603 19 is_stmt 0 view .LVU132
 400 0052 0323     		movs	r3, #3
 401 0054 2360     		str	r3, [r4]
 604:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 402              		.loc 1 604 3 is_stmt 1 view .LVU133
 604:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 403              		.loc 1 604 16 is_stmt 0 view .LVU134
 404 0056 6360     		str	r3, [r4, #4]
 605:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 405              		.loc 1 605 3 is_stmt 1 view .LVU135
 406 0058 2146     		mov	r1, r4
ARM GAS  /tmp/ccbYAz4J.s 			page 23


 407 005a 2846     		mov	r0, r5
 408 005c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 409              	.LVL15:
 606:Src/main.c    ****     Error_Handler();
 410              		.loc 1 606 3 view .LVU136
 606:Src/main.c    ****     Error_Handler();
 411              		.loc 1 606 7 is_stmt 0 view .LVU137
 412 0060 2146     		mov	r1, r4
 413 0062 2846     		mov	r0, r5
 414 0064 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 415              	.LVL16:
 611:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 416              		.loc 1 611 3 is_stmt 1 view .LVU138
 611:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 417              		.loc 1 611 19 is_stmt 0 view .LVU139
 418 0068 2660     		str	r6, [r4]
 612:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 419              		.loc 1 612 3 is_stmt 1 view .LVU140
 612:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 420              		.loc 1 612 16 is_stmt 0 view .LVU141
 421 006a 0423     		movs	r3, #4
 422 006c 6360     		str	r3, [r4, #4]
 613:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 423              		.loc 1 613 3 is_stmt 1 view .LVU142
 424 006e 2146     		mov	r1, r4
 425 0070 2846     		mov	r0, r5
 426 0072 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 427              	.LVL17:
 614:Src/main.c    ****     Error_Handler();
 428              		.loc 1 614 3 view .LVU143
 614:Src/main.c    ****     Error_Handler();
 429              		.loc 1 614 7 is_stmt 0 view .LVU144
 430 0076 2146     		mov	r1, r4
 431 0078 2846     		mov	r0, r5
 432 007a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 433              	.LVL18:
 619:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 434              		.loc 1 619 3 is_stmt 1 view .LVU145
 619:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 435              		.loc 1 619 19 is_stmt 0 view .LVU146
 436 007e 0823     		movs	r3, #8
 437 0080 2360     		str	r3, [r4]
 620:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 438              		.loc 1 620 3 is_stmt 1 view .LVU147
 620:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 439              		.loc 1 620 16 is_stmt 0 view .LVU148
 440 0082 0523     		movs	r3, #5
 441 0084 6360     		str	r3, [r4, #4]
 621:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 442              		.loc 1 621 3 is_stmt 1 view .LVU149
 443 0086 2146     		mov	r1, r4
 444 0088 2846     		mov	r0, r5
 445 008a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 446              	.LVL19:
 622:Src/main.c    ****     Error_Handler();
 447              		.loc 1 622 3 view .LVU150
 622:Src/main.c    ****     Error_Handler();
ARM GAS  /tmp/ccbYAz4J.s 			page 24


 448              		.loc 1 622 7 is_stmt 0 view .LVU151
 449 008e 2146     		mov	r1, r4
 450 0090 2846     		mov	r0, r5
 451 0092 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 452              	.LVL20:
 627:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 453              		.loc 1 627 3 is_stmt 1 view .LVU152
 627:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 454              		.loc 1 627 19 is_stmt 0 view .LVU153
 455 0096 0923     		movs	r3, #9
 456 0098 2360     		str	r3, [r4]
 628:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 457              		.loc 1 628 3 is_stmt 1 view .LVU154
 628:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 458              		.loc 1 628 16 is_stmt 0 view .LVU155
 459 009a 6760     		str	r7, [r4, #4]
 629:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 460              		.loc 1 629 3 is_stmt 1 view .LVU156
 461 009c 2146     		mov	r1, r4
 462 009e 2846     		mov	r0, r5
 463 00a0 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 464              	.LVL21:
 630:Src/main.c    ****     Error_Handler();
 465              		.loc 1 630 3 view .LVU157
 630:Src/main.c    ****     Error_Handler();
 466              		.loc 1 630 7 is_stmt 0 view .LVU158
 467 00a4 2146     		mov	r1, r4
 468 00a6 2846     		mov	r0, r5
 469 00a8 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 470              	.LVL22:
 635:Src/main.c    **** 
 471              		.loc 1 635 1 view .LVU159
 472 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 473              	.L12:
 474              		.align	2
 475              	.L11:
 476 00b0 00000000 		.word	hadc1
 477 00b4 00240140 		.word	1073816576
 478 00b8 00000000 		.word	.LANCHOR0
 479              		.cfi_endproc
 480              	.LFE76:
 482              		.section	.text.MX_CAN_Init,"ax",%progbits
 483              		.align	1
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 487              		.fpu softvfp
 489              	MX_CAN_Init:
 490              	.LFB77:
 643:Src/main.c    **** 
 491              		.loc 1 643 1 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495 0000 38B5     		push	{r3, r4, r5, lr}
 496              	.LCFI5:
 497              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccbYAz4J.s 			page 25


 498              		.cfi_offset 3, -16
 499              		.cfi_offset 4, -12
 500              		.cfi_offset 5, -8
 501              		.cfi_offset 14, -4
 650:Src/main.c    ****   hcan.Init.Prescaler = 2;
 502              		.loc 1 650 3 view .LVU161
 650:Src/main.c    ****   hcan.Init.Prescaler = 2;
 503              		.loc 1 650 17 is_stmt 0 view .LVU162
 504 0002 164C     		ldr	r4, .L15
 505 0004 164B     		ldr	r3, .L15+4
 506 0006 2360     		str	r3, [r4]
 651:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 507              		.loc 1 651 3 is_stmt 1 view .LVU163
 651:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 508              		.loc 1 651 23 is_stmt 0 view .LVU164
 509 0008 0223     		movs	r3, #2
 510 000a 6360     		str	r3, [r4, #4]
 652:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 511              		.loc 1 652 3 is_stmt 1 view .LVU165
 652:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 512              		.loc 1 652 18 is_stmt 0 view .LVU166
 513 000c 0025     		movs	r5, #0
 514 000e A560     		str	r5, [r4, #8]
 653:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_3TQ;
 515              		.loc 1 653 3 is_stmt 1 view .LVU167
 653:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_3TQ;
 516              		.loc 1 653 27 is_stmt 0 view .LVU168
 517 0010 E560     		str	r5, [r4, #12]
 654:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_4TQ;
 518              		.loc 1 654 3 is_stmt 1 view .LVU169
 654:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_4TQ;
 519              		.loc 1 654 22 is_stmt 0 view .LVU170
 520 0012 4FF40033 		mov	r3, #131072
 521 0016 2361     		str	r3, [r4, #16]
 655:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 522              		.loc 1 655 3 is_stmt 1 view .LVU171
 655:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 523              		.loc 1 655 22 is_stmt 0 view .LVU172
 524 0018 4FF44013 		mov	r3, #3145728
 525 001c 6361     		str	r3, [r4, #20]
 656:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE; //enable this if no other nodes on bus
 526              		.loc 1 656 3 is_stmt 1 view .LVU173
 656:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE; //enable this if no other nodes on bus
 527              		.loc 1 656 31 is_stmt 0 view .LVU174
 528 001e 2576     		strb	r5, [r4, #24]
 657:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 529              		.loc 1 657 3 is_stmt 1 view .LVU175
 657:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 530              		.loc 1 657 24 is_stmt 0 view .LVU176
 531 0020 6576     		strb	r5, [r4, #25]
 658:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 532              		.loc 1 658 3 is_stmt 1 view .LVU177
 658:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 533              		.loc 1 658 24 is_stmt 0 view .LVU178
 534 0022 A576     		strb	r5, [r4, #26]
 659:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 535              		.loc 1 659 3 is_stmt 1 view .LVU179
ARM GAS  /tmp/ccbYAz4J.s 			page 26


 659:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 536              		.loc 1 659 32 is_stmt 0 view .LVU180
 537 0024 E576     		strb	r5, [r4, #27]
 660:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 538              		.loc 1 660 3 is_stmt 1 view .LVU181
 660:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 539              		.loc 1 660 31 is_stmt 0 view .LVU182
 540 0026 2577     		strb	r5, [r4, #28]
 661:Src/main.c    **** 
 541              		.loc 1 661 3 is_stmt 1 view .LVU183
 661:Src/main.c    **** 
 542              		.loc 1 661 34 is_stmt 0 view .LVU184
 543 0028 6577     		strb	r5, [r4, #29]
 663:Src/main.c    ****   {
 544              		.loc 1 663 3 is_stmt 1 view .LVU185
 663:Src/main.c    ****   {
 545              		.loc 1 663 7 is_stmt 0 view .LVU186
 546 002a 2046     		mov	r0, r4
 547 002c FFF7FEFF 		bl	HAL_CAN_Init
 548              	.LVL23:
 670:Src/main.c    ****   TxFaults.ExtId = 0x01;          // CAN extended ID
 549              		.loc 1 670 3 is_stmt 1 view .LVU187
 670:Src/main.c    ****   TxFaults.ExtId = 0x01;          // CAN extended ID
 550              		.loc 1 670 18 is_stmt 0 view .LVU188
 551 0030 0C4B     		ldr	r3, .L15+8
 552 0032 D022     		movs	r2, #208
 553 0034 1A60     		str	r2, [r3]
 671:Src/main.c    ****   TxFaults.RTR = CAN_RTR_DATA;      // CAN frame type
 554              		.loc 1 671 3 is_stmt 1 view .LVU189
 671:Src/main.c    ****   TxFaults.RTR = CAN_RTR_DATA;      // CAN frame type
 555              		.loc 1 671 18 is_stmt 0 view .LVU190
 556 0036 0121     		movs	r1, #1
 557 0038 5960     		str	r1, [r3, #4]
 672:Src/main.c    ****   TxFaults.IDE = CAN_ID_STD;        // CAN ID type
 558              		.loc 1 672 3 is_stmt 1 view .LVU191
 672:Src/main.c    ****   TxFaults.IDE = CAN_ID_STD;        // CAN ID type
 559              		.loc 1 672 16 is_stmt 0 view .LVU192
 560 003a DD60     		str	r5, [r3, #12]
 673:Src/main.c    ****   TxFaults.DLC = 8;             // CAN frame length in bytes
 561              		.loc 1 673 3 is_stmt 1 view .LVU193
 673:Src/main.c    ****   TxFaults.DLC = 8;             // CAN frame length in bytes
 562              		.loc 1 673 16 is_stmt 0 view .LVU194
 563 003c 9D60     		str	r5, [r3, #8]
 674:Src/main.c    ****   TxFaults.TransmitGlobalTime = DISABLE;  // CAN timestamp in TxData[6] and TxData[7]
 564              		.loc 1 674 3 is_stmt 1 view .LVU195
 674:Src/main.c    ****   TxFaults.TransmitGlobalTime = DISABLE;  // CAN timestamp in TxData[6] and TxData[7]
 565              		.loc 1 674 16 is_stmt 0 view .LVU196
 566 003e 0822     		movs	r2, #8
 567 0040 1A61     		str	r2, [r3, #16]
 675:Src/main.c    **** 
 568              		.loc 1 675 3 is_stmt 1 view .LVU197
 675:Src/main.c    **** 
 569              		.loc 1 675 31 is_stmt 0 view .LVU198
 570 0042 1D75     		strb	r5, [r3, #20]
 677:Src/main.c    ****   TxCar_state.ExtId = 0x01;          // CAN extended ID
 571              		.loc 1 677 3 is_stmt 1 view .LVU199
 677:Src/main.c    ****   TxCar_state.ExtId = 0x01;          // CAN extended ID
ARM GAS  /tmp/ccbYAz4J.s 			page 27


 572              		.loc 1 677 21 is_stmt 0 view .LVU200
 573 0044 084B     		ldr	r3, .L15+12
 574 0046 D120     		movs	r0, #209
 575 0048 1860     		str	r0, [r3]
 678:Src/main.c    ****   TxCar_state.RTR = CAN_RTR_DATA;      // CAN frame type
 576              		.loc 1 678 3 is_stmt 1 view .LVU201
 678:Src/main.c    ****   TxCar_state.RTR = CAN_RTR_DATA;      // CAN frame type
 577              		.loc 1 678 21 is_stmt 0 view .LVU202
 578 004a 5960     		str	r1, [r3, #4]
 679:Src/main.c    ****   TxCar_state.IDE = CAN_ID_STD;        // CAN ID type
 579              		.loc 1 679 3 is_stmt 1 view .LVU203
 679:Src/main.c    ****   TxCar_state.IDE = CAN_ID_STD;        // CAN ID type
 580              		.loc 1 679 19 is_stmt 0 view .LVU204
 581 004c DD60     		str	r5, [r3, #12]
 680:Src/main.c    ****   TxCar_state.DLC = 8;             // CAN frame length in bytes
 582              		.loc 1 680 3 is_stmt 1 view .LVU205
 680:Src/main.c    ****   TxCar_state.DLC = 8;             // CAN frame length in bytes
 583              		.loc 1 680 19 is_stmt 0 view .LVU206
 584 004e 9D60     		str	r5, [r3, #8]
 681:Src/main.c    ****   TxCar_state.TransmitGlobalTime = DISABLE;
 585              		.loc 1 681 3 is_stmt 1 view .LVU207
 681:Src/main.c    ****   TxCar_state.TransmitGlobalTime = DISABLE;
 586              		.loc 1 681 19 is_stmt 0 view .LVU208
 587 0050 1A61     		str	r2, [r3, #16]
 682:Src/main.c    **** 
 588              		.loc 1 682 3 is_stmt 1 view .LVU209
 682:Src/main.c    **** 
 589              		.loc 1 682 34 is_stmt 0 view .LVU210
 590 0052 1D75     		strb	r5, [r3, #20]
 686:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 591              		.loc 1 686 5 is_stmt 1 view .LVU211
 592 0054 2046     		mov	r0, r4
 593 0056 FFF7FEFF 		bl	HAL_CAN_Start
 594              	.LVL24:
 689:Src/main.c    **** 
 595              		.loc 1 689 1 is_stmt 0 view .LVU212
 596 005a 38BD     		pop	{r3, r4, r5, pc}
 597              	.L16:
 598              		.align	2
 599              	.L15:
 600 005c 00000000 		.word	hcan
 601 0060 00640040 		.word	1073767424
 602 0064 00000000 		.word	TxFaults
 603 0068 00000000 		.word	TxCar_state
 604              		.cfi_endproc
 605              	.LFE77:
 607              		.section	.text.updateADC,"ax",%progbits
 608              		.align	1
 609              		.global	updateADC
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 613              		.fpu softvfp
 615              	updateADC:
 616              	.LVL25:
 617              	.LFB69:
 391:Src/main.c    ****   //HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
ARM GAS  /tmp/ccbYAz4J.s 			page 28


 618              		.loc 1 391 32 is_stmt 1 view -0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 391:Src/main.c    ****   //HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 622              		.loc 1 391 32 is_stmt 0 view .LVU214
 623 0000 10B5     		push	{r4, lr}
 624              	.LCFI6:
 625              		.cfi_def_cfa_offset 8
 626              		.cfi_offset 4, -8
 627              		.cfi_offset 14, -4
 393:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_0;
 628              		.loc 1 393 3 is_stmt 1 view .LVU215
 393:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_0;
 629              		.loc 1 393 6 is_stmt 0 view .LVU216
 630 0002 0346     		mov	r3, r0
 631 0004 10B9     		cbnz	r0, .L18
 394:Src/main.c    ****   if (channel == STEERING_POS_ADC_CHANNEL) //steering position 
 632              		.loc 1 394 5 is_stmt 1 view .LVU217
 394:Src/main.c    ****   if (channel == STEERING_POS_ADC_CHANNEL) //steering position 
 633              		.loc 1 394 21 is_stmt 0 view .LVU218
 634 0006 1B4A     		ldr	r2, .L30
 635 0008 0021     		movs	r1, #0
 636 000a 1160     		str	r1, [r2]
 637              	.L18:
 395:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_1;
 638              		.loc 1 395 3 is_stmt 1 view .LVU219
 395:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_1;
 639              		.loc 1 395 6 is_stmt 0 view .LVU220
 640 000c 012B     		cmp	r3, #1
 641 000e 1CD0     		beq	.L25
 642              	.L19:
 397:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_3;
 643              		.loc 1 397 3 is_stmt 1 view .LVU221
 397:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_3;
 644              		.loc 1 397 6 is_stmt 0 view .LVU222
 645 0010 032B     		cmp	r3, #3
 646 0012 1ED0     		beq	.L26
 647              	.L20:
 399:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_2;
 648              		.loc 1 399 3 is_stmt 1 view .LVU223
 399:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_2;
 649              		.loc 1 399 6 is_stmt 0 view .LVU224
 650 0014 022B     		cmp	r3, #2
 651 0016 20D0     		beq	.L27
 652              	.L21:
 401:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_8;
 653              		.loc 1 401 3 is_stmt 1 view .LVU225
 401:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_8;
 654              		.loc 1 401 6 is_stmt 0 view .LVU226
 655 0018 082B     		cmp	r3, #8
 656 001a 22D0     		beq	.L28
 657              	.L22:
 403:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_9;
 658              		.loc 1 403 3 is_stmt 1 view .LVU227
 403:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_9;
 659              		.loc 1 403 6 is_stmt 0 view .LVU228
ARM GAS  /tmp/ccbYAz4J.s 			page 29


 660 001c 092B     		cmp	r3, #9
 661 001e 24D0     		beq	.L29
 662              	.L23:
 406:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_7CYCLES_5;
 663              		.loc 1 406 3 is_stmt 1 view .LVU229
 406:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_7CYCLES_5;
 664              		.loc 1 406 16 is_stmt 0 view .LVU230
 665 0020 1449     		ldr	r1, .L30
 666 0022 0123     		movs	r3, #1
 667 0024 4B60     		str	r3, [r1, #4]
 407:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 668              		.loc 1 407 3 is_stmt 1 view .LVU231
 407:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 669              		.loc 1 407 24 is_stmt 0 view .LVU232
 670 0026 8B60     		str	r3, [r1, #8]
 408:Src/main.c    **** 
 671              		.loc 1 408 3 is_stmt 1 view .LVU233
 672 0028 134C     		ldr	r4, .L30+4
 673 002a 2046     		mov	r0, r4
 674              	.LVL26:
 408:Src/main.c    **** 
 675              		.loc 1 408 3 is_stmt 0 view .LVU234
 676 002c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 677              	.LVL27:
 410:Src/main.c    ****   HAL_ADC_PollForConversion(&hadc1, 1000);
 678              		.loc 1 410 3 is_stmt 1 view .LVU235
 679 0030 2046     		mov	r0, r4
 680 0032 FFF7FEFF 		bl	HAL_ADC_Start
 681              	.LVL28:
 411:Src/main.c    ****   return HAL_ADC_GetValue(&hadc1);
 682              		.loc 1 411 3 view .LVU236
 683 0036 4FF47A71 		mov	r1, #1000
 684 003a 2046     		mov	r0, r4
 685 003c FFF7FEFF 		bl	HAL_ADC_PollForConversion
 686              	.LVL29:
 412:Src/main.c    ****   //HAL_ADC_Stop(&hadc1);
 687              		.loc 1 412 3 view .LVU237
 412:Src/main.c    ****   //HAL_ADC_Stop(&hadc1);
 688              		.loc 1 412 10 is_stmt 0 view .LVU238
 689 0040 2046     		mov	r0, r4
 690 0042 FFF7FEFF 		bl	HAL_ADC_GetValue
 691              	.LVL30:
 433:Src/main.c    **** 
 692              		.loc 1 433 1 view .LVU239
 693 0046 80B2     		uxth	r0, r0
 694 0048 10BD     		pop	{r4, pc}
 695              	.LVL31:
 696              	.L25:
 396:Src/main.c    ****   if (channel == BRAKE_PRESSURE_1_ADC_CHANNEL) //brake pressure 1
 697              		.loc 1 396 5 is_stmt 1 view .LVU240
 396:Src/main.c    ****   if (channel == BRAKE_PRESSURE_1_ADC_CHANNEL) //brake pressure 1
 698              		.loc 1 396 21 is_stmt 0 view .LVU241
 699 004a 0A4A     		ldr	r2, .L30
 700 004c 0121     		movs	r1, #1
 701 004e 1160     		str	r1, [r2]
 702 0050 DEE7     		b	.L19
 703              	.L26:
ARM GAS  /tmp/ccbYAz4J.s 			page 30


 398:Src/main.c    ****   if (channel == BRAKE_PRESSURE_2_ADC_CHANNEL) //brake pressure 2
 704              		.loc 1 398 5 is_stmt 1 view .LVU242
 398:Src/main.c    ****   if (channel == BRAKE_PRESSURE_2_ADC_CHANNEL) //brake pressure 2
 705              		.loc 1 398 21 is_stmt 0 view .LVU243
 706 0052 084A     		ldr	r2, .L30
 707 0054 0321     		movs	r1, #3
 708 0056 1160     		str	r1, [r2]
 709 0058 DCE7     		b	.L20
 710              	.L27:
 400:Src/main.c    ****   if (channel == THROTTLE_A_ADC_CHANNEL) //throttle A
 711              		.loc 1 400 5 is_stmt 1 view .LVU244
 400:Src/main.c    ****   if (channel == THROTTLE_A_ADC_CHANNEL) //throttle A
 712              		.loc 1 400 21 is_stmt 0 view .LVU245
 713 005a 064A     		ldr	r2, .L30
 714 005c 0221     		movs	r1, #2
 715 005e 1160     		str	r1, [r2]
 716 0060 DAE7     		b	.L21
 717              	.L28:
 402:Src/main.c    ****   if (channel == THROTTLE_B_ADC_CHANNEL) //throttle B 
 718              		.loc 1 402 5 is_stmt 1 view .LVU246
 402:Src/main.c    ****   if (channel == THROTTLE_B_ADC_CHANNEL) //throttle B 
 719              		.loc 1 402 21 is_stmt 0 view .LVU247
 720 0062 044A     		ldr	r2, .L30
 721 0064 0821     		movs	r1, #8
 722 0066 1160     		str	r1, [r2]
 723 0068 D8E7     		b	.L22
 724              	.L29:
 404:Src/main.c    **** 
 725              		.loc 1 404 5 is_stmt 1 view .LVU248
 404:Src/main.c    **** 
 726              		.loc 1 404 21 is_stmt 0 view .LVU249
 727 006a 024B     		ldr	r3, .L30
 728 006c 0922     		movs	r2, #9
 729 006e 1A60     		str	r2, [r3]
 730 0070 D6E7     		b	.L23
 731              	.L31:
 732 0072 00BF     		.align	2
 733              	.L30:
 734 0074 00000000 		.word	.LANCHOR0
 735 0078 00000000 		.word	hadc1
 736              		.cfi_endproc
 737              	.LFE69:
 739              		.section	.text.checkBTSF,"ax",%progbits
 740              		.align	1
 741              		.global	checkBTSF
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu softvfp
 747              	checkBTSF:
 748              	.LFB68:
 361:Src/main.c    ****   brakePressure_2 = updateADC(BRAKE_PRESSURE_2_ADC_CHANNEL);
 749              		.loc 1 361 17 is_stmt 1 view -0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccbYAz4J.s 			page 31


 754              	.LCFI7:
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 3, -8
 757              		.cfi_offset 14, -4
 362:Src/main.c    ****   throttle_A = updateADC(THROTTLE_A_ADC_CHANNEL); 
 758              		.loc 1 362 3 view .LVU251
 362:Src/main.c    ****   throttle_A = updateADC(THROTTLE_A_ADC_CHANNEL); 
 759              		.loc 1 362 21 is_stmt 0 view .LVU252
 760 0002 0220     		movs	r0, #2
 761 0004 FFF7FEFF 		bl	updateADC
 762              	.LVL32:
 362:Src/main.c    ****   throttle_A = updateADC(THROTTLE_A_ADC_CHANNEL); 
 763              		.loc 1 362 19 view .LVU253
 764 0008 0F4B     		ldr	r3, .L37
 765 000a 1880     		strh	r0, [r3]	@ movhi
 363:Src/main.c    ****   
 766              		.loc 1 363 3 is_stmt 1 view .LVU254
 363:Src/main.c    ****   
 767              		.loc 1 363 16 is_stmt 0 view .LVU255
 768 000c 0820     		movs	r0, #8
 769 000e FFF7FEFF 		bl	updateADC
 770              	.LVL33:
 771 0012 0346     		mov	r3, r0
 363:Src/main.c    ****   
 772              		.loc 1 363 14 view .LVU256
 773 0014 0D4A     		ldr	r2, .L37+4
 774 0016 1080     		strh	r0, [r2]	@ movhi
 365:Src/main.c    ****   {
 775              		.loc 1 365 3 is_stmt 1 view .LVU257
 365:Src/main.c    ****   {
 776              		.loc 1 365 6 is_stmt 0 view .LVU258
 777 0018 0D4A     		ldr	r2, .L37+8
 778 001a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 365:Src/main.c    ****   {
 779              		.loc 1 365 5 view .LVU259
 780 001c 28B1     		cbz	r0, .L33
 367:Src/main.c    ****     {
 781              		.loc 1 367 5 is_stmt 1 view .LVU260
 367:Src/main.c    ****     {
 782              		.loc 1 367 7 is_stmt 0 view .LVU261
 783 001e B3F5127F 		cmp	r3, #584
 784 0022 0FD8     		bhi	.L35
 369:Src/main.c    ****       //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 785              		.loc 1 369 7 is_stmt 1 view .LVU262
 369:Src/main.c    ****       //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 786              		.loc 1 369 19 is_stmt 0 view .LVU263
 787 0024 0020     		movs	r0, #0
 788 0026 1070     		strb	r0, [r2]
 371:Src/main.c    ****     }
 789              		.loc 1 371 7 is_stmt 1 view .LVU264
 790              	.L34:
 384:Src/main.c    **** 
 791              		.loc 1 384 1 is_stmt 0 view .LVU265
 792 0028 08BD     		pop	{r3, pc}
 793              	.L33:
 376:Src/main.c    ****        //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 794              		.loc 1 376 3 is_stmt 1 view .LVU266
ARM GAS  /tmp/ccbYAz4J.s 			page 32


 376:Src/main.c    ****        //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 795              		.loc 1 376 23 is_stmt 0 view .LVU267
 796 002a 074A     		ldr	r2, .L37
 797 002c 1288     		ldrh	r2, [r2]
 376:Src/main.c    ****        //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 798              		.loc 1 376 5 view .LVU268
 799 002e B2F5FA6F 		cmp	r2, #2000
 800 0032 F9D9     		bls	.L34
 376:Src/main.c    ****        //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 801              		.loc 1 376 41 discriminator 1 view .LVU269
 802 0034 B3F56D7F 		cmp	r3, #948
 803 0038 F6D3     		bcc	.L34
 378:Src/main.c    ****        return 1;
 804              		.loc 1 378 8 is_stmt 1 view .LVU270
 378:Src/main.c    ****        return 1;
 805              		.loc 1 378 20 is_stmt 0 view .LVU271
 806 003a 054B     		ldr	r3, .L37+8
 807 003c FF22     		movs	r2, #255
 808 003e 1A70     		strb	r2, [r3]
 379:Src/main.c    ****   }
 809              		.loc 1 379 8 is_stmt 1 view .LVU272
 379:Src/main.c    ****   }
 810              		.loc 1 379 15 is_stmt 0 view .LVU273
 811 0040 0120     		movs	r0, #1
 812 0042 F1E7     		b	.L34
 813              	.L35:
 373:Src/main.c    ****   }
 814              		.loc 1 373 12 view .LVU274
 815 0044 0120     		movs	r0, #1
 816 0046 EFE7     		b	.L34
 817              	.L38:
 818              		.align	2
 819              	.L37:
 820 0048 00000000 		.word	brakePressure_2
 821 004c 00000000 		.word	throttle_A
 822 0050 00000000 		.word	.LANCHOR1
 823              		.cfi_endproc
 824              	.LFE68:
 826              		.section	.text.APPS_Diff,"ax",%progbits
 827              		.align	1
 828              		.global	APPS_Diff
 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 832              		.fpu softvfp
 834              	APPS_Diff:
 835              	.LFB70:
 443:Src/main.c    **** 
 836              		.loc 1 443 17 is_stmt 1 view -0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 450:Src/main.c    ****     return 1;
 841              		.loc 1 450 3 view .LVU276
 450:Src/main.c    ****     return 1;
 842              		.loc 1 450 21 is_stmt 0 view .LVU277
ARM GAS  /tmp/ccbYAz4J.s 			page 33


 843 0000 074B     		ldr	r3, .L42
 844 0002 1B88     		ldrh	r3, [r3]
 845 0004 074A     		ldr	r2, .L42+4
 846 0006 1288     		ldrh	r2, [r2]
 847 0008 9B1A     		subs	r3, r3, r2
 450:Src/main.c    ****     return 1;
 848              		.loc 1 450 6 view .LVU278
 849 000a 002B     		cmp	r3, #0
 850 000c B8BF     		it	lt
 851 000e 5B42     		rsblt	r3, r3, #0
 450:Src/main.c    ****     return 1;
 852              		.loc 1 450 5 view .LVU279
 853 0010 B3F5167F 		cmp	r3, #600
 854 0014 01DD     		ble	.L41
 451:Src/main.c    ****   }
 855              		.loc 1 451 12 view .LVU280
 856 0016 0120     		movs	r0, #1
 857 0018 7047     		bx	lr
 858              	.L41:
 453:Src/main.c    **** 
 859              		.loc 1 453 15 view .LVU281
 860 001a 0020     		movs	r0, #0
 468:Src/main.c    **** void sendFaultMsg(){
 861              		.loc 1 468 1 view .LVU282
 862 001c 7047     		bx	lr
 863              	.L43:
 864 001e 00BF     		.align	2
 865              	.L42:
 866 0020 00000000 		.word	throttle_A
 867 0024 00000000 		.word	throttle_B
 868              		.cfi_endproc
 869              	.LFE70:
 871              		.section	.text.checkAPPS,"ax",%progbits
 872              		.align	1
 873              		.global	checkAPPS
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu softvfp
 879              	checkAPPS:
 880              	.LFB67:
 327:Src/main.c    **** 
 881              		.loc 1 327 17 is_stmt 1 view -0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885 0000 08B5     		push	{r3, lr}
 886              	.LCFI8:
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 3, -8
 889              		.cfi_offset 14, -4
 329:Src/main.c    ****   throttle_B = updateADC(THROTTLE_B_ADC_CHANNEL); 
 890              		.loc 1 329 3 view .LVU284
 329:Src/main.c    ****   throttle_B = updateADC(THROTTLE_B_ADC_CHANNEL); 
 891              		.loc 1 329 16 is_stmt 0 view .LVU285
 892 0002 0820     		movs	r0, #8
 893 0004 FFF7FEFF 		bl	updateADC
ARM GAS  /tmp/ccbYAz4J.s 			page 34


 894              	.LVL34:
 329:Src/main.c    ****   throttle_B = updateADC(THROTTLE_B_ADC_CHANNEL); 
 895              		.loc 1 329 14 view .LVU286
 896 0008 094B     		ldr	r3, .L49
 897 000a 1880     		strh	r0, [r3]	@ movhi
 330:Src/main.c    **** 
 898              		.loc 1 330 3 is_stmt 1 view .LVU287
 330:Src/main.c    **** 
 899              		.loc 1 330 16 is_stmt 0 view .LVU288
 900 000c 0920     		movs	r0, #9
 901 000e FFF7FEFF 		bl	updateADC
 902              	.LVL35:
 330:Src/main.c    **** 
 903              		.loc 1 330 14 view .LVU289
 904 0012 084B     		ldr	r3, .L49+4
 905 0014 1880     		strh	r0, [r3]	@ movhi
 342:Src/main.c    ****    millisTimer = 100;
 906              		.loc 1 342 3 is_stmt 1 view .LVU290
 342:Src/main.c    ****    millisTimer = 100;
 907              		.loc 1 342 6 is_stmt 0 view .LVU291
 908 0016 FFF7FEFF 		bl	APPS_Diff
 909              	.LVL36:
 342:Src/main.c    ****    millisTimer = 100;
 910              		.loc 1 342 5 view .LVU292
 911 001a 10B9     		cbnz	r0, .L45
 343:Src/main.c    ****    //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 912              		.loc 1 343 4 is_stmt 1 view .LVU293
 343:Src/main.c    ****    //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 913              		.loc 1 343 16 is_stmt 0 view .LVU294
 914 001c 064B     		ldr	r3, .L49+8
 915 001e 6422     		movs	r2, #100
 916 0020 1A60     		str	r2, [r3]
 917              	.L45:
 348:Src/main.c    ****     //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 918              		.loc 1 348 3 is_stmt 1 view .LVU295
 348:Src/main.c    ****     //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 919              		.loc 1 348 18 is_stmt 0 view .LVU296
 920 0022 054B     		ldr	r3, .L49+8
 921 0024 1B68     		ldr	r3, [r3]
 348:Src/main.c    ****     //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 922              		.loc 1 348 5 view .LVU297
 923 0026 0BB1     		cbz	r3, .L47
 352:Src/main.c    **** 
 924              		.loc 1 352 10 view .LVU298
 925 0028 0020     		movs	r0, #0
 926              	.L46:
 354:Src/main.c    **** 
 927              		.loc 1 354 1 view .LVU299
 928 002a 08BD     		pop	{r3, pc}
 929              	.L47:
 350:Src/main.c    ****   }
 930              		.loc 1 350 12 view .LVU300
 931 002c 0120     		movs	r0, #1
 932 002e FCE7     		b	.L46
 933              	.L50:
 934              		.align	2
 935              	.L49:
ARM GAS  /tmp/ccbYAz4J.s 			page 35


 936 0030 00000000 		.word	throttle_A
 937 0034 00000000 		.word	throttle_B
 938 0038 00000000 		.word	millisTimer
 939              		.cfi_endproc
 940              	.LFE67:
 942              		.section	.text.sendFaultMsg,"ax",%progbits
 943              		.align	1
 944              		.global	sendFaultMsg
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 948              		.fpu softvfp
 950              	sendFaultMsg:
 951              	.LFB71:
 469:Src/main.c    ****   TxFault_data[0] = bms;  //Set all the data (faults) to their current values
 952              		.loc 1 469 20 is_stmt 1 view -0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956 0000 08B5     		push	{r3, lr}
 957              	.LCFI9:
 958              		.cfi_def_cfa_offset 8
 959              		.cfi_offset 3, -8
 960              		.cfi_offset 14, -4
 470:Src/main.c    ****   TxFault_data[1] = imd;
 961              		.loc 1 470 3 view .LVU302
 470:Src/main.c    ****   TxFault_data[1] = imd;
 962              		.loc 1 470 19 is_stmt 0 view .LVU303
 963 0002 094A     		ldr	r2, .L53
 964 0004 094B     		ldr	r3, .L53+4
 965 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 966 0008 1370     		strb	r3, [r2]
 471:Src/main.c    ****   TxFault_data[2] = bspd;
 967              		.loc 1 471 3 is_stmt 1 view .LVU304
 471:Src/main.c    ****   TxFault_data[2] = bspd;
 968              		.loc 1 471 19 is_stmt 0 view .LVU305
 969 000a 094B     		ldr	r3, .L53+8
 970 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971 000e 5370     		strb	r3, [r2, #1]
 472:Src/main.c    ****   TxFault_data[3] = apps;
 972              		.loc 1 472 3 is_stmt 1 view .LVU306
 472:Src/main.c    ****   TxFault_data[3] = apps;
 973              		.loc 1 472 19 is_stmt 0 view .LVU307
 974 0010 084B     		ldr	r3, .L53+12
 975 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 976 0014 9370     		strb	r3, [r2, #2]
 473:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxFaults, TxFault_data, &TxFaultsMailbox);
 977              		.loc 1 473 3 is_stmt 1 view .LVU308
 473:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxFaults, TxFault_data, &TxFaultsMailbox);
 978              		.loc 1 473 19 is_stmt 0 view .LVU309
 979 0016 084B     		ldr	r3, .L53+16
 980 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 981 001a D370     		strb	r3, [r2, #3]
 474:Src/main.c    **** }
 982              		.loc 1 474 3 is_stmt 1 view .LVU310
 983 001c 074B     		ldr	r3, .L53+20
 984 001e 0849     		ldr	r1, .L53+24
ARM GAS  /tmp/ccbYAz4J.s 			page 36


 985 0020 0848     		ldr	r0, .L53+28
 986 0022 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 987              	.LVL37:
 475:Src/main.c    **** 
 988              		.loc 1 475 1 is_stmt 0 view .LVU311
 989 0026 08BD     		pop	{r3, pc}
 990              	.L54:
 991              		.align	2
 992              	.L53:
 993 0028 00000000 		.word	.LANCHOR2
 994 002c 00000000 		.word	bms
 995 0030 00000000 		.word	imd
 996 0034 00000000 		.word	bspd
 997 0038 00000000 		.word	apps
 998 003c 00000000 		.word	TxFaultsMailbox
 999 0040 00000000 		.word	TxFaults
 1000 0044 00000000 		.word	hcan
 1001              		.cfi_endproc
 1002              	.LFE71:
 1004              		.section	.text.sendCar_state,"ax",%progbits
 1005              		.align	1
 1006              		.global	sendCar_state
 1007              		.syntax unified
 1008              		.thumb
 1009              		.thumb_func
 1010              		.fpu softvfp
 1012              	sendCar_state:
 1013              	.LFB72:
 477:Src/main.c    ****   HAL_CAN_AddTxMessage(&hcan, &TxCar_state,TxCar_state_data, &TxCar_stateMailbox);
 1014              		.loc 1 477 21 is_stmt 1 view -0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 0
 1017              		@ frame_needed = 0, uses_anonymous_args = 0
 1018 0000 08B5     		push	{r3, lr}
 1019              	.LCFI10:
 1020              		.cfi_def_cfa_offset 8
 1021              		.cfi_offset 3, -8
 1022              		.cfi_offset 14, -4
 478:Src/main.c    **** }
 1023              		.loc 1 478 3 view .LVU313
 1024 0002 034B     		ldr	r3, .L57
 1025 0004 034A     		ldr	r2, .L57+4
 1026 0006 0449     		ldr	r1, .L57+8
 1027 0008 0448     		ldr	r0, .L57+12
 1028 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1029              	.LVL38:
 479:Src/main.c    **** 
 1030              		.loc 1 479 1 is_stmt 0 view .LVU314
 1031 000e 08BD     		pop	{r3, pc}
 1032              	.L58:
 1033              		.align	2
 1034              	.L57:
 1035 0010 00000000 		.word	TxCar_stateMailbox
 1036 0014 00000000 		.word	.LANCHOR3
 1037 0018 00000000 		.word	TxCar_state
 1038 001c 00000000 		.word	hcan
 1039              		.cfi_endproc
ARM GAS  /tmp/ccbYAz4J.s 			page 37


 1040              	.LFE72:
 1042              		.section	.text.car_state_machine,"ax",%progbits
 1043              		.align	1
 1044              		.global	car_state_machine
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1048              		.fpu softvfp
 1050              	car_state_machine:
 1051              	.LVL39:
 1052              	.LFB73:
 482:Src/main.c    ****   if(STATE > TxCar_state_data[0])
 1053              		.loc 1 482 1 is_stmt 1 view -0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              		@ link register save eliminated.
 483:Src/main.c    ****   {
 1058              		.loc 1 483 3 view .LVU316
 483:Src/main.c    ****   {
 1059              		.loc 1 483 30 is_stmt 0 view .LVU317
 1060 0000 034B     		ldr	r3, .L61
 1061 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 483:Src/main.c    ****   {
 1062              		.loc 1 483 5 view .LVU318
 1063 0004 8342     		cmp	r3, r0
 1064 0006 01D2     		bcs	.L59
 485:Src/main.c    ****   }
 1065              		.loc 1 485 5 is_stmt 1 view .LVU319
 485:Src/main.c    ****   }
 1066              		.loc 1 485 25 is_stmt 0 view .LVU320
 1067 0008 014B     		ldr	r3, .L61
 1068 000a 1870     		strb	r0, [r3]
 1069              	.L59:
 487:Src/main.c    **** 
 1070              		.loc 1 487 1 view .LVU321
 1071 000c 7047     		bx	lr
 1072              	.L62:
 1073 000e 00BF     		.align	2
 1074              	.L61:
 1075 0010 00000000 		.word	.LANCHOR3
 1076              		.cfi_endproc
 1077              	.LFE73:
 1079              		.section	.text.readFaults,"ax",%progbits
 1080              		.align	1
 1081              		.global	readFaults
 1082              		.syntax unified
 1083              		.thumb
 1084              		.thumb_func
 1085              		.fpu softvfp
 1087              	readFaults:
 1088              	.LFB74:
 489:Src/main.c    ****   if (HAL_GPIO_ReadPin(GPIOD, FAULT_BSPD_STATUS_Pin) == GPIO_PIN_SET)
 1089              		.loc 1 489 18 is_stmt 1 view -0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccbYAz4J.s 			page 38


 1093 0000 08B5     		push	{r3, lr}
 1094              	.LCFI11:
 1095              		.cfi_def_cfa_offset 8
 1096              		.cfi_offset 3, -8
 1097              		.cfi_offset 14, -4
 490:Src/main.c    ****     bspd = FAULT_ACTIVE;
 1098              		.loc 1 490 3 view .LVU323
 490:Src/main.c    ****     bspd = FAULT_ACTIVE;
 1099              		.loc 1 490 7 is_stmt 0 view .LVU324
 1100 0002 0121     		movs	r1, #1
 1101 0004 1B48     		ldr	r0, .L76
 1102 0006 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1103              	.LVL40:
 490:Src/main.c    ****     bspd = FAULT_ACTIVE;
 1104              		.loc 1 490 6 view .LVU325
 1105 000a 0128     		cmp	r0, #1
 1106 000c 25D0     		beq	.L73
 492:Src/main.c    ****   
 1107              		.loc 1 492 8 is_stmt 1 view .LVU326
 492:Src/main.c    ****   
 1108              		.loc 1 492 13 is_stmt 0 view .LVU327
 1109 000e 1A4B     		ldr	r3, .L76+4
 1110 0010 0022     		movs	r2, #0
 1111 0012 1A70     		strb	r2, [r3]
 1112              	.L65:
 494:Src/main.c    ****     imd = FAULT_ACTIVE;
 1113              		.loc 1 494 3 is_stmt 1 view .LVU328
 494:Src/main.c    ****     imd = FAULT_ACTIVE;
 1114              		.loc 1 494 7 is_stmt 0 view .LVU329
 1115 0014 4FF48041 		mov	r1, #16384
 1116 0018 1848     		ldr	r0, .L76+8
 1117 001a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1118              	.LVL41:
 494:Src/main.c    ****     imd = FAULT_ACTIVE;
 1119              		.loc 1 494 6 view .LVU330
 1120 001e 0128     		cmp	r0, #1
 1121 0020 1FD0     		beq	.L74
 496:Src/main.c    ****   
 1122              		.loc 1 496 8 is_stmt 1 view .LVU331
 496:Src/main.c    ****   
 1123              		.loc 1 496 12 is_stmt 0 view .LVU332
 1124 0022 174B     		ldr	r3, .L76+12
 1125 0024 0022     		movs	r2, #0
 1126 0026 1A70     		strb	r2, [r3]
 1127              	.L67:
 498:Src/main.c    ****     bms = FAULT_ACTIVE;
 1128              		.loc 1 498 3 is_stmt 1 view .LVU333
 498:Src/main.c    ****     bms = FAULT_ACTIVE;
 1129              		.loc 1 498 7 is_stmt 0 view .LVU334
 1130 0028 4FF40041 		mov	r1, #32768
 1131 002c 1348     		ldr	r0, .L76+8
 1132 002e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1133              	.LVL42:
 498:Src/main.c    ****     bms = FAULT_ACTIVE;
 1134              		.loc 1 498 6 view .LVU335
 1135 0032 0128     		cmp	r0, #1
 1136 0034 19D0     		beq	.L75
ARM GAS  /tmp/ccbYAz4J.s 			page 39


 500:Src/main.c    **** 
 1137              		.loc 1 500 8 is_stmt 1 view .LVU336
 500:Src/main.c    **** 
 1138              		.loc 1 500 12 is_stmt 0 view .LVU337
 1139 0036 134B     		ldr	r3, .L76+16
 1140 0038 0022     		movs	r2, #0
 1141 003a 1A70     		strb	r2, [r3]
 1142              	.L69:
 502:Src/main.c    ****     TxCar_state_data[0] = LV_ON;
 1143              		.loc 1 502 3 is_stmt 1 view .LVU338
 502:Src/main.c    ****     TxCar_state_data[0] = LV_ON;
 1144              		.loc 1 502 6 is_stmt 0 view .LVU339
 1145 003c 114B     		ldr	r3, .L76+16
 1146 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 502:Src/main.c    ****     TxCar_state_data[0] = LV_ON;
 1147              		.loc 1 502 5 view .LVU340
 1148 0040 13B9     		cbnz	r3, .L70
 502:Src/main.c    ****     TxCar_state_data[0] = LV_ON;
 1149              		.loc 1 502 10 discriminator 1 view .LVU341
 1150 0042 0F4B     		ldr	r3, .L76+12
 1151 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 0046 3BB1     		cbz	r3, .L63
 1153              	.L70:
 503:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, RTD_EN_Pin | RTDS_EN_Pin, GPIO_PIN_RESET);
 1154              		.loc 1 503 5 is_stmt 1 view .LVU342
 503:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, RTD_EN_Pin | RTDS_EN_Pin, GPIO_PIN_RESET);
 1155              		.loc 1 503 25 is_stmt 0 view .LVU343
 1156 0048 0F4B     		ldr	r3, .L76+20
 1157 004a 0122     		movs	r2, #1
 1158 004c 1A70     		strb	r2, [r3]
 504:Src/main.c    ****   }
 1159              		.loc 1 504 5 is_stmt 1 view .LVU344
 1160 004e 0022     		movs	r2, #0
 1161 0050 2821     		movs	r1, #40
 1162 0052 0E48     		ldr	r0, .L76+24
 1163 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1164              	.LVL43:
 1165              	.L63:
 507:Src/main.c    **** 
 1166              		.loc 1 507 1 is_stmt 0 view .LVU345
 1167 0058 08BD     		pop	{r3, pc}
 1168              	.L73:
 491:Src/main.c    ****   else bspd = FAULT_INACTIVE;
 1169              		.loc 1 491 5 is_stmt 1 view .LVU346
 491:Src/main.c    ****   else bspd = FAULT_INACTIVE;
 1170              		.loc 1 491 10 is_stmt 0 view .LVU347
 1171 005a 074B     		ldr	r3, .L76+4
 1172 005c FF22     		movs	r2, #255
 1173 005e 1A70     		strb	r2, [r3]
 1174 0060 D8E7     		b	.L65
 1175              	.L74:
 495:Src/main.c    ****   else imd = FAULT_INACTIVE;
 1176              		.loc 1 495 5 is_stmt 1 view .LVU348
 495:Src/main.c    ****   else imd = FAULT_INACTIVE;
 1177              		.loc 1 495 9 is_stmt 0 view .LVU349
 1178 0062 074B     		ldr	r3, .L76+12
 1179 0064 FF22     		movs	r2, #255
ARM GAS  /tmp/ccbYAz4J.s 			page 40


 1180 0066 1A70     		strb	r2, [r3]
 1181 0068 DEE7     		b	.L67
 1182              	.L75:
 499:Src/main.c    ****   else bms = FAULT_INACTIVE;
 1183              		.loc 1 499 5 is_stmt 1 view .LVU350
 499:Src/main.c    ****   else bms = FAULT_INACTIVE;
 1184              		.loc 1 499 9 is_stmt 0 view .LVU351
 1185 006a 064B     		ldr	r3, .L76+16
 1186 006c FF22     		movs	r2, #255
 1187 006e 1A70     		strb	r2, [r3]
 1188 0070 E4E7     		b	.L69
 1189              	.L77:
 1190 0072 00BF     		.align	2
 1191              	.L76:
 1192 0074 00140140 		.word	1073812480
 1193 0078 00000000 		.word	bspd
 1194 007c 00100140 		.word	1073811456
 1195 0080 00000000 		.word	imd
 1196 0084 00000000 		.word	bms
 1197 0088 00000000 		.word	.LANCHOR3
 1198 008c 000C0140 		.word	1073810432
 1199              		.cfi_endproc
 1200              	.LFE74:
 1202              		.section	.text.SystemClock_Config,"ax",%progbits
 1203              		.align	1
 1204              		.global	SystemClock_Config
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1208              		.fpu softvfp
 1210              	SystemClock_Config:
 1211              	.LFB75:
 518:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1212              		.loc 1 518 1 is_stmt 1 view -0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 80
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216 0000 30B5     		push	{r4, r5, lr}
 1217              	.LCFI12:
 1218              		.cfi_def_cfa_offset 12
 1219              		.cfi_offset 4, -12
 1220              		.cfi_offset 5, -8
 1221              		.cfi_offset 14, -4
 1222 0002 95B0     		sub	sp, sp, #84
 1223              	.LCFI13:
 1224              		.cfi_def_cfa_offset 96
 519:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1225              		.loc 1 519 3 view .LVU353
 519:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1226              		.loc 1 519 22 is_stmt 0 view .LVU354
 1227 0004 2422     		movs	r2, #36
 1228 0006 0021     		movs	r1, #0
 1229 0008 0BA8     		add	r0, sp, #44
 1230 000a FFF7FEFF 		bl	memset
 1231              	.LVL44:
 520:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1232              		.loc 1 520 3 is_stmt 1 view .LVU355
ARM GAS  /tmp/ccbYAz4J.s 			page 41


 520:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1233              		.loc 1 520 22 is_stmt 0 view .LVU356
 1234 000e 0024     		movs	r4, #0
 1235 0010 0594     		str	r4, [sp, #20]
 1236 0012 0694     		str	r4, [sp, #24]
 1237 0014 0794     		str	r4, [sp, #28]
 1238 0016 0894     		str	r4, [sp, #32]
 1239 0018 0994     		str	r4, [sp, #36]
 521:Src/main.c    **** 
 1240              		.loc 1 521 3 is_stmt 1 view .LVU357
 521:Src/main.c    **** 
 1241              		.loc 1 521 28 is_stmt 0 view .LVU358
 1242 001a 0194     		str	r4, [sp, #4]
 1243 001c 0294     		str	r4, [sp, #8]
 1244 001e 0394     		str	r4, [sp, #12]
 1245 0020 0494     		str	r4, [sp, #16]
 525:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1246              		.loc 1 525 3 is_stmt 1 view .LVU359
 525:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1247              		.loc 1 525 36 is_stmt 0 view .LVU360
 1248 0022 0225     		movs	r5, #2
 1249 0024 0A95     		str	r5, [sp, #40]
 526:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1250              		.loc 1 526 3 is_stmt 1 view .LVU361
 526:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1251              		.loc 1 526 30 is_stmt 0 view .LVU362
 1252 0026 0123     		movs	r3, #1
 1253 0028 0E93     		str	r3, [sp, #56]
 527:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1254              		.loc 1 527 3 is_stmt 1 view .LVU363
 527:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1255              		.loc 1 527 41 is_stmt 0 view .LVU364
 1256 002a 1023     		movs	r3, #16
 1257 002c 0F93     		str	r3, [sp, #60]
 528:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1258              		.loc 1 528 3 is_stmt 1 view .LVU365
 529:Src/main.c    ****   {
 1259              		.loc 1 529 3 view .LVU366
 529:Src/main.c    ****   {
 1260              		.loc 1 529 7 is_stmt 0 view .LVU367
 1261 002e 0AA8     		add	r0, sp, #40
 1262 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1263              	.LVL45:
 535:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1264              		.loc 1 535 3 is_stmt 1 view .LVU368
 535:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1265              		.loc 1 535 31 is_stmt 0 view .LVU369
 1266 0034 0F23     		movs	r3, #15
 1267 0036 0593     		str	r3, [sp, #20]
 537:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1268              		.loc 1 537 3 is_stmt 1 view .LVU370
 537:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1269              		.loc 1 537 34 is_stmt 0 view .LVU371
 1270 0038 0694     		str	r4, [sp, #24]
 538:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1271              		.loc 1 538 3 is_stmt 1 view .LVU372
 538:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccbYAz4J.s 			page 42


 1272              		.loc 1 538 35 is_stmt 0 view .LVU373
 1273 003a 0794     		str	r4, [sp, #28]
 539:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1274              		.loc 1 539 3 is_stmt 1 view .LVU374
 539:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1275              		.loc 1 539 36 is_stmt 0 view .LVU375
 1276 003c 0894     		str	r4, [sp, #32]
 540:Src/main.c    **** 
 1277              		.loc 1 540 3 is_stmt 1 view .LVU376
 540:Src/main.c    **** 
 1278              		.loc 1 540 36 is_stmt 0 view .LVU377
 1279 003e 0994     		str	r4, [sp, #36]
 542:Src/main.c    ****   {
 1280              		.loc 1 542 3 is_stmt 1 view .LVU378
 542:Src/main.c    ****   {
 1281              		.loc 1 542 7 is_stmt 0 view .LVU379
 1282 0040 2146     		mov	r1, r4
 1283 0042 05A8     		add	r0, sp, #20
 1284 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1285              	.LVL46:
 546:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 1286              		.loc 1 546 3 is_stmt 1 view .LVU380
 546:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 1287              		.loc 1 546 38 is_stmt 0 view .LVU381
 1288 0048 0195     		str	r5, [sp, #4]
 547:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1289              		.loc 1 547 3 is_stmt 1 view .LVU382
 547:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1290              		.loc 1 547 35 is_stmt 0 view .LVU383
 1291 004a 0394     		str	r4, [sp, #12]
 548:Src/main.c    ****   {
 1292              		.loc 1 548 3 is_stmt 1 view .LVU384
 548:Src/main.c    ****   {
 1293              		.loc 1 548 7 is_stmt 0 view .LVU385
 1294 004c 01A8     		add	r0, sp, #4
 1295 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1296              	.LVL47:
 552:Src/main.c    **** 
 1297              		.loc 1 552 1 view .LVU386
 1298 0052 15B0     		add	sp, sp, #84
 1299              	.LCFI14:
 1300              		.cfi_def_cfa_offset 12
 1301              		@ sp needed
 1302 0054 30BD     		pop	{r4, r5, pc}
 1303              		.cfi_endproc
 1304              	.LFE75:
 1306              		.section	.text.main,"ax",%progbits
 1307              		.align	1
 1308              		.global	main
 1309              		.syntax unified
 1310              		.thumb
 1311              		.thumb_func
 1312              		.fpu softvfp
 1314              	main:
 1315              	.LFB66:
 189:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1316              		.loc 1 189 1 is_stmt 1 view -0
ARM GAS  /tmp/ccbYAz4J.s 			page 43


 1317              		.cfi_startproc
 1318              		@ Volatile: function does not return.
 1319              		@ args = 0, pretend = 0, frame = 0
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 1321 0000 08B5     		push	{r3, lr}
 1322              	.LCFI15:
 1323              		.cfi_def_cfa_offset 8
 1324              		.cfi_offset 3, -8
 1325              		.cfi_offset 14, -4
 196:Src/main.c    ****   RTDS_Timer = 2500; //3 seconds
 1326              		.loc 1 196 3 view .LVU388
 196:Src/main.c    ****   RTDS_Timer = 2500; //3 seconds
 1327              		.loc 1 196 15 is_stmt 0 view .LVU389
 1328 0002 674B     		ldr	r3, .L99
 1329 0004 6422     		movs	r2, #100
 1330 0006 1A60     		str	r2, [r3]
 197:Src/main.c    ****   CAN_Timer = 1000; //timer to send message every second
 1331              		.loc 1 197 3 is_stmt 1 view .LVU390
 197:Src/main.c    ****   CAN_Timer = 1000; //timer to send message every second
 1332              		.loc 1 197 14 is_stmt 0 view .LVU391
 1333 0008 664B     		ldr	r3, .L99+4
 1334 000a 40F6C412 		movw	r2, #2500
 1335 000e 1A60     		str	r2, [r3]
 198:Src/main.c    **** 
 1336              		.loc 1 198 3 is_stmt 1 view .LVU392
 198:Src/main.c    **** 
 1337              		.loc 1 198 13 is_stmt 0 view .LVU393
 1338 0010 654B     		ldr	r3, .L99+8
 1339 0012 4FF47A72 		mov	r2, #1000
 1340 0016 1A60     		str	r2, [r3]
 205:Src/main.c    **** 
 1341              		.loc 1 205 3 is_stmt 1 view .LVU394
 1342 0018 FFF7FEFF 		bl	HAL_Init
 1343              	.LVL48:
 210:Src/main.c    ****   // Configure the SysTick timer to overflow every 1 ms
 1344              		.loc 1 210 3 view .LVU395
 1345 001c FFF7FEFF 		bl	SystemCoreClockUpdate
 1346              	.LVL49:
 212:Src/main.c    **** 
 1347              		.loc 1 212 3 view .LVU396
 1348 0020 624B     		ldr	r3, .L99+12
 1349 0022 1B68     		ldr	r3, [r3]
 1350 0024 624A     		ldr	r2, .L99+16
 1351 0026 A2FB0323 		umull	r2, r3, r2, r3
 1352 002a 9B09     		lsrs	r3, r3, #6
 1353              	.LVL50:
 1354              	.LBB13:
 1355              	.LBI13:
 1356              		.file 2 "Drivers/CMSIS/Include/core_cm3.h"
   1:Drivers/CMSIS/Include/core_cm3.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm3.h ****  * @file     core_cm3.h
   3:Drivers/CMSIS/Include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm3.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/core_cm3.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccbYAz4J.s 			page 44


   9:Drivers/CMSIS/Include/core_cm3.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm3.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/core_cm3.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm3.h ****    *
  21:Drivers/CMSIS/Include/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/core_cm3.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/core_cm3.h **** 
  34:Drivers/CMSIS/Include/core_cm3.h **** 
  35:Drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm3.h **** #endif
  40:Drivers/CMSIS/Include/core_cm3.h **** 
  41:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm3.h **** 
  44:Drivers/CMSIS/Include/core_cm3.h **** #include <stdint.h>
  45:Drivers/CMSIS/Include/core_cm3.h **** 
  46:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm3.h **** #endif
  49:Drivers/CMSIS/Include/core_cm3.h **** 
  50:Drivers/CMSIS/Include/core_cm3.h **** /**
  51:Drivers/CMSIS/Include/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm3.h **** 
  54:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm3.h **** 
  57:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm3.h ****      Unions are used for effective representation of core registers.
  59:Drivers/CMSIS/Include/core_cm3.h **** 
  60:Drivers/CMSIS/Include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  62:Drivers/CMSIS/Include/core_cm3.h ****  */
  63:Drivers/CMSIS/Include/core_cm3.h **** 
  64:Drivers/CMSIS/Include/core_cm3.h **** 
  65:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
ARM GAS  /tmp/ccbYAz4J.s 			page 45


  66:Drivers/CMSIS/Include/core_cm3.h ****  *                 CMSIS definitions
  67:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm3.h **** /**
  69:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup Cortex_M3
  70:Drivers/CMSIS/Include/core_cm3.h ****   @{
  71:Drivers/CMSIS/Include/core_cm3.h ****  */
  72:Drivers/CMSIS/Include/core_cm3.h **** 
  73:Drivers/CMSIS/Include/core_cm3.h **** /*  CMSIS CM3 definitions */
  74:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm3.h **** 
  79:Drivers/CMSIS/Include/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  80:Drivers/CMSIS/Include/core_cm3.h **** 
  81:Drivers/CMSIS/Include/core_cm3.h **** 
  82:Drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm3.h **** 
  87:Drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  91:Drivers/CMSIS/Include/core_cm3.h **** 
  92:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm3.h **** 
  97:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm3.h **** 
 102:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm3.h **** 
 106:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm3.h **** 
 111:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm3.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 116:Drivers/CMSIS/Include/core_cm3.h **** 
 117:Drivers/CMSIS/Include/core_cm3.h **** #else
 118:Drivers/CMSIS/Include/core_cm3.h ****   #error Unknown compiler
 119:Drivers/CMSIS/Include/core_cm3.h **** #endif
 120:Drivers/CMSIS/Include/core_cm3.h **** 
 121:Drivers/CMSIS/Include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm3.h ****     This core does not support an FPU at all
ARM GAS  /tmp/ccbYAz4J.s 			page 46


 123:Drivers/CMSIS/Include/core_cm3.h **** */
 124:Drivers/CMSIS/Include/core_cm3.h **** #define __FPU_USED       0U
 125:Drivers/CMSIS/Include/core_cm3.h **** 
 126:Drivers/CMSIS/Include/core_cm3.h **** #if defined ( __CC_ARM )
 127:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 128:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 130:Drivers/CMSIS/Include/core_cm3.h **** 
 131:Drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARM_PCS_VFP
 133:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm3.h **** 
 136:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
 137:Drivers/CMSIS/Include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 140:Drivers/CMSIS/Include/core_cm3.h **** 
 141:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
 142:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARMVFP__
 143:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 145:Drivers/CMSIS/Include/core_cm3.h **** 
 146:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
 147:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 148:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 150:Drivers/CMSIS/Include/core_cm3.h **** 
 151:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 152:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __FPU_VFP__
 153:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 155:Drivers/CMSIS/Include/core_cm3.h **** 
 156:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 157:Drivers/CMSIS/Include/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 158:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 160:Drivers/CMSIS/Include/core_cm3.h **** 
 161:Drivers/CMSIS/Include/core_cm3.h **** #endif
 162:Drivers/CMSIS/Include/core_cm3.h **** 
 163:Drivers/CMSIS/Include/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:Drivers/CMSIS/Include/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:Drivers/CMSIS/Include/core_cm3.h **** 
 166:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 167:Drivers/CMSIS/Include/core_cm3.h **** }
 168:Drivers/CMSIS/Include/core_cm3.h **** #endif
 169:Drivers/CMSIS/Include/core_cm3.h **** 
 170:Drivers/CMSIS/Include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 171:Drivers/CMSIS/Include/core_cm3.h **** 
 172:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 173:Drivers/CMSIS/Include/core_cm3.h **** 
 174:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 176:Drivers/CMSIS/Include/core_cm3.h **** 
 177:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 178:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
 179:Drivers/CMSIS/Include/core_cm3.h **** #endif
ARM GAS  /tmp/ccbYAz4J.s 			page 47


 180:Drivers/CMSIS/Include/core_cm3.h **** 
 181:Drivers/CMSIS/Include/core_cm3.h **** /* check device defines and use defaults */
 182:Drivers/CMSIS/Include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 183:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __CM3_REV
 184:Drivers/CMSIS/Include/core_cm3.h ****     #define __CM3_REV               0x0200U
 185:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 186:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 187:Drivers/CMSIS/Include/core_cm3.h **** 
 188:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __MPU_PRESENT
 189:Drivers/CMSIS/Include/core_cm3.h ****     #define __MPU_PRESENT             0U
 190:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 192:Drivers/CMSIS/Include/core_cm3.h **** 
 193:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 194:Drivers/CMSIS/Include/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 195:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 196:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 197:Drivers/CMSIS/Include/core_cm3.h **** 
 198:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 199:Drivers/CMSIS/Include/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 200:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 201:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 202:Drivers/CMSIS/Include/core_cm3.h **** #endif
 203:Drivers/CMSIS/Include/core_cm3.h **** 
 204:Drivers/CMSIS/Include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 205:Drivers/CMSIS/Include/core_cm3.h **** /**
 206:Drivers/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 207:Drivers/CMSIS/Include/core_cm3.h **** 
 208:Drivers/CMSIS/Include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 209:Drivers/CMSIS/Include/core_cm3.h ****     \li to specify the access to peripheral variables.
 210:Drivers/CMSIS/Include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 211:Drivers/CMSIS/Include/core_cm3.h **** */
 212:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 213:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 214:Drivers/CMSIS/Include/core_cm3.h **** #else
 215:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 216:Drivers/CMSIS/Include/core_cm3.h **** #endif
 217:Drivers/CMSIS/Include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 218:Drivers/CMSIS/Include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 219:Drivers/CMSIS/Include/core_cm3.h **** 
 220:Drivers/CMSIS/Include/core_cm3.h **** /* following defines should be used for structure members */
 221:Drivers/CMSIS/Include/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 222:Drivers/CMSIS/Include/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 223:Drivers/CMSIS/Include/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 224:Drivers/CMSIS/Include/core_cm3.h **** 
 225:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group Cortex_M3 */
 226:Drivers/CMSIS/Include/core_cm3.h **** 
 227:Drivers/CMSIS/Include/core_cm3.h **** 
 228:Drivers/CMSIS/Include/core_cm3.h **** 
 229:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
 230:Drivers/CMSIS/Include/core_cm3.h ****  *                 Register Abstraction
 231:Drivers/CMSIS/Include/core_cm3.h ****   Core Register contain:
 232:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register
 233:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Register
 234:Drivers/CMSIS/Include/core_cm3.h ****   - Core SCB Register
 235:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Register
 236:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Register
ARM GAS  /tmp/ccbYAz4J.s 			page 48


 237:Drivers/CMSIS/Include/core_cm3.h ****   - Core MPU Register
 238:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
 239:Drivers/CMSIS/Include/core_cm3.h **** /**
 240:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 241:Drivers/CMSIS/Include/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 242:Drivers/CMSIS/Include/core_cm3.h **** */
 243:Drivers/CMSIS/Include/core_cm3.h **** 
 244:Drivers/CMSIS/Include/core_cm3.h **** /**
 245:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 246:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 247:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Core Register type definitions.
 248:Drivers/CMSIS/Include/core_cm3.h ****   @{
 249:Drivers/CMSIS/Include/core_cm3.h ****  */
 250:Drivers/CMSIS/Include/core_cm3.h **** 
 251:Drivers/CMSIS/Include/core_cm3.h **** /**
 252:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 253:Drivers/CMSIS/Include/core_cm3.h ****  */
 254:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 255:Drivers/CMSIS/Include/core_cm3.h **** {
 256:Drivers/CMSIS/Include/core_cm3.h ****   struct
 257:Drivers/CMSIS/Include/core_cm3.h ****   {
 258:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 259:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 260:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 261:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 262:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 263:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 264:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 265:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 266:Drivers/CMSIS/Include/core_cm3.h **** } APSR_Type;
 267:Drivers/CMSIS/Include/core_cm3.h **** 
 268:Drivers/CMSIS/Include/core_cm3.h **** /* APSR Register Definitions */
 269:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 270:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 271:Drivers/CMSIS/Include/core_cm3.h **** 
 272:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 273:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 274:Drivers/CMSIS/Include/core_cm3.h **** 
 275:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 276:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 277:Drivers/CMSIS/Include/core_cm3.h **** 
 278:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 279:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 280:Drivers/CMSIS/Include/core_cm3.h **** 
 281:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 282:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm3.h **** 
 284:Drivers/CMSIS/Include/core_cm3.h **** 
 285:Drivers/CMSIS/Include/core_cm3.h **** /**
 286:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:Drivers/CMSIS/Include/core_cm3.h ****  */
 288:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 289:Drivers/CMSIS/Include/core_cm3.h **** {
 290:Drivers/CMSIS/Include/core_cm3.h ****   struct
 291:Drivers/CMSIS/Include/core_cm3.h ****   {
 292:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
ARM GAS  /tmp/ccbYAz4J.s 			page 49


 294:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 295:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:Drivers/CMSIS/Include/core_cm3.h **** } IPSR_Type;
 297:Drivers/CMSIS/Include/core_cm3.h **** 
 298:Drivers/CMSIS/Include/core_cm3.h **** /* IPSR Register Definitions */
 299:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 301:Drivers/CMSIS/Include/core_cm3.h **** 
 302:Drivers/CMSIS/Include/core_cm3.h **** 
 303:Drivers/CMSIS/Include/core_cm3.h **** /**
 304:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:Drivers/CMSIS/Include/core_cm3.h ****  */
 306:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 307:Drivers/CMSIS/Include/core_cm3.h **** {
 308:Drivers/CMSIS/Include/core_cm3.h ****   struct
 309:Drivers/CMSIS/Include/core_cm3.h ****   {
 310:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 314:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 315:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 316:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 317:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 318:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 319:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 320:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:Drivers/CMSIS/Include/core_cm3.h **** } xPSR_Type;
 322:Drivers/CMSIS/Include/core_cm3.h **** 
 323:Drivers/CMSIS/Include/core_cm3.h **** /* xPSR Register Definitions */
 324:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 325:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 326:Drivers/CMSIS/Include/core_cm3.h **** 
 327:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 328:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 329:Drivers/CMSIS/Include/core_cm3.h **** 
 330:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 331:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 332:Drivers/CMSIS/Include/core_cm3.h **** 
 333:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 334:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 335:Drivers/CMSIS/Include/core_cm3.h **** 
 336:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 337:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 338:Drivers/CMSIS/Include/core_cm3.h **** 
 339:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 340:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 341:Drivers/CMSIS/Include/core_cm3.h **** 
 342:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 343:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm3.h **** 
 345:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 346:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm3.h **** 
 348:Drivers/CMSIS/Include/core_cm3.h **** 
 349:Drivers/CMSIS/Include/core_cm3.h **** /**
 350:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
ARM GAS  /tmp/ccbYAz4J.s 			page 50


 351:Drivers/CMSIS/Include/core_cm3.h ****  */
 352:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 353:Drivers/CMSIS/Include/core_cm3.h **** {
 354:Drivers/CMSIS/Include/core_cm3.h ****   struct
 355:Drivers/CMSIS/Include/core_cm3.h ****   {
 356:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 357:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 358:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 359:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 360:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 361:Drivers/CMSIS/Include/core_cm3.h **** } CONTROL_Type;
 362:Drivers/CMSIS/Include/core_cm3.h **** 
 363:Drivers/CMSIS/Include/core_cm3.h **** /* CONTROL Register Definitions */
 364:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 365:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 366:Drivers/CMSIS/Include/core_cm3.h **** 
 367:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 368:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 369:Drivers/CMSIS/Include/core_cm3.h **** 
 370:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 371:Drivers/CMSIS/Include/core_cm3.h **** 
 372:Drivers/CMSIS/Include/core_cm3.h **** 
 373:Drivers/CMSIS/Include/core_cm3.h **** /**
 374:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 375:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 376:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 377:Drivers/CMSIS/Include/core_cm3.h ****   @{
 378:Drivers/CMSIS/Include/core_cm3.h ****  */
 379:Drivers/CMSIS/Include/core_cm3.h **** 
 380:Drivers/CMSIS/Include/core_cm3.h **** /**
 381:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 382:Drivers/CMSIS/Include/core_cm3.h ****  */
 383:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 384:Drivers/CMSIS/Include/core_cm3.h **** {
 385:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 386:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[24U];
 387:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 388:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RSERVED1[24U];
 389:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 390:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[24U];
 391:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 392:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[24U];
 393:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 394:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[56U];
 395:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 396:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[644U];
 397:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 398:Drivers/CMSIS/Include/core_cm3.h **** }  NVIC_Type;
 399:Drivers/CMSIS/Include/core_cm3.h **** 
 400:Drivers/CMSIS/Include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 401:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 402:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 403:Drivers/CMSIS/Include/core_cm3.h **** 
 404:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 405:Drivers/CMSIS/Include/core_cm3.h **** 
 406:Drivers/CMSIS/Include/core_cm3.h **** 
 407:Drivers/CMSIS/Include/core_cm3.h **** /**
ARM GAS  /tmp/ccbYAz4J.s 			page 51


 408:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 409:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 410:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 411:Drivers/CMSIS/Include/core_cm3.h ****   @{
 412:Drivers/CMSIS/Include/core_cm3.h ****  */
 413:Drivers/CMSIS/Include/core_cm3.h **** 
 414:Drivers/CMSIS/Include/core_cm3.h **** /**
 415:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 416:Drivers/CMSIS/Include/core_cm3.h ****  */
 417:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 418:Drivers/CMSIS/Include/core_cm3.h **** {
 419:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 420:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 421:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 422:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 423:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 424:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 425:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 426:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 427:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 428:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 429:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 430:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 431:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 432:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 433:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 434:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 435:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 436:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 437:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 438:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[5U];
 439:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 440:Drivers/CMSIS/Include/core_cm3.h **** } SCB_Type;
 441:Drivers/CMSIS/Include/core_cm3.h **** 
 442:Drivers/CMSIS/Include/core_cm3.h **** /* SCB CPUID Register Definitions */
 443:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm3.h **** 
 446:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 447:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 448:Drivers/CMSIS/Include/core_cm3.h **** 
 449:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 451:Drivers/CMSIS/Include/core_cm3.h **** 
 452:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 454:Drivers/CMSIS/Include/core_cm3.h **** 
 455:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 456:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 457:Drivers/CMSIS/Include/core_cm3.h **** 
 458:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 459:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 461:Drivers/CMSIS/Include/core_cm3.h **** 
 462:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 463:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 464:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccbYAz4J.s 			page 52


 465:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 466:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm3.h **** 
 468:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 469:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm3.h **** 
 471:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm3.h **** 
 474:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm3.h **** 
 477:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm3.h **** 
 480:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm3.h **** 
 483:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm3.h **** 
 486:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 487:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm3.h **** 
 489:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 490:Drivers/CMSIS/Include/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 491:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm3.h **** 
 494:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm3.h **** #else
 497:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm3.h **** #endif
 500:Drivers/CMSIS/Include/core_cm3.h **** 
 501:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 502:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 503:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm3.h **** 
 505:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm3.h **** 
 508:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm3.h **** 
 511:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm3.h **** 
 514:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm3.h **** 
 517:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm3.h **** 
 520:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
ARM GAS  /tmp/ccbYAz4J.s 			page 53


 522:Drivers/CMSIS/Include/core_cm3.h **** 
 523:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Control Register Definitions */
 524:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm3.h **** 
 527:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm3.h **** 
 530:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm3.h **** 
 533:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 534:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm3.h **** 
 537:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm3.h **** 
 540:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm3.h **** 
 543:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm3.h **** 
 546:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm3.h **** 
 549:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm3.h **** 
 552:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 553:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm3.h **** 
 556:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm3.h **** 
 559:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm3.h **** 
 562:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm3.h **** 
 565:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm3.h **** 
 568:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm3.h **** 
 571:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm3.h **** 
 574:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm3.h **** 
 577:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
ARM GAS  /tmp/ccbYAz4J.s 			page 54


 579:Drivers/CMSIS/Include/core_cm3.h **** 
 580:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm3.h **** 
 583:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm3.h **** 
 586:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm3.h **** 
 589:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm3.h **** 
 592:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm3.h **** 
 595:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 596:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm3.h **** 
 599:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm3.h **** 
 602:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm3.h **** 
 605:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 606:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm3.h **** 
 609:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm3.h **** 
 612:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm3.h **** 
 615:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 616:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm3.h **** 
 619:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm3.h **** 
 622:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm3.h **** 
 625:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm3.h **** 
 628:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm3.h **** 
 631:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 632:Drivers/CMSIS/Include/core_cm3.h **** 
 633:Drivers/CMSIS/Include/core_cm3.h **** 
 634:Drivers/CMSIS/Include/core_cm3.h **** /**
 635:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
ARM GAS  /tmp/ccbYAz4J.s 			page 55


 636:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 637:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 638:Drivers/CMSIS/Include/core_cm3.h ****   @{
 639:Drivers/CMSIS/Include/core_cm3.h ****  */
 640:Drivers/CMSIS/Include/core_cm3.h **** 
 641:Drivers/CMSIS/Include/core_cm3.h **** /**
 642:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 643:Drivers/CMSIS/Include/core_cm3.h ****  */
 644:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 645:Drivers/CMSIS/Include/core_cm3.h **** {
 646:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 647:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 648:Drivers/CMSIS/Include/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 649:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 650:Drivers/CMSIS/Include/core_cm3.h **** #else
 651:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 652:Drivers/CMSIS/Include/core_cm3.h **** #endif
 653:Drivers/CMSIS/Include/core_cm3.h **** } SCnSCB_Type;
 654:Drivers/CMSIS/Include/core_cm3.h **** 
 655:Drivers/CMSIS/Include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 656:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 657:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 658:Drivers/CMSIS/Include/core_cm3.h **** 
 659:Drivers/CMSIS/Include/core_cm3.h **** /* Auxiliary Control Register Definitions */
 660:Drivers/CMSIS/Include/core_cm3.h **** 
 661:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 662:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 663:Drivers/CMSIS/Include/core_cm3.h **** 
 664:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 665:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 666:Drivers/CMSIS/Include/core_cm3.h **** 
 667:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 668:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 669:Drivers/CMSIS/Include/core_cm3.h **** 
 670:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 671:Drivers/CMSIS/Include/core_cm3.h **** 
 672:Drivers/CMSIS/Include/core_cm3.h **** 
 673:Drivers/CMSIS/Include/core_cm3.h **** /**
 674:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 675:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 676:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 677:Drivers/CMSIS/Include/core_cm3.h ****   @{
 678:Drivers/CMSIS/Include/core_cm3.h ****  */
 679:Drivers/CMSIS/Include/core_cm3.h **** 
 680:Drivers/CMSIS/Include/core_cm3.h **** /**
 681:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 682:Drivers/CMSIS/Include/core_cm3.h ****  */
 683:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 684:Drivers/CMSIS/Include/core_cm3.h **** {
 685:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 686:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 687:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 688:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 689:Drivers/CMSIS/Include/core_cm3.h **** } SysTick_Type;
 690:Drivers/CMSIS/Include/core_cm3.h **** 
 691:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 692:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
ARM GAS  /tmp/ccbYAz4J.s 			page 56


 693:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 694:Drivers/CMSIS/Include/core_cm3.h **** 
 695:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 696:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 697:Drivers/CMSIS/Include/core_cm3.h **** 
 698:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 699:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 700:Drivers/CMSIS/Include/core_cm3.h **** 
 701:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 702:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 703:Drivers/CMSIS/Include/core_cm3.h **** 
 704:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Reload Register Definitions */
 705:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 706:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 707:Drivers/CMSIS/Include/core_cm3.h **** 
 708:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Current Register Definitions */
 709:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 710:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 711:Drivers/CMSIS/Include/core_cm3.h **** 
 712:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 713:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 714:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 715:Drivers/CMSIS/Include/core_cm3.h **** 
 716:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 717:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 718:Drivers/CMSIS/Include/core_cm3.h **** 
 719:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 720:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 721:Drivers/CMSIS/Include/core_cm3.h **** 
 722:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 723:Drivers/CMSIS/Include/core_cm3.h **** 
 724:Drivers/CMSIS/Include/core_cm3.h **** 
 725:Drivers/CMSIS/Include/core_cm3.h **** /**
 726:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 727:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 728:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 729:Drivers/CMSIS/Include/core_cm3.h ****   @{
 730:Drivers/CMSIS/Include/core_cm3.h ****  */
 731:Drivers/CMSIS/Include/core_cm3.h **** 
 732:Drivers/CMSIS/Include/core_cm3.h **** /**
 733:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 734:Drivers/CMSIS/Include/core_cm3.h ****  */
 735:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 736:Drivers/CMSIS/Include/core_cm3.h **** {
 737:Drivers/CMSIS/Include/core_cm3.h ****   __OM  union
 738:Drivers/CMSIS/Include/core_cm3.h ****   {
 739:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 740:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 741:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 742:Drivers/CMSIS/Include/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 743:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[864U];
 744:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 745:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[15U];
 746:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 747:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[15U];
 748:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 749:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[29U];
ARM GAS  /tmp/ccbYAz4J.s 			page 57


 750:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 751:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 752:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 753:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[43U];
 754:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 755:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 756:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[6U];
 757:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 758:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 759:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 760:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 761:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 762:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 763:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 764:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 765:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 766:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 767:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 768:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 769:Drivers/CMSIS/Include/core_cm3.h **** } ITM_Type;
 770:Drivers/CMSIS/Include/core_cm3.h **** 
 771:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 772:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 773:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 774:Drivers/CMSIS/Include/core_cm3.h **** 
 775:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 776:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 777:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 778:Drivers/CMSIS/Include/core_cm3.h **** 
 779:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 780:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 781:Drivers/CMSIS/Include/core_cm3.h **** 
 782:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 783:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 784:Drivers/CMSIS/Include/core_cm3.h **** 
 785:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 786:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 787:Drivers/CMSIS/Include/core_cm3.h **** 
 788:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 789:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 790:Drivers/CMSIS/Include/core_cm3.h **** 
 791:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 792:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 793:Drivers/CMSIS/Include/core_cm3.h **** 
 794:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 795:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 796:Drivers/CMSIS/Include/core_cm3.h **** 
 797:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 798:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 799:Drivers/CMSIS/Include/core_cm3.h **** 
 800:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 801:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 802:Drivers/CMSIS/Include/core_cm3.h **** 
 803:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 804:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 805:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 806:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccbYAz4J.s 			page 58


 807:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 808:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 809:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 810:Drivers/CMSIS/Include/core_cm3.h **** 
 811:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 812:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 813:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 814:Drivers/CMSIS/Include/core_cm3.h **** 
 815:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 816:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 817:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 818:Drivers/CMSIS/Include/core_cm3.h **** 
 819:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 820:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 821:Drivers/CMSIS/Include/core_cm3.h **** 
 822:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 823:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 824:Drivers/CMSIS/Include/core_cm3.h **** 
 825:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 826:Drivers/CMSIS/Include/core_cm3.h **** 
 827:Drivers/CMSIS/Include/core_cm3.h **** 
 828:Drivers/CMSIS/Include/core_cm3.h **** /**
 829:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 830:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 831:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 832:Drivers/CMSIS/Include/core_cm3.h ****   @{
 833:Drivers/CMSIS/Include/core_cm3.h ****  */
 834:Drivers/CMSIS/Include/core_cm3.h **** 
 835:Drivers/CMSIS/Include/core_cm3.h **** /**
 836:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 837:Drivers/CMSIS/Include/core_cm3.h ****  */
 838:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 839:Drivers/CMSIS/Include/core_cm3.h **** {
 840:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 841:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 842:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 843:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 844:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 845:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 846:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 847:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 848:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 849:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 850:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 851:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 852:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 853:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 854:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 855:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 856:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 857:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 858:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 859:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[1U];
 860:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 861:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 862:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 863:Drivers/CMSIS/Include/core_cm3.h **** } DWT_Type;
ARM GAS  /tmp/ccbYAz4J.s 			page 59


 864:Drivers/CMSIS/Include/core_cm3.h **** 
 865:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Control Register Definitions */
 866:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 867:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 868:Drivers/CMSIS/Include/core_cm3.h **** 
 869:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 870:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 871:Drivers/CMSIS/Include/core_cm3.h **** 
 872:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 873:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 874:Drivers/CMSIS/Include/core_cm3.h **** 
 875:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 876:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 877:Drivers/CMSIS/Include/core_cm3.h **** 
 878:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 879:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 880:Drivers/CMSIS/Include/core_cm3.h **** 
 881:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 882:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 883:Drivers/CMSIS/Include/core_cm3.h **** 
 884:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 885:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 886:Drivers/CMSIS/Include/core_cm3.h **** 
 887:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 888:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 889:Drivers/CMSIS/Include/core_cm3.h **** 
 890:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 891:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 892:Drivers/CMSIS/Include/core_cm3.h **** 
 893:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 894:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 895:Drivers/CMSIS/Include/core_cm3.h **** 
 896:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 897:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 898:Drivers/CMSIS/Include/core_cm3.h **** 
 899:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 900:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 901:Drivers/CMSIS/Include/core_cm3.h **** 
 902:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 903:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 904:Drivers/CMSIS/Include/core_cm3.h **** 
 905:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 906:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 907:Drivers/CMSIS/Include/core_cm3.h **** 
 908:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 909:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 910:Drivers/CMSIS/Include/core_cm3.h **** 
 911:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 912:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 913:Drivers/CMSIS/Include/core_cm3.h **** 
 914:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 915:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 916:Drivers/CMSIS/Include/core_cm3.h **** 
 917:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 918:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 919:Drivers/CMSIS/Include/core_cm3.h **** 
 920:Drivers/CMSIS/Include/core_cm3.h **** /* DWT CPI Count Register Definitions */
ARM GAS  /tmp/ccbYAz4J.s 			page 60


 921:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 922:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 923:Drivers/CMSIS/Include/core_cm3.h **** 
 924:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 925:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 926:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 927:Drivers/CMSIS/Include/core_cm3.h **** 
 928:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 929:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 930:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 931:Drivers/CMSIS/Include/core_cm3.h **** 
 932:Drivers/CMSIS/Include/core_cm3.h **** /* DWT LSU Count Register Definitions */
 933:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 934:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 935:Drivers/CMSIS/Include/core_cm3.h **** 
 936:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 937:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 938:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 939:Drivers/CMSIS/Include/core_cm3.h **** 
 940:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 941:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 942:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 943:Drivers/CMSIS/Include/core_cm3.h **** 
 944:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 945:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 946:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 947:Drivers/CMSIS/Include/core_cm3.h **** 
 948:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 949:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 950:Drivers/CMSIS/Include/core_cm3.h **** 
 951:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 952:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 953:Drivers/CMSIS/Include/core_cm3.h **** 
 954:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 955:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 956:Drivers/CMSIS/Include/core_cm3.h **** 
 957:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 958:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 959:Drivers/CMSIS/Include/core_cm3.h **** 
 960:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 961:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 962:Drivers/CMSIS/Include/core_cm3.h **** 
 963:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 964:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 965:Drivers/CMSIS/Include/core_cm3.h **** 
 966:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 967:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 968:Drivers/CMSIS/Include/core_cm3.h **** 
 969:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 970:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 971:Drivers/CMSIS/Include/core_cm3.h **** 
 972:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 973:Drivers/CMSIS/Include/core_cm3.h **** 
 974:Drivers/CMSIS/Include/core_cm3.h **** 
 975:Drivers/CMSIS/Include/core_cm3.h **** /**
 976:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 977:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
ARM GAS  /tmp/ccbYAz4J.s 			page 61


 978:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 979:Drivers/CMSIS/Include/core_cm3.h ****   @{
 980:Drivers/CMSIS/Include/core_cm3.h ****  */
 981:Drivers/CMSIS/Include/core_cm3.h **** 
 982:Drivers/CMSIS/Include/core_cm3.h **** /**
 983:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 984:Drivers/CMSIS/Include/core_cm3.h ****  */
 985:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 986:Drivers/CMSIS/Include/core_cm3.h **** {
 987:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 988:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 989:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[2U];
 990:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 991:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[55U];
 992:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 993:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[131U];
 994:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 995:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 996:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 997:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[759U];
 998:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 999:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1000:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1001:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[1U];
1002:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1003:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1004:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1005:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[39U];
1006:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1007:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1008:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED7[8U];
1009:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1010:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1011:Drivers/CMSIS/Include/core_cm3.h **** } TPI_Type;
1012:Drivers/CMSIS/Include/core_cm3.h **** 
1013:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1014:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1015:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1016:Drivers/CMSIS/Include/core_cm3.h **** 
1017:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1018:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1019:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1020:Drivers/CMSIS/Include/core_cm3.h **** 
1021:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1022:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1023:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1024:Drivers/CMSIS/Include/core_cm3.h **** 
1025:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1026:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1027:Drivers/CMSIS/Include/core_cm3.h **** 
1028:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1029:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1030:Drivers/CMSIS/Include/core_cm3.h **** 
1031:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1032:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1033:Drivers/CMSIS/Include/core_cm3.h **** 
1034:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
ARM GAS  /tmp/ccbYAz4J.s 			page 62


1035:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1036:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1037:Drivers/CMSIS/Include/core_cm3.h **** 
1038:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1039:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1040:Drivers/CMSIS/Include/core_cm3.h **** 
1041:Drivers/CMSIS/Include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1042:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1043:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1044:Drivers/CMSIS/Include/core_cm3.h **** 
1045:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1046:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1047:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1048:Drivers/CMSIS/Include/core_cm3.h **** 
1049:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1050:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1051:Drivers/CMSIS/Include/core_cm3.h **** 
1052:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1053:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1054:Drivers/CMSIS/Include/core_cm3.h **** 
1055:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1056:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1057:Drivers/CMSIS/Include/core_cm3.h **** 
1058:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1059:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1060:Drivers/CMSIS/Include/core_cm3.h **** 
1061:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1062:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1063:Drivers/CMSIS/Include/core_cm3.h **** 
1064:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1065:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1066:Drivers/CMSIS/Include/core_cm3.h **** 
1067:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1068:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1069:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1070:Drivers/CMSIS/Include/core_cm3.h **** 
1071:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1072:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1073:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1074:Drivers/CMSIS/Include/core_cm3.h **** 
1075:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1076:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1077:Drivers/CMSIS/Include/core_cm3.h **** 
1078:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1079:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1080:Drivers/CMSIS/Include/core_cm3.h **** 
1081:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1082:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1083:Drivers/CMSIS/Include/core_cm3.h **** 
1084:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1085:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1086:Drivers/CMSIS/Include/core_cm3.h **** 
1087:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1088:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1089:Drivers/CMSIS/Include/core_cm3.h **** 
1090:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1091:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
ARM GAS  /tmp/ccbYAz4J.s 			page 63


1092:Drivers/CMSIS/Include/core_cm3.h **** 
1093:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1094:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1095:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1096:Drivers/CMSIS/Include/core_cm3.h **** 
1097:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1098:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1099:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1100:Drivers/CMSIS/Include/core_cm3.h **** 
1101:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVID Register Definitions */
1102:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1103:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1104:Drivers/CMSIS/Include/core_cm3.h **** 
1105:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1106:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1107:Drivers/CMSIS/Include/core_cm3.h **** 
1108:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1109:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1110:Drivers/CMSIS/Include/core_cm3.h **** 
1111:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1112:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1113:Drivers/CMSIS/Include/core_cm3.h **** 
1114:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1115:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1116:Drivers/CMSIS/Include/core_cm3.h **** 
1117:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1118:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1119:Drivers/CMSIS/Include/core_cm3.h **** 
1120:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1121:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1122:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1123:Drivers/CMSIS/Include/core_cm3.h **** 
1124:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1125:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1126:Drivers/CMSIS/Include/core_cm3.h **** 
1127:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1128:Drivers/CMSIS/Include/core_cm3.h **** 
1129:Drivers/CMSIS/Include/core_cm3.h **** 
1130:Drivers/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1131:Drivers/CMSIS/Include/core_cm3.h **** /**
1132:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1133:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1134:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1135:Drivers/CMSIS/Include/core_cm3.h ****   @{
1136:Drivers/CMSIS/Include/core_cm3.h ****  */
1137:Drivers/CMSIS/Include/core_cm3.h **** 
1138:Drivers/CMSIS/Include/core_cm3.h **** /**
1139:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1140:Drivers/CMSIS/Include/core_cm3.h ****  */
1141:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1142:Drivers/CMSIS/Include/core_cm3.h **** {
1143:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1144:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1145:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1146:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1147:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1148:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
ARM GAS  /tmp/ccbYAz4J.s 			page 64


1149:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1150:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1151:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1152:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1153:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1154:Drivers/CMSIS/Include/core_cm3.h **** } MPU_Type;
1155:Drivers/CMSIS/Include/core_cm3.h **** 
1156:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Type Register Definitions */
1157:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1158:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1159:Drivers/CMSIS/Include/core_cm3.h **** 
1160:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1161:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1162:Drivers/CMSIS/Include/core_cm3.h **** 
1163:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1164:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1165:Drivers/CMSIS/Include/core_cm3.h **** 
1166:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Control Register Definitions */
1167:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1168:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1169:Drivers/CMSIS/Include/core_cm3.h **** 
1170:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1171:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1172:Drivers/CMSIS/Include/core_cm3.h **** 
1173:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1174:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1175:Drivers/CMSIS/Include/core_cm3.h **** 
1176:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Number Register Definitions */
1177:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1178:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1179:Drivers/CMSIS/Include/core_cm3.h **** 
1180:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1181:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1182:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1183:Drivers/CMSIS/Include/core_cm3.h **** 
1184:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1185:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1186:Drivers/CMSIS/Include/core_cm3.h **** 
1187:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1188:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1189:Drivers/CMSIS/Include/core_cm3.h **** 
1190:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1191:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1192:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1193:Drivers/CMSIS/Include/core_cm3.h **** 
1194:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1195:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1196:Drivers/CMSIS/Include/core_cm3.h **** 
1197:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1198:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1199:Drivers/CMSIS/Include/core_cm3.h **** 
1200:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1201:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1202:Drivers/CMSIS/Include/core_cm3.h **** 
1203:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1204:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1205:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccbYAz4J.s 			page 65


1206:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1207:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1208:Drivers/CMSIS/Include/core_cm3.h **** 
1209:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1210:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1211:Drivers/CMSIS/Include/core_cm3.h **** 
1212:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1213:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1214:Drivers/CMSIS/Include/core_cm3.h **** 
1215:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1216:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1217:Drivers/CMSIS/Include/core_cm3.h **** 
1218:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1219:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm3.h **** 
1221:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1222:Drivers/CMSIS/Include/core_cm3.h **** #endif
1223:Drivers/CMSIS/Include/core_cm3.h **** 
1224:Drivers/CMSIS/Include/core_cm3.h **** 
1225:Drivers/CMSIS/Include/core_cm3.h **** /**
1226:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1227:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1228:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1229:Drivers/CMSIS/Include/core_cm3.h ****   @{
1230:Drivers/CMSIS/Include/core_cm3.h ****  */
1231:Drivers/CMSIS/Include/core_cm3.h **** 
1232:Drivers/CMSIS/Include/core_cm3.h **** /**
1233:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1234:Drivers/CMSIS/Include/core_cm3.h ****  */
1235:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1236:Drivers/CMSIS/Include/core_cm3.h **** {
1237:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1238:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1239:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1240:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1241:Drivers/CMSIS/Include/core_cm3.h **** } CoreDebug_Type;
1242:Drivers/CMSIS/Include/core_cm3.h **** 
1243:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1244:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1245:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1246:Drivers/CMSIS/Include/core_cm3.h **** 
1247:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1248:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1249:Drivers/CMSIS/Include/core_cm3.h **** 
1250:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1251:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1252:Drivers/CMSIS/Include/core_cm3.h **** 
1253:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1254:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1255:Drivers/CMSIS/Include/core_cm3.h **** 
1256:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1257:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1258:Drivers/CMSIS/Include/core_cm3.h **** 
1259:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1260:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1261:Drivers/CMSIS/Include/core_cm3.h **** 
1262:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
ARM GAS  /tmp/ccbYAz4J.s 			page 66


1263:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1264:Drivers/CMSIS/Include/core_cm3.h **** 
1265:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1266:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1267:Drivers/CMSIS/Include/core_cm3.h **** 
1268:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1269:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1270:Drivers/CMSIS/Include/core_cm3.h **** 
1271:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1272:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1273:Drivers/CMSIS/Include/core_cm3.h **** 
1274:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1275:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1276:Drivers/CMSIS/Include/core_cm3.h **** 
1277:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1278:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1279:Drivers/CMSIS/Include/core_cm3.h **** 
1280:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1281:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1282:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1283:Drivers/CMSIS/Include/core_cm3.h **** 
1284:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1285:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1286:Drivers/CMSIS/Include/core_cm3.h **** 
1287:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1288:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1289:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1290:Drivers/CMSIS/Include/core_cm3.h **** 
1291:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1292:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1293:Drivers/CMSIS/Include/core_cm3.h **** 
1294:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1295:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1296:Drivers/CMSIS/Include/core_cm3.h **** 
1297:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1298:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1299:Drivers/CMSIS/Include/core_cm3.h **** 
1300:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1301:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1302:Drivers/CMSIS/Include/core_cm3.h **** 
1303:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1304:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1305:Drivers/CMSIS/Include/core_cm3.h **** 
1306:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1307:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1308:Drivers/CMSIS/Include/core_cm3.h **** 
1309:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1310:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1311:Drivers/CMSIS/Include/core_cm3.h **** 
1312:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1313:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1314:Drivers/CMSIS/Include/core_cm3.h **** 
1315:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1316:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1317:Drivers/CMSIS/Include/core_cm3.h **** 
1318:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1319:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
ARM GAS  /tmp/ccbYAz4J.s 			page 67


1320:Drivers/CMSIS/Include/core_cm3.h **** 
1321:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1322:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1323:Drivers/CMSIS/Include/core_cm3.h **** 
1324:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1325:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1326:Drivers/CMSIS/Include/core_cm3.h **** 
1327:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1328:Drivers/CMSIS/Include/core_cm3.h **** 
1329:Drivers/CMSIS/Include/core_cm3.h **** 
1330:Drivers/CMSIS/Include/core_cm3.h **** /**
1331:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1332:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1333:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1334:Drivers/CMSIS/Include/core_cm3.h ****   @{
1335:Drivers/CMSIS/Include/core_cm3.h ****  */
1336:Drivers/CMSIS/Include/core_cm3.h **** 
1337:Drivers/CMSIS/Include/core_cm3.h **** /**
1338:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1339:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1340:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of the bit field.
1341:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted value.
1342:Drivers/CMSIS/Include/core_cm3.h **** */
1343:Drivers/CMSIS/Include/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1344:Drivers/CMSIS/Include/core_cm3.h **** 
1345:Drivers/CMSIS/Include/core_cm3.h **** /**
1346:Drivers/CMSIS/Include/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1347:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of register.
1349:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted bit field value.
1350:Drivers/CMSIS/Include/core_cm3.h **** */
1351:Drivers/CMSIS/Include/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1352:Drivers/CMSIS/Include/core_cm3.h **** 
1353:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1354:Drivers/CMSIS/Include/core_cm3.h **** 
1355:Drivers/CMSIS/Include/core_cm3.h **** 
1356:Drivers/CMSIS/Include/core_cm3.h **** /**
1357:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1358:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1359:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1360:Drivers/CMSIS/Include/core_cm3.h ****   @{
1361:Drivers/CMSIS/Include/core_cm3.h ****  */
1362:Drivers/CMSIS/Include/core_cm3.h **** 
1363:Drivers/CMSIS/Include/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1364:Drivers/CMSIS/Include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1365:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1366:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1367:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1368:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1369:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1370:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1371:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1372:Drivers/CMSIS/Include/core_cm3.h **** 
1373:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1374:Drivers/CMSIS/Include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1375:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1376:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
ARM GAS  /tmp/ccbYAz4J.s 			page 68


1377:Drivers/CMSIS/Include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1378:Drivers/CMSIS/Include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1379:Drivers/CMSIS/Include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1380:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1381:Drivers/CMSIS/Include/core_cm3.h **** 
1382:Drivers/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1383:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1384:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1385:Drivers/CMSIS/Include/core_cm3.h **** #endif
1386:Drivers/CMSIS/Include/core_cm3.h **** 
1387:Drivers/CMSIS/Include/core_cm3.h **** /*@} */
1388:Drivers/CMSIS/Include/core_cm3.h **** 
1389:Drivers/CMSIS/Include/core_cm3.h **** 
1390:Drivers/CMSIS/Include/core_cm3.h **** 
1391:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
1392:Drivers/CMSIS/Include/core_cm3.h ****  *                Hardware Abstraction Layer
1393:Drivers/CMSIS/Include/core_cm3.h ****   Core Function Interface contains:
1394:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Functions
1395:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Functions
1396:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Functions
1397:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register Access Functions
1398:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
1399:Drivers/CMSIS/Include/core_cm3.h **** /**
1400:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1401:Drivers/CMSIS/Include/core_cm3.h **** */
1402:Drivers/CMSIS/Include/core_cm3.h **** 
1403:Drivers/CMSIS/Include/core_cm3.h **** 
1404:Drivers/CMSIS/Include/core_cm3.h **** 
1405:Drivers/CMSIS/Include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1406:Drivers/CMSIS/Include/core_cm3.h **** /**
1407:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1408:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1409:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1410:Drivers/CMSIS/Include/core_cm3.h ****   @{
1411:Drivers/CMSIS/Include/core_cm3.h ****  */
1412:Drivers/CMSIS/Include/core_cm3.h **** 
1413:Drivers/CMSIS/Include/core_cm3.h **** /**
1414:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Priority Grouping
1415:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1416:Drivers/CMSIS/Include/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1417:Drivers/CMSIS/Include/core_cm3.h ****            Only values from 0..7 are used.
1418:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1419:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1420:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1421:Drivers/CMSIS/Include/core_cm3.h ****  */
1422:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1423:Drivers/CMSIS/Include/core_cm3.h **** {
1424:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t reg_value;
1425:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1426:Drivers/CMSIS/Include/core_cm3.h **** 
1427:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1428:Drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1429:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
1430:Drivers/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1431:Drivers/CMSIS/Include/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1432:Drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR =  reg_value;
1433:Drivers/CMSIS/Include/core_cm3.h **** }
ARM GAS  /tmp/ccbYAz4J.s 			page 69


1434:Drivers/CMSIS/Include/core_cm3.h **** 
1435:Drivers/CMSIS/Include/core_cm3.h **** 
1436:Drivers/CMSIS/Include/core_cm3.h **** /**
1437:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Priority Grouping
1438:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1439:Drivers/CMSIS/Include/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1440:Drivers/CMSIS/Include/core_cm3.h ****  */
1441:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1442:Drivers/CMSIS/Include/core_cm3.h **** {
1443:Drivers/CMSIS/Include/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1444:Drivers/CMSIS/Include/core_cm3.h **** }
1445:Drivers/CMSIS/Include/core_cm3.h **** 
1446:Drivers/CMSIS/Include/core_cm3.h **** 
1447:Drivers/CMSIS/Include/core_cm3.h **** /**
1448:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Enable External Interrupt
1449:Drivers/CMSIS/Include/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1450:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1451:Drivers/CMSIS/Include/core_cm3.h ****  */
1452:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1453:Drivers/CMSIS/Include/core_cm3.h **** {
1454:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1455:Drivers/CMSIS/Include/core_cm3.h **** }
1456:Drivers/CMSIS/Include/core_cm3.h **** 
1457:Drivers/CMSIS/Include/core_cm3.h **** 
1458:Drivers/CMSIS/Include/core_cm3.h **** /**
1459:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Disable External Interrupt
1460:Drivers/CMSIS/Include/core_cm3.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1461:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1462:Drivers/CMSIS/Include/core_cm3.h ****  */
1463:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1464:Drivers/CMSIS/Include/core_cm3.h **** {
1465:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1466:Drivers/CMSIS/Include/core_cm3.h **** }
1467:Drivers/CMSIS/Include/core_cm3.h **** 
1468:Drivers/CMSIS/Include/core_cm3.h **** 
1469:Drivers/CMSIS/Include/core_cm3.h **** /**
1470:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Pending Interrupt
1471:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1472:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1473:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not pending.
1474:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is pending.
1475:Drivers/CMSIS/Include/core_cm3.h ****  */
1476:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1477:Drivers/CMSIS/Include/core_cm3.h **** {
1478:Drivers/CMSIS/Include/core_cm3.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1479:Drivers/CMSIS/Include/core_cm3.h **** }
1480:Drivers/CMSIS/Include/core_cm3.h **** 
1481:Drivers/CMSIS/Include/core_cm3.h **** 
1482:Drivers/CMSIS/Include/core_cm3.h **** /**
1483:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Pending Interrupt
1484:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the pending bit of an external interrupt.
1485:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1486:Drivers/CMSIS/Include/core_cm3.h ****  */
1487:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1488:Drivers/CMSIS/Include/core_cm3.h **** {
1489:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1490:Drivers/CMSIS/Include/core_cm3.h **** }
ARM GAS  /tmp/ccbYAz4J.s 			page 70


1491:Drivers/CMSIS/Include/core_cm3.h **** 
1492:Drivers/CMSIS/Include/core_cm3.h **** 
1493:Drivers/CMSIS/Include/core_cm3.h **** /**
1494:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Clear Pending Interrupt
1495:Drivers/CMSIS/Include/core_cm3.h ****   \details Clears the pending bit of an external interrupt.
1496:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1497:Drivers/CMSIS/Include/core_cm3.h ****  */
1498:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1499:Drivers/CMSIS/Include/core_cm3.h **** {
1500:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1501:Drivers/CMSIS/Include/core_cm3.h **** }
1502:Drivers/CMSIS/Include/core_cm3.h **** 
1503:Drivers/CMSIS/Include/core_cm3.h **** 
1504:Drivers/CMSIS/Include/core_cm3.h **** /**
1505:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Active Interrupt
1506:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the active register in NVIC and returns the active bit.
1507:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1508:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not active.
1509:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is active.
1510:Drivers/CMSIS/Include/core_cm3.h ****  */
1511:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1512:Drivers/CMSIS/Include/core_cm3.h **** {
1513:Drivers/CMSIS/Include/core_cm3.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1514:Drivers/CMSIS/Include/core_cm3.h **** }
1515:Drivers/CMSIS/Include/core_cm3.h **** 
1516:Drivers/CMSIS/Include/core_cm3.h **** 
1517:Drivers/CMSIS/Include/core_cm3.h **** /**
1518:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Interrupt Priority
1519:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority of an interrupt.
1520:Drivers/CMSIS/Include/core_cm3.h ****   \note    The priority cannot be set for every core interrupt.
1521:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1522:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]  priority  Priority to set.
1523:Drivers/CMSIS/Include/core_cm3.h ****  */
1524:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1525:Drivers/CMSIS/Include/core_cm3.h **** {
1526:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1527:Drivers/CMSIS/Include/core_cm3.h ****   {
1528:Drivers/CMSIS/Include/core_cm3.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1529:Drivers/CMSIS/Include/core_cm3.h ****   }
1530:Drivers/CMSIS/Include/core_cm3.h ****   else
1531:Drivers/CMSIS/Include/core_cm3.h ****   {
1532:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1533:Drivers/CMSIS/Include/core_cm3.h ****   }
1534:Drivers/CMSIS/Include/core_cm3.h **** }
1535:Drivers/CMSIS/Include/core_cm3.h **** 
1536:Drivers/CMSIS/Include/core_cm3.h **** 
1537:Drivers/CMSIS/Include/core_cm3.h **** /**
1538:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Priority
1539:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority of an interrupt.
1540:Drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1541:Drivers/CMSIS/Include/core_cm3.h ****            or negative to specify an internal (core) interrupt.
1542:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   IRQn  Interrupt number.
1543:Drivers/CMSIS/Include/core_cm3.h ****   \return             Interrupt Priority.
1544:Drivers/CMSIS/Include/core_cm3.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1545:Drivers/CMSIS/Include/core_cm3.h ****  */
1546:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1547:Drivers/CMSIS/Include/core_cm3.h **** {
ARM GAS  /tmp/ccbYAz4J.s 			page 71


1548:Drivers/CMSIS/Include/core_cm3.h **** 
1549:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1550:Drivers/CMSIS/Include/core_cm3.h ****   {
1551:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1552:Drivers/CMSIS/Include/core_cm3.h ****   }
1553:Drivers/CMSIS/Include/core_cm3.h ****   else
1554:Drivers/CMSIS/Include/core_cm3.h ****   {
1555:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1556:Drivers/CMSIS/Include/core_cm3.h ****   }
1557:Drivers/CMSIS/Include/core_cm3.h **** }
1558:Drivers/CMSIS/Include/core_cm3.h **** 
1559:Drivers/CMSIS/Include/core_cm3.h **** 
1560:Drivers/CMSIS/Include/core_cm3.h **** /**
1561:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Encode Priority
1562:Drivers/CMSIS/Include/core_cm3.h ****   \details Encodes the priority for an interrupt with the given priority group,
1563:Drivers/CMSIS/Include/core_cm3.h ****            preemptive priority value, and subpriority value.
1564:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1565:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1566:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1567:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1568:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1569:Drivers/CMSIS/Include/core_cm3.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1570:Drivers/CMSIS/Include/core_cm3.h ****  */
1571:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1572:Drivers/CMSIS/Include/core_cm3.h **** {
1573:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1574:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1575:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1576:Drivers/CMSIS/Include/core_cm3.h **** 
1577:Drivers/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1578:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1579:Drivers/CMSIS/Include/core_cm3.h **** 
1580:Drivers/CMSIS/Include/core_cm3.h ****   return (
1581:Drivers/CMSIS/Include/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1582:Drivers/CMSIS/Include/core_cm3.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1583:Drivers/CMSIS/Include/core_cm3.h ****          );
1584:Drivers/CMSIS/Include/core_cm3.h **** }
1585:Drivers/CMSIS/Include/core_cm3.h **** 
1586:Drivers/CMSIS/Include/core_cm3.h **** 
1587:Drivers/CMSIS/Include/core_cm3.h **** /**
1588:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Decode Priority
1589:Drivers/CMSIS/Include/core_cm3.h ****   \details Decodes an interrupt priority value with a given priority group to
1590:Drivers/CMSIS/Include/core_cm3.h ****            preemptive priority value and subpriority value.
1591:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1592:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1593:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1594:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1595:Drivers/CMSIS/Include/core_cm3.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1596:Drivers/CMSIS/Include/core_cm3.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1597:Drivers/CMSIS/Include/core_cm3.h ****  */
1598:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1599:Drivers/CMSIS/Include/core_cm3.h **** {
1600:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1601:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1602:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1603:Drivers/CMSIS/Include/core_cm3.h **** 
1604:Drivers/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
ARM GAS  /tmp/ccbYAz4J.s 			page 72


1605:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1606:Drivers/CMSIS/Include/core_cm3.h **** 
1607:Drivers/CMSIS/Include/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1608:Drivers/CMSIS/Include/core_cm3.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1609:Drivers/CMSIS/Include/core_cm3.h **** }
1610:Drivers/CMSIS/Include/core_cm3.h **** 
1611:Drivers/CMSIS/Include/core_cm3.h **** 
1612:Drivers/CMSIS/Include/core_cm3.h **** /**
1613:Drivers/CMSIS/Include/core_cm3.h ****   \brief   System Reset
1614:Drivers/CMSIS/Include/core_cm3.h ****   \details Initiates a system reset request to reset the MCU.
1615:Drivers/CMSIS/Include/core_cm3.h ****  */
1616:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1617:Drivers/CMSIS/Include/core_cm3.h **** {
1618:Drivers/CMSIS/Include/core_cm3.h ****   __DSB();                                                          /* Ensure all outstanding memor
1619:Drivers/CMSIS/Include/core_cm3.h ****                                                                        buffered write are completed
1620:Drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1621:Drivers/CMSIS/Include/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1622:Drivers/CMSIS/Include/core_cm3.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1623:Drivers/CMSIS/Include/core_cm3.h ****   __DSB();                                                          /* Ensure completion of memory 
1624:Drivers/CMSIS/Include/core_cm3.h **** 
1625:Drivers/CMSIS/Include/core_cm3.h ****   for(;;)                                                           /* wait until reset */
1626:Drivers/CMSIS/Include/core_cm3.h ****   {
1627:Drivers/CMSIS/Include/core_cm3.h ****     __NOP();
1628:Drivers/CMSIS/Include/core_cm3.h ****   }
1629:Drivers/CMSIS/Include/core_cm3.h **** }
1630:Drivers/CMSIS/Include/core_cm3.h **** 
1631:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of CMSIS_Core_NVICFunctions */
1632:Drivers/CMSIS/Include/core_cm3.h **** 
1633:Drivers/CMSIS/Include/core_cm3.h **** 
1634:Drivers/CMSIS/Include/core_cm3.h **** 
1635:Drivers/CMSIS/Include/core_cm3.h **** /* ##################################    SysTick function  ########################################
1636:Drivers/CMSIS/Include/core_cm3.h **** /**
1637:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1638:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1639:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that configure the System.
1640:Drivers/CMSIS/Include/core_cm3.h ****   @{
1641:Drivers/CMSIS/Include/core_cm3.h ****  */
1642:Drivers/CMSIS/Include/core_cm3.h **** 
1643:Drivers/CMSIS/Include/core_cm3.h **** #if (__Vendor_SysTickConfig == 0U)
1644:Drivers/CMSIS/Include/core_cm3.h **** 
1645:Drivers/CMSIS/Include/core_cm3.h **** /**
1646:Drivers/CMSIS/Include/core_cm3.h ****   \brief   System Tick Configuration
1647:Drivers/CMSIS/Include/core_cm3.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1648:Drivers/CMSIS/Include/core_cm3.h ****            Counter is in free running mode to generate periodic interrupts.
1649:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1650:Drivers/CMSIS/Include/core_cm3.h ****   \return          0  Function succeeded.
1651:Drivers/CMSIS/Include/core_cm3.h ****   \return          1  Function failed.
1652:Drivers/CMSIS/Include/core_cm3.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1653:Drivers/CMSIS/Include/core_cm3.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1654:Drivers/CMSIS/Include/core_cm3.h ****            must contain a vendor-specific implementation of this function.
1655:Drivers/CMSIS/Include/core_cm3.h ****  */
1656:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 1357              		.loc 2 1656 26 view .LVU397
 1358              	.LBB14:
1657:Drivers/CMSIS/Include/core_cm3.h **** {
1658:Drivers/CMSIS/Include/core_cm3.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 1359              		.loc 2 1658 3 view .LVU398
ARM GAS  /tmp/ccbYAz4J.s 			page 73


 1360              		.loc 2 1658 14 is_stmt 0 view .LVU399
 1361 002c 013B     		subs	r3, r3, #1
 1362              	.LVL51:
 1363              		.loc 2 1658 6 view .LVU400
 1364 002e B3F1807F 		cmp	r3, #16777216
 1365 0032 09D2     		bcs	.L81
1659:Drivers/CMSIS/Include/core_cm3.h ****   {
1660:Drivers/CMSIS/Include/core_cm3.h ****     return (1UL);                                                   /* Reload value impossible */
1661:Drivers/CMSIS/Include/core_cm3.h ****   }
1662:Drivers/CMSIS/Include/core_cm3.h **** 
1663:Drivers/CMSIS/Include/core_cm3.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 1366              		.loc 2 1663 3 is_stmt 1 view .LVU401
 1367              		.loc 2 1663 18 is_stmt 0 view .LVU402
 1368 0034 5F4A     		ldr	r2, .L99+20
 1369 0036 5360     		str	r3, [r2, #4]
1664:Drivers/CMSIS/Include/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 1370              		.loc 2 1664 3 is_stmt 1 view .LVU403
 1371              	.LVL52:
 1372              	.LBB15:
 1373              	.LBI15:
1524:Drivers/CMSIS/Include/core_cm3.h **** {
 1374              		.loc 2 1524 22 view .LVU404
 1375              	.LBB16:
1526:Drivers/CMSIS/Include/core_cm3.h ****   {
 1376              		.loc 2 1526 3 view .LVU405
1528:Drivers/CMSIS/Include/core_cm3.h ****   }
 1377              		.loc 2 1528 5 view .LVU406
1528:Drivers/CMSIS/Include/core_cm3.h ****   }
 1378              		.loc 2 1528 55 is_stmt 0 view .LVU407
 1379 0038 5F4B     		ldr	r3, .L99+24
 1380              	.LVL53:
1528:Drivers/CMSIS/Include/core_cm3.h ****   }
 1381              		.loc 2 1528 55 view .LVU408
 1382 003a F021     		movs	r1, #240
 1383 003c 83F82310 		strb	r1, [r3, #35]
 1384              	.LVL54:
1528:Drivers/CMSIS/Include/core_cm3.h ****   }
 1385              		.loc 2 1528 55 view .LVU409
 1386              	.LBE16:
 1387              	.LBE15:
1665:Drivers/CMSIS/Include/core_cm3.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 1388              		.loc 2 1665 3 is_stmt 1 view .LVU410
 1389              		.loc 2 1665 18 is_stmt 0 view .LVU411
 1390 0040 0023     		movs	r3, #0
 1391 0042 9360     		str	r3, [r2, #8]
1666:Drivers/CMSIS/Include/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 1392              		.loc 2 1666 3 is_stmt 1 view .LVU412
 1393              		.loc 2 1666 18 is_stmt 0 view .LVU413
 1394 0044 0723     		movs	r3, #7
 1395 0046 1360     		str	r3, [r2]
1667:Drivers/CMSIS/Include/core_cm3.h ****                    SysTick_CTRL_TICKINT_Msk   |
1668:Drivers/CMSIS/Include/core_cm3.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
1669:Drivers/CMSIS/Include/core_cm3.h ****   return (0UL);                                                     /* Function successful */
 1396              		.loc 2 1669 3 is_stmt 1 view .LVU414
 1397              	.L81:
 1398              		.loc 2 1669 3 is_stmt 0 view .LVU415
 1399              	.LBE14:
ARM GAS  /tmp/ccbYAz4J.s 			page 74


 1400              	.LBE13:
 217:Src/main.c    **** 
 1401              		.loc 1 217 3 is_stmt 1 view .LVU416
 1402 0048 FFF7FEFF 		bl	SystemClock_Config
 1403              	.LVL55:
 224:Src/main.c    ****   MX_SPI1_Init();
 1404              		.loc 1 224 3 view .LVU417
 1405 004c FFF7FEFF 		bl	MX_GPIO_Init
 1406              	.LVL56:
 225:Src/main.c    ****   MX_ADC1_Init();
 1407              		.loc 1 225 3 view .LVU418
 1408 0050 FFF7FEFF 		bl	MX_SPI1_Init
 1409              	.LVL57:
 226:Src/main.c    ****   MX_CAN_Init();
 1410              		.loc 1 226 3 view .LVU419
 1411 0054 FFF7FEFF 		bl	MX_ADC1_Init
 1412              	.LVL58:
 227:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1413              		.loc 1 227 3 view .LVU420
 1414 0058 FFF7FEFF 		bl	MX_CAN_Init
 1415              	.LVL59:
 1416 005c 7CE0     		b	.L82
 1417              	.L95:
 240:Src/main.c    ****      //READ FOR ENABLE
 1418              		.loc 1 240 6 view .LVU421
 1419 005e 0220     		movs	r0, #2
 1420 0060 FFF7FEFF 		bl	car_state_machine
 1421              	.LVL60:
 242:Src/main.c    ****        car_state_machine(ENABLE_FLIPPED);
 1422              		.loc 1 242 5 view .LVU422
 242:Src/main.c    ****        car_state_machine(ENABLE_FLIPPED);
 1423              		.loc 1 242 8 is_stmt 0 view .LVU423
 1424 0064 4FF40041 		mov	r1, #32768
 1425 0068 5448     		ldr	r0, .L99+28
 1426 006a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1427              	.LVL61:
 242:Src/main.c    ****        car_state_machine(ENABLE_FLIPPED);
 1428              		.loc 1 242 7 view .LVU424
 1429 006e 78BB     		cbnz	r0, .L84
 243:Src/main.c    ****        //ADC for Brake pressure
 1430              		.loc 1 243 8 is_stmt 1 view .LVU425
 1431 0070 0420     		movs	r0, #4
 1432 0072 FFF7FEFF 		bl	car_state_machine
 1433              	.LVL62:
 245:Src/main.c    ****        //SEE IF BRAKE IS PRESSED 
 1434              		.loc 1 245 8 view .LVU426
 245:Src/main.c    ****        //SEE IF BRAKE IS PRESSED 
 1435              		.loc 1 245 26 is_stmt 0 view .LVU427
 1436 0076 0220     		movs	r0, #2
 1437 0078 FFF7FEFF 		bl	updateADC
 1438              	.LVL63:
 245:Src/main.c    ****        //SEE IF BRAKE IS PRESSED 
 1439              		.loc 1 245 24 view .LVU428
 1440 007c 504B     		ldr	r3, .L99+32
 1441 007e 1880     		strh	r0, [r3]	@ movhi
 247:Src/main.c    ****        //set 3 second timer
 1442              		.loc 1 247 8 is_stmt 1 view .LVU429
ARM GAS  /tmp/ccbYAz4J.s 			page 75


 247:Src/main.c    ****        //set 3 second timer
 1443              		.loc 1 247 10 is_stmt 0 view .LVU430
 1444 0080 40F6C313 		movw	r3, #2499
 1445 0084 9842     		cmp	r0, r3
 1446 0086 03D9     		bls	.L85
 249:Src/main.c    ****          RTDS_Timer = 2500; //change to 3000 for 3 seconds
 1447              		.loc 1 249 9 is_stmt 1 view .LVU431
 249:Src/main.c    ****          RTDS_Timer = 2500; //change to 3000 for 3 seconds
 1448              		.loc 1 249 28 is_stmt 0 view .LVU432
 1449 0088 4E4B     		ldr	r3, .L99+36
 1450 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 249:Src/main.c    ****          RTDS_Timer = 2500; //change to 3000 for 3 seconds
 1451              		.loc 1 249 11 view .LVU433
 1452 008c 042B     		cmp	r3, #4
 1453 008e 11D0     		beq	.L93
 1454              	.L85:
 259:Src/main.c    ****            HAL_GPIO_WritePin(GPIOB, RTDS_EN_Pin, GPIO_PIN_RESET);
 1455              		.loc 1 259 10 is_stmt 1 view .LVU434
 259:Src/main.c    ****            HAL_GPIO_WritePin(GPIOB, RTDS_EN_Pin, GPIO_PIN_RESET);
 1456              		.loc 1 259 25 is_stmt 0 view .LVU435
 1457 0090 444B     		ldr	r3, .L99+4
 1458 0092 1B68     		ldr	r3, [r3]
 259:Src/main.c    ****            HAL_GPIO_WritePin(GPIOB, RTDS_EN_Pin, GPIO_PIN_RESET);
 1459              		.loc 1 259 12 view .LVU436
 1460 0094 002B     		cmp	r3, #0
 1461 0096 66D1     		bne	.L83
 259:Src/main.c    ****            HAL_GPIO_WritePin(GPIOB, RTDS_EN_Pin, GPIO_PIN_RESET);
 1462              		.loc 1 259 51 discriminator 1 view .LVU437
 1463 0098 4A4B     		ldr	r3, .L99+36
 1464 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 259:Src/main.c    ****            HAL_GPIO_WritePin(GPIOB, RTDS_EN_Pin, GPIO_PIN_RESET);
 1465              		.loc 1 259 31 discriminator 1 view .LVU438
 1466 009c 13F0380F 		tst	r3, #56
 1467 00a0 61D0     		beq	.L83
 260:Src/main.c    ****            //SeT pwr
 1468              		.loc 1 260 12 is_stmt 1 view .LVU439
 1469 00a2 0022     		movs	r2, #0
 1470 00a4 0821     		movs	r1, #8
 1471 00a6 4548     		ldr	r0, .L99+28
 1472 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1473              	.LVL64:
 262:Src/main.c    ****             }// rtds buzzer stop
 1474              		.loc 1 262 12 view .LVU440
 1475 00ac 1020     		movs	r0, #16
 1476 00ae FFF7FEFF 		bl	car_state_machine
 1477              	.LVL65:
 1478 00b2 58E0     		b	.L83
 1479              	.L93:
 250:Src/main.c    ****          car_state_machine(RTDS_SOUND);
 1480              		.loc 1 250 10 view .LVU441
 250:Src/main.c    ****          car_state_machine(RTDS_SOUND);
 1481              		.loc 1 250 21 is_stmt 0 view .LVU442
 1482 00b4 3B4B     		ldr	r3, .L99+4
 1483 00b6 40F6C412 		movw	r2, #2500
 1484 00ba 1A60     		str	r2, [r3]
 251:Src/main.c    ****           
 1485              		.loc 1 251 10 is_stmt 1 view .LVU443
ARM GAS  /tmp/ccbYAz4J.s 			page 76


 1486 00bc 0820     		movs	r0, #8
 1487 00be FFF7FEFF 		bl	car_state_machine
 1488              	.LVL66:
 253:Src/main.c    ****          } 
 1489              		.loc 1 253 10 view .LVU444
 1490 00c2 0122     		movs	r2, #1
 1491 00c4 4FF49C71 		mov	r1, #312
 1492 00c8 3C48     		ldr	r0, .L99+28
 1493 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 1494              	.LVL67:
 1495 00ce DFE7     		b	.L85
 1496              	.L84:
 265:Src/main.c    ****      { //IF WE HAVE DE ENABLED LA COCHE
 1497              		.loc 1 265 11 view .LVU445
 265:Src/main.c    ****      { //IF WE HAVE DE ENABLED LA COCHE
 1498              		.loc 1 265 14 is_stmt 0 view .LVU446
 1499 00d0 4FF40041 		mov	r1, #32768
 1500 00d4 3948     		ldr	r0, .L99+28
 1501 00d6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1502              	.LVL68:
 265:Src/main.c    ****      { //IF WE HAVE DE ENABLED LA COCHE
 1503              		.loc 1 265 13 view .LVU447
 1504 00da 0128     		cmp	r0, #1
 1505 00dc 43D1     		bne	.L83
 267:Src/main.c    ****        HAL_GPIO_WritePin(GPIOB, RTD_EN_Pin,GPIO_PIN_RESET);
 1506              		.loc 1 267 8 is_stmt 1 view .LVU448
 267:Src/main.c    ****        HAL_GPIO_WritePin(GPIOB, RTD_EN_Pin,GPIO_PIN_RESET);
 1507              		.loc 1 267 28 is_stmt 0 view .LVU449
 1508 00de 394B     		ldr	r3, .L99+36
 1509 00e0 0222     		movs	r2, #2
 1510 00e2 1A70     		strb	r2, [r3]
 268:Src/main.c    ****        HAL_Delay(500);//THIS IS PUT HERE TO AVOID BOUNCING WHEN ITS REMOVED
 1511              		.loc 1 268 8 is_stmt 1 view .LVU450
 1512 00e4 0022     		movs	r2, #0
 1513 00e6 2021     		movs	r1, #32
 1514 00e8 3448     		ldr	r0, .L99+28
 1515 00ea FFF7FEFF 		bl	HAL_GPIO_WritePin
 1516              	.LVL69:
 269:Src/main.c    ****      }
 1517              		.loc 1 269 8 view .LVU451
 1518 00ee 4FF4FA70 		mov	r0, #500
 1519 00f2 FFF7FEFF 		bl	HAL_Delay
 1520              	.LVL70:
 1521 00f6 36E0     		b	.L83
 1522              	.L96:
 273:Src/main.c    ****   
 1523              		.loc 1 273 8 view .LVU452
 1524 00f8 0022     		movs	r2, #0
 1525 00fa 0821     		movs	r1, #8
 1526 00fc 2F48     		ldr	r0, .L99+28
 1527 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 1528              	.LVL71:
 1529 0102 34E0     		b	.L86
 1530              	.L97:
 277:Src/main.c    ****        HAL_GPIO_WritePin(GPIOB,BTSF_EN_Pin | APPS_EN_Pin,GPIO_PIN_RESET);
 1531              		.loc 1 277 6 view .LVU453
 277:Src/main.c    ****        HAL_GPIO_WritePin(GPIOB,BTSF_EN_Pin | APPS_EN_Pin,GPIO_PIN_RESET);
ARM GAS  /tmp/ccbYAz4J.s 			page 77


 1532              		.loc 1 277 10 is_stmt 0 view .LVU454
 1533 0104 FFF7FEFF 		bl	checkBTSF
 1534              	.LVL72:
 277:Src/main.c    ****        HAL_GPIO_WritePin(GPIOB,BTSF_EN_Pin | APPS_EN_Pin,GPIO_PIN_RESET);
 1535              		.loc 1 277 9 view .LVU455
 1536 0108 68B9     		cbnz	r0, .L94
 281:Src/main.c    ****          TxCar_state_data[0] = PWR_AVAILABLE;
 1537              		.loc 1 281 11 is_stmt 1 view .LVU456
 281:Src/main.c    ****          TxCar_state_data[0] = PWR_AVAILABLE;
 1538              		.loc 1 281 30 is_stmt 0 view .LVU457
 1539 010a 2E4B     		ldr	r3, .L99+36
 1540 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 281:Src/main.c    ****          TxCar_state_data[0] = PWR_AVAILABLE;
 1541              		.loc 1 281 13 view .LVU458
 1542 010e 202B     		cmp	r3, #32
 1543 0110 31D1     		bne	.L87
 282:Src/main.c    ****          HAL_GPIO_WritePin(GPIOB, BTSF_EN_Pin|APPS_EN_Pin ,GPIO_PIN_SET);
 1544              		.loc 1 282 10 is_stmt 1 view .LVU459
 282:Src/main.c    ****          HAL_GPIO_WritePin(GPIOB, BTSF_EN_Pin|APPS_EN_Pin ,GPIO_PIN_SET);
 1545              		.loc 1 282 30 is_stmt 0 view .LVU460
 1546 0112 2C4B     		ldr	r3, .L99+36
 1547 0114 1022     		movs	r2, #16
 1548 0116 1A70     		strb	r2, [r3]
 283:Src/main.c    ****      }
 1549              		.loc 1 283 10 is_stmt 1 view .LVU461
 1550 0118 0122     		movs	r2, #1
 1551 011a 4FF48871 		mov	r1, #272
 1552 011e 2748     		ldr	r0, .L99+28
 1553 0120 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1554              	.LVL73:
 1555 0124 27E0     		b	.L87
 1556              	.L94:
 278:Src/main.c    ****        TxCar_state_data[0] = SOFT_FAULT;
 1557              		.loc 1 278 8 view .LVU462
 1558 0126 0022     		movs	r2, #0
 1559 0128 4FF48871 		mov	r1, #272
 1560 012c 2348     		ldr	r0, .L99+28
 1561 012e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1562              	.LVL74:
 279:Src/main.c    ****      }
 1563              		.loc 1 279 8 view .LVU463
 279:Src/main.c    ****      }
 1564              		.loc 1 279 28 is_stmt 0 view .LVU464
 1565 0132 244B     		ldr	r3, .L99+36
 1566 0134 2022     		movs	r2, #32
 1567 0136 1A70     		strb	r2, [r3]
 1568 0138 1DE0     		b	.L87
 1569              	.L98:
 289:Src/main.c    ****      sendCar_state();
 1570              		.loc 1 289 6 is_stmt 1 view .LVU465
 1571 013a FFF7FEFF 		bl	sendFaultMsg
 1572              	.LVL75:
 290:Src/main.c    ****      CAN_Timer = 1000;
 1573              		.loc 1 290 6 view .LVU466
 1574 013e FFF7FEFF 		bl	sendCar_state
 1575              	.LVL76:
 291:Src/main.c    ****      //HAL_GPIO_WritePin(BRAKE_LIGHT_EN_GPIO_Port, BRAKE_LIGHT_EN_Pin, GPIO_PIN_SET);
ARM GAS  /tmp/ccbYAz4J.s 			page 78


 1576              		.loc 1 291 6 view .LVU467
 291:Src/main.c    ****      //HAL_GPIO_WritePin(BRAKE_LIGHT_EN_GPIO_Port, BRAKE_LIGHT_EN_Pin, GPIO_PIN_SET);
 1577              		.loc 1 291 16 is_stmt 0 view .LVU468
 1578 0142 194B     		ldr	r3, .L99+8
 1579 0144 4FF47A72 		mov	r2, #1000
 1580 0148 1A60     		str	r2, [r3]
 1581 014a 1AE0     		b	.L89
 1582              	.L90:
 302:Src/main.c    **** 
 1583              		.loc 1 302 6 is_stmt 1 view .LVU469
 1584 014c 0022     		movs	r2, #0
 1585 014e 4FF40051 		mov	r1, #8192
 1586 0152 1A48     		ldr	r0, .L99+28
 1587 0154 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1588              	.LVL77:
 1589              	.L82:
 236:Src/main.c    ****    {
 1590              		.loc 1 236 4 view .LVU470
 239:Src/main.c    ****      car_state_machine(PRECHARGED);
 1591              		.loc 1 239 4 view .LVU471
 239:Src/main.c    ****      car_state_machine(PRECHARGED);
 1592              		.loc 1 239 7 is_stmt 0 view .LVU472
 1593 0158 4021     		movs	r1, #64
 1594 015a 1848     		ldr	r0, .L99+28
 1595 015c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1596              	.LVL78:
 239:Src/main.c    ****      car_state_machine(PRECHARGED);
 1597              		.loc 1 239 6 view .LVU473
 1598 0160 0028     		cmp	r0, #0
 1599 0162 3FF47CAF 		beq	.L95
 1600              	.L83:
 272:Src/main.c    ****        HAL_GPIO_WritePin(GPIOB, RTDS_EN_Pin, GPIO_PIN_RESET);
 1601              		.loc 1 272 7 is_stmt 1 view .LVU474
 272:Src/main.c    ****        HAL_GPIO_WritePin(GPIOB, RTDS_EN_Pin, GPIO_PIN_RESET);
 1602              		.loc 1 272 21 is_stmt 0 view .LVU475
 1603 0166 0F4B     		ldr	r3, .L99+4
 1604 0168 1B68     		ldr	r3, [r3]
 272:Src/main.c    ****        HAL_GPIO_WritePin(GPIOB, RTDS_EN_Pin, GPIO_PIN_RESET);
 1605              		.loc 1 272 9 view .LVU476
 1606 016a 002B     		cmp	r3, #0
 1607 016c C4D0     		beq	.L96
 1608              	.L86:
 276:Src/main.c    ****      if (checkBTSF()){
 1609              		.loc 1 276 6 is_stmt 1 view .LVU477
 276:Src/main.c    ****      if (checkBTSF()){
 1610              		.loc 1 276 25 is_stmt 0 view .LVU478
 1611 016e 154B     		ldr	r3, .L99+36
 1612 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 276:Src/main.c    ****      if (checkBTSF()){
 1613              		.loc 1 276 8 view .LVU479
 1614 0172 072B     		cmp	r3, #7
 1615 0174 C6D8     		bhi	.L97
 1616              	.L87:
 287:Src/main.c    ****    if (CAN_Timer == 0){ //sending routine message every 1 second
 1617              		.loc 1 287 4 is_stmt 1 view .LVU480
 1618 0176 FFF7FEFF 		bl	readFaults
 1619              	.LVL79:
ARM GAS  /tmp/ccbYAz4J.s 			page 79


 288:Src/main.c    ****      sendFaultMsg();
 1620              		.loc 1 288 4 view .LVU481
 288:Src/main.c    ****      sendFaultMsg();
 1621              		.loc 1 288 18 is_stmt 0 view .LVU482
 1622 017a 0B4B     		ldr	r3, .L99+8
 1623 017c 1B68     		ldr	r3, [r3]
 288:Src/main.c    ****      sendFaultMsg();
 1624              		.loc 1 288 7 view .LVU483
 1625 017e 002B     		cmp	r3, #0
 1626 0180 DBD0     		beq	.L98
 1627              	.L89:
 297:Src/main.c    ****    if(brakePressure_2 > brakeThreshold){
 1628              		.loc 1 297 4 is_stmt 1 view .LVU484
 297:Src/main.c    ****    if(brakePressure_2 > brakeThreshold){
 1629              		.loc 1 297 22 is_stmt 0 view .LVU485
 1630 0182 0220     		movs	r0, #2
 1631 0184 FFF7FEFF 		bl	updateADC
 1632              	.LVL80:
 297:Src/main.c    ****    if(brakePressure_2 > brakeThreshold){
 1633              		.loc 1 297 20 view .LVU486
 1634 0188 0D4B     		ldr	r3, .L99+32
 1635 018a 1880     		strh	r0, [r3]	@ movhi
 298:Src/main.c    ****      HAL_GPIO_WritePin(GPIOB, BRAKE_LIGHT_EN_Pin, GPIO_PIN_SET);
 1636              		.loc 1 298 4 is_stmt 1 view .LVU487
 298:Src/main.c    ****      HAL_GPIO_WritePin(GPIOB, BRAKE_LIGHT_EN_Pin, GPIO_PIN_SET);
 1637              		.loc 1 298 6 is_stmt 0 view .LVU488
 1638 018c B0F5FA6F 		cmp	r0, #2000
 1639 0190 DCD9     		bls	.L90
 299:Src/main.c    ****    }
 1640              		.loc 1 299 6 is_stmt 1 view .LVU489
 1641 0192 0122     		movs	r2, #1
 1642 0194 4FF40051 		mov	r1, #8192
 1643 0198 0848     		ldr	r0, .L99+28
 1644 019a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1645              	.LVL81:
 1646 019e DBE7     		b	.L82
 1647              	.L100:
 1648              		.align	2
 1649              	.L99:
 1650 01a0 00000000 		.word	millisTimer
 1651 01a4 00000000 		.word	RTDS_Timer
 1652 01a8 00000000 		.word	CAN_Timer
 1653 01ac 00000000 		.word	SystemCoreClock
 1654 01b0 D34D6210 		.word	274877907
 1655 01b4 10E000E0 		.word	-536813552
 1656 01b8 00ED00E0 		.word	-536810240
 1657 01bc 000C0140 		.word	1073810432
 1658 01c0 00000000 		.word	brakePressure_2
 1659 01c4 00000000 		.word	.LANCHOR3
 1660              		.cfi_endproc
 1661              	.LFE66:
 1663              		.section	.text.Error_Handler,"ax",%progbits
 1664              		.align	1
 1665              		.global	Error_Handler
 1666              		.syntax unified
 1667              		.thumb
 1668              		.thumb_func
ARM GAS  /tmp/ccbYAz4J.s 			page 80


 1669              		.fpu softvfp
 1671              	Error_Handler:
 1672              	.LFB80:
 789:Src/main.c    **** 
 790:Src/main.c    **** /* USER CODE BEGIN 4 */
 791:Src/main.c    **** 
 792:Src/main.c    **** 
 793:Src/main.c    **** /* USER CODE END 4 */
 794:Src/main.c    **** 
 795:Src/main.c    **** /**
 796:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 797:Src/main.c    ****   * @retval None
 798:Src/main.c    ****   */
 799:Src/main.c    **** void Error_Handler(void)
 800:Src/main.c    **** {
 1673              		.loc 1 800 1 view -0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
 801:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 802:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 803:Src/main.c    **** 
 804:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 805:Src/main.c    **** }
 1678              		.loc 1 805 1 view .LVU491
 1679 0000 7047     		bx	lr
 1680              		.cfi_endproc
 1681              	.LFE80:
 1683              		.global	sConfig
 1684              		.comm	TxFaultsMailbox,4,4
 1685              		.comm	apps,1,1
 1686              		.comm	bspd,1,1
 1687              		.comm	imd,1,1
 1688              		.comm	bms,1,1
 1689              		.global	TxFault_data
 1690              		.comm	TxFaults,24,4
 1691              		.comm	TxCar_stateMailbox,4,4
 1692              		.global	TxCar_state_data
 1693              		.comm	TxCar_state,24,4
 1694              		.global	BTSF_ACTIVE
 1695              		.global	hardFaultFlag
 1696              		.global	Prev_State
 1697              		.global	max_throttle
 1698              		.comm	throttle_B,2,2
 1699              		.comm	throttle_A,2,2
 1700              		.comm	brakePressure_2,2,2
 1701              		.comm	brakePressure_1,2,2
 1702              		.comm	steeringPos,2,2
 1703              		.comm	brakePos,2,2
 1704              		.comm	hspi1,88,4
 1705              		.comm	hcan,40,4
 1706              		.comm	hadc1,48,4
 1707              		.global	throttle_B_max
 1708              		.global	throttle_B_min
 1709              		.global	throttle_A_max
 1710              		.global	throttle_A_min
ARM GAS  /tmp/ccbYAz4J.s 			page 81


 1711              		.global	APPS_difference
 1712              		.global	RTD_Threshold
 1713              		.global	brakeThreshold
 1714              		.global	ThrottleA_25
 1715              		.global	ThrottleA_5
 1716              		.comm	CAN_Timer,4,4
 1717              		.comm	RTDS_Timer,4,4
 1718              		.comm	millisTimer,4,4
 1719              		.section	.bss.BTSF_ACTIVE,"aw",%nobits
 1720              		.set	.LANCHOR1,. + 0
 1723              	BTSF_ACTIVE:
 1724 0000 00       		.space	1
 1725              		.section	.bss.Prev_State,"aw",%nobits
 1728              	Prev_State:
 1729 0000 00       		.space	1
 1730              		.section	.bss.hardFaultFlag,"aw",%nobits
 1731              		.align	2
 1734              	hardFaultFlag:
 1735 0000 00000000 		.space	4
 1736              		.section	.bss.sConfig,"aw",%nobits
 1737              		.align	2
 1738              		.set	.LANCHOR0,. + 0
 1741              	sConfig:
 1742 0000 00000000 		.space	12
 1742      00000000 
 1742      00000000 
 1743              		.section	.data.TxCar_state_data,"aw"
 1744              		.align	2
 1745              		.set	.LANCHOR3,. + 0
 1748              	TxCar_state_data:
 1749 0000 00       		.byte	0
 1750 0001 45       		.byte	69
 1751 0002 45       		.byte	69
 1752 0003 86       		.byte	-122
 1753 0004 56       		.byte	86
 1754 0005 97       		.byte	-105
 1755 0006 67       		.byte	103
 1756 0007 98       		.byte	-104
 1757              		.section	.data.TxFault_data,"aw"
 1758              		.align	2
 1759              		.set	.LANCHOR2,. + 0
 1762              	TxFault_data:
 1763 0000 55       		.byte	85
 1764 0001 55       		.byte	85
 1765 0002 55       		.byte	85
 1766 0003 55       		.byte	85
 1767 0004 55       		.byte	85
 1768 0005 55       		.byte	85
 1769 0006 55       		.byte	85
 1770 0007 55       		.byte	85
 1771              		.section	.data.max_throttle,"aw"
 1772              		.align	1
 1775              	max_throttle:
 1776 0000 0A00     		.short	10
 1777              		.section	.rodata.APPS_difference,"a"
 1778              		.align	2
 1781              	APPS_difference:
ARM GAS  /tmp/ccbYAz4J.s 			page 82


 1782 0000 58020000 		.word	600
 1783              		.section	.rodata.RTD_Threshold,"a"
 1784              		.align	1
 1787              	RTD_Threshold:
 1788 0000 C409     		.short	2500
 1789              		.section	.rodata.ThrottleA_25,"a"
 1790              		.align	1
 1793              	ThrottleA_25:
 1794 0000 B303     		.short	947
 1795              		.section	.rodata.ThrottleA_5,"a"
 1796              		.align	1
 1799              	ThrottleA_5:
 1800 0000 4802     		.short	584
 1801              		.section	.rodata.brakeThreshold,"a"
 1802              		.align	1
 1805              	brakeThreshold:
 1806 0000 D007     		.short	2000
 1807              		.section	.rodata.throttle_A_max,"a"
 1808              		.align	2
 1811              	throttle_A_max:
 1812 0000 0C090000 		.word	2316
 1813              		.section	.rodata.throttle_A_min,"a"
 1814              		.align	2
 1817              	throttle_A_min:
 1818 0000 EB010000 		.word	491
 1819              		.section	.rodata.throttle_B_max,"a"
 1820              		.align	2
 1823              	throttle_B_max:
 1824 0000 DA070000 		.word	2010
 1825              		.section	.rodata.throttle_B_min,"a"
 1826              		.align	2
 1829              	throttle_B_min:
 1830 0000 F6000000 		.word	246
 1831              		.text
 1832              	.Letext0:
 1833              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1834              		.file 4 "/mnt/c/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_types.h"
 1835              		.file 5 "/mnt/c/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1836              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1837              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1838              		.file 8 "/mnt/c/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 1839              		.file 9 "/mnt/c/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_types.h"
 1840              		.file 10 "/mnt/c/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/include/stddef.h"
 1841              		.file 11 "/mnt/c/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/reent.h"
 1842              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1843              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1844              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1845              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1846              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1847              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 1848              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1849              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1850              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1851              		.file 21 "Inc/main.h"
 1852              		.file 22 "/mnt/c/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/stdlib.h"
 1853              		.file 23 "<built-in>"
ARM GAS  /tmp/ccbYAz4J.s 			page 83


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccbYAz4J.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccbYAz4J.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccbYAz4J.s:227    .text.MX_GPIO_Init:00000000000000f0 $d
     /tmp/ccbYAz4J.s:237    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccbYAz4J.s:243    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccbYAz4J.s:305    .text.MX_SPI1_Init:0000000000000030 $d
                            *COM*:0000000000000058 hspi1
     /tmp/ccbYAz4J.s:311    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccbYAz4J.s:317    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccbYAz4J.s:476    .text.MX_ADC1_Init:00000000000000b0 $d
                            *COM*:0000000000000030 hadc1
     /tmp/ccbYAz4J.s:483    .text.MX_CAN_Init:0000000000000000 $t
     /tmp/ccbYAz4J.s:489    .text.MX_CAN_Init:0000000000000000 MX_CAN_Init
     /tmp/ccbYAz4J.s:600    .text.MX_CAN_Init:000000000000005c $d
                            *COM*:0000000000000028 hcan
                            *COM*:0000000000000018 TxFaults
                            *COM*:0000000000000018 TxCar_state
     /tmp/ccbYAz4J.s:608    .text.updateADC:0000000000000000 $t
     /tmp/ccbYAz4J.s:615    .text.updateADC:0000000000000000 updateADC
     /tmp/ccbYAz4J.s:734    .text.updateADC:0000000000000074 $d
     /tmp/ccbYAz4J.s:740    .text.checkBTSF:0000000000000000 $t
     /tmp/ccbYAz4J.s:747    .text.checkBTSF:0000000000000000 checkBTSF
     /tmp/ccbYAz4J.s:820    .text.checkBTSF:0000000000000048 $d
                            *COM*:0000000000000002 brakePressure_2
                            *COM*:0000000000000002 throttle_A
     /tmp/ccbYAz4J.s:827    .text.APPS_Diff:0000000000000000 $t
     /tmp/ccbYAz4J.s:834    .text.APPS_Diff:0000000000000000 APPS_Diff
     /tmp/ccbYAz4J.s:866    .text.APPS_Diff:0000000000000020 $d
                            *COM*:0000000000000002 throttle_B
     /tmp/ccbYAz4J.s:872    .text.checkAPPS:0000000000000000 $t
     /tmp/ccbYAz4J.s:879    .text.checkAPPS:0000000000000000 checkAPPS
     /tmp/ccbYAz4J.s:936    .text.checkAPPS:0000000000000030 $d
                            *COM*:0000000000000004 millisTimer
     /tmp/ccbYAz4J.s:943    .text.sendFaultMsg:0000000000000000 $t
     /tmp/ccbYAz4J.s:950    .text.sendFaultMsg:0000000000000000 sendFaultMsg
     /tmp/ccbYAz4J.s:993    .text.sendFaultMsg:0000000000000028 $d
                            *COM*:0000000000000001 bms
                            *COM*:0000000000000001 imd
                            *COM*:0000000000000001 bspd
                            *COM*:0000000000000001 apps
                            *COM*:0000000000000004 TxFaultsMailbox
     /tmp/ccbYAz4J.s:1005   .text.sendCar_state:0000000000000000 $t
     /tmp/ccbYAz4J.s:1012   .text.sendCar_state:0000000000000000 sendCar_state
     /tmp/ccbYAz4J.s:1035   .text.sendCar_state:0000000000000010 $d
                            *COM*:0000000000000004 TxCar_stateMailbox
     /tmp/ccbYAz4J.s:1043   .text.car_state_machine:0000000000000000 $t
     /tmp/ccbYAz4J.s:1050   .text.car_state_machine:0000000000000000 car_state_machine
     /tmp/ccbYAz4J.s:1075   .text.car_state_machine:0000000000000010 $d
     /tmp/ccbYAz4J.s:1080   .text.readFaults:0000000000000000 $t
     /tmp/ccbYAz4J.s:1087   .text.readFaults:0000000000000000 readFaults
     /tmp/ccbYAz4J.s:1192   .text.readFaults:0000000000000074 $d
     /tmp/ccbYAz4J.s:1203   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccbYAz4J.s:1210   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccbYAz4J.s:1307   .text.main:0000000000000000 $t
     /tmp/ccbYAz4J.s:1314   .text.main:0000000000000000 main
ARM GAS  /tmp/ccbYAz4J.s 			page 84


     /tmp/ccbYAz4J.s:1650   .text.main:00000000000001a0 $d
                            *COM*:0000000000000004 RTDS_Timer
                            *COM*:0000000000000004 CAN_Timer
     /tmp/ccbYAz4J.s:1664   .text.Error_Handler:0000000000000000 $t
     /tmp/ccbYAz4J.s:1671   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccbYAz4J.s:1741   .bss.sConfig:0000000000000000 sConfig
     /tmp/ccbYAz4J.s:1762   .data.TxFault_data:0000000000000000 TxFault_data
     /tmp/ccbYAz4J.s:1748   .data.TxCar_state_data:0000000000000000 TxCar_state_data
     /tmp/ccbYAz4J.s:1723   .bss.BTSF_ACTIVE:0000000000000000 BTSF_ACTIVE
     /tmp/ccbYAz4J.s:1734   .bss.hardFaultFlag:0000000000000000 hardFaultFlag
     /tmp/ccbYAz4J.s:1728   .bss.Prev_State:0000000000000000 Prev_State
     /tmp/ccbYAz4J.s:1775   .data.max_throttle:0000000000000000 max_throttle
                            *COM*:0000000000000002 brakePressure_1
                            *COM*:0000000000000002 steeringPos
                            *COM*:0000000000000002 brakePos
     /tmp/ccbYAz4J.s:1823   .rodata.throttle_B_max:0000000000000000 throttle_B_max
     /tmp/ccbYAz4J.s:1829   .rodata.throttle_B_min:0000000000000000 throttle_B_min
     /tmp/ccbYAz4J.s:1811   .rodata.throttle_A_max:0000000000000000 throttle_A_max
     /tmp/ccbYAz4J.s:1817   .rodata.throttle_A_min:0000000000000000 throttle_A_min
     /tmp/ccbYAz4J.s:1781   .rodata.APPS_difference:0000000000000000 APPS_difference
     /tmp/ccbYAz4J.s:1787   .rodata.RTD_Threshold:0000000000000000 RTD_Threshold
     /tmp/ccbYAz4J.s:1805   .rodata.brakeThreshold:0000000000000000 brakeThreshold
     /tmp/ccbYAz4J.s:1793   .rodata.ThrottleA_25:0000000000000000 ThrottleA_25
     /tmp/ccbYAz4J.s:1799   .rodata.ThrottleA_5:0000000000000000 ThrottleA_5
     /tmp/ccbYAz4J.s:1724   .bss.BTSF_ACTIVE:0000000000000000 $d
     /tmp/ccbYAz4J.s:1729   .bss.Prev_State:0000000000000000 $d
     /tmp/ccbYAz4J.s:1731   .bss.hardFaultFlag:0000000000000000 $d
     /tmp/ccbYAz4J.s:1737   .bss.sConfig:0000000000000000 $d
     /tmp/ccbYAz4J.s:1744   .data.TxCar_state_data:0000000000000000 $d
     /tmp/ccbYAz4J.s:1758   .data.TxFault_data:0000000000000000 $d
     /tmp/ccbYAz4J.s:1772   .data.max_throttle:0000000000000000 $d
     /tmp/ccbYAz4J.s:1778   .rodata.APPS_difference:0000000000000000 $d
     /tmp/ccbYAz4J.s:1784   .rodata.RTD_Threshold:0000000000000000 $d
     /tmp/ccbYAz4J.s:1790   .rodata.ThrottleA_25:0000000000000000 $d
     /tmp/ccbYAz4J.s:1796   .rodata.ThrottleA_5:0000000000000000 $d
     /tmp/ccbYAz4J.s:1802   .rodata.brakeThreshold:0000000000000000 $d
     /tmp/ccbYAz4J.s:1808   .rodata.throttle_A_max:0000000000000000 $d
     /tmp/ccbYAz4J.s:1814   .rodata.throttle_A_min:0000000000000000 $d
     /tmp/ccbYAz4J.s:1820   .rodata.throttle_B_max:0000000000000000 $d
     /tmp/ccbYAz4J.s:1826   .rodata.throttle_B_min:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
HAL_CAN_Start
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_CAN_AddTxMessage
HAL_GPIO_ReadPin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
ARM GAS  /tmp/ccbYAz4J.s 			page 85


HAL_RCCEx_PeriphCLKConfig
HAL_Init
SystemCoreClockUpdate
HAL_Delay
SystemCoreClock
