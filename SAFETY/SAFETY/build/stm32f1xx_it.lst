ARM GAS  /tmp/ccDkPcY6.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB66:
  26              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_it.c **** /**
   3:Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Src/stm32f1xx_it.c ****   *
   8:Src/stm32f1xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   9:Src/stm32f1xx_it.c ****   *
  10:Src/stm32f1xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/stm32f1xx_it.c ****   * are permitted provided that the following conditions are met:
  12:Src/stm32f1xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer.
  14:Src/stm32f1xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/stm32f1xx_it.c ****   *      and/or other materials provided with the distribution.
  17:Src/stm32f1xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/stm32f1xx_it.c ****   *      may be used to endorse or promote products derived from this software
  19:Src/stm32f1xx_it.c ****   *      without specific prior written permission.
  20:Src/stm32f1xx_it.c ****   *
  21:Src/stm32f1xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/stm32f1xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/stm32f1xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/stm32f1xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/stm32f1xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/stm32f1xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/stm32f1xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/stm32f1xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/stm32f1xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/stm32f1xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Src/stm32f1xx_it.c ****   *
  32:Src/stm32f1xx_it.c ****   ******************************************************************************
ARM GAS  /tmp/ccDkPcY6.s 			page 2


  33:Src/stm32f1xx_it.c ****   */
  34:Src/stm32f1xx_it.c **** /* USER CODE END Header */
  35:Src/stm32f1xx_it.c **** 
  36:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  37:Src/stm32f1xx_it.c **** #include "main.h"
  38:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  39:Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  40:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  41:Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  42:Src/stm32f1xx_it.c **** 
  43:Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  44:Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  45:Src/stm32f1xx_it.c **** 
  46:Src/stm32f1xx_it.c **** /* USER CODE END TD */
  47:Src/stm32f1xx_it.c **** 
  48:Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  49:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  50:Src/stm32f1xx_it.c ****  
  51:Src/stm32f1xx_it.c **** /* USER CODE END PD */
  52:Src/stm32f1xx_it.c **** 
  53:Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  54:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  55:Src/stm32f1xx_it.c **** 
  56:Src/stm32f1xx_it.c **** /* USER CODE END PM */
  57:Src/stm32f1xx_it.c **** 
  58:Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  59:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  60:Src/stm32f1xx_it.c **** 
  61:Src/stm32f1xx_it.c **** 
  62:Src/stm32f1xx_it.c **** 
  63:Src/stm32f1xx_it.c **** /* USER CODE END PV */
  64:Src/stm32f1xx_it.c **** 
  65:Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  66:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  67:Src/stm32f1xx_it.c **** 
  68:Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  69:Src/stm32f1xx_it.c **** 
  70:Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  71:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  72:Src/stm32f1xx_it.c **** 
  73:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  74:Src/stm32f1xx_it.c **** 
  75:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  76:Src/stm32f1xx_it.c **** extern ADC_HandleTypeDef hadc1;
  77:Src/stm32f1xx_it.c **** extern CAN_HandleTypeDef hcan;
  78:Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  79:Src/stm32f1xx_it.c **** 
  80:Src/stm32f1xx_it.c **** /* USER CODE END EV */
  81:Src/stm32f1xx_it.c **** 
  82:Src/stm32f1xx_it.c **** /******************************************************************************/
  83:Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  84:Src/stm32f1xx_it.c **** /******************************************************************************/
  85:Src/stm32f1xx_it.c **** /**
  86:Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  87:Src/stm32f1xx_it.c ****   */
  88:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  89:Src/stm32f1xx_it.c **** {
ARM GAS  /tmp/ccDkPcY6.s 			page 3


  27              		.loc 1 89 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  90:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  91:Src/stm32f1xx_it.c **** 
  92:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  93:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  94:Src/stm32f1xx_it.c **** 
  95:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  96:Src/stm32f1xx_it.c **** }
  32              		.loc 1 96 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE66:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
  46              	.LFB67:
  97:Src/stm32f1xx_it.c **** 
  98:Src/stm32f1xx_it.c **** /**
  99:Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
 100:Src/stm32f1xx_it.c ****   */
 101:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
 102:Src/stm32f1xx_it.c **** {
  47              		.loc 1 102 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
 103:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 104:Src/stm32f1xx_it.c **** 
 105:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 106:Src/stm32f1xx_it.c ****   while (1)
  54              		.loc 1 106 3 discriminator 1 view .LVU3
 107:Src/stm32f1xx_it.c ****   {
 108:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 109:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 110:Src/stm32f1xx_it.c ****   }
  55              		.loc 1 110 3 discriminator 1 view .LVU4
  56 0000 FEE7     		b	.L3
  57              		.cfi_endproc
  58              	.LFE67:
  60              		.section	.text.MemManage_Handler,"ax",%progbits
  61              		.align	1
  62              		.global	MemManage_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
ARM GAS  /tmp/ccDkPcY6.s 			page 4


  66              		.fpu softvfp
  68              	MemManage_Handler:
  69              	.LFB68:
 111:Src/stm32f1xx_it.c **** }
 112:Src/stm32f1xx_it.c **** 
 113:Src/stm32f1xx_it.c **** /**
 114:Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 115:Src/stm32f1xx_it.c ****   */
 116:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 117:Src/stm32f1xx_it.c **** {
  70              		.loc 1 117 1 view -0
  71              		.cfi_startproc
  72              		@ Volatile: function does not return.
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76              	.L5:
 118:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 119:Src/stm32f1xx_it.c **** 
 120:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 121:Src/stm32f1xx_it.c ****   while (1)
  77              		.loc 1 121 3 discriminator 1 view .LVU6
 122:Src/stm32f1xx_it.c ****   {
 123:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 124:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 125:Src/stm32f1xx_it.c ****   }
  78              		.loc 1 125 3 discriminator 1 view .LVU7
  79 0000 FEE7     		b	.L5
  80              		.cfi_endproc
  81              	.LFE68:
  83              		.section	.text.BusFault_Handler,"ax",%progbits
  84              		.align	1
  85              		.global	BusFault_Handler
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  89              		.fpu softvfp
  91              	BusFault_Handler:
  92              	.LFB69:
 126:Src/stm32f1xx_it.c **** }
 127:Src/stm32f1xx_it.c **** 
 128:Src/stm32f1xx_it.c **** /**
 129:Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 130:Src/stm32f1xx_it.c ****   */
 131:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 132:Src/stm32f1xx_it.c **** {
  93              		.loc 1 132 1 view -0
  94              		.cfi_startproc
  95              		@ Volatile: function does not return.
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99              	.L7:
 133:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 134:Src/stm32f1xx_it.c **** 
 135:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 136:Src/stm32f1xx_it.c ****   while (1)
ARM GAS  /tmp/ccDkPcY6.s 			page 5


 100              		.loc 1 136 3 discriminator 1 view .LVU9
 137:Src/stm32f1xx_it.c ****   {
 138:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 139:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 140:Src/stm32f1xx_it.c ****   }
 101              		.loc 1 140 3 discriminator 1 view .LVU10
 102 0000 FEE7     		b	.L7
 103              		.cfi_endproc
 104              	.LFE69:
 106              		.section	.text.UsageFault_Handler,"ax",%progbits
 107              		.align	1
 108              		.global	UsageFault_Handler
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu softvfp
 114              	UsageFault_Handler:
 115              	.LFB70:
 141:Src/stm32f1xx_it.c **** }
 142:Src/stm32f1xx_it.c **** 
 143:Src/stm32f1xx_it.c **** /**
 144:Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 145:Src/stm32f1xx_it.c ****   */
 146:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 147:Src/stm32f1xx_it.c **** {
 116              		.loc 1 147 1 view -0
 117              		.cfi_startproc
 118              		@ Volatile: function does not return.
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.L9:
 148:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 149:Src/stm32f1xx_it.c **** 
 150:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 151:Src/stm32f1xx_it.c ****   while (1)
 123              		.loc 1 151 3 discriminator 1 view .LVU12
 152:Src/stm32f1xx_it.c ****   {
 153:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 154:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 155:Src/stm32f1xx_it.c ****   }
 124              		.loc 1 155 3 discriminator 1 view .LVU13
 125 0000 FEE7     		b	.L9
 126              		.cfi_endproc
 127              	.LFE70:
 129              		.section	.text.SVC_Handler,"ax",%progbits
 130              		.align	1
 131              		.global	SVC_Handler
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu softvfp
 137              	SVC_Handler:
 138              	.LFB71:
 156:Src/stm32f1xx_it.c **** }
 157:Src/stm32f1xx_it.c **** 
 158:Src/stm32f1xx_it.c **** /**
ARM GAS  /tmp/ccDkPcY6.s 			page 6


 159:Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 160:Src/stm32f1xx_it.c ****   */
 161:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 162:Src/stm32f1xx_it.c **** {
 139              		.loc 1 162 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 163:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 164:Src/stm32f1xx_it.c **** 
 165:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 166:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 167:Src/stm32f1xx_it.c **** 
 168:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 169:Src/stm32f1xx_it.c **** }
 144              		.loc 1 169 1 view .LVU15
 145 0000 7047     		bx	lr
 146              		.cfi_endproc
 147              	.LFE71:
 149              		.section	.text.DebugMon_Handler,"ax",%progbits
 150              		.align	1
 151              		.global	DebugMon_Handler
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu softvfp
 157              	DebugMon_Handler:
 158              	.LFB72:
 170:Src/stm32f1xx_it.c **** 
 171:Src/stm32f1xx_it.c **** /**
 172:Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 173:Src/stm32f1xx_it.c ****   */
 174:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 175:Src/stm32f1xx_it.c **** {
 159              		.loc 1 175 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 176:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 177:Src/stm32f1xx_it.c **** 
 178:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 179:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 180:Src/stm32f1xx_it.c **** 
 181:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 182:Src/stm32f1xx_it.c **** }
 164              		.loc 1 182 1 view .LVU17
 165 0000 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE72:
 169              		.section	.text.PendSV_Handler,"ax",%progbits
 170              		.align	1
 171              		.global	PendSV_Handler
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
ARM GAS  /tmp/ccDkPcY6.s 			page 7


 175              		.fpu softvfp
 177              	PendSV_Handler:
 178              	.LFB73:
 183:Src/stm32f1xx_it.c **** 
 184:Src/stm32f1xx_it.c **** /**
 185:Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 186:Src/stm32f1xx_it.c ****   */
 187:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 188:Src/stm32f1xx_it.c **** {
 179              		.loc 1 188 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 189:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 190:Src/stm32f1xx_it.c **** 
 191:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 192:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 193:Src/stm32f1xx_it.c **** 
 194:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 195:Src/stm32f1xx_it.c **** }
 184              		.loc 1 195 1 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE73:
 189              		.section	.text.SysTick_Handler,"ax",%progbits
 190              		.align	1
 191              		.global	SysTick_Handler
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu softvfp
 197              	SysTick_Handler:
 198              	.LFB74:
 196:Src/stm32f1xx_it.c **** 
 197:Src/stm32f1xx_it.c **** /**
 198:Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 199:Src/stm32f1xx_it.c ****   */
 200:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 201:Src/stm32f1xx_it.c **** {
 199              		.loc 1 201 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI0:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 202:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 203:Src/stm32f1xx_it.c **** 
 204:Src/stm32f1xx_it.c ****   if (millisTimer != 0)
 208              		.loc 1 204 3 view .LVU21
 209              		.loc 1 204 19 is_stmt 0 view .LVU22
 210 0002 0A4B     		ldr	r3, .L18
 211 0004 1B68     		ldr	r3, [r3]
 212              		.loc 1 204 6 view .LVU23
ARM GAS  /tmp/ccDkPcY6.s 			page 8


 213 0006 13B1     		cbz	r3, .L14
 205:Src/stm32f1xx_it.c ****     {
 206:Src/stm32f1xx_it.c ****         millisTimer--;
 214              		.loc 1 206 9 is_stmt 1 view .LVU24
 215              		.loc 1 206 20 is_stmt 0 view .LVU25
 216 0008 013B     		subs	r3, r3, #1
 217 000a 084A     		ldr	r2, .L18
 218 000c 1360     		str	r3, [r2]
 219              	.L14:
 207:Src/stm32f1xx_it.c ****     }
 208:Src/stm32f1xx_it.c **** 
 209:Src/stm32f1xx_it.c ****   if (RTDS_Timer != 0)
 220              		.loc 1 209 3 is_stmt 1 view .LVU26
 221              		.loc 1 209 18 is_stmt 0 view .LVU27
 222 000e 084B     		ldr	r3, .L18+4
 223 0010 1B68     		ldr	r3, [r3]
 224              		.loc 1 209 6 view .LVU28
 225 0012 13B1     		cbz	r3, .L15
 210:Src/stm32f1xx_it.c ****   {
 211:Src/stm32f1xx_it.c ****       RTDS_Timer--;
 226              		.loc 1 211 7 is_stmt 1 view .LVU29
 227              		.loc 1 211 17 is_stmt 0 view .LVU30
 228 0014 013B     		subs	r3, r3, #1
 229 0016 064A     		ldr	r2, .L18+4
 230 0018 1360     		str	r3, [r2]
 231              	.L15:
 212:Src/stm32f1xx_it.c ****   }
 213:Src/stm32f1xx_it.c ****   
 214:Src/stm32f1xx_it.c ****   if (CAN_Timer != 0)
 232              		.loc 1 214 3 is_stmt 1 view .LVU31
 233              		.loc 1 214 17 is_stmt 0 view .LVU32
 234 001a 064B     		ldr	r3, .L18+8
 235 001c 1B68     		ldr	r3, [r3]
 236              		.loc 1 214 6 view .LVU33
 237 001e 13B1     		cbz	r3, .L16
 215:Src/stm32f1xx_it.c ****     CAN_Timer--;
 238              		.loc 1 215 5 is_stmt 1 view .LVU34
 239              		.loc 1 215 14 is_stmt 0 view .LVU35
 240 0020 013B     		subs	r3, r3, #1
 241 0022 044A     		ldr	r2, .L18+8
 242 0024 1360     		str	r3, [r2]
 243              	.L16:
 216:Src/stm32f1xx_it.c **** 
 217:Src/stm32f1xx_it.c **** 
 218:Src/stm32f1xx_it.c **** 
 219:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 220:Src/stm32f1xx_it.c ****   HAL_IncTick();
 244              		.loc 1 220 3 is_stmt 1 view .LVU36
 245 0026 FFF7FEFF 		bl	HAL_IncTick
 246              	.LVL0:
 221:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 222:Src/stm32f1xx_it.c **** 
 223:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 224:Src/stm32f1xx_it.c **** }
 247              		.loc 1 224 1 is_stmt 0 view .LVU37
 248 002a 08BD     		pop	{r3, pc}
 249              	.L19:
ARM GAS  /tmp/ccDkPcY6.s 			page 9


 250              		.align	2
 251              	.L18:
 252 002c 00000000 		.word	millisTimer
 253 0030 00000000 		.word	RTDS_Timer
 254 0034 00000000 		.word	CAN_Timer
 255              		.cfi_endproc
 256              	.LFE74:
 258              		.section	.text.ADC1_2_IRQHandler,"ax",%progbits
 259              		.align	1
 260              		.global	ADC1_2_IRQHandler
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu softvfp
 266              	ADC1_2_IRQHandler:
 267              	.LFB75:
 225:Src/stm32f1xx_it.c **** 
 226:Src/stm32f1xx_it.c **** /******************************************************************************/
 227:Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 228:Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 229:Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 230:Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 231:Src/stm32f1xx_it.c **** /******************************************************************************/
 232:Src/stm32f1xx_it.c **** 
 233:Src/stm32f1xx_it.c **** /**
 234:Src/stm32f1xx_it.c ****   * @brief This function handles ADC1 and ADC2 global interrupts.
 235:Src/stm32f1xx_it.c ****   */
 236:Src/stm32f1xx_it.c **** void ADC1_2_IRQHandler(void)
 237:Src/stm32f1xx_it.c **** {
 268              		.loc 1 237 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272 0000 08B5     		push	{r3, lr}
 273              	.LCFI1:
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 3, -8
 276              		.cfi_offset 14, -4
 238:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 0 */
 239:Src/stm32f1xx_it.c **** 
 240:Src/stm32f1xx_it.c ****   /* USER CODE END ADC1_2_IRQn 0 */
 241:Src/stm32f1xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 277              		.loc 1 241 3 view .LVU39
 278 0002 0248     		ldr	r0, .L22
 279 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 280              	.LVL1:
 242:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 1 */
 243:Src/stm32f1xx_it.c **** 
 244:Src/stm32f1xx_it.c ****   /* USER CODE END ADC1_2_IRQn 1 */
 245:Src/stm32f1xx_it.c **** }
 281              		.loc 1 245 1 is_stmt 0 view .LVU40
 282 0008 08BD     		pop	{r3, pc}
 283              	.L23:
 284 000a 00BF     		.align	2
 285              	.L22:
 286 000c 00000000 		.word	hadc1
 287              		.cfi_endproc
ARM GAS  /tmp/ccDkPcY6.s 			page 10


 288              	.LFE75:
 290              		.section	.text.USB_LP_CAN1_RX0_IRQHandler,"ax",%progbits
 291              		.align	1
 292              		.global	USB_LP_CAN1_RX0_IRQHandler
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu softvfp
 298              	USB_LP_CAN1_RX0_IRQHandler:
 299              	.LFB76:
 246:Src/stm32f1xx_it.c **** 
 247:Src/stm32f1xx_it.c **** /**
 248:Src/stm32f1xx_it.c ****   * @brief This function handles USB low priority or CAN RX0 interrupts.
 249:Src/stm32f1xx_it.c ****   */
 250:Src/stm32f1xx_it.c **** void USB_LP_CAN1_RX0_IRQHandler(void)
 251:Src/stm32f1xx_it.c **** {
 300              		.loc 1 251 1 is_stmt 1 view -0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304 0000 08B5     		push	{r3, lr}
 305              	.LCFI2:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 3, -8
 308              		.cfi_offset 14, -4
 252:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 0 */
 253:Src/stm32f1xx_it.c **** 
 254:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 0 */
 255:Src/stm32f1xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 309              		.loc 1 255 3 view .LVU42
 310 0002 0248     		ldr	r0, .L26
 311 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 312              	.LVL2:
 256:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 1 */
 257:Src/stm32f1xx_it.c **** 
 258:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 1 */
 259:Src/stm32f1xx_it.c **** }
 313              		.loc 1 259 1 is_stmt 0 view .LVU43
 314 0008 08BD     		pop	{r3, pc}
 315              	.L27:
 316 000a 00BF     		.align	2
 317              	.L26:
 318 000c 00000000 		.word	hcan
 319              		.cfi_endproc
 320              	.LFE76:
 322              		.section	.text.EXTI14_IRQHandler,"ax",%progbits
 323              		.align	1
 324              		.global	EXTI14_IRQHandler
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 328              		.fpu softvfp
 330              	EXTI14_IRQHandler:
 331              	.LFB77:
 260:Src/stm32f1xx_it.c **** 
 261:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 1 */
 262:Src/stm32f1xx_it.c **** void EXTI14_IRQHandler(void)
ARM GAS  /tmp/ccDkPcY6.s 			page 11


 263:Src/stm32f1xx_it.c **** {
 332              		.loc 1 263 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336 0000 08B5     		push	{r3, lr}
 337              	.LCFI3:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 264:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 265:Src/stm32f1xx_it.c **** 
 266:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 267:Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_14);
 341              		.loc 1 267 3 view .LVU45
 342 0002 4FF48040 		mov	r0, #16384
 343 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 344              	.LVL3:
 268:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 269:Src/stm32f1xx_it.c **** 
 270:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 271:Src/stm32f1xx_it.c **** }
 345              		.loc 1 271 1 is_stmt 0 view .LVU46
 346 000a 08BD     		pop	{r3, pc}
 347              		.cfi_endproc
 348              	.LFE77:
 350              		.section	.text.EXTI11_IRQHandler,"ax",%progbits
 351              		.align	1
 352              		.global	EXTI11_IRQHandler
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 356              		.fpu softvfp
 358              	EXTI11_IRQHandler:
 359              	.LFB78:
 272:Src/stm32f1xx_it.c **** 
 273:Src/stm32f1xx_it.c **** void EXTI11_IRQHandler(void)
 274:Src/stm32f1xx_it.c **** {
 360              		.loc 1 274 1 is_stmt 1 view -0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364 0000 08B5     		push	{r3, lr}
 365              	.LCFI4:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 3, -8
 368              		.cfi_offset 14, -4
 275:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 276:Src/stm32f1xx_it.c **** 
 277:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 278:Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_11);
 369              		.loc 1 278 3 view .LVU48
 370 0002 4FF40060 		mov	r0, #2048
 371 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 372              	.LVL4:
 279:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 280:Src/stm32f1xx_it.c **** 
ARM GAS  /tmp/ccDkPcY6.s 			page 12


 281:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 282:Src/stm32f1xx_it.c **** }
 373              		.loc 1 282 1 is_stmt 0 view .LVU49
 374 000a 08BD     		pop	{r3, pc}
 375              		.cfi_endproc
 376              	.LFE78:
 378              		.comm	CAN_Timer,4,4
 379              		.comm	RTDS_Timer,4,4
 380              		.comm	millisTimer,4,4
 381              		.text
 382              	.Letext0:
 383              		.file 2 "/mnt/c/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_types.h"
 384              		.file 3 "/mnt/c/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 385              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 386              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 387              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 388              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 389              		.file 8 "/mnt/c/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 390              		.file 9 "/mnt/c/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_types.h"
 391              		.file 10 "/mnt/c/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/include/stddef.h"
 392              		.file 11 "/mnt/c/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/reent.h"
 393              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 394              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 395              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 396              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 397              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 398              		.file 17 "Inc/main.h"
 399              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  /tmp/ccDkPcY6.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/ccDkPcY6.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccDkPcY6.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccDkPcY6.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccDkPcY6.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccDkPcY6.s:61     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccDkPcY6.s:68     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccDkPcY6.s:84     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccDkPcY6.s:91     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccDkPcY6.s:107    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccDkPcY6.s:114    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccDkPcY6.s:130    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccDkPcY6.s:137    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccDkPcY6.s:150    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccDkPcY6.s:157    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccDkPcY6.s:170    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccDkPcY6.s:177    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccDkPcY6.s:190    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccDkPcY6.s:197    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccDkPcY6.s:252    .text.SysTick_Handler:000000000000002c $d
                            *COM*:0000000000000004 millisTimer
                            *COM*:0000000000000004 RTDS_Timer
                            *COM*:0000000000000004 CAN_Timer
     /tmp/ccDkPcY6.s:259    .text.ADC1_2_IRQHandler:0000000000000000 $t
     /tmp/ccDkPcY6.s:266    .text.ADC1_2_IRQHandler:0000000000000000 ADC1_2_IRQHandler
     /tmp/ccDkPcY6.s:286    .text.ADC1_2_IRQHandler:000000000000000c $d
     /tmp/ccDkPcY6.s:291    .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccDkPcY6.s:298    .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 USB_LP_CAN1_RX0_IRQHandler
     /tmp/ccDkPcY6.s:318    .text.USB_LP_CAN1_RX0_IRQHandler:000000000000000c $d
     /tmp/ccDkPcY6.s:323    .text.EXTI14_IRQHandler:0000000000000000 $t
     /tmp/ccDkPcY6.s:330    .text.EXTI14_IRQHandler:0000000000000000 EXTI14_IRQHandler
     /tmp/ccDkPcY6.s:351    .text.EXTI11_IRQHandler:0000000000000000 $t
     /tmp/ccDkPcY6.s:358    .text.EXTI11_IRQHandler:0000000000000000 EXTI11_IRQHandler

UNDEFINED SYMBOLS
HAL_IncTick
HAL_ADC_IRQHandler
hadc1
HAL_CAN_IRQHandler
hcan
HAL_GPIO_EXTI_IRQHandler
