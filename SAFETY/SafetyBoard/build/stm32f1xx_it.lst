ARM GAS  /tmp/cc29rYHz.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB64:
  25              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_it.c **** /**
   3:Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Src/stm32f1xx_it.c ****   *
   8:Src/stm32f1xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   9:Src/stm32f1xx_it.c ****   *
  10:Src/stm32f1xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/stm32f1xx_it.c ****   * are permitted provided that the following conditions are met:
  12:Src/stm32f1xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer.
  14:Src/stm32f1xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/stm32f1xx_it.c ****   *      and/or other materials provided with the distribution.
  17:Src/stm32f1xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/stm32f1xx_it.c ****   *      may be used to endorse or promote products derived from this software
  19:Src/stm32f1xx_it.c ****   *      without specific prior written permission.
  20:Src/stm32f1xx_it.c ****   *
  21:Src/stm32f1xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/stm32f1xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/stm32f1xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/stm32f1xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/stm32f1xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/stm32f1xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/stm32f1xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/stm32f1xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/stm32f1xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/stm32f1xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Src/stm32f1xx_it.c ****   *
  32:Src/stm32f1xx_it.c ****   ******************************************************************************
  33:Src/stm32f1xx_it.c ****   */
ARM GAS  /tmp/cc29rYHz.s 			page 2


  34:Src/stm32f1xx_it.c **** /* USER CODE END Header */
  35:Src/stm32f1xx_it.c **** 
  36:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  37:Src/stm32f1xx_it.c **** #include "main.h"
  38:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  39:Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  40:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  41:Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  42:Src/stm32f1xx_it.c **** 
  43:Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  44:Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  45:Src/stm32f1xx_it.c **** 
  46:Src/stm32f1xx_it.c **** /* USER CODE END TD */
  47:Src/stm32f1xx_it.c **** 
  48:Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  49:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  50:Src/stm32f1xx_it.c ****  
  51:Src/stm32f1xx_it.c **** /* USER CODE END PD */
  52:Src/stm32f1xx_it.c **** 
  53:Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  54:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  55:Src/stm32f1xx_it.c **** 
  56:Src/stm32f1xx_it.c **** /* USER CODE END PM */
  57:Src/stm32f1xx_it.c **** 
  58:Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  59:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  60:Src/stm32f1xx_it.c **** 
  61:Src/stm32f1xx_it.c **** 
  62:Src/stm32f1xx_it.c **** 
  63:Src/stm32f1xx_it.c **** /* USER CODE END PV */
  64:Src/stm32f1xx_it.c **** 
  65:Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  66:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  67:Src/stm32f1xx_it.c **** 
  68:Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  69:Src/stm32f1xx_it.c **** 
  70:Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  71:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  72:Src/stm32f1xx_it.c **** 
  73:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  74:Src/stm32f1xx_it.c **** 
  75:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  76:Src/stm32f1xx_it.c **** extern ADC_HandleTypeDef hadc1;
  77:Src/stm32f1xx_it.c **** extern CAN_HandleTypeDef hcan;
  78:Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  79:Src/stm32f1xx_it.c **** 
  80:Src/stm32f1xx_it.c **** /* USER CODE END EV */
  81:Src/stm32f1xx_it.c **** 
  82:Src/stm32f1xx_it.c **** /******************************************************************************/
  83:Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  84:Src/stm32f1xx_it.c **** /******************************************************************************/
  85:Src/stm32f1xx_it.c **** /**
  86:Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  87:Src/stm32f1xx_it.c ****   */
  88:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  89:Src/stm32f1xx_it.c **** {
  26              		.loc 1 89 0
ARM GAS  /tmp/cc29rYHz.s 			page 3


  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 7047     		bx	lr
  32              		.cfi_endproc
  33              	.LFE64:
  35              		.section	.text.HardFault_Handler,"ax",%progbits
  36              		.align	1
  37              		.global	HardFault_Handler
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu softvfp
  43              	HardFault_Handler:
  44              	.LFB65:
  90:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  91:Src/stm32f1xx_it.c **** 
  92:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  93:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  94:Src/stm32f1xx_it.c **** 
  95:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  96:Src/stm32f1xx_it.c **** }
  97:Src/stm32f1xx_it.c **** 
  98:Src/stm32f1xx_it.c **** /**
  99:Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
 100:Src/stm32f1xx_it.c ****   */
 101:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
 102:Src/stm32f1xx_it.c **** {
  45              		.loc 1 102 0
  46              		.cfi_startproc
  47              		@ Volatile: function does not return.
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51              	.L3:
  52 0000 FEE7     		b	.L3
  53              		.cfi_endproc
  54              	.LFE65:
  56              		.section	.text.MemManage_Handler,"ax",%progbits
  57              		.align	1
  58              		.global	MemManage_Handler
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu softvfp
  64              	MemManage_Handler:
  65              	.LFB66:
 103:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 104:Src/stm32f1xx_it.c **** 
 105:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 106:Src/stm32f1xx_it.c ****   while (1)
 107:Src/stm32f1xx_it.c ****   {
 108:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 109:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 110:Src/stm32f1xx_it.c ****   }
 111:Src/stm32f1xx_it.c **** }
ARM GAS  /tmp/cc29rYHz.s 			page 4


 112:Src/stm32f1xx_it.c **** 
 113:Src/stm32f1xx_it.c **** /**
 114:Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 115:Src/stm32f1xx_it.c ****   */
 116:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 117:Src/stm32f1xx_it.c **** {
  66              		.loc 1 117 0
  67              		.cfi_startproc
  68              		@ Volatile: function does not return.
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72              	.L5:
  73 0000 FEE7     		b	.L5
  74              		.cfi_endproc
  75              	.LFE66:
  77              		.section	.text.BusFault_Handler,"ax",%progbits
  78              		.align	1
  79              		.global	BusFault_Handler
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
  85              	BusFault_Handler:
  86              	.LFB67:
 118:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 119:Src/stm32f1xx_it.c **** 
 120:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 121:Src/stm32f1xx_it.c ****   while (1)
 122:Src/stm32f1xx_it.c ****   {
 123:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 124:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 125:Src/stm32f1xx_it.c ****   }
 126:Src/stm32f1xx_it.c **** }
 127:Src/stm32f1xx_it.c **** 
 128:Src/stm32f1xx_it.c **** /**
 129:Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 130:Src/stm32f1xx_it.c ****   */
 131:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 132:Src/stm32f1xx_it.c **** {
  87              		.loc 1 132 0
  88              		.cfi_startproc
  89              		@ Volatile: function does not return.
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.L7:
  94 0000 FEE7     		b	.L7
  95              		.cfi_endproc
  96              	.LFE67:
  98              		.section	.text.UsageFault_Handler,"ax",%progbits
  99              		.align	1
 100              		.global	UsageFault_Handler
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu softvfp
ARM GAS  /tmp/cc29rYHz.s 			page 5


 106              	UsageFault_Handler:
 107              	.LFB68:
 133:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 134:Src/stm32f1xx_it.c **** 
 135:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 136:Src/stm32f1xx_it.c ****   while (1)
 137:Src/stm32f1xx_it.c ****   {
 138:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 139:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 140:Src/stm32f1xx_it.c ****   }
 141:Src/stm32f1xx_it.c **** }
 142:Src/stm32f1xx_it.c **** 
 143:Src/stm32f1xx_it.c **** /**
 144:Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 145:Src/stm32f1xx_it.c ****   */
 146:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 147:Src/stm32f1xx_it.c **** {
 108              		.loc 1 147 0
 109              		.cfi_startproc
 110              		@ Volatile: function does not return.
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		@ link register save eliminated.
 114              	.L9:
 115 0000 FEE7     		b	.L9
 116              		.cfi_endproc
 117              	.LFE68:
 119              		.section	.text.SVC_Handler,"ax",%progbits
 120              		.align	1
 121              		.global	SVC_Handler
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu softvfp
 127              	SVC_Handler:
 128              	.LFB69:
 148:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 149:Src/stm32f1xx_it.c **** 
 150:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 151:Src/stm32f1xx_it.c ****   while (1)
 152:Src/stm32f1xx_it.c ****   {
 153:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 154:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 155:Src/stm32f1xx_it.c ****   }
 156:Src/stm32f1xx_it.c **** }
 157:Src/stm32f1xx_it.c **** 
 158:Src/stm32f1xx_it.c **** /**
 159:Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 160:Src/stm32f1xx_it.c ****   */
 161:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 162:Src/stm32f1xx_it.c **** {
 129              		.loc 1 162 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134 0000 7047     		bx	lr
ARM GAS  /tmp/cc29rYHz.s 			page 6


 135              		.cfi_endproc
 136              	.LFE69:
 138              		.section	.text.DebugMon_Handler,"ax",%progbits
 139              		.align	1
 140              		.global	DebugMon_Handler
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu softvfp
 146              	DebugMon_Handler:
 147              	.LFB70:
 163:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 164:Src/stm32f1xx_it.c **** 
 165:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 166:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 167:Src/stm32f1xx_it.c **** 
 168:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 169:Src/stm32f1xx_it.c **** }
 170:Src/stm32f1xx_it.c **** 
 171:Src/stm32f1xx_it.c **** /**
 172:Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 173:Src/stm32f1xx_it.c ****   */
 174:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 175:Src/stm32f1xx_it.c **** {
 148              		.loc 1 175 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153 0000 7047     		bx	lr
 154              		.cfi_endproc
 155              	.LFE70:
 157              		.section	.text.PendSV_Handler,"ax",%progbits
 158              		.align	1
 159              		.global	PendSV_Handler
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu softvfp
 165              	PendSV_Handler:
 166              	.LFB71:
 176:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 177:Src/stm32f1xx_it.c **** 
 178:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 179:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 180:Src/stm32f1xx_it.c **** 
 181:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 182:Src/stm32f1xx_it.c **** }
 183:Src/stm32f1xx_it.c **** 
 184:Src/stm32f1xx_it.c **** /**
 185:Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 186:Src/stm32f1xx_it.c ****   */
 187:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 188:Src/stm32f1xx_it.c **** {
 167              		.loc 1 188 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc29rYHz.s 			page 7


 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172 0000 7047     		bx	lr
 173              		.cfi_endproc
 174              	.LFE71:
 176              		.section	.text.SysTick_Handler,"ax",%progbits
 177              		.align	1
 178              		.global	SysTick_Handler
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu softvfp
 184              	SysTick_Handler:
 185              	.LFB72:
 189:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 190:Src/stm32f1xx_it.c **** 
 191:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 192:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 193:Src/stm32f1xx_it.c **** 
 194:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 195:Src/stm32f1xx_it.c **** }
 196:Src/stm32f1xx_it.c **** 
 197:Src/stm32f1xx_it.c **** /**
 198:Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 199:Src/stm32f1xx_it.c ****   */
 200:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 201:Src/stm32f1xx_it.c **** {
 186              		.loc 1 201 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		.loc 1 201 0
 191 0000 08B5     		push	{r3, lr}
 192              	.LCFI0:
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 3, -8
 195              		.cfi_offset 14, -4
 202:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 203:Src/stm32f1xx_it.c **** 
 204:Src/stm32f1xx_it.c ****   if (millisTimer != 0)
 196              		.loc 1 204 0
 197 0002 074B     		ldr	r3, .L17
 198 0004 1B68     		ldr	r3, [r3]
 199 0006 13B1     		cbz	r3, .L14
 205:Src/stm32f1xx_it.c ****     {
 206:Src/stm32f1xx_it.c ****         millisTimer--;
 200              		.loc 1 206 0
 201 0008 013B     		subs	r3, r3, #1
 202 000a 054A     		ldr	r2, .L17
 203 000c 1360     		str	r3, [r2]
 204              	.L14:
 207:Src/stm32f1xx_it.c ****     }
 208:Src/stm32f1xx_it.c **** 
 209:Src/stm32f1xx_it.c ****   if (secTimer != 0)
 205              		.loc 1 209 0
 206 000e 054B     		ldr	r3, .L17+4
 207 0010 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc29rYHz.s 			page 8


 208 0012 13B1     		cbz	r3, .L15
 210:Src/stm32f1xx_it.c ****   {
 211:Src/stm32f1xx_it.c ****       secTimer--;
 209              		.loc 1 211 0
 210 0014 013B     		subs	r3, r3, #1
 211 0016 034A     		ldr	r2, .L17+4
 212 0018 1360     		str	r3, [r2]
 213              	.L15:
 212:Src/stm32f1xx_it.c ****   }
 213:Src/stm32f1xx_it.c **** 
 214:Src/stm32f1xx_it.c **** 
 215:Src/stm32f1xx_it.c **** 
 216:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 217:Src/stm32f1xx_it.c ****   HAL_IncTick();
 214              		.loc 1 217 0
 215 001a FFF7FEFF 		bl	HAL_IncTick
 216              	.LVL0:
 217 001e 08BD     		pop	{r3, pc}
 218              	.L18:
 219              		.align	2
 220              	.L17:
 221 0020 00000000 		.word	millisTimer
 222 0024 00000000 		.word	secTimer
 223              		.cfi_endproc
 224              	.LFE72:
 226              		.section	.text.ADC1_2_IRQHandler,"ax",%progbits
 227              		.align	1
 228              		.global	ADC1_2_IRQHandler
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu softvfp
 234              	ADC1_2_IRQHandler:
 235              	.LFB73:
 218:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 219:Src/stm32f1xx_it.c **** 
 220:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 221:Src/stm32f1xx_it.c **** }
 222:Src/stm32f1xx_it.c **** 
 223:Src/stm32f1xx_it.c **** /******************************************************************************/
 224:Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 225:Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 226:Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 227:Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 228:Src/stm32f1xx_it.c **** /******************************************************************************/
 229:Src/stm32f1xx_it.c **** 
 230:Src/stm32f1xx_it.c **** /**
 231:Src/stm32f1xx_it.c ****   * @brief This function handles ADC1 and ADC2 global interrupts.
 232:Src/stm32f1xx_it.c ****   */
 233:Src/stm32f1xx_it.c **** void ADC1_2_IRQHandler(void)
 234:Src/stm32f1xx_it.c **** {
 236              		.loc 1 234 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 08B5     		push	{r3, lr}
 241              	.LCFI1:
ARM GAS  /tmp/cc29rYHz.s 			page 9


 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 3, -8
 244              		.cfi_offset 14, -4
 235:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 0 */
 236:Src/stm32f1xx_it.c **** 
 237:Src/stm32f1xx_it.c ****   /* USER CODE END ADC1_2_IRQn 0 */
 238:Src/stm32f1xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 245              		.loc 1 238 0
 246 0002 0248     		ldr	r0, .L21
 247 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 248              	.LVL1:
 249 0008 08BD     		pop	{r3, pc}
 250              	.L22:
 251 000a 00BF     		.align	2
 252              	.L21:
 253 000c 00000000 		.word	hadc1
 254              		.cfi_endproc
 255              	.LFE73:
 257              		.section	.text.USB_LP_CAN1_RX0_IRQHandler,"ax",%progbits
 258              		.align	1
 259              		.global	USB_LP_CAN1_RX0_IRQHandler
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu softvfp
 265              	USB_LP_CAN1_RX0_IRQHandler:
 266              	.LFB74:
 239:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 1 */
 240:Src/stm32f1xx_it.c **** 
 241:Src/stm32f1xx_it.c ****   /* USER CODE END ADC1_2_IRQn 1 */
 242:Src/stm32f1xx_it.c **** }
 243:Src/stm32f1xx_it.c **** 
 244:Src/stm32f1xx_it.c **** /**
 245:Src/stm32f1xx_it.c ****   * @brief This function handles USB low priority or CAN RX0 interrupts.
 246:Src/stm32f1xx_it.c ****   */
 247:Src/stm32f1xx_it.c **** void USB_LP_CAN1_RX0_IRQHandler(void)
 248:Src/stm32f1xx_it.c **** {
 267              		.loc 1 248 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 08B5     		push	{r3, lr}
 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 3, -8
 275              		.cfi_offset 14, -4
 249:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 0 */
 250:Src/stm32f1xx_it.c **** 
 251:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 0 */
 252:Src/stm32f1xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 276              		.loc 1 252 0
 277 0002 0248     		ldr	r0, .L25
 278 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 279              	.LVL2:
 280 0008 08BD     		pop	{r3, pc}
 281              	.L26:
 282 000a 00BF     		.align	2
ARM GAS  /tmp/cc29rYHz.s 			page 10


 283              	.L25:
 284 000c 00000000 		.word	hcan
 285              		.cfi_endproc
 286              	.LFE74:
 288              		.section	.text.EXTI14_IRQHandler,"ax",%progbits
 289              		.align	1
 290              		.global	EXTI14_IRQHandler
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu softvfp
 296              	EXTI14_IRQHandler:
 297              	.LFB75:
 253:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 1 */
 254:Src/stm32f1xx_it.c **** 
 255:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 1 */
 256:Src/stm32f1xx_it.c **** }
 257:Src/stm32f1xx_it.c **** 
 258:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 1 */
 259:Src/stm32f1xx_it.c **** void EXTI14_IRQHandler(void)
 260:Src/stm32f1xx_it.c **** {
 298              		.loc 1 260 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 08B5     		push	{r3, lr}
 303              	.LCFI3:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 3, -8
 306              		.cfi_offset 14, -4
 261:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 262:Src/stm32f1xx_it.c **** 
 263:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 264:Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_14);
 307              		.loc 1 264 0
 308 0002 4FF48040 		mov	r0, #16384
 309 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 310              	.LVL3:
 311 000a 08BD     		pop	{r3, pc}
 312              		.cfi_endproc
 313              	.LFE75:
 315              		.section	.text.EXTI11_IRQHandler,"ax",%progbits
 316              		.align	1
 317              		.global	EXTI11_IRQHandler
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu softvfp
 323              	EXTI11_IRQHandler:
 324              	.LFB76:
 265:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 266:Src/stm32f1xx_it.c **** 
 267:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 268:Src/stm32f1xx_it.c **** }
 269:Src/stm32f1xx_it.c **** 
 270:Src/stm32f1xx_it.c **** void EXTI11_IRQHandler(void)
 271:Src/stm32f1xx_it.c **** {
ARM GAS  /tmp/cc29rYHz.s 			page 11


 325              		.loc 1 271 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 08B5     		push	{r3, lr}
 330              	.LCFI4:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 3, -8
 333              		.cfi_offset 14, -4
 272:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 273:Src/stm32f1xx_it.c **** 
 274:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 275:Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_11);
 334              		.loc 1 275 0
 335 0002 4FF40060 		mov	r0, #2048
 336 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 337              	.LVL4:
 338 000a 08BD     		pop	{r3, pc}
 339              		.cfi_endproc
 340              	.LFE76:
 342              		.comm	secTimer,4,4
 343              		.comm	millisTimer,4,4
 344              		.text
 345              	.Letext0:
 346              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 347              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 348              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 349              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 350              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 351              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 352              		.file 8 "/usr/include/newlib/sys/lock.h"
 353              		.file 9 "/usr/include/newlib/sys/_types.h"
 354              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 355              		.file 11 "/usr/include/newlib/sys/reent.h"
 356              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 357              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 358              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 359              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 360              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 361              		.file 17 "Inc/main.h"
 362              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  /tmp/cc29rYHz.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/cc29rYHz.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc29rYHz.s:23     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc29rYHz.s:36     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc29rYHz.s:43     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc29rYHz.s:57     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc29rYHz.s:64     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc29rYHz.s:78     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc29rYHz.s:85     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc29rYHz.s:99     .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc29rYHz.s:106    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc29rYHz.s:120    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc29rYHz.s:127    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc29rYHz.s:139    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc29rYHz.s:146    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc29rYHz.s:158    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc29rYHz.s:165    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc29rYHz.s:177    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc29rYHz.s:184    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc29rYHz.s:221    .text.SysTick_Handler:0000000000000020 $d
                            *COM*:0000000000000004 millisTimer
                            *COM*:0000000000000004 secTimer
     /tmp/cc29rYHz.s:227    .text.ADC1_2_IRQHandler:0000000000000000 $t
     /tmp/cc29rYHz.s:234    .text.ADC1_2_IRQHandler:0000000000000000 ADC1_2_IRQHandler
     /tmp/cc29rYHz.s:253    .text.ADC1_2_IRQHandler:000000000000000c $d
     /tmp/cc29rYHz.s:258    .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 $t
     /tmp/cc29rYHz.s:265    .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 USB_LP_CAN1_RX0_IRQHandler
     /tmp/cc29rYHz.s:284    .text.USB_LP_CAN1_RX0_IRQHandler:000000000000000c $d
     /tmp/cc29rYHz.s:289    .text.EXTI14_IRQHandler:0000000000000000 $t
     /tmp/cc29rYHz.s:296    .text.EXTI14_IRQHandler:0000000000000000 EXTI14_IRQHandler
     /tmp/cc29rYHz.s:316    .text.EXTI11_IRQHandler:0000000000000000 $t
     /tmp/cc29rYHz.s:323    .text.EXTI11_IRQHandler:0000000000000000 EXTI11_IRQHandler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_ADC_IRQHandler
hadc1
HAL_CAN_IRQHandler
hcan
HAL_GPIO_EXTI_IRQHandler
