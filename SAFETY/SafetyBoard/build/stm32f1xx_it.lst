ARM GAS  /tmp/ccajP5gb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	2
  20              		.global	NMI_Handler
  21              		.thumb
  22              		.thumb_func
  24              	NMI_Handler:
  25              	.LFB63:
  26              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_it.c **** /**
   3:Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Src/stm32f1xx_it.c ****   *
   8:Src/stm32f1xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   9:Src/stm32f1xx_it.c ****   *
  10:Src/stm32f1xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/stm32f1xx_it.c ****   * are permitted provided that the following conditions are met:
  12:Src/stm32f1xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer.
  14:Src/stm32f1xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/stm32f1xx_it.c ****   *      and/or other materials provided with the distribution.
  17:Src/stm32f1xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/stm32f1xx_it.c ****   *      may be used to endorse or promote products derived from this software
  19:Src/stm32f1xx_it.c ****   *      without specific prior written permission.
  20:Src/stm32f1xx_it.c ****   *
  21:Src/stm32f1xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/stm32f1xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/stm32f1xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/stm32f1xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/stm32f1xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/stm32f1xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/stm32f1xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/stm32f1xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/stm32f1xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/stm32f1xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Src/stm32f1xx_it.c ****   *
  32:Src/stm32f1xx_it.c ****   ******************************************************************************
ARM GAS  /tmp/ccajP5gb.s 			page 2


  33:Src/stm32f1xx_it.c ****   */
  34:Src/stm32f1xx_it.c **** /* USER CODE END Header */
  35:Src/stm32f1xx_it.c **** 
  36:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  37:Src/stm32f1xx_it.c **** #include "main.h"
  38:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  39:Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  40:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  41:Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  42:Src/stm32f1xx_it.c **** 
  43:Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  44:Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  45:Src/stm32f1xx_it.c **** 
  46:Src/stm32f1xx_it.c **** /* USER CODE END TD */
  47:Src/stm32f1xx_it.c **** 
  48:Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  49:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  50:Src/stm32f1xx_it.c ****  
  51:Src/stm32f1xx_it.c **** /* USER CODE END PD */
  52:Src/stm32f1xx_it.c **** 
  53:Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  54:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  55:Src/stm32f1xx_it.c **** 
  56:Src/stm32f1xx_it.c **** /* USER CODE END PM */
  57:Src/stm32f1xx_it.c **** 
  58:Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  59:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  60:Src/stm32f1xx_it.c **** 
  61:Src/stm32f1xx_it.c **** 
  62:Src/stm32f1xx_it.c **** 
  63:Src/stm32f1xx_it.c **** /* USER CODE END PV */
  64:Src/stm32f1xx_it.c **** 
  65:Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  66:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  67:Src/stm32f1xx_it.c **** 
  68:Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  69:Src/stm32f1xx_it.c **** 
  70:Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  71:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  72:Src/stm32f1xx_it.c **** 
  73:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  74:Src/stm32f1xx_it.c **** 
  75:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  76:Src/stm32f1xx_it.c **** extern ADC_HandleTypeDef hadc1;
  77:Src/stm32f1xx_it.c **** extern CAN_HandleTypeDef hcan;
  78:Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  79:Src/stm32f1xx_it.c **** 
  80:Src/stm32f1xx_it.c **** /* USER CODE END EV */
  81:Src/stm32f1xx_it.c **** 
  82:Src/stm32f1xx_it.c **** /******************************************************************************/
  83:Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  84:Src/stm32f1xx_it.c **** /******************************************************************************/
  85:Src/stm32f1xx_it.c **** /**
  86:Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  87:Src/stm32f1xx_it.c ****   */
  88:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  89:Src/stm32f1xx_it.c **** {
ARM GAS  /tmp/ccajP5gb.s 			page 3


  27              		.loc 1 89 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE63:
  36 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  37              		.align	2
  38              		.global	HardFault_Handler
  39              		.thumb
  40              		.thumb_func
  42              	HardFault_Handler:
  43              	.LFB64:
  90:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  91:Src/stm32f1xx_it.c **** 
  92:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  93:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  94:Src/stm32f1xx_it.c **** 
  95:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  96:Src/stm32f1xx_it.c **** }
  97:Src/stm32f1xx_it.c **** 
  98:Src/stm32f1xx_it.c **** /**
  99:Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
 100:Src/stm32f1xx_it.c ****   */
 101:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
 102:Src/stm32f1xx_it.c **** {
  44              		.loc 1 102 0
  45              		.cfi_startproc
  46              		@ Volatile: function does not return.
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50              	.L3:
 103:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 104:Src/stm32f1xx_it.c **** 
 105:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 106:Src/stm32f1xx_it.c ****   while (1)
 107:Src/stm32f1xx_it.c ****   {
 108:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 109:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 110:Src/stm32f1xx_it.c ****   }
  51              		.loc 1 110 0 discriminator 1
  52 0000 FEE7     		b	.L3
  53              		.cfi_endproc
  54              	.LFE64:
  56 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  57              		.align	2
  58              		.global	MemManage_Handler
  59              		.thumb
  60              		.thumb_func
  62              	MemManage_Handler:
  63              	.LFB65:
 111:Src/stm32f1xx_it.c **** }
 112:Src/stm32f1xx_it.c **** 
 113:Src/stm32f1xx_it.c **** /**
ARM GAS  /tmp/ccajP5gb.s 			page 4


 114:Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 115:Src/stm32f1xx_it.c ****   */
 116:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 117:Src/stm32f1xx_it.c **** {
  64              		.loc 1 117 0
  65              		.cfi_startproc
  66              		@ Volatile: function does not return.
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70              	.L5:
 118:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 119:Src/stm32f1xx_it.c **** 
 120:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 121:Src/stm32f1xx_it.c ****   while (1)
 122:Src/stm32f1xx_it.c ****   {
 123:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 124:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 125:Src/stm32f1xx_it.c ****   }
  71              		.loc 1 125 0 discriminator 1
  72 0000 FEE7     		b	.L5
  73              		.cfi_endproc
  74              	.LFE65:
  76 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  77              		.align	2
  78              		.global	BusFault_Handler
  79              		.thumb
  80              		.thumb_func
  82              	BusFault_Handler:
  83              	.LFB66:
 126:Src/stm32f1xx_it.c **** }
 127:Src/stm32f1xx_it.c **** 
 128:Src/stm32f1xx_it.c **** /**
 129:Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 130:Src/stm32f1xx_it.c ****   */
 131:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 132:Src/stm32f1xx_it.c **** {
  84              		.loc 1 132 0
  85              		.cfi_startproc
  86              		@ Volatile: function does not return.
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90              	.L7:
 133:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 134:Src/stm32f1xx_it.c **** 
 135:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 136:Src/stm32f1xx_it.c ****   while (1)
 137:Src/stm32f1xx_it.c ****   {
 138:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 139:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 140:Src/stm32f1xx_it.c ****   }
  91              		.loc 1 140 0 discriminator 1
  92 0000 FEE7     		b	.L7
  93              		.cfi_endproc
  94              	.LFE66:
  96 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
ARM GAS  /tmp/ccajP5gb.s 			page 5


  97              		.align	2
  98              		.global	UsageFault_Handler
  99              		.thumb
 100              		.thumb_func
 102              	UsageFault_Handler:
 103              	.LFB67:
 141:Src/stm32f1xx_it.c **** }
 142:Src/stm32f1xx_it.c **** 
 143:Src/stm32f1xx_it.c **** /**
 144:Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 145:Src/stm32f1xx_it.c ****   */
 146:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 147:Src/stm32f1xx_it.c **** {
 104              		.loc 1 147 0
 105              		.cfi_startproc
 106              		@ Volatile: function does not return.
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.L9:
 148:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 149:Src/stm32f1xx_it.c **** 
 150:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 151:Src/stm32f1xx_it.c ****   while (1)
 152:Src/stm32f1xx_it.c ****   {
 153:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 154:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 155:Src/stm32f1xx_it.c ****   }
 111              		.loc 1 155 0 discriminator 1
 112 0000 FEE7     		b	.L9
 113              		.cfi_endproc
 114              	.LFE67:
 116 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 117              		.align	2
 118              		.global	SVC_Handler
 119              		.thumb
 120              		.thumb_func
 122              	SVC_Handler:
 123              	.LFB68:
 156:Src/stm32f1xx_it.c **** }
 157:Src/stm32f1xx_it.c **** 
 158:Src/stm32f1xx_it.c **** /**
 159:Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 160:Src/stm32f1xx_it.c ****   */
 161:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 162:Src/stm32f1xx_it.c **** {
 124              		.loc 1 162 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE68:
 133 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 134              		.align	2
 135              		.global	DebugMon_Handler
ARM GAS  /tmp/ccajP5gb.s 			page 6


 136              		.thumb
 137              		.thumb_func
 139              	DebugMon_Handler:
 140              	.LFB69:
 163:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 164:Src/stm32f1xx_it.c **** 
 165:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 166:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 167:Src/stm32f1xx_it.c **** 
 168:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 169:Src/stm32f1xx_it.c **** }
 170:Src/stm32f1xx_it.c **** 
 171:Src/stm32f1xx_it.c **** /**
 172:Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 173:Src/stm32f1xx_it.c ****   */
 174:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 175:Src/stm32f1xx_it.c **** {
 141              		.loc 1 175 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 7047     		bx	lr
 147              		.cfi_endproc
 148              	.LFE69:
 150 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 151              		.align	2
 152              		.global	PendSV_Handler
 153              		.thumb
 154              		.thumb_func
 156              	PendSV_Handler:
 157              	.LFB70:
 176:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 177:Src/stm32f1xx_it.c **** 
 178:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 179:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 180:Src/stm32f1xx_it.c **** 
 181:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 182:Src/stm32f1xx_it.c **** }
 183:Src/stm32f1xx_it.c **** 
 184:Src/stm32f1xx_it.c **** /**
 185:Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 186:Src/stm32f1xx_it.c ****   */
 187:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 188:Src/stm32f1xx_it.c **** {
 158              		.loc 1 188 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163 0000 7047     		bx	lr
 164              		.cfi_endproc
 165              	.LFE70:
 167 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 168              		.align	2
 169              		.global	SysTick_Handler
 170              		.thumb
ARM GAS  /tmp/ccajP5gb.s 			page 7


 171              		.thumb_func
 173              	SysTick_Handler:
 174              	.LFB71:
 189:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 190:Src/stm32f1xx_it.c **** 
 191:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 192:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 193:Src/stm32f1xx_it.c **** 
 194:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 195:Src/stm32f1xx_it.c **** }
 196:Src/stm32f1xx_it.c **** 
 197:Src/stm32f1xx_it.c **** /**
 198:Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 199:Src/stm32f1xx_it.c ****   */
 200:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 201:Src/stm32f1xx_it.c **** {
 175              		.loc 1 201 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		.loc 1 201 0
 180 0000 08B5     		push	{r3, lr}
 181              	.LCFI0:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 3, -8
 184              		.cfi_offset 14, -4
 202:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 203:Src/stm32f1xx_it.c **** 
 204:Src/stm32f1xx_it.c ****   if (millisTimer != 0)
 185              		.loc 1 204 0
 186 0002 0A4B     		ldr	r3, .L18
 187 0004 1B68     		ldr	r3, [r3]
 188 0006 13B1     		cbz	r3, .L14
 205:Src/stm32f1xx_it.c ****     {
 206:Src/stm32f1xx_it.c ****         millisTimer--;
 189              		.loc 1 206 0
 190 0008 013B     		subs	r3, r3, #1
 191 000a 084A     		ldr	r2, .L18
 192 000c 1360     		str	r3, [r2]
 193              	.L14:
 207:Src/stm32f1xx_it.c ****     }
 208:Src/stm32f1xx_it.c **** 
 209:Src/stm32f1xx_it.c ****   if (secTimer != 0)
 194              		.loc 1 209 0
 195 000e 084B     		ldr	r3, .L18+4
 196 0010 1B68     		ldr	r3, [r3]
 197 0012 13B1     		cbz	r3, .L15
 210:Src/stm32f1xx_it.c ****   {
 211:Src/stm32f1xx_it.c ****       secTimer--;
 198              		.loc 1 211 0
 199 0014 013B     		subs	r3, r3, #1
 200 0016 064A     		ldr	r2, .L18+4
 201 0018 1360     		str	r3, [r2]
 202              	.L15:
 212:Src/stm32f1xx_it.c ****   }
 213:Src/stm32f1xx_it.c ****   
 214:Src/stm32f1xx_it.c ****   if (sysTimer != 0)
ARM GAS  /tmp/ccajP5gb.s 			page 8


 203              		.loc 1 214 0
 204 001a 064B     		ldr	r3, .L18+8
 205 001c 1B68     		ldr	r3, [r3]
 206 001e 13B1     		cbz	r3, .L16
 215:Src/stm32f1xx_it.c **** 	  sysTimer--;
 207              		.loc 1 215 0
 208 0020 013B     		subs	r3, r3, #1
 209 0022 044A     		ldr	r2, .L18+8
 210 0024 1360     		str	r3, [r2]
 211              	.L16:
 216:Src/stm32f1xx_it.c **** 
 217:Src/stm32f1xx_it.c **** 
 218:Src/stm32f1xx_it.c **** 
 219:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 220:Src/stm32f1xx_it.c ****   HAL_IncTick();
 212              		.loc 1 220 0
 213 0026 FFF7FEFF 		bl	HAL_IncTick
 214              	.LVL0:
 215 002a 08BD     		pop	{r3, pc}
 216              	.L19:
 217              		.align	2
 218              	.L18:
 219 002c 00000000 		.word	millisTimer
 220 0030 00000000 		.word	secTimer
 221 0034 00000000 		.word	sysTimer
 222              		.cfi_endproc
 223              	.LFE71:
 225              		.section	.text.ADC1_2_IRQHandler,"ax",%progbits
 226              		.align	2
 227              		.global	ADC1_2_IRQHandler
 228              		.thumb
 229              		.thumb_func
 231              	ADC1_2_IRQHandler:
 232              	.LFB72:
 221:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 222:Src/stm32f1xx_it.c **** 
 223:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 224:Src/stm32f1xx_it.c **** }
 225:Src/stm32f1xx_it.c **** 
 226:Src/stm32f1xx_it.c **** /******************************************************************************/
 227:Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 228:Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 229:Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 230:Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 231:Src/stm32f1xx_it.c **** /******************************************************************************/
 232:Src/stm32f1xx_it.c **** 
 233:Src/stm32f1xx_it.c **** /**
 234:Src/stm32f1xx_it.c ****   * @brief This function handles ADC1 and ADC2 global interrupts.
 235:Src/stm32f1xx_it.c ****   */
 236:Src/stm32f1xx_it.c **** void ADC1_2_IRQHandler(void)
 237:Src/stm32f1xx_it.c **** {
 233              		.loc 1 237 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 08B5     		push	{r3, lr}
 238              	.LCFI1:
ARM GAS  /tmp/ccajP5gb.s 			page 9


 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 238:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 0 */
 239:Src/stm32f1xx_it.c **** 
 240:Src/stm32f1xx_it.c ****   /* USER CODE END ADC1_2_IRQn 0 */
 241:Src/stm32f1xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 242              		.loc 1 241 0
 243 0002 0248     		ldr	r0, .L22
 244 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 245              	.LVL1:
 246 0008 08BD     		pop	{r3, pc}
 247              	.L23:
 248 000a 00BF     		.align	2
 249              	.L22:
 250 000c 00000000 		.word	hadc1
 251              		.cfi_endproc
 252              	.LFE72:
 254              		.section	.text.USB_LP_CAN1_RX0_IRQHandler,"ax",%progbits
 255              		.align	2
 256              		.global	USB_LP_CAN1_RX0_IRQHandler
 257              		.thumb
 258              		.thumb_func
 260              	USB_LP_CAN1_RX0_IRQHandler:
 261              	.LFB73:
 242:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 1 */
 243:Src/stm32f1xx_it.c **** 
 244:Src/stm32f1xx_it.c ****   /* USER CODE END ADC1_2_IRQn 1 */
 245:Src/stm32f1xx_it.c **** }
 246:Src/stm32f1xx_it.c **** 
 247:Src/stm32f1xx_it.c **** /**
 248:Src/stm32f1xx_it.c ****   * @brief This function handles USB low priority or CAN RX0 interrupts.
 249:Src/stm32f1xx_it.c ****   */
 250:Src/stm32f1xx_it.c **** void USB_LP_CAN1_RX0_IRQHandler(void)
 251:Src/stm32f1xx_it.c **** {
 262              		.loc 1 251 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 08B5     		push	{r3, lr}
 267              	.LCFI2:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 3, -8
 270              		.cfi_offset 14, -4
 252:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 0 */
 253:Src/stm32f1xx_it.c **** 
 254:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 0 */
 255:Src/stm32f1xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 271              		.loc 1 255 0
 272 0002 0248     		ldr	r0, .L26
 273 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 274              	.LVL2:
 275 0008 08BD     		pop	{r3, pc}
 276              	.L27:
 277 000a 00BF     		.align	2
 278              	.L26:
 279 000c 00000000 		.word	hcan
ARM GAS  /tmp/ccajP5gb.s 			page 10


 280              		.cfi_endproc
 281              	.LFE73:
 283              		.section	.text.EXTI14_IRQHandler,"ax",%progbits
 284              		.align	2
 285              		.global	EXTI14_IRQHandler
 286              		.thumb
 287              		.thumb_func
 289              	EXTI14_IRQHandler:
 290              	.LFB74:
 256:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 1 */
 257:Src/stm32f1xx_it.c **** 
 258:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 1 */
 259:Src/stm32f1xx_it.c **** }
 260:Src/stm32f1xx_it.c **** 
 261:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 1 */
 262:Src/stm32f1xx_it.c **** void EXTI14_IRQHandler(void)
 263:Src/stm32f1xx_it.c **** {
 291              		.loc 1 263 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295 0000 08B5     		push	{r3, lr}
 296              	.LCFI3:
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 3, -8
 299              		.cfi_offset 14, -4
 264:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 265:Src/stm32f1xx_it.c **** 
 266:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 267:Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_14);
 300              		.loc 1 267 0
 301 0002 4FF48040 		mov	r0, #16384
 302 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 303              	.LVL3:
 304 000a 08BD     		pop	{r3, pc}
 305              		.cfi_endproc
 306              	.LFE74:
 308              		.section	.text.EXTI11_IRQHandler,"ax",%progbits
 309              		.align	2
 310              		.global	EXTI11_IRQHandler
 311              		.thumb
 312              		.thumb_func
 314              	EXTI11_IRQHandler:
 315              	.LFB75:
 268:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 269:Src/stm32f1xx_it.c **** 
 270:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 271:Src/stm32f1xx_it.c **** }
 272:Src/stm32f1xx_it.c **** 
 273:Src/stm32f1xx_it.c **** void EXTI11_IRQHandler(void)
 274:Src/stm32f1xx_it.c **** {
 316              		.loc 1 274 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 08B5     		push	{r3, lr}
 321              	.LCFI4:
ARM GAS  /tmp/ccajP5gb.s 			page 11


 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 3, -8
 324              		.cfi_offset 14, -4
 275:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 276:Src/stm32f1xx_it.c **** 
 277:Src/stm32f1xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 278:Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_11);
 325              		.loc 1 278 0
 326 0002 4FF40060 		mov	r0, #2048
 327 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 328              	.LVL4:
 329 000a 08BD     		pop	{r3, pc}
 330              		.cfi_endproc
 331              	.LFE75:
 333              		.comm	sysTimer,4,4
 334              		.comm	secTimer,4,4
 335              		.comm	millisTimer,4,4
 336              		.text
 337              	.Letext0:
 338              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 339              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 340              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 341              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 342              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 343              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 344              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 345              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 346              		.file 10 "Drivers/CMSIS/Include/core_cm3.h"
 347              		.file 11 "Inc/main.h"
 348              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 349              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  /tmp/ccajP5gb.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/ccajP5gb.s:19     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccajP5gb.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccajP5gb.s:37     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccajP5gb.s:42     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccajP5gb.s:57     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccajP5gb.s:62     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccajP5gb.s:77     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccajP5gb.s:82     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccajP5gb.s:97     .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccajP5gb.s:102    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccajP5gb.s:117    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccajP5gb.s:122    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccajP5gb.s:134    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccajP5gb.s:139    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccajP5gb.s:151    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccajP5gb.s:156    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccajP5gb.s:168    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccajP5gb.s:173    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccajP5gb.s:219    .text.SysTick_Handler:000000000000002c $d
                            *COM*:0000000000000004 millisTimer
                            *COM*:0000000000000004 secTimer
                            *COM*:0000000000000004 sysTimer
     /tmp/ccajP5gb.s:226    .text.ADC1_2_IRQHandler:0000000000000000 $t
     /tmp/ccajP5gb.s:231    .text.ADC1_2_IRQHandler:0000000000000000 ADC1_2_IRQHandler
     /tmp/ccajP5gb.s:250    .text.ADC1_2_IRQHandler:000000000000000c $d
     /tmp/ccajP5gb.s:255    .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccajP5gb.s:260    .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 USB_LP_CAN1_RX0_IRQHandler
     /tmp/ccajP5gb.s:279    .text.USB_LP_CAN1_RX0_IRQHandler:000000000000000c $d
     /tmp/ccajP5gb.s:284    .text.EXTI14_IRQHandler:0000000000000000 $t
     /tmp/ccajP5gb.s:289    .text.EXTI14_IRQHandler:0000000000000000 EXTI14_IRQHandler
     /tmp/ccajP5gb.s:309    .text.EXTI11_IRQHandler:0000000000000000 $t
     /tmp/ccajP5gb.s:314    .text.EXTI11_IRQHandler:0000000000000000 EXTI11_IRQHandler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_ADC_IRQHandler
hadc1
HAL_CAN_IRQHandler
hcan
HAL_GPIO_EXTI_IRQHandler
