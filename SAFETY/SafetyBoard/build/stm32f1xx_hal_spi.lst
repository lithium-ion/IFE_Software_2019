ARM GAS  /tmp/ccrAKW0M.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_spi.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	SPI_AbortRx_ISR:
  23              	.LFB116:
  24              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @file    stm32f1xx_hal_spi.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Channe
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the DMA handle parameters 
ARM GAS  /tmp/ccrAKW0M.s 			page 2


  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Channel
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Associate the initilalized hdma_tx(or _rx) handle to the hspi DMA Tx (or Rx) ha
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Master Receive mode restriction:
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=0) or
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) HAL_SPI_Init()
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   @endverbatim
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     Using the HAL it is not possible to reach all supported SPI frequency with the differents SPI M
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     the following tables resume the max SPI frequency reached with data size 8bits/16bits,
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     according to frequency used on APBx Peripheral Clock (fPCLK) used by the SPI instance :
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    DataSize = SPI_DATASIZE_8BIT:
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    +-----------------------------------------------------------------------------------------------
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |                | 2Lines Fullduplex     |     2Lines RxOnly     |        1Line       
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    | Process | Tranfert mode  |-----------------------|-----------------------|--------------------
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |                |  Master   |  Slave    |  Master   |  Slave    |  Master   |  Slave 
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |===============================================================================================
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    T    |     Polling    |  fPCLK/2  | fPCLK/16  |    NA     |    NA     |    NA     |    NA  
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    X    |----------------|-----------|-----------|-----------|-----------|-----------|--------
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    /    |     Interrupt  |  fPCLK/8  | fPCLK/32  |    NA     |    NA     |    NA     |    NA  
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    R    |----------------|-----------|-----------|-----------|-----------|-----------|--------
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    X    |       DMA      |  fPCLK/2  | fPCLK/4   |    NA     |    NA     |    NA     |    NA  
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |=========|================|===========|===========|===========|===========|===========|========
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |     Polling    |  fPCLK/4  | fPCLK/8   | fPCLK/8   | fPCLK/16  | fPCLK/64  | fPCLK/2
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |----------------|-----------|-----------|-----------|-----------|-----------|--------
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    R    |     Interrupt  |  fPCLK/8  | fPCLK/16  | fPCLK/32  | fPCLK/16  | fPCLK/64  | fPCLK/4
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    X    |----------------|-----------|-----------|-----------|-----------|-----------|--------
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |       DMA      |  fPCLK/2  | fPCLK/16  | fPCLK/8   | fPCLK/16  | fPCLK/64  | fPCLK/2
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |=========|================|===========|===========|===========|===========|===========|========
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |     Polling    |  fPCLK/2  |  fPCLK/2  |    NA     |    NA     |  fPCLK/2  | fPCLK/3
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |----------------|-----------|-----------|-----------|-----------|-----------|--------
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    T    |     Interrupt  |  fPCLK/8  | fPCLK/16  |    NA     |    NA     |  fPCLK/2  | fPCLK/6
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    X    |----------------|-----------|-----------|-----------|-----------|-----------|--------
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |       DMA      |  fPCLK/2  |  fPCLK/4  |    NA     |    NA     |  fPCLK/2  | fPCLK/3
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    +-----------------------------------------------------------------------------------------------
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccrAKW0M.s 			page 3


  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    DataSize = SPI_DATASIZE_16BIT:
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    +-----------------------------------------------------------------------------------------------
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |                | 2Lines Fullduplex     |     2Lines RxOnly     |        1Line       
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    | Process | Tranfert mode  |-----------------------|-----------------------|--------------------
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |                |  Master   |  Slave    |  Master   |  Slave    |  Master   |  Slave 
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |===============================================================================================
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    T    |     Polling    |  fPCLK/4  | fPCLK/4   |    NA     |    NA     |    NA     |    NA  
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    X    |----------------|-----------|-----------|-----------|-----------|-----------|--------
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    /    |     Interrupt  |  fPCLK/8  | fPCLK/16  |    NA     |    NA     |    NA     |    NA  
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    R    |----------------|-----------|-----------|-----------|-----------|-----------|--------
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    X    |       DMA      |  fPCLK/2  | fPCLK/4   |    NA     |    NA     |    NA     |    NA  
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |=========|================|===========|===========|===========|===========|===========|========
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |     Polling    |  fPCLK/4  |  fPCLK/8  | fPCLK/4   | fPCLK/8   | fPCLK/64  | fPCLK/2
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |----------------|-----------|-----------|-----------|-----------|-----------|--------
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    R    |     Interrupt  |  fPCLK/8  |  fPCLK/8  | fPCLK/128 | fPCLK/8   | fPCLK/128 | fPCLK/4
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    X    |----------------|-----------|-----------|-----------|-----------|-----------|--------
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |       DMA      |  fPCLK/2  |  fPCLK/2  | fPCLK/128 | fPCLK/16  | fPCLK/64  | fPCLK/2
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |=========|================|===========|===========|===========|===========|===========|========
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |     Polling    |  fPCLK/2  |  fPCLK/4  |    NA     |    NA     |  fPCLK/4  | fPCLK/8
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |----------------|-----------|-----------|-----------|-----------|-----------|--------
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    T    |     Interrupt  |  fPCLK/4  |  fPCLK/8  |    NA     |    NA     |  fPCLK/4  | fPCLK/4
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |    X    |----------------|-----------|-----------|-----------|-----------|-----------|--------
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    |         |       DMA      |  fPCLK/2  |  fPCLK/2  |    NA     |    NA     |  fPCLK/4  | fPCLK/8
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    +-----------------------------------------------------------------------------------------------
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        (@) The max SPI frequency depend on SPI data size (8bits, 16bits),
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****            SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, IT
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        (@)
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (+@) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HA
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (+@) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (+@) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DM
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @attention
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * Redistribution and use in source and binary forms, with or without modification,
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * are permitted provided that the following conditions are met:
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *      this list of conditions and the following disclaimer.
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *      this list of conditions and the following disclaimer in the documentation
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *      and/or other materials provided with the distribution.
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *      may be used to endorse or promote products derived from this software
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *      without specific prior written permission.
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
ARM GAS  /tmp/ccrAKW0M.s 			page 4


 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #include "stm32f1xx_hal.h"
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @addtogroup STM32F1xx_HAL_Driver
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI SPI
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief SPI HAL module driver
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, uint
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  /tmp/ccrAKW0M.s 			page 5


 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_CheckFlag_BSY(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tick
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  @brief    Initialization and Configuration functions
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           the selected configuration:
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Mode
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Direction
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Data Size
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Clock Polarity and Phase
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) NSS Management
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) BaudRate Prescaler
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) FirstBit
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) TIMode
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) CRC Calculation
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           of the selected SPIx peripheral.
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
ARM GAS  /tmp/ccrAKW0M.s 			page 6


 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi == NULL)
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the parameters */
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_RESET)
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : NSS management */
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
ARM GAS  /tmp/ccrAKW0M.s 			page 7


 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  De Initialize the SPI peripheral.
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi == NULL)
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check SPI Instance parameter */
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Release Lock */
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccrAKW0M.s 			page 8


 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  @brief   Data transfers functions
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                       ##### IO operation functions #####
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  [..]
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     data transfers.
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     (#) There are two modes of transfer:
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             after finishing transfer.
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The end of the data processing will be indicated through the
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             using DMA mode.
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
ARM GAS  /tmp/ccrAKW0M.s 			page 9


 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData: pointer to data buffer
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size: amount of data to be sent
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout: Timeout duration
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->State != HAL_SPI_STATE_READY)
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((pData == NULL ) || (Size == 0U))
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
ARM GAS  /tmp/ccrAKW0M.s 			page 10


 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_SLAVE) || (hspi->TxXferCount == 0x01))
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)pData);
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       pData += sizeof(uint16_t);
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)pData);
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           pData += sizeof(uint16_t);
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->TxXferCount--;
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick()-tickstart) >=  Timeout
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_SLAVE)|| (hspi->TxXferCount == 0x01))
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((__IO uint8_t*)&hspi->Instance->DR) = (*pData);
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       pData += sizeof(uint8_t);
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
ARM GAS  /tmp/ccrAKW0M.s 			page 11


 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((__IO uint8_t*)&hspi->Instance->DR) = (*pData);
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         pData += sizeof(uint8_t);
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick()-tickstart) >=  Timeout
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag */
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, tickstart) != HAL_OK)
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_TIMEOUT;
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Busy flag */
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(SPI_CheckFlag_BSY(hspi, Timeout, tickstart) != HAL_OK)
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error:
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccrAKW0M.s 			page 12


 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData: pointer to data buffer
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size: amount of data to be received
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout: Timeout duration
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      hspi->State = HAL_SPI_STATE_BUSY_RX;
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi,pData,pData,Size,Timeout);
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->State != HAL_SPI_STATE_READY)
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((pData == NULL ) || (Size == 0U))
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
ARM GAS  /tmp/ccrAKW0M.s 			page 13


 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount--;
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction: 1Line */
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Receive data in 8 Bit mode */
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transfer loop */
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while(hspi->RxXferCount > 0U)
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check the RXNE flag */
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* read the received data */
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (* (uint8_t *)pData)= *(__IO uint8_t *)&hspi->Instance->DR;
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         pData += sizeof(uint8_t);
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick()-tickstart) >=  Timeout
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transfer loop */
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while(hspi->RxXferCount > 0U)
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check the RXNE flag */
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((uint16_t*)pData) = hspi->Instance->DR;
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         pData += sizeof(uint16_t);
ARM GAS  /tmp/ccrAKW0M.s 			page 14


 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick()-tickstart) >=  Timeout
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Handle the CRC Transmission */
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* freeze the CRC before the latest data */
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read the latest data */
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* the latest data has not been received */
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       goto error;
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((uint16_t*)pData) = hspi->Instance->DR;
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (*(uint8_t *)pData) = *(__IO uint8_t *)&hspi->Instance->DR;
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait the CRC data */
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       goto error;
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     tmpreg = hspi->Instance->DR;
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* To avoid GCC warning */
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     UNUSED(tmpreg);
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi->I
ARM GAS  /tmp/ccrAKW0M.s 			page 15


 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI peripheral */
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error occurred */
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check if CRC error is valid or not (workaround to be applied or not) */
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SPI_RESET_CRC(hspi);
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size: amount of data to be sent and received
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout: Timeout duration
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tmp = 0U, tmp1 = 0U;
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint16_t tmpreg1 = 0U;
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t txallowed = 1U;
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
ARM GAS  /tmp/ccrAKW0M.s 			page 16


 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp  = hspi->State;
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp1 = hspi->Init.Mode;
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(!((tmp == HAL_SPI_STATE_READY) || \
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL_SPI
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccrAKW0M.s 			page 17


 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_SLAVE) || (hspi->TxXferCount == 0x01U))
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)pTxData);
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       pTxData += sizeof(uint16_t);
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check TXE flag */
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(txallowed && (hspi->TxXferCount > 0U) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)))
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)pTxData);
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         pTxData += sizeof(uint16_t);
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */ 
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 0U;
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Enable CRC Transmission */
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check RXNE flag */
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if((hspi->RxXferCount > 0U) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)))
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((uint16_t *)pRxData) = hspi->Instance->DR;
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         pRxData += sizeof(uint16_t);
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */ 
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 1U;
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick()-tickstart) >=  Timeout))
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_SLAVE) || (hspi->TxXferCount == 0x01U))
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((__IO uint8_t*)&hspi->Instance->DR) = (*pTxData);
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       pTxData += sizeof(uint8_t);
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccrAKW0M.s 			page 18


 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* check TXE flag */
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(txallowed && (hspi->TxXferCount > 0U) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)))
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*pTxData++);
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */ 
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 0U;
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Enable CRC Transmission */
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if((hspi->RxXferCount > 0U) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)))
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (*(uint8_t *)pRxData++) = hspi->Instance->DR;
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */ 
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 1U;
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick()-tickstart) >=  Timeout))
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait until TXE flag */
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Error on the CRC reception */
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       goto error;
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read CRC */
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     tmpreg1 = hspi->Instance->DR;
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* To avoid GCC warning */
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     UNUSED(tmpreg1);
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccrAKW0M.s 			page 19


1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    	  errorcode = HAL_ERROR;
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag */
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, tickstart) != HAL_OK)
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_TIMEOUT;
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Busy flag */
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(SPI_CheckFlag_BSY(hspi, Timeout, tickstart) != HAL_OK)
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
ARM GAS  /tmp/ccrAKW0M.s 			page 20


1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((pData == NULL) || (Size == 0U))
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->State != HAL_SPI_STATE_READY)
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.DataSize > SPI_DATASIZE_8BIT )
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable TXE interrupt */
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE));
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
ARM GAS  /tmp/ccrAKW0M.s 			page 21


1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable TXE and ERR interrupt */
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      hspi->State = HAL_SPI_STATE_BUSY_RX;
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->State != HAL_SPI_STATE_READY)
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((pData == NULL) || (Size == 0U))
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
ARM GAS  /tmp/ccrAKW0M.s 			page 22


1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.DataSize > SPI_DATASIZE_8BIT )
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             process unlock */
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
ARM GAS  /tmp/ccrAKW0M.s 			page 23


1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size: amount of data to be sent and received
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tmp = 0U, tmp1 = 0U;
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp  = hspi->State;
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp1 = hspi->Init.Mode;
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(!((tmp == HAL_SPI_STATE_READY) || \
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL_SPI
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0U))
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.DataSize > SPI_DATASIZE_8BIT )
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccrAKW0M.s 			page 24


1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->State != HAL_SPI_STATE_READY)
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((pData == NULL) || (Size == 0U))
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
ARM GAS  /tmp/ccrAKW0M.s 			page 25


1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Tx DMA Stream */
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR, hspi->T
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Tx DMA Request */
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
ARM GAS  /tmp/ccrAKW0M.s 			page 26


1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->Init.Direction == SPI_DIRECTION_2LINES)&&(hspi->Init.Mode == SPI_MODE_MASTER))
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      hspi->State = HAL_SPI_STATE_BUSY_RX;
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->State != HAL_SPI_STATE_READY)
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((pData == NULL) || (Size == 0U))
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
ARM GAS  /tmp/ccrAKW0M.s 			page 27


1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  /* Set the DMA AbortCpltCallback */
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Rx DMA Stream */
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr, hspi->R
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error:
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tmp = 0U, tmp1 = 0U;
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
ARM GAS  /tmp/ccrAKW0M.s 			page 28


1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp  = hspi->State;
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp1 = hspi->Init.Mode;
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(!((tmp == HAL_SPI_STATE_READY) ||
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL_S
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0U))
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t*)pTxData;
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t*)pRxData;
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_BUSY_RX)
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
ARM GAS  /tmp/ccrAKW0M.s 			page 29


1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Rx DMA Stream */
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr, hspi->R
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   is performed in DMA reception complete callback  */
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Tx DMA Stream */
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR, hspi->T
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Tx DMA Request */
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         This procedure performs following operations :
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Set handle State to READY
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   Once transfer is aborted, the __HAL_SPI_CLEAR_OVRFLAG() macro must be called in user ap
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         before starting new SPI receive process.
ARM GAS  /tmp/ccrAKW0M.s 			page 30


1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** */
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear ERRIE interrupts in case of DMA Mode */
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx or SPI DMA Rx request if enabled */
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(hspi->Instance->CR2
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Tx channel : use blocking DMA Abort API (no callback) */  
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->hdmatx != NULL)
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_DMA_Abort(hspi->hdmatx);
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable Tx DMA Request */
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set */
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       do
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if(count-- == 0U)
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           break;
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       while((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);       
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Rx channel : use blocking DMA Abort API (no callback) */
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->hdmarx != NULL)
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_DMA_Abort(hspi->hdmarx);
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccrAKW0M.s 			page 31


1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable peripheral */
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi); 
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable Rx DMA Request */
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset errorCode */
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->state to ready */
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         This procedure performs following operations :
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Set handle State to READY
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   Once transfer is aborted, the __HAL_SPI_CLEAR_OVRFLAG() macro must be called in user ap
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         before starting new SPI receive process.
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** */
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t abortcplt;
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear ERRIE interrupts in case of DMA Mode */
ARM GAS  /tmp/ccrAKW0M.s 			page 32


1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   abortcplt = 1U;
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      before any call to DMA Abort functions */  
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Tx Handle is valid */
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->hdmatx != NULL)
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Otherwise, set it to NULL */
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }  
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Rx Handle is valid */
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->hdmarx != NULL)
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Otherwise, set it to NULL */
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx or the SPI Rx request if enabled */
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN)) && (HAL_IS_BIT_SET(hspi->Instance->CR2,
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Tx channel */
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->hdmatx != NULL)
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 0U;
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Rx channel */
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->hdmarx != NULL)
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(HAL_DMA_Abort_IT(hspi->hdmarx)!=  HAL_OK)
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
ARM GAS  /tmp/ccrAKW0M.s 			page 33


1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 1U;
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 0U;
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx or the SPI Rx request if enabled */
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Tx channel */
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->hdmatx != NULL)
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 0U;
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx or the SPI Rx request if enabled */
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Rx channel */
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->hdmarx != NULL)
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(HAL_DMA_Abort_IT(hspi->hdmarx)!=  HAL_OK)
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 0U;
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(abortcplt == 1U)
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset errorCode */
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccrAKW0M.s 			page 34


1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Restore hspi->State to Ready */
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief Stop the DMA Transfer.
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
ARM GAS  /tmp/ccrAKW0M.s 			page 35


1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      */
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream */
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->hdmatx != NULL)
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_DMA_Abort(hspi->hdmatx);
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream */
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->hdmarx != NULL)
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_DMA_Abort(hspi->hdmarx);
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(((itflag & SPI_FLAG_OVR) == RESET) &&
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      ((itflag & SPI_FLAG_RXNE) != RESET) && ((itsource & SPI_IT_RXNE) != RESET))
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR(hspi);
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(((itflag & SPI_FLAG_TXE) != RESET) && ((itsource & SPI_IT_TXE) != RESET))
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR(hspi);
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(((itflag & (SPI_FLAG_MODF | SPI_FLAG_OVR)) != RESET) && ((itsource & SPI_IT_ERR) != RESET))
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if((itflag & SPI_FLAG_OVR) != RESET)
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(hspi->State != HAL_SPI_STATE_BUSY_TX)
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
ARM GAS  /tmp/ccrAKW0M.s 			page 36


1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return;
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if((itflag & SPI_FLAG_MODF) != RESET)
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable all interrupts */
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN))||(HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if(hspi->hdmarx != NULL)
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           HAL_DMA_Abort_IT(hspi->hdmarx);
2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if(hspi->hdmatx != NULL)
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           HAL_DMA_Abort_IT(hspi->hdmatx);
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user error callback */
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief Tx Transfer completed callback.
ARM GAS  /tmp/ccrAKW0M.s 			page 37


2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief Rx Transfer completed callback.
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief Tx and Rx Transfer completed callback.
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief Tx Half Transfer completed callback.
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
ARM GAS  /tmp/ccrAKW0M.s 			page 38


2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief Rx Half Transfer completed callback.
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief Tx and Rx Half Transfer callback.
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief SPI error callback.
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccrAKW0M.s 			page 39


2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   SPI control functions
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval SPI state
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI handle state */
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return hspi->State;
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Return the SPI error code.
2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI ErrorCode */
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return hspi->ErrorCode;
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
ARM GAS  /tmp/ccrAKW0M.s 			page 40


2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   Private functions
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief DMA SPI transmit process complete callback.
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Normal Mode */
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable Tx DMA Request */
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(SPI_CheckFlag_BSY(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief DMA SPI receive process complete callback.
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccrAKW0M.s 			page 41


2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* CRC handling */
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until RXNE flag */
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SPI_FLAG_RXNE, SPI_DEFAULT_TIMEOUT, tic
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Error on the CRC reception */
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Read CRC */
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* To avoid GCC warning */
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       UNUSED(tmpreg);
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines) *
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi-
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable SPI peripheral */
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error occurred */
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check if CRC error is valid or not (workaround to be applied or not) */
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SPI_RESET_CRC(hspi);
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
ARM GAS  /tmp/ccrAKW0M.s 			page 42


2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO int16_t tmpreg = 0U;
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* CRC handling */
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait the CRC data */
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !=
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Read CRC to Flush DR and RXNE flag */
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* To avoid GCC warning */
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       UNUSED(tmpreg);
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(SPI_CheckFlag_BSY(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
ARM GAS  /tmp/ccrAKW0M.s 			page 43


2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error occurred */
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check if CRC error is valid or not (workaround to be applied or not) */
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SPI_RESET_CRC(hspi);
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
2417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
2426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
ARM GAS  /tmp/ccrAKW0M.s 			page 44


2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
2430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
2439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
2443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = (SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Stop the disable DMA transfer on SPI side */
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
2457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
2461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
2463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
2472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
2476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
2479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
2480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
ARM GAS  /tmp/ccrAKW0M.s 			page 45


2486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
2488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable Tx DMA Request */
2490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN );
2491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
2493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
2494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(count-- == 0U)
2496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
2499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   while((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
2502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
2504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->hdmarx != NULL)
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->hdmarx->XferAbortCallback != NULL)
2507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
2512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset errorCode */
2517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
2521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Abort complete callback */
2523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
2524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
2528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
2531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
2532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
2539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
2540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccrAKW0M.s 			page 46


2543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable Rx DMA Request */
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
2547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->hdmatx != NULL)
2548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->hdmatx->XferAbortCallback != NULL)
2550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset errorCode */
2560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
2566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
2567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Abort complete callback */
2569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
2570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
2574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
2579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 8bit mode */
2581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *hspi->pRxBuffPtr++ = *((__IO uint8_t *)&hspi->Instance->DR);
2582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
2583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* check end of the reception */
2585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->RxXferCount == 0U)
2586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
2591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable RXNE interrupt */
2596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
2597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->TxXferCount == 0U)
2599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccrAKW0M.s 			page 47


2600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
2601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
2608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
2613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint8_t tmpreg = 0U;
2615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read data register to flush CRC */
2617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg = *((__IO uint8_t *)&hspi->Instance->DR);
2618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
2620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg);
2622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    /* Disable RXNE interrupt */
2624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
2625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->TxXferCount == 0U)
2627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRxTx_ISR(hspi);
2629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
2635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
2640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr++);
2642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
2643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* check the end of the transmission */
2645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->TxXferCount == 0U)
2646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
2651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
2652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable TXE interrupt */
ARM GAS  /tmp/ccrAKW0M.s 			page 48


2657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
2658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->RxXferCount == 0U)
2660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
2662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
2668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
2673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
2675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
2676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
2677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
2678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->RxXferCount == 0U)
2680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
2685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable RXNE interrupt */
2690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
2691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->TxXferCount == 0U)
2693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
2695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
2702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
2707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
2709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
2710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read data register to flush CRC */
2712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg = hspi->Instance->DR;
2713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccrAKW0M.s 			page 49


2714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
2715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg);
2716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE interrupt */
2718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
2719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
2721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
2726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
2731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
2733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
2734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
2735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
2736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
2738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->TxXferCount == 0U)
2739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
2744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
2745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable TXE interrupt */
2750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
2751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->RxXferCount == 0U)
2753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
2755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
2762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
2767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint8_t tmpreg = 0U;
2769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read data register to flush CRC */
ARM GAS  /tmp/ccrAKW0M.s 			page 50


2771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg = *((__IO uint8_t*)&hspi->Instance->DR);
2772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
2774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg);
2775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
2777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
2782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
2787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *hspi->pRxBuffPtr++ = (*(__IO uint8_t *)&hspi->Instance->DR);
2789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
2790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
2793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
2794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
2796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->RxXferCount == 0U)
2800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
2805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
2809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
2815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
2820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
2822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read data register to flush CRC */
2824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg = hspi->Instance->DR;
2825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
2827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg);
ARM GAS  /tmp/ccrAKW0M.s 			page 51


2828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
2830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
2831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
2833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
2838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
2843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
2845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
2846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
2847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
2850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
2851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
2853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->RxXferCount == 0U)
2857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
2862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
2866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
2871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
2876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr++);
2878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
2879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->TxXferCount == 0U)
2881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccrAKW0M.s 			page 52


2885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Enable CRC Transmission */
2886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
2887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
2890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
2895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
2900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
2902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
2903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
2904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
2905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->TxXferCount == 0U)
2907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Enable CRC Transmission */
2912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
2913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
2916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief Handle SPI Communication Timeout.
2921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param hspi: pointer to a SPI_HandleTypeDef structure that contains
2922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *              the configuration information for SPI module.
2923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param Flag: SPI flag to check
2924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param State: flag state to check
2925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param Timeout: Timeout duration
2926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param Tickstart: tick start value
2927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, uint
2930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   while((((hspi->Instance->SR & Flag) == (Flag)) ? SET : RESET) != State)
2932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(Timeout != HAL_MAX_DELAY)
2934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) >= Timeout))
2936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
2938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         on both master and slave sides in order to resynchronize the master
2939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         and slave for their respective CRC calculation */
2940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
ARM GAS  /tmp/ccrAKW0M.s 			page 53


2942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
2943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(h
2945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Disable SPI peripheral */
2947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
2948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
2951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
2954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State= HAL_SPI_STATE_READY;
2957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Process Unlocked */
2959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
2960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return HAL_TIMEOUT;
2962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
2967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief Handle to check BSY flag before start a new transaction.
2970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param hspi: pointer to a SPI_HandleTypeDef structure that contains
2971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *              the configuration information for SPI module.
2972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param Timeout: Timeout duration
2973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param Tickstart: tick start value
2974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_CheckFlag_BSY(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tick
2977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Control the BSY flag */
2979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
2980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_TIMEOUT;
2983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
2985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
2989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
2994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
2996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
2998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
ARM GAS  /tmp/ccrAKW0M.s 			page 54


2999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable ERR interrupt */
3001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(count-- == 0U)
3007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
3010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   while((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
3014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
3015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(SPI_CheckFlag_BSY(hspi, SPI_DEFAULT_TIMEOUT, tickstart)!=HAL_OK)
3016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
3022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
3028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
3031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
3032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
3037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
3038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(hspi->State == HAL_SPI_STATE_BUSY_RX)
3052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       	hspi->State = HAL_SPI_STATE_READY;
3054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
3055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
ARM GAS  /tmp/ccrAKW0M.s 			page 55


3056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
3057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       	hspi->State = HAL_SPI_STATE_READY;
3059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
3060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
3074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
3079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable RXNE and ERR interrupt */
3081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
3084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi-
3085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable SPI peripheral */
3087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
3088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received is not read */
3091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
3092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
3094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error occurred */
3099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check if CRC error is valid or not (workaround to be applied or not) */
3102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
3103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
3107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SPI_RESET_CRC(hspi);
3108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****          HAL_SPI_ErrorCallback(hspi);
3110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
3112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
ARM GAS  /tmp/ccrAKW0M.s 			page 56


3113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
3122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
3124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
3126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
3134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
3139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
3141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
3145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(count-- == 0U)
3150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
3153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   while((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
3158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
3159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Busy flag */
3161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(SPI_CheckFlag_BSY(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
3168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
ARM GAS  /tmp/ccrAKW0M.s 			page 57


3170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
3180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
3185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx transaction.
3189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
3194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
  25              		.loc 1 3194 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
3195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
  34              		.loc 1 3195 0
  35 0002 0023     		movs	r3, #0
  36 0004 0193     		str	r3, [sp, #4]
3196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
  37              		.loc 1 3196 0
  38 0006 144B     		ldr	r3, .L7
  39 0008 1B68     		ldr	r3, [r3]
  40 000a 144A     		ldr	r2, .L7+4
  41 000c A2FB0323 		umull	r2, r3, r2, r3
  42 0010 5B0A     		lsrs	r3, r3, #9
  43 0012 6422     		movs	r2, #100
  44 0014 02FB03F3 		mul	r3, r2, r3
  45 0018 0093     		str	r3, [sp]
  46              	.L4:
3197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if(count-- == 0U)
  47              		.loc 1 3201 0
  48 001a 009B     		ldr	r3, [sp]
  49 001c 5A1E     		subs	r2, r3, #1
ARM GAS  /tmp/ccrAKW0M.s 			page 58


  50 001e 0092     		str	r2, [sp]
  51 0020 2BB1     		cbz	r3, .L6
3202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
3205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   while((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
  52              		.loc 1 3207 0
  53 0022 0368     		ldr	r3, [r0]
  54 0024 9B68     		ldr	r3, [r3, #8]
  55 0026 13F0020F 		tst	r3, #2
  56 002a F6D0     		beq	.L4
  57 002c 03E0     		b	.L3
  58              	.L6:
3203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
  59              		.loc 1 3203 0
  60 002e 436D     		ldr	r3, [r0, #84]
  61 0030 43F02003 		orr	r3, r3, #32
  62 0034 4365     		str	r3, [r0, #84]
  63              	.L3:
3208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);    
  64              		.loc 1 3210 0
  65 0036 0268     		ldr	r2, [r0]
  66 0038 1368     		ldr	r3, [r2]
  67 003a 23F04003 		bic	r3, r3, #64
  68 003e 1360     		str	r3, [r2]
3211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
  69              		.loc 1 3213 0
  70 0040 0268     		ldr	r2, [r0]
  71 0042 5368     		ldr	r3, [r2, #4]
  72 0044 23F0E003 		bic	r3, r3, #224
  73 0048 5360     		str	r3, [r2, #4]
3214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Flush DR Register */
3216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg = (*(__IO uint32_t *)&hspi->Instance->DR);
  74              		.loc 1 3216 0
  75 004a 0368     		ldr	r3, [r0]
  76 004c DB68     		ldr	r3, [r3, #12]
  77 004e 0193     		str	r3, [sp, #4]
3217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
3219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg);
  78              		.loc 1 3219 0
  79 0050 019B     		ldr	r3, [sp, #4]
3220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
  80              		.loc 1 3220 0
  81 0052 02B0     		add	sp, sp, #8
  82              	.LCFI1:
  83              		.cfi_def_cfa_offset 0
  84              		@ sp needed
  85 0054 7047     		bx	lr
  86              	.L8:
ARM GAS  /tmp/ccrAKW0M.s 			page 59


  87 0056 00BF     		.align	2
  88              	.L7:
  89 0058 00000000 		.word	SystemCoreClock
  90 005c F1197605 		.word	91625969
  91              		.cfi_endproc
  92              	.LFE116:
  94              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
  95              		.align	1
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu softvfp
 101              	SPI_AbortTx_ISR:
 102              	.LFB117:
3221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx transaction.
3224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
3229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 103              		.loc 1 3229 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.LVL1:
3230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
 109              		.loc 1 3231 0
 110 0000 0268     		ldr	r2, [r0]
 111 0002 5368     		ldr	r3, [r2, #4]
 112 0004 23F0E003 		bic	r3, r3, #224
 113 0008 5360     		str	r3, [r2, #4]
3232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 114              		.loc 1 3234 0
 115 000a 0268     		ldr	r2, [r0]
 116 000c 1368     		ldr	r3, [r2]
 117 000e 23F04003 		bic	r3, r3, #64
 118 0012 1360     		str	r3, [r2]
 119 0014 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE117:
 123              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
 124              		.align	1
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu softvfp
 130              	SPI_WaitFlagStateUntilTimeout:
 131              	.LFB111:
2930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   while((((hspi->Instance->SR & Flag) == (Flag)) ? SET : RESET) != State)
 132              		.loc 1 2930 0
ARM GAS  /tmp/ccrAKW0M.s 			page 60


 133              		.cfi_startproc
 134              		@ args = 4, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              	.LVL2:
 137 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 138              	.LCFI2:
 139              		.cfi_def_cfa_offset 24
 140              		.cfi_offset 3, -24
 141              		.cfi_offset 4, -20
 142              		.cfi_offset 5, -16
 143              		.cfi_offset 6, -12
 144              		.cfi_offset 7, -8
 145              		.cfi_offset 14, -4
 146 0002 0546     		mov	r5, r0
 147 0004 0F46     		mov	r7, r1
 148 0006 1646     		mov	r6, r2
 149 0008 1C46     		mov	r4, r3
2931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 150              		.loc 1 2931 0
 151 000a 3BE0     		b	.L12
 152              	.LVL3:
 153              	.L25:
2935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 154              		.loc 1 2935 0
 155 000c 2CB1     		cbz	r4, .L13
2935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 156              		.loc 1 2935 0 is_stmt 0 discriminator 1
 157 000e FFF7FEFF 		bl	HAL_GetTick
 158              	.LVL4:
 159 0012 069B     		ldr	r3, [sp, #24]
 160 0014 C01A     		subs	r0, r0, r3
 161 0016 8442     		cmp	r4, r0
 162 0018 34D8     		bhi	.L12
 163              	.L13:
2942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 164              		.loc 1 2942 0 is_stmt 1
 165 001a 2A68     		ldr	r2, [r5]
 166 001c 5368     		ldr	r3, [r2, #4]
 167 001e 23F0E003 		bic	r3, r3, #224
 168 0022 5360     		str	r3, [r2, #4]
2944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 169              		.loc 1 2944 0
 170 0024 6B68     		ldr	r3, [r5, #4]
 171 0026 B3F5827F 		cmp	r3, #260
 172 002a 0BD0     		beq	.L22
 173              	.L14:
2951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 174              		.loc 1 2951 0
 175 002c AB6A     		ldr	r3, [r5, #40]
 176 002e B3F5005F 		cmp	r3, #8192
 177 0032 14D0     		beq	.L23
 178              	.L16:
2956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 179              		.loc 1 2956 0
 180 0034 0123     		movs	r3, #1
 181 0036 85F85130 		strb	r3, [r5, #81]
2959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccrAKW0M.s 			page 61


 182              		.loc 1 2959 0
 183 003a 0023     		movs	r3, #0
 184 003c 85F85030 		strb	r3, [r5, #80]
2961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 185              		.loc 1 2961 0
 186 0040 0320     		movs	r0, #3
 187 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 188              	.LVL5:
 189              	.L22:
2944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 190              		.loc 1 2944 0 discriminator 1
 191 0044 AB68     		ldr	r3, [r5, #8]
 192 0046 B3F5004F 		cmp	r3, #32768
 193 004a 02D0     		beq	.L15
2944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 194              		.loc 1 2944 0 is_stmt 0 discriminator 2
 195 004c B3F5806F 		cmp	r3, #1024
 196 0050 ECD1     		bne	.L14
 197              	.L15:
2947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 198              		.loc 1 2947 0 is_stmt 1
 199 0052 2A68     		ldr	r2, [r5]
 200 0054 1368     		ldr	r3, [r2]
 201 0056 23F04003 		bic	r3, r3, #64
 202 005a 1360     		str	r3, [r2]
 203 005c E6E7     		b	.L14
 204              	.L23:
2953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 205              		.loc 1 2953 0
 206 005e 2A68     		ldr	r2, [r5]
 207 0060 1368     		ldr	r3, [r2]
 208 0062 23F40053 		bic	r3, r3, #8192
 209 0066 1B04     		lsls	r3, r3, #16
 210 0068 1B0C     		lsrs	r3, r3, #16
 211 006a 1360     		str	r3, [r2]
 212 006c 2A68     		ldr	r2, [r5]
 213 006e 1368     		ldr	r3, [r2]
 214 0070 43F40053 		orr	r3, r3, #8192
 215 0074 1360     		str	r3, [r2]
 216 0076 DDE7     		b	.L16
 217              	.L26:
2931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 218              		.loc 1 2931 0
 219 0078 0123     		movs	r3, #1
 220              	.L18:
2931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 221              		.loc 1 2931 0 is_stmt 0 discriminator 4
 222 007a B342     		cmp	r3, r6
 223 007c 09D0     		beq	.L24
2933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 224              		.loc 1 2933 0 is_stmt 1
 225 007e B4F1FF3F 		cmp	r4, #-1
 226 0082 C3D1     		bne	.L25
 227              	.L12:
2931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 228              		.loc 1 2931 0
 229 0084 2B68     		ldr	r3, [r5]
ARM GAS  /tmp/ccrAKW0M.s 			page 62


 230 0086 9B68     		ldr	r3, [r3, #8]
 231 0088 37EA0303 		bics	r3, r7, r3
 232 008c F4D0     		beq	.L26
 233 008e 0023     		movs	r3, #0
 234 0090 F3E7     		b	.L18
 235              	.L24:
2966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 236              		.loc 1 2966 0
 237 0092 0020     		movs	r0, #0
2967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 238              		.loc 1 2967 0
 239 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 240              		.cfi_endproc
 241              	.LFE111:
 243              		.section	.text.SPI_CheckFlag_BSY,"ax",%progbits
 244              		.align	1
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu softvfp
 250              	SPI_CheckFlag_BSY:
 251              	.LFB112:
2977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Control the BSY flag */
 252              		.loc 1 2977 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              	.LVL6:
 257 0000 10B5     		push	{r4, lr}
 258              	.LCFI3:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 4, -8
 261              		.cfi_offset 14, -4
 262 0002 82B0     		sub	sp, sp, #8
 263              	.LCFI4:
 264              		.cfi_def_cfa_offset 16
 265 0004 0446     		mov	r4, r0
2979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 266              		.loc 1 2979 0
 267 0006 0092     		str	r2, [sp]
 268 0008 0B46     		mov	r3, r1
 269 000a 0022     		movs	r2, #0
 270              	.LVL7:
 271 000c 8021     		movs	r1, #128
 272              	.LVL8:
 273 000e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 274              	.LVL9:
 275 0012 0346     		mov	r3, r0
 276 0014 20B1     		cbz	r0, .L28
2981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_TIMEOUT;
 277              		.loc 1 2981 0
 278 0016 636D     		ldr	r3, [r4, #84]
 279 0018 43F02003 		orr	r3, r3, #32
 280 001c 6365     		str	r3, [r4, #84]
2982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 281              		.loc 1 2982 0
 282 001e 0323     		movs	r3, #3
ARM GAS  /tmp/ccrAKW0M.s 			page 63


 283              	.L28:
2985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 284              		.loc 1 2985 0
 285 0020 1846     		mov	r0, r3
 286 0022 02B0     		add	sp, sp, #8
 287              	.LCFI5:
 288              		.cfi_def_cfa_offset 8
 289              		@ sp needed
 290 0024 10BD     		pop	{r4, pc}
 291              		.cfi_endproc
 292              	.LFE112:
 294              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 295              		.align	1
 296              		.weak	HAL_SPI_MspInit
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu softvfp
 302              	HAL_SPI_MspInit:
 303              	.LFB66:
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 304              		.loc 1 375 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 309              	.LVL10:
 310 0000 7047     		bx	lr
 311              		.cfi_endproc
 312              	.LFE66:
 314              		.section	.text.HAL_SPI_Init,"ax",%progbits
 315              		.align	1
 316              		.weak	HAL_SPI_Init
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu softvfp
 322              	HAL_SPI_Init:
 323              	.LFB64:
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 324              		.loc 1 262 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              	.LVL11:
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 329              		.loc 1 264 0
 330 0000 0028     		cmp	r0, #0
 331 0002 3BD0     		beq	.L34
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 332              		.loc 1 262 0
 333 0004 10B5     		push	{r4, lr}
 334              	.LCFI6:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 4, -8
 337              		.cfi_offset 14, -4
 338 0006 0446     		mov	r4, r0
ARM GAS  /tmp/ccrAKW0M.s 			page 64


 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 339              		.loc 1 287 0
 340 0008 0023     		movs	r3, #0
 341 000a 8362     		str	r3, [r0, #40]
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 342              		.loc 1 290 0
 343 000c 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
 344 0010 002B     		cmp	r3, #0
 345 0012 2ED0     		beq	.L39
 346              	.LVL12:
 347              	.L33:
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 348              		.loc 1 299 0
 349 0014 0223     		movs	r3, #2
 350 0016 84F85130 		strb	r3, [r4, #81]
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 351              		.loc 1 302 0
 352 001a 2268     		ldr	r2, [r4]
 353 001c 1368     		ldr	r3, [r2]
 354 001e 23F04003 		bic	r3, r3, #64
 355 0022 1360     		str	r3, [r2]
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 356              		.loc 1 307 0
 357 0024 2268     		ldr	r2, [r4]
 358 0026 6368     		ldr	r3, [r4, #4]
 359 0028 A168     		ldr	r1, [r4, #8]
 360 002a 0B43     		orrs	r3, r3, r1
 361 002c E168     		ldr	r1, [r4, #12]
 362 002e 0B43     		orrs	r3, r3, r1
 363 0030 2169     		ldr	r1, [r4, #16]
 364 0032 0B43     		orrs	r3, r3, r1
 365 0034 6169     		ldr	r1, [r4, #20]
 366 0036 0B43     		orrs	r3, r3, r1
 367 0038 A169     		ldr	r1, [r4, #24]
 368 003a 01F40071 		and	r1, r1, #512
 369 003e 0B43     		orrs	r3, r3, r1
 370 0040 E169     		ldr	r1, [r4, #28]
 371 0042 0B43     		orrs	r3, r3, r1
 372 0044 216A     		ldr	r1, [r4, #32]
 373 0046 0B43     		orrs	r3, r3, r1
 374 0048 A16A     		ldr	r1, [r4, #40]
 375 004a 0B43     		orrs	r3, r3, r1
 376 004c 1360     		str	r3, [r2]
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 377              		.loc 1 312 0
 378 004e 2268     		ldr	r2, [r4]
 379 0050 638B     		ldrh	r3, [r4, #26]
 380 0052 03F00403 		and	r3, r3, #4
 381 0056 616A     		ldr	r1, [r4, #36]
 382 0058 0B43     		orrs	r3, r3, r1
 383 005a 5360     		str	r3, [r2, #4]
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 384              		.loc 1 325 0
 385 005c 2268     		ldr	r2, [r4]
 386 005e D369     		ldr	r3, [r2, #28]
 387 0060 23F40063 		bic	r3, r3, #2048
 388 0064 D361     		str	r3, [r2, #28]
ARM GAS  /tmp/ccrAKW0M.s 			page 65


 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 389              		.loc 1 328 0
 390 0066 0020     		movs	r0, #0
 391 0068 6065     		str	r0, [r4, #84]
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 392              		.loc 1 329 0
 393 006a 0123     		movs	r3, #1
 394 006c 84F85130 		strb	r3, [r4, #81]
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 395              		.loc 1 331 0
 396 0070 10BD     		pop	{r4, pc}
 397              	.LVL13:
 398              	.L39:
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 399              		.loc 1 293 0
 400 0072 80F85030 		strb	r3, [r0, #80]
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 401              		.loc 1 296 0
 402 0076 FFF7FEFF 		bl	HAL_SPI_MspInit
 403              	.LVL14:
 404 007a CBE7     		b	.L33
 405              	.LVL15:
 406              	.L34:
 407              	.LCFI7:
 408              		.cfi_def_cfa_offset 0
 409              		.cfi_restore 4
 410              		.cfi_restore 14
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 411              		.loc 1 266 0
 412 007c 0120     		movs	r0, #1
 413              	.LVL16:
 414 007e 7047     		bx	lr
 415              		.cfi_endproc
 416              	.LFE64:
 418              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 419              		.align	1
 420              		.weak	HAL_SPI_MspDeInit
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu softvfp
 426              	HAL_SPI_MspDeInit:
 427              	.LFB67:
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 428              		.loc 1 390 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433              	.LVL17:
 434 0000 7047     		bx	lr
 435              		.cfi_endproc
 436              	.LFE67:
 438              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 439              		.align	1
 440              		.global	HAL_SPI_DeInit
 441              		.syntax unified
ARM GAS  /tmp/ccrAKW0M.s 			page 66


 442              		.thumb
 443              		.thumb_func
 444              		.fpu softvfp
 446              	HAL_SPI_DeInit:
 447              	.LFB65:
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 448              		.loc 1 341 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              	.LVL18:
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 453              		.loc 1 343 0
 454 0000 90B1     		cbz	r0, .L43
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 455              		.loc 1 341 0
 456 0002 10B5     		push	{r4, lr}
 457              	.LCFI8:
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 4, -8
 460              		.cfi_offset 14, -4
 461 0004 0446     		mov	r4, r0
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 462              		.loc 1 351 0
 463 0006 0223     		movs	r3, #2
 464 0008 80F85130 		strb	r3, [r0, #81]
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 465              		.loc 1 354 0
 466 000c 0268     		ldr	r2, [r0]
 467 000e 1368     		ldr	r3, [r2]
 468 0010 23F04003 		bic	r3, r3, #64
 469 0014 1360     		str	r3, [r2]
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 470              		.loc 1 357 0
 471 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 472              	.LVL19:
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 473              		.loc 1 359 0
 474 001a 0020     		movs	r0, #0
 475 001c 6065     		str	r0, [r4, #84]
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 476              		.loc 1 360 0
 477 001e 84F85100 		strb	r0, [r4, #81]
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 478              		.loc 1 363 0
 479 0022 84F85000 		strb	r0, [r4, #80]
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 480              		.loc 1 365 0
 481 0026 10BD     		pop	{r4, pc}
 482              	.LVL20:
 483              	.L43:
 484              	.LCFI9:
 485              		.cfi_def_cfa_offset 0
 486              		.cfi_restore 4
 487              		.cfi_restore 14
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 488              		.loc 1 345 0
ARM GAS  /tmp/ccrAKW0M.s 			page 67


 489 0028 0120     		movs	r0, #1
 490              	.LVL21:
 491 002a 7047     		bx	lr
 492              		.cfi_endproc
 493              	.LFE65:
 495              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 496              		.align	1
 497              		.global	HAL_SPI_Transmit
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu softvfp
 503              	HAL_SPI_Transmit:
 504              	.LFB68:
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
 505              		.loc 1 445 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 8
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              	.LVL22:
 510 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 511              	.LCFI10:
 512              		.cfi_def_cfa_offset 24
 513              		.cfi_offset 4, -24
 514              		.cfi_offset 5, -20
 515              		.cfi_offset 6, -16
 516              		.cfi_offset 7, -12
 517              		.cfi_offset 8, -8
 518              		.cfi_offset 14, -4
 519 0004 84B0     		sub	sp, sp, #16
 520              	.LCFI11:
 521              		.cfi_def_cfa_offset 40
 522 0006 1D46     		mov	r5, r3
 523              	.LVL23:
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 524              		.loc 1 453 0
 525 0008 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 526              	.LVL24:
 527 000c 012B     		cmp	r3, #1
 528 000e 04D1     		bne	.L80
 529 0010 0223     		movs	r3, #2
 530              	.LVL25:
 531              	.L49:
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 532              		.loc 1 603 0
 533 0012 1846     		mov	r0, r3
 534 0014 04B0     		add	sp, sp, #16
 535              	.LCFI12:
 536              		.cfi_remember_state
 537              		.cfi_def_cfa_offset 24
 538              		@ sp needed
 539 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 540              	.LVL26:
 541              	.L80:
 542              	.LCFI13:
 543              		.cfi_restore_state
 544 001a 0446     		mov	r4, r0
ARM GAS  /tmp/ccrAKW0M.s 			page 68


 545 001c 0E46     		mov	r6, r1
 546 001e 9046     		mov	r8, r2
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 547              		.loc 1 453 0 discriminator 2
 548 0020 0123     		movs	r3, #1
 549 0022 80F85030 		strb	r3, [r0, #80]
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 550              		.loc 1 456 0 discriminator 2
 551 0026 FFF7FEFF 		bl	HAL_GetTick
 552              	.LVL27:
 553 002a 0746     		mov	r7, r0
 554              	.LVL28:
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 555              		.loc 1 458 0 discriminator 2
 556 002c 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 557 0030 DBB2     		uxtb	r3, r3
 558 0032 012B     		cmp	r3, #1
 559 0034 07D0     		beq	.L81
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 560              		.loc 1 460 0
 561 0036 0223     		movs	r3, #2
 562              	.LVL29:
 563              	.L50:
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
 564              		.loc 1 599 0
 565 0038 0122     		movs	r2, #1
 566 003a 84F85120 		strb	r2, [r4, #81]
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 567              		.loc 1 601 0
 568 003e 0022     		movs	r2, #0
 569 0040 84F85020 		strb	r2, [r4, #80]
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 570              		.loc 1 602 0
 571 0044 E5E7     		b	.L49
 572              	.LVL30:
 573              	.L81:
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 574              		.loc 1 464 0
 575 0046 002E     		cmp	r6, #0
 576 0048 00F0A480 		beq	.L71
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 577              		.loc 1 464 0 is_stmt 0 discriminator 1
 578 004c B8F1000F 		cmp	r8, #0
 579 0050 00F0A280 		beq	.L72
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 580              		.loc 1 471 0 is_stmt 1
 581 0054 0323     		movs	r3, #3
 582 0056 84F85130 		strb	r3, [r4, #81]
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 583              		.loc 1 472 0
 584 005a 0023     		movs	r3, #0
 585 005c 6365     		str	r3, [r4, #84]
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 586              		.loc 1 473 0
 587 005e 2663     		str	r6, [r4, #48]
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 588              		.loc 1 474 0
ARM GAS  /tmp/ccrAKW0M.s 			page 69


 589 0060 A4F83480 		strh	r8, [r4, #52]	@ movhi
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 590              		.loc 1 475 0
 591 0064 A4F83680 		strh	r8, [r4, #54]	@ movhi
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 592              		.loc 1 478 0
 593 0068 A363     		str	r3, [r4, #56]
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 594              		.loc 1 479 0
 595 006a A387     		strh	r3, [r4, #60]	@ movhi
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 596              		.loc 1 480 0
 597 006c E387     		strh	r3, [r4, #62]	@ movhi
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 598              		.loc 1 481 0
 599 006e 6364     		str	r3, [r4, #68]
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 600              		.loc 1 482 0
 601 0070 2364     		str	r3, [r4, #64]
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 602              		.loc 1 485 0
 603 0072 A368     		ldr	r3, [r4, #8]
 604 0074 B3F5004F 		cmp	r3, #32768
 605 0078 1CD0     		beq	.L82
 606              	.L51:
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 607              		.loc 1 499 0
 608 007a 2368     		ldr	r3, [r4]
 609 007c 1A68     		ldr	r2, [r3]
 610 007e 12F0400F 		tst	r2, #64
 611 0082 03D1     		bne	.L52
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 612              		.loc 1 502 0
 613 0084 1A68     		ldr	r2, [r3]
 614 0086 42F04002 		orr	r2, r2, #64
 615 008a 1A60     		str	r2, [r3]
 616              	.L52:
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 617              		.loc 1 506 0
 618 008c E368     		ldr	r3, [r4, #12]
 619 008e B3F5006F 		cmp	r3, #2048
 620 0092 15D0     		beq	.L83
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 621              		.loc 1 538 0
 622 0094 6368     		ldr	r3, [r4, #4]
 623 0096 1BB1     		cbz	r3, .L61
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 624              		.loc 1 538 0 is_stmt 0 discriminator 1
 625 0098 E38E     		ldrh	r3, [r4, #54]
 626 009a 9BB2     		uxth	r3, r3
 627 009c 012B     		cmp	r3, #1
 628 009e 44D1     		bne	.L63
 629              	.L61:
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       pData += sizeof(uint8_t);
 630              		.loc 1 540 0 is_stmt 1
 631 00a0 2368     		ldr	r3, [r4]
 632 00a2 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
ARM GAS  /tmp/ccrAKW0M.s 			page 70


 633              	.LVL31:
 634 00a6 1A73     		strb	r2, [r3, #12]
 635              	.LVL32:
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 636              		.loc 1 542 0
 637 00a8 E38E     		ldrh	r3, [r4, #54]
 638 00aa 9BB2     		uxth	r3, r3
 639 00ac 013B     		subs	r3, r3, #1
 640 00ae 9BB2     		uxth	r3, r3
 641 00b0 E386     		strh	r3, [r4, #54]	@ movhi
 642 00b2 3AE0     		b	.L63
 643              	.L82:
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 644              		.loc 1 487 0
 645 00b4 2268     		ldr	r2, [r4]
 646 00b6 1368     		ldr	r3, [r2]
 647 00b8 43F48043 		orr	r3, r3, #16384
 648 00bc 1360     		str	r3, [r2]
 649 00be DCE7     		b	.L51
 650              	.L83:
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 651              		.loc 1 508 0
 652 00c0 6368     		ldr	r3, [r4, #4]
 653 00c2 1BB1     		cbz	r3, .L54
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 654              		.loc 1 508 0 is_stmt 0 discriminator 1
 655 00c4 E38E     		ldrh	r3, [r4, #54]
 656 00c6 9BB2     		uxth	r3, r3
 657 00c8 012B     		cmp	r3, #1
 658 00ca 13D1     		bne	.L56
 659              	.L54:
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       pData += sizeof(uint16_t);
 660              		.loc 1 510 0 is_stmt 1
 661 00cc 2368     		ldr	r3, [r4]
 662 00ce 36F8022B 		ldrh	r2, [r6], #2
 663              	.LVL33:
 664 00d2 DA60     		str	r2, [r3, #12]
 665              	.LVL34:
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 666              		.loc 1 512 0
 667 00d4 E38E     		ldrh	r3, [r4, #54]
 668 00d6 9BB2     		uxth	r3, r3
 669 00d8 013B     		subs	r3, r3, #1
 670 00da 9BB2     		uxth	r3, r3
 671 00dc E386     		strh	r3, [r4, #54]	@ movhi
 672 00de 09E0     		b	.L56
 673              	.LVL35:
 674              	.L57:
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 675              		.loc 1 527 0
 676 00e0 002D     		cmp	r5, #0
 677 00e2 5BD0     		beq	.L73
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 678              		.loc 1 527 0 is_stmt 0 discriminator 1
 679 00e4 B5F1FF3F 		cmp	r5, #-1
 680 00e8 04D0     		beq	.L56
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
ARM GAS  /tmp/ccrAKW0M.s 			page 71


 681              		.loc 1 527 0 discriminator 2
 682 00ea FFF7FEFF 		bl	HAL_GetTick
 683              	.LVL36:
 684 00ee C01B     		subs	r0, r0, r7
 685 00f0 8542     		cmp	r5, r0
 686 00f2 55D9     		bls	.L74
 687              	.L56:
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 688              		.loc 1 515 0 is_stmt 1
 689 00f4 E38E     		ldrh	r3, [r4, #54]
 690 00f6 9BB2     		uxth	r3, r3
 691 00f8 43B3     		cbz	r3, .L60
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 692              		.loc 1 518 0
 693 00fa 2368     		ldr	r3, [r4]
 694 00fc 9A68     		ldr	r2, [r3, #8]
 695 00fe 12F0020F 		tst	r2, #2
 696 0102 EDD0     		beq	.L57
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           pData += sizeof(uint16_t);
 697              		.loc 1 520 0
 698 0104 36F8022B 		ldrh	r2, [r6], #2
 699              	.LVL37:
 700 0108 DA60     		str	r2, [r3, #12]
 701              	.LVL38:
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 702              		.loc 1 522 0
 703 010a E38E     		ldrh	r3, [r4, #54]
 704 010c 9BB2     		uxth	r3, r3
 705 010e 013B     		subs	r3, r3, #1
 706 0110 9BB2     		uxth	r3, r3
 707 0112 E386     		strh	r3, [r4, #54]	@ movhi
 708 0114 EEE7     		b	.L56
 709              	.L64:
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 710              		.loc 1 556 0
 711 0116 002D     		cmp	r5, #0
 712 0118 44D0     		beq	.L75
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 713              		.loc 1 556 0 is_stmt 0 discriminator 1
 714 011a B5F1FF3F 		cmp	r5, #-1
 715 011e 04D0     		beq	.L63
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 716              		.loc 1 556 0 discriminator 2
 717 0120 FFF7FEFF 		bl	HAL_GetTick
 718              	.LVL39:
 719 0124 C01B     		subs	r0, r0, r7
 720 0126 8542     		cmp	r5, r0
 721 0128 3ED9     		bls	.L76
 722              	.L63:
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 723              		.loc 1 544 0 is_stmt 1
 724 012a E38E     		ldrh	r3, [r4, #54]
 725 012c 9BB2     		uxth	r3, r3
 726 012e 6BB1     		cbz	r3, .L60
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 727              		.loc 1 547 0
 728 0130 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccrAKW0M.s 			page 72


 729 0132 9A68     		ldr	r2, [r3, #8]
 730 0134 12F0020F 		tst	r2, #2
 731 0138 EDD0     		beq	.L64
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         pData += sizeof(uint8_t);
 732              		.loc 1 549 0
 733 013a 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 734              	.LVL40:
 735 013e 1A73     		strb	r2, [r3, #12]
 736              	.LVL41:
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 737              		.loc 1 551 0
 738 0140 E38E     		ldrh	r3, [r4, #54]
 739 0142 9BB2     		uxth	r3, r3
 740 0144 013B     		subs	r3, r3, #1
 741 0146 9BB2     		uxth	r3, r3
 742 0148 E386     		strh	r3, [r4, #54]	@ movhi
 743 014a EEE7     		b	.L63
 744              	.L60:
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 745              		.loc 1 566 0
 746 014c 0097     		str	r7, [sp]
 747 014e 2B46     		mov	r3, r5
 748 0150 0122     		movs	r2, #1
 749 0152 0221     		movs	r1, #2
 750 0154 2046     		mov	r0, r4
 751 0156 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 752              	.LVL42:
 753 015a 08B1     		cbz	r0, .L84
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 754              		.loc 1 568 0
 755 015c 0323     		movs	r3, #3
 756 015e 6BE7     		b	.L50
 757              	.L84:
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 758              		.loc 1 573 0
 759 0160 3A46     		mov	r2, r7
 760 0162 2946     		mov	r1, r5
 761 0164 2046     		mov	r0, r4
 762 0166 FFF7FEFF 		bl	SPI_CheckFlag_BSY
 763              	.LVL43:
 764 016a 0346     		mov	r3, r0
 765 016c 18B1     		cbz	r0, .L67
 766              	.LVL44:
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 767              		.loc 1 576 0
 768 016e 2023     		movs	r3, #32
 769 0170 6365     		str	r3, [r4, #84]
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 770              		.loc 1 575 0
 771 0172 0123     		movs	r3, #1
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 772              		.loc 1 577 0
 773 0174 60E7     		b	.L50
 774              	.LVL45:
 775              	.L67:
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 776              		.loc 1 581 0
ARM GAS  /tmp/ccrAKW0M.s 			page 73


 777 0176 A268     		ldr	r2, [r4, #8]
 778 0178 32B9     		cbnz	r2, .L68
 779              	.LBB2:
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 780              		.loc 1 583 0
 781 017a 0392     		str	r2, [sp, #12]
 782 017c 2268     		ldr	r2, [r4]
 783 017e D168     		ldr	r1, [r2, #12]
 784 0180 0391     		str	r1, [sp, #12]
 785 0182 9268     		ldr	r2, [r2, #8]
 786 0184 0392     		str	r2, [sp, #12]
 787 0186 039A     		ldr	r2, [sp, #12]
 788              	.L68:
 789              	.LBE2:
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 790              		.loc 1 593 0
 791 0188 626D     		ldr	r2, [r4, #84]
 792 018a 002A     		cmp	r2, #0
 793 018c 3FF454AF 		beq	.L50
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 794              		.loc 1 595 0
 795 0190 0123     		movs	r3, #1
 796 0192 51E7     		b	.L50
 797              	.LVL46:
 798              	.L71:
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 799              		.loc 1 466 0
 800 0194 0123     		movs	r3, #1
 801 0196 4FE7     		b	.L50
 802              	.L72:
 803 0198 0123     		movs	r3, #1
 804 019a 4DE7     		b	.L50
 805              	.LVL47:
 806              	.L73:
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 807              		.loc 1 529 0
 808 019c 0323     		movs	r3, #3
 809 019e 4BE7     		b	.L50
 810              	.L74:
 811 01a0 0323     		movs	r3, #3
 812 01a2 49E7     		b	.L50
 813              	.L75:
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 814              		.loc 1 558 0
 815 01a4 0323     		movs	r3, #3
 816 01a6 47E7     		b	.L50
 817              	.L76:
 818 01a8 0323     		movs	r3, #3
 819 01aa 45E7     		b	.L50
 820              		.cfi_endproc
 821              	.LFE68:
 823              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 824              		.align	1
 825              		.global	HAL_SPI_TransmitReceive
 826              		.syntax unified
 827              		.thumb
 828              		.thumb_func
ARM GAS  /tmp/ccrAKW0M.s 			page 74


 829              		.fpu softvfp
 831              	HAL_SPI_TransmitReceive:
 832              	.LFB70:
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tmp = 0U, tmp1 = 0U;
 833              		.loc 1 822 0
 834              		.cfi_startproc
 835              		@ args = 4, pretend = 0, frame = 8
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              	.LVL48:
 838 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 839              	.LCFI14:
 840              		.cfi_def_cfa_offset 28
 841              		.cfi_offset 4, -28
 842              		.cfi_offset 5, -24
 843              		.cfi_offset 6, -20
 844              		.cfi_offset 7, -16
 845              		.cfi_offset 8, -12
 846              		.cfi_offset 9, -8
 847              		.cfi_offset 14, -4
 848 0004 85B0     		sub	sp, sp, #20
 849              	.LCFI15:
 850              		.cfi_def_cfa_offset 48
 851 0006 9846     		mov	r8, r3
 852 0008 0C9D     		ldr	r5, [sp, #48]
 853              	.LVL49:
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 854              		.loc 1 836 0
 855 000a 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 856              	.LVL50:
 857 000e 012B     		cmp	r3, #1
 858 0010 04D1     		bne	.L119
 859 0012 0223     		movs	r3, #2
 860              	.LVL51:
 861              	.L86:
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 862              		.loc 1 1043 0
 863 0014 1846     		mov	r0, r3
 864 0016 05B0     		add	sp, sp, #20
 865              	.LCFI16:
 866              		.cfi_remember_state
 867              		.cfi_def_cfa_offset 28
 868              		@ sp needed
 869 0018 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 870              	.LVL52:
 871              	.L119:
 872              	.LCFI17:
 873              		.cfi_restore_state
 874 001c 0446     		mov	r4, r0
 875 001e 0F46     		mov	r7, r1
 876 0020 1646     		mov	r6, r2
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 877              		.loc 1 836 0 discriminator 2
 878 0022 0123     		movs	r3, #1
 879 0024 80F85030 		strb	r3, [r0, #80]
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
 880              		.loc 1 839 0 discriminator 2
 881 0028 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccrAKW0M.s 			page 75


 882              	.LVL53:
 883 002c 8146     		mov	r9, r0
 884              	.LVL54:
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp1 = hspi->Init.Mode;
 885              		.loc 1 841 0 discriminator 2
 886 002e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 887 0032 DBB2     		uxtb	r3, r3
 888              	.LVL55:
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
 889              		.loc 1 842 0 discriminator 2
 890 0034 6268     		ldr	r2, [r4, #4]
 891              	.LVL56:
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL_SPI
 892              		.loc 1 844 0 discriminator 2
 893 0036 012B     		cmp	r3, #1
 894 0038 12D0     		beq	.L87
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL_SPI
 895              		.loc 1 844 0 is_stmt 0 discriminator 1
 896 003a B2F5827F 		cmp	r2, #260
 897 003e 07D0     		beq	.L120
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 898              		.loc 1 847 0 is_stmt 1
 899 0040 0223     		movs	r3, #2
 900              	.LVL57:
 901              	.L88:
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 902              		.loc 1 1040 0
 903 0042 0122     		movs	r2, #1
 904 0044 84F85120 		strb	r2, [r4, #81]
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 905              		.loc 1 1041 0
 906 0048 0022     		movs	r2, #0
 907 004a 84F85020 		strb	r2, [r4, #80]
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 908              		.loc 1 1042 0
 909 004e E1E7     		b	.L86
 910              	.LVL58:
 911              	.L120:
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 912              		.loc 1 845 0
 913 0050 A268     		ldr	r2, [r4, #8]
 914              	.LVL59:
 915 0052 002A     		cmp	r2, #0
 916 0054 40F0E980 		bne	.L110
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 917              		.loc 1 845 0 is_stmt 0 discriminator 1
 918 0058 042B     		cmp	r3, #4
 919 005a 01D0     		beq	.L87
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 920              		.loc 1 847 0 is_stmt 1
 921 005c 0223     		movs	r3, #2
 922              	.LVL60:
 923 005e F0E7     		b	.L88
 924              	.LVL61:
 925              	.L87:
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 926              		.loc 1 851 0
ARM GAS  /tmp/ccrAKW0M.s 			page 76


 927 0060 002F     		cmp	r7, #0
 928 0062 00F0E480 		beq	.L112
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 929              		.loc 1 851 0 is_stmt 0 discriminator 1
 930 0066 002E     		cmp	r6, #0
 931 0068 00F0E380 		beq	.L113
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 932              		.loc 1 851 0 discriminator 2
 933 006c B8F1000F 		cmp	r8, #0
 934 0070 00F0E180 		beq	.L114
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 935              		.loc 1 858 0 is_stmt 1
 936 0074 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 937              	.LVL62:
 938 0078 DBB2     		uxtb	r3, r3
 939 007a 012B     		cmp	r3, #1
 940 007c 2CD0     		beq	.L121
 941              	.L89:
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 942              		.loc 1 864 0
 943 007e 0023     		movs	r3, #0
 944 0080 6365     		str	r3, [r4, #84]
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 945              		.loc 1 865 0
 946 0082 A663     		str	r6, [r4, #56]
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 947              		.loc 1 866 0
 948 0084 A4F83E80 		strh	r8, [r4, #62]	@ movhi
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 949              		.loc 1 867 0
 950 0088 A4F83C80 		strh	r8, [r4, #60]	@ movhi
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 951              		.loc 1 868 0
 952 008c 2763     		str	r7, [r4, #48]
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 953              		.loc 1 869 0
 954 008e A4F83680 		strh	r8, [r4, #54]	@ movhi
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 955              		.loc 1 870 0
 956 0092 A4F83480 		strh	r8, [r4, #52]	@ movhi
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 957              		.loc 1 873 0
 958 0096 2364     		str	r3, [r4, #64]
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 959              		.loc 1 874 0
 960 0098 6364     		str	r3, [r4, #68]
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 961              		.loc 1 885 0
 962 009a 2368     		ldr	r3, [r4]
 963 009c 1A68     		ldr	r2, [r3]
 964 009e 12F0400F 		tst	r2, #64
 965 00a2 03D1     		bne	.L90
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 966              		.loc 1 888 0
 967 00a4 1A68     		ldr	r2, [r3]
 968 00a6 42F04002 		orr	r2, r2, #64
 969 00aa 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccrAKW0M.s 			page 77


 970              	.LVL63:
 971              	.L90:
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 972              		.loc 1 892 0
 973 00ac E368     		ldr	r3, [r4, #12]
 974 00ae B3F5006F 		cmp	r3, #2048
 975 00b2 15D0     		beq	.L122
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 976              		.loc 1 939 0
 977 00b4 6368     		ldr	r3, [r4, #4]
 978 00b6 1BB1     		cbz	r3, .L100
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 979              		.loc 1 939 0 is_stmt 0 discriminator 1
 980 00b8 E38E     		ldrh	r3, [r4, #54]
 981 00ba 9BB2     		uxth	r3, r3
 982 00bc 012B     		cmp	r3, #1
 983 00be 08D1     		bne	.L101
 984              	.L100:
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       pTxData += sizeof(uint8_t);
 985              		.loc 1 941 0 is_stmt 1
 986 00c0 2368     		ldr	r3, [r4]
 987 00c2 17F8012B 		ldrb	r2, [r7], #1	@ zero_extendqisi2
 988              	.LVL64:
 989 00c6 1A73     		strb	r2, [r3, #12]
 990              	.LVL65:
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 991              		.loc 1 943 0
 992 00c8 E38E     		ldrh	r3, [r4, #54]
 993 00ca 9BB2     		uxth	r3, r3
 994 00cc 013B     		subs	r3, r3, #1
 995 00ce 9BB2     		uxth	r3, r3
 996 00d0 E386     		strh	r3, [r4, #54]	@ movhi
 997              	.L101:
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 998              		.loc 1 970 0
 999 00d2 4FF00108 		mov	r8, #1
 1000 00d6 69E0     		b	.L102
 1001              	.LVL66:
 1002              	.L121:
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1003              		.loc 1 860 0
 1004 00d8 0523     		movs	r3, #5
 1005 00da 84F85130 		strb	r3, [r4, #81]
 1006 00de CEE7     		b	.L89
 1007              	.LVL67:
 1008              	.L122:
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1009              		.loc 1 894 0
 1010 00e0 6368     		ldr	r3, [r4, #4]
 1011 00e2 1BB1     		cbz	r3, .L92
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1012              		.loc 1 894 0 is_stmt 0 discriminator 1
 1013 00e4 E38E     		ldrh	r3, [r4, #54]
 1014 00e6 9BB2     		uxth	r3, r3
 1015 00e8 012B     		cmp	r3, #1
 1016 00ea 08D1     		bne	.L93
 1017              	.L92:
ARM GAS  /tmp/ccrAKW0M.s 			page 78


 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       pTxData += sizeof(uint16_t);
 1018              		.loc 1 896 0 is_stmt 1
 1019 00ec 2368     		ldr	r3, [r4]
 1020 00ee 37F8022B 		ldrh	r2, [r7], #2
 1021              	.LVL68:
 1022 00f2 DA60     		str	r2, [r3, #12]
 1023              	.LVL69:
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 1024              		.loc 1 898 0
 1025 00f4 E38E     		ldrh	r3, [r4, #54]
 1026 00f6 9BB2     		uxth	r3, r3
 1027 00f8 013B     		subs	r3, r3, #1
 1028 00fa 9BB2     		uxth	r3, r3
 1029 00fc E386     		strh	r3, [r4, #54]	@ movhi
 1030              	.L93:
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1031              		.loc 1 927 0
 1032 00fe 4FF00108 		mov	r8, #1
 1033 0102 1AE0     		b	.L94
 1034              	.LVL70:
 1035              	.L95:
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1036              		.loc 1 921 0
 1037 0104 E38F     		ldrh	r3, [r4, #62]
 1038 0106 9BB2     		uxth	r3, r3
 1039 0108 73B1     		cbz	r3, .L96
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1040              		.loc 1 921 0 is_stmt 0 discriminator 1
 1041 010a 2368     		ldr	r3, [r4]
 1042 010c 9A68     		ldr	r2, [r3, #8]
 1043 010e 12F0010F 		tst	r2, #1
 1044 0112 09D0     		beq	.L96
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         pRxData += sizeof(uint16_t);
 1045              		.loc 1 923 0 is_stmt 1
 1046 0114 DB68     		ldr	r3, [r3, #12]
 1047 0116 26F8023B 		strh	r3, [r6], #2	@ movhi
 1048              	.LVL71:
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */ 
 1049              		.loc 1 925 0
 1050 011a E38F     		ldrh	r3, [r4, #62]
 1051 011c 9BB2     		uxth	r3, r3
 1052 011e 013B     		subs	r3, r3, #1
 1053 0120 9BB2     		uxth	r3, r3
 1054 0122 E387     		strh	r3, [r4, #62]	@ movhi
 1055              	.LVL72:
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1056              		.loc 1 927 0
 1057 0124 4FF00108 		mov	r8, #1
 1058              	.LVL73:
 1059              	.L96:
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1060              		.loc 1 929 0
 1061 0128 B5F1FF3F 		cmp	r5, #-1
 1062 012c 05D0     		beq	.L94
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1063              		.loc 1 929 0 is_stmt 0 discriminator 1
 1064 012e FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccrAKW0M.s 			page 79


 1065              	.LVL74:
 1066 0132 A0EB0900 		sub	r0, r0, r9
 1067 0136 8542     		cmp	r5, r0
 1068 0138 7FD9     		bls	.L115
 1069              	.LVL75:
 1070              	.L94:
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1071              		.loc 1 900 0 is_stmt 1
 1072 013a E38E     		ldrh	r3, [r4, #54]
 1073 013c 9BB2     		uxth	r3, r3
 1074 013e 1BB9     		cbnz	r3, .L98
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1075              		.loc 1 900 0 is_stmt 0 discriminator 1
 1076 0140 E38F     		ldrh	r3, [r4, #62]
 1077 0142 9BB2     		uxth	r3, r3
 1078 0144 002B     		cmp	r3, #0
 1079 0146 4ED0     		beq	.L99
 1080              	.L98:
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1081              		.loc 1 903 0 is_stmt 1
 1082 0148 B8F1000F 		cmp	r8, #0
 1083 014c DAD0     		beq	.L95
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1084              		.loc 1 903 0 is_stmt 0 discriminator 1
 1085 014e E38E     		ldrh	r3, [r4, #54]
 1086 0150 9BB2     		uxth	r3, r3
 1087 0152 002B     		cmp	r3, #0
 1088 0154 D6D0     		beq	.L95
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1089              		.loc 1 903 0 discriminator 2
 1090 0156 2368     		ldr	r3, [r4]
 1091 0158 9A68     		ldr	r2, [r3, #8]
 1092 015a 12F0020F 		tst	r2, #2
 1093 015e D1D0     		beq	.L95
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         pTxData += sizeof(uint16_t);
 1094              		.loc 1 905 0 is_stmt 1
 1095 0160 37F8022B 		ldrh	r2, [r7], #2
 1096              	.LVL76:
 1097 0164 DA60     		str	r2, [r3, #12]
 1098              	.LVL77:
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */ 
 1099              		.loc 1 907 0
 1100 0166 E38E     		ldrh	r3, [r4, #54]
 1101 0168 9BB2     		uxth	r3, r3
 1102 016a 013B     		subs	r3, r3, #1
 1103 016c 9BB2     		uxth	r3, r3
 1104 016e E386     		strh	r3, [r4, #54]	@ movhi
 1105              	.LVL78:
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1106              		.loc 1 909 0
 1107 0170 4FF00008 		mov	r8, #0
 1108 0174 C6E7     		b	.L95
 1109              	.LVL79:
 1110              	.L103:
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1111              		.loc 1 965 0
 1112 0176 E38F     		ldrh	r3, [r4, #62]
ARM GAS  /tmp/ccrAKW0M.s 			page 80


 1113 0178 9BB2     		uxth	r3, r3
 1114 017a 73B1     		cbz	r3, .L104
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1115              		.loc 1 965 0 is_stmt 0 discriminator 1
 1116 017c 2368     		ldr	r3, [r4]
 1117 017e 9A68     		ldr	r2, [r3, #8]
 1118 0180 12F0010F 		tst	r2, #1
 1119 0184 09D0     		beq	.L104
 1120              	.LVL80:
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1121              		.loc 1 967 0 is_stmt 1
 1122 0186 DB68     		ldr	r3, [r3, #12]
 1123 0188 3370     		strb	r3, [r6]
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */ 
 1124              		.loc 1 968 0
 1125 018a E38F     		ldrh	r3, [r4, #62]
 1126 018c 9BB2     		uxth	r3, r3
 1127 018e 013B     		subs	r3, r3, #1
 1128 0190 9BB2     		uxth	r3, r3
 1129 0192 E387     		strh	r3, [r4, #62]	@ movhi
 1130              	.LVL81:
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1131              		.loc 1 967 0
 1132 0194 0136     		adds	r6, r6, #1
 1133              	.LVL82:
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1134              		.loc 1 970 0
 1135 0196 4FF00108 		mov	r8, #1
 1136              	.LVL83:
 1137              	.L104:
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1138              		.loc 1 972 0
 1139 019a B5F1FF3F 		cmp	r5, #-1
 1140 019e 05D0     		beq	.L102
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1141              		.loc 1 972 0 is_stmt 0 discriminator 1
 1142 01a0 FFF7FEFF 		bl	HAL_GetTick
 1143              	.LVL84:
 1144 01a4 A0EB0900 		sub	r0, r0, r9
 1145 01a8 8542     		cmp	r5, r0
 1146 01aa 48D9     		bls	.L116
 1147              	.LVL85:
 1148              	.L102:
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1149              		.loc 1 945 0 is_stmt 1
 1150 01ac E38E     		ldrh	r3, [r4, #54]
 1151 01ae 9BB2     		uxth	r3, r3
 1152 01b0 13B9     		cbnz	r3, .L106
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1153              		.loc 1 945 0 is_stmt 0 discriminator 1
 1154 01b2 E38F     		ldrh	r3, [r4, #62]
 1155 01b4 9BB2     		uxth	r3, r3
 1156 01b6 B3B1     		cbz	r3, .L99
 1157              	.L106:
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1158              		.loc 1 948 0 is_stmt 1
 1159 01b8 B8F1000F 		cmp	r8, #0
ARM GAS  /tmp/ccrAKW0M.s 			page 81


 1160 01bc DBD0     		beq	.L103
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1161              		.loc 1 948 0 is_stmt 0 discriminator 1
 1162 01be E38E     		ldrh	r3, [r4, #54]
 1163 01c0 9BB2     		uxth	r3, r3
 1164 01c2 002B     		cmp	r3, #0
 1165 01c4 D7D0     		beq	.L103
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1166              		.loc 1 948 0 discriminator 2
 1167 01c6 2368     		ldr	r3, [r4]
 1168 01c8 9A68     		ldr	r2, [r3, #8]
 1169 01ca 12F0020F 		tst	r2, #2
 1170 01ce D2D0     		beq	.L103
 1171              	.LVL86:
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 1172              		.loc 1 950 0 is_stmt 1
 1173 01d0 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 1174 01d2 1A73     		strb	r2, [r3, #12]
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */ 
 1175              		.loc 1 951 0
 1176 01d4 E38E     		ldrh	r3, [r4, #54]
 1177 01d6 9BB2     		uxth	r3, r3
 1178 01d8 013B     		subs	r3, r3, #1
 1179 01da 9BB2     		uxth	r3, r3
 1180 01dc E386     		strh	r3, [r4, #54]	@ movhi
 1181              	.LVL87:
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 1182              		.loc 1 950 0
 1183 01de 0137     		adds	r7, r7, #1
 1184              	.LVL88:
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1185              		.loc 1 953 0
 1186 01e0 4FF00008 		mov	r8, #0
 1187 01e4 C7E7     		b	.L103
 1188              	.LVL89:
 1189              	.L99:
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1190              		.loc 1 1019 0
 1191 01e6 CDF80090 		str	r9, [sp]
 1192 01ea 2B46     		mov	r3, r5
 1193 01ec 0122     		movs	r2, #1
 1194 01ee 0221     		movs	r1, #2
 1195 01f0 2046     		mov	r0, r4
 1196 01f2 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 1197              	.LVL90:
 1198 01f6 08B1     		cbz	r0, .L123
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1199              		.loc 1 1021 0
 1200 01f8 0323     		movs	r3, #3
 1201 01fa 22E7     		b	.L88
 1202              	.L123:
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1203              		.loc 1 1026 0
 1204 01fc 4A46     		mov	r2, r9
 1205 01fe 2946     		mov	r1, r5
 1206 0200 2046     		mov	r0, r4
 1207 0202 FFF7FEFF 		bl	SPI_CheckFlag_BSY
ARM GAS  /tmp/ccrAKW0M.s 			page 82


 1208              	.LVL91:
 1209 0206 0346     		mov	r3, r0
 1210 0208 18B1     		cbz	r0, .L107
 1211              	.LVL92:
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1212              		.loc 1 1029 0
 1213 020a 2023     		movs	r3, #32
 1214 020c 6365     		str	r3, [r4, #84]
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1215              		.loc 1 1028 0
 1216 020e 0123     		movs	r3, #1
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1217              		.loc 1 1030 0
 1218 0210 17E7     		b	.L88
 1219              	.LVL93:
 1220              	.L107:
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1221              		.loc 1 1034 0
 1222 0212 A268     		ldr	r2, [r4, #8]
 1223 0214 002A     		cmp	r2, #0
 1224 0216 7FF414AF 		bne	.L88
 1225              	.LBB3:
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1226              		.loc 1 1036 0
 1227 021a 0392     		str	r2, [sp, #12]
 1228 021c 2268     		ldr	r2, [r4]
 1229 021e D168     		ldr	r1, [r2, #12]
 1230 0220 0391     		str	r1, [sp, #12]
 1231 0222 9268     		ldr	r2, [r2, #8]
 1232 0224 0392     		str	r2, [sp, #12]
 1233 0226 039A     		ldr	r2, [sp, #12]
 1234 0228 0BE7     		b	.L88
 1235              	.LVL94:
 1236              	.L110:
 1237              	.LBE3:
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1238              		.loc 1 847 0
 1239 022a 0223     		movs	r3, #2
 1240              	.LVL95:
 1241 022c 09E7     		b	.L88
 1242              	.LVL96:
 1243              	.L112:
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1244              		.loc 1 853 0
 1245 022e 0123     		movs	r3, #1
 1246              	.LVL97:
 1247 0230 07E7     		b	.L88
 1248              	.LVL98:
 1249              	.L113:
 1250 0232 0123     		movs	r3, #1
 1251              	.LVL99:
 1252 0234 05E7     		b	.L88
 1253              	.LVL100:
 1254              	.L114:
 1255 0236 0123     		movs	r3, #1
 1256              	.LVL101:
 1257 0238 03E7     		b	.L88
ARM GAS  /tmp/ccrAKW0M.s 			page 83


 1258              	.LVL102:
 1259              	.L115:
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
 1260              		.loc 1 931 0
 1261 023a 0323     		movs	r3, #3
 1262 023c 01E7     		b	.L88
 1263              	.L116:
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
 1264              		.loc 1 974 0
 1265 023e 0323     		movs	r3, #3
 1266 0240 FFE6     		b	.L88
 1267              		.cfi_endproc
 1268              	.LFE70:
 1270              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 1271              		.align	1
 1272              		.global	HAL_SPI_Receive
 1273              		.syntax unified
 1274              		.thumb
 1275              		.thumb_func
 1276              		.fpu softvfp
 1278              	HAL_SPI_Receive:
 1279              	.LFB69:
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 1280              		.loc 1 615 0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 0
 1283              		@ frame_needed = 0, uses_anonymous_args = 0
 1284              	.LVL103:
 1285 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1286              	.LCFI18:
 1287              		.cfi_def_cfa_offset 24
 1288              		.cfi_offset 4, -24
 1289              		.cfi_offset 5, -20
 1290              		.cfi_offset 6, -16
 1291              		.cfi_offset 7, -12
 1292              		.cfi_offset 8, -8
 1293              		.cfi_offset 14, -4
 1294 0004 82B0     		sub	sp, sp, #8
 1295              	.LCFI19:
 1296              		.cfi_def_cfa_offset 32
 1297 0006 0446     		mov	r4, r0
 1298 0008 0D46     		mov	r5, r1
 1299 000a 9046     		mov	r8, r2
 1300 000c 1E46     		mov	r6, r3
 1301              	.LVL104:
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1302              		.loc 1 622 0
 1303 000e 4368     		ldr	r3, [r0, #4]
 1304              	.LVL105:
 1305 0010 B3F5827F 		cmp	r3, #260
 1306 0014 07D0     		beq	.L151
 1307              	.L125:
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1308              		.loc 1 630 0
 1309 0016 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 1310 001a 012B     		cmp	r3, #1
 1311 001c 0FD1     		bne	.L152
ARM GAS  /tmp/ccrAKW0M.s 			page 84


 1312 001e 0220     		movs	r0, #2
 1313              	.LVL106:
 1314              	.L126:
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1315              		.loc 1 809 0
 1316 0020 02B0     		add	sp, sp, #8
 1317              	.LCFI20:
 1318              		.cfi_remember_state
 1319              		.cfi_def_cfa_offset 24
 1320              		@ sp needed
 1321 0022 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1322              	.LVL107:
 1323              	.L151:
 1324              	.LCFI21:
 1325              		.cfi_restore_state
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1326              		.loc 1 622 0 discriminator 1
 1327 0026 8368     		ldr	r3, [r0, #8]
 1328 0028 002B     		cmp	r3, #0
 1329 002a F4D1     		bne	.L125
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line
 1330              		.loc 1 624 0
 1331 002c 0423     		movs	r3, #4
 1332 002e 80F85130 		strb	r3, [r0, #81]
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1333              		.loc 1 626 0
 1334 0032 0096     		str	r6, [sp]
 1335 0034 1346     		mov	r3, r2
 1336 0036 0A46     		mov	r2, r1
 1337              	.LVL108:
 1338 0038 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1339              	.LVL109:
 1340 003c F0E7     		b	.L126
 1341              	.LVL110:
 1342              	.L152:
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1343              		.loc 1 630 0 discriminator 2
 1344 003e 0123     		movs	r3, #1
 1345 0040 84F85030 		strb	r3, [r4, #80]
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1346              		.loc 1 633 0 discriminator 2
 1347 0044 FFF7FEFF 		bl	HAL_GetTick
 1348              	.LVL111:
 1349 0048 0746     		mov	r7, r0
 1350              	.LVL112:
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1351              		.loc 1 635 0 discriminator 2
 1352 004a 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1353 004e DBB2     		uxtb	r3, r3
 1354 0050 012B     		cmp	r3, #1
 1355 0052 07D0     		beq	.L153
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1356              		.loc 1 637 0
 1357 0054 0220     		movs	r0, #2
 1358              	.LVL113:
 1359              	.L127:
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
ARM GAS  /tmp/ccrAKW0M.s 			page 85


 1360              		.loc 1 806 0
 1361 0056 0123     		movs	r3, #1
 1362 0058 84F85130 		strb	r3, [r4, #81]
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 1363              		.loc 1 807 0
 1364 005c 0023     		movs	r3, #0
 1365 005e 84F85030 		strb	r3, [r4, #80]
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1366              		.loc 1 808 0
 1367 0062 DDE7     		b	.L126
 1368              	.LVL114:
 1369              	.L153:
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1370              		.loc 1 641 0
 1371 0064 002D     		cmp	r5, #0
 1372 0066 72D0     		beq	.L143
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1373              		.loc 1 641 0 is_stmt 0 discriminator 1
 1374 0068 B8F1000F 		cmp	r8, #0
 1375 006c 71D0     		beq	.L144
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1376              		.loc 1 648 0 is_stmt 1
 1377 006e 0423     		movs	r3, #4
 1378 0070 84F85130 		strb	r3, [r4, #81]
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 1379              		.loc 1 649 0
 1380 0074 0023     		movs	r3, #0
 1381 0076 6365     		str	r3, [r4, #84]
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1382              		.loc 1 650 0
 1383 0078 A563     		str	r5, [r4, #56]
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1384              		.loc 1 651 0
 1385 007a A4F83C80 		strh	r8, [r4, #60]	@ movhi
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1386              		.loc 1 652 0
 1387 007e A4F83E80 		strh	r8, [r4, #62]	@ movhi
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 1388              		.loc 1 655 0
 1389 0082 2363     		str	r3, [r4, #48]
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 1390              		.loc 1 656 0
 1391 0084 A386     		strh	r3, [r4, #52]	@ movhi
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1392              		.loc 1 657 0
 1393 0086 E386     		strh	r3, [r4, #54]	@ movhi
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1394              		.loc 1 658 0
 1395 0088 2364     		str	r3, [r4, #64]
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1396              		.loc 1 659 0
 1397 008a 6364     		str	r3, [r4, #68]
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1398              		.loc 1 672 0
 1399 008c A368     		ldr	r3, [r4, #8]
 1400 008e B3F5004F 		cmp	r3, #32768
 1401 0092 0BD0     		beq	.L154
ARM GAS  /tmp/ccrAKW0M.s 			page 86


 1402              	.L128:
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1403              		.loc 1 678 0
 1404 0094 2368     		ldr	r3, [r4]
 1405 0096 1A68     		ldr	r2, [r3]
 1406 0098 12F0400F 		tst	r2, #64
 1407 009c 03D1     		bne	.L129
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1408              		.loc 1 681 0
 1409 009e 1A68     		ldr	r2, [r3]
 1410 00a0 42F04002 		orr	r2, r2, #64
 1411 00a4 1A60     		str	r2, [r3]
 1412              	.L129:
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1413              		.loc 1 685 0
 1414 00a6 E368     		ldr	r3, [r4, #12]
 1415 00a8 83B1     		cbz	r3, .L130
 1416 00aa 2AE0     		b	.L131
 1417              	.L154:
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1418              		.loc 1 674 0
 1419 00ac 2268     		ldr	r2, [r4]
 1420 00ae 1368     		ldr	r3, [r2]
 1421 00b0 23F48043 		bic	r3, r3, #16384
 1422 00b4 1360     		str	r3, [r2]
 1423 00b6 EDE7     		b	.L128
 1424              	.LVL115:
 1425              	.L132:
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1426              		.loc 1 701 0
 1427 00b8 002E     		cmp	r6, #0
 1428 00ba 4CD0     		beq	.L145
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1429              		.loc 1 701 0 is_stmt 0 discriminator 1
 1430 00bc B6F1FF3F 		cmp	r6, #-1
 1431 00c0 04D0     		beq	.L130
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1432              		.loc 1 701 0 discriminator 2
 1433 00c2 FFF7FEFF 		bl	HAL_GetTick
 1434              	.LVL116:
 1435 00c6 C01B     		subs	r0, r0, r7
 1436 00c8 8642     		cmp	r6, r0
 1437 00ca 46D9     		bls	.L146
 1438              	.L130:
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1439              		.loc 1 688 0 is_stmt 1
 1440 00cc E38F     		ldrh	r3, [r4, #62]
 1441 00ce 9BB2     		uxth	r3, r3
 1442 00d0 43B3     		cbz	r3, .L135
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1443              		.loc 1 691 0
 1444 00d2 2368     		ldr	r3, [r4]
 1445 00d4 9A68     		ldr	r2, [r3, #8]
 1446 00d6 12F0010F 		tst	r2, #1
 1447 00da EDD0     		beq	.L132
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         pData += sizeof(uint8_t);
 1448              		.loc 1 694 0
ARM GAS  /tmp/ccrAKW0M.s 			page 87


 1449 00dc 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1450 00de 05F8013B 		strb	r3, [r5], #1
 1451              	.LVL117:
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1452              		.loc 1 696 0
 1453 00e2 E38F     		ldrh	r3, [r4, #62]
 1454 00e4 9BB2     		uxth	r3, r3
 1455 00e6 013B     		subs	r3, r3, #1
 1456 00e8 9BB2     		uxth	r3, r3
 1457 00ea E387     		strh	r3, [r4, #62]	@ movhi
 1458 00ec EEE7     		b	.L130
 1459              	.L136:
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1460              		.loc 1 724 0
 1461 00ee 002E     		cmp	r6, #0
 1462 00f0 35D0     		beq	.L147
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1463              		.loc 1 724 0 is_stmt 0 discriminator 1
 1464 00f2 B6F1FF3F 		cmp	r6, #-1
 1465 00f6 04D0     		beq	.L131
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1466              		.loc 1 724 0 discriminator 2
 1467 00f8 FFF7FEFF 		bl	HAL_GetTick
 1468              	.LVL118:
 1469 00fc C01B     		subs	r0, r0, r7
 1470 00fe 8642     		cmp	r6, r0
 1471 0100 2FD9     		bls	.L148
 1472              	.L131:
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1473              		.loc 1 712 0 is_stmt 1
 1474 0102 E38F     		ldrh	r3, [r4, #62]
 1475 0104 9BB2     		uxth	r3, r3
 1476 0106 6BB1     		cbz	r3, .L135
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1477              		.loc 1 715 0
 1478 0108 2368     		ldr	r3, [r4]
 1479 010a 9A68     		ldr	r2, [r3, #8]
 1480 010c 12F0010F 		tst	r2, #1
 1481 0110 EDD0     		beq	.L136
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         pData += sizeof(uint16_t);
 1482              		.loc 1 717 0
 1483 0112 DB68     		ldr	r3, [r3, #12]
 1484 0114 25F8023B 		strh	r3, [r5], #2	@ movhi
 1485              	.LVL119:
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1486              		.loc 1 719 0
 1487 0118 E38F     		ldrh	r3, [r4, #62]
 1488 011a 9BB2     		uxth	r3, r3
 1489 011c 013B     		subs	r3, r3, #1
 1490 011e 9BB2     		uxth	r3, r3
 1491 0120 E387     		strh	r3, [r4, #62]	@ movhi
 1492 0122 EEE7     		b	.L131
 1493              	.L135:
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1494              		.loc 1 775 0
 1495 0124 6368     		ldr	r3, [r4, #4]
 1496 0126 B3F5827F 		cmp	r3, #260
ARM GAS  /tmp/ccrAKW0M.s 			page 88


 1497 012a 03D0     		beq	.L155
 1498              	.L139:
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1499              		.loc 1 800 0
 1500 012c 636D     		ldr	r3, [r4, #84]
 1501 012e D3B9     		cbnz	r3, .L149
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1502              		.loc 1 620 0
 1503 0130 0020     		movs	r0, #0
 1504 0132 90E7     		b	.L127
 1505              	.L155:
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1506              		.loc 1 775 0 discriminator 1
 1507 0134 A368     		ldr	r3, [r4, #8]
 1508 0136 B3F5004F 		cmp	r3, #32768
 1509 013a 02D0     		beq	.L140
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1510              		.loc 1 775 0 is_stmt 0 discriminator 2
 1511 013c B3F5806F 		cmp	r3, #1024
 1512 0140 F4D1     		bne	.L139
 1513              	.L140:
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1514              		.loc 1 778 0 is_stmt 1
 1515 0142 2268     		ldr	r2, [r4]
 1516 0144 1368     		ldr	r3, [r2]
 1517 0146 23F04003 		bic	r3, r3, #64
 1518 014a 1360     		str	r3, [r2]
 1519 014c EEE7     		b	.L139
 1520              	.LVL120:
 1521              	.L143:
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1522              		.loc 1 643 0
 1523 014e 0120     		movs	r0, #1
 1524              	.LVL121:
 1525 0150 81E7     		b	.L127
 1526              	.LVL122:
 1527              	.L144:
 1528 0152 0120     		movs	r0, #1
 1529              	.LVL123:
 1530 0154 7FE7     		b	.L127
 1531              	.L145:
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 1532              		.loc 1 703 0
 1533 0156 0320     		movs	r0, #3
 1534 0158 7DE7     		b	.L127
 1535              	.L146:
 1536 015a 0320     		movs	r0, #3
 1537 015c 7BE7     		b	.L127
 1538              	.L147:
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 1539              		.loc 1 726 0
 1540 015e 0320     		movs	r0, #3
 1541 0160 79E7     		b	.L127
 1542              	.L148:
 1543 0162 0320     		movs	r0, #3
 1544 0164 77E7     		b	.L127
 1545              	.L149:
ARM GAS  /tmp/ccrAKW0M.s 			page 89


 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1546              		.loc 1 802 0
 1547 0166 0120     		movs	r0, #1
 1548 0168 75E7     		b	.L127
 1549              		.cfi_endproc
 1550              	.LFE69:
 1552              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 1553              		.align	1
 1554              		.global	HAL_SPI_Transmit_IT
 1555              		.syntax unified
 1556              		.thumb
 1557              		.thumb_func
 1558              		.fpu softvfp
 1560              	HAL_SPI_Transmit_IT:
 1561              	.LFB71:
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1562              		.loc 1 1054 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
 1567              	.LVL124:
 1568 0000 0346     		mov	r3, r0
 1569              	.LVL125:
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1570              		.loc 1 1061 0
 1571 0002 90F85000 		ldrb	r0, [r0, #80]	@ zero_extendqisi2
 1572              	.LVL126:
 1573 0006 0128     		cmp	r0, #1
 1574 0008 4BD0     		beq	.L164
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1575              		.loc 1 1061 0 is_stmt 0 discriminator 2
 1576 000a 0120     		movs	r0, #1
 1577 000c 83F85000 		strb	r0, [r3, #80]
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1578              		.loc 1 1063 0 is_stmt 1 discriminator 2
 1579 0010 0029     		cmp	r1, #0
 1580 0012 3DD0     		beq	.L165
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1581              		.loc 1 1063 0 is_stmt 0 discriminator 1
 1582 0014 002A     		cmp	r2, #0
 1583 0016 3DD0     		beq	.L166
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1584              		.loc 1 1069 0 is_stmt 1
 1585 0018 93F85100 		ldrb	r0, [r3, #81]	@ zero_extendqisi2
 1586 001c C0B2     		uxtb	r0, r0
 1587 001e 0128     		cmp	r0, #1
 1588 0020 01D0     		beq	.L169
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1589              		.loc 1 1071 0
 1590 0022 0220     		movs	r0, #2
 1591 0024 37E0     		b	.L158
 1592              	.L169:
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1593              		.loc 1 1076 0
 1594 0026 0320     		movs	r0, #3
 1595 0028 83F85100 		strb	r0, [r3, #81]
ARM GAS  /tmp/ccrAKW0M.s 			page 90


1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1596              		.loc 1 1077 0
 1597 002c 0020     		movs	r0, #0
 1598 002e 5865     		str	r0, [r3, #84]
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1599              		.loc 1 1078 0
 1600 0030 1963     		str	r1, [r3, #48]
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1601              		.loc 1 1079 0
 1602 0032 9A86     		strh	r2, [r3, #52]	@ movhi
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1603              		.loc 1 1080 0
 1604 0034 DA86     		strh	r2, [r3, #54]	@ movhi
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1605              		.loc 1 1083 0
 1606 0036 9863     		str	r0, [r3, #56]
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1607              		.loc 1 1084 0
 1608 0038 9887     		strh	r0, [r3, #60]	@ movhi
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1609              		.loc 1 1085 0
 1610 003a D887     		strh	r0, [r3, #62]	@ movhi
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1611              		.loc 1 1086 0
 1612 003c 1864     		str	r0, [r3, #64]
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1613              		.loc 1 1089 0
 1614 003e DA68     		ldr	r2, [r3, #12]
 1615              	.LVL127:
 1616 0040 BAB1     		cbz	r2, .L159
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1617              		.loc 1 1091 0
 1618 0042 194A     		ldr	r2, .L171
 1619 0044 5A64     		str	r2, [r3, #68]
 1620              	.L160:
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1621              		.loc 1 1099 0
 1622 0046 9A68     		ldr	r2, [r3, #8]
 1623 0048 B2F5004F 		cmp	r2, #32768
 1624 004c 14D0     		beq	.L170
 1625              	.LVL128:
 1626              	.L161:
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1627              		.loc 1 1112 0
 1628 004e 9A68     		ldr	r2, [r3, #8]
 1629 0050 C2B9     		cbnz	r2, .L162
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1630              		.loc 1 1115 0
 1631 0052 1968     		ldr	r1, [r3]
 1632 0054 4A68     		ldr	r2, [r1, #4]
 1633 0056 42F08002 		orr	r2, r2, #128
 1634 005a 4A60     		str	r2, [r1, #4]
 1635              	.L163:
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1636              		.loc 1 1124 0
 1637 005c 1A68     		ldr	r2, [r3]
 1638 005e 1168     		ldr	r1, [r2]
ARM GAS  /tmp/ccrAKW0M.s 			page 91


 1639 0060 11F0400F 		tst	r1, #64
 1640 0064 1BD1     		bne	.L168
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1641              		.loc 1 1127 0
 1642 0066 1168     		ldr	r1, [r2]
 1643 0068 41F04001 		orr	r1, r1, #64
 1644 006c 1160     		str	r1, [r2]
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1645              		.loc 1 1055 0
 1646 006e 0020     		movs	r0, #0
 1647 0070 11E0     		b	.L158
 1648              	.LVL129:
 1649              	.L159:
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1650              		.loc 1 1095 0
 1651 0072 0E4A     		ldr	r2, .L171+4
 1652 0074 5A64     		str	r2, [r3, #68]
 1653 0076 E6E7     		b	.L160
 1654              	.L170:
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1655              		.loc 1 1101 0
 1656 0078 1968     		ldr	r1, [r3]
 1657              	.LVL130:
 1658 007a 0A68     		ldr	r2, [r1]
 1659 007c 42F48042 		orr	r2, r2, #16384
 1660 0080 0A60     		str	r2, [r1]
 1661              	.LVL131:
 1662 0082 E4E7     		b	.L161
 1663              	.L162:
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1664              		.loc 1 1120 0
 1665 0084 1968     		ldr	r1, [r3]
 1666 0086 4A68     		ldr	r2, [r1, #4]
 1667 0088 42F0A002 		orr	r2, r2, #160
 1668 008c 4A60     		str	r2, [r1, #4]
 1669 008e E5E7     		b	.L163
 1670              	.LVL132:
 1671              	.L165:
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1672              		.loc 1 1065 0
 1673 0090 0120     		movs	r0, #1
 1674 0092 00E0     		b	.L158
 1675              	.L166:
 1676 0094 0120     		movs	r0, #1
 1677              	.LVL133:
 1678              	.L158:
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 1679              		.loc 1 1131 0
 1680 0096 0022     		movs	r2, #0
 1681 0098 83F85020 		strb	r2, [r3, #80]
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1682              		.loc 1 1132 0
 1683 009c 7047     		bx	lr
 1684              	.LVL134:
 1685              	.L168:
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1686              		.loc 1 1055 0
ARM GAS  /tmp/ccrAKW0M.s 			page 92


 1687 009e 0020     		movs	r0, #0
 1688 00a0 F9E7     		b	.L158
 1689              	.LVL135:
 1690              	.L164:
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1691              		.loc 1 1061 0
 1692 00a2 0220     		movs	r0, #2
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1693              		.loc 1 1133 0
 1694 00a4 7047     		bx	lr
 1695              	.L172:
 1696 00a6 00BF     		.align	2
 1697              	.L171:
 1698 00a8 00000000 		.word	SPI_TxISR_16BIT
 1699 00ac 00000000 		.word	SPI_TxISR_8BIT
 1700              		.cfi_endproc
 1701              	.LFE71:
 1703              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 1704              		.align	1
 1705              		.global	HAL_SPI_TransmitReceive_IT
 1706              		.syntax unified
 1707              		.thumb
 1708              		.thumb_func
 1709              		.fpu softvfp
 1711              	HAL_SPI_TransmitReceive_IT:
 1712              	.LFB73:
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tmp = 0U, tmp1 = 0U;
 1713              		.loc 1 1236 0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 0
 1716              		@ frame_needed = 0, uses_anonymous_args = 0
 1717              		@ link register save eliminated.
 1718              	.LVL136:
 1719 0000 30B4     		push	{r4, r5}
 1720              	.LCFI22:
 1721              		.cfi_def_cfa_offset 8
 1722              		.cfi_offset 4, -8
 1723              		.cfi_offset 5, -4
 1724              	.LVL137:
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1725              		.loc 1 1244 0
 1726 0002 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 1727 0006 012C     		cmp	r4, #1
 1728 0008 55D0     		beq	.L180
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1729              		.loc 1 1244 0 is_stmt 0 discriminator 2
 1730 000a 0124     		movs	r4, #1
 1731 000c 80F85040 		strb	r4, [r0, #80]
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp1 = hspi->Init.Mode;
 1732              		.loc 1 1246 0 is_stmt 1 discriminator 2
 1733 0010 90F85140 		ldrb	r4, [r0, #81]	@ zero_extendqisi2
 1734 0014 E4B2     		uxtb	r4, r4
 1735              	.LVL138:
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
 1736              		.loc 1 1247 0 discriminator 2
 1737 0016 4568     		ldr	r5, [r0, #4]
 1738              	.LVL139:
ARM GAS  /tmp/ccrAKW0M.s 			page 93


1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL_SPI
 1739              		.loc 1 1249 0 discriminator 2
 1740 0018 012C     		cmp	r4, #1
 1741 001a 10D0     		beq	.L175
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL_SPI
 1742              		.loc 1 1249 0 is_stmt 0 discriminator 1
 1743 001c B5F5827F 		cmp	r5, #260
 1744 0020 06D0     		beq	.L189
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1745              		.loc 1 1252 0 is_stmt 1
 1746 0022 0223     		movs	r3, #2
 1747              	.LVL140:
 1748              	.L176:
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 1749              		.loc 1 1309 0
 1750 0024 0022     		movs	r2, #0
 1751 0026 80F85020 		strb	r2, [r0, #80]
 1752              	.LVL141:
 1753              	.L174:
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1754              		.loc 1 1311 0
 1755 002a 1846     		mov	r0, r3
 1756              	.LVL142:
 1757 002c 30BC     		pop	{r4, r5}
 1758              	.LCFI23:
 1759              		.cfi_remember_state
 1760              		.cfi_restore 5
 1761              		.cfi_restore 4
 1762              		.cfi_def_cfa_offset 0
 1763 002e 7047     		bx	lr
 1764              	.LVL143:
 1765              	.L189:
 1766              	.LCFI24:
 1767              		.cfi_restore_state
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1768              		.loc 1 1250 0
 1769 0030 8568     		ldr	r5, [r0, #8]
 1770              	.LVL144:
 1771 0032 002D     		cmp	r5, #0
 1772 0034 35D1     		bne	.L182
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1773              		.loc 1 1250 0 is_stmt 0 discriminator 1
 1774 0036 042C     		cmp	r4, #4
 1775 0038 01D0     		beq	.L175
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1776              		.loc 1 1252 0 is_stmt 1
 1777 003a 0223     		movs	r3, #2
 1778              	.LVL145:
 1779 003c F2E7     		b	.L176
 1780              	.LVL146:
 1781              	.L175:
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1782              		.loc 1 1256 0
 1783 003e 0029     		cmp	r1, #0
 1784 0040 31D0     		beq	.L184
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1785              		.loc 1 1256 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccrAKW0M.s 			page 94


 1786 0042 002A     		cmp	r2, #0
 1787 0044 31D0     		beq	.L185
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1788              		.loc 1 1256 0 discriminator 2
 1789 0046 002B     		cmp	r3, #0
 1790 0048 31D0     		beq	.L186
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1791              		.loc 1 1263 0 is_stmt 1
 1792 004a 90F85140 		ldrb	r4, [r0, #81]	@ zero_extendqisi2
 1793              	.LVL147:
 1794 004e E4B2     		uxtb	r4, r4
 1795 0050 012C     		cmp	r4, #1
 1796 0052 1DD0     		beq	.L190
 1797              	.L177:
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1798              		.loc 1 1269 0
 1799 0054 0024     		movs	r4, #0
 1800 0056 4465     		str	r4, [r0, #84]
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1801              		.loc 1 1270 0
 1802 0058 0163     		str	r1, [r0, #48]
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1803              		.loc 1 1271 0
 1804 005a 8386     		strh	r3, [r0, #52]	@ movhi
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1805              		.loc 1 1272 0
 1806 005c C386     		strh	r3, [r0, #54]	@ movhi
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1807              		.loc 1 1273 0
 1808 005e 8263     		str	r2, [r0, #56]
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1809              		.loc 1 1274 0
 1810 0060 8387     		strh	r3, [r0, #60]	@ movhi
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1811              		.loc 1 1275 0
 1812 0062 C387     		strh	r3, [r0, #62]	@ movhi
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1813              		.loc 1 1278 0
 1814 0064 C368     		ldr	r3, [r0, #12]
 1815              	.LVL148:
 1816 0066 BBB1     		cbz	r3, .L178
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 1817              		.loc 1 1280 0
 1818 0068 144B     		ldr	r3, .L191
 1819 006a 0364     		str	r3, [r0, #64]
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1820              		.loc 1 1281 0
 1821 006c 144B     		ldr	r3, .L191+4
 1822 006e 4364     		str	r3, [r0, #68]
 1823              	.L179:
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1824              		.loc 1 1298 0
 1825 0070 0268     		ldr	r2, [r0]
 1826              	.LVL149:
 1827 0072 5368     		ldr	r3, [r2, #4]
 1828 0074 43F0E003 		orr	r3, r3, #224
 1829 0078 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccrAKW0M.s 			page 95


 1830              	.LVL150:
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1831              		.loc 1 1301 0
 1832 007a 0368     		ldr	r3, [r0]
 1833 007c 1A68     		ldr	r2, [r3]
 1834 007e 12F0400F 		tst	r2, #64
 1835 0082 16D1     		bne	.L187
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1836              		.loc 1 1304 0
 1837 0084 1A68     		ldr	r2, [r3]
 1838 0086 42F04002 		orr	r2, r2, #64
 1839 008a 1A60     		str	r2, [r3]
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1840              		.loc 1 1238 0
 1841 008c 0023     		movs	r3, #0
 1842 008e C9E7     		b	.L176
 1843              	.LVL151:
 1844              	.L190:
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1845              		.loc 1 1265 0
 1846 0090 0524     		movs	r4, #5
 1847 0092 80F85140 		strb	r4, [r0, #81]
 1848 0096 DDE7     		b	.L177
 1849              	.LVL152:
 1850              	.L178:
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 1851              		.loc 1 1285 0
 1852 0098 0A4B     		ldr	r3, .L191+8
 1853 009a 0364     		str	r3, [r0, #64]
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1854              		.loc 1 1286 0
 1855 009c 0A4B     		ldr	r3, .L191+12
 1856 009e 4364     		str	r3, [r0, #68]
 1857 00a0 E6E7     		b	.L179
 1858              	.LVL153:
 1859              	.L182:
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1860              		.loc 1 1252 0
 1861 00a2 0223     		movs	r3, #2
 1862              	.LVL154:
 1863 00a4 BEE7     		b	.L176
 1864              	.LVL155:
 1865              	.L184:
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1866              		.loc 1 1258 0
 1867 00a6 0123     		movs	r3, #1
 1868              	.LVL156:
 1869 00a8 BCE7     		b	.L176
 1870              	.LVL157:
 1871              	.L185:
 1872 00aa 0123     		movs	r3, #1
 1873              	.LVL158:
 1874 00ac BAE7     		b	.L176
 1875              	.LVL159:
 1876              	.L186:
 1877 00ae 0123     		movs	r3, #1
 1878              	.LVL160:
ARM GAS  /tmp/ccrAKW0M.s 			page 96


 1879 00b0 B8E7     		b	.L176
 1880              	.LVL161:
 1881              	.L187:
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1882              		.loc 1 1238 0
 1883 00b2 0023     		movs	r3, #0
 1884 00b4 B6E7     		b	.L176
 1885              	.LVL162:
 1886              	.L180:
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1887              		.loc 1 1244 0
 1888 00b6 0223     		movs	r3, #2
 1889              	.LVL163:
 1890 00b8 B7E7     		b	.L174
 1891              	.L192:
 1892 00ba 00BF     		.align	2
 1893              	.L191:
 1894 00bc 00000000 		.word	SPI_2linesRxISR_16BIT
 1895 00c0 00000000 		.word	SPI_2linesTxISR_16BIT
 1896 00c4 00000000 		.word	SPI_2linesRxISR_8BIT
 1897 00c8 00000000 		.word	SPI_2linesTxISR_8BIT
 1898              		.cfi_endproc
 1899              	.LFE73:
 1901              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 1902              		.align	1
 1903              		.global	HAL_SPI_Receive_IT
 1904              		.syntax unified
 1905              		.thumb
 1906              		.thumb_func
 1907              		.fpu softvfp
 1909              	HAL_SPI_Receive_IT:
 1910              	.LFB72:
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1911              		.loc 1 1144 0
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 0
 1914              		@ frame_needed = 0, uses_anonymous_args = 0
 1915              	.LVL164:
 1916 0000 38B5     		push	{r3, r4, r5, lr}
 1917              	.LCFI25:
 1918              		.cfi_def_cfa_offset 16
 1919              		.cfi_offset 3, -16
 1920              		.cfi_offset 4, -12
 1921              		.cfi_offset 5, -8
 1922              		.cfi_offset 14, -4
 1923 0002 0446     		mov	r4, r0
 1924              	.LVL165:
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1925              		.loc 1 1147 0
 1926 0004 8568     		ldr	r5, [r0, #8]
 1927 0006 1DB9     		cbnz	r5, .L194
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1928              		.loc 1 1147 0 is_stmt 0 discriminator 1
 1929 0008 4368     		ldr	r3, [r0, #4]
 1930 000a B3F5827F 		cmp	r3, #260
 1931 000e 10D0     		beq	.L206
 1932              	.L194:
ARM GAS  /tmp/ccrAKW0M.s 			page 97


1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1933              		.loc 1 1155 0 is_stmt 1
 1934 0010 94F85000 		ldrb	r0, [r4, #80]	@ zero_extendqisi2
 1935              	.LVL166:
 1936 0014 0128     		cmp	r0, #1
 1937 0016 4AD0     		beq	.L200
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1938              		.loc 1 1155 0 is_stmt 0 discriminator 2
 1939 0018 0123     		movs	r3, #1
 1940 001a 84F85030 		strb	r3, [r4, #80]
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1941              		.loc 1 1157 0 is_stmt 1 discriminator 2
 1942 001e 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 1943 0022 C0B2     		uxtb	r0, r0
 1944 0024 9842     		cmp	r0, r3
 1945 0026 0CD0     		beq	.L207
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1946              		.loc 1 1159 0
 1947 0028 0220     		movs	r0, #2
 1948              	.LVL167:
 1949              	.L196:
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 1950              		.loc 1 1222 0
 1951 002a 0023     		movs	r3, #0
 1952 002c 84F85030 		strb	r3, [r4, #80]
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1953              		.loc 1 1223 0
 1954 0030 38BD     		pop	{r3, r4, r5, pc}
 1955              	.LVL168:
 1956              	.L206:
 1957 0032 1346     		mov	r3, r2
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line
 1958              		.loc 1 1149 0
 1959 0034 0422     		movs	r2, #4
 1960              	.LVL169:
 1961 0036 80F85120 		strb	r2, [r0, #81]
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1962              		.loc 1 1151 0
 1963 003a 0A46     		mov	r2, r1
 1964 003c FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 1965              	.LVL170:
 1966 0040 38BD     		pop	{r3, r4, r5, pc}
 1967              	.LVL171:
 1968              	.L207:
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1969              		.loc 1 1163 0
 1970 0042 0029     		cmp	r1, #0
 1971 0044 2DD0     		beq	.L202
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1972              		.loc 1 1163 0 is_stmt 0 discriminator 1
 1973 0046 002A     		cmp	r2, #0
 1974 0048 2DD0     		beq	.L203
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1975              		.loc 1 1170 0 is_stmt 1
 1976 004a 0423     		movs	r3, #4
 1977 004c 84F85130 		strb	r3, [r4, #81]
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
ARM GAS  /tmp/ccrAKW0M.s 			page 98


 1978              		.loc 1 1171 0
 1979 0050 0023     		movs	r3, #0
 1980 0052 6365     		str	r3, [r4, #84]
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1981              		.loc 1 1172 0
 1982 0054 A163     		str	r1, [r4, #56]
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1983              		.loc 1 1173 0
 1984 0056 A287     		strh	r2, [r4, #60]	@ movhi
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1985              		.loc 1 1174 0
 1986 0058 E287     		strh	r2, [r4, #62]	@ movhi
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 1987              		.loc 1 1177 0
 1988 005a 2363     		str	r3, [r4, #48]
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 1989              		.loc 1 1178 0
 1990 005c A386     		strh	r3, [r4, #52]	@ movhi
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1991              		.loc 1 1179 0
 1992 005e E386     		strh	r3, [r4, #54]	@ movhi
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1993              		.loc 1 1180 0
 1994 0060 6364     		str	r3, [r4, #68]
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1995              		.loc 1 1183 0
 1996 0062 E368     		ldr	r3, [r4, #12]
 1997 0064 A3B1     		cbz	r3, .L197
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1998              		.loc 1 1185 0
 1999 0066 134B     		ldr	r3, .L209
 2000 0068 2364     		str	r3, [r4, #64]
 2001              	.L198:
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2002              		.loc 1 1193 0
 2003 006a B5F5004F 		cmp	r5, #32768
 2004 006e 12D0     		beq	.L208
 2005              	.LVL172:
 2006              	.L199:
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2007              		.loc 1 1207 0
 2008 0070 2268     		ldr	r2, [r4]
 2009 0072 5368     		ldr	r3, [r2, #4]
 2010 0074 43F06003 		orr	r3, r3, #96
 2011 0078 5360     		str	r3, [r2, #4]
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2012              		.loc 1 1214 0
 2013 007a 2368     		ldr	r3, [r4]
 2014 007c 1A68     		ldr	r2, [r3]
 2015 007e 12F0400F 		tst	r2, #64
 2016 0082 12D1     		bne	.L204
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2017              		.loc 1 1217 0
 2018 0084 1A68     		ldr	r2, [r3]
 2019 0086 42F04002 		orr	r2, r2, #64
 2020 008a 1A60     		str	r2, [r3]
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccrAKW0M.s 			page 99


 2021              		.loc 1 1145 0
 2022 008c 0020     		movs	r0, #0
 2023 008e CCE7     		b	.L196
 2024              	.LVL173:
 2025              	.L197:
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2026              		.loc 1 1189 0
 2027 0090 094B     		ldr	r3, .L209+4
 2028 0092 2364     		str	r3, [r4, #64]
 2029 0094 E9E7     		b	.L198
 2030              	.L208:
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2031              		.loc 1 1195 0
 2032 0096 2268     		ldr	r2, [r4]
 2033              	.LVL174:
 2034 0098 1368     		ldr	r3, [r2]
 2035 009a 23F48043 		bic	r3, r3, #16384
 2036 009e 1360     		str	r3, [r2]
 2037              	.LVL175:
 2038 00a0 E6E7     		b	.L199
 2039              	.LVL176:
 2040              	.L202:
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2041              		.loc 1 1165 0
 2042 00a2 0120     		movs	r0, #1
 2043 00a4 C1E7     		b	.L196
 2044              	.L203:
 2045 00a6 0120     		movs	r0, #1
 2046 00a8 BFE7     		b	.L196
 2047              	.LVL177:
 2048              	.L204:
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2049              		.loc 1 1145 0
 2050 00aa 0020     		movs	r0, #0
 2051 00ac BDE7     		b	.L196
 2052              	.LVL178:
 2053              	.L200:
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2054              		.loc 1 1155 0
 2055 00ae 0220     		movs	r0, #2
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2056              		.loc 1 1224 0
 2057 00b0 38BD     		pop	{r3, r4, r5, pc}
 2058              	.LVL179:
 2059              	.L210:
 2060 00b2 00BF     		.align	2
 2061              	.L209:
 2062 00b4 00000000 		.word	SPI_RxISR_16BIT
 2063 00b8 00000000 		.word	SPI_RxISR_8BIT
 2064              		.cfi_endproc
 2065              	.LFE72:
 2067              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2068              		.align	1
 2069              		.global	HAL_SPI_Transmit_DMA
 2070              		.syntax unified
 2071              		.thumb
 2072              		.thumb_func
ARM GAS  /tmp/ccrAKW0M.s 			page 100


 2073              		.fpu softvfp
 2075              	HAL_SPI_Transmit_DMA:
 2076              	.LFB74:
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2077              		.loc 1 1322 0
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 0
 2080              		@ frame_needed = 0, uses_anonymous_args = 0
 2081              	.LVL180:
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2082              		.loc 1 1329 0
 2083 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2084 0004 012B     		cmp	r3, #1
 2085 0006 56D0     		beq	.L216
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2086              		.loc 1 1322 0 discriminator 2
 2087 0008 10B5     		push	{r4, lr}
 2088              	.LCFI26:
 2089              		.cfi_def_cfa_offset 8
 2090              		.cfi_offset 4, -8
 2091              		.cfi_offset 14, -4
 2092 000a 0446     		mov	r4, r0
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2093              		.loc 1 1329 0 discriminator 2
 2094 000c 0123     		movs	r3, #1
 2095 000e 80F85030 		strb	r3, [r0, #80]
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2096              		.loc 1 1331 0 discriminator 2
 2097 0012 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
 2098 0016 DBB2     		uxtb	r3, r3
 2099 0018 012B     		cmp	r3, #1
 2100 001a 04D0     		beq	.L224
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2101              		.loc 1 1333 0
 2102 001c 0220     		movs	r0, #2
 2103              	.LVL181:
 2104              	.L213:
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2105              		.loc 1 1401 0
 2106 001e 0023     		movs	r3, #0
 2107 0020 84F85030 		strb	r3, [r4, #80]
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2108              		.loc 1 1402 0
 2109 0024 10BD     		pop	{r4, pc}
 2110              	.LVL182:
 2111              	.L224:
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2112              		.loc 1 1337 0
 2113 0026 0029     		cmp	r1, #0
 2114 0028 41D0     		beq	.L218
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2115              		.loc 1 1337 0 is_stmt 0 discriminator 1
 2116 002a 002A     		cmp	r2, #0
 2117 002c 41D0     		beq	.L219
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2118              		.loc 1 1344 0 is_stmt 1
 2119 002e 0323     		movs	r3, #3
ARM GAS  /tmp/ccrAKW0M.s 			page 101


 2120 0030 80F85130 		strb	r3, [r0, #81]
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2121              		.loc 1 1345 0
 2122 0034 0023     		movs	r3, #0
 2123 0036 4365     		str	r3, [r0, #84]
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2124              		.loc 1 1346 0
 2125 0038 0163     		str	r1, [r0, #48]
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2126              		.loc 1 1347 0
 2127 003a 8286     		strh	r2, [r0, #52]	@ movhi
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2128              		.loc 1 1348 0
 2129 003c C286     		strh	r2, [r0, #54]	@ movhi
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2130              		.loc 1 1351 0
 2131 003e 8363     		str	r3, [r0, #56]
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2132              		.loc 1 1352 0
 2133 0040 4364     		str	r3, [r0, #68]
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2134              		.loc 1 1353 0
 2135 0042 0364     		str	r3, [r0, #64]
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2136              		.loc 1 1354 0
 2137 0044 8387     		strh	r3, [r0, #60]	@ movhi
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2138              		.loc 1 1355 0
 2139 0046 C387     		strh	r3, [r0, #62]	@ movhi
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2140              		.loc 1 1358 0
 2141 0048 8368     		ldr	r3, [r0, #8]
 2142 004a B3F5004F 		cmp	r3, #32768
 2143 004e 28D0     		beq	.L225
 2144              	.LVL183:
 2145              	.L214:
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2146              		.loc 1 1372 0
 2147 0050 A36C     		ldr	r3, [r4, #72]
 2148 0052 1A4A     		ldr	r2, .L226
 2149 0054 DA62     		str	r2, [r3, #44]
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2150              		.loc 1 1375 0
 2151 0056 A36C     		ldr	r3, [r4, #72]
 2152 0058 194A     		ldr	r2, .L226+4
 2153 005a 9A62     		str	r2, [r3, #40]
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2154              		.loc 1 1378 0
 2155 005c A36C     		ldr	r3, [r4, #72]
 2156 005e 194A     		ldr	r2, .L226+8
 2157 0060 1A63     		str	r2, [r3, #48]
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2158              		.loc 1 1381 0
 2159 0062 A36C     		ldr	r3, [r4, #72]
 2160 0064 0022     		movs	r2, #0
 2161 0066 5A63     		str	r2, [r3, #52]
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccrAKW0M.s 			page 102


 2162              		.loc 1 1384 0
 2163 0068 2268     		ldr	r2, [r4]
 2164 006a E38E     		ldrh	r3, [r4, #54]
 2165 006c 9BB2     		uxth	r3, r3
 2166 006e 0C32     		adds	r2, r2, #12
 2167 0070 216B     		ldr	r1, [r4, #48]
 2168              	.LVL184:
 2169 0072 A06C     		ldr	r0, [r4, #72]
 2170              	.LVL185:
 2171 0074 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2172              	.LVL186:
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2173              		.loc 1 1387 0
 2174 0078 2368     		ldr	r3, [r4]
 2175 007a 1A68     		ldr	r2, [r3]
 2176 007c 12F0400F 		tst	r2, #64
 2177 0080 03D1     		bne	.L215
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2178              		.loc 1 1390 0
 2179 0082 1A68     		ldr	r2, [r3]
 2180 0084 42F04002 		orr	r2, r2, #64
 2181 0088 1A60     		str	r2, [r3]
 2182              	.L215:
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2183              		.loc 1 1394 0
 2184 008a 2268     		ldr	r2, [r4]
 2185 008c 5368     		ldr	r3, [r2, #4]
 2186 008e 43F02003 		orr	r3, r3, #32
 2187 0092 5360     		str	r3, [r2, #4]
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2188              		.loc 1 1397 0
 2189 0094 2268     		ldr	r2, [r4]
 2190 0096 5368     		ldr	r3, [r2, #4]
 2191 0098 43F00203 		orr	r3, r3, #2
 2192 009c 5360     		str	r3, [r2, #4]
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2193              		.loc 1 1323 0
 2194 009e 0020     		movs	r0, #0
 2195 00a0 BDE7     		b	.L213
 2196              	.LVL187:
 2197              	.L225:
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2198              		.loc 1 1360 0
 2199 00a2 0268     		ldr	r2, [r0]
 2200              	.LVL188:
 2201 00a4 1368     		ldr	r3, [r2]
 2202 00a6 43F48043 		orr	r3, r3, #16384
 2203 00aa 1360     		str	r3, [r2]
 2204              	.LVL189:
 2205 00ac D0E7     		b	.L214
 2206              	.LVL190:
 2207              	.L218:
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2208              		.loc 1 1339 0
 2209 00ae 0120     		movs	r0, #1
 2210              	.LVL191:
 2211 00b0 B5E7     		b	.L213
ARM GAS  /tmp/ccrAKW0M.s 			page 103


 2212              	.LVL192:
 2213              	.L219:
 2214 00b2 0120     		movs	r0, #1
 2215              	.LVL193:
 2216 00b4 B3E7     		b	.L213
 2217              	.LVL194:
 2218              	.L216:
 2219              	.LCFI27:
 2220              		.cfi_def_cfa_offset 0
 2221              		.cfi_restore 4
 2222              		.cfi_restore 14
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2223              		.loc 1 1329 0
 2224 00b6 0220     		movs	r0, #2
 2225              	.LVL195:
 2226 00b8 7047     		bx	lr
 2227              	.L227:
 2228 00ba 00BF     		.align	2
 2229              	.L226:
 2230 00bc 00000000 		.word	SPI_DMAHalfTransmitCplt
 2231 00c0 00000000 		.word	SPI_DMATransmitCplt
 2232 00c4 00000000 		.word	SPI_DMAError
 2233              		.cfi_endproc
 2234              	.LFE74:
 2236              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 2237              		.align	1
 2238              		.global	HAL_SPI_TransmitReceive_DMA
 2239              		.syntax unified
 2240              		.thumb
 2241              		.thumb_func
 2242              		.fpu softvfp
 2244              	HAL_SPI_TransmitReceive_DMA:
 2245              	.LFB76:
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tmp = 0U, tmp1 = 0U;
 2246              		.loc 1 1512 0
 2247              		.cfi_startproc
 2248              		@ args = 0, pretend = 0, frame = 0
 2249              		@ frame_needed = 0, uses_anonymous_args = 0
 2250              	.LVL196:
 2251 0000 38B5     		push	{r3, r4, r5, lr}
 2252              	.LCFI28:
 2253              		.cfi_def_cfa_offset 16
 2254              		.cfi_offset 3, -16
 2255              		.cfi_offset 4, -12
 2256              		.cfi_offset 5, -8
 2257              		.cfi_offset 14, -4
 2258              	.LVL197:
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2259              		.loc 1 1520 0
 2260 0002 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 2261 0006 012C     		cmp	r4, #1
 2262 0008 00F08480 		beq	.L236
 2263 000c 0446     		mov	r4, r0
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2264              		.loc 1 1520 0 is_stmt 0 discriminator 2
 2265 000e 0120     		movs	r0, #1
 2266              	.LVL198:
ARM GAS  /tmp/ccrAKW0M.s 			page 104


 2267 0010 84F85000 		strb	r0, [r4, #80]
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp1 = hspi->Init.Mode;
 2268              		.loc 1 1522 0 is_stmt 1 discriminator 2
 2269 0014 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2270 0018 C0B2     		uxtb	r0, r0
 2271              	.LVL199:
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(!((tmp == HAL_SPI_STATE_READY) ||
 2272              		.loc 1 1523 0 discriminator 2
 2273 001a 6568     		ldr	r5, [r4, #4]
 2274              	.LVL200:
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL_S
 2275              		.loc 1 1524 0 discriminator 2
 2276 001c 0128     		cmp	r0, #1
 2277 001e 0ED0     		beq	.L230
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       ((tmp1 == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp == HAL_S
 2278              		.loc 1 1524 0 is_stmt 0 discriminator 1
 2279 0020 B5F5827F 		cmp	r5, #260
 2280 0024 04D0     		beq	.L244
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2281              		.loc 1 1527 0 is_stmt 1
 2282 0026 0220     		movs	r0, #2
 2283              	.LVL201:
 2284              	.L231:
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2285              		.loc 1 1614 0
 2286 0028 0023     		movs	r3, #0
 2287 002a 84F85030 		strb	r3, [r4, #80]
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2288              		.loc 1 1615 0
 2289 002e 38BD     		pop	{r3, r4, r5, pc}
 2290              	.LVL202:
 2291              	.L244:
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2292              		.loc 1 1525 0
 2293 0030 A568     		ldr	r5, [r4, #8]
 2294              	.LVL203:
 2295 0032 002D     		cmp	r5, #0
 2296 0034 66D1     		bne	.L238
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2297              		.loc 1 1525 0 is_stmt 0 discriminator 1
 2298 0036 0428     		cmp	r0, #4
 2299 0038 01D0     		beq	.L230
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2300              		.loc 1 1527 0 is_stmt 1
 2301 003a 0220     		movs	r0, #2
 2302              	.LVL204:
 2303 003c F4E7     		b	.L231
 2304              	.LVL205:
 2305              	.L230:
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2306              		.loc 1 1531 0
 2307 003e 0029     		cmp	r1, #0
 2308 0040 62D0     		beq	.L240
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2309              		.loc 1 1531 0 is_stmt 0 discriminator 1
 2310 0042 002A     		cmp	r2, #0
 2311 0044 62D0     		beq	.L241
ARM GAS  /tmp/ccrAKW0M.s 			page 105


1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2312              		.loc 1 1531 0 discriminator 2
 2313 0046 002B     		cmp	r3, #0
 2314 0048 62D0     		beq	.L242
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2315              		.loc 1 1538 0 is_stmt 1
 2316 004a 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2317              	.LVL206:
 2318 004e C0B2     		uxtb	r0, r0
 2319 0050 0128     		cmp	r0, #1
 2320 0052 4CD0     		beq	.L245
 2321              	.L232:
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t*)pTxData;
 2322              		.loc 1 1544 0
 2323 0054 0020     		movs	r0, #0
 2324 0056 6065     		str	r0, [r4, #84]
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2325              		.loc 1 1545 0
 2326 0058 2163     		str	r1, [r4, #48]
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2327              		.loc 1 1546 0
 2328 005a A386     		strh	r3, [r4, #52]	@ movhi
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t*)pRxData;
 2329              		.loc 1 1547 0
 2330 005c E386     		strh	r3, [r4, #54]	@ movhi
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2331              		.loc 1 1548 0
 2332 005e A263     		str	r2, [r4, #56]
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2333              		.loc 1 1549 0
 2334 0060 A387     		strh	r3, [r4, #60]	@ movhi
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2335              		.loc 1 1550 0
 2336 0062 E387     		strh	r3, [r4, #62]	@ movhi
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2337              		.loc 1 1553 0
 2338 0064 2064     		str	r0, [r4, #64]
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2339              		.loc 1 1554 0
 2340 0066 6064     		str	r0, [r4, #68]
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2341              		.loc 1 1565 0
 2342 0068 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2343              	.LVL207:
 2344 006c DBB2     		uxtb	r3, r3
 2345 006e 042B     		cmp	r3, #4
 2346 0070 41D0     		beq	.L246
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 2347              		.loc 1 1574 0
 2348 0072 E36C     		ldr	r3, [r4, #76]
 2349 0074 284A     		ldr	r2, .L247
 2350              	.LVL208:
 2351 0076 DA62     		str	r2, [r3, #44]
 2352              	.LVL209:
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2353              		.loc 1 1575 0
 2354 0078 E36C     		ldr	r3, [r4, #76]
ARM GAS  /tmp/ccrAKW0M.s 			page 106


 2355 007a 284A     		ldr	r2, .L247+4
 2356 007c 9A62     		str	r2, [r3, #40]
 2357              	.L234:
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2358              		.loc 1 1579 0
 2359 007e E36C     		ldr	r3, [r4, #76]
 2360 0080 274A     		ldr	r2, .L247+8
 2361 0082 1A63     		str	r2, [r3, #48]
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2362              		.loc 1 1582 0
 2363 0084 E36C     		ldr	r3, [r4, #76]
 2364 0086 0025     		movs	r5, #0
 2365 0088 5D63     		str	r5, [r3, #52]
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2366              		.loc 1 1585 0
 2367 008a 2168     		ldr	r1, [r4]
 2368              	.LVL210:
 2369 008c E38F     		ldrh	r3, [r4, #62]
 2370 008e 9BB2     		uxth	r3, r3
 2371 0090 A26B     		ldr	r2, [r4, #56]
 2372 0092 0C31     		adds	r1, r1, #12
 2373 0094 E06C     		ldr	r0, [r4, #76]
 2374 0096 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2375              	.LVL211:
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2376              		.loc 1 1588 0
 2377 009a 2268     		ldr	r2, [r4]
 2378 009c 5368     		ldr	r3, [r2, #4]
 2379 009e 43F00103 		orr	r3, r3, #1
 2380 00a2 5360     		str	r3, [r2, #4]
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 2381              		.loc 1 1592 0
 2382 00a4 A36C     		ldr	r3, [r4, #72]
 2383 00a6 DD62     		str	r5, [r3, #44]
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 2384              		.loc 1 1593 0
 2385 00a8 A36C     		ldr	r3, [r4, #72]
 2386 00aa 9D62     		str	r5, [r3, #40]
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 2387              		.loc 1 1594 0
 2388 00ac A36C     		ldr	r3, [r4, #72]
 2389 00ae 1D63     		str	r5, [r3, #48]
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2390              		.loc 1 1595 0
 2391 00b0 A36C     		ldr	r3, [r4, #72]
 2392 00b2 5D63     		str	r5, [r3, #52]
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2393              		.loc 1 1598 0
 2394 00b4 2268     		ldr	r2, [r4]
 2395 00b6 E38E     		ldrh	r3, [r4, #54]
 2396 00b8 9BB2     		uxth	r3, r3
 2397 00ba 0C32     		adds	r2, r2, #12
 2398 00bc 216B     		ldr	r1, [r4, #48]
 2399 00be A06C     		ldr	r0, [r4, #72]
 2400 00c0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2401              	.LVL212:
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccrAKW0M.s 			page 107


 2402              		.loc 1 1601 0
 2403 00c4 2368     		ldr	r3, [r4]
 2404 00c6 1A68     		ldr	r2, [r3]
 2405 00c8 12F0400F 		tst	r2, #64
 2406 00cc 03D1     		bne	.L235
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2407              		.loc 1 1604 0
 2408 00ce 1A68     		ldr	r2, [r3]
 2409 00d0 42F04002 		orr	r2, r2, #64
 2410 00d4 1A60     		str	r2, [r3]
 2411              	.L235:
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2412              		.loc 1 1607 0
 2413 00d6 2268     		ldr	r2, [r4]
 2414 00d8 5368     		ldr	r3, [r2, #4]
 2415 00da 43F02003 		orr	r3, r3, #32
 2416 00de 5360     		str	r3, [r2, #4]
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2417              		.loc 1 1610 0
 2418 00e0 2268     		ldr	r2, [r4]
 2419 00e2 5368     		ldr	r3, [r2, #4]
 2420 00e4 43F00203 		orr	r3, r3, #2
 2421 00e8 5360     		str	r3, [r2, #4]
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2422              		.loc 1 1514 0
 2423 00ea 0020     		movs	r0, #0
 2424 00ec 9CE7     		b	.L231
 2425              	.LVL213:
 2426              	.L245:
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2427              		.loc 1 1540 0
 2428 00ee 0520     		movs	r0, #5
 2429 00f0 84F85100 		strb	r0, [r4, #81]
 2430 00f4 AEE7     		b	.L232
 2431              	.LVL214:
 2432              	.L246:
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 2433              		.loc 1 1568 0
 2434 00f6 E36C     		ldr	r3, [r4, #76]
 2435 00f8 0A4A     		ldr	r2, .L247+12
 2436              	.LVL215:
 2437 00fa DA62     		str	r2, [r3, #44]
 2438              	.LVL216:
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2439              		.loc 1 1569 0
 2440 00fc E36C     		ldr	r3, [r4, #76]
 2441 00fe 0A4A     		ldr	r2, .L247+16
 2442 0100 9A62     		str	r2, [r3, #40]
 2443 0102 BCE7     		b	.L234
 2444              	.LVL217:
 2445              	.L238:
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2446              		.loc 1 1527 0
 2447 0104 0220     		movs	r0, #2
 2448              	.LVL218:
 2449 0106 8FE7     		b	.L231
 2450              	.LVL219:
ARM GAS  /tmp/ccrAKW0M.s 			page 108


 2451              	.L240:
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2452              		.loc 1 1533 0
 2453 0108 0120     		movs	r0, #1
 2454              	.LVL220:
 2455 010a 8DE7     		b	.L231
 2456              	.LVL221:
 2457              	.L241:
 2458 010c 0120     		movs	r0, #1
 2459              	.LVL222:
 2460 010e 8BE7     		b	.L231
 2461              	.LVL223:
 2462              	.L242:
 2463 0110 0120     		movs	r0, #1
 2464              	.LVL224:
 2465 0112 89E7     		b	.L231
 2466              	.LVL225:
 2467              	.L236:
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2468              		.loc 1 1520 0
 2469 0114 0220     		movs	r0, #2
 2470              	.LVL226:
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2471              		.loc 1 1616 0
 2472 0116 38BD     		pop	{r3, r4, r5, pc}
 2473              	.LVL227:
 2474              	.L248:
 2475              		.align	2
 2476              	.L247:
 2477 0118 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 2478 011c 00000000 		.word	SPI_DMATransmitReceiveCplt
 2479 0120 00000000 		.word	SPI_DMAError
 2480 0124 00000000 		.word	SPI_DMAHalfReceiveCplt
 2481 0128 00000000 		.word	SPI_DMAReceiveCplt
 2482              		.cfi_endproc
 2483              	.LFE76:
 2485              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 2486              		.align	1
 2487              		.global	HAL_SPI_Receive_DMA
 2488              		.syntax unified
 2489              		.thumb
 2490              		.thumb_func
 2491              		.fpu softvfp
 2493              	HAL_SPI_Receive_DMA:
 2494              	.LFB75:
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2495              		.loc 1 1415 0
 2496              		.cfi_startproc
 2497              		@ args = 0, pretend = 0, frame = 0
 2498              		@ frame_needed = 0, uses_anonymous_args = 0
 2499              	.LVL228:
 2500 0000 38B5     		push	{r3, r4, r5, lr}
 2501              	.LCFI29:
 2502              		.cfi_def_cfa_offset 16
 2503              		.cfi_offset 3, -16
 2504              		.cfi_offset 4, -12
 2505              		.cfi_offset 5, -8
ARM GAS  /tmp/ccrAKW0M.s 			page 109


 2506              		.cfi_offset 14, -4
 2507 0002 0446     		mov	r4, r0
 2508              	.LVL229:
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2509              		.loc 1 1418 0
 2510 0004 8568     		ldr	r5, [r0, #8]
 2511 0006 1DB9     		cbnz	r5, .L250
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2512              		.loc 1 1418 0 is_stmt 0 discriminator 1
 2513 0008 4368     		ldr	r3, [r0, #4]
 2514 000a B3F5827F 		cmp	r3, #260
 2515 000e 10D0     		beq	.L260
 2516              	.L250:
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2517              		.loc 1 1426 0 is_stmt 1
 2518 0010 94F85000 		ldrb	r0, [r4, #80]	@ zero_extendqisi2
 2519              	.LVL230:
 2520 0014 0128     		cmp	r0, #1
 2521 0016 5AD0     		beq	.L255
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2522              		.loc 1 1426 0 is_stmt 0 discriminator 2
 2523 0018 0123     		movs	r3, #1
 2524 001a 84F85030 		strb	r3, [r4, #80]
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2525              		.loc 1 1428 0 is_stmt 1 discriminator 2
 2526 001e 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2527 0022 C0B2     		uxtb	r0, r0
 2528 0024 9842     		cmp	r0, r3
 2529 0026 0CD0     		beq	.L261
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2530              		.loc 1 1430 0
 2531 0028 0220     		movs	r0, #2
 2532              	.LVL231:
 2533              	.L252:
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2534              		.loc 1 1497 0
 2535 002a 0023     		movs	r3, #0
 2536 002c 84F85030 		strb	r3, [r4, #80]
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2537              		.loc 1 1498 0
 2538 0030 38BD     		pop	{r3, r4, r5, pc}
 2539              	.LVL232:
 2540              	.L260:
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line
 2541              		.loc 1 1420 0
 2542 0032 0423     		movs	r3, #4
 2543 0034 80F85130 		strb	r3, [r0, #81]
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2544              		.loc 1 1422 0
 2545 0038 1346     		mov	r3, r2
 2546 003a 0A46     		mov	r2, r1
 2547              	.LVL233:
 2548 003c FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 2549              	.LVL234:
 2550 0040 38BD     		pop	{r3, r4, r5, pc}
 2551              	.LVL235:
 2552              	.L261:
ARM GAS  /tmp/ccrAKW0M.s 			page 110


1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2553              		.loc 1 1434 0
 2554 0042 0029     		cmp	r1, #0
 2555 0044 3FD0     		beq	.L257
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2556              		.loc 1 1434 0 is_stmt 0 discriminator 1
 2557 0046 002A     		cmp	r2, #0
 2558 0048 3FD0     		beq	.L258
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2559              		.loc 1 1441 0 is_stmt 1
 2560 004a 0423     		movs	r3, #4
 2561 004c 84F85130 		strb	r3, [r4, #81]
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2562              		.loc 1 1442 0
 2563 0050 0023     		movs	r3, #0
 2564 0052 6365     		str	r3, [r4, #84]
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2565              		.loc 1 1443 0
 2566 0054 A163     		str	r1, [r4, #56]
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2567              		.loc 1 1444 0
 2568 0056 A287     		strh	r2, [r4, #60]	@ movhi
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2569              		.loc 1 1445 0
 2570 0058 E287     		strh	r2, [r4, #62]	@ movhi
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2571              		.loc 1 1448 0
 2572 005a 2364     		str	r3, [r4, #64]
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2573              		.loc 1 1449 0
 2574 005c 6364     		str	r3, [r4, #68]
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2575              		.loc 1 1450 0
 2576 005e A386     		strh	r3, [r4, #52]	@ movhi
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2577              		.loc 1 1451 0
 2578 0060 E386     		strh	r3, [r4, #54]	@ movhi
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2579              		.loc 1 1454 0
 2580 0062 B5F5004F 		cmp	r5, #32768
 2581 0066 28D0     		beq	.L262
 2582              	.LVL236:
 2583              	.L253:
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2584              		.loc 1 1468 0
 2585 0068 E36C     		ldr	r3, [r4, #76]
 2586 006a 1A4A     		ldr	r2, .L263
 2587 006c DA62     		str	r2, [r3, #44]
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2588              		.loc 1 1471 0
 2589 006e E36C     		ldr	r3, [r4, #76]
 2590 0070 194A     		ldr	r2, .L263+4
 2591 0072 9A62     		str	r2, [r3, #40]
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2592              		.loc 1 1474 0
 2593 0074 E36C     		ldr	r3, [r4, #76]
 2594 0076 194A     		ldr	r2, .L263+8
ARM GAS  /tmp/ccrAKW0M.s 			page 111


 2595 0078 1A63     		str	r2, [r3, #48]
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2596              		.loc 1 1477 0
 2597 007a E36C     		ldr	r3, [r4, #76]
 2598 007c 0022     		movs	r2, #0
 2599 007e 5A63     		str	r2, [r3, #52]
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2600              		.loc 1 1480 0
 2601 0080 2168     		ldr	r1, [r4]
 2602              	.LVL237:
 2603 0082 E38F     		ldrh	r3, [r4, #62]
 2604 0084 9BB2     		uxth	r3, r3
 2605 0086 A26B     		ldr	r2, [r4, #56]
 2606 0088 0C31     		adds	r1, r1, #12
 2607 008a E06C     		ldr	r0, [r4, #76]
 2608 008c FFF7FEFF 		bl	HAL_DMA_Start_IT
 2609              	.LVL238:
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2610              		.loc 1 1483 0
 2611 0090 2368     		ldr	r3, [r4]
 2612 0092 1A68     		ldr	r2, [r3]
 2613 0094 12F0400F 		tst	r2, #64
 2614 0098 03D1     		bne	.L254
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2615              		.loc 1 1486 0
 2616 009a 1A68     		ldr	r2, [r3]
 2617 009c 42F04002 		orr	r2, r2, #64
 2618 00a0 1A60     		str	r2, [r3]
 2619              	.L254:
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2620              		.loc 1 1490 0
 2621 00a2 2268     		ldr	r2, [r4]
 2622 00a4 5368     		ldr	r3, [r2, #4]
 2623 00a6 43F02003 		orr	r3, r3, #32
 2624 00aa 5360     		str	r3, [r2, #4]
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2625              		.loc 1 1493 0
 2626 00ac 2268     		ldr	r2, [r4]
 2627 00ae 5368     		ldr	r3, [r2, #4]
 2628 00b0 43F00103 		orr	r3, r3, #1
 2629 00b4 5360     		str	r3, [r2, #4]
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2630              		.loc 1 1416 0
 2631 00b6 0020     		movs	r0, #0
 2632 00b8 B7E7     		b	.L252
 2633              	.LVL239:
 2634              	.L262:
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2635              		.loc 1 1456 0
 2636 00ba 2268     		ldr	r2, [r4]
 2637              	.LVL240:
 2638 00bc 1368     		ldr	r3, [r2]
 2639 00be 23F48043 		bic	r3, r3, #16384
 2640 00c2 1360     		str	r3, [r2]
 2641              	.LVL241:
 2642 00c4 D0E7     		b	.L253
 2643              	.LVL242:
ARM GAS  /tmp/ccrAKW0M.s 			page 112


 2644              	.L257:
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2645              		.loc 1 1436 0
 2646 00c6 0120     		movs	r0, #1
 2647 00c8 AFE7     		b	.L252
 2648              	.L258:
 2649 00ca 0120     		movs	r0, #1
 2650 00cc ADE7     		b	.L252
 2651              	.L255:
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2652              		.loc 1 1426 0
 2653 00ce 0220     		movs	r0, #2
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2654              		.loc 1 1499 0
 2655 00d0 38BD     		pop	{r3, r4, r5, pc}
 2656              	.LVL243:
 2657              	.L264:
 2658 00d2 00BF     		.align	2
 2659              	.L263:
 2660 00d4 00000000 		.word	SPI_DMAHalfReceiveCplt
 2661 00d8 00000000 		.word	SPI_DMAReceiveCplt
 2662 00dc 00000000 		.word	SPI_DMAError
 2663              		.cfi_endproc
 2664              	.LFE75:
 2666              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 2667              		.align	1
 2668              		.global	HAL_SPI_Abort
 2669              		.syntax unified
 2670              		.thumb
 2671              		.thumb_func
 2672              		.fpu softvfp
 2674              	HAL_SPI_Abort:
 2675              	.LFB77:
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 2676              		.loc 1 1634 0
 2677              		.cfi_startproc
 2678              		@ args = 0, pretend = 0, frame = 8
 2679              		@ frame_needed = 0, uses_anonymous_args = 0
 2680              	.LVL244:
 2681 0000 10B5     		push	{r4, lr}
 2682              	.LCFI30:
 2683              		.cfi_def_cfa_offset 8
 2684              		.cfi_offset 4, -8
 2685              		.cfi_offset 14, -4
 2686 0002 82B0     		sub	sp, sp, #8
 2687              	.LCFI31:
 2688              		.cfi_def_cfa_offset 16
 2689 0004 0446     		mov	r4, r0
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2690              		.loc 1 1635 0
 2691 0006 2F4B     		ldr	r3, .L275
 2692 0008 1B68     		ldr	r3, [r3]
 2693 000a 2F4A     		ldr	r2, .L275+4
 2694 000c A2FB0323 		umull	r2, r3, r2, r3
 2695 0010 5B0A     		lsrs	r3, r3, #9
 2696 0012 6422     		movs	r2, #100
 2697 0014 02FB03F3 		mul	r3, r2, r3
ARM GAS  /tmp/ccrAKW0M.s 			page 113


 2698 0018 0193     		str	r3, [sp, #4]
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2699              		.loc 1 1638 0
 2700 001a 0368     		ldr	r3, [r0]
 2701 001c 5A68     		ldr	r2, [r3, #4]
 2702 001e 12F0800F 		tst	r2, #128
 2703 0022 01D0     		beq	.L266
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2704              		.loc 1 1640 0
 2705 0024 294A     		ldr	r2, .L275+8
 2706 0026 4264     		str	r2, [r0, #68]
 2707              	.L266:
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2708              		.loc 1 1643 0
 2709 0028 5A68     		ldr	r2, [r3, #4]
 2710 002a 12F0400F 		tst	r2, #64
 2711 002e 01D0     		beq	.L267
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2712              		.loc 1 1645 0
 2713 0030 274A     		ldr	r2, .L275+12
 2714 0032 2264     		str	r2, [r4, #64]
 2715              	.L267:
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2716              		.loc 1 1649 0
 2717 0034 5A68     		ldr	r2, [r3, #4]
 2718 0036 22F02002 		bic	r2, r2, #32
 2719 003a 5A60     		str	r2, [r3, #4]
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2720              		.loc 1 1652 0
 2721 003c 2368     		ldr	r3, [r4]
 2722 003e 5A68     		ldr	r2, [r3, #4]
 2723 0040 12F0020F 		tst	r2, #2
 2724 0044 03D1     		bne	.L268
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2725              		.loc 1 1652 0 is_stmt 0 discriminator 1
 2726 0046 5B68     		ldr	r3, [r3, #4]
 2727 0048 13F0010F 		tst	r3, #1
 2728 004c 2AD0     		beq	.L269
 2729              	.L268:
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 2730              		.loc 1 1655 0 is_stmt 1
 2731 004e A36C     		ldr	r3, [r4, #72]
 2732 0050 BBB1     		cbz	r3, .L270
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       
 2733              		.loc 1 1659 0
 2734 0052 0022     		movs	r2, #0
 2735 0054 5A63     		str	r2, [r3, #52]
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2736              		.loc 1 1662 0
 2737 0056 A06C     		ldr	r0, [r4, #72]
 2738              	.LVL245:
 2739 0058 FFF7FEFF 		bl	HAL_DMA_Abort
 2740              	.LVL246:
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2741              		.loc 1 1665 0
 2742 005c 2268     		ldr	r2, [r4]
 2743 005e 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccrAKW0M.s 			page 114


 2744 0060 23F00203 		bic	r3, r3, #2
 2745 0064 5360     		str	r3, [r2, #4]
 2746              	.L272:
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 2747              		.loc 1 1670 0
 2748 0066 019B     		ldr	r3, [sp, #4]
 2749 0068 5A1E     		subs	r2, r3, #1
 2750 006a 0192     		str	r2, [sp, #4]
 2751 006c 2BB1     		cbz	r3, .L274
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 2752              		.loc 1 1676 0
 2753 006e 2368     		ldr	r3, [r4]
 2754 0070 9B68     		ldr	r3, [r3, #8]
 2755 0072 13F0020F 		tst	r3, #2
 2756 0076 F6D0     		beq	.L272
 2757 0078 03E0     		b	.L270
 2758              	.L274:
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           break;
 2759              		.loc 1 1672 0
 2760 007a 636D     		ldr	r3, [r4, #84]
 2761 007c 43F02003 		orr	r3, r3, #32
 2762 0080 6365     		str	r3, [r4, #84]
 2763              	.L270:
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 2764              		.loc 1 1679 0
 2765 0082 E36C     		ldr	r3, [r4, #76]
 2766 0084 73B1     		cbz	r3, .L269
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       
 2767              		.loc 1 1683 0
 2768 0086 0022     		movs	r2, #0
 2769 0088 5A63     		str	r2, [r3, #52]
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2770              		.loc 1 1686 0
 2771 008a E06C     		ldr	r0, [r4, #76]
 2772 008c FFF7FEFF 		bl	HAL_DMA_Abort
 2773              	.LVL247:
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2774              		.loc 1 1689 0
 2775 0090 2268     		ldr	r2, [r4]
 2776 0092 1368     		ldr	r3, [r2]
 2777 0094 23F04003 		bic	r3, r3, #64
 2778 0098 1360     		str	r3, [r2]
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       
 2779              		.loc 1 1692 0
 2780 009a 2268     		ldr	r2, [r4]
 2781 009c 5368     		ldr	r3, [r2, #4]
 2782 009e 23F00103 		bic	r3, r3, #1
 2783 00a2 5360     		str	r3, [r2, #4]
 2784              	.L269:
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2785              		.loc 1 1697 0
 2786 00a4 0020     		movs	r0, #0
 2787 00a6 E087     		strh	r0, [r4, #62]	@ movhi
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2788              		.loc 1 1698 0
 2789 00a8 E086     		strh	r0, [r4, #54]	@ movhi
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccrAKW0M.s 			page 115


 2790              		.loc 1 1701 0
 2791 00aa 6065     		str	r0, [r4, #84]
 2792              	.LBB4:
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2793              		.loc 1 1704 0
 2794 00ac 0090     		str	r0, [sp]
 2795 00ae 2368     		ldr	r3, [r4]
 2796 00b0 DA68     		ldr	r2, [r3, #12]
 2797 00b2 0092     		str	r2, [sp]
 2798 00b4 9B68     		ldr	r3, [r3, #8]
 2799 00b6 0093     		str	r3, [sp]
 2800 00b8 009B     		ldr	r3, [sp]
 2801              	.LBE4:
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2802              		.loc 1 1707 0
 2803 00ba 0123     		movs	r3, #1
 2804 00bc 84F85130 		strb	r3, [r4, #81]
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2805              		.loc 1 1710 0
 2806 00c0 02B0     		add	sp, sp, #8
 2807              	.LCFI32:
 2808              		.cfi_def_cfa_offset 8
 2809              		@ sp needed
 2810 00c2 10BD     		pop	{r4, pc}
 2811              	.LVL248:
 2812              	.L276:
 2813              		.align	2
 2814              	.L275:
 2815 00c4 00000000 		.word	SystemCoreClock
 2816 00c8 F1197605 		.word	91625969
 2817 00cc 00000000 		.word	SPI_AbortTx_ISR
 2818 00d0 00000000 		.word	SPI_AbortRx_ISR
 2819              		.cfi_endproc
 2820              	.LFE77:
 2822              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 2823              		.align	1
 2824              		.global	HAL_SPI_DMAPause
 2825              		.syntax unified
 2826              		.thumb
 2827              		.thumb_func
 2828              		.fpu softvfp
 2830              	HAL_SPI_DMAPause:
 2831              	.LFB79:
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 2832              		.loc 1 1875 0
 2833              		.cfi_startproc
 2834              		@ args = 0, pretend = 0, frame = 0
 2835              		@ frame_needed = 0, uses_anonymous_args = 0
 2836              		@ link register save eliminated.
 2837              	.LVL249:
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2838              		.loc 1 1877 0
 2839 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2840 0004 012B     		cmp	r3, #1
 2841 0006 0CD0     		beq	.L279
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2842              		.loc 1 1877 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccrAKW0M.s 			page 116


 2843 0008 0123     		movs	r3, #1
 2844 000a 80F85030 		strb	r3, [r0, #80]
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2845              		.loc 1 1880 0 is_stmt 1 discriminator 2
 2846 000e 0268     		ldr	r2, [r0]
 2847 0010 5368     		ldr	r3, [r2, #4]
 2848 0012 23F00303 		bic	r3, r3, #3
 2849 0016 5360     		str	r3, [r2, #4]
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2850              		.loc 1 1883 0 discriminator 2
 2851 0018 0023     		movs	r3, #0
 2852 001a 80F85030 		strb	r3, [r0, #80]
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2853              		.loc 1 1885 0 discriminator 2
 2854 001e 1846     		mov	r0, r3
 2855              	.LVL250:
 2856 0020 7047     		bx	lr
 2857              	.LVL251:
 2858              	.L279:
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2859              		.loc 1 1877 0
 2860 0022 0220     		movs	r0, #2
 2861              	.LVL252:
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2862              		.loc 1 1886 0
 2863 0024 7047     		bx	lr
 2864              		.cfi_endproc
 2865              	.LFE79:
 2867              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 2868              		.align	1
 2869              		.global	HAL_SPI_DMAResume
 2870              		.syntax unified
 2871              		.thumb
 2872              		.thumb_func
 2873              		.fpu softvfp
 2875              	HAL_SPI_DMAResume:
 2876              	.LFB80:
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 2877              		.loc 1 1895 0
 2878              		.cfi_startproc
 2879              		@ args = 0, pretend = 0, frame = 0
 2880              		@ frame_needed = 0, uses_anonymous_args = 0
 2881              		@ link register save eliminated.
 2882              	.LVL253:
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2883              		.loc 1 1897 0
 2884 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2885 0004 012B     		cmp	r3, #1
 2886 0006 0CD0     		beq	.L282
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2887              		.loc 1 1897 0 is_stmt 0 discriminator 2
 2888 0008 0123     		movs	r3, #1
 2889 000a 80F85030 		strb	r3, [r0, #80]
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2890              		.loc 1 1900 0 is_stmt 1 discriminator 2
 2891 000e 0268     		ldr	r2, [r0]
 2892 0010 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccrAKW0M.s 			page 117


 2893 0012 43F00303 		orr	r3, r3, #3
 2894 0016 5360     		str	r3, [r2, #4]
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2895              		.loc 1 1903 0 discriminator 2
 2896 0018 0023     		movs	r3, #0
 2897 001a 80F85030 		strb	r3, [r0, #80]
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2898              		.loc 1 1905 0 discriminator 2
 2899 001e 1846     		mov	r0, r3
 2900              	.LVL254:
 2901 0020 7047     		bx	lr
 2902              	.LVL255:
 2903              	.L282:
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2904              		.loc 1 1897 0
 2905 0022 0220     		movs	r0, #2
 2906              	.LVL256:
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2907              		.loc 1 1906 0
 2908 0024 7047     		bx	lr
 2909              		.cfi_endproc
 2910              	.LFE80:
 2912              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 2913              		.align	1
 2914              		.global	HAL_SPI_DMAStop
 2915              		.syntax unified
 2916              		.thumb
 2917              		.thumb_func
 2918              		.fpu softvfp
 2920              	HAL_SPI_DMAStop:
 2921              	.LFB81:
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
 2922              		.loc 1 1915 0
 2923              		.cfi_startproc
 2924              		@ args = 0, pretend = 0, frame = 0
 2925              		@ frame_needed = 0, uses_anonymous_args = 0
 2926              	.LVL257:
 2927 0000 10B5     		push	{r4, lr}
 2928              	.LCFI33:
 2929              		.cfi_def_cfa_offset 8
 2930              		.cfi_offset 4, -8
 2931              		.cfi_offset 14, -4
 2932 0002 0446     		mov	r4, r0
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2933              		.loc 1 1923 0
 2934 0004 806C     		ldr	r0, [r0, #72]
 2935              	.LVL258:
 2936 0006 08B1     		cbz	r0, .L284
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2937              		.loc 1 1925 0
 2938 0008 FFF7FEFF 		bl	HAL_DMA_Abort
 2939              	.LVL259:
 2940              	.L284:
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2941              		.loc 1 1928 0
 2942 000c E06C     		ldr	r0, [r4, #76]
 2943 000e 08B1     		cbz	r0, .L285
ARM GAS  /tmp/ccrAKW0M.s 			page 118


1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2944              		.loc 1 1930 0
 2945 0010 FFF7FEFF 		bl	HAL_DMA_Abort
 2946              	.LVL260:
 2947              	.L285:
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 2948              		.loc 1 1934 0
 2949 0014 2268     		ldr	r2, [r4]
 2950 0016 5368     		ldr	r3, [r2, #4]
 2951 0018 23F00303 		bic	r3, r3, #3
 2952 001c 5360     		str	r3, [r2, #4]
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 2953              		.loc 1 1935 0
 2954 001e 0123     		movs	r3, #1
 2955 0020 84F85130 		strb	r3, [r4, #81]
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2956              		.loc 1 1937 0
 2957 0024 0020     		movs	r0, #0
 2958 0026 10BD     		pop	{r4, pc}
 2959              		.cfi_endproc
 2960              	.LFE81:
 2962              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 2963              		.align	1
 2964              		.weak	HAL_SPI_TxCpltCallback
 2965              		.syntax unified
 2966              		.thumb
 2967              		.thumb_func
 2968              		.fpu softvfp
 2970              	HAL_SPI_TxCpltCallback:
 2971              	.LFB83:
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 2972              		.loc 1 2035 0
 2973              		.cfi_startproc
 2974              		@ args = 0, pretend = 0, frame = 0
 2975              		@ frame_needed = 0, uses_anonymous_args = 0
 2976              		@ link register save eliminated.
 2977              	.LVL261:
 2978 0000 7047     		bx	lr
 2979              		.cfi_endproc
 2980              	.LFE83:
 2982              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 2983              		.align	1
 2984              		.weak	HAL_SPI_RxCpltCallback
 2985              		.syntax unified
 2986              		.thumb
 2987              		.thumb_func
 2988              		.fpu softvfp
 2990              	HAL_SPI_RxCpltCallback:
 2991              	.LFB84:
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 2992              		.loc 1 2050 0
 2993              		.cfi_startproc
 2994              		@ args = 0, pretend = 0, frame = 0
 2995              		@ frame_needed = 0, uses_anonymous_args = 0
 2996              		@ link register save eliminated.
 2997              	.LVL262:
 2998 0000 7047     		bx	lr
ARM GAS  /tmp/ccrAKW0M.s 			page 119


 2999              		.cfi_endproc
 3000              	.LFE84:
 3002              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 3003              		.align	1
 3004              		.weak	HAL_SPI_TxRxCpltCallback
 3005              		.syntax unified
 3006              		.thumb
 3007              		.thumb_func
 3008              		.fpu softvfp
 3010              	HAL_SPI_TxRxCpltCallback:
 3011              	.LFB85:
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3012              		.loc 1 2065 0
 3013              		.cfi_startproc
 3014              		@ args = 0, pretend = 0, frame = 0
 3015              		@ frame_needed = 0, uses_anonymous_args = 0
 3016              		@ link register save eliminated.
 3017              	.LVL263:
 3018 0000 7047     		bx	lr
 3019              		.cfi_endproc
 3020              	.LFE85:
 3022              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 3023              		.align	1
 3024              		.weak	HAL_SPI_TxHalfCpltCallback
 3025              		.syntax unified
 3026              		.thumb
 3027              		.thumb_func
 3028              		.fpu softvfp
 3030              	HAL_SPI_TxHalfCpltCallback:
 3031              	.LFB86:
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3032              		.loc 1 2080 0
 3033              		.cfi_startproc
 3034              		@ args = 0, pretend = 0, frame = 0
 3035              		@ frame_needed = 0, uses_anonymous_args = 0
 3036              		@ link register save eliminated.
 3037              	.LVL264:
 3038 0000 7047     		bx	lr
 3039              		.cfi_endproc
 3040              	.LFE86:
 3042              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 3043              		.align	1
 3044              		.syntax unified
 3045              		.thumb
 3046              		.thumb_func
 3047              		.fpu softvfp
 3049              	SPI_DMAHalfTransmitCplt:
 3050              	.LFB96:
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3051              		.loc 1 2409 0
 3052              		.cfi_startproc
 3053              		@ args = 0, pretend = 0, frame = 0
 3054              		@ frame_needed = 0, uses_anonymous_args = 0
 3055              	.LVL265:
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3056              		.loc 1 2409 0
 3057 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccrAKW0M.s 			page 120


 3058              	.LCFI34:
 3059              		.cfi_def_cfa_offset 8
 3060              		.cfi_offset 3, -8
 3061              		.cfi_offset 14, -4
 3062              	.LVL266:
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 3063              		.loc 1 2412 0
 3064 0002 406A     		ldr	r0, [r0, #36]
 3065              	.LVL267:
 3066 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
 3067              	.LVL268:
 3068 0008 08BD     		pop	{r3, pc}
 3069              		.cfi_endproc
 3070              	.LFE96:
 3072              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 3073              		.align	1
 3074              		.weak	HAL_SPI_RxHalfCpltCallback
 3075              		.syntax unified
 3076              		.thumb
 3077              		.thumb_func
 3078              		.fpu softvfp
 3080              	HAL_SPI_RxHalfCpltCallback:
 3081              	.LFB87:
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3082              		.loc 1 2095 0
 3083              		.cfi_startproc
 3084              		@ args = 0, pretend = 0, frame = 0
 3085              		@ frame_needed = 0, uses_anonymous_args = 0
 3086              		@ link register save eliminated.
 3087              	.LVL269:
 3088 0000 7047     		bx	lr
 3089              		.cfi_endproc
 3090              	.LFE87:
 3092              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 3093              		.align	1
 3094              		.syntax unified
 3095              		.thumb
 3096              		.thumb_func
 3097              		.fpu softvfp
 3099              	SPI_DMAHalfReceiveCplt:
 3100              	.LFB97:
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3101              		.loc 1 2422 0
 3102              		.cfi_startproc
 3103              		@ args = 0, pretend = 0, frame = 0
 3104              		@ frame_needed = 0, uses_anonymous_args = 0
 3105              	.LVL270:
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3106              		.loc 1 2422 0
 3107 0000 08B5     		push	{r3, lr}
 3108              	.LCFI35:
 3109              		.cfi_def_cfa_offset 8
 3110              		.cfi_offset 3, -8
 3111              		.cfi_offset 14, -4
 3112              	.LVL271:
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 3113              		.loc 1 2425 0
ARM GAS  /tmp/ccrAKW0M.s 			page 121


 3114 0002 406A     		ldr	r0, [r0, #36]
 3115              	.LVL272:
 3116 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 3117              	.LVL273:
 3118 0008 08BD     		pop	{r3, pc}
 3119              		.cfi_endproc
 3120              	.LFE97:
 3122              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 3123              		.align	1
 3124              		.weak	HAL_SPI_TxRxHalfCpltCallback
 3125              		.syntax unified
 3126              		.thumb
 3127              		.thumb_func
 3128              		.fpu softvfp
 3130              	HAL_SPI_TxRxHalfCpltCallback:
 3131              	.LFB88:
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3132              		.loc 1 2110 0
 3133              		.cfi_startproc
 3134              		@ args = 0, pretend = 0, frame = 0
 3135              		@ frame_needed = 0, uses_anonymous_args = 0
 3136              		@ link register save eliminated.
 3137              	.LVL274:
 3138 0000 7047     		bx	lr
 3139              		.cfi_endproc
 3140              	.LFE88:
 3142              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 3143              		.align	1
 3144              		.syntax unified
 3145              		.thumb
 3146              		.thumb_func
 3147              		.fpu softvfp
 3149              	SPI_DMAHalfTransmitReceiveCplt:
 3150              	.LFB98:
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3151              		.loc 1 2435 0
 3152              		.cfi_startproc
 3153              		@ args = 0, pretend = 0, frame = 0
 3154              		@ frame_needed = 0, uses_anonymous_args = 0
 3155              	.LVL275:
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3156              		.loc 1 2435 0
 3157 0000 08B5     		push	{r3, lr}
 3158              	.LCFI36:
 3159              		.cfi_def_cfa_offset 8
 3160              		.cfi_offset 3, -8
 3161              		.cfi_offset 14, -4
 3162              	.LVL276:
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 3163              		.loc 1 2438 0
 3164 0002 406A     		ldr	r0, [r0, #36]
 3165              	.LVL277:
 3166 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 3167              	.LVL278:
 3168 0008 08BD     		pop	{r3, pc}
 3169              		.cfi_endproc
 3170              	.LFE98:
ARM GAS  /tmp/ccrAKW0M.s 			page 122


 3172              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 3173              		.align	1
 3174              		.weak	HAL_SPI_ErrorCallback
 3175              		.syntax unified
 3176              		.thumb
 3177              		.thumb_func
 3178              		.fpu softvfp
 3180              	HAL_SPI_ErrorCallback:
 3181              	.LFB89:
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3182              		.loc 1 2125 0
 3183              		.cfi_startproc
 3184              		@ args = 0, pretend = 0, frame = 0
 3185              		@ frame_needed = 0, uses_anonymous_args = 0
 3186              		@ link register save eliminated.
 3187              	.LVL279:
 3188 0000 7047     		bx	lr
 3189              		.cfi_endproc
 3190              	.LFE89:
 3192              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 3193              		.align	1
 3194              		.syntax unified
 3195              		.thumb
 3196              		.thumb_func
 3197              		.fpu softvfp
 3199              	SPI_CloseTx_ISR:
 3200              	.LFB115:
3139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
 3201              		.loc 1 3139 0
 3202              		.cfi_startproc
 3203              		@ args = 0, pretend = 0, frame = 8
 3204              		@ frame_needed = 0, uses_anonymous_args = 0
 3205              	.LVL280:
3139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
 3206              		.loc 1 3139 0
 3207 0000 10B5     		push	{r4, lr}
 3208              	.LCFI37:
 3209              		.cfi_def_cfa_offset 8
 3210              		.cfi_offset 4, -8
 3211              		.cfi_offset 14, -4
 3212 0002 82B0     		sub	sp, sp, #8
 3213              	.LCFI38:
 3214              		.cfi_def_cfa_offset 16
 3215 0004 0446     		mov	r4, r0
 3216              	.LVL281:
3141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3217              		.loc 1 3141 0
 3218 0006 204B     		ldr	r3, .L311
 3219 0008 1B68     		ldr	r3, [r3]
 3220 000a 204A     		ldr	r2, .L311+4
 3221 000c A2FB0323 		umull	r2, r3, r2, r3
 3222 0010 5B0A     		lsrs	r3, r3, #9
 3223 0012 6422     		movs	r2, #100
 3224 0014 02FB03F3 		mul	r3, r2, r3
 3225 0018 0193     		str	r3, [sp, #4]
3144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3226              		.loc 1 3144 0
ARM GAS  /tmp/ccrAKW0M.s 			page 123


 3227 001a FFF7FEFF 		bl	HAL_GetTick
 3228              	.LVL282:
 3229 001e 0246     		mov	r2, r0
 3230              	.LVL283:
 3231              	.L303:
3149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3232              		.loc 1 3149 0
 3233 0020 019B     		ldr	r3, [sp, #4]
 3234 0022 591E     		subs	r1, r3, #1
 3235 0024 0191     		str	r1, [sp, #4]
 3236 0026 2BB1     		cbz	r3, .L309
3155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3237              		.loc 1 3155 0
 3238 0028 2368     		ldr	r3, [r4]
 3239 002a 9B68     		ldr	r3, [r3, #8]
 3240 002c 13F0020F 		tst	r3, #2
 3241 0030 F6D0     		beq	.L303
 3242 0032 03E0     		b	.L302
 3243              	.L309:
3151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 3244              		.loc 1 3151 0
 3245 0034 636D     		ldr	r3, [r4, #84]
 3246 0036 43F02003 		orr	r3, r3, #32
 3247 003a 6365     		str	r3, [r4, #84]
 3248              	.L302:
3158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3249              		.loc 1 3158 0
 3250 003c 2168     		ldr	r1, [r4]
 3251 003e 4B68     		ldr	r3, [r1, #4]
 3252 0040 23F0A003 		bic	r3, r3, #160
 3253 0044 4B60     		str	r3, [r1, #4]
3161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3254              		.loc 1 3161 0
 3255 0046 6421     		movs	r1, #100
 3256 0048 2046     		mov	r0, r4
 3257              	.LVL284:
 3258 004a FFF7FEFF 		bl	SPI_CheckFlag_BSY
 3259              	.LVL285:
 3260 004e 18B1     		cbz	r0, .L304
3163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3261              		.loc 1 3163 0
 3262 0050 636D     		ldr	r3, [r4, #84]
 3263 0052 43F02003 		orr	r3, r3, #32
 3264 0056 6365     		str	r3, [r4, #84]
 3265              	.L304:
3167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3266              		.loc 1 3167 0
 3267 0058 A368     		ldr	r3, [r4, #8]
 3268 005a 33B9     		cbnz	r3, .L305
 3269              	.LBB5:
3169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3270              		.loc 1 3169 0
 3271 005c 0093     		str	r3, [sp]
 3272 005e 2368     		ldr	r3, [r4]
 3273 0060 DA68     		ldr	r2, [r3, #12]
 3274 0062 0092     		str	r2, [sp]
 3275 0064 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccrAKW0M.s 			page 124


 3276 0066 0093     		str	r3, [sp]
 3277 0068 009B     		ldr	r3, [sp]
 3278              	.L305:
 3279              	.LBE5:
3172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 3280              		.loc 1 3172 0
 3281 006a 0123     		movs	r3, #1
 3282 006c 84F85130 		strb	r3, [r4, #81]
3173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3283              		.loc 1 3173 0
 3284 0070 636D     		ldr	r3, [r4, #84]
 3285 0072 23B9     		cbnz	r3, .L310
3179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3286              		.loc 1 3179 0
 3287 0074 2046     		mov	r0, r4
 3288 0076 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 3289              	.LVL286:
 3290              	.L300:
3181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3291              		.loc 1 3181 0
 3292 007a 02B0     		add	sp, sp, #8
 3293              	.LCFI39:
 3294              		.cfi_remember_state
 3295              		.cfi_def_cfa_offset 8
 3296              		@ sp needed
 3297 007c 10BD     		pop	{r4, pc}
 3298              	.LVL287:
 3299              	.L310:
 3300              	.LCFI40:
 3301              		.cfi_restore_state
3175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3302              		.loc 1 3175 0
 3303 007e 2046     		mov	r0, r4
 3304 0080 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3305              	.LVL288:
 3306 0084 F9E7     		b	.L300
 3307              	.L312:
 3308 0086 00BF     		.align	2
 3309              	.L311:
 3310 0088 00000000 		.word	SystemCoreClock
 3311 008c F1197605 		.word	91625969
 3312              		.cfi_endproc
 3313              	.LFE115:
 3315              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 3316              		.align	1
 3317              		.syntax unified
 3318              		.thumb
 3319              		.thumb_func
 3320              		.fpu softvfp
 3322              	SPI_TxISR_8BIT:
 3323              	.LFB109:
2876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 3324              		.loc 1 2876 0
 3325              		.cfi_startproc
 3326              		@ args = 0, pretend = 0, frame = 0
 3327              		@ frame_needed = 0, uses_anonymous_args = 0
 3328              	.LVL289:
ARM GAS  /tmp/ccrAKW0M.s 			page 125


 3329 0000 08B5     		push	{r3, lr}
 3330              	.LCFI41:
 3331              		.cfi_def_cfa_offset 8
 3332              		.cfi_offset 3, -8
 3333              		.cfi_offset 14, -4
2877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 3334              		.loc 1 2877 0
 3335 0002 0268     		ldr	r2, [r0]
 3336 0004 036B     		ldr	r3, [r0, #48]
 3337 0006 591C     		adds	r1, r3, #1
 3338 0008 0163     		str	r1, [r0, #48]
 3339 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3340 000c 1373     		strb	r3, [r2, #12]
2878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3341              		.loc 1 2878 0
 3342 000e C38E     		ldrh	r3, [r0, #54]
 3343 0010 9BB2     		uxth	r3, r3
 3344 0012 013B     		subs	r3, r3, #1
 3345 0014 9BB2     		uxth	r3, r3
 3346 0016 C386     		strh	r3, [r0, #54]	@ movhi
2880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3347              		.loc 1 2880 0
 3348 0018 C38E     		ldrh	r3, [r0, #54]
 3349 001a 9BB2     		uxth	r3, r3
 3350 001c 03B1     		cbz	r3, .L316
 3351              	.LVL290:
 3352              	.L313:
 3353 001e 08BD     		pop	{r3, pc}
 3354              	.LVL291:
 3355              	.L316:
2889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3356              		.loc 1 2889 0
 3357 0020 FFF7FEFF 		bl	SPI_CloseTx_ISR
 3358              	.LVL292:
2891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3359              		.loc 1 2891 0
 3360 0024 FBE7     		b	.L313
 3361              		.cfi_endproc
 3362              	.LFE109:
 3364              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 3365              		.align	1
 3366              		.syntax unified
 3367              		.thumb
 3368              		.thumb_func
 3369              		.fpu softvfp
 3371              	SPI_TxISR_16BIT:
 3372              	.LFB110:
2900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 3373              		.loc 1 2900 0
 3374              		.cfi_startproc
 3375              		@ args = 0, pretend = 0, frame = 0
 3376              		@ frame_needed = 0, uses_anonymous_args = 0
 3377              	.LVL293:
 3378 0000 08B5     		push	{r3, lr}
 3379              	.LCFI42:
 3380              		.cfi_def_cfa_offset 8
 3381              		.cfi_offset 3, -8
ARM GAS  /tmp/ccrAKW0M.s 			page 126


 3382              		.cfi_offset 14, -4
2902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 3383              		.loc 1 2902 0
 3384 0002 0368     		ldr	r3, [r0]
 3385 0004 026B     		ldr	r2, [r0, #48]
 3386 0006 1288     		ldrh	r2, [r2]
 3387 0008 DA60     		str	r2, [r3, #12]
2903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 3388              		.loc 1 2903 0
 3389 000a 036B     		ldr	r3, [r0, #48]
 3390 000c 0233     		adds	r3, r3, #2
 3391 000e 0363     		str	r3, [r0, #48]
2904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3392              		.loc 1 2904 0
 3393 0010 C38E     		ldrh	r3, [r0, #54]
 3394 0012 9BB2     		uxth	r3, r3
 3395 0014 013B     		subs	r3, r3, #1
 3396 0016 9BB2     		uxth	r3, r3
 3397 0018 C386     		strh	r3, [r0, #54]	@ movhi
2906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3398              		.loc 1 2906 0
 3399 001a C38E     		ldrh	r3, [r0, #54]
 3400 001c 9BB2     		uxth	r3, r3
 3401 001e 03B1     		cbz	r3, .L320
 3402              	.LVL294:
 3403              	.L317:
 3404 0020 08BD     		pop	{r3, pc}
 3405              	.LVL295:
 3406              	.L320:
2915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3407              		.loc 1 2915 0
 3408 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 3409              	.LVL296:
2917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3410              		.loc 1 2917 0
 3411 0026 FBE7     		b	.L317
 3412              		.cfi_endproc
 3413              	.LFE110:
 3415              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 3416              		.align	1
 3417              		.syntax unified
 3418              		.thumb
 3419              		.thumb_func
 3420              		.fpu softvfp
 3422              	SPI_CloseRx_ISR:
 3423              	.LFB114:
3079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable RXNE and ERR interrupt */
 3424              		.loc 1 3079 0
 3425              		.cfi_startproc
 3426              		@ args = 0, pretend = 0, frame = 8
 3427              		@ frame_needed = 0, uses_anonymous_args = 0
 3428              	.LVL297:
 3429 0000 00B5     		push	{lr}
 3430              	.LCFI43:
 3431              		.cfi_def_cfa_offset 4
 3432              		.cfi_offset 14, -4
 3433 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccrAKW0M.s 			page 127


 3434              	.LCFI44:
 3435              		.cfi_def_cfa_offset 16
3081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3436              		.loc 1 3081 0
 3437 0004 0268     		ldr	r2, [r0]
 3438 0006 5368     		ldr	r3, [r2, #4]
 3439 0008 23F06003 		bic	r3, r3, #96
 3440 000c 5360     		str	r3, [r2, #4]
3084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3441              		.loc 1 3084 0
 3442 000e 4368     		ldr	r3, [r0, #4]
 3443 0010 B3F5827F 		cmp	r3, #260
 3444 0014 12D0     		beq	.L328
 3445              	.L322:
3091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3446              		.loc 1 3091 0
 3447 0016 8368     		ldr	r3, [r0, #8]
 3448 0018 33B9     		cbnz	r3, .L324
 3449              	.LBB6:
3093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 3450              		.loc 1 3093 0
 3451 001a 0193     		str	r3, [sp, #4]
 3452 001c 0368     		ldr	r3, [r0]
 3453 001e DA68     		ldr	r2, [r3, #12]
 3454 0020 0192     		str	r2, [sp, #4]
 3455 0022 9B68     		ldr	r3, [r3, #8]
 3456 0024 0193     		str	r3, [sp, #4]
 3457 0026 019B     		ldr	r3, [sp, #4]
 3458              	.L324:
 3459              	.LBE6:
3095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3460              		.loc 1 3095 0
 3461 0028 0123     		movs	r3, #1
 3462 002a 80F85130 		strb	r3, [r0, #81]
3119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 3463              		.loc 1 3119 0
 3464 002e 436D     		ldr	r3, [r0, #84]
 3465 0030 8BB1     		cbz	r3, .L329
3125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 3466              		.loc 1 3125 0
 3467 0032 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3468              	.LVL298:
 3469              	.L321:
3130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3470              		.loc 1 3130 0
 3471 0036 03B0     		add	sp, sp, #12
 3472              	.LCFI45:
 3473              		.cfi_remember_state
 3474              		.cfi_def_cfa_offset 4
 3475              		@ sp needed
 3476 0038 5DF804FB 		ldr	pc, [sp], #4
 3477              	.LVL299:
 3478              	.L328:
 3479              	.LCFI46:
 3480              		.cfi_restore_state
3084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3481              		.loc 1 3084 0 discriminator 1
ARM GAS  /tmp/ccrAKW0M.s 			page 128


 3482 003c 8368     		ldr	r3, [r0, #8]
 3483 003e B3F5004F 		cmp	r3, #32768
 3484 0042 02D0     		beq	.L323
3084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3485              		.loc 1 3084 0 is_stmt 0 discriminator 2
 3486 0044 B3F5806F 		cmp	r3, #1024
 3487 0048 E5D1     		bne	.L322
 3488              	.L323:
3087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 3489              		.loc 1 3087 0 is_stmt 1
 3490 004a 0268     		ldr	r2, [r0]
 3491 004c 1368     		ldr	r3, [r2]
 3492 004e 23F04003 		bic	r3, r3, #64
 3493 0052 1360     		str	r3, [r2]
 3494 0054 DFE7     		b	.L322
 3495              	.L329:
3121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 3496              		.loc 1 3121 0
 3497 0056 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 3498              	.LVL300:
 3499 005a ECE7     		b	.L321
 3500              		.cfi_endproc
 3501              	.LFE114:
 3503              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 3504              		.align	1
 3505              		.syntax unified
 3506              		.thumb
 3507              		.thumb_func
 3508              		.fpu softvfp
 3510              	SPI_RxISR_8BIT:
 3511              	.LFB107:
2787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *hspi->pRxBuffPtr++ = (*(__IO uint8_t *)&hspi->Instance->DR);
 3512              		.loc 1 2787 0
 3513              		.cfi_startproc
 3514              		@ args = 0, pretend = 0, frame = 0
 3515              		@ frame_needed = 0, uses_anonymous_args = 0
 3516              	.LVL301:
 3517 0000 08B5     		push	{r3, lr}
 3518              	.LCFI47:
 3519              		.cfi_def_cfa_offset 8
 3520              		.cfi_offset 3, -8
 3521              		.cfi_offset 14, -4
2788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 3522              		.loc 1 2788 0
 3523 0002 836B     		ldr	r3, [r0, #56]
 3524 0004 5A1C     		adds	r2, r3, #1
 3525 0006 8263     		str	r2, [r0, #56]
 3526 0008 0268     		ldr	r2, [r0]
 3527 000a 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 3528 000c 1A70     		strb	r2, [r3]
2789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3529              		.loc 1 2789 0
 3530 000e C38F     		ldrh	r3, [r0, #62]
 3531 0010 9BB2     		uxth	r3, r3
 3532 0012 013B     		subs	r3, r3, #1
 3533 0014 9BB2     		uxth	r3, r3
 3534 0016 C387     		strh	r3, [r0, #62]	@ movhi
ARM GAS  /tmp/ccrAKW0M.s 			page 129


2799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3535              		.loc 1 2799 0
 3536 0018 C38F     		ldrh	r3, [r0, #62]
 3537 001a 9BB2     		uxth	r3, r3
 3538 001c 03B1     		cbz	r3, .L333
 3539              	.LVL302:
 3540              	.L330:
 3541 001e 08BD     		pop	{r3, pc}
 3542              	.LVL303:
 3543              	.L333:
2808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3544              		.loc 1 2808 0
 3545 0020 FFF7FEFF 		bl	SPI_CloseRx_ISR
 3546              	.LVL304:
2810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3547              		.loc 1 2810 0
 3548 0024 FBE7     		b	.L330
 3549              		.cfi_endproc
 3550              	.LFE107:
 3552              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 3553              		.align	1
 3554              		.syntax unified
 3555              		.thumb
 3556              		.thumb_func
 3557              		.fpu softvfp
 3559              	SPI_RxISR_16BIT:
 3560              	.LFB108:
2843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 3561              		.loc 1 2843 0
 3562              		.cfi_startproc
 3563              		@ args = 0, pretend = 0, frame = 0
 3564              		@ frame_needed = 0, uses_anonymous_args = 0
 3565              	.LVL305:
 3566 0000 08B5     		push	{r3, lr}
 3567              	.LCFI48:
 3568              		.cfi_def_cfa_offset 8
 3569              		.cfi_offset 3, -8
 3570              		.cfi_offset 14, -4
2844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 3571              		.loc 1 2844 0
 3572 0002 836B     		ldr	r3, [r0, #56]
 3573 0004 0268     		ldr	r2, [r0]
 3574 0006 D268     		ldr	r2, [r2, #12]
 3575 0008 1A80     		strh	r2, [r3]	@ movhi
2845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 3576              		.loc 1 2845 0
 3577 000a 836B     		ldr	r3, [r0, #56]
 3578 000c 0233     		adds	r3, r3, #2
 3579 000e 8363     		str	r3, [r0, #56]
2846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3580              		.loc 1 2846 0
 3581 0010 C38F     		ldrh	r3, [r0, #62]
 3582 0012 9BB2     		uxth	r3, r3
 3583 0014 013B     		subs	r3, r3, #1
 3584 0016 9BB2     		uxth	r3, r3
 3585 0018 C387     		strh	r3, [r0, #62]	@ movhi
2856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccrAKW0M.s 			page 130


 3586              		.loc 1 2856 0
 3587 001a C38F     		ldrh	r3, [r0, #62]
 3588 001c 9BB2     		uxth	r3, r3
 3589 001e 03B1     		cbz	r3, .L337
 3590              	.LVL306:
 3591              	.L334:
 3592 0020 08BD     		pop	{r3, pc}
 3593              	.LVL307:
 3594              	.L337:
2865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3595              		.loc 1 2865 0
 3596 0022 FFF7FEFF 		bl	SPI_CloseRx_ISR
 3597              	.LVL308:
2867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3598              		.loc 1 2867 0
 3599 0026 FBE7     		b	.L334
 3600              		.cfi_endproc
 3601              	.LFE108:
 3603              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 3604              		.align	1
 3605              		.syntax unified
 3606              		.thumb
 3607              		.thumb_func
 3608              		.fpu softvfp
 3610              	SPI_CloseRxTx_ISR:
 3611              	.LFB113:
2994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
 3612              		.loc 1 2994 0
 3613              		.cfi_startproc
 3614              		@ args = 0, pretend = 0, frame = 8
 3615              		@ frame_needed = 0, uses_anonymous_args = 0
 3616              	.LVL309:
 3617 0000 10B5     		push	{r4, lr}
 3618              	.LCFI49:
 3619              		.cfi_def_cfa_offset 8
 3620              		.cfi_offset 4, -8
 3621              		.cfi_offset 14, -4
 3622 0002 82B0     		sub	sp, sp, #8
 3623              	.LCFI50:
 3624              		.cfi_def_cfa_offset 16
 3625 0004 0446     		mov	r4, r0
 3626              	.LVL310:
2996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
 3627              		.loc 1 2996 0
 3628 0006 274B     		ldr	r3, .L350
 3629 0008 1B68     		ldr	r3, [r3]
 3630 000a 274A     		ldr	r2, .L350+4
 3631 000c A2FB0323 		umull	r2, r3, r2, r3
 3632 0010 5B0A     		lsrs	r3, r3, #9
 3633 0012 6422     		movs	r2, #100
 3634 0014 02FB03F3 		mul	r3, r2, r3
 3635 0018 0193     		str	r3, [sp, #4]
2998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3636              		.loc 1 2998 0
 3637 001a FFF7FEFF 		bl	HAL_GetTick
 3638              	.LVL311:
 3639 001e 0246     		mov	r2, r0
ARM GAS  /tmp/ccrAKW0M.s 			page 131


 3640              	.LVL312:
3001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3641              		.loc 1 3001 0
 3642 0020 2168     		ldr	r1, [r4]
 3643 0022 4B68     		ldr	r3, [r1, #4]
 3644 0024 23F02003 		bic	r3, r3, #32
 3645 0028 4B60     		str	r3, [r1, #4]
 3646              	.L341:
3006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3647              		.loc 1 3006 0
 3648 002a 019B     		ldr	r3, [sp, #4]
 3649 002c 591E     		subs	r1, r3, #1
 3650 002e 0191     		str	r1, [sp, #4]
 3651 0030 2BB1     		cbz	r3, .L348
3012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
 3652              		.loc 1 3012 0
 3653 0032 2368     		ldr	r3, [r4]
 3654 0034 9B68     		ldr	r3, [r3, #8]
 3655 0036 13F0020F 		tst	r3, #2
 3656 003a F6D0     		beq	.L341
 3657 003c 03E0     		b	.L340
 3658              	.L348:
3008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 3659              		.loc 1 3008 0
 3660 003e 636D     		ldr	r3, [r4, #84]
 3661 0040 43F02003 		orr	r3, r3, #32
 3662 0044 6365     		str	r3, [r4, #84]
 3663              	.L340:
3015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3664              		.loc 1 3015 0
 3665 0046 6421     		movs	r1, #100
 3666 0048 2046     		mov	r0, r4
 3667              	.LVL313:
 3668 004a FFF7FEFF 		bl	SPI_CheckFlag_BSY
 3669              	.LVL314:
 3670 004e 18B1     		cbz	r0, .L342
3017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3671              		.loc 1 3017 0
 3672 0050 636D     		ldr	r3, [r4, #84]
 3673 0052 43F02003 		orr	r3, r3, #32
 3674 0056 6365     		str	r3, [r4, #84]
 3675              	.L342:
3021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3676              		.loc 1 3021 0
 3677 0058 A368     		ldr	r3, [r4, #8]
 3678 005a 33B9     		cbnz	r3, .L343
 3679              	.LBB7:
3023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3680              		.loc 1 3023 0
 3681 005c 0093     		str	r3, [sp]
 3682 005e 2368     		ldr	r3, [r4]
 3683 0060 DA68     		ldr	r2, [r3, #12]
 3684 0062 0092     		str	r2, [sp]
 3685 0064 9B68     		ldr	r3, [r3, #8]
 3686 0066 0093     		str	r3, [sp]
 3687 0068 009B     		ldr	r3, [sp]
 3688              	.L343:
ARM GAS  /tmp/ccrAKW0M.s 			page 132


 3689              	.LBE7:
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3690              		.loc 1 3049 0
 3691 006a 636D     		ldr	r3, [r4, #84]
 3692 006c 9BB9     		cbnz	r3, .L344
3051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 3693              		.loc 1 3051 0
 3694 006e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 3695 0072 DBB2     		uxtb	r3, r3
 3696 0074 042B     		cmp	r3, #4
 3697 0076 07D0     		beq	.L349
3058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
 3698              		.loc 1 3058 0
 3699 0078 0123     		movs	r3, #1
 3700 007a 84F85130 		strb	r3, [r4, #81]
3059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 3701              		.loc 1 3059 0
 3702 007e 2046     		mov	r0, r4
 3703 0080 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 3704              	.LVL315:
 3705              	.L338:
3070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3706              		.loc 1 3070 0
 3707 0084 02B0     		add	sp, sp, #8
 3708              	.LCFI51:
 3709              		.cfi_remember_state
 3710              		.cfi_def_cfa_offset 8
 3711              		@ sp needed
 3712 0086 10BD     		pop	{r4, pc}
 3713              	.LVL316:
 3714              	.L349:
 3715              	.LCFI52:
 3716              		.cfi_restore_state
3053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
 3717              		.loc 1 3053 0
 3718 0088 0123     		movs	r3, #1
 3719 008a 84F85130 		strb	r3, [r4, #81]
3054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 3720              		.loc 1 3054 0
 3721 008e 2046     		mov	r0, r4
 3722 0090 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 3723              	.LVL317:
 3724 0094 F6E7     		b	.L338
 3725              	.L344:
3064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 3726              		.loc 1 3064 0
 3727 0096 0123     		movs	r3, #1
 3728 0098 84F85130 		strb	r3, [r4, #81]
3065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 3729              		.loc 1 3065 0
 3730 009c 2046     		mov	r0, r4
 3731 009e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3732              	.LVL318:
3070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3733              		.loc 1 3070 0
 3734 00a2 EFE7     		b	.L338
 3735              	.L351:
ARM GAS  /tmp/ccrAKW0M.s 			page 133


 3736              		.align	2
 3737              	.L350:
 3738 00a4 00000000 		.word	SystemCoreClock
 3739 00a8 F1197605 		.word	91625969
 3740              		.cfi_endproc
 3741              	.LFE113:
 3743              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 3744              		.align	1
 3745              		.syntax unified
 3746              		.thumb
 3747              		.thumb_func
 3748              		.fpu softvfp
 3750              	SPI_2linesTxISR_8BIT:
 3751              	.LFB104:
2640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 3752              		.loc 1 2640 0
 3753              		.cfi_startproc
 3754              		@ args = 0, pretend = 0, frame = 0
 3755              		@ frame_needed = 0, uses_anonymous_args = 0
 3756              	.LVL319:
 3757 0000 08B5     		push	{r3, lr}
 3758              	.LCFI53:
 3759              		.cfi_def_cfa_offset 8
 3760              		.cfi_offset 3, -8
 3761              		.cfi_offset 14, -4
2641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 3762              		.loc 1 2641 0
 3763 0002 0268     		ldr	r2, [r0]
 3764 0004 036B     		ldr	r3, [r0, #48]
 3765 0006 591C     		adds	r1, r3, #1
 3766 0008 0163     		str	r1, [r0, #48]
 3767 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3768 000c 1373     		strb	r3, [r2, #12]
2642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3769              		.loc 1 2642 0
 3770 000e C38E     		ldrh	r3, [r0, #54]
 3771 0010 9BB2     		uxth	r3, r3
 3772 0012 013B     		subs	r3, r3, #1
 3773 0014 9BB2     		uxth	r3, r3
 3774 0016 C386     		strh	r3, [r0, #54]	@ movhi
2645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3775              		.loc 1 2645 0
 3776 0018 C38E     		ldrh	r3, [r0, #54]
 3777 001a 9BB2     		uxth	r3, r3
 3778 001c 3BB9     		cbnz	r3, .L352
2657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3779              		.loc 1 2657 0
 3780 001e 0268     		ldr	r2, [r0]
 3781 0020 5368     		ldr	r3, [r2, #4]
 3782 0022 23F08003 		bic	r3, r3, #128
 3783 0026 5360     		str	r3, [r2, #4]
2659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3784              		.loc 1 2659 0
 3785 0028 C38F     		ldrh	r3, [r0, #62]
 3786 002a 9BB2     		uxth	r3, r3
 3787 002c 03B1     		cbz	r3, .L355
 3788              	.LVL320:
ARM GAS  /tmp/ccrAKW0M.s 			page 134


 3789              	.L352:
 3790 002e 08BD     		pop	{r3, pc}
 3791              	.LVL321:
 3792              	.L355:
2661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 3793              		.loc 1 2661 0
 3794 0030 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 3795              	.LVL322:
2664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3796              		.loc 1 2664 0
 3797 0034 FBE7     		b	.L352
 3798              		.cfi_endproc
 3799              	.LFE104:
 3801              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 3802              		.align	1
 3803              		.syntax unified
 3804              		.thumb
 3805              		.thumb_func
 3806              		.fpu softvfp
 3808              	SPI_2linesRxISR_8BIT:
 3809              	.LFB103:
2579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 8bit mode */
 3810              		.loc 1 2579 0
 3811              		.cfi_startproc
 3812              		@ args = 0, pretend = 0, frame = 0
 3813              		@ frame_needed = 0, uses_anonymous_args = 0
 3814              	.LVL323:
 3815 0000 08B5     		push	{r3, lr}
 3816              	.LCFI54:
 3817              		.cfi_def_cfa_offset 8
 3818              		.cfi_offset 3, -8
 3819              		.cfi_offset 14, -4
2581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 3820              		.loc 1 2581 0
 3821 0002 836B     		ldr	r3, [r0, #56]
 3822 0004 5A1C     		adds	r2, r3, #1
 3823 0006 8263     		str	r2, [r0, #56]
 3824 0008 0268     		ldr	r2, [r0]
 3825 000a 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 3826 000c 1A70     		strb	r2, [r3]
2582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3827              		.loc 1 2582 0
 3828 000e C38F     		ldrh	r3, [r0, #62]
 3829 0010 9BB2     		uxth	r3, r3
 3830 0012 013B     		subs	r3, r3, #1
 3831 0014 9BB2     		uxth	r3, r3
 3832 0016 C387     		strh	r3, [r0, #62]	@ movhi
2585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3833              		.loc 1 2585 0
 3834 0018 C38F     		ldrh	r3, [r0, #62]
 3835 001a 9BB2     		uxth	r3, r3
 3836 001c 3BB9     		cbnz	r3, .L356
2596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3837              		.loc 1 2596 0
 3838 001e 0268     		ldr	r2, [r0]
 3839 0020 5368     		ldr	r3, [r2, #4]
 3840 0022 23F06003 		bic	r3, r3, #96
ARM GAS  /tmp/ccrAKW0M.s 			page 135


 3841 0026 5360     		str	r3, [r2, #4]
2598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3842              		.loc 1 2598 0
 3843 0028 C38E     		ldrh	r3, [r0, #54]
 3844 002a 9BB2     		uxth	r3, r3
 3845 002c 03B1     		cbz	r3, .L359
 3846              	.LVL324:
 3847              	.L356:
 3848 002e 08BD     		pop	{r3, pc}
 3849              	.LVL325:
 3850              	.L359:
2600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 3851              		.loc 1 2600 0
 3852 0030 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 3853              	.LVL326:
2603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3854              		.loc 1 2603 0
 3855 0034 FBE7     		b	.L356
 3856              		.cfi_endproc
 3857              	.LFE103:
 3859              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 3860              		.align	1
 3861              		.syntax unified
 3862              		.thumb
 3863              		.thumb_func
 3864              		.fpu softvfp
 3866              	SPI_2linesTxISR_16BIT:
 3867              	.LFB106:
2731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 3868              		.loc 1 2731 0
 3869              		.cfi_startproc
 3870              		@ args = 0, pretend = 0, frame = 0
 3871              		@ frame_needed = 0, uses_anonymous_args = 0
 3872              	.LVL327:
 3873 0000 08B5     		push	{r3, lr}
 3874              	.LCFI55:
 3875              		.cfi_def_cfa_offset 8
 3876              		.cfi_offset 3, -8
 3877              		.cfi_offset 14, -4
2733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 3878              		.loc 1 2733 0
 3879 0002 0368     		ldr	r3, [r0]
 3880 0004 026B     		ldr	r2, [r0, #48]
 3881 0006 1288     		ldrh	r2, [r2]
 3882 0008 DA60     		str	r2, [r3, #12]
2734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 3883              		.loc 1 2734 0
 3884 000a 036B     		ldr	r3, [r0, #48]
 3885 000c 0233     		adds	r3, r3, #2
 3886 000e 0363     		str	r3, [r0, #48]
2735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3887              		.loc 1 2735 0
 3888 0010 C38E     		ldrh	r3, [r0, #54]
 3889 0012 9BB2     		uxth	r3, r3
 3890 0014 013B     		subs	r3, r3, #1
 3891 0016 9BB2     		uxth	r3, r3
 3892 0018 C386     		strh	r3, [r0, #54]	@ movhi
ARM GAS  /tmp/ccrAKW0M.s 			page 136


2738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3893              		.loc 1 2738 0
 3894 001a C38E     		ldrh	r3, [r0, #54]
 3895 001c 9BB2     		uxth	r3, r3
 3896 001e 3BB9     		cbnz	r3, .L360
2750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3897              		.loc 1 2750 0
 3898 0020 0268     		ldr	r2, [r0]
 3899 0022 5368     		ldr	r3, [r2, #4]
 3900 0024 23F08003 		bic	r3, r3, #128
 3901 0028 5360     		str	r3, [r2, #4]
2752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3902              		.loc 1 2752 0
 3903 002a C38F     		ldrh	r3, [r0, #62]
 3904 002c 9BB2     		uxth	r3, r3
 3905 002e 03B1     		cbz	r3, .L363
 3906              	.LVL328:
 3907              	.L360:
 3908 0030 08BD     		pop	{r3, pc}
 3909              	.LVL329:
 3910              	.L363:
2754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 3911              		.loc 1 2754 0
 3912 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 3913              	.LVL330:
2757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3914              		.loc 1 2757 0
 3915 0036 FBE7     		b	.L360
 3916              		.cfi_endproc
 3917              	.LFE106:
 3919              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 3920              		.align	1
 3921              		.syntax unified
 3922              		.thumb
 3923              		.thumb_func
 3924              		.fpu softvfp
 3926              	SPI_2linesRxISR_16BIT:
 3927              	.LFB105:
2673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
 3928              		.loc 1 2673 0
 3929              		.cfi_startproc
 3930              		@ args = 0, pretend = 0, frame = 0
 3931              		@ frame_needed = 0, uses_anonymous_args = 0
 3932              	.LVL331:
 3933 0000 08B5     		push	{r3, lr}
 3934              	.LCFI56:
 3935              		.cfi_def_cfa_offset 8
 3936              		.cfi_offset 3, -8
 3937              		.cfi_offset 14, -4
2675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 3938              		.loc 1 2675 0
 3939 0002 836B     		ldr	r3, [r0, #56]
 3940 0004 0268     		ldr	r2, [r0]
 3941 0006 D268     		ldr	r2, [r2, #12]
 3942 0008 1A80     		strh	r2, [r3]	@ movhi
2676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 3943              		.loc 1 2676 0
ARM GAS  /tmp/ccrAKW0M.s 			page 137


 3944 000a 836B     		ldr	r3, [r0, #56]
 3945 000c 0233     		adds	r3, r3, #2
 3946 000e 8363     		str	r3, [r0, #56]
2677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3947              		.loc 1 2677 0
 3948 0010 C38F     		ldrh	r3, [r0, #62]
 3949 0012 9BB2     		uxth	r3, r3
 3950 0014 013B     		subs	r3, r3, #1
 3951 0016 9BB2     		uxth	r3, r3
 3952 0018 C387     		strh	r3, [r0, #62]	@ movhi
2679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3953              		.loc 1 2679 0
 3954 001a C38F     		ldrh	r3, [r0, #62]
 3955 001c 9BB2     		uxth	r3, r3
 3956 001e 3BB9     		cbnz	r3, .L364
2690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3957              		.loc 1 2690 0
 3958 0020 0268     		ldr	r2, [r0]
 3959 0022 5368     		ldr	r3, [r2, #4]
 3960 0024 23F04003 		bic	r3, r3, #64
 3961 0028 5360     		str	r3, [r2, #4]
2692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3962              		.loc 1 2692 0
 3963 002a C38E     		ldrh	r3, [r0, #54]
 3964 002c 9BB2     		uxth	r3, r3
 3965 002e 03B1     		cbz	r3, .L367
 3966              	.LVL332:
 3967              	.L364:
 3968 0030 08BD     		pop	{r3, pc}
 3969              	.LVL333:
 3970              	.L367:
2694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 3971              		.loc 1 2694 0
 3972 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 3973              	.LVL334:
2697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3974              		.loc 1 2697 0
 3975 0036 FBE7     		b	.L364
 3976              		.cfi_endproc
 3977              	.LFE105:
 3979              		.section	.text.SPI_DMAError,"ax",%progbits
 3980              		.align	1
 3981              		.syntax unified
 3982              		.thumb
 3983              		.thumb_func
 3984              		.fpu softvfp
 3986              	SPI_DMAError:
 3987              	.LFB99:
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = (SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3988              		.loc 1 2448 0
 3989              		.cfi_startproc
 3990              		@ args = 0, pretend = 0, frame = 0
 3991              		@ frame_needed = 0, uses_anonymous_args = 0
 3992              	.LVL335:
 3993 0000 08B5     		push	{r3, lr}
 3994              	.LCFI57:
 3995              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccrAKW0M.s 			page 138


 3996              		.cfi_offset 3, -8
 3997              		.cfi_offset 14, -4
2449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3998              		.loc 1 2449 0
 3999 0002 406A     		ldr	r0, [r0, #36]
 4000              	.LVL336:
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4001              		.loc 1 2452 0
 4002 0004 0268     		ldr	r2, [r0]
 4003 0006 5368     		ldr	r3, [r2, #4]
 4004 0008 23F00303 		bic	r3, r3, #3
 4005 000c 5360     		str	r3, [r2, #4]
2454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4006              		.loc 1 2454 0
 4007 000e 436D     		ldr	r3, [r0, #84]
 4008 0010 43F01003 		orr	r3, r3, #16
 4009 0014 4365     		str	r3, [r0, #84]
2455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
 4010              		.loc 1 2455 0
 4011 0016 0123     		movs	r3, #1
 4012 0018 80F85130 		strb	r3, [r0, #81]
2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4013              		.loc 1 2456 0
 4014 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4015              	.LVL337:
 4016 0020 08BD     		pop	{r3, pc}
 4017              		.cfi_endproc
 4018              	.LFE99:
 4020              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 4021              		.align	1
 4022              		.syntax unified
 4023              		.thumb
 4024              		.thumb_func
 4025              		.fpu softvfp
 4027              	SPI_DMATransmitCplt:
 4028              	.LFB93:
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4029              		.loc 1 2214 0
 4030              		.cfi_startproc
 4031              		@ args = 0, pretend = 0, frame = 8
 4032              		@ frame_needed = 0, uses_anonymous_args = 0
 4033              	.LVL338:
 4034 0000 30B5     		push	{r4, r5, lr}
 4035              	.LCFI58:
 4036              		.cfi_def_cfa_offset 12
 4037              		.cfi_offset 4, -12
 4038              		.cfi_offset 5, -8
 4039              		.cfi_offset 14, -4
 4040 0002 83B0     		sub	sp, sp, #12
 4041              	.LCFI59:
 4042              		.cfi_def_cfa_offset 24
 4043 0004 0546     		mov	r5, r0
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
 4044              		.loc 1 2215 0
 4045 0006 446A     		ldr	r4, [r0, #36]
 4046              	.LVL339:
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccrAKW0M.s 			page 139


 4047              		.loc 1 2219 0
 4048 0008 FFF7FEFF 		bl	HAL_GetTick
 4049              	.LVL340:
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4050              		.loc 1 2222 0
 4051 000c 2B68     		ldr	r3, [r5]
 4052 000e 1B68     		ldr	r3, [r3]
 4053 0010 13F0200F 		tst	r3, #32
 4054 0014 1ED1     		bne	.L371
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4055              		.loc 1 2225 0
 4056 0016 2268     		ldr	r2, [r4]
 4057 0018 5368     		ldr	r3, [r2, #4]
 4058 001a 23F00203 		bic	r3, r3, #2
 4059 001e 5360     		str	r3, [r2, #4]
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4060              		.loc 1 2228 0
 4061 0020 0246     		mov	r2, r0
 4062 0022 6421     		movs	r1, #100
 4063 0024 2046     		mov	r0, r4
 4064              	.LVL341:
 4065 0026 FFF7FEFF 		bl	SPI_CheckFlag_BSY
 4066              	.LVL342:
 4067 002a 18B1     		cbz	r0, .L372
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4068              		.loc 1 2230 0
 4069 002c 636D     		ldr	r3, [r4, #84]
 4070 002e 43F02003 		orr	r3, r3, #32
 4071 0032 6365     		str	r3, [r4, #84]
 4072              	.L372:
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4073              		.loc 1 2234 0
 4074 0034 A368     		ldr	r3, [r4, #8]
 4075 0036 33B9     		cbnz	r3, .L373
 4076              	.LBB8:
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4077              		.loc 1 2236 0
 4078 0038 0193     		str	r3, [sp, #4]
 4079 003a 2368     		ldr	r3, [r4]
 4080 003c DA68     		ldr	r2, [r3, #12]
 4081 003e 0192     		str	r2, [sp, #4]
 4082 0040 9B68     		ldr	r3, [r3, #8]
 4083 0042 0193     		str	r3, [sp, #4]
 4084 0044 019B     		ldr	r3, [sp, #4]
 4085              	.L373:
 4086              	.LBE8:
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4087              		.loc 1 2239 0
 4088 0046 0023     		movs	r3, #0
 4089 0048 E386     		strh	r3, [r4, #54]	@ movhi
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4090              		.loc 1 2240 0
 4091 004a 0123     		movs	r3, #1
 4092 004c 84F85130 		strb	r3, [r4, #81]
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4093              		.loc 1 2242 0
 4094 0050 636D     		ldr	r3, [r4, #84]
ARM GAS  /tmp/ccrAKW0M.s 			page 140


 4095 0052 23B9     		cbnz	r3, .L376
 4096              	.L371:
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4097              		.loc 1 2248 0
 4098 0054 2046     		mov	r0, r4
 4099 0056 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4100              	.LVL343:
 4101              	.L370:
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4102              		.loc 1 2249 0
 4103 005a 03B0     		add	sp, sp, #12
 4104              	.LCFI60:
 4105              		.cfi_remember_state
 4106              		.cfi_def_cfa_offset 12
 4107              		@ sp needed
 4108 005c 30BD     		pop	{r4, r5, pc}
 4109              	.LVL344:
 4110              	.L376:
 4111              	.LCFI61:
 4112              		.cfi_restore_state
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
 4113              		.loc 1 2244 0
 4114 005e 2046     		mov	r0, r4
 4115 0060 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4116              	.LVL345:
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4117              		.loc 1 2245 0
 4118 0064 F9E7     		b	.L370
 4119              		.cfi_endproc
 4120              	.LFE93:
 4122              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 4123              		.align	1
 4124              		.syntax unified
 4125              		.thumb
 4126              		.thumb_func
 4127              		.fpu softvfp
 4129              	SPI_DMAReceiveCplt:
 4130              	.LFB94:
2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4131              		.loc 1 2258 0
 4132              		.cfi_startproc
 4133              		@ args = 0, pretend = 0, frame = 0
 4134              		@ frame_needed = 0, uses_anonymous_args = 0
 4135              	.LVL346:
 4136 0000 08B5     		push	{r3, lr}
 4137              	.LCFI62:
 4138              		.cfi_def_cfa_offset 8
 4139              		.cfi_offset 3, -8
 4140              		.cfi_offset 14, -4
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 4141              		.loc 1 2259 0
 4142 0002 436A     		ldr	r3, [r0, #36]
 4143              	.LVL347:
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4144              		.loc 1 2268 0
 4145 0004 0268     		ldr	r2, [r0]
 4146 0006 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccrAKW0M.s 			page 141


 4147 0008 12F0200F 		tst	r2, #32
 4148 000c 0FD1     		bne	.L378
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4149              		.loc 1 2288 0
 4150 000e 1968     		ldr	r1, [r3]
 4151 0010 4A68     		ldr	r2, [r1, #4]
 4152 0012 22F00302 		bic	r2, r2, #3
 4153 0016 4A60     		str	r2, [r1, #4]
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4154              		.loc 1 2291 0
 4155 0018 5A68     		ldr	r2, [r3, #4]
 4156 001a B2F5827F 		cmp	r2, #260
 4157 001e 0AD0     		beq	.L383
 4158              	.L379:
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4159              		.loc 1 2297 0
 4160 0020 0022     		movs	r2, #0
 4161 0022 DA87     		strh	r2, [r3, #62]	@ movhi
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4162              		.loc 1 2298 0
 4163 0024 0122     		movs	r2, #1
 4164 0026 83F85120 		strb	r2, [r3, #81]
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4165              		.loc 1 2319 0
 4166 002a 5A6D     		ldr	r2, [r3, #84]
 4167 002c 82B9     		cbnz	r2, .L384
 4168              	.L378:
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4169              		.loc 1 2325 0
 4170 002e 1846     		mov	r0, r3
 4171              	.LVL348:
 4172 0030 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4173              	.LVL349:
 4174 0034 08BD     		pop	{r3, pc}
 4175              	.LVL350:
 4176              	.L383:
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4177              		.loc 1 2291 0 discriminator 1
 4178 0036 9A68     		ldr	r2, [r3, #8]
 4179 0038 B2F5004F 		cmp	r2, #32768
 4180 003c 02D0     		beq	.L380
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4181              		.loc 1 2291 0 is_stmt 0 discriminator 2
 4182 003e B2F5806F 		cmp	r2, #1024
 4183 0042 EDD1     		bne	.L379
 4184              	.L380:
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4185              		.loc 1 2294 0 is_stmt 1
 4186 0044 1968     		ldr	r1, [r3]
 4187 0046 0A68     		ldr	r2, [r1]
 4188 0048 22F04002 		bic	r2, r2, #64
 4189 004c 0A60     		str	r2, [r1]
 4190 004e E7E7     		b	.L379
 4191              	.L384:
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
 4192              		.loc 1 2321 0
 4193 0050 1846     		mov	r0, r3
ARM GAS  /tmp/ccrAKW0M.s 			page 142


 4194              	.LVL351:
 4195 0052 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4196              	.LVL352:
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4197              		.loc 1 2322 0
 4198 0056 08BD     		pop	{r3, pc}
 4199              		.cfi_endproc
 4200              	.LFE94:
 4202              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 4203              		.align	1
 4204              		.syntax unified
 4205              		.thumb
 4206              		.thumb_func
 4207              		.fpu softvfp
 4209              	SPI_DMATransmitReceiveCplt:
 4210              	.LFB95:
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4211              		.loc 1 2335 0
 4212              		.cfi_startproc
 4213              		@ args = 0, pretend = 0, frame = 0
 4214              		@ frame_needed = 0, uses_anonymous_args = 0
 4215              	.LVL353:
 4216 0000 38B5     		push	{r3, r4, r5, lr}
 4217              	.LCFI63:
 4218              		.cfi_def_cfa_offset 16
 4219              		.cfi_offset 3, -16
 4220              		.cfi_offset 4, -12
 4221              		.cfi_offset 5, -8
 4222              		.cfi_offset 14, -4
 4223 0002 0546     		mov	r5, r0
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart = 0U;
 4224              		.loc 1 2336 0
 4225 0004 446A     		ldr	r4, [r0, #36]
 4226              	.LVL354:
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4227              		.loc 1 2342 0
 4228 0006 FFF7FEFF 		bl	HAL_GetTick
 4229              	.LVL355:
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4230              		.loc 1 2344 0
 4231 000a 2B68     		ldr	r3, [r5]
 4232 000c 1B68     		ldr	r3, [r3]
 4233 000e 13F0200F 		tst	r3, #32
 4234 0012 16D1     		bne	.L386
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4235              		.loc 1 2362 0
 4236 0014 0246     		mov	r2, r0
 4237 0016 6421     		movs	r1, #100
 4238 0018 2046     		mov	r0, r4
 4239              	.LVL356:
 4240 001a FFF7FEFF 		bl	SPI_CheckFlag_BSY
 4241              	.LVL357:
 4242 001e 18B1     		cbz	r0, .L387
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4243              		.loc 1 2364 0
 4244 0020 636D     		ldr	r3, [r4, #84]
 4245 0022 43F02003 		orr	r3, r3, #32
ARM GAS  /tmp/ccrAKW0M.s 			page 143


 4246 0026 6365     		str	r3, [r4, #84]
 4247              	.L387:
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4248              		.loc 1 2368 0
 4249 0028 2268     		ldr	r2, [r4]
 4250 002a 5368     		ldr	r3, [r2, #4]
 4251 002c 23F00303 		bic	r3, r3, #3
 4252 0030 5360     		str	r3, [r2, #4]
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 4253              		.loc 1 2370 0
 4254 0032 0023     		movs	r3, #0
 4255 0034 E386     		strh	r3, [r4, #54]	@ movhi
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4256              		.loc 1 2371 0
 4257 0036 E387     		strh	r3, [r4, #62]	@ movhi
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4258              		.loc 1 2372 0
 4259 0038 0123     		movs	r3, #1
 4260 003a 84F85130 		strb	r3, [r4, #81]
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4261              		.loc 1 2393 0
 4262 003e 636D     		ldr	r3, [r4, #84]
 4263 0040 1BB9     		cbnz	r3, .L390
 4264              	.L386:
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4265              		.loc 1 2399 0
 4266 0042 2046     		mov	r0, r4
 4267 0044 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4268              	.LVL358:
 4269 0048 38BD     		pop	{r3, r4, r5, pc}
 4270              	.LVL359:
 4271              	.L390:
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
 4272              		.loc 1 2395 0
 4273 004a 2046     		mov	r0, r4
 4274 004c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4275              	.LVL360:
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4276              		.loc 1 2396 0
 4277 0050 38BD     		pop	{r3, r4, r5, pc}
 4278              		.cfi_endproc
 4279              	.LFE95:
 4281              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4282              		.align	1
 4283              		.global	HAL_SPI_IRQHandler
 4284              		.syntax unified
 4285              		.thumb
 4286              		.thumb_func
 4287              		.fpu softvfp
 4289              	HAL_SPI_IRQHandler:
 4290              	.LFB82:
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 4291              		.loc 1 1946 0
 4292              		.cfi_startproc
 4293              		@ args = 0, pretend = 0, frame = 16
 4294              		@ frame_needed = 0, uses_anonymous_args = 0
 4295              	.LVL361:
ARM GAS  /tmp/ccrAKW0M.s 			page 144


 4296 0000 10B5     		push	{r4, lr}
 4297              	.LCFI64:
 4298              		.cfi_def_cfa_offset 8
 4299              		.cfi_offset 4, -8
 4300              		.cfi_offset 14, -4
 4301 0002 84B0     		sub	sp, sp, #16
 4302              	.LCFI65:
 4303              		.cfi_def_cfa_offset 24
 4304 0004 0446     		mov	r4, r0
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 4305              		.loc 1 1947 0
 4306 0006 0268     		ldr	r2, [r0]
 4307 0008 5168     		ldr	r1, [r2, #4]
 4308              	.LVL362:
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4309              		.loc 1 1948 0
 4310 000a 9368     		ldr	r3, [r2, #8]
 4311              	.LVL363:
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      ((itflag & SPI_FLAG_RXNE) != RESET) && ((itsource & SPI_IT_RXNE) != RESET))
 4312              		.loc 1 1951 0
 4313 000c 03F04100 		and	r0, r3, #65
 4314              	.LVL364:
 4315 0010 0128     		cmp	r0, #1
 4316 0012 4FD0     		beq	.L401
 4317              	.L392:
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4318              		.loc 1 1959 0
 4319 0014 13F0020F 		tst	r3, #2
 4320 0018 02D0     		beq	.L394
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4321              		.loc 1 1959 0 is_stmt 0 discriminator 1
 4322 001a 11F0800F 		tst	r1, #128
 4323 001e 50D1     		bne	.L402
 4324              	.L394:
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4325              		.loc 1 1966 0 is_stmt 1
 4326 0020 13F0600F 		tst	r3, #96
 4327 0024 50D0     		beq	.L391
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4328              		.loc 1 1966 0 is_stmt 0 discriminator 1
 4329 0026 11F0200F 		tst	r1, #32
 4330 002a 4DD0     		beq	.L391
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4331              		.loc 1 1969 0 is_stmt 1
 4332 002c 13F0400F 		tst	r3, #64
 4333 0030 0FD0     		beq	.L395
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4334              		.loc 1 1971 0
 4335 0032 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 4336 0036 C0B2     		uxtb	r0, r0
 4337 0038 0328     		cmp	r0, #3
 4338 003a 47D0     		beq	.L396
1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4339              		.loc 1 1973 0
 4340 003c 606D     		ldr	r0, [r4, #84]
 4341 003e 40F00400 		orr	r0, r0, #4
 4342 0042 6065     		str	r0, [r4, #84]
ARM GAS  /tmp/ccrAKW0M.s 			page 145


 4343              	.LBB9:
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4344              		.loc 1 1974 0
 4345 0044 0020     		movs	r0, #0
 4346 0046 0190     		str	r0, [sp, #4]
 4347 0048 D068     		ldr	r0, [r2, #12]
 4348 004a 0190     		str	r0, [sp, #4]
 4349 004c 9068     		ldr	r0, [r2, #8]
 4350 004e 0190     		str	r0, [sp, #4]
 4351 0050 0198     		ldr	r0, [sp, #4]
 4352              	.L395:
 4353              	.LBE9:
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4354              		.loc 1 1984 0
 4355 0052 13F0200F 		tst	r3, #32
 4356 0056 0CD0     		beq	.L397
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 4357              		.loc 1 1986 0
 4358 0058 636D     		ldr	r3, [r4, #84]
 4359              	.LVL365:
 4360 005a 43F00103 		orr	r3, r3, #1
 4361 005e 6365     		str	r3, [r4, #84]
 4362              	.LBB10:
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4363              		.loc 1 1987 0
 4364 0060 0023     		movs	r3, #0
 4365 0062 0393     		str	r3, [sp, #12]
 4366 0064 9368     		ldr	r3, [r2, #8]
 4367 0066 0393     		str	r3, [sp, #12]
 4368 0068 1368     		ldr	r3, [r2]
 4369 006a 23F04003 		bic	r3, r3, #64
 4370 006e 1360     		str	r3, [r2]
 4371 0070 039B     		ldr	r3, [sp, #12]
 4372              	.L397:
 4373              	.LBE10:
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4374              		.loc 1 1990 0
 4375 0072 636D     		ldr	r3, [r4, #84]
 4376 0074 43B3     		cbz	r3, .L391
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4377              		.loc 1 1993 0
 4378 0076 2268     		ldr	r2, [r4]
 4379 0078 5368     		ldr	r3, [r2, #4]
 4380 007a 23F0E003 		bic	r3, r3, #224
 4381 007e 5360     		str	r3, [r2, #4]
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
 4382              		.loc 1 1995 0
 4383 0080 0123     		movs	r3, #1
 4384 0082 84F85130 		strb	r3, [r4, #81]
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4385              		.loc 1 1997 0
 4386 0086 11F0030F 		tst	r1, #3
 4387 008a 27D0     		beq	.L398
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4388              		.loc 1 1999 0
 4389 008c 2268     		ldr	r2, [r4]
 4390 008e 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccrAKW0M.s 			page 146


 4391 0090 23F00303 		bic	r3, r3, #3
 4392 0094 5360     		str	r3, [r2, #4]
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 4393              		.loc 1 2002 0
 4394 0096 E36C     		ldr	r3, [r4, #76]
 4395 0098 23B1     		cbz	r3, .L399
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           HAL_DMA_Abort_IT(hspi->hdmarx);
 4396              		.loc 1 2006 0
 4397 009a 124A     		ldr	r2, .L403
 4398 009c 5A63     		str	r2, [r3, #52]
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 4399              		.loc 1 2007 0
 4400 009e E06C     		ldr	r0, [r4, #76]
 4401 00a0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4402              	.LVL366:
 4403              	.L399:
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 4404              		.loc 1 2010 0
 4405 00a4 A36C     		ldr	r3, [r4, #72]
 4406 00a6 7BB1     		cbz	r3, .L391
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           HAL_DMA_Abort_IT(hspi->hdmatx);
 4407              		.loc 1 2014 0
 4408 00a8 0E4A     		ldr	r2, .L403
 4409 00aa 5A63     		str	r2, [r3, #52]
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 4410              		.loc 1 2015 0
 4411 00ac A06C     		ldr	r0, [r4, #72]
 4412 00ae FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4413              	.LVL367:
 4414 00b2 09E0     		b	.L391
 4415              	.LVL368:
 4416              	.L401:
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4417              		.loc 1 1952 0
 4418 00b4 11F0400F 		tst	r1, #64
 4419 00b8 ACD0     		beq	.L392
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
 4420              		.loc 1 1954 0
 4421 00ba 236C     		ldr	r3, [r4, #64]
 4422              	.LVL369:
 4423 00bc 2046     		mov	r0, r4
 4424 00be 9847     		blx	r3
 4425              	.LVL370:
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 4426              		.loc 1 1955 0
 4427 00c0 02E0     		b	.L391
 4428              	.LVL371:
 4429              	.L402:
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
 4430              		.loc 1 1961 0
 4431 00c2 636C     		ldr	r3, [r4, #68]
 4432              	.LVL372:
 4433 00c4 2046     		mov	r0, r4
 4434 00c6 9847     		blx	r3
 4435              	.LVL373:
 4436              	.L391:
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccrAKW0M.s 			page 147


 4437              		.loc 1 2026 0
 4438 00c8 04B0     		add	sp, sp, #16
 4439              	.LCFI66:
 4440              		.cfi_remember_state
 4441              		.cfi_def_cfa_offset 8
 4442              		@ sp needed
 4443 00ca 10BD     		pop	{r4, pc}
 4444              	.LVL374:
 4445              	.L396:
 4446              	.LCFI67:
 4447              		.cfi_restore_state
 4448              	.LBB11:
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return;
 4449              		.loc 1 1978 0
 4450 00cc 0023     		movs	r3, #0
 4451              	.LVL375:
 4452 00ce 0293     		str	r3, [sp, #8]
 4453 00d0 D368     		ldr	r3, [r2, #12]
 4454 00d2 0293     		str	r3, [sp, #8]
 4455 00d4 9368     		ldr	r3, [r2, #8]
 4456 00d6 0293     		str	r3, [sp, #8]
 4457 00d8 029B     		ldr	r3, [sp, #8]
 4458              	.LBE11:
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4459              		.loc 1 1979 0
 4460 00da F5E7     		b	.L391
 4461              	.L398:
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4462              		.loc 1 2021 0
 4463 00dc 2046     		mov	r0, r4
 4464 00de FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4465              	.LVL376:
 4466 00e2 F1E7     		b	.L391
 4467              	.L404:
 4468              		.align	2
 4469              	.L403:
 4470 00e4 00000000 		.word	SPI_DMAAbortOnError
 4471              		.cfi_endproc
 4472              	.LFE82:
 4474              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 4475              		.align	1
 4476              		.syntax unified
 4477              		.thumb
 4478              		.thumb_func
 4479              		.fpu softvfp
 4481              	SPI_DMAAbortOnError:
 4482              	.LFB100:
2466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4483              		.loc 1 2466 0
 4484              		.cfi_startproc
 4485              		@ args = 0, pretend = 0, frame = 0
 4486              		@ frame_needed = 0, uses_anonymous_args = 0
 4487              	.LVL377:
 4488 0000 08B5     		push	{r3, lr}
 4489              	.LCFI68:
 4490              		.cfi_def_cfa_offset 8
 4491              		.cfi_offset 3, -8
ARM GAS  /tmp/ccrAKW0M.s 			page 148


 4492              		.cfi_offset 14, -4
2467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 4493              		.loc 1 2467 0
 4494 0002 406A     		ldr	r0, [r0, #36]
 4495              	.LVL378:
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 4496              		.loc 1 2468 0
 4497 0004 0023     		movs	r3, #0
 4498 0006 C387     		strh	r3, [r0, #62]	@ movhi
2469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4499              		.loc 1 2469 0
 4500 0008 C386     		strh	r3, [r0, #54]	@ movhi
2471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4501              		.loc 1 2471 0
 4502 000a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4503              	.LVL379:
 4504 000e 08BD     		pop	{r3, pc}
 4505              		.cfi_endproc
 4506              	.LFE100:
 4508              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 4509              		.align	1
 4510              		.weak	HAL_SPI_AbortCpltCallback
 4511              		.syntax unified
 4512              		.thumb
 4513              		.thumb_func
 4514              		.fpu softvfp
 4516              	HAL_SPI_AbortCpltCallback:
 4517              	.LFB90:
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4518              		.loc 1 2142 0
 4519              		.cfi_startproc
 4520              		@ args = 0, pretend = 0, frame = 0
 4521              		@ frame_needed = 0, uses_anonymous_args = 0
 4522              		@ link register save eliminated.
 4523              	.LVL380:
 4524 0000 7047     		bx	lr
 4525              		.cfi_endproc
 4526              	.LFE90:
 4528              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 4529              		.align	1
 4530              		.global	HAL_SPI_Abort_IT
 4531              		.syntax unified
 4532              		.thumb
 4533              		.thumb_func
 4534              		.fpu softvfp
 4536              	HAL_SPI_Abort_IT:
 4537              	.LFB78:
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t abortcplt;
 4538              		.loc 1 1730 0
 4539              		.cfi_startproc
 4540              		@ args = 0, pretend = 0, frame = 8
 4541              		@ frame_needed = 0, uses_anonymous_args = 0
 4542              	.LVL381:
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t abortcplt;
 4543              		.loc 1 1730 0
 4544 0000 30B5     		push	{r4, r5, lr}
 4545              	.LCFI69:
ARM GAS  /tmp/ccrAKW0M.s 			page 149


 4546              		.cfi_def_cfa_offset 12
 4547              		.cfi_offset 4, -12
 4548              		.cfi_offset 5, -8
 4549              		.cfi_offset 14, -4
 4550 0002 83B0     		sub	sp, sp, #12
 4551              	.LCFI70:
 4552              		.cfi_def_cfa_offset 24
 4553 0004 0446     		mov	r4, r0
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4554              		.loc 1 1734 0
 4555 0006 0368     		ldr	r3, [r0]
 4556 0008 5A68     		ldr	r2, [r3, #4]
 4557 000a 12F0800F 		tst	r2, #128
 4558 000e 01D0     		beq	.L409
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 4559              		.loc 1 1736 0
 4560 0010 3E4A     		ldr	r2, .L429
 4561 0012 4264     		str	r2, [r0, #68]
 4562              	.L409:
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4563              		.loc 1 1739 0
 4564 0014 5A68     		ldr	r2, [r3, #4]
 4565 0016 12F0400F 		tst	r2, #64
 4566 001a 01D0     		beq	.L410
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 4567              		.loc 1 1741 0
 4568 001c 3C4A     		ldr	r2, .L429+4
 4569 001e 2264     		str	r2, [r4, #64]
 4570              	.L410:
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4571              		.loc 1 1745 0
 4572 0020 5A68     		ldr	r2, [r3, #4]
 4573 0022 22F02002 		bic	r2, r2, #32
 4574 0026 5A60     		str	r2, [r3, #4]
 4575              	.LVL382:
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4576              		.loc 1 1752 0
 4577 0028 A36C     		ldr	r3, [r4, #72]
 4578 002a 33B1     		cbz	r3, .L411
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4579              		.loc 1 1756 0
 4580 002c 2268     		ldr	r2, [r4]
 4581 002e 5268     		ldr	r2, [r2, #4]
 4582 0030 12F0020F 		tst	r2, #2
 4583 0034 26D0     		beq	.L412
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4584              		.loc 1 1758 0
 4585 0036 374A     		ldr	r2, .L429+8
 4586 0038 5A63     		str	r2, [r3, #52]
 4587              	.L411:
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4588              		.loc 1 1766 0
 4589 003a E36C     		ldr	r3, [r4, #76]
 4590 003c 33B1     		cbz	r3, .L413
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4591              		.loc 1 1770 0
 4592 003e 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccrAKW0M.s 			page 150


 4593 0040 5268     		ldr	r2, [r2, #4]
 4594 0042 12F0010F 		tst	r2, #1
 4595 0046 20D0     		beq	.L414
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4596              		.loc 1 1772 0
 4597 0048 334A     		ldr	r2, .L429+12
 4598 004a 5A63     		str	r2, [r3, #52]
 4599              	.L413:
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4600              		.loc 1 1781 0
 4601 004c 2368     		ldr	r3, [r4]
 4602 004e 5A68     		ldr	r2, [r3, #4]
 4603 0050 12F0020F 		tst	r2, #2
 4604 0054 20D0     		beq	.L420
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4605              		.loc 1 1781 0 is_stmt 0 discriminator 1
 4606 0056 5B68     		ldr	r3, [r3, #4]
 4607 0058 13F0010F 		tst	r3, #1
 4608 005c 3BD0     		beq	.L421
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4609              		.loc 1 1784 0 is_stmt 1
 4610 005e A06C     		ldr	r0, [r4, #72]
 4611              	.LVL383:
 4612 0060 B0B1     		cbz	r0, .L422
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4613              		.loc 1 1787 0
 4614 0062 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4615              	.LVL384:
 4616 0066 A8B1     		cbz	r0, .L423
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4617              		.loc 1 1789 0
 4618 0068 A36C     		ldr	r3, [r4, #72]
 4619 006a 0022     		movs	r2, #0
 4620 006c 5A63     		str	r2, [r3, #52]
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
 4621              		.loc 1 1747 0
 4622 006e 0125     		movs	r5, #1
 4623              	.L416:
 4624              	.LVL385:
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4625              		.loc 1 1797 0
 4626 0070 E06C     		ldr	r0, [r4, #76]
 4627 0072 90B1     		cbz	r0, .L415
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4628              		.loc 1 1800 0
 4629 0074 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4630              	.LVL386:
 4631 0078 78B3     		cbz	r0, .L424
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 1U;
 4632              		.loc 1 1802 0
 4633 007a E36C     		ldr	r3, [r4, #76]
 4634 007c 0022     		movs	r2, #0
 4635 007e 5A63     		str	r2, [r3, #52]
 4636              	.LVL387:
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4637              		.loc 1 1803 0
 4638 0080 0125     		movs	r5, #1
ARM GAS  /tmp/ccrAKW0M.s 			page 151


 4639 0082 0AE0     		b	.L415
 4640              	.LVL388:
 4641              	.L412:
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4642              		.loc 1 1762 0
 4643 0084 0022     		movs	r2, #0
 4644 0086 5A63     		str	r2, [r3, #52]
 4645 0088 D7E7     		b	.L411
 4646              	.L414:
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4647              		.loc 1 1776 0
 4648 008a 0022     		movs	r2, #0
 4649 008c 5A63     		str	r2, [r3, #52]
 4650 008e DDE7     		b	.L413
 4651              	.LVL389:
 4652              	.L422:
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
 4653              		.loc 1 1747 0
 4654 0090 0125     		movs	r5, #1
 4655 0092 EDE7     		b	.L416
 4656              	.L423:
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4657              		.loc 1 1793 0
 4658 0094 0025     		movs	r5, #0
 4659 0096 EBE7     		b	.L416
 4660              	.LVL390:
 4661              	.L420:
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
 4662              		.loc 1 1747 0
 4663 0098 0125     		movs	r5, #1
 4664              	.LVL391:
 4665              	.L415:
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4666              		.loc 1 1813 0
 4667 009a 2368     		ldr	r3, [r4]
 4668 009c 5B68     		ldr	r3, [r3, #4]
 4669 009e 13F0020F 		tst	r3, #2
 4670 00a2 07D0     		beq	.L417
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4671              		.loc 1 1816 0
 4672 00a4 A06C     		ldr	r0, [r4, #72]
 4673 00a6 28B1     		cbz	r0, .L417
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4674              		.loc 1 1819 0
 4675 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4676              	.LVL392:
 4677 00ac B8B1     		cbz	r0, .L425
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4678              		.loc 1 1821 0
 4679 00ae A36C     		ldr	r3, [r4, #72]
 4680 00b0 0022     		movs	r2, #0
 4681 00b2 5A63     		str	r2, [r3, #52]
 4682              	.LVL393:
 4683              	.L417:
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4684              		.loc 1 1830 0
 4685 00b4 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccrAKW0M.s 			page 152


 4686 00b6 5B68     		ldr	r3, [r3, #4]
 4687 00b8 13F0010F 		tst	r3, #1
 4688 00bc 07D0     		beq	.L418
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4689              		.loc 1 1833 0
 4690 00be E06C     		ldr	r0, [r4, #76]
 4691 00c0 28B1     		cbz	r0, .L418
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4692              		.loc 1 1836 0
 4693 00c2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4694              	.LVL394:
 4695 00c6 60B1     		cbz	r0, .L426
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4696              		.loc 1 1838 0
 4697 00c8 E36C     		ldr	r3, [r4, #76]
 4698 00ca 0022     		movs	r2, #0
 4699 00cc 5A63     		str	r2, [r3, #52]
 4700              	.LVL395:
 4701              	.L418:
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4702              		.loc 1 1847 0
 4703 00ce 55B9     		cbnz	r5, .L428
 4704              	.L419:
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4705              		.loc 1 1866 0
 4706 00d0 0020     		movs	r0, #0
 4707 00d2 03B0     		add	sp, sp, #12
 4708              	.LCFI71:
 4709              		.cfi_remember_state
 4710              		.cfi_def_cfa_offset 12
 4711              		@ sp needed
 4712 00d4 30BD     		pop	{r4, r5, pc}
 4713              	.LVL396:
 4714              	.L421:
 4715              	.LCFI72:
 4716              		.cfi_restore_state
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
 4717              		.loc 1 1747 0
 4718 00d6 0125     		movs	r5, #1
 4719 00d8 DFE7     		b	.L415
 4720              	.LVL397:
 4721              	.L424:
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4722              		.loc 1 1807 0
 4723 00da 0025     		movs	r5, #0
 4724              	.LVL398:
 4725 00dc DDE7     		b	.L415
 4726              	.LVL399:
 4727              	.L425:
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4728              		.loc 1 1825 0
 4729 00de 0025     		movs	r5, #0
 4730              	.LVL400:
 4731 00e0 E8E7     		b	.L417
 4732              	.LVL401:
 4733              	.L426:
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
ARM GAS  /tmp/ccrAKW0M.s 			page 153


 4734              		.loc 1 1842 0
 4735 00e2 0025     		movs	r5, #0
 4736              	.LVL402:
 4737 00e4 F3E7     		b	.L418
 4738              	.LVL403:
 4739              	.L428:
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 4740              		.loc 1 1850 0
 4741 00e6 0023     		movs	r3, #0
 4742 00e8 E387     		strh	r3, [r4, #62]	@ movhi
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4743              		.loc 1 1851 0
 4744 00ea E386     		strh	r3, [r4, #54]	@ movhi
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4745              		.loc 1 1854 0
 4746 00ec 6365     		str	r3, [r4, #84]
 4747              	.LBB12:
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4748              		.loc 1 1857 0
 4749 00ee 0193     		str	r3, [sp, #4]
 4750 00f0 2368     		ldr	r3, [r4]
 4751 00f2 DA68     		ldr	r2, [r3, #12]
 4752 00f4 0192     		str	r2, [sp, #4]
 4753 00f6 9B68     		ldr	r3, [r3, #8]
 4754 00f8 0193     		str	r3, [sp, #4]
 4755 00fa 019B     		ldr	r3, [sp, #4]
 4756              	.LBE12:
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4757              		.loc 1 1860 0
 4758 00fc 0123     		movs	r3, #1
 4759 00fe 84F85130 		strb	r3, [r4, #81]
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 4760              		.loc 1 1863 0
 4761 0102 2046     		mov	r0, r4
 4762 0104 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 4763              	.LVL404:
 4764 0108 E2E7     		b	.L419
 4765              	.L430:
 4766 010a 00BF     		.align	2
 4767              	.L429:
 4768 010c 00000000 		.word	SPI_AbortTx_ISR
 4769 0110 00000000 		.word	SPI_AbortRx_ISR
 4770 0114 00000000 		.word	SPI_DMATxAbortCallback
 4771 0118 00000000 		.word	SPI_DMARxAbortCallback
 4772              		.cfi_endproc
 4773              	.LFE78:
 4775              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 4776              		.align	1
 4777              		.syntax unified
 4778              		.thumb
 4779              		.thumb_func
 4780              		.fpu softvfp
 4782              	SPI_DMARxAbortCallback:
 4783              	.LFB102:
2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4784              		.loc 1 2535 0
 4785              		.cfi_startproc
ARM GAS  /tmp/ccrAKW0M.s 			page 154


 4786              		@ args = 0, pretend = 0, frame = 8
 4787              		@ frame_needed = 0, uses_anonymous_args = 0
 4788              	.LVL405:
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4789              		.loc 1 2536 0
 4790 0000 406A     		ldr	r0, [r0, #36]
 4791              	.LVL406:
2539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4792              		.loc 1 2539 0
 4793 0002 0268     		ldr	r2, [r0]
 4794 0004 1368     		ldr	r3, [r2]
 4795 0006 23F04003 		bic	r3, r3, #64
 4796 000a 1360     		str	r3, [r2]
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4797              		.loc 1 2541 0
 4798 000c C36C     		ldr	r3, [r0, #76]
 4799 000e 0022     		movs	r2, #0
 4800 0010 5A63     		str	r2, [r3, #52]
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4801              		.loc 1 2544 0
 4802 0012 0268     		ldr	r2, [r0]
 4803 0014 5368     		ldr	r3, [r2, #4]
 4804 0016 23F00103 		bic	r3, r3, #1
 4805 001a 5360     		str	r3, [r2, #4]
2547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4806              		.loc 1 2547 0
 4807 001c 836C     		ldr	r3, [r0, #72]
 4808 001e 13B1     		cbz	r3, .L432
2549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4809              		.loc 1 2549 0
 4810 0020 5B6B     		ldr	r3, [r3, #52]
 4811 0022 03B1     		cbz	r3, .L432
 4812 0024 7047     		bx	lr
 4813              	.L432:
2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4814              		.loc 1 2535 0
 4815 0026 00B5     		push	{lr}
 4816              	.LCFI73:
 4817              		.cfi_def_cfa_offset 4
 4818              		.cfi_offset 14, -4
 4819 0028 83B0     		sub	sp, sp, #12
 4820              	.LCFI74:
 4821              		.cfi_def_cfa_offset 16
2556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 4822              		.loc 1 2556 0
 4823 002a 0023     		movs	r3, #0
 4824 002c C387     		strh	r3, [r0, #62]	@ movhi
2557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4825              		.loc 1 2557 0
 4826 002e C386     		strh	r3, [r0, #54]	@ movhi
2560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4827              		.loc 1 2560 0
 4828 0030 4365     		str	r3, [r0, #84]
 4829              	.LBB13:
2563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4830              		.loc 1 2563 0
 4831 0032 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccrAKW0M.s 			page 155


 4832 0034 0368     		ldr	r3, [r0]
 4833 0036 DA68     		ldr	r2, [r3, #12]
 4834 0038 0192     		str	r2, [sp, #4]
 4835 003a 9B68     		ldr	r3, [r3, #8]
 4836 003c 0193     		str	r3, [sp, #4]
 4837 003e 019B     		ldr	r3, [sp, #4]
 4838              	.LBE13:
2566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4839              		.loc 1 2566 0
 4840 0040 0123     		movs	r3, #1
 4841 0042 80F85130 		strb	r3, [r0, #81]
2569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4842              		.loc 1 2569 0
 4843 0046 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 4844              	.LVL407:
2570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4845              		.loc 1 2570 0
 4846 004a 03B0     		add	sp, sp, #12
 4847              	.LCFI75:
 4848              		.cfi_def_cfa_offset 4
 4849              		@ sp needed
 4850 004c 5DF804FB 		ldr	pc, [sp], #4
 4851              		.cfi_endproc
 4852              	.LFE102:
 4854              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 4855              		.align	1
 4856              		.syntax unified
 4857              		.thumb
 4858              		.thumb_func
 4859              		.fpu softvfp
 4861              	SPI_DMATxAbortCallback:
 4862              	.LFB101:
2483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 4863              		.loc 1 2483 0
 4864              		.cfi_startproc
 4865              		@ args = 0, pretend = 0, frame = 8
 4866              		@ frame_needed = 0, uses_anonymous_args = 0
 4867              	.LVL408:
 4868 0000 00B5     		push	{lr}
 4869              	.LCFI76:
 4870              		.cfi_def_cfa_offset 4
 4871              		.cfi_offset 14, -4
 4872 0002 83B0     		sub	sp, sp, #12
 4873              	.LCFI77:
 4874              		.cfi_def_cfa_offset 16
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4875              		.loc 1 2484 0
 4876 0004 184B     		ldr	r3, .L445
 4877 0006 1B68     		ldr	r3, [r3]
 4878 0008 184A     		ldr	r2, .L445+4
 4879 000a A2FB0323 		umull	r2, r3, r2, r3
 4880 000e 5B0A     		lsrs	r3, r3, #9
 4881 0010 6422     		movs	r2, #100
 4882 0012 02FB03F3 		mul	r3, r2, r3
 4883 0016 0193     		str	r3, [sp, #4]
2485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4884              		.loc 1 2485 0
ARM GAS  /tmp/ccrAKW0M.s 			page 156


 4885 0018 406A     		ldr	r0, [r0, #36]
 4886              	.LVL409:
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4887              		.loc 1 2487 0
 4888 001a 836C     		ldr	r3, [r0, #72]
 4889 001c 0022     		movs	r2, #0
 4890 001e 5A63     		str	r2, [r3, #52]
2490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4891              		.loc 1 2490 0
 4892 0020 0268     		ldr	r2, [r0]
 4893 0022 5368     		ldr	r3, [r2, #4]
 4894 0024 23F00203 		bic	r3, r3, #2
 4895 0028 5360     		str	r3, [r2, #4]
 4896              	.L440:
2495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4897              		.loc 1 2495 0
 4898 002a 019B     		ldr	r3, [sp, #4]
 4899 002c 5A1E     		subs	r2, r3, #1
 4900 002e 0192     		str	r2, [sp, #4]
 4901 0030 2BB1     		cbz	r3, .L444
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4902              		.loc 1 2501 0
 4903 0032 0368     		ldr	r3, [r0]
 4904 0034 9B68     		ldr	r3, [r3, #8]
 4905 0036 13F0020F 		tst	r3, #2
 4906 003a F6D0     		beq	.L440
 4907 003c 03E0     		b	.L439
 4908              	.L444:
2497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 4909              		.loc 1 2497 0
 4910 003e 436D     		ldr	r3, [r0, #84]
 4911 0040 43F02003 		orr	r3, r3, #32
 4912 0044 4365     		str	r3, [r0, #84]
 4913              	.L439:
2504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4914              		.loc 1 2504 0
 4915 0046 C36C     		ldr	r3, [r0, #76]
 4916 0048 23B1     		cbz	r3, .L441
2506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4917              		.loc 1 2506 0
 4918 004a 5B6B     		ldr	r3, [r3, #52]
 4919 004c 13B1     		cbz	r3, .L441
 4920              	.LVL410:
 4921              	.L437:
2524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4922              		.loc 1 2524 0
 4923 004e 03B0     		add	sp, sp, #12
 4924              	.LCFI78:
 4925              		.cfi_remember_state
 4926              		.cfi_def_cfa_offset 4
 4927              		@ sp needed
 4928 0050 5DF804FB 		ldr	pc, [sp], #4
 4929              	.LVL411:
 4930              	.L441:
 4931              	.LCFI79:
 4932              		.cfi_restore_state
2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
ARM GAS  /tmp/ccrAKW0M.s 			page 157


 4933              		.loc 1 2513 0
 4934 0054 0023     		movs	r3, #0
 4935 0056 C387     		strh	r3, [r0, #62]	@ movhi
2514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4936              		.loc 1 2514 0
 4937 0058 C386     		strh	r3, [r0, #54]	@ movhi
2517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4938              		.loc 1 2517 0
 4939 005a 4365     		str	r3, [r0, #84]
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4940              		.loc 1 2520 0
 4941 005c 0123     		movs	r3, #1
 4942 005e 80F85130 		strb	r3, [r0, #81]
2523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4943              		.loc 1 2523 0
 4944 0062 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 4945              	.LVL412:
 4946 0066 F2E7     		b	.L437
 4947              	.L446:
 4948              		.align	2
 4949              	.L445:
 4950 0068 00000000 		.word	SystemCoreClock
 4951 006c F1197605 		.word	91625969
 4952              		.cfi_endproc
 4953              	.LFE101:
 4955              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 4956              		.align	1
 4957              		.global	HAL_SPI_GetState
 4958              		.syntax unified
 4959              		.thumb
 4960              		.thumb_func
 4961              		.fpu softvfp
 4963              	HAL_SPI_GetState:
 4964              	.LFB91:
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI handle state */
 4965              		.loc 1 2177 0
 4966              		.cfi_startproc
 4967              		@ args = 0, pretend = 0, frame = 0
 4968              		@ frame_needed = 0, uses_anonymous_args = 0
 4969              		@ link register save eliminated.
 4970              	.LVL413:
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4971              		.loc 1 2179 0
 4972 0000 90F85100 		ldrb	r0, [r0, #81]	@ zero_extendqisi2
 4973              	.LVL414:
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4974              		.loc 1 2180 0
 4975 0004 7047     		bx	lr
 4976              		.cfi_endproc
 4977              	.LFE91:
 4979              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 4980              		.align	1
 4981              		.global	HAL_SPI_GetError
 4982              		.syntax unified
 4983              		.thumb
 4984              		.thumb_func
 4985              		.fpu softvfp
ARM GAS  /tmp/ccrAKW0M.s 			page 158


 4987              	HAL_SPI_GetError:
 4988              	.LFB92:
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI ErrorCode */
 4989              		.loc 1 2189 0
 4990              		.cfi_startproc
 4991              		@ args = 0, pretend = 0, frame = 0
 4992              		@ frame_needed = 0, uses_anonymous_args = 0
 4993              		@ link register save eliminated.
 4994              	.LVL415:
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4995              		.loc 1 2191 0
 4996 0000 406D     		ldr	r0, [r0, #84]
 4997              	.LVL416:
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4998              		.loc 1 2192 0
 4999 0002 7047     		bx	lr
 5000              		.cfi_endproc
 5001              	.LFE92:
 5003              		.section	.text.SPI_ISCRCErrorValid,"ax",%progbits
 5004              		.align	1
 5005              		.weak	SPI_ISCRCErrorValid
 5006              		.syntax unified
 5007              		.thumb
 5008              		.thumb_func
 5009              		.fpu softvfp
 5011              	SPI_ISCRCErrorValid:
 5012              	.LFB118:
3235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Checks if encountered CRC error could be corresponding to wrongly detected errors 
3239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         according to SPI instance, Device type, and revision ID.
3240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval CRC error validity (SPI_INVALID_CRC_ERROR or SPI_VALID_CRC_ERROR).  
3243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** */
3244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak uint8_t SPI_ISCRCErrorValid(SPI_HandleTypeDef *hspi)
3245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5013              		.loc 1 3245 0
 5014              		.cfi_startproc
 5015              		@ args = 0, pretend = 0, frame = 0
 5016              		@ frame_needed = 0, uses_anonymous_args = 0
 5017              		@ link register save eliminated.
 5018              	.LVL417:
3246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
3248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
3249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return (SPI_VALID_CRC_ERROR);
3250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5019              		.loc 1 3250 0
 5020 0000 0120     		movs	r0, #1
 5021              	.LVL418:
 5022 0002 7047     		bx	lr
 5023              		.cfi_endproc
 5024              	.LFE118:
 5026              		.text
 5027              	.Letext0:
ARM GAS  /tmp/ccrAKW0M.s 			page 159


 5028              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5029              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5030              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 5031              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 5032              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 5033              		.file 7 "/usr/include/newlib/sys/lock.h"
 5034              		.file 8 "/usr/include/newlib/sys/_types.h"
 5035              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 5036              		.file 10 "/usr/include/newlib/sys/reent.h"
 5037              		.file 11 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 5038              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 5039              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 5040              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 5041              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccrAKW0M.s 			page 160


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_spi.c
     /tmp/ccrAKW0M.s:16     .text.SPI_AbortRx_ISR:0000000000000000 $t
     /tmp/ccrAKW0M.s:22     .text.SPI_AbortRx_ISR:0000000000000000 SPI_AbortRx_ISR
     /tmp/ccrAKW0M.s:89     .text.SPI_AbortRx_ISR:0000000000000058 $d
     /tmp/ccrAKW0M.s:95     .text.SPI_AbortTx_ISR:0000000000000000 $t
     /tmp/ccrAKW0M.s:101    .text.SPI_AbortTx_ISR:0000000000000000 SPI_AbortTx_ISR
     /tmp/ccrAKW0M.s:124    .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/ccrAKW0M.s:130    .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 SPI_WaitFlagStateUntilTimeout
     /tmp/ccrAKW0M.s:244    .text.SPI_CheckFlag_BSY:0000000000000000 $t
     /tmp/ccrAKW0M.s:250    .text.SPI_CheckFlag_BSY:0000000000000000 SPI_CheckFlag_BSY
     /tmp/ccrAKW0M.s:295    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccrAKW0M.s:302    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccrAKW0M.s:315    .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/ccrAKW0M.s:322    .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/ccrAKW0M.s:419    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccrAKW0M.s:426    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccrAKW0M.s:439    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/ccrAKW0M.s:446    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/ccrAKW0M.s:496    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/ccrAKW0M.s:503    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/ccrAKW0M.s:824    .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/ccrAKW0M.s:831    .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/ccrAKW0M.s:1271   .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/ccrAKW0M.s:1278   .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/ccrAKW0M.s:1553   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/ccrAKW0M.s:1560   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/ccrAKW0M.s:1698   .text.HAL_SPI_Transmit_IT:00000000000000a8 $d
     /tmp/ccrAKW0M.s:3371   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/ccrAKW0M.s:3322   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/ccrAKW0M.s:1704   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccrAKW0M.s:1711   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccrAKW0M.s:1894   .text.HAL_SPI_TransmitReceive_IT:00000000000000bc $d
     /tmp/ccrAKW0M.s:3926   .text.SPI_2linesRxISR_16BIT:0000000000000000 SPI_2linesRxISR_16BIT
     /tmp/ccrAKW0M.s:3866   .text.SPI_2linesTxISR_16BIT:0000000000000000 SPI_2linesTxISR_16BIT
     /tmp/ccrAKW0M.s:3808   .text.SPI_2linesRxISR_8BIT:0000000000000000 SPI_2linesRxISR_8BIT
     /tmp/ccrAKW0M.s:3750   .text.SPI_2linesTxISR_8BIT:0000000000000000 SPI_2linesTxISR_8BIT
     /tmp/ccrAKW0M.s:1902   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/ccrAKW0M.s:1909   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/ccrAKW0M.s:2062   .text.HAL_SPI_Receive_IT:00000000000000b4 $d
     /tmp/ccrAKW0M.s:3559   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/ccrAKW0M.s:3510   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/ccrAKW0M.s:2068   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccrAKW0M.s:2075   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/ccrAKW0M.s:2230   .text.HAL_SPI_Transmit_DMA:00000000000000bc $d
     /tmp/ccrAKW0M.s:3049   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/ccrAKW0M.s:4027   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/ccrAKW0M.s:3986   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/ccrAKW0M.s:2237   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccrAKW0M.s:2244   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccrAKW0M.s:2477   .text.HAL_SPI_TransmitReceive_DMA:0000000000000118 $d
     /tmp/ccrAKW0M.s:3149   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccrAKW0M.s:4209   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/ccrAKW0M.s:3099   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/ccrAKW0M.s:4129   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/ccrAKW0M.s:2486   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/ccrAKW0M.s:2493   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
ARM GAS  /tmp/ccrAKW0M.s 			page 161


     /tmp/ccrAKW0M.s:2660   .text.HAL_SPI_Receive_DMA:00000000000000d4 $d
     /tmp/ccrAKW0M.s:2667   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/ccrAKW0M.s:2674   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/ccrAKW0M.s:2815   .text.HAL_SPI_Abort:00000000000000c4 $d
     /tmp/ccrAKW0M.s:2823   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/ccrAKW0M.s:2830   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/ccrAKW0M.s:2868   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/ccrAKW0M.s:2875   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/ccrAKW0M.s:2913   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/ccrAKW0M.s:2920   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/ccrAKW0M.s:2963   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccrAKW0M.s:2970   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccrAKW0M.s:2983   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccrAKW0M.s:2990   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccrAKW0M.s:3003   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccrAKW0M.s:3010   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccrAKW0M.s:3023   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccrAKW0M.s:3030   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccrAKW0M.s:3043   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/ccrAKW0M.s:3073   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccrAKW0M.s:3080   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccrAKW0M.s:3093   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/ccrAKW0M.s:3123   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/ccrAKW0M.s:3130   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccrAKW0M.s:3143   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/ccrAKW0M.s:3173   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/ccrAKW0M.s:3180   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/ccrAKW0M.s:3193   .text.SPI_CloseTx_ISR:0000000000000000 $t
     /tmp/ccrAKW0M.s:3199   .text.SPI_CloseTx_ISR:0000000000000000 SPI_CloseTx_ISR
     /tmp/ccrAKW0M.s:3310   .text.SPI_CloseTx_ISR:0000000000000088 $d
     /tmp/ccrAKW0M.s:3316   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/ccrAKW0M.s:3365   .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/ccrAKW0M.s:3416   .text.SPI_CloseRx_ISR:0000000000000000 $t
     /tmp/ccrAKW0M.s:3422   .text.SPI_CloseRx_ISR:0000000000000000 SPI_CloseRx_ISR
     /tmp/ccrAKW0M.s:3504   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/ccrAKW0M.s:3553   .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/ccrAKW0M.s:3604   .text.SPI_CloseRxTx_ISR:0000000000000000 $t
     /tmp/ccrAKW0M.s:3610   .text.SPI_CloseRxTx_ISR:0000000000000000 SPI_CloseRxTx_ISR
     /tmp/ccrAKW0M.s:3738   .text.SPI_CloseRxTx_ISR:00000000000000a4 $d
     /tmp/ccrAKW0M.s:3744   .text.SPI_2linesTxISR_8BIT:0000000000000000 $t
     /tmp/ccrAKW0M.s:3802   .text.SPI_2linesRxISR_8BIT:0000000000000000 $t
     /tmp/ccrAKW0M.s:3860   .text.SPI_2linesTxISR_16BIT:0000000000000000 $t
     /tmp/ccrAKW0M.s:3920   .text.SPI_2linesRxISR_16BIT:0000000000000000 $t
     /tmp/ccrAKW0M.s:3980   .text.SPI_DMAError:0000000000000000 $t
     /tmp/ccrAKW0M.s:4021   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/ccrAKW0M.s:4123   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccrAKW0M.s:4203   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/ccrAKW0M.s:4282   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/ccrAKW0M.s:4289   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/ccrAKW0M.s:4470   .text.HAL_SPI_IRQHandler:00000000000000e4 $d
     /tmp/ccrAKW0M.s:4481   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/ccrAKW0M.s:4475   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/ccrAKW0M.s:4509   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccrAKW0M.s:4516   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
     /tmp/ccrAKW0M.s:4529   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/ccrAKW0M.s:4536   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/ccrAKW0M.s:4768   .text.HAL_SPI_Abort_IT:000000000000010c $d
ARM GAS  /tmp/ccrAKW0M.s 			page 162


     /tmp/ccrAKW0M.s:4861   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/ccrAKW0M.s:4782   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/ccrAKW0M.s:4776   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccrAKW0M.s:4855   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccrAKW0M.s:4950   .text.SPI_DMATxAbortCallback:0000000000000068 $d
     /tmp/ccrAKW0M.s:4956   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/ccrAKW0M.s:4963   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/ccrAKW0M.s:4980   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/ccrAKW0M.s:4987   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError
     /tmp/ccrAKW0M.s:5004   .text.SPI_ISCRCErrorValid:0000000000000000 $t
     /tmp/ccrAKW0M.s:5011   .text.SPI_ISCRCErrorValid:0000000000000000 SPI_ISCRCErrorValid
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
