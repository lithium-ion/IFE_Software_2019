ARM GAS  /tmp/cclPZh3B.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB72:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/cclPZh3B.s 			page 2


  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** 
  40:Src/main.c    **** 
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END Header */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  45:Src/main.c    **** #include "main.h"
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** 
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END Includes */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  55:Src/main.c    **** /* USER CODE BEGIN PTD */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PTD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN PD */
  61:Src/main.c    **** 
  62:Src/main.c    **** int checkBTSF();
  63:Src/main.c    **** int checkAPPS();
  64:Src/main.c    **** int APPS_Diff();
  65:Src/main.c    **** 
  66:Src/main.c    **** #define APPS_STDID 0x300;
  67:Src/main.c    **** #define BTSF_STDID 0x301;
  68:Src/main.c    **** const int throttleThreshold = 80;
  69:Src/main.c    **** const int brakeThreshold = 80;
  70:Src/main.c    **** 
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE END PD */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  75:Src/main.c    **** /* USER CODE BEGIN PM */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END PM */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  80:Src/main.c    **** ADC_HandleTypeDef hadc1;
  81:Src/main.c    **** 
  82:Src/main.c    **** CAN_HandleTypeDef hcan;
  83:Src/main.c    **** SPI_HandleTypeDef hspi1;
  84:Src/main.c    **** 
  85:Src/main.c    **** /* USER CODE BEGIN PV */
  86:Src/main.c    **** 
  87:Src/main.c    **** uint16_t brakePos;
  88:Src/main.c    **** uint16_t steeringPos;
  89:Src/main.c    **** uint16_t brakePressure_1;
  90:Src/main.c    **** uint16_t brakePressure_2;
ARM GAS  /tmp/cclPZh3B.s 			page 3


  91:Src/main.c    **** uint16_t throttle_A;
  92:Src/main.c    **** uint16_t throttle_B;
  93:Src/main.c    **** 
  94:Src/main.c    **** //need to figure out:
  95:Src/main.c    **** uint16_t max_throttle = 10;
  96:Src/main.c    **** 
  97:Src/main.c    **** int driving = 0;  		//boolean
  98:Src/main.c    **** int hardFaultFlag = 0;  //boolean
  99:Src/main.c    **** 
 100:Src/main.c    **** CAN_TxHeaderTypeDef TxHeader;
 101:Src/main.c    **** //CAN_RxHeaderTypedef RxHeader;
 102:Src/main.c    **** uint8_t TxData[8] = {0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55};
 103:Src/main.c    **** /*Set these values: 0xFF = Fault present
 104:Src/main.c    **** 					0x00 = No fault*/
 105:Src/main.c    **** //FAULTS
 106:Src/main.c    **** uint8_t bms;        //TxData[0]
 107:Src/main.c    **** uint8_t imd;		//TxData[1]
 108:Src/main.c    **** uint8_t bspd; 		//TxData[2]
 109:Src/main.c    **** uint8_t apps; 		//TxData[3]
 110:Src/main.c    **** //PRECHARGE
 111:Src/main.c    **** uint8_t charged;    //TxData[4] Precharge will be low if any hardfaults have been detected 
 112:Src/main.c    **** //ENABLE
 113:Src/main.c    **** uint8_t enable;		//TxData[5]
 114:Src/main.c    **** 
 115:Src/main.c    **** uint8_t RxData[8];
 116:Src/main.c    **** uint32_t TxMailbox;
 117:Src/main.c    **** 
 118:Src/main.c    **** //ADC_ChannelConfTypeDef sConfig = {0};
 119:Src/main.c    **** 
 120:Src/main.c    **** //For Timers
 121:Src/main.c    **** extern uint32_t millisTimer;
 122:Src/main.c    **** extern uint32_t secTimer;
 123:Src/main.c    **** 
 124:Src/main.c    **** 
 125:Src/main.c    **** /* USER CODE END PV */
 126:Src/main.c    **** 
 127:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 128:Src/main.c    **** void SystemClock_Config(void);
 129:Src/main.c    **** static void MX_GPIO_Init(void);
 130:Src/main.c    **** static void MX_SPI1_Init(void);
 131:Src/main.c    **** static void MX_ADC1_Init(void);
 132:Src/main.c    **** static void MX_CAN_Init(void);
 133:Src/main.c    **** /* USER CODE BEGIN PFP */
 134:Src/main.c    **** 
 135:Src/main.c    **** /* USER CODE END PFP */
 136:Src/main.c    **** 
 137:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 138:Src/main.c    **** /* USER CODE BEGIN 0 */
 139:Src/main.c    **** 
 140:Src/main.c    **** //int refTime = millis();
 141:Src/main.c    **** //int APPSFlag = 0; //boolean
 142:Src/main.c    **** 
 143:Src/main.c    **** /**
 144:Src/main.c    ****   * @brief  The application entry point.
 145:Src/main.c    ****   * @retval int
 146:Src/main.c    ****   */
 147:Src/main.c    **** int main(void)
ARM GAS  /tmp/cclPZh3B.s 			page 4


 148:Src/main.c    **** {
 149:Src/main.c    ****   /* USER CODE BEGIN 1 */
 150:Src/main.c    **** 
 151:Src/main.c    ****   //For Timers
 152:Src/main.c    ****   millisTimer = 100000; //100 millis
 153:Src/main.c    ****   secTimer = 3000000; //3 seconds
 154:Src/main.c    **** 
 155:Src/main.c    ****   /* USER CODE END 1 */
 156:Src/main.c    **** 
 157:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 160:Src/main.c    ****   HAL_Init();
 161:Src/main.c    **** 
 162:Src/main.c    ****   /* USER CODE BEGIN Init */
 163:Src/main.c    **** 
 164:Src/main.c    ****   // Update SystemCoreClock value
 165:Src/main.c    ****   SystemCoreClockUpdate();
 166:Src/main.c    ****   // Configure the SysTick timer to overflow every 1 us
 167:Src/main.c    ****   SysTick_Config(SystemCoreClock / 1000000);
 168:Src/main.c    **** 
 169:Src/main.c    ****   /* USER CODE END Init */
 170:Src/main.c    **** 
 171:Src/main.c    ****   /* Configure the system clock */
 172:Src/main.c    ****   SystemClock_Config();
 173:Src/main.c    **** 
 174:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 175:Src/main.c    **** 
 176:Src/main.c    ****   /* USER CODE END SysInit */
 177:Src/main.c    **** 
 178:Src/main.c    ****   /* Initialize all configured peripherals */
 179:Src/main.c    ****   MX_GPIO_Init();
 180:Src/main.c    ****   MX_SPI1_Init();
 181:Src/main.c    ****   MX_ADC1_Init();
 182:Src/main.c    ****   MX_CAN_Init();
 183:Src/main.c    ****   /* USER CODE BEGIN 2 */
 184:Src/main.c    **** 
 185:Src/main.c    ****   /* USER CODE END 2 */
 186:Src/main.c    **** 
 187:Src/main.c    ****   /* Infinite loop */
 188:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 189:Src/main.c    ****   
 190:Src/main.c    ****   while (1)
 191:Src/main.c    ****   {
 192:Src/main.c    **** 	readFaults();
 193:Src/main.c    **** 	//Check ENABLE_IN from driver switch and precharge
 194:Src/main.c    **** 	if(charged && HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_15) == GPIO_PIN_SET){
 195:Src/main.c    **** 	  //RTD Sound
 196:Src/main.c    **** 	  if(!driving){
 197:Src/main.c    **** 
 198:Src/main.c    **** 		  //ADC for Brake pressure
 199:Src/main.c    **** 		  updateADC();
 200:Src/main.c    **** 
 201:Src/main.c    **** 		  //if brake pressed, we are ready to drive 
 202:Src/main.c    **** 		  if(brakePressure_1 >= brakeThreshold){
 203:Src/main.c    **** 
 204:Src/main.c    **** 			//reset 3 second timer
ARM GAS  /tmp/cclPZh3B.s 			page 5


 205:Src/main.c    **** 			secTimer = 3000;
 206:Src/main.c    **** 
 207:Src/main.c    **** 			//RTD Sound Enable
 208:Src/main.c    **** 			//Play sound for ~3 seconds 
 209:Src/main.c    **** 			while(secTimer > 0){
 210:Src/main.c    **** 			  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET);
 211:Src/main.c    **** 			}
 212:Src/main.c    **** 			
 213:Src/main.c    **** 			//turn off sound
 214:Src/main.c    **** 			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);
 215:Src/main.c    **** 
 216:Src/main.c    **** 			//Send RTD Enable
 217:Src/main.c    **** 			/*******Do we need to do this????*********/
 218:Src/main.c    **** 			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 219:Src/main.c    **** 
 220:Src/main.c    **** 			driving = 1;
 221:Src/main.c    **** 
 222:Src/main.c    **** 		  }
 223:Src/main.c    **** 	  }//end RTD sequence
 224:Src/main.c    **** 	  
 225:Src/main.c    **** 	  if (checkBTSF()){
 226:Src/main.c    **** 		//send CAN message
 227:Src/main.c    **** 		driving = 0;
 228:Src/main.c    **** 
 229:Src/main.c    **** 	  }
 230:Src/main.c    **** 	  if (checkAPPS()){
 231:Src/main.c    **** 		//send CAN message
 232:Src/main.c    **** 		driving = 0;
 233:Src/main.c    **** 	  }
 234:Src/main.c    **** 
 235:Src/main.c    **** 	}//end driving sequence if statement
 236:Src/main.c    **** 	sendPrechargeMsg();
 237:Src/main.c    **** 	sendFaultMsg();
 238:Src/main.c    **** 	sendPrechargeMsg();
 239:Src/main.c    ****     /* USER CODE END WHILE */
 240:Src/main.c    **** 
 241:Src/main.c    ****     /* USER CODE BEGIN 3 */
 242:Src/main.c    ****   }
 243:Src/main.c    ****   /* USER CODE END 3 */
 244:Src/main.c    **** }
 245:Src/main.c    **** 
 246:Src/main.c    **** /**
 247:Src/main.c    ****   * @brief System Clock Configuration
 248:Src/main.c    ****   * @retval None
 249:Src/main.c    ****   */
 250:Src/main.c    **** void SystemClock_Config(void)
 251:Src/main.c    **** {
 252:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 253:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 254:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 255:Src/main.c    **** 
 256:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 257:Src/main.c    ****   */
 258:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 259:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 260:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 261:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
ARM GAS  /tmp/cclPZh3B.s 			page 6


 262:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 263:Src/main.c    ****   {
 264:Src/main.c    ****     Error_Handler();
 265:Src/main.c    ****   }
 266:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 267:Src/main.c    ****   */
 268:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 269:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 270:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 271:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 272:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 273:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 274:Src/main.c    **** 
 275:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 276:Src/main.c    ****   {
 277:Src/main.c    ****     Error_Handler();
 278:Src/main.c    ****   }
 279:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 280:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 281:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 282:Src/main.c    ****   {
 283:Src/main.c    ****     Error_Handler();
 284:Src/main.c    ****   }
 285:Src/main.c    **** }
 286:Src/main.c    **** 
 287:Src/main.c    **** 
 288:Src/main.c    **** /********************************************************************************/
 289:Src/main.c    **** //Checks for APPS errors, sends fault if there is one 
 290:Src/main.c    **** //Returns one if difference in throttleA/B is greater than 10% for 100 ms
 291:Src/main.c    **** //Returns zero if else
 292:Src/main.c    **** /********************************************************************************/
 293:Src/main.c    **** int checkAPPS(){
 294:Src/main.c    **** 
 295:Src/main.c    ****   updateADC();
 296:Src/main.c    ****   //0-5000 based ?
 297:Src/main.c    **** 
 298:Src/main.c    ****   //Throttles Agree
 299:Src/main.c    ****   millisTimer = 1000;
 300:Src/main.c    ****   while(millisTimer > 0 && APPS_Diff()){ //stay in this loop while there is a 10% difference in thr
 301:Src/main.c    ****   }
 302:Src/main.c    **** 
 303:Src/main.c    ****   //APPS_EN Fault
 304:Src/main.c    ****   if(millisTimer == 0){ //hmmm needs to be changed
 305:Src/main.c    ****     TxHeader.StdId = APPS_STDID; //sending CAN message
 306:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 307:Src/main.c    ****     return 1; //will set driving = 0;
 308:Src/main.c    ****   }
 309:Src/main.c    ****   return 0; //APPS is good
 310:Src/main.c    **** }
 311:Src/main.c    **** 
 312:Src/main.c    **** /********************************************************************************/
 313:Src/main.c    **** //Checks for BTSF errors, If the brake and throttle are pressed at the same time, above a certain t
 314:Src/main.c    **** //Returns one if fault was sensed and sent out
 315:Src/main.c    **** //zero if nothing is detected
 316:Src/main.c    **** /********************************************************************************/
 317:Src/main.c    **** int checkBTSF(){
 318:Src/main.c    ****   int BTSFFlag = 0;
ARM GAS  /tmp/cclPZh3B.s 			page 7


 319:Src/main.c    ****   updateADC();
 320:Src/main.c    **** 
 321:Src/main.c    ****   //0-5000 based
 322:Src/main.c    **** 
 323:Src/main.c    ****   if(brakePressure_1 > brakeThreshold && throttle_A > throttleThreshold){
 324:Src/main.c    ****     BTSFFlag = 1;
 325:Src/main.c    **** 
 326:Src/main.c    ****     //sending CAN message
 327:Src/main.c    ****     if (HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox) == HAL_OK){
 328:Src/main.c    ****       TxHeader.StdId = BTSF_STDID;
 329:Src/main.c    ****       HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 330:Src/main.c    ****     }
 331:Src/main.c    ****   }
 332:Src/main.c    ****   
 333:Src/main.c    ****   return BTSFFlag;
 334:Src/main.c    **** }
 335:Src/main.c    **** 
 336:Src/main.c    **** /********************************************************************************/
 337:Src/main.c    **** // This function updates the ADC values for all positions/pressures
 338:Src/main.c    **** //
 339:Src/main.c    **** //
 340:Src/main.c    **** /********************************************************************************/
 341:Src/main.c    **** void updateADC(){	
 342:Src/main.c    **** 	//HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 343:Src/main.c    **** 	HAL_ADC_Start(&hadc1);
 344:Src/main.c    **** 	
 345:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 346:Src/main.c    **** 	brakePos = HAL_ADC_GetValue(&hadc1);  //brakePos
 347:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 348:Src/main.c    **** 	steeringPos = HAL_ADC_GetValue(&hadc1);  //steeringPos
 349:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 350:Src/main.c    **** 	brakePressure_1 = HAL_ADC_GetValue(&hadc1);  //brakePressure_1
 351:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 352:Src/main.c    **** 	brakePressure_2 = HAL_ADC_GetValue(&hadc1);  //brakePressure_2
 353:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 354:Src/main.c    **** 	throttle_A = HAL_ADC_GetValue(&hadc1);  //throttle_A
 355:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 356:Src/main.c    **** 	throttle_B = HAL_ADC_GetValue(&hadc1);  //throttle_B
 357:Src/main.c    **** 	
 358:Src/main.c    **** 	HAL_ADC_Stop(&hadc1);
 359:Src/main.c    **** }
 360:Src/main.c    **** 
 361:Src/main.c    **** /********************************************************************************/
 362:Src/main.c    **** //Determines if the throttle percent difference is above 10%
 363:Src/main.c    **** //Returns: 1 if difference > 10%
 364:Src/main.c    **** //		   0 if everything is good 
 365:Src/main.c    **** /********************************************************************************/
 366:Src/main.c    **** int APPS_Diff(){
 367:Src/main.c    **** 
 368:Src/main.c    ****   double t_A = throttle_A;
 369:Src/main.c    ****   double t_B = throttle_B;
 370:Src/main.c    ****   
 371:Src/main.c    ****   //equalize throttles assuming 1mm diff out of 12.5mm from pots
 372:Src/main.c    ****   t_A -= (1/12.5)*max_throttle; 
 373:Src/main.c    **** 
 374:Src/main.c    ****   double numerator = t_A - t_B;
 375:Src/main.c    ****   
ARM GAS  /tmp/cclPZh3B.s 			page 8


 376:Src/main.c    ****   //absolute value
 377:Src/main.c    ****   if(numerator < 0){
 378:Src/main.c    ****     numerator = -1*numerator;
 379:Src/main.c    ****   }
 380:Src/main.c    **** 
 381:Src/main.c    ****   double denominator = (t_A + t_B)/2;
 382:Src/main.c    **** 
 383:Src/main.c    ****   double difference = 100*numerator/denominator;
 384:Src/main.c    **** 
 385:Src/main.c    ****   if(difference >= 10){
 386:Src/main.c    ****     return 1;
 387:Src/main.c    ****   }
 388:Src/main.c    ****   return 0;
 389:Src/main.c    **** }
 390:Src/main.c    **** 
 391:Src/main.c    **** /* USER CODE END 0 */
 392:Src/main.c    **** 
 393:Src/main.c    **** 
 394:Src/main.c    **** 
 395:Src/main.c    **** /**
 396:Src/main.c    ****   * @brief ADC1 Initialization Function
 397:Src/main.c    ****   * @param None
 398:Src/main.c    ****   * @retval None
 399:Src/main.c    ****   */
 400:Src/main.c    **** static void MX_ADC1_Init(void)
 401:Src/main.c    **** {
 402:Src/main.c    **** 
 403:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 404:Src/main.c    **** 
 405:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 406:Src/main.c    **** 
 407:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 408:Src/main.c    **** 
 409:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 410:Src/main.c    **** 
 411:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 412:Src/main.c    ****   /**Common config 
 413:Src/main.c    ****   */
 414:Src/main.c    ****   hadc1.Instance = ADC1;
 415:Src/main.c    ****   hadc1.Init.ScanConvMode = ENABLE;
 416:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 417:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 418:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 419:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 420:Src/main.c    ****   hadc1.Init.NbrOfConversion = 6;
 421:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 422:Src/main.c    ****   {
 423:Src/main.c    ****     Error_Handler();
 424:Src/main.c    ****   }
 425:Src/main.c    ****   /**Configure Regular Channel 
 426:Src/main.c    ****   */
 427:Src/main.c    ****   //Brake position
 428:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_0;
 429:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 430:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 431:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 432:Src/main.c    ****   {
ARM GAS  /tmp/cclPZh3B.s 			page 9


 433:Src/main.c    ****     Error_Handler();
 434:Src/main.c    ****   }
 435:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 436:Src/main.c    **** 
 437:Src/main.c    ****   //Steering Position 
 438:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_1;
 439:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 440:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 441:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 442:Src/main.c    ****     Error_Handler();
 443:Src/main.c    ****   }
 444:Src/main.c    ****   
 445:Src/main.c    ****   //Brake Pressure 1
 446:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_3;
 447:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 448:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 449:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 450:Src/main.c    ****     Error_Handler();
 451:Src/main.c    ****   }
 452:Src/main.c    ****   
 453:Src/main.c    ****   //Brake Pressure 2
 454:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_2;
 455:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 456:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 457:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 458:Src/main.c    ****     Error_Handler();
 459:Src/main.c    ****   }
 460:Src/main.c    ****   
 461:Src/main.c    ****   //ADC for throttle_A
 462:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 463:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 464:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 465:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 466:Src/main.c    ****     Error_Handler();
 467:Src/main.c    ****   }
 468:Src/main.c    ****   
 469:Src/main.c    ****   //ADC for throttle_B
 470:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_9;
 471:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 472:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 473:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 474:Src/main.c    ****     Error_Handler();
 475:Src/main.c    ****   }
 476:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 477:Src/main.c    **** }
 478:Src/main.c    **** 
 479:Src/main.c    **** /**
 480:Src/main.c    ****   * @brief CAN Initialization Function
 481:Src/main.c    ****   * @param None
 482:Src/main.c    ****   * @retval None
 483:Src/main.c    ****   */
 484:Src/main.c    **** static void MX_CAN_Init(void)
 485:Src/main.c    **** {
 486:Src/main.c    **** 
 487:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 0 */
 488:Src/main.c    **** 
 489:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
ARM GAS  /tmp/cclPZh3B.s 			page 10


 490:Src/main.c    **** 
 491:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 1 */
 492:Src/main.c    ****   HAL_CAN_Start(&hcan);
 493:Src/main.c    ****   TxHeader.StdId = 0x321;         // CAN standard ID
 494:Src/main.c    ****   TxHeader.ExtId = 0x01;          // CAN extended ID
 495:Src/main.c    ****   TxHeader.RTR = CAN_RTR_DATA;      // CAN frame type
 496:Src/main.c    ****   TxHeader.IDE = CAN_ID_STD;        // CAN ID type
 497:Src/main.c    ****   TxHeader.DLC = 8;             // CAN frame length in bytes
 498:Src/main.c    ****   TxHeader.TransmitGlobalTime = DISABLE;  // CAN timestamp in TxData[6] and TxData[7]
 499:Src/main.c    **** 
 500:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 501:Src/main.c    ****   hcan.Instance = CAN1;
 502:Src/main.c    ****   hcan.Init.Prescaler = 1;
 503:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 504:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 505:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_1TQ;
 506:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 507:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 508:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 509:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 510:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 511:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 512:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 513:Src/main.c    **** 
 514:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 515:Src/main.c    ****   {
 516:Src/main.c    ****     Error_Handler();
 517:Src/main.c    ****   }
 518:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 2 */
 519:Src/main.c    ****   TxHeader.StdId = 0x321; 					// CAN standard ID
 520:Src/main.c    ****   TxHeader.ExtId = 0x01; 					// CAN extended ID
 521:Src/main.c    ****   TxHeader.RTR = CAN_RTR_DATA; 				// CAN frame type
 522:Src/main.c    ****   TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 523:Src/main.c    ****   TxHeader.DLC = 8; 						// CAN frame length in bytes
 524:Src/main.c    ****   TxHeader.TransmitGlobalTime = DISABLE; 
 525:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 526:Src/main.c    **** 
 527:Src/main.c    **** }
 528:Src/main.c    **** 
 529:Src/main.c    **** /**
 530:Src/main.c    ****   * @brief SPI1 Initialization Function
 531:Src/main.c    ****   * @param None
 532:Src/main.c    ****   * @retval None
 533:Src/main.c    ****   */
 534:Src/main.c    **** static void MX_SPI1_Init(void)
 535:Src/main.c    **** {
 536:Src/main.c    **** 
 537:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 538:Src/main.c    **** 
 539:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 540:Src/main.c    **** 
 541:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 542:Src/main.c    **** 
 543:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 544:Src/main.c    ****   /* SPI1 parameter configuration*/
 545:Src/main.c    ****   hspi1.Instance = SPI1;
 546:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
ARM GAS  /tmp/cclPZh3B.s 			page 11


 547:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 548:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 549:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 550:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 551:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 552:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 553:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 554:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 555:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 556:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 557:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 558:Src/main.c    ****   {
 559:Src/main.c    ****     Error_Handler();
 560:Src/main.c    ****   }
 561:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 562:Src/main.c    **** 
 563:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 564:Src/main.c    **** 
 565:Src/main.c    **** }
 566:Src/main.c    **** 
 567:Src/main.c    **** /**
 568:Src/main.c    ****   * @brief GPIO Initialization Function
 569:Src/main.c    ****   * @param None
 570:Src/main.c    ****   * @retval None
 571:Src/main.c    ****   */
 572:Src/main.c    **** static void MX_GPIO_Init(void)
 573:Src/main.c    **** {
  26              		.loc 1 573 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 28
  33              		.cfi_offset 4, -28
  34              		.cfi_offset 5, -24
  35              		.cfi_offset 6, -20
  36              		.cfi_offset 7, -16
  37              		.cfi_offset 8, -12
  38              		.cfi_offset 9, -8
  39              		.cfi_offset 14, -4
  40 0004 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 574:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 574 0
  44 0006 0024     		movs	r4, #0
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
  49              	.LBB8:
 575:Src/main.c    **** 
 576:Src/main.c    ****   /* GPIO Ports Clock Enable */
 577:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 577 0
  51 0010 3F4B     		ldr	r3, .L3
ARM GAS  /tmp/cclPZh3B.s 			page 12


  52 0012 9A69     		ldr	r2, [r3, #24]
  53 0014 42F01002 		orr	r2, r2, #16
  54 0018 9A61     		str	r2, [r3, #24]
  55 001a 9A69     		ldr	r2, [r3, #24]
  56 001c 02F01002 		and	r2, r2, #16
  57 0020 0092     		str	r2, [sp]
  58 0022 009A     		ldr	r2, [sp]
  59              	.LBE8:
  60              	.LBB9:
 578:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  61              		.loc 1 578 0
  62 0024 9A69     		ldr	r2, [r3, #24]
  63 0026 42F02002 		orr	r2, r2, #32
  64 002a 9A61     		str	r2, [r3, #24]
  65 002c 9A69     		ldr	r2, [r3, #24]
  66 002e 02F02002 		and	r2, r2, #32
  67 0032 0192     		str	r2, [sp, #4]
  68 0034 019A     		ldr	r2, [sp, #4]
  69              	.LBE9:
  70              	.LBB10:
 579:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  71              		.loc 1 579 0
  72 0036 9A69     		ldr	r2, [r3, #24]
  73 0038 42F00402 		orr	r2, r2, #4
  74 003c 9A61     		str	r2, [r3, #24]
  75 003e 9A69     		ldr	r2, [r3, #24]
  76 0040 02F00402 		and	r2, r2, #4
  77 0044 0292     		str	r2, [sp, #8]
  78 0046 029A     		ldr	r2, [sp, #8]
  79              	.LBE10:
  80              	.LBB11:
 580:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  81              		.loc 1 580 0
  82 0048 9A69     		ldr	r2, [r3, #24]
  83 004a 42F00802 		orr	r2, r2, #8
  84 004e 9A61     		str	r2, [r3, #24]
  85 0050 9B69     		ldr	r3, [r3, #24]
  86 0052 03F00803 		and	r3, r3, #8
  87 0056 0393     		str	r3, [sp, #12]
  88 0058 039B     		ldr	r3, [sp, #12]
  89              	.LBE11:
 581:Src/main.c    **** 
 582:Src/main.c    ****   /*Configure GPIO pin Output Level */
 583:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  90              		.loc 1 583 0
  91 005a DFF8C480 		ldr	r8, .L3+16
  92 005e 4046     		mov	r0, r8
  93 0060 4FF40051 		mov	r1, #8192
  94 0064 2246     		mov	r2, r4
  95 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
  96              	.LVL0:
 584:Src/main.c    **** 
 585:Src/main.c    ****   /*Configure GPIO pin Output Level */
 586:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5 
  97              		.loc 1 586 0
  98 006a 2A4F     		ldr	r7, .L3+4
  99 006c 3846     		mov	r0, r7
ARM GAS  /tmp/cclPZh3B.s 			page 13


 100 006e 42F23811 		movw	r1, #8504
 101 0072 2246     		mov	r2, r4
 102 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 587:Src/main.c    ****                           |GPIO_PIN_8, GPIO_PIN_RESET);
 588:Src/main.c    **** 
 589:Src/main.c    ****   /*Configure GPIO pin Output Level */
 590:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 104              		.loc 1 590 0
 105 0078 DFF8A890 		ldr	r9, .L3+20
 106 007c 4846     		mov	r0, r9
 107 007e 4FF48061 		mov	r1, #1024
 108 0082 2246     		mov	r2, r4
 109 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 110              	.LVL2:
 591:Src/main.c    **** 
 592:Src/main.c    ****   /*Configure GPIO pin : PC13 */
 593:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 111              		.loc 1 593 0
 112 0088 4FF40053 		mov	r3, #8192
 113 008c 0493     		str	r3, [sp, #16]
 594:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 114              		.loc 1 594 0
 115 008e 0125     		movs	r5, #1
 116 0090 0595     		str	r5, [sp, #20]
 595:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 117              		.loc 1 595 0
 118 0092 0694     		str	r4, [sp, #24]
 596:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 119              		.loc 1 596 0
 120 0094 0226     		movs	r6, #2
 121 0096 0796     		str	r6, [sp, #28]
 597:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 122              		.loc 1 597 0
 123 0098 4046     		mov	r0, r8
 124 009a 04A9     		add	r1, sp, #16
 125 009c FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL3:
 598:Src/main.c    **** 
 599:Src/main.c    ****   /*Configure GPIO pins : PC14 PC15 */
 600:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 127              		.loc 1 600 0
 128 00a0 4FF44043 		mov	r3, #49152
 129 00a4 0493     		str	r3, [sp, #16]
 601:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 130              		.loc 1 601 0
 131 00a6 0594     		str	r4, [sp, #20]
 602:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 132              		.loc 1 602 0
 133 00a8 0694     		str	r4, [sp, #24]
 603:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 134              		.loc 1 603 0
 135 00aa 4046     		mov	r0, r8
 136 00ac 04A9     		add	r1, sp, #16
 137 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL4:
 604:Src/main.c    **** 
ARM GAS  /tmp/cclPZh3B.s 			page 14


 605:Src/main.c    ****   /*Configure GPIO pin : PD0 */
 606:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 139              		.loc 1 606 0
 140 00b2 0495     		str	r5, [sp, #16]
 607:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 141              		.loc 1 607 0
 142 00b4 0594     		str	r4, [sp, #20]
 608:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 143              		.loc 1 608 0
 144 00b6 0694     		str	r4, [sp, #24]
 609:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 145              		.loc 1 609 0
 146 00b8 1748     		ldr	r0, .L3+8
 147 00ba 04A9     		add	r1, sp, #16
 148 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL5:
 610:Src/main.c    **** 
 611:Src/main.c    ****   /*Configure GPIO pins : PB10 PB15 PB6 */
 612:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_15|GPIO_PIN_6;
 150              		.loc 1 612 0
 151 00c0 48F24043 		movw	r3, #33856
 152 00c4 0493     		str	r3, [sp, #16]
 613:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 153              		.loc 1 613 0
 154 00c6 0594     		str	r4, [sp, #20]
 614:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 614 0
 156 00c8 0694     		str	r4, [sp, #24]
 615:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 157              		.loc 1 615 0
 158 00ca 3846     		mov	r0, r7
 159 00cc 04A9     		add	r1, sp, #16
 160 00ce FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL6:
 616:Src/main.c    **** 
 617:Src/main.c    ****   /*Configure GPIO pins : PB13 PB3 PB4 PB5 
 618:Src/main.c    ****                            PB8 */
 619:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5 
 162              		.loc 1 619 0
 163 00d2 42F23813 		movw	r3, #8504
 164 00d6 0493     		str	r3, [sp, #16]
 620:Src/main.c    ****                           |GPIO_PIN_8;
 621:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 165              		.loc 1 621 0
 166 00d8 0595     		str	r5, [sp, #20]
 622:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 167              		.loc 1 622 0
 168 00da 0694     		str	r4, [sp, #24]
 623:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 169              		.loc 1 623 0
 170 00dc 0796     		str	r6, [sp, #28]
 624:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 171              		.loc 1 624 0
 172 00de 3846     		mov	r0, r7
 173 00e0 04A9     		add	r1, sp, #16
 174 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 175              	.LVL7:
ARM GAS  /tmp/cclPZh3B.s 			page 15


 625:Src/main.c    **** 
 626:Src/main.c    ****   /*Configure GPIO pin : PA10 */
 627:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 176              		.loc 1 627 0
 177 00e6 4FF48063 		mov	r3, #1024
 178 00ea 0493     		str	r3, [sp, #16]
 628:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 179              		.loc 1 628 0
 180 00ec 0595     		str	r5, [sp, #20]
 629:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 181              		.loc 1 629 0
 182 00ee 0694     		str	r4, [sp, #24]
 630:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 183              		.loc 1 630 0
 184 00f0 0796     		str	r6, [sp, #28]
 631:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 185              		.loc 1 631 0
 186 00f2 4846     		mov	r0, r9
 187 00f4 04A9     		add	r1, sp, #16
 188 00f6 FFF7FEFF 		bl	HAL_GPIO_Init
 189              	.LVL8:
 190              	.LBB12:
 632:Src/main.c    **** 
 633:Src/main.c    ****   /*Configure peripheral I/O remapping */
 634:Src/main.c    ****   __HAL_AFIO_REMAP_PD01_ENABLE();
 191              		.loc 1 634 0
 192 00fa 084A     		ldr	r2, .L3+12
 193 00fc 5368     		ldr	r3, [r2, #4]
 194              	.LVL9:
 195 00fe 43F0E063 		orr	r3, r3, #117440512
 196              	.LVL10:
 197 0102 43F40043 		orr	r3, r3, #32768
 198              	.LVL11:
 199 0106 5360     		str	r3, [r2, #4]
 200              	.LBE12:
 635:Src/main.c    **** 
 636:Src/main.c    **** }
 201              		.loc 1 636 0
 202 0108 09B0     		add	sp, sp, #36
 203              	.LCFI2:
 204              		.cfi_def_cfa_offset 28
 205              		@ sp needed
 206 010a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 207              	.L4:
 208 010e 00BF     		.align	2
 209              	.L3:
 210 0110 00100240 		.word	1073876992
 211 0114 000C0140 		.word	1073810432
 212 0118 00140140 		.word	1073812480
 213 011c 00000140 		.word	1073807360
 214 0120 00100140 		.word	1073811456
 215 0124 00080140 		.word	1073809408
 216              		.cfi_endproc
 217              	.LFE72:
 219              		.section	.text.MX_SPI1_Init,"ax",%progbits
 220              		.align	2
 221              		.thumb
ARM GAS  /tmp/cclPZh3B.s 			page 16


 222              		.thumb_func
 224              	MX_SPI1_Init:
 225              	.LFB71:
 535:Src/main.c    **** 
 226              		.loc 1 535 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 08B5     		push	{r3, lr}
 231              	.LCFI3:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
 545:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 235              		.loc 1 545 0
 236 0002 0B48     		ldr	r0, .L7
 237 0004 0B4B     		ldr	r3, .L7+4
 238 0006 0360     		str	r3, [r0]
 546:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 239              		.loc 1 546 0
 240 0008 4FF48273 		mov	r3, #260
 241 000c 4360     		str	r3, [r0, #4]
 547:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 242              		.loc 1 547 0
 243 000e 0023     		movs	r3, #0
 244 0010 8360     		str	r3, [r0, #8]
 548:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 245              		.loc 1 548 0
 246 0012 C360     		str	r3, [r0, #12]
 549:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 247              		.loc 1 549 0
 248 0014 0361     		str	r3, [r0, #16]
 550:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 249              		.loc 1 550 0
 250 0016 4361     		str	r3, [r0, #20]
 551:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 251              		.loc 1 551 0
 252 0018 4FF48022 		mov	r2, #262144
 253 001c 8261     		str	r2, [r0, #24]
 552:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 254              		.loc 1 552 0
 255 001e C361     		str	r3, [r0, #28]
 553:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 256              		.loc 1 553 0
 257 0020 0362     		str	r3, [r0, #32]
 554:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 258              		.loc 1 554 0
 259 0022 4362     		str	r3, [r0, #36]
 555:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 260              		.loc 1 555 0
 261 0024 8362     		str	r3, [r0, #40]
 556:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 262              		.loc 1 556 0
 263 0026 0A23     		movs	r3, #10
 264 0028 C362     		str	r3, [r0, #44]
 557:Src/main.c    ****   {
 265              		.loc 1 557 0
ARM GAS  /tmp/cclPZh3B.s 			page 17


 266 002a FFF7FEFF 		bl	HAL_SPI_Init
 267              	.LVL12:
 268 002e 08BD     		pop	{r3, pc}
 269              	.L8:
 270              		.align	2
 271              	.L7:
 272 0030 00000000 		.word	hspi1
 273 0034 00300140 		.word	1073819648
 274              		.cfi_endproc
 275              	.LFE71:
 277              		.section	.text.MX_ADC1_Init,"ax",%progbits
 278              		.align	2
 279              		.thumb
 280              		.thumb_func
 282              	MX_ADC1_Init:
 283              	.LFB69:
 401:Src/main.c    **** 
 284              		.loc 1 401 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 16
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 289              	.LCFI4:
 290              		.cfi_def_cfa_offset 20
 291              		.cfi_offset 4, -20
 292              		.cfi_offset 5, -16
 293              		.cfi_offset 6, -12
 294              		.cfi_offset 7, -8
 295              		.cfi_offset 14, -4
 296 0002 85B0     		sub	sp, sp, #20
 297              	.LCFI5:
 298              		.cfi_def_cfa_offset 40
 407:Src/main.c    **** 
 299              		.loc 1 407 0
 300 0004 0025     		movs	r5, #0
 301 0006 0195     		str	r5, [sp, #4]
 302 0008 0295     		str	r5, [sp, #8]
 303 000a 0395     		str	r5, [sp, #12]
 414:Src/main.c    ****   hadc1.Init.ScanConvMode = ENABLE;
 304              		.loc 1 414 0
 305 000c 294C     		ldr	r4, .L11
 306 000e 2A4B     		ldr	r3, .L11+4
 307 0010 2360     		str	r3, [r4]
 415:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 308              		.loc 1 415 0
 309 0012 D223     		movs	r3, #210
 310 0014 A360     		str	r3, [r4, #8]
 416:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 311              		.loc 1 416 0
 312 0016 E360     		str	r3, [r4, #12]
 417:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 313              		.loc 1 417 0
 314 0018 6561     		str	r5, [r4, #20]
 418:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 315              		.loc 1 418 0
 316 001a 4FF46023 		mov	r3, #917504
 317 001e E361     		str	r3, [r4, #28]
ARM GAS  /tmp/cclPZh3B.s 			page 18


 419:Src/main.c    ****   hadc1.Init.NbrOfConversion = 6;
 318              		.loc 1 419 0
 319 0020 6560     		str	r5, [r4, #4]
 420:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 320              		.loc 1 420 0
 321 0022 0626     		movs	r6, #6
 322 0024 2661     		str	r6, [r4, #16]
 421:Src/main.c    ****   {
 323              		.loc 1 421 0
 324 0026 2046     		mov	r0, r4
 325 0028 FFF7FEFF 		bl	HAL_ADC_Init
 326              	.LVL13:
 428:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 327              		.loc 1 428 0
 328 002c 0195     		str	r5, [sp, #4]
 429:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 329              		.loc 1 429 0
 330 002e 0127     		movs	r7, #1
 331 0030 0297     		str	r7, [sp, #8]
 430:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 332              		.loc 1 430 0
 333 0032 0395     		str	r5, [sp, #12]
 431:Src/main.c    ****   {
 334              		.loc 1 431 0
 335 0034 2046     		mov	r0, r4
 336 0036 01A9     		add	r1, sp, #4
 337 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 338              	.LVL14:
 438:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 339              		.loc 1 438 0
 340 003c 0197     		str	r7, [sp, #4]
 439:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 341              		.loc 1 439 0
 342 003e 0225     		movs	r5, #2
 343 0040 0295     		str	r5, [sp, #8]
 440:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 344              		.loc 1 440 0
 345 0042 2046     		mov	r0, r4
 346 0044 01A9     		add	r1, sp, #4
 347 0046 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 348              	.LVL15:
 441:Src/main.c    ****     Error_Handler();
 349              		.loc 1 441 0
 350 004a 2046     		mov	r0, r4
 351 004c 01A9     		add	r1, sp, #4
 352 004e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 353              	.LVL16:
 446:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 354              		.loc 1 446 0
 355 0052 0323     		movs	r3, #3
 356 0054 0193     		str	r3, [sp, #4]
 447:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 357              		.loc 1 447 0
 358 0056 0293     		str	r3, [sp, #8]
 448:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 359              		.loc 1 448 0
 360 0058 2046     		mov	r0, r4
ARM GAS  /tmp/cclPZh3B.s 			page 19


 361 005a 01A9     		add	r1, sp, #4
 362 005c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 363              	.LVL17:
 449:Src/main.c    ****     Error_Handler();
 364              		.loc 1 449 0
 365 0060 2046     		mov	r0, r4
 366 0062 01A9     		add	r1, sp, #4
 367 0064 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 368              	.LVL18:
 454:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 369              		.loc 1 454 0
 370 0068 0195     		str	r5, [sp, #4]
 455:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 371              		.loc 1 455 0
 372 006a 0423     		movs	r3, #4
 373 006c 0293     		str	r3, [sp, #8]
 456:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 374              		.loc 1 456 0
 375 006e 2046     		mov	r0, r4
 376 0070 0DEB0301 		add	r1, sp, r3
 377 0074 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 378              	.LVL19:
 457:Src/main.c    ****     Error_Handler();
 379              		.loc 1 457 0
 380 0078 2046     		mov	r0, r4
 381 007a 01A9     		add	r1, sp, #4
 382 007c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 383              	.LVL20:
 462:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 384              		.loc 1 462 0
 385 0080 0823     		movs	r3, #8
 386 0082 0193     		str	r3, [sp, #4]
 463:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 387              		.loc 1 463 0
 388 0084 0523     		movs	r3, #5
 389 0086 0293     		str	r3, [sp, #8]
 464:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 390              		.loc 1 464 0
 391 0088 2046     		mov	r0, r4
 392 008a 01A9     		add	r1, sp, #4
 393 008c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 394              	.LVL21:
 465:Src/main.c    ****     Error_Handler();
 395              		.loc 1 465 0
 396 0090 2046     		mov	r0, r4
 397 0092 01A9     		add	r1, sp, #4
 398 0094 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 399              	.LVL22:
 470:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 400              		.loc 1 470 0
 401 0098 0923     		movs	r3, #9
 402 009a 0193     		str	r3, [sp, #4]
 471:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 403              		.loc 1 471 0
 404 009c 0296     		str	r6, [sp, #8]
 472:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 405              		.loc 1 472 0
ARM GAS  /tmp/cclPZh3B.s 			page 20


 406 009e 2046     		mov	r0, r4
 407 00a0 01A9     		add	r1, sp, #4
 408 00a2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 409              	.LVL23:
 473:Src/main.c    ****     Error_Handler();
 410              		.loc 1 473 0
 411 00a6 2046     		mov	r0, r4
 412 00a8 01A9     		add	r1, sp, #4
 413 00aa FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 414              	.LVL24:
 477:Src/main.c    **** 
 415              		.loc 1 477 0
 416 00ae 05B0     		add	sp, sp, #20
 417              	.LCFI6:
 418              		.cfi_def_cfa_offset 20
 419              		@ sp needed
 420 00b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 421              	.L12:
 422 00b2 00BF     		.align	2
 423              	.L11:
 424 00b4 00000000 		.word	hadc1
 425 00b8 00240140 		.word	1073816576
 426              		.cfi_endproc
 427              	.LFE69:
 429              		.section	.text.MX_CAN_Init,"ax",%progbits
 430              		.align	2
 431              		.thumb
 432              		.thumb_func
 434              	MX_CAN_Init:
 435              	.LFB70:
 485:Src/main.c    **** 
 436              		.loc 1 485 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 441              	.LCFI7:
 442              		.cfi_def_cfa_offset 32
 443              		.cfi_offset 3, -32
 444              		.cfi_offset 4, -28
 445              		.cfi_offset 5, -24
 446              		.cfi_offset 6, -20
 447              		.cfi_offset 7, -16
 448              		.cfi_offset 8, -12
 449              		.cfi_offset 9, -8
 450              		.cfi_offset 14, -4
 492:Src/main.c    ****   TxHeader.StdId = 0x321;         // CAN standard ID
 451              		.loc 1 492 0
 452 0004 164D     		ldr	r5, .L15
 453 0006 2846     		mov	r0, r5
 454 0008 FFF7FEFF 		bl	HAL_CAN_Start
 455              	.LVL25:
 493:Src/main.c    ****   TxHeader.ExtId = 0x01;          // CAN extended ID
 456              		.loc 1 493 0
 457 000c 154E     		ldr	r6, .L15+4
 458 000e 40F22139 		movw	r9, #801
 459 0012 C6F80090 		str	r9, [r6]
ARM GAS  /tmp/cclPZh3B.s 			page 21


 494:Src/main.c    ****   TxHeader.RTR = CAN_RTR_DATA;      // CAN frame type
 460              		.loc 1 494 0
 461 0016 0127     		movs	r7, #1
 462 0018 7760     		str	r7, [r6, #4]
 495:Src/main.c    ****   TxHeader.IDE = CAN_ID_STD;        // CAN ID type
 463              		.loc 1 495 0
 464 001a 0024     		movs	r4, #0
 465 001c F460     		str	r4, [r6, #12]
 496:Src/main.c    ****   TxHeader.DLC = 8;             // CAN frame length in bytes
 466              		.loc 1 496 0
 467 001e B460     		str	r4, [r6, #8]
 497:Src/main.c    ****   TxHeader.TransmitGlobalTime = DISABLE;  // CAN timestamp in TxData[6] and TxData[7]
 468              		.loc 1 497 0
 469 0020 4FF00808 		mov	r8, #8
 470 0024 C6F81080 		str	r8, [r6, #16]
 498:Src/main.c    **** 
 471              		.loc 1 498 0
 472 0028 3475     		strb	r4, [r6, #20]
 501:Src/main.c    ****   hcan.Init.Prescaler = 1;
 473              		.loc 1 501 0
 474 002a 0F4B     		ldr	r3, .L15+8
 475 002c 2B60     		str	r3, [r5]
 502:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 476              		.loc 1 502 0
 477 002e 6F60     		str	r7, [r5, #4]
 503:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 478              		.loc 1 503 0
 479 0030 AC60     		str	r4, [r5, #8]
 504:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_1TQ;
 480              		.loc 1 504 0
 481 0032 EC60     		str	r4, [r5, #12]
 505:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 482              		.loc 1 505 0
 483 0034 2C61     		str	r4, [r5, #16]
 506:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 484              		.loc 1 506 0
 485 0036 6C61     		str	r4, [r5, #20]
 507:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 486              		.loc 1 507 0
 487 0038 2C76     		strb	r4, [r5, #24]
 508:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 488              		.loc 1 508 0
 489 003a 6C76     		strb	r4, [r5, #25]
 509:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 490              		.loc 1 509 0
 491 003c AC76     		strb	r4, [r5, #26]
 510:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 492              		.loc 1 510 0
 493 003e EC76     		strb	r4, [r5, #27]
 511:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 494              		.loc 1 511 0
 495 0040 2C77     		strb	r4, [r5, #28]
 512:Src/main.c    **** 
 496              		.loc 1 512 0
 497 0042 6C77     		strb	r4, [r5, #29]
 514:Src/main.c    ****   {
 498              		.loc 1 514 0
ARM GAS  /tmp/cclPZh3B.s 			page 22


 499 0044 2846     		mov	r0, r5
 500 0046 FFF7FEFF 		bl	HAL_CAN_Init
 501              	.LVL26:
 519:Src/main.c    ****   TxHeader.ExtId = 0x01; 					// CAN extended ID
 502              		.loc 1 519 0
 503 004a C6F80090 		str	r9, [r6]
 520:Src/main.c    ****   TxHeader.RTR = CAN_RTR_DATA; 				// CAN frame type
 504              		.loc 1 520 0
 505 004e 7760     		str	r7, [r6, #4]
 521:Src/main.c    ****   TxHeader.IDE = CAN_ID_STD; 				// CAN ID type
 506              		.loc 1 521 0
 507 0050 F460     		str	r4, [r6, #12]
 522:Src/main.c    ****   TxHeader.DLC = 8; 						// CAN frame length in bytes
 508              		.loc 1 522 0
 509 0052 B460     		str	r4, [r6, #8]
 523:Src/main.c    ****   TxHeader.TransmitGlobalTime = DISABLE; 
 510              		.loc 1 523 0
 511 0054 C6F81080 		str	r8, [r6, #16]
 524:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 512              		.loc 1 524 0
 513 0058 3475     		strb	r4, [r6, #20]
 514 005a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 515              	.L16:
 516 005e 00BF     		.align	2
 517              	.L15:
 518 0060 00000000 		.word	hcan
 519 0064 00000000 		.word	TxHeader
 520 0068 00640040 		.word	1073767424
 521              		.cfi_endproc
 522              	.LFE70:
 524              		.section	.text.SystemClock_Config,"ax",%progbits
 525              		.align	2
 526              		.global	SystemClock_Config
 527              		.thumb
 528              		.thumb_func
 530              	SystemClock_Config:
 531              	.LFB64:
 251:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 532              		.loc 1 251 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 80
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536 0000 30B5     		push	{r4, r5, lr}
 537              	.LCFI8:
 538              		.cfi_def_cfa_offset 12
 539              		.cfi_offset 4, -12
 540              		.cfi_offset 5, -8
 541              		.cfi_offset 14, -4
 542 0002 95B0     		sub	sp, sp, #84
 543              	.LCFI9:
 544              		.cfi_def_cfa_offset 96
 252:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 545              		.loc 1 252 0
 546 0004 0024     		movs	r4, #0
 547 0006 0B94     		str	r4, [sp, #44]
 548 0008 0C94     		str	r4, [sp, #48]
 549 000a 0D94     		str	r4, [sp, #52]
ARM GAS  /tmp/cclPZh3B.s 			page 23


 550 000c 1094     		str	r4, [sp, #64]
 551 000e 1194     		str	r4, [sp, #68]
 552 0010 1294     		str	r4, [sp, #72]
 553 0012 1394     		str	r4, [sp, #76]
 253:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 554              		.loc 1 253 0
 555 0014 0594     		str	r4, [sp, #20]
 556 0016 0694     		str	r4, [sp, #24]
 557 0018 0794     		str	r4, [sp, #28]
 558 001a 0894     		str	r4, [sp, #32]
 559 001c 0994     		str	r4, [sp, #36]
 254:Src/main.c    **** 
 560              		.loc 1 254 0
 561 001e 0194     		str	r4, [sp, #4]
 562 0020 0294     		str	r4, [sp, #8]
 563 0022 0394     		str	r4, [sp, #12]
 564 0024 0494     		str	r4, [sp, #16]
 258:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 565              		.loc 1 258 0
 566 0026 0225     		movs	r5, #2
 567 0028 0A95     		str	r5, [sp, #40]
 259:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 568              		.loc 1 259 0
 569 002a 0123     		movs	r3, #1
 570 002c 0E93     		str	r3, [sp, #56]
 260:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 571              		.loc 1 260 0
 572 002e 1023     		movs	r3, #16
 573 0030 0F93     		str	r3, [sp, #60]
 262:Src/main.c    ****   {
 574              		.loc 1 262 0
 575 0032 0AA8     		add	r0, sp, #40
 576 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 577              	.LVL27:
 268:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 578              		.loc 1 268 0
 579 0038 0F23     		movs	r3, #15
 580 003a 0593     		str	r3, [sp, #20]
 270:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 581              		.loc 1 270 0
 582 003c 0694     		str	r4, [sp, #24]
 271:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 583              		.loc 1 271 0
 584 003e 0794     		str	r4, [sp, #28]
 272:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 585              		.loc 1 272 0
 586 0040 0894     		str	r4, [sp, #32]
 273:Src/main.c    **** 
 587              		.loc 1 273 0
 588 0042 0994     		str	r4, [sp, #36]
 275:Src/main.c    ****   {
 589              		.loc 1 275 0
 590 0044 05A8     		add	r0, sp, #20
 591 0046 2146     		mov	r1, r4
 592 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 593              	.LVL28:
 279:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
ARM GAS  /tmp/cclPZh3B.s 			page 24


 594              		.loc 1 279 0
 595 004c 0195     		str	r5, [sp, #4]
 280:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 596              		.loc 1 280 0
 597 004e 0394     		str	r4, [sp, #12]
 281:Src/main.c    ****   {
 598              		.loc 1 281 0
 599 0050 01A8     		add	r0, sp, #4
 600 0052 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 601              	.LVL29:
 285:Src/main.c    **** 
 602              		.loc 1 285 0
 603 0056 15B0     		add	sp, sp, #84
 604              	.LCFI10:
 605              		.cfi_def_cfa_offset 12
 606              		@ sp needed
 607 0058 30BD     		pop	{r4, r5, pc}
 608              		.cfi_endproc
 609              	.LFE64:
 611              		.section	.text.updateADC,"ax",%progbits
 612              		.align	2
 613              		.global	updateADC
 614              		.thumb
 615              		.thumb_func
 617              	updateADC:
 618              	.LFB67:
 341:Src/main.c    **** 	//HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 619              		.loc 1 341 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623 0000 10B5     		push	{r4, lr}
 624              	.LCFI11:
 625              		.cfi_def_cfa_offset 8
 626              		.cfi_offset 4, -8
 627              		.cfi_offset 14, -4
 343:Src/main.c    **** 	
 628              		.loc 1 343 0
 629 0002 224C     		ldr	r4, .L21
 630 0004 2046     		mov	r0, r4
 631 0006 FFF7FEFF 		bl	HAL_ADC_Start
 632              	.LVL30:
 345:Src/main.c    **** 	brakePos = HAL_ADC_GetValue(&hadc1);  //brakePos
 633              		.loc 1 345 0
 634 000a 2046     		mov	r0, r4
 635 000c 4FF47A71 		mov	r1, #1000
 636 0010 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 637              	.LVL31:
 346:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 638              		.loc 1 346 0
 639 0014 2046     		mov	r0, r4
 640 0016 FFF7FEFF 		bl	HAL_ADC_GetValue
 641              	.LVL32:
 642 001a 1D4B     		ldr	r3, .L21+4
 643 001c 1880     		strh	r0, [r3]	@ movhi
 347:Src/main.c    **** 	steeringPos = HAL_ADC_GetValue(&hadc1);  //steeringPos
 644              		.loc 1 347 0
ARM GAS  /tmp/cclPZh3B.s 			page 25


 645 001e 2046     		mov	r0, r4
 646 0020 4FF47A71 		mov	r1, #1000
 647 0024 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 648              	.LVL33:
 348:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 649              		.loc 1 348 0
 650 0028 2046     		mov	r0, r4
 651 002a FFF7FEFF 		bl	HAL_ADC_GetValue
 652              	.LVL34:
 653 002e 194B     		ldr	r3, .L21+8
 654 0030 1880     		strh	r0, [r3]	@ movhi
 349:Src/main.c    **** 	brakePressure_1 = HAL_ADC_GetValue(&hadc1);  //brakePressure_1
 655              		.loc 1 349 0
 656 0032 2046     		mov	r0, r4
 657 0034 4FF47A71 		mov	r1, #1000
 658 0038 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 659              	.LVL35:
 350:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 660              		.loc 1 350 0
 661 003c 2046     		mov	r0, r4
 662 003e FFF7FEFF 		bl	HAL_ADC_GetValue
 663              	.LVL36:
 664 0042 154B     		ldr	r3, .L21+12
 665 0044 1880     		strh	r0, [r3]	@ movhi
 351:Src/main.c    **** 	brakePressure_2 = HAL_ADC_GetValue(&hadc1);  //brakePressure_2
 666              		.loc 1 351 0
 667 0046 2046     		mov	r0, r4
 668 0048 4FF47A71 		mov	r1, #1000
 669 004c FFF7FEFF 		bl	HAL_ADC_PollForConversion
 670              	.LVL37:
 352:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 671              		.loc 1 352 0
 672 0050 2046     		mov	r0, r4
 673 0052 FFF7FEFF 		bl	HAL_ADC_GetValue
 674              	.LVL38:
 675 0056 114B     		ldr	r3, .L21+16
 676 0058 1880     		strh	r0, [r3]	@ movhi
 353:Src/main.c    **** 	throttle_A = HAL_ADC_GetValue(&hadc1);  //throttle_A
 677              		.loc 1 353 0
 678 005a 2046     		mov	r0, r4
 679 005c 4FF47A71 		mov	r1, #1000
 680 0060 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 681              	.LVL39:
 354:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 682              		.loc 1 354 0
 683 0064 2046     		mov	r0, r4
 684 0066 FFF7FEFF 		bl	HAL_ADC_GetValue
 685              	.LVL40:
 686 006a 0D4B     		ldr	r3, .L21+20
 687 006c 1880     		strh	r0, [r3]	@ movhi
 355:Src/main.c    **** 	throttle_B = HAL_ADC_GetValue(&hadc1);  //throttle_B
 688              		.loc 1 355 0
 689 006e 2046     		mov	r0, r4
 690 0070 4FF47A71 		mov	r1, #1000
 691 0074 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 692              	.LVL41:
 356:Src/main.c    **** 	
ARM GAS  /tmp/cclPZh3B.s 			page 26


 693              		.loc 1 356 0
 694 0078 2046     		mov	r0, r4
 695 007a FFF7FEFF 		bl	HAL_ADC_GetValue
 696              	.LVL42:
 697 007e 094B     		ldr	r3, .L21+24
 698 0080 1880     		strh	r0, [r3]	@ movhi
 358:Src/main.c    **** }
 699              		.loc 1 358 0
 700 0082 2046     		mov	r0, r4
 701 0084 FFF7FEFF 		bl	HAL_ADC_Stop
 702              	.LVL43:
 703 0088 10BD     		pop	{r4, pc}
 704              	.L22:
 705 008a 00BF     		.align	2
 706              	.L21:
 707 008c 00000000 		.word	hadc1
 708 0090 00000000 		.word	brakePos
 709 0094 00000000 		.word	steeringPos
 710 0098 00000000 		.word	brakePressure_1
 711 009c 00000000 		.word	brakePressure_2
 712 00a0 00000000 		.word	throttle_A
 713 00a4 00000000 		.word	throttle_B
 714              		.cfi_endproc
 715              	.LFE67:
 717              		.section	.text.checkBTSF,"ax",%progbits
 718              		.align	2
 719              		.global	checkBTSF
 720              		.thumb
 721              		.thumb_func
 723              	checkBTSF:
 724              	.LFB66:
 317:Src/main.c    ****   int BTSFFlag = 0;
 725              		.loc 1 317 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729 0000 08B5     		push	{r3, lr}
 730              	.LCFI12:
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 3, -8
 733              		.cfi_offset 14, -4
 734              	.LVL44:
 319:Src/main.c    **** 
 735              		.loc 1 319 0
 736 0002 FFF7FEFF 		bl	updateADC
 737              	.LVL45:
 323:Src/main.c    ****     BTSFFlag = 1;
 738              		.loc 1 323 0
 739 0006 104B     		ldr	r3, .L29
 740 0008 1B88     		ldrh	r3, [r3]
 741 000a 502B     		cmp	r3, #80
 742 000c 15DD     		ble	.L25
 323:Src/main.c    ****     BTSFFlag = 1;
 743              		.loc 1 323 0 is_stmt 0 discriminator 1
 744 000e 0F4B     		ldr	r3, .L29+4
 745 0010 1B88     		ldrh	r3, [r3]
 746 0012 502B     		cmp	r3, #80
ARM GAS  /tmp/cclPZh3B.s 			page 27


 747 0014 13DD     		ble	.L26
 748              	.LVL46:
 327:Src/main.c    ****       TxHeader.StdId = BTSF_STDID;
 749              		.loc 1 327 0 is_stmt 1
 750 0016 0E48     		ldr	r0, .L29+8
 751 0018 0E49     		ldr	r1, .L29+12
 752 001a 0F4A     		ldr	r2, .L29+16
 753 001c 0F4B     		ldr	r3, .L29+20
 754 001e FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 755              	.LVL47:
 756 0022 70B9     		cbnz	r0, .L27
 328:Src/main.c    ****       HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 757              		.loc 1 328 0
 758 0024 0B49     		ldr	r1, .L29+12
 759 0026 40F20133 		movw	r3, #769
 760 002a 0B60     		str	r3, [r1]
 329:Src/main.c    ****     }
 761              		.loc 1 329 0
 762 002c 0848     		ldr	r0, .L29+8
 763 002e 0A4A     		ldr	r2, .L29+16
 764 0030 0A4B     		ldr	r3, .L29+20
 765 0032 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 766              	.LVL48:
 324:Src/main.c    **** 
 767              		.loc 1 324 0
 768 0036 0120     		movs	r0, #1
 769 0038 08BD     		pop	{r3, pc}
 770              	.LVL49:
 771              	.L25:
 318:Src/main.c    ****   updateADC();
 772              		.loc 1 318 0
 773 003a 0020     		movs	r0, #0
 774 003c 08BD     		pop	{r3, pc}
 775              	.L26:
 776 003e 0020     		movs	r0, #0
 777 0040 08BD     		pop	{r3, pc}
 778              	.LVL50:
 779              	.L27:
 324:Src/main.c    **** 
 780              		.loc 1 324 0
 781 0042 0120     		movs	r0, #1
 782              	.LVL51:
 334:Src/main.c    **** 
 783              		.loc 1 334 0
 784 0044 08BD     		pop	{r3, pc}
 785              	.L30:
 786 0046 00BF     		.align	2
 787              	.L29:
 788 0048 00000000 		.word	brakePressure_1
 789 004c 00000000 		.word	throttle_A
 790 0050 00000000 		.word	hcan
 791 0054 00000000 		.word	TxHeader
 792 0058 00000000 		.word	.LANCHOR0
 793 005c 00000000 		.word	TxMailbox
 794              		.cfi_endproc
 795              	.LFE66:
 797              		.global	__aeabi_ui2d
ARM GAS  /tmp/cclPZh3B.s 			page 28


 798              		.global	__aeabi_i2d
 799              		.global	__aeabi_dmul
 800              		.global	__aeabi_dsub
 801              		.global	__aeabi_dcmplt
 802              		.global	__aeabi_dadd
 803              		.global	__aeabi_ddiv
 804              		.global	__aeabi_dcmpge
 805              		.section	.text.APPS_Diff,"ax",%progbits
 806              		.align	2
 807              		.global	APPS_Diff
 808              		.thumb
 809              		.thumb_func
 811              	APPS_Diff:
 812              	.LFB68:
 366:Src/main.c    **** 
 813              		.loc 1 366 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 818              	.LCFI13:
 819              		.cfi_def_cfa_offset 32
 820              		.cfi_offset 3, -32
 821              		.cfi_offset 4, -28
 822              		.cfi_offset 5, -24
 823              		.cfi_offset 6, -20
 824              		.cfi_offset 7, -16
 825              		.cfi_offset 8, -12
 826              		.cfi_offset 9, -8
 827              		.cfi_offset 14, -4
 368:Src/main.c    ****   double t_B = throttle_B;
 828              		.loc 1 368 0
 829 0004 284B     		ldr	r3, .L41+8
 830 0006 1888     		ldrh	r0, [r3]
 831 0008 FFF7FEFF 		bl	__aeabi_ui2d
 832              	.LVL52:
 833 000c 0446     		mov	r4, r0
 834 000e 0D46     		mov	r5, r1
 835              	.LVL53:
 369:Src/main.c    ****   
 836              		.loc 1 369 0
 837 0010 264B     		ldr	r3, .L41+12
 838 0012 1888     		ldrh	r0, [r3]
 839 0014 FFF7FEFF 		bl	__aeabi_ui2d
 840              	.LVL54:
 841 0018 0646     		mov	r6, r0
 842 001a 0F46     		mov	r7, r1
 843              	.LVL55:
 372:Src/main.c    **** 
 844              		.loc 1 372 0
 845 001c 244B     		ldr	r3, .L41+16
 846 001e 1888     		ldrh	r0, [r3]
 847 0020 FFF7FEFF 		bl	__aeabi_i2d
 848              	.LVL56:
 849 0024 1EA3     		adr	r3, .L41
 850 0026 D3E90023 		ldrd	r2, [r3]
 851 002a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/cclPZh3B.s 			page 29


 852              	.LVL57:
 853 002e 0246     		mov	r2, r0
 854 0030 0B46     		mov	r3, r1
 855 0032 2046     		mov	r0, r4
 856 0034 2946     		mov	r1, r5
 857 0036 FFF7FEFF 		bl	__aeabi_dsub
 858              	.LVL58:
 859 003a 8046     		mov	r8, r0
 860 003c 8946     		mov	r9, r1
 861              	.LVL59:
 374:Src/main.c    ****   
 862              		.loc 1 374 0
 863 003e 3246     		mov	r2, r6
 864 0040 3B46     		mov	r3, r7
 865 0042 FFF7FEFF 		bl	__aeabi_dsub
 866              	.LVL60:
 867 0046 0546     		mov	r5, r0
 868 0048 0C46     		mov	r4, r1
 869              	.LVL61:
 377:Src/main.c    ****     numerator = -1*numerator;
 870              		.loc 1 377 0
 871 004a 2846     		mov	r0, r5
 872 004c 2146     		mov	r1, r4
 873 004e 0022     		movs	r2, #0
 874 0050 0023     		movs	r3, #0
 875 0052 FFF7FEFF 		bl	__aeabi_dcmplt
 876              	.LVL62:
 877 0056 08B1     		cbz	r0, .L32
 378:Src/main.c    ****   }
 878              		.loc 1 378 0
 879 0058 04F10044 		add	r4, r4, #-2147483648
 880              	.LVL63:
 881              	.L32:
 381:Src/main.c    **** 
 882              		.loc 1 381 0
 883 005c 4046     		mov	r0, r8
 884 005e 4946     		mov	r1, r9
 885 0060 3246     		mov	r2, r6
 886 0062 3B46     		mov	r3, r7
 887 0064 FFF7FEFF 		bl	__aeabi_dadd
 888              	.LVL64:
 889 0068 0022     		movs	r2, #0
 890 006a 124B     		ldr	r3, .L41+20
 891 006c FFF7FEFF 		bl	__aeabi_dmul
 892              	.LVL65:
 893 0070 0646     		mov	r6, r0
 894              	.LVL66:
 895 0072 0F46     		mov	r7, r1
 896              	.LVL67:
 383:Src/main.c    **** 
 897              		.loc 1 383 0
 898 0074 2846     		mov	r0, r5
 899 0076 2146     		mov	r1, r4
 900 0078 0022     		movs	r2, #0
 901 007a 0F4B     		ldr	r3, .L41+24
 902 007c FFF7FEFF 		bl	__aeabi_dmul
 903              	.LVL68:
ARM GAS  /tmp/cclPZh3B.s 			page 30


 904 0080 3246     		mov	r2, r6
 905 0082 3B46     		mov	r3, r7
 906 0084 FFF7FEFF 		bl	__aeabi_ddiv
 907              	.LVL69:
 385:Src/main.c    ****     return 1;
 908              		.loc 1 385 0
 909 0088 0022     		movs	r2, #0
 910 008a 0C4B     		ldr	r3, .L41+28
 911 008c FFF7FEFF 		bl	__aeabi_dcmpge
 912              	.LVL70:
 913 0090 10B1     		cbz	r0, .L39
 386:Src/main.c    ****   }
 914              		.loc 1 386 0
 915 0092 0120     		movs	r0, #1
 916 0094 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 917              	.LVL71:
 918              	.L39:
 388:Src/main.c    **** }
 919              		.loc 1 388 0
 920 0098 0020     		movs	r0, #0
 389:Src/main.c    **** 
 921              		.loc 1 389 0
 922 009a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 923              	.LVL72:
 924              	.L42:
 925 009e 00BF     		.align	3
 926              	.L41:
 927 00a0 7B14AE47 		.word	1202590843
 928 00a4 E17AB43F 		.word	1068792545
 929 00a8 00000000 		.word	throttle_A
 930 00ac 00000000 		.word	throttle_B
 931 00b0 00000000 		.word	.LANCHOR1
 932 00b4 0000E03F 		.word	1071644672
 933 00b8 00005940 		.word	1079574528
 934 00bc 00002440 		.word	1076101120
 935              		.cfi_endproc
 936              	.LFE68:
 938              		.section	.text.checkAPPS,"ax",%progbits
 939              		.align	2
 940              		.global	checkAPPS
 941              		.thumb
 942              		.thumb_func
 944              	checkAPPS:
 945              	.LFB65:
 293:Src/main.c    **** 
 946              		.loc 1 293 0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 0
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950 0000 08B5     		push	{r3, lr}
 951              	.LCFI14:
 952              		.cfi_def_cfa_offset 8
 953              		.cfi_offset 3, -8
 954              		.cfi_offset 14, -4
 295:Src/main.c    ****   //0-5000 based ?
 955              		.loc 1 295 0
 956 0002 FFF7FEFF 		bl	updateADC
ARM GAS  /tmp/cclPZh3B.s 			page 31


 957              	.LVL73:
 299:Src/main.c    ****   while(millisTimer > 0 && APPS_Diff()){ //stay in this loop while there is a 10% difference in thr
 958              		.loc 1 299 0
 959 0006 4FF47A72 		mov	r2, #1000
 960 000a 034B     		ldr	r3, .L46
 961 000c 1A60     		str	r2, [r3]
 962              	.L44:
 300:Src/main.c    ****   }
 963              		.loc 1 300 0 discriminator 2
 964 000e FFF7FEFF 		bl	APPS_Diff
 965              	.LVL74:
 966 0012 0028     		cmp	r0, #0
 967 0014 FBD1     		bne	.L44
 310:Src/main.c    **** 
 968              		.loc 1 310 0
 969 0016 08BD     		pop	{r3, pc}
 970              	.L47:
 971              		.align	2
 972              	.L46:
 973 0018 00000000 		.word	millisTimer
 974              		.cfi_endproc
 975              	.LFE65:
 977              		.section	.text.resetTXData,"ax",%progbits
 978              		.align	2
 979              		.global	resetTXData
 980              		.thumb
 981              		.thumb_func
 983              	resetTXData:
 984              	.LFB76:
 637:Src/main.c    **** 
 638:Src/main.c    **** /* USER CODE BEGIN 4 */
 639:Src/main.c    **** 
 640:Src/main.c    **** void sendFaultMsg(){
 641:Src/main.c    **** 	resetTXData();
 642:Src/main.c    **** 	TxHeader.StdId = FAULTS; // CAN FAULT ID
 643:Src/main.c    **** 	TxData[0] = bms;  //Set all the data (faults) to their current values
 644:Src/main.c    **** 	TxData[1] = imd;
 645:Src/main.c    **** 	TxData[2] = bspd;
 646:Src/main.c    **** 	TxData[3] = apps;
 647:Src/main.c    **** 	HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 648:Src/main.c    **** }
 649:Src/main.c    **** 
 650:Src/main.c    **** void sendPrechargeMsg(){
 651:Src/main.c    **** 	resetTXData();
 652:Src/main.c    **** 	TxHeader.StdId = PRECHARGE;
 653:Src/main.c    **** 	TxData[0] = charged;
 654:Src/main.c    **** 	HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 655:Src/main.c    **** }
 656:Src/main.c    **** 
 657:Src/main.c    **** void sendEnableMsg(){
 658:Src/main.c    **** 	resetTXData();
 659:Src/main.c    **** 	TxHeader.StdId = ENABLE;
 660:Src/main.c    **** 	TxData[0] = enable;
 661:Src/main.c    **** 	HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 662:Src/main.c    **** }
 663:Src/main.c    **** 
 664:Src/main.c    **** void resetTXData(){
ARM GAS  /tmp/cclPZh3B.s 			page 32


 985              		.loc 1 664 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              		@ link register save eliminated.
 665:Src/main.c    **** 	TxData[0] = 0x00;
 990              		.loc 1 665 0
 991 0000 054B     		ldr	r3, .L49
 992 0002 0022     		movs	r2, #0
 993 0004 1A70     		strb	r2, [r3]
 666:Src/main.c    **** 	TxData[1] = 0x00;
 994              		.loc 1 666 0
 995 0006 5A70     		strb	r2, [r3, #1]
 667:Src/main.c    **** 	TxData[2] = 0x00;
 996              		.loc 1 667 0
 997 0008 9A70     		strb	r2, [r3, #2]
 668:Src/main.c    **** 	TxData[3] = 0x00;
 998              		.loc 1 668 0
 999 000a DA70     		strb	r2, [r3, #3]
 669:Src/main.c    **** 	TxData[4] = 0x00;
 1000              		.loc 1 669 0
 1001 000c 1A71     		strb	r2, [r3, #4]
 670:Src/main.c    **** 	TxData[5] = 0x00;
 1002              		.loc 1 670 0
 1003 000e 5A71     		strb	r2, [r3, #5]
 671:Src/main.c    **** 	TxData[6] = 0x00;
 1004              		.loc 1 671 0
 1005 0010 9A71     		strb	r2, [r3, #6]
 672:Src/main.c    **** 	TxData[7] = 0x00;
 1006              		.loc 1 672 0
 1007 0012 DA71     		strb	r2, [r3, #7]
 1008 0014 7047     		bx	lr
 1009              	.L50:
 1010 0016 00BF     		.align	2
 1011              	.L49:
 1012 0018 00000000 		.word	.LANCHOR0
 1013              		.cfi_endproc
 1014              	.LFE76:
 1016              		.section	.text.sendFaultMsg,"ax",%progbits
 1017              		.align	2
 1018              		.global	sendFaultMsg
 1019              		.thumb
 1020              		.thumb_func
 1022              	sendFaultMsg:
 1023              	.LFB73:
 640:Src/main.c    **** 	resetTXData();
 1024              		.loc 1 640 0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028 0000 08B5     		push	{r3, lr}
 1029              	.LCFI15:
 1030              		.cfi_def_cfa_offset 8
 1031              		.cfi_offset 3, -8
 1032              		.cfi_offset 14, -4
 641:Src/main.c    **** 	TxHeader.StdId = FAULTS; // CAN FAULT ID
 1033              		.loc 1 641 0
ARM GAS  /tmp/cclPZh3B.s 			page 33


 1034 0002 FFF7FEFF 		bl	resetTXData
 1035              	.LVL75:
 642:Src/main.c    **** 	TxData[0] = bms;  //Set all the data (faults) to their current values
 1036              		.loc 1 642 0
 1037 0006 0A49     		ldr	r1, .L53
 1038 0008 D023     		movs	r3, #208
 1039 000a 0B60     		str	r3, [r1]
 643:Src/main.c    **** 	TxData[1] = imd;
 1040              		.loc 1 643 0
 1041 000c 094A     		ldr	r2, .L53+4
 1042 000e 0A4B     		ldr	r3, .L53+8
 1043 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1044 0012 1370     		strb	r3, [r2]
 644:Src/main.c    **** 	TxData[2] = bspd;
 1045              		.loc 1 644 0
 1046 0014 094B     		ldr	r3, .L53+12
 1047 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1048 0018 5370     		strb	r3, [r2, #1]
 645:Src/main.c    **** 	TxData[3] = apps;
 1049              		.loc 1 645 0
 1050 001a 094B     		ldr	r3, .L53+16
 1051 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1052 001e 9370     		strb	r3, [r2, #2]
 646:Src/main.c    **** 	HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 1053              		.loc 1 646 0
 1054 0020 084B     		ldr	r3, .L53+20
 1055 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1056 0024 D370     		strb	r3, [r2, #3]
 647:Src/main.c    **** }
 1057              		.loc 1 647 0
 1058 0026 0848     		ldr	r0, .L53+24
 1059 0028 084B     		ldr	r3, .L53+28
 1060 002a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1061              	.LVL76:
 1062 002e 08BD     		pop	{r3, pc}
 1063              	.L54:
 1064              		.align	2
 1065              	.L53:
 1066 0030 00000000 		.word	TxHeader
 1067 0034 00000000 		.word	.LANCHOR0
 1068 0038 00000000 		.word	bms
 1069 003c 00000000 		.word	imd
 1070 0040 00000000 		.word	bspd
 1071 0044 00000000 		.word	apps
 1072 0048 00000000 		.word	hcan
 1073 004c 00000000 		.word	TxMailbox
 1074              		.cfi_endproc
 1075              	.LFE73:
 1077              		.section	.text.sendPrechargeMsg,"ax",%progbits
 1078              		.align	2
 1079              		.global	sendPrechargeMsg
 1080              		.thumb
 1081              		.thumb_func
 1083              	sendPrechargeMsg:
 1084              	.LFB74:
 650:Src/main.c    **** 	resetTXData();
 1085              		.loc 1 650 0
ARM GAS  /tmp/cclPZh3B.s 			page 34


 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 0
 1088              		@ frame_needed = 0, uses_anonymous_args = 0
 1089 0000 08B5     		push	{r3, lr}
 1090              	.LCFI16:
 1091              		.cfi_def_cfa_offset 8
 1092              		.cfi_offset 3, -8
 1093              		.cfi_offset 14, -4
 651:Src/main.c    **** 	TxHeader.StdId = PRECHARGE;
 1094              		.loc 1 651 0
 1095 0002 FFF7FEFF 		bl	resetTXData
 1096              	.LVL77:
 652:Src/main.c    **** 	TxData[0] = charged;
 1097              		.loc 1 652 0
 1098 0006 0649     		ldr	r1, .L57
 1099 0008 D123     		movs	r3, #209
 1100 000a 0B60     		str	r3, [r1]
 653:Src/main.c    **** 	HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 1101              		.loc 1 653 0
 1102 000c 054A     		ldr	r2, .L57+4
 1103 000e 064B     		ldr	r3, .L57+8
 1104 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1105 0012 1370     		strb	r3, [r2]
 654:Src/main.c    **** }
 1106              		.loc 1 654 0
 1107 0014 0548     		ldr	r0, .L57+12
 1108 0016 064B     		ldr	r3, .L57+16
 1109 0018 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1110              	.LVL78:
 1111 001c 08BD     		pop	{r3, pc}
 1112              	.L58:
 1113 001e 00BF     		.align	2
 1114              	.L57:
 1115 0020 00000000 		.word	TxHeader
 1116 0024 00000000 		.word	.LANCHOR0
 1117 0028 00000000 		.word	charged
 1118 002c 00000000 		.word	hcan
 1119 0030 00000000 		.word	TxMailbox
 1120              		.cfi_endproc
 1121              	.LFE74:
 1123              		.section	.text.sendEnableMsg,"ax",%progbits
 1124              		.align	2
 1125              		.global	sendEnableMsg
 1126              		.thumb
 1127              		.thumb_func
 1129              	sendEnableMsg:
 1130              	.LFB75:
 657:Src/main.c    **** 	resetTXData();
 1131              		.loc 1 657 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 0
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 1135 0000 08B5     		push	{r3, lr}
 1136              	.LCFI17:
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 3, -8
 1139              		.cfi_offset 14, -4
ARM GAS  /tmp/cclPZh3B.s 			page 35


 658:Src/main.c    **** 	TxHeader.StdId = ENABLE;
 1140              		.loc 1 658 0
 1141 0002 FFF7FEFF 		bl	resetTXData
 1142              	.LVL79:
 659:Src/main.c    **** 	TxData[0] = enable;
 1143              		.loc 1 659 0
 1144 0006 0649     		ldr	r1, .L61
 1145 0008 D223     		movs	r3, #210
 1146 000a 0B60     		str	r3, [r1]
 660:Src/main.c    **** 	HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 1147              		.loc 1 660 0
 1148 000c 054A     		ldr	r2, .L61+4
 1149 000e 064B     		ldr	r3, .L61+8
 1150 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1151 0012 1370     		strb	r3, [r2]
 661:Src/main.c    **** }
 1152              		.loc 1 661 0
 1153 0014 0548     		ldr	r0, .L61+12
 1154 0016 064B     		ldr	r3, .L61+16
 1155 0018 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1156              	.LVL80:
 1157 001c 08BD     		pop	{r3, pc}
 1158              	.L62:
 1159 001e 00BF     		.align	2
 1160              	.L61:
 1161 0020 00000000 		.word	TxHeader
 1162 0024 00000000 		.word	.LANCHOR0
 1163 0028 00000000 		.word	enable
 1164 002c 00000000 		.word	hcan
 1165 0030 00000000 		.word	TxMailbox
 1166              		.cfi_endproc
 1167              	.LFE75:
 1169              		.section	.text.readFaults,"ax",%progbits
 1170              		.align	2
 1171              		.global	readFaults
 1172              		.thumb
 1173              		.thumb_func
 1175              	readFaults:
 1176              	.LFB77:
 673:Src/main.c    **** }
 674:Src/main.c    **** 
 675:Src/main.c    **** void readFaults(){
 1177              		.loc 1 675 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 1181 0000 08B5     		push	{r3, lr}
 1182              	.LCFI18:
 1183              		.cfi_def_cfa_offset 8
 1184              		.cfi_offset 3, -8
 1185              		.cfi_offset 14, -4
 676:Src/main.c    **** 	if (HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_0) == GPIO_PIN_SET)
 1186              		.loc 1 676 0
 1187 0002 1B48     		ldr	r0, .L73
 1188 0004 0121     		movs	r1, #1
 1189 0006 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1190              	.LVL81:
ARM GAS  /tmp/cclPZh3B.s 			page 36


 1191 000a 0128     		cmp	r0, #1
 1192 000c 03D1     		bne	.L64
 677:Src/main.c    **** 		bspd = 1;
 1193              		.loc 1 677 0
 1194 000e 0122     		movs	r2, #1
 1195 0010 184B     		ldr	r3, .L73+4
 1196 0012 1A70     		strb	r2, [r3]
 1197 0014 02E0     		b	.L65
 1198              	.L64:
 678:Src/main.c    **** 	else bspd = 0;
 1199              		.loc 1 678 0
 1200 0016 0022     		movs	r2, #0
 1201 0018 164B     		ldr	r3, .L73+4
 1202 001a 1A70     		strb	r2, [r3]
 1203              	.L65:
 679:Src/main.c    **** 	
 680:Src/main.c    **** 	if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == GPIO_PIN_SET)
 1204              		.loc 1 680 0
 1205 001c 1648     		ldr	r0, .L73+8
 1206 001e 4021     		movs	r1, #64
 1207 0020 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1208              	.LVL82:
 1209 0024 0128     		cmp	r0, #1
 1210 0026 03D1     		bne	.L66
 681:Src/main.c    **** 		charged = 1;
 1211              		.loc 1 681 0
 1212 0028 0122     		movs	r2, #1
 1213 002a 144B     		ldr	r3, .L73+12
 1214 002c 1A70     		strb	r2, [r3]
 1215 002e 02E0     		b	.L67
 1216              	.L66:
 682:Src/main.c    **** 	else charged = 0;
 1217              		.loc 1 682 0
 1218 0030 0022     		movs	r2, #0
 1219 0032 124B     		ldr	r3, .L73+12
 1220 0034 1A70     		strb	r2, [r3]
 1221              	.L67:
 683:Src/main.c    **** 	
 684:Src/main.c    **** 	if (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14) == GPIO_PIN_SET)
 1222              		.loc 1 684 0
 1223 0036 1248     		ldr	r0, .L73+16
 1224 0038 4FF48041 		mov	r1, #16384
 1225 003c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1226              	.LVL83:
 1227 0040 0128     		cmp	r0, #1
 1228 0042 03D1     		bne	.L68
 685:Src/main.c    **** 		imd = 1;
 1229              		.loc 1 685 0
 1230 0044 0122     		movs	r2, #1
 1231 0046 0F4B     		ldr	r3, .L73+20
 1232 0048 1A70     		strb	r2, [r3]
 1233 004a 02E0     		b	.L69
 1234              	.L68:
 686:Src/main.c    **** 	else imd = 0;
 1235              		.loc 1 686 0
 1236 004c 0022     		movs	r2, #0
 1237 004e 0D4B     		ldr	r3, .L73+20
ARM GAS  /tmp/cclPZh3B.s 			page 37


 1238 0050 1A70     		strb	r2, [r3]
 1239              	.L69:
 687:Src/main.c    **** 	
 688:Src/main.c    **** 	if (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15) == GPIO_PIN_SET)
 1240              		.loc 1 688 0
 1241 0052 0B48     		ldr	r0, .L73+16
 1242 0054 4FF40041 		mov	r1, #32768
 1243 0058 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1244              	.LVL84:
 1245 005c 0128     		cmp	r0, #1
 1246 005e 03D1     		bne	.L70
 689:Src/main.c    **** 		bms = 1;
 1247              		.loc 1 689 0
 1248 0060 0122     		movs	r2, #1
 1249 0062 094B     		ldr	r3, .L73+24
 1250 0064 1A70     		strb	r2, [r3]
 1251 0066 08BD     		pop	{r3, pc}
 1252              	.L70:
 690:Src/main.c    **** 	else bms = 0;
 1253              		.loc 1 690 0
 1254 0068 0022     		movs	r2, #0
 1255 006a 074B     		ldr	r3, .L73+24
 1256 006c 1A70     		strb	r2, [r3]
 1257 006e 08BD     		pop	{r3, pc}
 1258              	.L74:
 1259              		.align	2
 1260              	.L73:
 1261 0070 00140140 		.word	1073812480
 1262 0074 00000000 		.word	bspd
 1263 0078 000C0140 		.word	1073810432
 1264 007c 00000000 		.word	charged
 1265 0080 00100140 		.word	1073811456
 1266 0084 00000000 		.word	imd
 1267 0088 00000000 		.word	bms
 1268              		.cfi_endproc
 1269              	.LFE77:
 1271              		.section	.text.main,"ax",%progbits
 1272              		.align	2
 1273              		.global	main
 1274              		.thumb
 1275              		.thumb_func
 1277              	main:
 1278              	.LFB63:
 148:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1279              		.loc 1 148 0
 1280              		.cfi_startproc
 1281              		@ Volatile: function does not return.
 1282              		@ args = 0, pretend = 0, frame = 0
 1283              		@ frame_needed = 0, uses_anonymous_args = 0
 1284 0000 08B5     		push	{r3, lr}
 1285              	.LCFI19:
 1286              		.cfi_def_cfa_offset 8
 1287              		.cfi_offset 3, -8
 1288              		.cfi_offset 14, -4
 152:Src/main.c    ****   secTimer = 3000000; //3 seconds
 1289              		.loc 1 152 0
 1290 0002 364A     		ldr	r2, .L84
ARM GAS  /tmp/cclPZh3B.s 			page 38


 1291 0004 364B     		ldr	r3, .L84+4
 1292 0006 1A60     		str	r2, [r3]
 153:Src/main.c    **** 
 1293              		.loc 1 153 0
 1294 0008 364A     		ldr	r2, .L84+8
 1295 000a 374B     		ldr	r3, .L84+12
 1296 000c 1A60     		str	r2, [r3]
 160:Src/main.c    **** 
 1297              		.loc 1 160 0
 1298 000e FFF7FEFF 		bl	HAL_Init
 1299              	.LVL85:
 165:Src/main.c    ****   // Configure the SysTick timer to overflow every 1 us
 1300              		.loc 1 165 0
 1301 0012 FFF7FEFF 		bl	SystemCoreClockUpdate
 1302              	.LVL86:
 167:Src/main.c    **** 
 1303              		.loc 1 167 0
 1304 0016 354B     		ldr	r3, .L84+16
 1305 0018 1B68     		ldr	r3, [r3]
 1306 001a 354A     		ldr	r2, .L84+20
 1307 001c A2FB0323 		umull	r2, r3, r2, r3
 1308 0020 9B0C     		lsrs	r3, r3, #18
 1309              	.LVL87:
 1310              	.LBB13:
 1311              	.LBB14:
 1312              		.file 2 "Drivers/CMSIS/Include/core_cm3.h"
   1:Drivers/CMSIS/Include/core_cm3.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm3.h ****  * @file     core_cm3.h
   3:Drivers/CMSIS/Include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm3.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/core_cm3.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm3.h **** 
   9:Drivers/CMSIS/Include/core_cm3.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm3.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/core_cm3.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm3.h ****    *
  21:Drivers/CMSIS/Include/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
ARM GAS  /tmp/cclPZh3B.s 			page 39


  32:Drivers/CMSIS/Include/core_cm3.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/core_cm3.h **** 
  34:Drivers/CMSIS/Include/core_cm3.h **** 
  35:Drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm3.h **** #endif
  40:Drivers/CMSIS/Include/core_cm3.h **** 
  41:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm3.h **** 
  44:Drivers/CMSIS/Include/core_cm3.h **** #include <stdint.h>
  45:Drivers/CMSIS/Include/core_cm3.h **** 
  46:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm3.h **** #endif
  49:Drivers/CMSIS/Include/core_cm3.h **** 
  50:Drivers/CMSIS/Include/core_cm3.h **** /**
  51:Drivers/CMSIS/Include/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm3.h **** 
  54:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm3.h **** 
  57:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm3.h ****      Unions are used for effective representation of core registers.
  59:Drivers/CMSIS/Include/core_cm3.h **** 
  60:Drivers/CMSIS/Include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  62:Drivers/CMSIS/Include/core_cm3.h ****  */
  63:Drivers/CMSIS/Include/core_cm3.h **** 
  64:Drivers/CMSIS/Include/core_cm3.h **** 
  65:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
  66:Drivers/CMSIS/Include/core_cm3.h ****  *                 CMSIS definitions
  67:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm3.h **** /**
  69:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup Cortex_M3
  70:Drivers/CMSIS/Include/core_cm3.h ****   @{
  71:Drivers/CMSIS/Include/core_cm3.h ****  */
  72:Drivers/CMSIS/Include/core_cm3.h **** 
  73:Drivers/CMSIS/Include/core_cm3.h **** /*  CMSIS CM3 definitions */
  74:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm3.h **** 
  79:Drivers/CMSIS/Include/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  80:Drivers/CMSIS/Include/core_cm3.h **** 
  81:Drivers/CMSIS/Include/core_cm3.h **** 
  82:Drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm3.h **** 
  87:Drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
ARM GAS  /tmp/cclPZh3B.s 			page 40


  89:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  91:Drivers/CMSIS/Include/core_cm3.h **** 
  92:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm3.h **** 
  97:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm3.h **** 
 102:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm3.h **** 
 106:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm3.h **** 
 111:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm3.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 116:Drivers/CMSIS/Include/core_cm3.h **** 
 117:Drivers/CMSIS/Include/core_cm3.h **** #else
 118:Drivers/CMSIS/Include/core_cm3.h ****   #error Unknown compiler
 119:Drivers/CMSIS/Include/core_cm3.h **** #endif
 120:Drivers/CMSIS/Include/core_cm3.h **** 
 121:Drivers/CMSIS/Include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm3.h ****     This core does not support an FPU at all
 123:Drivers/CMSIS/Include/core_cm3.h **** */
 124:Drivers/CMSIS/Include/core_cm3.h **** #define __FPU_USED       0U
 125:Drivers/CMSIS/Include/core_cm3.h **** 
 126:Drivers/CMSIS/Include/core_cm3.h **** #if defined ( __CC_ARM )
 127:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 128:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 130:Drivers/CMSIS/Include/core_cm3.h **** 
 131:Drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARM_PCS_VFP
 133:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm3.h **** 
 136:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
 137:Drivers/CMSIS/Include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 140:Drivers/CMSIS/Include/core_cm3.h **** 
 141:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
 142:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARMVFP__
 143:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 145:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/cclPZh3B.s 			page 41


 146:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
 147:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 148:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 150:Drivers/CMSIS/Include/core_cm3.h **** 
 151:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 152:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __FPU_VFP__
 153:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 155:Drivers/CMSIS/Include/core_cm3.h **** 
 156:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 157:Drivers/CMSIS/Include/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 158:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 160:Drivers/CMSIS/Include/core_cm3.h **** 
 161:Drivers/CMSIS/Include/core_cm3.h **** #endif
 162:Drivers/CMSIS/Include/core_cm3.h **** 
 163:Drivers/CMSIS/Include/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:Drivers/CMSIS/Include/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:Drivers/CMSIS/Include/core_cm3.h **** 
 166:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 167:Drivers/CMSIS/Include/core_cm3.h **** }
 168:Drivers/CMSIS/Include/core_cm3.h **** #endif
 169:Drivers/CMSIS/Include/core_cm3.h **** 
 170:Drivers/CMSIS/Include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 171:Drivers/CMSIS/Include/core_cm3.h **** 
 172:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 173:Drivers/CMSIS/Include/core_cm3.h **** 
 174:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 176:Drivers/CMSIS/Include/core_cm3.h **** 
 177:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 178:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
 179:Drivers/CMSIS/Include/core_cm3.h **** #endif
 180:Drivers/CMSIS/Include/core_cm3.h **** 
 181:Drivers/CMSIS/Include/core_cm3.h **** /* check device defines and use defaults */
 182:Drivers/CMSIS/Include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 183:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __CM3_REV
 184:Drivers/CMSIS/Include/core_cm3.h ****     #define __CM3_REV               0x0200U
 185:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 186:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 187:Drivers/CMSIS/Include/core_cm3.h **** 
 188:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __MPU_PRESENT
 189:Drivers/CMSIS/Include/core_cm3.h ****     #define __MPU_PRESENT             0U
 190:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 192:Drivers/CMSIS/Include/core_cm3.h **** 
 193:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 194:Drivers/CMSIS/Include/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 195:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 196:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 197:Drivers/CMSIS/Include/core_cm3.h **** 
 198:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 199:Drivers/CMSIS/Include/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 200:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 201:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 202:Drivers/CMSIS/Include/core_cm3.h **** #endif
ARM GAS  /tmp/cclPZh3B.s 			page 42


 203:Drivers/CMSIS/Include/core_cm3.h **** 
 204:Drivers/CMSIS/Include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 205:Drivers/CMSIS/Include/core_cm3.h **** /**
 206:Drivers/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 207:Drivers/CMSIS/Include/core_cm3.h **** 
 208:Drivers/CMSIS/Include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 209:Drivers/CMSIS/Include/core_cm3.h ****     \li to specify the access to peripheral variables.
 210:Drivers/CMSIS/Include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 211:Drivers/CMSIS/Include/core_cm3.h **** */
 212:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 213:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 214:Drivers/CMSIS/Include/core_cm3.h **** #else
 215:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 216:Drivers/CMSIS/Include/core_cm3.h **** #endif
 217:Drivers/CMSIS/Include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 218:Drivers/CMSIS/Include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 219:Drivers/CMSIS/Include/core_cm3.h **** 
 220:Drivers/CMSIS/Include/core_cm3.h **** /* following defines should be used for structure members */
 221:Drivers/CMSIS/Include/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 222:Drivers/CMSIS/Include/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 223:Drivers/CMSIS/Include/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 224:Drivers/CMSIS/Include/core_cm3.h **** 
 225:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group Cortex_M3 */
 226:Drivers/CMSIS/Include/core_cm3.h **** 
 227:Drivers/CMSIS/Include/core_cm3.h **** 
 228:Drivers/CMSIS/Include/core_cm3.h **** 
 229:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
 230:Drivers/CMSIS/Include/core_cm3.h ****  *                 Register Abstraction
 231:Drivers/CMSIS/Include/core_cm3.h ****   Core Register contain:
 232:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register
 233:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Register
 234:Drivers/CMSIS/Include/core_cm3.h ****   - Core SCB Register
 235:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Register
 236:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Register
 237:Drivers/CMSIS/Include/core_cm3.h ****   - Core MPU Register
 238:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
 239:Drivers/CMSIS/Include/core_cm3.h **** /**
 240:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 241:Drivers/CMSIS/Include/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 242:Drivers/CMSIS/Include/core_cm3.h **** */
 243:Drivers/CMSIS/Include/core_cm3.h **** 
 244:Drivers/CMSIS/Include/core_cm3.h **** /**
 245:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 246:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 247:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Core Register type definitions.
 248:Drivers/CMSIS/Include/core_cm3.h ****   @{
 249:Drivers/CMSIS/Include/core_cm3.h ****  */
 250:Drivers/CMSIS/Include/core_cm3.h **** 
 251:Drivers/CMSIS/Include/core_cm3.h **** /**
 252:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 253:Drivers/CMSIS/Include/core_cm3.h ****  */
 254:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 255:Drivers/CMSIS/Include/core_cm3.h **** {
 256:Drivers/CMSIS/Include/core_cm3.h ****   struct
 257:Drivers/CMSIS/Include/core_cm3.h ****   {
 258:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 259:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
ARM GAS  /tmp/cclPZh3B.s 			page 43


 260:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 261:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 262:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 263:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 264:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 265:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 266:Drivers/CMSIS/Include/core_cm3.h **** } APSR_Type;
 267:Drivers/CMSIS/Include/core_cm3.h **** 
 268:Drivers/CMSIS/Include/core_cm3.h **** /* APSR Register Definitions */
 269:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 270:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 271:Drivers/CMSIS/Include/core_cm3.h **** 
 272:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 273:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 274:Drivers/CMSIS/Include/core_cm3.h **** 
 275:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 276:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 277:Drivers/CMSIS/Include/core_cm3.h **** 
 278:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 279:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 280:Drivers/CMSIS/Include/core_cm3.h **** 
 281:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 282:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm3.h **** 
 284:Drivers/CMSIS/Include/core_cm3.h **** 
 285:Drivers/CMSIS/Include/core_cm3.h **** /**
 286:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:Drivers/CMSIS/Include/core_cm3.h ****  */
 288:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 289:Drivers/CMSIS/Include/core_cm3.h **** {
 290:Drivers/CMSIS/Include/core_cm3.h ****   struct
 291:Drivers/CMSIS/Include/core_cm3.h ****   {
 292:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 294:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 295:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:Drivers/CMSIS/Include/core_cm3.h **** } IPSR_Type;
 297:Drivers/CMSIS/Include/core_cm3.h **** 
 298:Drivers/CMSIS/Include/core_cm3.h **** /* IPSR Register Definitions */
 299:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 301:Drivers/CMSIS/Include/core_cm3.h **** 
 302:Drivers/CMSIS/Include/core_cm3.h **** 
 303:Drivers/CMSIS/Include/core_cm3.h **** /**
 304:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:Drivers/CMSIS/Include/core_cm3.h ****  */
 306:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 307:Drivers/CMSIS/Include/core_cm3.h **** {
 308:Drivers/CMSIS/Include/core_cm3.h ****   struct
 309:Drivers/CMSIS/Include/core_cm3.h ****   {
 310:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 314:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 315:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 316:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
ARM GAS  /tmp/cclPZh3B.s 			page 44


 317:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 318:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 319:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 320:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:Drivers/CMSIS/Include/core_cm3.h **** } xPSR_Type;
 322:Drivers/CMSIS/Include/core_cm3.h **** 
 323:Drivers/CMSIS/Include/core_cm3.h **** /* xPSR Register Definitions */
 324:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 325:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 326:Drivers/CMSIS/Include/core_cm3.h **** 
 327:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 328:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 329:Drivers/CMSIS/Include/core_cm3.h **** 
 330:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 331:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 332:Drivers/CMSIS/Include/core_cm3.h **** 
 333:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 334:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 335:Drivers/CMSIS/Include/core_cm3.h **** 
 336:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 337:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 338:Drivers/CMSIS/Include/core_cm3.h **** 
 339:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 340:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 341:Drivers/CMSIS/Include/core_cm3.h **** 
 342:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 343:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm3.h **** 
 345:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 346:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm3.h **** 
 348:Drivers/CMSIS/Include/core_cm3.h **** 
 349:Drivers/CMSIS/Include/core_cm3.h **** /**
 350:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 351:Drivers/CMSIS/Include/core_cm3.h ****  */
 352:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 353:Drivers/CMSIS/Include/core_cm3.h **** {
 354:Drivers/CMSIS/Include/core_cm3.h ****   struct
 355:Drivers/CMSIS/Include/core_cm3.h ****   {
 356:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 357:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 358:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 359:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 360:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 361:Drivers/CMSIS/Include/core_cm3.h **** } CONTROL_Type;
 362:Drivers/CMSIS/Include/core_cm3.h **** 
 363:Drivers/CMSIS/Include/core_cm3.h **** /* CONTROL Register Definitions */
 364:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 365:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 366:Drivers/CMSIS/Include/core_cm3.h **** 
 367:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 368:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 369:Drivers/CMSIS/Include/core_cm3.h **** 
 370:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 371:Drivers/CMSIS/Include/core_cm3.h **** 
 372:Drivers/CMSIS/Include/core_cm3.h **** 
 373:Drivers/CMSIS/Include/core_cm3.h **** /**
ARM GAS  /tmp/cclPZh3B.s 			page 45


 374:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 375:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 376:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 377:Drivers/CMSIS/Include/core_cm3.h ****   @{
 378:Drivers/CMSIS/Include/core_cm3.h ****  */
 379:Drivers/CMSIS/Include/core_cm3.h **** 
 380:Drivers/CMSIS/Include/core_cm3.h **** /**
 381:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 382:Drivers/CMSIS/Include/core_cm3.h ****  */
 383:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 384:Drivers/CMSIS/Include/core_cm3.h **** {
 385:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 386:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[24U];
 387:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 388:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RSERVED1[24U];
 389:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 390:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[24U];
 391:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 392:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[24U];
 393:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 394:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[56U];
 395:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 396:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[644U];
 397:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 398:Drivers/CMSIS/Include/core_cm3.h **** }  NVIC_Type;
 399:Drivers/CMSIS/Include/core_cm3.h **** 
 400:Drivers/CMSIS/Include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 401:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 402:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 403:Drivers/CMSIS/Include/core_cm3.h **** 
 404:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 405:Drivers/CMSIS/Include/core_cm3.h **** 
 406:Drivers/CMSIS/Include/core_cm3.h **** 
 407:Drivers/CMSIS/Include/core_cm3.h **** /**
 408:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 409:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 410:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 411:Drivers/CMSIS/Include/core_cm3.h ****   @{
 412:Drivers/CMSIS/Include/core_cm3.h ****  */
 413:Drivers/CMSIS/Include/core_cm3.h **** 
 414:Drivers/CMSIS/Include/core_cm3.h **** /**
 415:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 416:Drivers/CMSIS/Include/core_cm3.h ****  */
 417:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 418:Drivers/CMSIS/Include/core_cm3.h **** {
 419:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 420:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 421:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 422:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 423:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 424:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 425:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 426:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 427:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 428:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 429:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 430:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
ARM GAS  /tmp/cclPZh3B.s 			page 46


 431:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 432:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 433:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 434:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 435:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 436:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 437:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 438:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[5U];
 439:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 440:Drivers/CMSIS/Include/core_cm3.h **** } SCB_Type;
 441:Drivers/CMSIS/Include/core_cm3.h **** 
 442:Drivers/CMSIS/Include/core_cm3.h **** /* SCB CPUID Register Definitions */
 443:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm3.h **** 
 446:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 447:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 448:Drivers/CMSIS/Include/core_cm3.h **** 
 449:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 451:Drivers/CMSIS/Include/core_cm3.h **** 
 452:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 454:Drivers/CMSIS/Include/core_cm3.h **** 
 455:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 456:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 457:Drivers/CMSIS/Include/core_cm3.h **** 
 458:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 459:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 461:Drivers/CMSIS/Include/core_cm3.h **** 
 462:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 463:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 464:Drivers/CMSIS/Include/core_cm3.h **** 
 465:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 466:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm3.h **** 
 468:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 469:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm3.h **** 
 471:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm3.h **** 
 474:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm3.h **** 
 477:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm3.h **** 
 480:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm3.h **** 
 483:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm3.h **** 
 486:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 487:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
ARM GAS  /tmp/cclPZh3B.s 			page 47


 488:Drivers/CMSIS/Include/core_cm3.h **** 
 489:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 490:Drivers/CMSIS/Include/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 491:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm3.h **** 
 494:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm3.h **** #else
 497:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm3.h **** #endif
 500:Drivers/CMSIS/Include/core_cm3.h **** 
 501:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 502:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 503:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm3.h **** 
 505:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm3.h **** 
 508:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm3.h **** 
 511:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm3.h **** 
 514:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm3.h **** 
 517:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm3.h **** 
 520:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm3.h **** 
 523:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Control Register Definitions */
 524:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm3.h **** 
 527:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm3.h **** 
 530:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm3.h **** 
 533:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 534:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm3.h **** 
 537:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm3.h **** 
 540:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm3.h **** 
 543:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
ARM GAS  /tmp/cclPZh3B.s 			page 48


 545:Drivers/CMSIS/Include/core_cm3.h **** 
 546:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm3.h **** 
 549:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm3.h **** 
 552:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 553:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm3.h **** 
 556:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm3.h **** 
 559:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm3.h **** 
 562:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm3.h **** 
 565:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm3.h **** 
 568:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm3.h **** 
 571:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm3.h **** 
 574:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm3.h **** 
 577:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm3.h **** 
 580:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm3.h **** 
 583:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm3.h **** 
 586:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm3.h **** 
 589:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm3.h **** 
 592:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm3.h **** 
 595:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 596:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm3.h **** 
 599:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/cclPZh3B.s 			page 49


 602:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm3.h **** 
 605:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 606:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm3.h **** 
 609:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm3.h **** 
 612:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm3.h **** 
 615:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 616:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm3.h **** 
 619:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm3.h **** 
 622:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm3.h **** 
 625:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm3.h **** 
 628:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm3.h **** 
 631:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 632:Drivers/CMSIS/Include/core_cm3.h **** 
 633:Drivers/CMSIS/Include/core_cm3.h **** 
 634:Drivers/CMSIS/Include/core_cm3.h **** /**
 635:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 636:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 637:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 638:Drivers/CMSIS/Include/core_cm3.h ****   @{
 639:Drivers/CMSIS/Include/core_cm3.h ****  */
 640:Drivers/CMSIS/Include/core_cm3.h **** 
 641:Drivers/CMSIS/Include/core_cm3.h **** /**
 642:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 643:Drivers/CMSIS/Include/core_cm3.h ****  */
 644:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 645:Drivers/CMSIS/Include/core_cm3.h **** {
 646:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 647:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 648:Drivers/CMSIS/Include/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 649:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 650:Drivers/CMSIS/Include/core_cm3.h **** #else
 651:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 652:Drivers/CMSIS/Include/core_cm3.h **** #endif
 653:Drivers/CMSIS/Include/core_cm3.h **** } SCnSCB_Type;
 654:Drivers/CMSIS/Include/core_cm3.h **** 
 655:Drivers/CMSIS/Include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 656:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 657:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 658:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/cclPZh3B.s 			page 50


 659:Drivers/CMSIS/Include/core_cm3.h **** /* Auxiliary Control Register Definitions */
 660:Drivers/CMSIS/Include/core_cm3.h **** 
 661:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 662:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 663:Drivers/CMSIS/Include/core_cm3.h **** 
 664:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 665:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 666:Drivers/CMSIS/Include/core_cm3.h **** 
 667:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 668:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 669:Drivers/CMSIS/Include/core_cm3.h **** 
 670:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 671:Drivers/CMSIS/Include/core_cm3.h **** 
 672:Drivers/CMSIS/Include/core_cm3.h **** 
 673:Drivers/CMSIS/Include/core_cm3.h **** /**
 674:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 675:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 676:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 677:Drivers/CMSIS/Include/core_cm3.h ****   @{
 678:Drivers/CMSIS/Include/core_cm3.h ****  */
 679:Drivers/CMSIS/Include/core_cm3.h **** 
 680:Drivers/CMSIS/Include/core_cm3.h **** /**
 681:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 682:Drivers/CMSIS/Include/core_cm3.h ****  */
 683:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 684:Drivers/CMSIS/Include/core_cm3.h **** {
 685:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 686:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 687:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 688:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 689:Drivers/CMSIS/Include/core_cm3.h **** } SysTick_Type;
 690:Drivers/CMSIS/Include/core_cm3.h **** 
 691:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 692:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 693:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 694:Drivers/CMSIS/Include/core_cm3.h **** 
 695:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 696:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 697:Drivers/CMSIS/Include/core_cm3.h **** 
 698:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 699:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 700:Drivers/CMSIS/Include/core_cm3.h **** 
 701:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 702:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 703:Drivers/CMSIS/Include/core_cm3.h **** 
 704:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Reload Register Definitions */
 705:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 706:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 707:Drivers/CMSIS/Include/core_cm3.h **** 
 708:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Current Register Definitions */
 709:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 710:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 711:Drivers/CMSIS/Include/core_cm3.h **** 
 712:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 713:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 714:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 715:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/cclPZh3B.s 			page 51


 716:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 717:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 718:Drivers/CMSIS/Include/core_cm3.h **** 
 719:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 720:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 721:Drivers/CMSIS/Include/core_cm3.h **** 
 722:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 723:Drivers/CMSIS/Include/core_cm3.h **** 
 724:Drivers/CMSIS/Include/core_cm3.h **** 
 725:Drivers/CMSIS/Include/core_cm3.h **** /**
 726:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 727:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 728:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 729:Drivers/CMSIS/Include/core_cm3.h ****   @{
 730:Drivers/CMSIS/Include/core_cm3.h ****  */
 731:Drivers/CMSIS/Include/core_cm3.h **** 
 732:Drivers/CMSIS/Include/core_cm3.h **** /**
 733:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 734:Drivers/CMSIS/Include/core_cm3.h ****  */
 735:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 736:Drivers/CMSIS/Include/core_cm3.h **** {
 737:Drivers/CMSIS/Include/core_cm3.h ****   __OM  union
 738:Drivers/CMSIS/Include/core_cm3.h ****   {
 739:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 740:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 741:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 742:Drivers/CMSIS/Include/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 743:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[864U];
 744:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 745:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[15U];
 746:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 747:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[15U];
 748:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 749:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[29U];
 750:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 751:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 752:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 753:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[43U];
 754:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 755:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 756:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[6U];
 757:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 758:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 759:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 760:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 761:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 762:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 763:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 764:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 765:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 766:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 767:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 768:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 769:Drivers/CMSIS/Include/core_cm3.h **** } ITM_Type;
 770:Drivers/CMSIS/Include/core_cm3.h **** 
 771:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 772:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
ARM GAS  /tmp/cclPZh3B.s 			page 52


 773:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 774:Drivers/CMSIS/Include/core_cm3.h **** 
 775:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 776:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 777:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 778:Drivers/CMSIS/Include/core_cm3.h **** 
 779:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 780:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 781:Drivers/CMSIS/Include/core_cm3.h **** 
 782:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 783:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 784:Drivers/CMSIS/Include/core_cm3.h **** 
 785:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 786:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 787:Drivers/CMSIS/Include/core_cm3.h **** 
 788:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 789:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 790:Drivers/CMSIS/Include/core_cm3.h **** 
 791:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 792:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 793:Drivers/CMSIS/Include/core_cm3.h **** 
 794:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 795:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 796:Drivers/CMSIS/Include/core_cm3.h **** 
 797:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 798:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 799:Drivers/CMSIS/Include/core_cm3.h **** 
 800:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 801:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 802:Drivers/CMSIS/Include/core_cm3.h **** 
 803:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 804:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 805:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 806:Drivers/CMSIS/Include/core_cm3.h **** 
 807:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 808:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 809:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 810:Drivers/CMSIS/Include/core_cm3.h **** 
 811:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 812:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 813:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 814:Drivers/CMSIS/Include/core_cm3.h **** 
 815:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 816:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 817:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 818:Drivers/CMSIS/Include/core_cm3.h **** 
 819:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 820:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 821:Drivers/CMSIS/Include/core_cm3.h **** 
 822:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 823:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 824:Drivers/CMSIS/Include/core_cm3.h **** 
 825:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 826:Drivers/CMSIS/Include/core_cm3.h **** 
 827:Drivers/CMSIS/Include/core_cm3.h **** 
 828:Drivers/CMSIS/Include/core_cm3.h **** /**
 829:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
ARM GAS  /tmp/cclPZh3B.s 			page 53


 830:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 831:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 832:Drivers/CMSIS/Include/core_cm3.h ****   @{
 833:Drivers/CMSIS/Include/core_cm3.h ****  */
 834:Drivers/CMSIS/Include/core_cm3.h **** 
 835:Drivers/CMSIS/Include/core_cm3.h **** /**
 836:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 837:Drivers/CMSIS/Include/core_cm3.h ****  */
 838:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 839:Drivers/CMSIS/Include/core_cm3.h **** {
 840:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 841:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 842:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 843:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 844:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 845:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 846:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 847:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 848:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 849:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 850:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 851:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 852:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 853:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 854:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 855:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 856:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 857:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 858:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 859:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[1U];
 860:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 861:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 862:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 863:Drivers/CMSIS/Include/core_cm3.h **** } DWT_Type;
 864:Drivers/CMSIS/Include/core_cm3.h **** 
 865:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Control Register Definitions */
 866:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 867:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 868:Drivers/CMSIS/Include/core_cm3.h **** 
 869:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 870:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 871:Drivers/CMSIS/Include/core_cm3.h **** 
 872:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 873:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 874:Drivers/CMSIS/Include/core_cm3.h **** 
 875:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 876:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 877:Drivers/CMSIS/Include/core_cm3.h **** 
 878:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 879:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 880:Drivers/CMSIS/Include/core_cm3.h **** 
 881:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 882:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 883:Drivers/CMSIS/Include/core_cm3.h **** 
 884:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 885:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 886:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/cclPZh3B.s 			page 54


 887:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 888:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 889:Drivers/CMSIS/Include/core_cm3.h **** 
 890:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 891:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 892:Drivers/CMSIS/Include/core_cm3.h **** 
 893:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 894:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 895:Drivers/CMSIS/Include/core_cm3.h **** 
 896:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 897:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 898:Drivers/CMSIS/Include/core_cm3.h **** 
 899:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 900:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 901:Drivers/CMSIS/Include/core_cm3.h **** 
 902:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 903:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 904:Drivers/CMSIS/Include/core_cm3.h **** 
 905:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 906:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 907:Drivers/CMSIS/Include/core_cm3.h **** 
 908:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 909:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 910:Drivers/CMSIS/Include/core_cm3.h **** 
 911:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 912:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 913:Drivers/CMSIS/Include/core_cm3.h **** 
 914:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 915:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 916:Drivers/CMSIS/Include/core_cm3.h **** 
 917:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 918:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 919:Drivers/CMSIS/Include/core_cm3.h **** 
 920:Drivers/CMSIS/Include/core_cm3.h **** /* DWT CPI Count Register Definitions */
 921:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 922:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 923:Drivers/CMSIS/Include/core_cm3.h **** 
 924:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 925:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 926:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 927:Drivers/CMSIS/Include/core_cm3.h **** 
 928:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 929:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 930:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 931:Drivers/CMSIS/Include/core_cm3.h **** 
 932:Drivers/CMSIS/Include/core_cm3.h **** /* DWT LSU Count Register Definitions */
 933:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 934:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 935:Drivers/CMSIS/Include/core_cm3.h **** 
 936:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 937:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 938:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 939:Drivers/CMSIS/Include/core_cm3.h **** 
 940:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 941:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 942:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 943:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/cclPZh3B.s 			page 55


 944:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 945:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 946:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 947:Drivers/CMSIS/Include/core_cm3.h **** 
 948:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 949:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 950:Drivers/CMSIS/Include/core_cm3.h **** 
 951:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 952:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 953:Drivers/CMSIS/Include/core_cm3.h **** 
 954:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 955:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 956:Drivers/CMSIS/Include/core_cm3.h **** 
 957:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 958:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 959:Drivers/CMSIS/Include/core_cm3.h **** 
 960:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 961:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 962:Drivers/CMSIS/Include/core_cm3.h **** 
 963:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 964:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 965:Drivers/CMSIS/Include/core_cm3.h **** 
 966:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 967:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 968:Drivers/CMSIS/Include/core_cm3.h **** 
 969:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 970:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 971:Drivers/CMSIS/Include/core_cm3.h **** 
 972:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 973:Drivers/CMSIS/Include/core_cm3.h **** 
 974:Drivers/CMSIS/Include/core_cm3.h **** 
 975:Drivers/CMSIS/Include/core_cm3.h **** /**
 976:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 977:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 978:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 979:Drivers/CMSIS/Include/core_cm3.h ****   @{
 980:Drivers/CMSIS/Include/core_cm3.h ****  */
 981:Drivers/CMSIS/Include/core_cm3.h **** 
 982:Drivers/CMSIS/Include/core_cm3.h **** /**
 983:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 984:Drivers/CMSIS/Include/core_cm3.h ****  */
 985:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 986:Drivers/CMSIS/Include/core_cm3.h **** {
 987:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 988:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 989:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[2U];
 990:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 991:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[55U];
 992:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 993:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[131U];
 994:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 995:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 996:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 997:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[759U];
 998:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 999:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1000:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
ARM GAS  /tmp/cclPZh3B.s 			page 56


1001:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[1U];
1002:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1003:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1004:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1005:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[39U];
1006:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1007:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1008:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED7[8U];
1009:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1010:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1011:Drivers/CMSIS/Include/core_cm3.h **** } TPI_Type;
1012:Drivers/CMSIS/Include/core_cm3.h **** 
1013:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1014:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1015:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1016:Drivers/CMSIS/Include/core_cm3.h **** 
1017:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1018:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1019:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1020:Drivers/CMSIS/Include/core_cm3.h **** 
1021:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1022:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1023:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1024:Drivers/CMSIS/Include/core_cm3.h **** 
1025:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1026:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1027:Drivers/CMSIS/Include/core_cm3.h **** 
1028:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1029:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1030:Drivers/CMSIS/Include/core_cm3.h **** 
1031:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1032:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1033:Drivers/CMSIS/Include/core_cm3.h **** 
1034:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1035:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1036:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1037:Drivers/CMSIS/Include/core_cm3.h **** 
1038:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1039:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1040:Drivers/CMSIS/Include/core_cm3.h **** 
1041:Drivers/CMSIS/Include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1042:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1043:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1044:Drivers/CMSIS/Include/core_cm3.h **** 
1045:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1046:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1047:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1048:Drivers/CMSIS/Include/core_cm3.h **** 
1049:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1050:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1051:Drivers/CMSIS/Include/core_cm3.h **** 
1052:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1053:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1054:Drivers/CMSIS/Include/core_cm3.h **** 
1055:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1056:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1057:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/cclPZh3B.s 			page 57


1058:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1059:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1060:Drivers/CMSIS/Include/core_cm3.h **** 
1061:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1062:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1063:Drivers/CMSIS/Include/core_cm3.h **** 
1064:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1065:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1066:Drivers/CMSIS/Include/core_cm3.h **** 
1067:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1068:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1069:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1070:Drivers/CMSIS/Include/core_cm3.h **** 
1071:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1072:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1073:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1074:Drivers/CMSIS/Include/core_cm3.h **** 
1075:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1076:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1077:Drivers/CMSIS/Include/core_cm3.h **** 
1078:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1079:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1080:Drivers/CMSIS/Include/core_cm3.h **** 
1081:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1082:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1083:Drivers/CMSIS/Include/core_cm3.h **** 
1084:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1085:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1086:Drivers/CMSIS/Include/core_cm3.h **** 
1087:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1088:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1089:Drivers/CMSIS/Include/core_cm3.h **** 
1090:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1091:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1092:Drivers/CMSIS/Include/core_cm3.h **** 
1093:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1094:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1095:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1096:Drivers/CMSIS/Include/core_cm3.h **** 
1097:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1098:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1099:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1100:Drivers/CMSIS/Include/core_cm3.h **** 
1101:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVID Register Definitions */
1102:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1103:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1104:Drivers/CMSIS/Include/core_cm3.h **** 
1105:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1106:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1107:Drivers/CMSIS/Include/core_cm3.h **** 
1108:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1109:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1110:Drivers/CMSIS/Include/core_cm3.h **** 
1111:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1112:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1113:Drivers/CMSIS/Include/core_cm3.h **** 
1114:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
ARM GAS  /tmp/cclPZh3B.s 			page 58


1115:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1116:Drivers/CMSIS/Include/core_cm3.h **** 
1117:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1118:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1119:Drivers/CMSIS/Include/core_cm3.h **** 
1120:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1121:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1122:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1123:Drivers/CMSIS/Include/core_cm3.h **** 
1124:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1125:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1126:Drivers/CMSIS/Include/core_cm3.h **** 
1127:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1128:Drivers/CMSIS/Include/core_cm3.h **** 
1129:Drivers/CMSIS/Include/core_cm3.h **** 
1130:Drivers/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1131:Drivers/CMSIS/Include/core_cm3.h **** /**
1132:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1133:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1134:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1135:Drivers/CMSIS/Include/core_cm3.h ****   @{
1136:Drivers/CMSIS/Include/core_cm3.h ****  */
1137:Drivers/CMSIS/Include/core_cm3.h **** 
1138:Drivers/CMSIS/Include/core_cm3.h **** /**
1139:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1140:Drivers/CMSIS/Include/core_cm3.h ****  */
1141:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1142:Drivers/CMSIS/Include/core_cm3.h **** {
1143:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1144:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1145:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1146:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1147:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1148:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1149:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1150:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1151:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1152:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1153:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1154:Drivers/CMSIS/Include/core_cm3.h **** } MPU_Type;
1155:Drivers/CMSIS/Include/core_cm3.h **** 
1156:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Type Register Definitions */
1157:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1158:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1159:Drivers/CMSIS/Include/core_cm3.h **** 
1160:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1161:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1162:Drivers/CMSIS/Include/core_cm3.h **** 
1163:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1164:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1165:Drivers/CMSIS/Include/core_cm3.h **** 
1166:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Control Register Definitions */
1167:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1168:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1169:Drivers/CMSIS/Include/core_cm3.h **** 
1170:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1171:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
ARM GAS  /tmp/cclPZh3B.s 			page 59


1172:Drivers/CMSIS/Include/core_cm3.h **** 
1173:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1174:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1175:Drivers/CMSIS/Include/core_cm3.h **** 
1176:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Number Register Definitions */
1177:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1178:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1179:Drivers/CMSIS/Include/core_cm3.h **** 
1180:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1181:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1182:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1183:Drivers/CMSIS/Include/core_cm3.h **** 
1184:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1185:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1186:Drivers/CMSIS/Include/core_cm3.h **** 
1187:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1188:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1189:Drivers/CMSIS/Include/core_cm3.h **** 
1190:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1191:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1192:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1193:Drivers/CMSIS/Include/core_cm3.h **** 
1194:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1195:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1196:Drivers/CMSIS/Include/core_cm3.h **** 
1197:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1198:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1199:Drivers/CMSIS/Include/core_cm3.h **** 
1200:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1201:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1202:Drivers/CMSIS/Include/core_cm3.h **** 
1203:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1204:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1205:Drivers/CMSIS/Include/core_cm3.h **** 
1206:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1207:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1208:Drivers/CMSIS/Include/core_cm3.h **** 
1209:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1210:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1211:Drivers/CMSIS/Include/core_cm3.h **** 
1212:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1213:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1214:Drivers/CMSIS/Include/core_cm3.h **** 
1215:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1216:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1217:Drivers/CMSIS/Include/core_cm3.h **** 
1218:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1219:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm3.h **** 
1221:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1222:Drivers/CMSIS/Include/core_cm3.h **** #endif
1223:Drivers/CMSIS/Include/core_cm3.h **** 
1224:Drivers/CMSIS/Include/core_cm3.h **** 
1225:Drivers/CMSIS/Include/core_cm3.h **** /**
1226:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1227:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1228:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
ARM GAS  /tmp/cclPZh3B.s 			page 60


1229:Drivers/CMSIS/Include/core_cm3.h ****   @{
1230:Drivers/CMSIS/Include/core_cm3.h ****  */
1231:Drivers/CMSIS/Include/core_cm3.h **** 
1232:Drivers/CMSIS/Include/core_cm3.h **** /**
1233:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1234:Drivers/CMSIS/Include/core_cm3.h ****  */
1235:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1236:Drivers/CMSIS/Include/core_cm3.h **** {
1237:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1238:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1239:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1240:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1241:Drivers/CMSIS/Include/core_cm3.h **** } CoreDebug_Type;
1242:Drivers/CMSIS/Include/core_cm3.h **** 
1243:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1244:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1245:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1246:Drivers/CMSIS/Include/core_cm3.h **** 
1247:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1248:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1249:Drivers/CMSIS/Include/core_cm3.h **** 
1250:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1251:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1252:Drivers/CMSIS/Include/core_cm3.h **** 
1253:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1254:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1255:Drivers/CMSIS/Include/core_cm3.h **** 
1256:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1257:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1258:Drivers/CMSIS/Include/core_cm3.h **** 
1259:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1260:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1261:Drivers/CMSIS/Include/core_cm3.h **** 
1262:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1263:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1264:Drivers/CMSIS/Include/core_cm3.h **** 
1265:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1266:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1267:Drivers/CMSIS/Include/core_cm3.h **** 
1268:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1269:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1270:Drivers/CMSIS/Include/core_cm3.h **** 
1271:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1272:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1273:Drivers/CMSIS/Include/core_cm3.h **** 
1274:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1275:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1276:Drivers/CMSIS/Include/core_cm3.h **** 
1277:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1278:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1279:Drivers/CMSIS/Include/core_cm3.h **** 
1280:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1281:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1282:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1283:Drivers/CMSIS/Include/core_cm3.h **** 
1284:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1285:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
ARM GAS  /tmp/cclPZh3B.s 			page 61


1286:Drivers/CMSIS/Include/core_cm3.h **** 
1287:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1288:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1289:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1290:Drivers/CMSIS/Include/core_cm3.h **** 
1291:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1292:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1293:Drivers/CMSIS/Include/core_cm3.h **** 
1294:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1295:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1296:Drivers/CMSIS/Include/core_cm3.h **** 
1297:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1298:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1299:Drivers/CMSIS/Include/core_cm3.h **** 
1300:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1301:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1302:Drivers/CMSIS/Include/core_cm3.h **** 
1303:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1304:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1305:Drivers/CMSIS/Include/core_cm3.h **** 
1306:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1307:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1308:Drivers/CMSIS/Include/core_cm3.h **** 
1309:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1310:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1311:Drivers/CMSIS/Include/core_cm3.h **** 
1312:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1313:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1314:Drivers/CMSIS/Include/core_cm3.h **** 
1315:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1316:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1317:Drivers/CMSIS/Include/core_cm3.h **** 
1318:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1319:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1320:Drivers/CMSIS/Include/core_cm3.h **** 
1321:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1322:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1323:Drivers/CMSIS/Include/core_cm3.h **** 
1324:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1325:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1326:Drivers/CMSIS/Include/core_cm3.h **** 
1327:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1328:Drivers/CMSIS/Include/core_cm3.h **** 
1329:Drivers/CMSIS/Include/core_cm3.h **** 
1330:Drivers/CMSIS/Include/core_cm3.h **** /**
1331:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1332:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1333:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1334:Drivers/CMSIS/Include/core_cm3.h ****   @{
1335:Drivers/CMSIS/Include/core_cm3.h ****  */
1336:Drivers/CMSIS/Include/core_cm3.h **** 
1337:Drivers/CMSIS/Include/core_cm3.h **** /**
1338:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1339:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1340:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of the bit field.
1341:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted value.
1342:Drivers/CMSIS/Include/core_cm3.h **** */
ARM GAS  /tmp/cclPZh3B.s 			page 62


1343:Drivers/CMSIS/Include/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1344:Drivers/CMSIS/Include/core_cm3.h **** 
1345:Drivers/CMSIS/Include/core_cm3.h **** /**
1346:Drivers/CMSIS/Include/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1347:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of register.
1349:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted bit field value.
1350:Drivers/CMSIS/Include/core_cm3.h **** */
1351:Drivers/CMSIS/Include/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1352:Drivers/CMSIS/Include/core_cm3.h **** 
1353:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1354:Drivers/CMSIS/Include/core_cm3.h **** 
1355:Drivers/CMSIS/Include/core_cm3.h **** 
1356:Drivers/CMSIS/Include/core_cm3.h **** /**
1357:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1358:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1359:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1360:Drivers/CMSIS/Include/core_cm3.h ****   @{
1361:Drivers/CMSIS/Include/core_cm3.h ****  */
1362:Drivers/CMSIS/Include/core_cm3.h **** 
1363:Drivers/CMSIS/Include/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1364:Drivers/CMSIS/Include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1365:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1366:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1367:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1368:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1369:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1370:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1371:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1372:Drivers/CMSIS/Include/core_cm3.h **** 
1373:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1374:Drivers/CMSIS/Include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1375:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1376:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1377:Drivers/CMSIS/Include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1378:Drivers/CMSIS/Include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1379:Drivers/CMSIS/Include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1380:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1381:Drivers/CMSIS/Include/core_cm3.h **** 
1382:Drivers/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1383:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1384:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1385:Drivers/CMSIS/Include/core_cm3.h **** #endif
1386:Drivers/CMSIS/Include/core_cm3.h **** 
1387:Drivers/CMSIS/Include/core_cm3.h **** /*@} */
1388:Drivers/CMSIS/Include/core_cm3.h **** 
1389:Drivers/CMSIS/Include/core_cm3.h **** 
1390:Drivers/CMSIS/Include/core_cm3.h **** 
1391:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
1392:Drivers/CMSIS/Include/core_cm3.h ****  *                Hardware Abstraction Layer
1393:Drivers/CMSIS/Include/core_cm3.h ****   Core Function Interface contains:
1394:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Functions
1395:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Functions
1396:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Functions
1397:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register Access Functions
1398:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
1399:Drivers/CMSIS/Include/core_cm3.h **** /**
ARM GAS  /tmp/cclPZh3B.s 			page 63


1400:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1401:Drivers/CMSIS/Include/core_cm3.h **** */
1402:Drivers/CMSIS/Include/core_cm3.h **** 
1403:Drivers/CMSIS/Include/core_cm3.h **** 
1404:Drivers/CMSIS/Include/core_cm3.h **** 
1405:Drivers/CMSIS/Include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1406:Drivers/CMSIS/Include/core_cm3.h **** /**
1407:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1408:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1409:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1410:Drivers/CMSIS/Include/core_cm3.h ****   @{
1411:Drivers/CMSIS/Include/core_cm3.h ****  */
1412:Drivers/CMSIS/Include/core_cm3.h **** 
1413:Drivers/CMSIS/Include/core_cm3.h **** /**
1414:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Priority Grouping
1415:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1416:Drivers/CMSIS/Include/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1417:Drivers/CMSIS/Include/core_cm3.h ****            Only values from 0..7 are used.
1418:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1419:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1420:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1421:Drivers/CMSIS/Include/core_cm3.h ****  */
1422:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1423:Drivers/CMSIS/Include/core_cm3.h **** {
1424:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t reg_value;
1425:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1426:Drivers/CMSIS/Include/core_cm3.h **** 
1427:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1428:Drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1429:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
1430:Drivers/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1431:Drivers/CMSIS/Include/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1432:Drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR =  reg_value;
1433:Drivers/CMSIS/Include/core_cm3.h **** }
1434:Drivers/CMSIS/Include/core_cm3.h **** 
1435:Drivers/CMSIS/Include/core_cm3.h **** 
1436:Drivers/CMSIS/Include/core_cm3.h **** /**
1437:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Priority Grouping
1438:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1439:Drivers/CMSIS/Include/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1440:Drivers/CMSIS/Include/core_cm3.h ****  */
1441:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1442:Drivers/CMSIS/Include/core_cm3.h **** {
1443:Drivers/CMSIS/Include/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1444:Drivers/CMSIS/Include/core_cm3.h **** }
1445:Drivers/CMSIS/Include/core_cm3.h **** 
1446:Drivers/CMSIS/Include/core_cm3.h **** 
1447:Drivers/CMSIS/Include/core_cm3.h **** /**
1448:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Enable External Interrupt
1449:Drivers/CMSIS/Include/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1450:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1451:Drivers/CMSIS/Include/core_cm3.h ****  */
1452:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1453:Drivers/CMSIS/Include/core_cm3.h **** {
1454:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1455:Drivers/CMSIS/Include/core_cm3.h **** }
1456:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/cclPZh3B.s 			page 64


1457:Drivers/CMSIS/Include/core_cm3.h **** 
1458:Drivers/CMSIS/Include/core_cm3.h **** /**
1459:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Disable External Interrupt
1460:Drivers/CMSIS/Include/core_cm3.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1461:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1462:Drivers/CMSIS/Include/core_cm3.h ****  */
1463:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1464:Drivers/CMSIS/Include/core_cm3.h **** {
1465:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1466:Drivers/CMSIS/Include/core_cm3.h **** }
1467:Drivers/CMSIS/Include/core_cm3.h **** 
1468:Drivers/CMSIS/Include/core_cm3.h **** 
1469:Drivers/CMSIS/Include/core_cm3.h **** /**
1470:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Pending Interrupt
1471:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1472:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1473:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not pending.
1474:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is pending.
1475:Drivers/CMSIS/Include/core_cm3.h ****  */
1476:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1477:Drivers/CMSIS/Include/core_cm3.h **** {
1478:Drivers/CMSIS/Include/core_cm3.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1479:Drivers/CMSIS/Include/core_cm3.h **** }
1480:Drivers/CMSIS/Include/core_cm3.h **** 
1481:Drivers/CMSIS/Include/core_cm3.h **** 
1482:Drivers/CMSIS/Include/core_cm3.h **** /**
1483:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Pending Interrupt
1484:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the pending bit of an external interrupt.
1485:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1486:Drivers/CMSIS/Include/core_cm3.h ****  */
1487:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1488:Drivers/CMSIS/Include/core_cm3.h **** {
1489:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1490:Drivers/CMSIS/Include/core_cm3.h **** }
1491:Drivers/CMSIS/Include/core_cm3.h **** 
1492:Drivers/CMSIS/Include/core_cm3.h **** 
1493:Drivers/CMSIS/Include/core_cm3.h **** /**
1494:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Clear Pending Interrupt
1495:Drivers/CMSIS/Include/core_cm3.h ****   \details Clears the pending bit of an external interrupt.
1496:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1497:Drivers/CMSIS/Include/core_cm3.h ****  */
1498:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1499:Drivers/CMSIS/Include/core_cm3.h **** {
1500:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1501:Drivers/CMSIS/Include/core_cm3.h **** }
1502:Drivers/CMSIS/Include/core_cm3.h **** 
1503:Drivers/CMSIS/Include/core_cm3.h **** 
1504:Drivers/CMSIS/Include/core_cm3.h **** /**
1505:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Active Interrupt
1506:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the active register in NVIC and returns the active bit.
1507:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1508:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not active.
1509:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is active.
1510:Drivers/CMSIS/Include/core_cm3.h ****  */
1511:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1512:Drivers/CMSIS/Include/core_cm3.h **** {
1513:Drivers/CMSIS/Include/core_cm3.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
ARM GAS  /tmp/cclPZh3B.s 			page 65


1514:Drivers/CMSIS/Include/core_cm3.h **** }
1515:Drivers/CMSIS/Include/core_cm3.h **** 
1516:Drivers/CMSIS/Include/core_cm3.h **** 
1517:Drivers/CMSIS/Include/core_cm3.h **** /**
1518:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Interrupt Priority
1519:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority of an interrupt.
1520:Drivers/CMSIS/Include/core_cm3.h ****   \note    The priority cannot be set for every core interrupt.
1521:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1522:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]  priority  Priority to set.
1523:Drivers/CMSIS/Include/core_cm3.h ****  */
1524:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1525:Drivers/CMSIS/Include/core_cm3.h **** {
1526:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1527:Drivers/CMSIS/Include/core_cm3.h ****   {
1528:Drivers/CMSIS/Include/core_cm3.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1529:Drivers/CMSIS/Include/core_cm3.h ****   }
1530:Drivers/CMSIS/Include/core_cm3.h ****   else
1531:Drivers/CMSIS/Include/core_cm3.h ****   {
1532:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1533:Drivers/CMSIS/Include/core_cm3.h ****   }
1534:Drivers/CMSIS/Include/core_cm3.h **** }
1535:Drivers/CMSIS/Include/core_cm3.h **** 
1536:Drivers/CMSIS/Include/core_cm3.h **** 
1537:Drivers/CMSIS/Include/core_cm3.h **** /**
1538:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Priority
1539:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority of an interrupt.
1540:Drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1541:Drivers/CMSIS/Include/core_cm3.h ****            or negative to specify an internal (core) interrupt.
1542:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   IRQn  Interrupt number.
1543:Drivers/CMSIS/Include/core_cm3.h ****   \return             Interrupt Priority.
1544:Drivers/CMSIS/Include/core_cm3.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1545:Drivers/CMSIS/Include/core_cm3.h ****  */
1546:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1547:Drivers/CMSIS/Include/core_cm3.h **** {
1548:Drivers/CMSIS/Include/core_cm3.h **** 
1549:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1550:Drivers/CMSIS/Include/core_cm3.h ****   {
1551:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1552:Drivers/CMSIS/Include/core_cm3.h ****   }
1553:Drivers/CMSIS/Include/core_cm3.h ****   else
1554:Drivers/CMSIS/Include/core_cm3.h ****   {
1555:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1556:Drivers/CMSIS/Include/core_cm3.h ****   }
1557:Drivers/CMSIS/Include/core_cm3.h **** }
1558:Drivers/CMSIS/Include/core_cm3.h **** 
1559:Drivers/CMSIS/Include/core_cm3.h **** 
1560:Drivers/CMSIS/Include/core_cm3.h **** /**
1561:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Encode Priority
1562:Drivers/CMSIS/Include/core_cm3.h ****   \details Encodes the priority for an interrupt with the given priority group,
1563:Drivers/CMSIS/Include/core_cm3.h ****            preemptive priority value, and subpriority value.
1564:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1565:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1566:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1567:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1568:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1569:Drivers/CMSIS/Include/core_cm3.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1570:Drivers/CMSIS/Include/core_cm3.h ****  */
ARM GAS  /tmp/cclPZh3B.s 			page 66


1571:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1572:Drivers/CMSIS/Include/core_cm3.h **** {
1573:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1574:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1575:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1576:Drivers/CMSIS/Include/core_cm3.h **** 
1577:Drivers/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1578:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1579:Drivers/CMSIS/Include/core_cm3.h **** 
1580:Drivers/CMSIS/Include/core_cm3.h ****   return (
1581:Drivers/CMSIS/Include/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1582:Drivers/CMSIS/Include/core_cm3.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1583:Drivers/CMSIS/Include/core_cm3.h ****          );
1584:Drivers/CMSIS/Include/core_cm3.h **** }
1585:Drivers/CMSIS/Include/core_cm3.h **** 
1586:Drivers/CMSIS/Include/core_cm3.h **** 
1587:Drivers/CMSIS/Include/core_cm3.h **** /**
1588:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Decode Priority
1589:Drivers/CMSIS/Include/core_cm3.h ****   \details Decodes an interrupt priority value with a given priority group to
1590:Drivers/CMSIS/Include/core_cm3.h ****            preemptive priority value and subpriority value.
1591:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1592:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1593:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1594:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1595:Drivers/CMSIS/Include/core_cm3.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1596:Drivers/CMSIS/Include/core_cm3.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1597:Drivers/CMSIS/Include/core_cm3.h ****  */
1598:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1599:Drivers/CMSIS/Include/core_cm3.h **** {
1600:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1601:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1602:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1603:Drivers/CMSIS/Include/core_cm3.h **** 
1604:Drivers/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1605:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1606:Drivers/CMSIS/Include/core_cm3.h **** 
1607:Drivers/CMSIS/Include/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1608:Drivers/CMSIS/Include/core_cm3.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1609:Drivers/CMSIS/Include/core_cm3.h **** }
1610:Drivers/CMSIS/Include/core_cm3.h **** 
1611:Drivers/CMSIS/Include/core_cm3.h **** 
1612:Drivers/CMSIS/Include/core_cm3.h **** /**
1613:Drivers/CMSIS/Include/core_cm3.h ****   \brief   System Reset
1614:Drivers/CMSIS/Include/core_cm3.h ****   \details Initiates a system reset request to reset the MCU.
1615:Drivers/CMSIS/Include/core_cm3.h ****  */
1616:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1617:Drivers/CMSIS/Include/core_cm3.h **** {
1618:Drivers/CMSIS/Include/core_cm3.h ****   __DSB();                                                          /* Ensure all outstanding memor
1619:Drivers/CMSIS/Include/core_cm3.h ****                                                                        buffered write are completed
1620:Drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1621:Drivers/CMSIS/Include/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1622:Drivers/CMSIS/Include/core_cm3.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1623:Drivers/CMSIS/Include/core_cm3.h ****   __DSB();                                                          /* Ensure completion of memory 
1624:Drivers/CMSIS/Include/core_cm3.h **** 
1625:Drivers/CMSIS/Include/core_cm3.h ****   for(;;)                                                           /* wait until reset */
1626:Drivers/CMSIS/Include/core_cm3.h ****   {
1627:Drivers/CMSIS/Include/core_cm3.h ****     __NOP();
ARM GAS  /tmp/cclPZh3B.s 			page 67


1628:Drivers/CMSIS/Include/core_cm3.h ****   }
1629:Drivers/CMSIS/Include/core_cm3.h **** }
1630:Drivers/CMSIS/Include/core_cm3.h **** 
1631:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of CMSIS_Core_NVICFunctions */
1632:Drivers/CMSIS/Include/core_cm3.h **** 
1633:Drivers/CMSIS/Include/core_cm3.h **** 
1634:Drivers/CMSIS/Include/core_cm3.h **** 
1635:Drivers/CMSIS/Include/core_cm3.h **** /* ##################################    SysTick function  ########################################
1636:Drivers/CMSIS/Include/core_cm3.h **** /**
1637:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1638:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1639:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that configure the System.
1640:Drivers/CMSIS/Include/core_cm3.h ****   @{
1641:Drivers/CMSIS/Include/core_cm3.h ****  */
1642:Drivers/CMSIS/Include/core_cm3.h **** 
1643:Drivers/CMSIS/Include/core_cm3.h **** #if (__Vendor_SysTickConfig == 0U)
1644:Drivers/CMSIS/Include/core_cm3.h **** 
1645:Drivers/CMSIS/Include/core_cm3.h **** /**
1646:Drivers/CMSIS/Include/core_cm3.h ****   \brief   System Tick Configuration
1647:Drivers/CMSIS/Include/core_cm3.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1648:Drivers/CMSIS/Include/core_cm3.h ****            Counter is in free running mode to generate periodic interrupts.
1649:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1650:Drivers/CMSIS/Include/core_cm3.h ****   \return          0  Function succeeded.
1651:Drivers/CMSIS/Include/core_cm3.h ****   \return          1  Function failed.
1652:Drivers/CMSIS/Include/core_cm3.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1653:Drivers/CMSIS/Include/core_cm3.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1654:Drivers/CMSIS/Include/core_cm3.h ****            must contain a vendor-specific implementation of this function.
1655:Drivers/CMSIS/Include/core_cm3.h ****  */
1656:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1657:Drivers/CMSIS/Include/core_cm3.h **** {
1658:Drivers/CMSIS/Include/core_cm3.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 1313              		.loc 2 1658 0
 1314 0022 013B     		subs	r3, r3, #1
 1315              	.LVL88:
 1316 0024 B3F1807F 		cmp	r3, #16777216
 1317 0028 09D2     		bcs	.L76
1659:Drivers/CMSIS/Include/core_cm3.h ****   {
1660:Drivers/CMSIS/Include/core_cm3.h ****     return (1UL);                                                   /* Reload value impossible */
1661:Drivers/CMSIS/Include/core_cm3.h ****   }
1662:Drivers/CMSIS/Include/core_cm3.h **** 
1663:Drivers/CMSIS/Include/core_cm3.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 1318              		.loc 2 1663 0
 1319 002a 324A     		ldr	r2, .L84+24
 1320 002c 5360     		str	r3, [r2, #4]
 1321              	.LVL89:
 1322              	.LBB15:
 1323              	.LBB16:
1528:Drivers/CMSIS/Include/core_cm3.h ****   }
 1324              		.loc 2 1528 0
 1325 002e F021     		movs	r1, #240
 1326 0030 314B     		ldr	r3, .L84+28
 1327              	.LVL90:
 1328 0032 83F82310 		strb	r1, [r3, #35]
 1329              	.LVL91:
 1330              	.LBE16:
 1331              	.LBE15:
1664:Drivers/CMSIS/Include/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
ARM GAS  /tmp/cclPZh3B.s 			page 68


1665:Drivers/CMSIS/Include/core_cm3.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 1332              		.loc 2 1665 0
 1333 0036 0023     		movs	r3, #0
 1334 0038 9360     		str	r3, [r2, #8]
1666:Drivers/CMSIS/Include/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 1335              		.loc 2 1666 0
 1336 003a 0723     		movs	r3, #7
 1337 003c 1360     		str	r3, [r2]
 1338              	.LVL92:
 1339              	.L76:
 1340              	.LBE14:
 1341              	.LBE13:
 172:Src/main.c    **** 
 1342              		.loc 1 172 0
 1343 003e FFF7FEFF 		bl	SystemClock_Config
 1344              	.LVL93:
 179:Src/main.c    ****   MX_SPI1_Init();
 1345              		.loc 1 179 0
 1346 0042 FFF7FEFF 		bl	MX_GPIO_Init
 1347              	.LVL94:
 180:Src/main.c    ****   MX_ADC1_Init();
 1348              		.loc 1 180 0
 1349 0046 FFF7FEFF 		bl	MX_SPI1_Init
 1350              	.LVL95:
 181:Src/main.c    ****   MX_CAN_Init();
 1351              		.loc 1 181 0
 1352 004a FFF7FEFF 		bl	MX_ADC1_Init
 1353              	.LVL96:
 182:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1354              		.loc 1 182 0
 1355 004e FFF7FEFF 		bl	MX_CAN_Init
 1356              	.LVL97:
 1357              	.L82:
 192:Src/main.c    **** 	//Check ENABLE_IN from driver switch and precharge
 1358              		.loc 1 192 0
 1359 0052 FFF7FEFF 		bl	readFaults
 1360              	.LVL98:
 194:Src/main.c    **** 	  //RTD Sound
 1361              		.loc 1 194 0
 1362 0056 294B     		ldr	r3, .L84+32
 1363 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1364 005a 002B     		cmp	r3, #0
 1365 005c 37D0     		beq	.L77
 194:Src/main.c    **** 	  //RTD Sound
 1366              		.loc 1 194 0 is_stmt 0 discriminator 1
 1367 005e 2848     		ldr	r0, .L84+36
 1368 0060 4FF40041 		mov	r1, #32768
 1369 0064 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1370              	.LVL99:
 1371 0068 0128     		cmp	r0, #1
 1372 006a 30D1     		bne	.L77
 196:Src/main.c    **** 
 1373              		.loc 1 196 0 is_stmt 1
 1374 006c 254B     		ldr	r3, .L84+40
 1375 006e 1B68     		ldr	r3, [r3]
 1376 0070 0BBB     		cbnz	r3, .L78
 199:Src/main.c    **** 
ARM GAS  /tmp/cclPZh3B.s 			page 69


 1377              		.loc 1 199 0
 1378 0072 FFF7FEFF 		bl	updateADC
 1379              	.LVL100:
 202:Src/main.c    **** 
 1380              		.loc 1 202 0
 1381 0076 244B     		ldr	r3, .L84+44
 1382 0078 1B88     		ldrh	r3, [r3]
 1383 007a 4F2B     		cmp	r3, #79
 1384 007c 1BDD     		ble	.L78
 205:Src/main.c    **** 
 1385              		.loc 1 205 0
 1386 007e 40F6B832 		movw	r2, #3000
 1387 0082 194B     		ldr	r3, .L84+12
 1388 0084 1A60     		str	r2, [r3]
 209:Src/main.c    **** 			  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET);
 1389              		.loc 1 209 0
 1390 0086 04E0     		b	.L79
 1391              	.L80:
 210:Src/main.c    **** 			}
 1392              		.loc 1 210 0
 1393 0088 1D48     		ldr	r0, .L84+36
 1394 008a 0821     		movs	r1, #8
 1395 008c 0122     		movs	r2, #1
 1396 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1397              	.LVL101:
 1398              	.L79:
 209:Src/main.c    **** 			  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET);
 1399              		.loc 1 209 0
 1400 0092 154B     		ldr	r3, .L84+12
 1401 0094 1B68     		ldr	r3, [r3]
 1402 0096 002B     		cmp	r3, #0
 1403 0098 F6D1     		bne	.L80
 214:Src/main.c    **** 
 1404              		.loc 1 214 0
 1405 009a 194C     		ldr	r4, .L84+36
 1406 009c 2046     		mov	r0, r4
 1407 009e 0821     		movs	r1, #8
 1408 00a0 0022     		movs	r2, #0
 1409 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1410              	.LVL102:
 218:Src/main.c    **** 
 1411              		.loc 1 218 0
 1412 00a6 2046     		mov	r0, r4
 1413 00a8 2021     		movs	r1, #32
 1414 00aa 0122     		movs	r2, #1
 1415 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 1416              	.LVL103:
 220:Src/main.c    **** 
 1417              		.loc 1 220 0
 1418 00b0 0122     		movs	r2, #1
 1419 00b2 144B     		ldr	r3, .L84+40
 1420 00b4 1A60     		str	r2, [r3]
 1421              	.L78:
 225:Src/main.c    **** 		//send CAN message
 1422              		.loc 1 225 0
 1423 00b6 FFF7FEFF 		bl	checkBTSF
 1424              	.LVL104:
ARM GAS  /tmp/cclPZh3B.s 			page 70


 1425 00ba 10B1     		cbz	r0, .L81
 227:Src/main.c    **** 
 1426              		.loc 1 227 0
 1427 00bc 0022     		movs	r2, #0
 1428 00be 114B     		ldr	r3, .L84+40
 1429 00c0 1A60     		str	r2, [r3]
 1430              	.L81:
 230:Src/main.c    **** 		//send CAN message
 1431              		.loc 1 230 0
 1432 00c2 FFF7FEFF 		bl	checkAPPS
 1433              	.LVL105:
 1434 00c6 10B1     		cbz	r0, .L77
 232:Src/main.c    **** 	  }
 1435              		.loc 1 232 0
 1436 00c8 0022     		movs	r2, #0
 1437 00ca 0E4B     		ldr	r3, .L84+40
 1438 00cc 1A60     		str	r2, [r3]
 1439              	.L77:
 236:Src/main.c    **** 	sendFaultMsg();
 1440              		.loc 1 236 0
 1441 00ce FFF7FEFF 		bl	sendPrechargeMsg
 1442              	.LVL106:
 237:Src/main.c    **** 	sendPrechargeMsg();
 1443              		.loc 1 237 0
 1444 00d2 FFF7FEFF 		bl	sendFaultMsg
 1445              	.LVL107:
 238:Src/main.c    ****     /* USER CODE END WHILE */
 1446              		.loc 1 238 0
 1447 00d6 FFF7FEFF 		bl	sendPrechargeMsg
 1448              	.LVL108:
 242:Src/main.c    ****   /* USER CODE END 3 */
 1449              		.loc 1 242 0
 1450 00da BAE7     		b	.L82
 1451              	.L85:
 1452              		.align	2
 1453              	.L84:
 1454 00dc A0860100 		.word	100000
 1455 00e0 00000000 		.word	millisTimer
 1456 00e4 C0C62D00 		.word	3000000
 1457 00e8 00000000 		.word	secTimer
 1458 00ec 00000000 		.word	SystemCoreClock
 1459 00f0 83DE1B43 		.word	1125899907
 1460 00f4 10E000E0 		.word	-536813552
 1461 00f8 00ED00E0 		.word	-536810240
 1462 00fc 00000000 		.word	charged
 1463 0100 000C0140 		.word	1073810432
 1464 0104 00000000 		.word	.LANCHOR2
 1465 0108 00000000 		.word	brakePressure_1
 1466              		.cfi_endproc
 1467              	.LFE63:
 1469              		.section	.text.Error_Handler,"ax",%progbits
 1470              		.align	2
 1471              		.global	Error_Handler
 1472              		.thumb
 1473              		.thumb_func
 1475              	Error_Handler:
 1476              	.LFB78:
ARM GAS  /tmp/cclPZh3B.s 			page 71


 691:Src/main.c    **** }
 692:Src/main.c    **** 
 693:Src/main.c    **** /* USER CODE END 4 */
 694:Src/main.c    **** 
 695:Src/main.c    **** /**
 696:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 697:Src/main.c    ****   * @retval None
 698:Src/main.c    ****   */
 699:Src/main.c    **** void Error_Handler(void)
 700:Src/main.c    **** {
 1477              		.loc 1 700 0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 0
 1480              		@ frame_needed = 0, uses_anonymous_args = 0
 1481              		@ link register save eliminated.
 1482 0000 7047     		bx	lr
 1483              		.cfi_endproc
 1484              	.LFE78:
 1486              		.comm	TxMailbox,4,4
 1487              		.comm	RxData,8,4
 1488              		.comm	enable,1,1
 1489              		.comm	charged,1,1
 1490              		.comm	apps,1,1
 1491              		.comm	bspd,1,1
 1492              		.comm	imd,1,1
 1493              		.comm	bms,1,1
 1494              		.global	TxData
 1495              		.comm	TxHeader,24,4
 1496              		.global	hardFaultFlag
 1497              		.global	driving
 1498              		.global	max_throttle
 1499              		.comm	throttle_B,2,2
 1500              		.comm	throttle_A,2,2
 1501              		.comm	brakePressure_2,2,2
 1502              		.comm	brakePressure_1,2,2
 1503              		.comm	steeringPos,2,2
 1504              		.comm	brakePos,2,2
 1505              		.comm	hspi1,88,4
 1506              		.comm	hcan,40,4
 1507              		.comm	hadc1,48,4
 1508              		.global	brakeThreshold
 1509              		.global	throttleThreshold
 1510              		.comm	secTimer,4,4
 1511              		.comm	millisTimer,4,4
 1512 0002 00BF     		.section	.bss.driving,"aw",%nobits
 1513              		.align	2
 1514              		.set	.LANCHOR2,. + 0
 1517              	driving:
 1518 0000 00000000 		.space	4
 1519              		.section	.data.TxData,"aw",%progbits
 1520              		.align	2
 1521              		.set	.LANCHOR0,. + 0
 1524              	TxData:
 1525 0000 55       		.byte	85
 1526 0001 55       		.byte	85
 1527 0002 55       		.byte	85
 1528 0003 55       		.byte	85
ARM GAS  /tmp/cclPZh3B.s 			page 72


 1529 0004 55       		.byte	85
 1530 0005 55       		.byte	85
 1531 0006 55       		.byte	85
 1532 0007 55       		.byte	85
 1533              		.section	.rodata.throttleThreshold,"a",%progbits
 1534              		.align	2
 1537              	throttleThreshold:
 1538 0000 50000000 		.word	80
 1539              		.section	.data.max_throttle,"aw",%progbits
 1540              		.align	1
 1541              		.set	.LANCHOR1,. + 0
 1544              	max_throttle:
 1545 0000 0A00     		.short	10
 1546              		.section	.rodata.brakeThreshold,"a",%progbits
 1547              		.align	2
 1550              	brakeThreshold:
 1551 0000 50000000 		.word	80
 1552              		.section	.bss.hardFaultFlag,"aw",%nobits
 1553              		.align	2
 1556              	hardFaultFlag:
 1557 0000 00000000 		.space	4
 1558              		.text
 1559              	.Letext0:
 1560              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1561              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 1562              		.file 5 "/usr/include/newlib/sys/_stdint.h"
 1563              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1564              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1565              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1566              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1567              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1568              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1569              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 1570              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1571              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1572              		.file 15 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1573              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cclPZh3B.s 			page 73


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cclPZh3B.s:19     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cclPZh3B.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cclPZh3B.s:210    .text.MX_GPIO_Init:0000000000000110 $d
     /tmp/cclPZh3B.s:220    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/cclPZh3B.s:224    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/cclPZh3B.s:272    .text.MX_SPI1_Init:0000000000000030 $d
                            *COM*:0000000000000058 hspi1
     /tmp/cclPZh3B.s:278    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cclPZh3B.s:282    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cclPZh3B.s:424    .text.MX_ADC1_Init:00000000000000b4 $d
                            *COM*:0000000000000030 hadc1
     /tmp/cclPZh3B.s:430    .text.MX_CAN_Init:0000000000000000 $t
     /tmp/cclPZh3B.s:434    .text.MX_CAN_Init:0000000000000000 MX_CAN_Init
     /tmp/cclPZh3B.s:518    .text.MX_CAN_Init:0000000000000060 $d
                            *COM*:0000000000000028 hcan
                            *COM*:0000000000000018 TxHeader
     /tmp/cclPZh3B.s:525    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cclPZh3B.s:530    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cclPZh3B.s:612    .text.updateADC:0000000000000000 $t
     /tmp/cclPZh3B.s:617    .text.updateADC:0000000000000000 updateADC
     /tmp/cclPZh3B.s:707    .text.updateADC:000000000000008c $d
                            *COM*:0000000000000002 brakePos
                            *COM*:0000000000000002 steeringPos
                            *COM*:0000000000000002 brakePressure_1
                            *COM*:0000000000000002 brakePressure_2
                            *COM*:0000000000000002 throttle_A
                            *COM*:0000000000000002 throttle_B
     /tmp/cclPZh3B.s:718    .text.checkBTSF:0000000000000000 $t
     /tmp/cclPZh3B.s:723    .text.checkBTSF:0000000000000000 checkBTSF
     /tmp/cclPZh3B.s:788    .text.checkBTSF:0000000000000048 $d
                            *COM*:0000000000000004 TxMailbox
     /tmp/cclPZh3B.s:806    .text.APPS_Diff:0000000000000000 $t
     /tmp/cclPZh3B.s:811    .text.APPS_Diff:0000000000000000 APPS_Diff
     /tmp/cclPZh3B.s:927    .text.APPS_Diff:00000000000000a0 $d
     /tmp/cclPZh3B.s:939    .text.checkAPPS:0000000000000000 $t
     /tmp/cclPZh3B.s:944    .text.checkAPPS:0000000000000000 checkAPPS
     /tmp/cclPZh3B.s:973    .text.checkAPPS:0000000000000018 $d
                            *COM*:0000000000000004 millisTimer
     /tmp/cclPZh3B.s:978    .text.resetTXData:0000000000000000 $t
     /tmp/cclPZh3B.s:983    .text.resetTXData:0000000000000000 resetTXData
     /tmp/cclPZh3B.s:1012   .text.resetTXData:0000000000000018 $d
     /tmp/cclPZh3B.s:1017   .text.sendFaultMsg:0000000000000000 $t
     /tmp/cclPZh3B.s:1022   .text.sendFaultMsg:0000000000000000 sendFaultMsg
     /tmp/cclPZh3B.s:1066   .text.sendFaultMsg:0000000000000030 $d
                            *COM*:0000000000000001 bms
                            *COM*:0000000000000001 imd
                            *COM*:0000000000000001 bspd
                            *COM*:0000000000000001 apps
     /tmp/cclPZh3B.s:1078   .text.sendPrechargeMsg:0000000000000000 $t
     /tmp/cclPZh3B.s:1083   .text.sendPrechargeMsg:0000000000000000 sendPrechargeMsg
     /tmp/cclPZh3B.s:1115   .text.sendPrechargeMsg:0000000000000020 $d
                            *COM*:0000000000000001 charged
     /tmp/cclPZh3B.s:1124   .text.sendEnableMsg:0000000000000000 $t
     /tmp/cclPZh3B.s:1129   .text.sendEnableMsg:0000000000000000 sendEnableMsg
     /tmp/cclPZh3B.s:1161   .text.sendEnableMsg:0000000000000020 $d
ARM GAS  /tmp/cclPZh3B.s 			page 74


                            *COM*:0000000000000001 enable
     /tmp/cclPZh3B.s:1170   .text.readFaults:0000000000000000 $t
     /tmp/cclPZh3B.s:1175   .text.readFaults:0000000000000000 readFaults
     /tmp/cclPZh3B.s:1261   .text.readFaults:0000000000000070 $d
     /tmp/cclPZh3B.s:1272   .text.main:0000000000000000 $t
     /tmp/cclPZh3B.s:1277   .text.main:0000000000000000 main
     /tmp/cclPZh3B.s:1454   .text.main:00000000000000dc $d
                            *COM*:0000000000000004 secTimer
     /tmp/cclPZh3B.s:1470   .text.Error_Handler:0000000000000000 $t
     /tmp/cclPZh3B.s:1475   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000008 RxData
     /tmp/cclPZh3B.s:1524   .data.TxData:0000000000000000 TxData
     /tmp/cclPZh3B.s:1556   .bss.hardFaultFlag:0000000000000000 hardFaultFlag
     /tmp/cclPZh3B.s:1517   .bss.driving:0000000000000000 driving
     /tmp/cclPZh3B.s:1544   .data.max_throttle:0000000000000000 max_throttle
     /tmp/cclPZh3B.s:1550   .rodata.brakeThreshold:0000000000000000 brakeThreshold
     /tmp/cclPZh3B.s:1537   .rodata.throttleThreshold:0000000000000000 throttleThreshold
     /tmp/cclPZh3B.s:1513   .bss.driving:0000000000000000 $d
     /tmp/cclPZh3B.s:1520   .data.TxData:0000000000000000 $d
     /tmp/cclPZh3B.s:1534   .rodata.throttleThreshold:0000000000000000 $d
     /tmp/cclPZh3B.s:1540   .data.max_throttle:0000000000000000 $d
     /tmp/cclPZh3B.s:1547   .rodata.brakeThreshold:0000000000000000 $d
     /tmp/cclPZh3B.s:1553   .bss.hardFaultFlag:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Start
HAL_CAN_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
HAL_CAN_AddTxMessage
__aeabi_ui2d
__aeabi_i2d
__aeabi_dmul
__aeabi_dsub
__aeabi_dcmplt
__aeabi_dadd
__aeabi_ddiv
__aeabi_dcmpge
HAL_GPIO_ReadPin
HAL_Init
SystemCoreClockUpdate
SystemCoreClock
