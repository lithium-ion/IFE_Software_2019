ARM GAS  /tmp/ccyQU5qg.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB73:
  24              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
ARM GAS  /tmp/ccyQU5qg.s 			page 2


  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** 
  40:Src/main.c    **** 
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END Header */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  45:Src/main.c    **** #include "main.h"
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** 
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END Includes */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  55:Src/main.c    **** /* USER CODE BEGIN PTD */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PTD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN PD */
  61:Src/main.c    **** 
  62:Src/main.c    **** int checkBTSF();
  63:Src/main.c    **** int checkAPPS();
  64:Src/main.c    **** int APPS_Diff();
  65:Src/main.c    **** 
  66:Src/main.c    **** #define APPS_STDID 0x300;
  67:Src/main.c    **** #define BTSF_STDID 0x301;
  68:Src/main.c    **** const int throttleThreshold = 80;
  69:Src/main.c    **** const int brakeThreshold = 80;
  70:Src/main.c    **** 
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE END PD */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  75:Src/main.c    **** /* USER CODE BEGIN PM */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END PM */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  80:Src/main.c    **** ADC_HandleTypeDef hadc1;
  81:Src/main.c    **** 
  82:Src/main.c    **** CAN_HandleTypeDef hcan;
  83:Src/main.c    **** SPI_HandleTypeDef hspi1;
  84:Src/main.c    **** 
  85:Src/main.c    **** /* USER CODE BEGIN PV */
  86:Src/main.c    **** 
  87:Src/main.c    **** uint16_t brakePos;
  88:Src/main.c    **** uint16_t steeringPos;
  89:Src/main.c    **** uint16_t brakePressure_1;
  90:Src/main.c    **** uint16_t brakePressure_2;
  91:Src/main.c    **** uint16_t throttle_A;
ARM GAS  /tmp/ccyQU5qg.s 			page 3


  92:Src/main.c    **** uint16_t throttle_B;
  93:Src/main.c    **** 
  94:Src/main.c    **** //need to figure out:
  95:Src/main.c    **** uint16_t max_throttle = 10;
  96:Src/main.c    **** 
  97:Src/main.c    **** int driving = 0;  		//boolean
  98:Src/main.c    **** int hardFaultFlag = 0;  //boolean
  99:Src/main.c    **** 
 100:Src/main.c    **** CAN_TxHeaderTypeDef TxHeader;
 101:Src/main.c    **** //CAN_RxHeaderTypedef RxHeader;
 102:Src/main.c    **** uint8_t TxData[8] = {0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55};
 103:Src/main.c    **** /*Set these values: 0xFF = Fault present
 104:Src/main.c    **** 					0x00 = No fault*/
 105:Src/main.c    **** //FAULTS
 106:Src/main.c    **** uint8_t bms;        //TxData[0]
 107:Src/main.c    **** uint8_t imd;		//TxData[1]
 108:Src/main.c    **** uint8_t bspd; 		//TxData[2]
 109:Src/main.c    **** uint8_t apps; 		//TxData[3]
 110:Src/main.c    **** //PRECHARGE
 111:Src/main.c    **** uint8_t charged;    //TxData[4]
 112:Src/main.c    **** //ENABLE
 113:Src/main.c    **** uint8_t enable;		//TxData[5]
 114:Src/main.c    **** 
 115:Src/main.c    **** uint8_t RxData[8];
 116:Src/main.c    **** uint32_t TxMailbox;
 117:Src/main.c    **** 
 118:Src/main.c    **** //ADC_ChannelConfTypeDef sConfig = {0};
 119:Src/main.c    **** 
 120:Src/main.c    **** //For Timers
 121:Src/main.c    **** extern uint32_t millisTimer;
 122:Src/main.c    **** extern uint32_t secTimer;
 123:Src/main.c    **** 
 124:Src/main.c    **** 
 125:Src/main.c    **** /* USER CODE END PV */
 126:Src/main.c    **** 
 127:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 128:Src/main.c    **** void SystemClock_Config(void);
 129:Src/main.c    **** static void MX_GPIO_Init(void);
 130:Src/main.c    **** static void MX_SPI1_Init(void);
 131:Src/main.c    **** static void MX_ADC1_Init(void);
 132:Src/main.c    **** static void MX_CAN_Init(void);
 133:Src/main.c    **** /* USER CODE BEGIN PFP */
 134:Src/main.c    **** 
 135:Src/main.c    **** /* USER CODE END PFP */
 136:Src/main.c    **** 
 137:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 138:Src/main.c    **** /* USER CODE BEGIN 0 */
 139:Src/main.c    **** 
 140:Src/main.c    **** //int refTime = millis();
 141:Src/main.c    **** //int APPSFlag = 0; //boolean
 142:Src/main.c    **** 
 143:Src/main.c    **** /**
 144:Src/main.c    ****   * @brief  The application entry point.
 145:Src/main.c    ****   * @retval int
 146:Src/main.c    ****   */
 147:Src/main.c    **** int main(void)
 148:Src/main.c    **** {
ARM GAS  /tmp/ccyQU5qg.s 			page 4


 149:Src/main.c    ****   /* USER CODE BEGIN 1 */
 150:Src/main.c    **** 
 151:Src/main.c    ****   //For Timers
 152:Src/main.c    ****   millisTimer = 100000; //100 millis
 153:Src/main.c    ****   secTimer = 3000000; //3 seconds
 154:Src/main.c    **** 
 155:Src/main.c    ****   /* USER CODE END 1 */
 156:Src/main.c    **** 
 157:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 160:Src/main.c    ****   HAL_Init();
 161:Src/main.c    **** 
 162:Src/main.c    ****   /* USER CODE BEGIN Init */
 163:Src/main.c    **** 
 164:Src/main.c    ****   // Update SystemCoreClock value
 165:Src/main.c    ****   SystemCoreClockUpdate();
 166:Src/main.c    ****   // Configure the SysTick timer to overflow every 1 us
 167:Src/main.c    ****   SysTick_Config(SystemCoreClock / 1000000);
 168:Src/main.c    **** 
 169:Src/main.c    ****   /* USER CODE END Init */
 170:Src/main.c    **** 
 171:Src/main.c    ****   /* Configure the system clock */
 172:Src/main.c    ****   SystemClock_Config();
 173:Src/main.c    **** 
 174:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 175:Src/main.c    **** 
 176:Src/main.c    ****   /* USER CODE END SysInit */
 177:Src/main.c    **** 
 178:Src/main.c    ****   /* Initialize all configured peripherals */
 179:Src/main.c    ****   MX_GPIO_Init();
 180:Src/main.c    ****   MX_SPI1_Init();
 181:Src/main.c    ****   MX_ADC1_Init();
 182:Src/main.c    ****   MX_CAN_Init();
 183:Src/main.c    ****   /* USER CODE BEGIN 2 */
 184:Src/main.c    **** 
 185:Src/main.c    ****   /* USER CODE END 2 */
 186:Src/main.c    **** 
 187:Src/main.c    ****   /* Infinite loop */
 188:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 189:Src/main.c    ****   
 190:Src/main.c    ****   while (1)
 191:Src/main.c    ****   {
 192:Src/main.c    **** 
 193:Src/main.c    ****     //BSPD Fault
 194:Src/main.c    ****   if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_0) == GPIO_PIN_SET){
 195:Src/main.c    ****     //Precharge complete
 196:Src/main.c    ****     if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_6) == GPIO_PIN_SET){
 197:Src/main.c    ****       //IMD Fault
 198:Src/main.c    ****       if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14) == GPIO_PIN_SET){
 199:Src/main.c    ****         //BMS Fault
 200:Src/main.c    ****         if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15) == GPIO_PIN_SET){
 201:Src/main.c    **** 
 202:Src/main.c    ****           /* Infinite loop */
 203:Src/main.c    ****           /* USER CODE BEGIN WHILE */
 204:Src/main.c    ****           HAL_ADC_Start_IT(&hadc1);
 205:Src/main.c    ****             /* USER CODE END WHILE */
ARM GAS  /tmp/ccyQU5qg.s 			page 5


 206:Src/main.c    **** 
 207:Src/main.c    ****             /*
 208:Src/main.c    ****             if (HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox) == HAL_OK) 
 209:Src/main.c    ****             HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 210:Src/main.c    ****             */
 211:Src/main.c    **** 			
 212:Src/main.c    ****             //CHeck ENABLE_IN from driver switch
 213:Src/main.c    ****             while(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_15) == GPIO_PIN_SET){
 214:Src/main.c    **** 
 215:Src/main.c    ****               //RTD Sound
 216:Src/main.c    ****               if(!driving){
 217:Src/main.c    **** 
 218:Src/main.c    **** 				  //ADC for Brake pressure
 219:Src/main.c    **** 				  updateADC();
 220:Src/main.c    **** 
 221:Src/main.c    **** 				  //if brake pressed
 222:Src/main.c    **** 				  if(brakePressure_1 >= brakeThreshold){
 223:Src/main.c    **** 
 224:Src/main.c    ****           //reset 3 second timer
 225:Src/main.c    ****           secTimer = 3000000;
 226:Src/main.c    **** 
 227:Src/main.c    **** 					//RTD Sound Enable
 228:Src/main.c    **** 					while(secTimer > 0){
 229:Src/main.c    **** 					  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET);
 230:Src/main.c    **** 					}
 231:Src/main.c    **** 					//turn off sound
 232:Src/main.c    **** 					HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET);
 233:Src/main.c    ****           //reset 3 second timer
 234:Src/main.c    ****           secTimer = 3000000;
 235:Src/main.c    **** 
 236:Src/main.c    **** 					//Send RTD Enable
 237:Src/main.c    **** 					HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 238:Src/main.c    **** 
 239:Src/main.c    **** 					driving = 1;
 240:Src/main.c    **** 
 241:Src/main.c    ****                   }
 242:Src/main.c    ****               }//if !driving 
 243:Src/main.c    **** 
 244:Src/main.c    ****               //BSPD Fault
 245:Src/main.c    ****               if(HAL_GPIO_ReadPin(GPIOD, GPIO_PIN_0) == GPIO_PIN_SET){
 246:Src/main.c    ****                 //send CAN message
 247:Src/main.c    ****                 hardFaultFlag = 1;
 248:Src/main.c    ****                 driving = 0;
 249:Src/main.c    ****               }
 250:Src/main.c    **** 
 251:Src/main.c    ****               //IMD Fault
 252:Src/main.c    ****               if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14) == GPIO_PIN_SET){
 253:Src/main.c    ****                 //send CAN message
 254:Src/main.c    ****                 hardFaultFlag = 1;
 255:Src/main.c    ****                 driving = 0;
 256:Src/main.c    ****               }
 257:Src/main.c    **** 
 258:Src/main.c    ****               //BSPD Fault
 259:Src/main.c    ****               if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_15) == GPIO_PIN_SET){
 260:Src/main.c    ****                 //send CAN message
 261:Src/main.c    **** 
 262:Src/main.c    ****                 hardFaultFlag = 1;
ARM GAS  /tmp/ccyQU5qg.s 			page 6


 263:Src/main.c    ****                 driving = 0;
 264:Src/main.c    ****               }
 265:Src/main.c    **** 
 266:Src/main.c    ****               if (checkBTSF()){
 267:Src/main.c    ****                 //send CAN message
 268:Src/main.c    **** 
 269:Src/main.c    ****                 driving = 0;
 270:Src/main.c    **** 
 271:Src/main.c    ****               }
 272:Src/main.c    ****               if (checkAPPS()){
 273:Src/main.c    ****                 //send CAN message
 274:Src/main.c    **** 
 275:Src/main.c    ****                 driving = 0;
 276:Src/main.c    ****               }
 277:Src/main.c    **** 
 278:Src/main.c    ****             }//end inside while
 279:Src/main.c    **** 
 280:Src/main.c    ****             if(hardFaultFlag) break;
 281:Src/main.c    ****           }//end BMS Fault
 282:Src/main.c    ****           if(hardFaultFlag) break;
 283:Src/main.c    ****         }//end IMD Fault
 284:Src/main.c    ****         if(hardFaultFlag) break;
 285:Src/main.c    ****       }//end precharch check
 286:Src/main.c    ****       if(hardFaultFlag) break;
 287:Src/main.c    ****     }//end initial BSPD
 288:Src/main.c    ****     if(hardFaultFlag) break;
 289:Src/main.c    **** 
 290:Src/main.c    ****     /* USER CODE END WHILE */
 291:Src/main.c    **** 
 292:Src/main.c    ****     /* USER CODE BEGIN 3 */
 293:Src/main.c    ****   }
 294:Src/main.c    ****   /* USER CODE END 3 */
 295:Src/main.c    **** }
 296:Src/main.c    **** 
 297:Src/main.c    **** /**
 298:Src/main.c    ****   * @brief System Clock Configuration
 299:Src/main.c    ****   * @retval None
 300:Src/main.c    ****   */
 301:Src/main.c    **** void SystemClock_Config(void)
 302:Src/main.c    **** {
 303:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 304:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 305:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 306:Src/main.c    **** 
 307:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 308:Src/main.c    ****   */
 309:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 310:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 311:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 312:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 313:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 314:Src/main.c    ****   {
 315:Src/main.c    ****     Error_Handler();
 316:Src/main.c    ****   }
 317:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 318:Src/main.c    ****   */
 319:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /tmp/ccyQU5qg.s 			page 7


 320:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 321:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 322:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 323:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 324:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 325:Src/main.c    **** 
 326:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 327:Src/main.c    ****   {
 328:Src/main.c    ****     Error_Handler();
 329:Src/main.c    ****   }
 330:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 331:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 332:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 333:Src/main.c    ****   {
 334:Src/main.c    ****     Error_Handler();
 335:Src/main.c    ****   }
 336:Src/main.c    **** }
 337:Src/main.c    **** 
 338:Src/main.c    **** 
 339:Src/main.c    **** /********************************************************************************/
 340:Src/main.c    **** //Checks for APPS errors, sends fault if there is one 
 341:Src/main.c    **** //Returns one if difference in throttleA/B is greater than 10% for 100 ms
 342:Src/main.c    **** //Returns zero if else
 343:Src/main.c    **** /********************************************************************************/
 344:Src/main.c    **** int checkAPPS(){
 345:Src/main.c    **** 
 346:Src/main.c    ****   updateADC();
 347:Src/main.c    **** 
 348:Src/main.c    ****   //0-5000 based ?
 349:Src/main.c    **** 
 350:Src/main.c    ****   //Throttles Agree
 351:Src/main.c    ****   if(APPS_Diff() == 0){
 352:Src/main.c    ****     millisTimer = 100000;
 353:Src/main.c    ****   }
 354:Src/main.c    **** 
 355:Src/main.c    ****   //APPS_EN Fault
 356:Src/main.c    ****   if(millisTimer == 0){ //hmmm needs to be changed
 357:Src/main.c    ****     TxHeader.StdId = APPS_STDID; //sending CAN message
 358:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 359:Src/main.c    **** 
 360:Src/main.c    ****     return 1; 
 361:Src/main.c    ****   }
 362:Src/main.c    **** 
 363:Src/main.c    ****   
 364:Src/main.c    **** 
 365:Src/main.c    ****   return 0;
 366:Src/main.c    **** 
 367:Src/main.c    **** }
 368:Src/main.c    **** 
 369:Src/main.c    **** /********************************************************************************/
 370:Src/main.c    **** //Checks for BTSF errors, If the brake and throttle are pressed at the same time, above a certain t
 371:Src/main.c    **** //Returns one if fault was sensed and sent out
 372:Src/main.c    **** //zero if nothing is detected
 373:Src/main.c    **** /********************************************************************************/
 374:Src/main.c    **** int checkBTSF(){
 375:Src/main.c    **** 
 376:Src/main.c    ****   int BTSFFlag = 0;
ARM GAS  /tmp/ccyQU5qg.s 			page 8


 377:Src/main.c    ****   //HAL_ADC_Start_IT(&hadc1); do we need this?
 378:Src/main.c    **** 
 379:Src/main.c    ****   //ADC for Brake pressure
 380:Src/main.c    ****   updateADC();
 381:Src/main.c    **** 
 382:Src/main.c    ****   //0-5000 based
 383:Src/main.c    **** 
 384:Src/main.c    ****   if(brakePressure_1 > brakeThreshold && throttle_A > throttleThreshold){
 385:Src/main.c    ****     BTSFFlag = 1;
 386:Src/main.c    **** 
 387:Src/main.c    ****     //sending CAN message
 388:Src/main.c    ****     if (HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox) == HAL_OK){
 389:Src/main.c    ****       TxHeader.StdId = BTSF_STDID;
 390:Src/main.c    ****       HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 391:Src/main.c    ****     }
 392:Src/main.c    ****   }
 393:Src/main.c    ****   
 394:Src/main.c    ****   return BTSFFlag;
 395:Src/main.c    **** }
 396:Src/main.c    **** 
 397:Src/main.c    **** /********************************************************************************/
 398:Src/main.c    **** // This function updates the ADC values for all positions/pressures
 399:Src/main.c    **** //
 400:Src/main.c    **** //
 401:Src/main.c    **** /********************************************************************************/
 402:Src/main.c    **** void updateADC(){	
 403:Src/main.c    **** 	HAL_ADC_Start(&hadc1);
 404:Src/main.c    **** 	
 405:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 406:Src/main.c    **** 	brakePos = HAL_ADC_GetValue(&hadc1);  //brakePos
 407:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 408:Src/main.c    **** 	steeringPos = HAL_ADC_GetValue(&hadc1);  //steeringPos
 409:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 410:Src/main.c    **** 	brakePressure_1 = HAL_ADC_GetValue(&hadc1);  //brakePressure_1
 411:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 412:Src/main.c    **** 	brakePressure_2 = HAL_ADC_GetValue(&hadc1);  //brakePressure_2
 413:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 414:Src/main.c    **** 	throttle_A = HAL_ADC_GetValue(&hadc1);  //throttle_A
 415:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 416:Src/main.c    **** 	throttle_B = HAL_ADC_GetValue(&hadc1);  //throttle_B
 417:Src/main.c    **** 	
 418:Src/main.c    **** 	HAL_ADC_Stop(&hadc1);
 419:Src/main.c    **** }
 420:Src/main.c    **** 
 421:Src/main.c    **** // SysTick_Handler function will be called every 1 us
 422:Src/main.c    **** /*
 423:Src/main.c    **** void SysTick_Handler()
 424:Src/main.c    **** {
 425:Src/main.c    ****     if (millisTimer != 0)
 426:Src/main.c    ****     {
 427:Src/main.c    ****         millisTimer--;
 428:Src/main.c    ****     }
 429:Src/main.c    **** 
 430:Src/main.c    ****     if (secTimer != 0)
 431:Src/main.c    ****     {
 432:Src/main.c    ****         secTimer--;
 433:Src/main.c    ****     }
ARM GAS  /tmp/ccyQU5qg.s 			page 9


 434:Src/main.c    **** 
 435:Src/main.c    **** }
 436:Src/main.c    **** */
 437:Src/main.c    **** 
 438:Src/main.c    **** //Determine if greater than 10% diff in throttles
 439:Src/main.c    **** int APPS_Diff(){
 440:Src/main.c    **** 
 441:Src/main.c    ****   double t_A = throttle_A;
 442:Src/main.c    ****   double t_B = throttle_B;
 443:Src/main.c    ****   
 444:Src/main.c    ****   t_A -= (1/12.5)*max_throttle; //equalize throttles assuming 1mm diff out of 12.5mm from pots
 445:Src/main.c    **** 
 446:Src/main.c    ****   double numerator = t_A - t_B;
 447:Src/main.c    ****   //absolute value
 448:Src/main.c    ****   if(numerator < 0){
 449:Src/main.c    ****     numerator = -1*numerator;
 450:Src/main.c    ****   }
 451:Src/main.c    **** 
 452:Src/main.c    ****   double denominator = (t_A + t_B)/2;
 453:Src/main.c    **** 
 454:Src/main.c    ****   double difference = 100*numerator/denominator;
 455:Src/main.c    **** 
 456:Src/main.c    ****   if(difference >= 10){
 457:Src/main.c    ****     return 1;
 458:Src/main.c    ****   }
 459:Src/main.c    **** 
 460:Src/main.c    ****   return 0;
 461:Src/main.c    **** 
 462:Src/main.c    **** 
 463:Src/main.c    **** }
 464:Src/main.c    **** 
 465:Src/main.c    **** /* USER CODE END 0 */
 466:Src/main.c    **** 
 467:Src/main.c    **** 
 468:Src/main.c    **** 
 469:Src/main.c    **** /**
 470:Src/main.c    ****   * @brief ADC1 Initialization Function
 471:Src/main.c    ****   * @param None
 472:Src/main.c    ****   * @retval None
 473:Src/main.c    ****   */
 474:Src/main.c    **** static void MX_ADC1_Init(void)
 475:Src/main.c    **** {
 476:Src/main.c    **** 
 477:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 478:Src/main.c    **** 
 479:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 480:Src/main.c    **** 
 481:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 482:Src/main.c    **** 
 483:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 484:Src/main.c    **** 
 485:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 486:Src/main.c    ****   /**Common config 
 487:Src/main.c    ****   */
 488:Src/main.c    ****   hadc1.Instance = ADC1;
 489:Src/main.c    ****   hadc1.Init.ScanConvMode = ENABLE;
 490:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
ARM GAS  /tmp/ccyQU5qg.s 			page 10


 491:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 492:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 493:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 494:Src/main.c    ****   hadc1.Init.NbrOfConversion = 6;
 495:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 496:Src/main.c    ****   {
 497:Src/main.c    ****     Error_Handler();
 498:Src/main.c    ****   }
 499:Src/main.c    ****   /**Configure Regular Channel 
 500:Src/main.c    ****   */
 501:Src/main.c    ****   //Brake position
 502:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_0;
 503:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 504:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 505:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 506:Src/main.c    ****   {
 507:Src/main.c    ****     Error_Handler();
 508:Src/main.c    ****   }
 509:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 510:Src/main.c    **** 
 511:Src/main.c    ****   //Steering Position 
 512:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_1;
 513:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 514:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 515:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 516:Src/main.c    ****     Error_Handler();
 517:Src/main.c    ****   }
 518:Src/main.c    ****   
 519:Src/main.c    ****   //Brake Pressure 1
 520:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_3;
 521:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 522:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 523:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 524:Src/main.c    ****     Error_Handler();
 525:Src/main.c    ****   }
 526:Src/main.c    ****   
 527:Src/main.c    ****   //Brake Pressure 2
 528:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_2;
 529:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 530:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 531:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 532:Src/main.c    ****     Error_Handler();
 533:Src/main.c    ****   }
 534:Src/main.c    ****   
 535:Src/main.c    ****   //ADC for throttle_A
 536:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 537:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 538:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 539:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 540:Src/main.c    ****     Error_Handler();
 541:Src/main.c    ****   }
 542:Src/main.c    ****   
 543:Src/main.c    ****   //ADC for throttle_B
 544:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_9;
 545:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 546:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 547:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
ARM GAS  /tmp/ccyQU5qg.s 			page 11


 548:Src/main.c    ****     Error_Handler();
 549:Src/main.c    ****   }
 550:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 551:Src/main.c    **** }
 552:Src/main.c    **** 
 553:Src/main.c    **** /**
 554:Src/main.c    ****   * @brief CAN Initialization Function
 555:Src/main.c    ****   * @param None
 556:Src/main.c    ****   * @retval None
 557:Src/main.c    ****   */
 558:Src/main.c    **** static void MX_CAN_Init(void)
 559:Src/main.c    **** {
 560:Src/main.c    **** 
 561:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 0 */
 562:Src/main.c    **** 
 563:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
 564:Src/main.c    **** 
 565:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 1 */
 566:Src/main.c    ****   HAL_CAN_Start(&hcan);
 567:Src/main.c    ****   TxHeader.StdId = 0x321;         // CAN standard ID
 568:Src/main.c    ****   TxHeader.ExtId = 0x01;          // CAN extended ID
 569:Src/main.c    ****   TxHeader.RTR = CAN_RTR_DATA;      // CAN frame type
 570:Src/main.c    ****   TxHeader.IDE = CAN_ID_STD;        // CAN ID type
 571:Src/main.c    ****   TxHeader.DLC = 8;             // CAN frame length in bytes
 572:Src/main.c    ****   TxHeader.TransmitGlobalTime = DISABLE;  // CAN timestamp in TxData[6] and TxData[7]
 573:Src/main.c    **** 
 574:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 575:Src/main.c    ****   hcan.Instance = CAN1;
 576:Src/main.c    ****   hcan.Init.Prescaler = 16;
 577:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 578:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 579:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_1TQ;
 580:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 581:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 582:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 583:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 584:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 585:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 586:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 587:Src/main.c    **** 
 588:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 589:Src/main.c    ****   {
 590:Src/main.c    ****     Error_Handler();
 591:Src/main.c    ****   }
 592:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 2 */
 593:Src/main.c    **** 
 594:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 595:Src/main.c    **** 
 596:Src/main.c    **** }
 597:Src/main.c    **** 
 598:Src/main.c    **** /**
 599:Src/main.c    ****   * @brief SPI1 Initialization Function
 600:Src/main.c    ****   * @param None
 601:Src/main.c    ****   * @retval None
 602:Src/main.c    ****   */
 603:Src/main.c    **** static void MX_SPI1_Init(void)
 604:Src/main.c    **** {
ARM GAS  /tmp/ccyQU5qg.s 			page 12


 605:Src/main.c    **** 
 606:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 607:Src/main.c    **** 
 608:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 609:Src/main.c    **** 
 610:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 611:Src/main.c    **** 
 612:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 613:Src/main.c    ****   /* SPI1 parameter configuration*/
 614:Src/main.c    ****   hspi1.Instance = SPI1;
 615:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 616:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 617:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 618:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 619:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 620:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 621:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 622:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 623:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 624:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 625:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 626:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 627:Src/main.c    ****   {
 628:Src/main.c    ****     Error_Handler();
 629:Src/main.c    ****   }
 630:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 631:Src/main.c    **** 
 632:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 633:Src/main.c    **** 
 634:Src/main.c    **** }
 635:Src/main.c    **** 
 636:Src/main.c    **** /**
 637:Src/main.c    ****   * @brief GPIO Initialization Function
 638:Src/main.c    ****   * @param None
 639:Src/main.c    ****   * @retval None
 640:Src/main.c    ****   */
 641:Src/main.c    **** static void MX_GPIO_Init(void)
 642:Src/main.c    **** {
  25              		.loc 1 642 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 32
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 28
  32              		.cfi_offset 4, -28
  33              		.cfi_offset 5, -24
  34              		.cfi_offset 6, -20
  35              		.cfi_offset 7, -16
  36              		.cfi_offset 8, -12
  37              		.cfi_offset 9, -8
  38              		.cfi_offset 14, -4
  39 0004 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 64
 643:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 643 0
ARM GAS  /tmp/ccyQU5qg.s 			page 13


  43 0006 0024     		movs	r4, #0
  44 0008 0494     		str	r4, [sp, #16]
  45 000a 0594     		str	r4, [sp, #20]
  46 000c 0694     		str	r4, [sp, #24]
  47 000e 0794     		str	r4, [sp, #28]
  48              	.LBB8:
 644:Src/main.c    **** 
 645:Src/main.c    ****   /* GPIO Ports Clock Enable */
 646:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 646 0
  50 0010 3F4B     		ldr	r3, .L3
  51 0012 9A69     		ldr	r2, [r3, #24]
  52 0014 42F01002 		orr	r2, r2, #16
  53 0018 9A61     		str	r2, [r3, #24]
  54 001a 9A69     		ldr	r2, [r3, #24]
  55 001c 02F01002 		and	r2, r2, #16
  56 0020 0092     		str	r2, [sp]
  57 0022 009A     		ldr	r2, [sp]
  58              	.LBE8:
  59              	.LBB9:
 647:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  60              		.loc 1 647 0
  61 0024 9A69     		ldr	r2, [r3, #24]
  62 0026 42F02002 		orr	r2, r2, #32
  63 002a 9A61     		str	r2, [r3, #24]
  64 002c 9A69     		ldr	r2, [r3, #24]
  65 002e 02F02002 		and	r2, r2, #32
  66 0032 0192     		str	r2, [sp, #4]
  67 0034 019A     		ldr	r2, [sp, #4]
  68              	.LBE9:
  69              	.LBB10:
 648:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  70              		.loc 1 648 0
  71 0036 9A69     		ldr	r2, [r3, #24]
  72 0038 42F00402 		orr	r2, r2, #4
  73 003c 9A61     		str	r2, [r3, #24]
  74 003e 9A69     		ldr	r2, [r3, #24]
  75 0040 02F00402 		and	r2, r2, #4
  76 0044 0292     		str	r2, [sp, #8]
  77 0046 029A     		ldr	r2, [sp, #8]
  78              	.LBE10:
  79              	.LBB11:
 649:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 649 0
  81 0048 9A69     		ldr	r2, [r3, #24]
  82 004a 42F00802 		orr	r2, r2, #8
  83 004e 9A61     		str	r2, [r3, #24]
  84 0050 9B69     		ldr	r3, [r3, #24]
  85 0052 03F00803 		and	r3, r3, #8
  86 0056 0393     		str	r3, [sp, #12]
  87 0058 039B     		ldr	r3, [sp, #12]
  88              	.LBE11:
 650:Src/main.c    **** 
 651:Src/main.c    ****   /*Configure GPIO pin Output Level */
 652:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  89              		.loc 1 652 0
  90 005a DFF8C480 		ldr	r8, .L3+16
ARM GAS  /tmp/ccyQU5qg.s 			page 14


  91 005e 2246     		mov	r2, r4
  92 0060 4FF40051 		mov	r1, #8192
  93 0064 4046     		mov	r0, r8
  94 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
  95              	.LVL0:
 653:Src/main.c    **** 
 654:Src/main.c    ****   /*Configure GPIO pin Output Level */
 655:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5 
  96              		.loc 1 655 0
  97 006a 2A4F     		ldr	r7, .L3+4
  98 006c 2246     		mov	r2, r4
  99 006e 42F23811 		movw	r1, #8504
 100 0072 3846     		mov	r0, r7
 101 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 102              	.LVL1:
 656:Src/main.c    ****                           |GPIO_PIN_8, GPIO_PIN_RESET);
 657:Src/main.c    **** 
 658:Src/main.c    ****   /*Configure GPIO pin Output Level */
 659:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 103              		.loc 1 659 0
 104 0078 DFF8A890 		ldr	r9, .L3+20
 105 007c 2246     		mov	r2, r4
 106 007e 4FF48061 		mov	r1, #1024
 107 0082 4846     		mov	r0, r9
 108 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 109              	.LVL2:
 660:Src/main.c    **** 
 661:Src/main.c    ****   /*Configure GPIO pin : PC13 */
 662:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 110              		.loc 1 662 0
 111 0088 4FF40053 		mov	r3, #8192
 112 008c 0493     		str	r3, [sp, #16]
 663:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 663 0
 114 008e 0125     		movs	r5, #1
 115 0090 0595     		str	r5, [sp, #20]
 664:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 116              		.loc 1 664 0
 117 0092 0694     		str	r4, [sp, #24]
 665:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 118              		.loc 1 665 0
 119 0094 0226     		movs	r6, #2
 120 0096 0796     		str	r6, [sp, #28]
 666:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 121              		.loc 1 666 0
 122 0098 04A9     		add	r1, sp, #16
 123 009a 4046     		mov	r0, r8
 124 009c FFF7FEFF 		bl	HAL_GPIO_Init
 125              	.LVL3:
 667:Src/main.c    **** 
 668:Src/main.c    ****   /*Configure GPIO pins : PC14 PC15 */
 669:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 126              		.loc 1 669 0
 127 00a0 4FF44043 		mov	r3, #49152
 128 00a4 0493     		str	r3, [sp, #16]
 670:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 129              		.loc 1 670 0
ARM GAS  /tmp/ccyQU5qg.s 			page 15


 130 00a6 0594     		str	r4, [sp, #20]
 671:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 131              		.loc 1 671 0
 132 00a8 0694     		str	r4, [sp, #24]
 672:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 133              		.loc 1 672 0
 134 00aa 04A9     		add	r1, sp, #16
 135 00ac 4046     		mov	r0, r8
 136 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL4:
 673:Src/main.c    **** 
 674:Src/main.c    ****   /*Configure GPIO pin : PD0 */
 675:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 138              		.loc 1 675 0
 139 00b2 0495     		str	r5, [sp, #16]
 676:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 140              		.loc 1 676 0
 141 00b4 0594     		str	r4, [sp, #20]
 677:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 142              		.loc 1 677 0
 143 00b6 0694     		str	r4, [sp, #24]
 678:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 144              		.loc 1 678 0
 145 00b8 04A9     		add	r1, sp, #16
 146 00ba 1748     		ldr	r0, .L3+8
 147 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 148              	.LVL5:
 679:Src/main.c    **** 
 680:Src/main.c    ****   /*Configure GPIO pins : PB10 PB15 PB6 */
 681:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_15|GPIO_PIN_6;
 149              		.loc 1 681 0
 150 00c0 48F24043 		movw	r3, #33856
 151 00c4 0493     		str	r3, [sp, #16]
 682:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 152              		.loc 1 682 0
 153 00c6 0594     		str	r4, [sp, #20]
 683:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 154              		.loc 1 683 0
 155 00c8 0694     		str	r4, [sp, #24]
 684:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 156              		.loc 1 684 0
 157 00ca 04A9     		add	r1, sp, #16
 158 00cc 3846     		mov	r0, r7
 159 00ce FFF7FEFF 		bl	HAL_GPIO_Init
 160              	.LVL6:
 685:Src/main.c    **** 
 686:Src/main.c    ****   /*Configure GPIO pins : PB13 PB3 PB4 PB5 
 687:Src/main.c    ****                            PB8 */
 688:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5 
 161              		.loc 1 688 0
 162 00d2 42F23813 		movw	r3, #8504
 163 00d6 0493     		str	r3, [sp, #16]
 689:Src/main.c    ****                           |GPIO_PIN_8;
 690:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 164              		.loc 1 690 0
 165 00d8 0595     		str	r5, [sp, #20]
 691:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccyQU5qg.s 			page 16


 166              		.loc 1 691 0
 167 00da 0694     		str	r4, [sp, #24]
 692:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 168              		.loc 1 692 0
 169 00dc 0796     		str	r6, [sp, #28]
 693:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 170              		.loc 1 693 0
 171 00de 04A9     		add	r1, sp, #16
 172 00e0 3846     		mov	r0, r7
 173 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL7:
 694:Src/main.c    **** 
 695:Src/main.c    ****   /*Configure GPIO pin : PA10 */
 696:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 175              		.loc 1 696 0
 176 00e6 4FF48063 		mov	r3, #1024
 177 00ea 0493     		str	r3, [sp, #16]
 697:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 178              		.loc 1 697 0
 179 00ec 0595     		str	r5, [sp, #20]
 698:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 180              		.loc 1 698 0
 181 00ee 0694     		str	r4, [sp, #24]
 699:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 182              		.loc 1 699 0
 183 00f0 0796     		str	r6, [sp, #28]
 700:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 184              		.loc 1 700 0
 185 00f2 04A9     		add	r1, sp, #16
 186 00f4 4846     		mov	r0, r9
 187 00f6 FFF7FEFF 		bl	HAL_GPIO_Init
 188              	.LVL8:
 189              	.LBB12:
 701:Src/main.c    **** 
 702:Src/main.c    ****   /*Configure peripheral I/O remapping */
 703:Src/main.c    ****   __HAL_AFIO_REMAP_PD01_ENABLE();
 190              		.loc 1 703 0
 191 00fa 084A     		ldr	r2, .L3+12
 192 00fc 5368     		ldr	r3, [r2, #4]
 193              	.LVL9:
 194 00fe 43F0E063 		orr	r3, r3, #117440512
 195              	.LVL10:
 196 0102 43F40043 		orr	r3, r3, #32768
 197              	.LVL11:
 198 0106 5360     		str	r3, [r2, #4]
 199              	.LBE12:
 704:Src/main.c    **** 
 705:Src/main.c    **** }
 200              		.loc 1 705 0
 201 0108 09B0     		add	sp, sp, #36
 202              	.LCFI2:
 203              		.cfi_def_cfa_offset 28
 204              		@ sp needed
 205 010a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 206              	.L4:
 207 010e 00BF     		.align	2
 208              	.L3:
ARM GAS  /tmp/ccyQU5qg.s 			page 17


 209 0110 00100240 		.word	1073876992
 210 0114 000C0140 		.word	1073810432
 211 0118 00140140 		.word	1073812480
 212 011c 00000140 		.word	1073807360
 213 0120 00100140 		.word	1073811456
 214 0124 00080140 		.word	1073809408
 215              		.cfi_endproc
 216              	.LFE73:
 218              		.section	.text.MX_SPI1_Init,"ax",%progbits
 219              		.align	1
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu softvfp
 225              	MX_SPI1_Init:
 226              	.LFB72:
 604:Src/main.c    **** 
 227              		.loc 1 604 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231 0000 08B5     		push	{r3, lr}
 232              	.LCFI3:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
 614:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 236              		.loc 1 614 0
 237 0002 0B48     		ldr	r0, .L7
 238 0004 0B4B     		ldr	r3, .L7+4
 239 0006 0360     		str	r3, [r0]
 615:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 240              		.loc 1 615 0
 241 0008 4FF48273 		mov	r3, #260
 242 000c 4360     		str	r3, [r0, #4]
 616:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 243              		.loc 1 616 0
 244 000e 0023     		movs	r3, #0
 245 0010 8360     		str	r3, [r0, #8]
 617:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 246              		.loc 1 617 0
 247 0012 C360     		str	r3, [r0, #12]
 618:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 248              		.loc 1 618 0
 249 0014 0361     		str	r3, [r0, #16]
 619:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 250              		.loc 1 619 0
 251 0016 4361     		str	r3, [r0, #20]
 620:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 252              		.loc 1 620 0
 253 0018 4FF48022 		mov	r2, #262144
 254 001c 8261     		str	r2, [r0, #24]
 621:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 255              		.loc 1 621 0
 256 001e C361     		str	r3, [r0, #28]
 622:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 257              		.loc 1 622 0
ARM GAS  /tmp/ccyQU5qg.s 			page 18


 258 0020 0362     		str	r3, [r0, #32]
 623:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 259              		.loc 1 623 0
 260 0022 4362     		str	r3, [r0, #36]
 624:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 261              		.loc 1 624 0
 262 0024 8362     		str	r3, [r0, #40]
 625:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 263              		.loc 1 625 0
 264 0026 0A23     		movs	r3, #10
 265 0028 C362     		str	r3, [r0, #44]
 626:Src/main.c    ****   {
 266              		.loc 1 626 0
 267 002a FFF7FEFF 		bl	HAL_SPI_Init
 268              	.LVL12:
 269 002e 08BD     		pop	{r3, pc}
 270              	.L8:
 271              		.align	2
 272              	.L7:
 273 0030 00000000 		.word	hspi1
 274 0034 00300140 		.word	1073819648
 275              		.cfi_endproc
 276              	.LFE72:
 278              		.section	.text.MX_ADC1_Init,"ax",%progbits
 279              		.align	1
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu softvfp
 285              	MX_ADC1_Init:
 286              	.LFB70:
 475:Src/main.c    **** 
 287              		.loc 1 475 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 16
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 292              	.LCFI4:
 293              		.cfi_def_cfa_offset 20
 294              		.cfi_offset 4, -20
 295              		.cfi_offset 5, -16
 296              		.cfi_offset 6, -12
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 85B0     		sub	sp, sp, #20
 300              	.LCFI5:
 301              		.cfi_def_cfa_offset 40
 481:Src/main.c    **** 
 302              		.loc 1 481 0
 303 0004 0025     		movs	r5, #0
 304 0006 0195     		str	r5, [sp, #4]
 305 0008 0295     		str	r5, [sp, #8]
 306 000a 0395     		str	r5, [sp, #12]
 488:Src/main.c    ****   hadc1.Init.ScanConvMode = ENABLE;
 307              		.loc 1 488 0
 308 000c 294C     		ldr	r4, .L11
 309 000e 2A4B     		ldr	r3, .L11+4
ARM GAS  /tmp/ccyQU5qg.s 			page 19


 310 0010 2360     		str	r3, [r4]
 489:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 311              		.loc 1 489 0
 312 0012 D223     		movs	r3, #210
 313 0014 A360     		str	r3, [r4, #8]
 490:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 314              		.loc 1 490 0
 315 0016 E360     		str	r3, [r4, #12]
 491:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 316              		.loc 1 491 0
 317 0018 6561     		str	r5, [r4, #20]
 492:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 318              		.loc 1 492 0
 319 001a 4FF46023 		mov	r3, #917504
 320 001e E361     		str	r3, [r4, #28]
 493:Src/main.c    ****   hadc1.Init.NbrOfConversion = 6;
 321              		.loc 1 493 0
 322 0020 6560     		str	r5, [r4, #4]
 494:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 323              		.loc 1 494 0
 324 0022 0626     		movs	r6, #6
 325 0024 2661     		str	r6, [r4, #16]
 495:Src/main.c    ****   {
 326              		.loc 1 495 0
 327 0026 2046     		mov	r0, r4
 328 0028 FFF7FEFF 		bl	HAL_ADC_Init
 329              	.LVL13:
 502:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 330              		.loc 1 502 0
 331 002c 0195     		str	r5, [sp, #4]
 503:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 332              		.loc 1 503 0
 333 002e 0127     		movs	r7, #1
 334 0030 0297     		str	r7, [sp, #8]
 504:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 335              		.loc 1 504 0
 336 0032 0395     		str	r5, [sp, #12]
 505:Src/main.c    ****   {
 337              		.loc 1 505 0
 338 0034 01A9     		add	r1, sp, #4
 339 0036 2046     		mov	r0, r4
 340 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 341              	.LVL14:
 512:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 342              		.loc 1 512 0
 343 003c 0197     		str	r7, [sp, #4]
 513:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 344              		.loc 1 513 0
 345 003e 0225     		movs	r5, #2
 346 0040 0295     		str	r5, [sp, #8]
 514:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 347              		.loc 1 514 0
 348 0042 01A9     		add	r1, sp, #4
 349 0044 2046     		mov	r0, r4
 350 0046 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 351              	.LVL15:
 515:Src/main.c    ****     Error_Handler();
ARM GAS  /tmp/ccyQU5qg.s 			page 20


 352              		.loc 1 515 0
 353 004a 01A9     		add	r1, sp, #4
 354 004c 2046     		mov	r0, r4
 355 004e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 356              	.LVL16:
 520:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 357              		.loc 1 520 0
 358 0052 0323     		movs	r3, #3
 359 0054 0193     		str	r3, [sp, #4]
 521:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 360              		.loc 1 521 0
 361 0056 0293     		str	r3, [sp, #8]
 522:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 362              		.loc 1 522 0
 363 0058 01A9     		add	r1, sp, #4
 364 005a 2046     		mov	r0, r4
 365 005c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 366              	.LVL17:
 523:Src/main.c    ****     Error_Handler();
 367              		.loc 1 523 0
 368 0060 01A9     		add	r1, sp, #4
 369 0062 2046     		mov	r0, r4
 370 0064 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 371              	.LVL18:
 528:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 372              		.loc 1 528 0
 373 0068 0195     		str	r5, [sp, #4]
 529:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 374              		.loc 1 529 0
 375 006a 0423     		movs	r3, #4
 376 006c 0293     		str	r3, [sp, #8]
 530:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 377              		.loc 1 530 0
 378 006e 0DEB0301 		add	r1, sp, r3
 379 0072 2046     		mov	r0, r4
 380 0074 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 381              	.LVL19:
 531:Src/main.c    ****     Error_Handler();
 382              		.loc 1 531 0
 383 0078 01A9     		add	r1, sp, #4
 384 007a 2046     		mov	r0, r4
 385 007c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 386              	.LVL20:
 536:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 387              		.loc 1 536 0
 388 0080 0823     		movs	r3, #8
 389 0082 0193     		str	r3, [sp, #4]
 537:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 390              		.loc 1 537 0
 391 0084 0523     		movs	r3, #5
 392 0086 0293     		str	r3, [sp, #8]
 538:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 393              		.loc 1 538 0
 394 0088 01A9     		add	r1, sp, #4
 395 008a 2046     		mov	r0, r4
 396 008c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 397              	.LVL21:
ARM GAS  /tmp/ccyQU5qg.s 			page 21


 539:Src/main.c    ****     Error_Handler();
 398              		.loc 1 539 0
 399 0090 01A9     		add	r1, sp, #4
 400 0092 2046     		mov	r0, r4
 401 0094 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 402              	.LVL22:
 544:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 403              		.loc 1 544 0
 404 0098 0923     		movs	r3, #9
 405 009a 0193     		str	r3, [sp, #4]
 545:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 406              		.loc 1 545 0
 407 009c 0296     		str	r6, [sp, #8]
 546:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK){
 408              		.loc 1 546 0
 409 009e 01A9     		add	r1, sp, #4
 410 00a0 2046     		mov	r0, r4
 411 00a2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 412              	.LVL23:
 547:Src/main.c    ****     Error_Handler();
 413              		.loc 1 547 0
 414 00a6 01A9     		add	r1, sp, #4
 415 00a8 2046     		mov	r0, r4
 416 00aa FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 417              	.LVL24:
 551:Src/main.c    **** 
 418              		.loc 1 551 0
 419 00ae 05B0     		add	sp, sp, #20
 420              	.LCFI6:
 421              		.cfi_def_cfa_offset 20
 422              		@ sp needed
 423 00b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 424              	.L12:
 425 00b2 00BF     		.align	2
 426              	.L11:
 427 00b4 00000000 		.word	hadc1
 428 00b8 00240140 		.word	1073816576
 429              		.cfi_endproc
 430              	.LFE70:
 432              		.section	.text.MX_CAN_Init,"ax",%progbits
 433              		.align	1
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu softvfp
 439              	MX_CAN_Init:
 440              	.LFB71:
 559:Src/main.c    **** 
 441              		.loc 1 559 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445 0000 10B5     		push	{r4, lr}
 446              	.LCFI7:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 4, -8
 449              		.cfi_offset 14, -4
ARM GAS  /tmp/ccyQU5qg.s 			page 22


 566:Src/main.c    ****   TxHeader.StdId = 0x321;         // CAN standard ID
 450              		.loc 1 566 0
 451 0002 114C     		ldr	r4, .L15
 452 0004 2046     		mov	r0, r4
 453 0006 FFF7FEFF 		bl	HAL_CAN_Start
 454              	.LVL25:
 567:Src/main.c    ****   TxHeader.ExtId = 0x01;          // CAN extended ID
 455              		.loc 1 567 0
 456 000a 104A     		ldr	r2, .L15+4
 457 000c 40F22133 		movw	r3, #801
 458 0010 1360     		str	r3, [r2]
 568:Src/main.c    ****   TxHeader.RTR = CAN_RTR_DATA;      // CAN frame type
 459              		.loc 1 568 0
 460 0012 0123     		movs	r3, #1
 461 0014 5360     		str	r3, [r2, #4]
 569:Src/main.c    ****   TxHeader.IDE = CAN_ID_STD;        // CAN ID type
 462              		.loc 1 569 0
 463 0016 0023     		movs	r3, #0
 464 0018 D360     		str	r3, [r2, #12]
 570:Src/main.c    ****   TxHeader.DLC = 8;             // CAN frame length in bytes
 465              		.loc 1 570 0
 466 001a 9360     		str	r3, [r2, #8]
 571:Src/main.c    ****   TxHeader.TransmitGlobalTime = DISABLE;  // CAN timestamp in TxData[6] and TxData[7]
 467              		.loc 1 571 0
 468 001c 0821     		movs	r1, #8
 469 001e 1161     		str	r1, [r2, #16]
 572:Src/main.c    **** 
 470              		.loc 1 572 0
 471 0020 1375     		strb	r3, [r2, #20]
 575:Src/main.c    ****   hcan.Init.Prescaler = 16;
 472              		.loc 1 575 0
 473 0022 0B4A     		ldr	r2, .L15+8
 474 0024 2260     		str	r2, [r4]
 576:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 475              		.loc 1 576 0
 476 0026 1022     		movs	r2, #16
 477 0028 6260     		str	r2, [r4, #4]
 577:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 478              		.loc 1 577 0
 479 002a A360     		str	r3, [r4, #8]
 578:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_1TQ;
 480              		.loc 1 578 0
 481 002c E360     		str	r3, [r4, #12]
 579:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 482              		.loc 1 579 0
 483 002e 2361     		str	r3, [r4, #16]
 580:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 484              		.loc 1 580 0
 485 0030 6361     		str	r3, [r4, #20]
 581:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 486              		.loc 1 581 0
 487 0032 2376     		strb	r3, [r4, #24]
 582:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 488              		.loc 1 582 0
 489 0034 6376     		strb	r3, [r4, #25]
 583:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 490              		.loc 1 583 0
ARM GAS  /tmp/ccyQU5qg.s 			page 23


 491 0036 A376     		strb	r3, [r4, #26]
 584:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 492              		.loc 1 584 0
 493 0038 E376     		strb	r3, [r4, #27]
 585:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 494              		.loc 1 585 0
 495 003a 2377     		strb	r3, [r4, #28]
 586:Src/main.c    **** 
 496              		.loc 1 586 0
 497 003c 6377     		strb	r3, [r4, #29]
 588:Src/main.c    ****   {
 498              		.loc 1 588 0
 499 003e 2046     		mov	r0, r4
 500 0040 FFF7FEFF 		bl	HAL_CAN_Init
 501              	.LVL26:
 502 0044 10BD     		pop	{r4, pc}
 503              	.L16:
 504 0046 00BF     		.align	2
 505              	.L15:
 506 0048 00000000 		.word	hcan
 507 004c 00000000 		.word	TxHeader
 508 0050 00640040 		.word	1073767424
 509              		.cfi_endproc
 510              	.LFE71:
 512              		.section	.text.SystemClock_Config,"ax",%progbits
 513              		.align	1
 514              		.global	SystemClock_Config
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 518              		.fpu softvfp
 520              	SystemClock_Config:
 521              	.LFB65:
 302:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 522              		.loc 1 302 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 80
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 30B5     		push	{r4, r5, lr}
 527              	.LCFI8:
 528              		.cfi_def_cfa_offset 12
 529              		.cfi_offset 4, -12
 530              		.cfi_offset 5, -8
 531              		.cfi_offset 14, -4
 532 0002 95B0     		sub	sp, sp, #84
 533              	.LCFI9:
 534              		.cfi_def_cfa_offset 96
 303:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 535              		.loc 1 303 0
 536 0004 2822     		movs	r2, #40
 537 0006 0021     		movs	r1, #0
 538 0008 0DEB0200 		add	r0, sp, r2
 539 000c FFF7FEFF 		bl	memset
 540              	.LVL27:
 304:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 541              		.loc 1 304 0
 542 0010 0024     		movs	r4, #0
ARM GAS  /tmp/ccyQU5qg.s 			page 24


 543 0012 0594     		str	r4, [sp, #20]
 544 0014 0694     		str	r4, [sp, #24]
 545 0016 0794     		str	r4, [sp, #28]
 546 0018 0894     		str	r4, [sp, #32]
 547 001a 0994     		str	r4, [sp, #36]
 305:Src/main.c    **** 
 548              		.loc 1 305 0
 549 001c 0194     		str	r4, [sp, #4]
 550 001e 0294     		str	r4, [sp, #8]
 551 0020 0394     		str	r4, [sp, #12]
 552 0022 0494     		str	r4, [sp, #16]
 309:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 553              		.loc 1 309 0
 554 0024 0225     		movs	r5, #2
 555 0026 0A95     		str	r5, [sp, #40]
 310:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 556              		.loc 1 310 0
 557 0028 0123     		movs	r3, #1
 558 002a 0E93     		str	r3, [sp, #56]
 311:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 559              		.loc 1 311 0
 560 002c 1023     		movs	r3, #16
 561 002e 0F93     		str	r3, [sp, #60]
 313:Src/main.c    ****   {
 562              		.loc 1 313 0
 563 0030 0AA8     		add	r0, sp, #40
 564 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 565              	.LVL28:
 319:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 566              		.loc 1 319 0
 567 0036 0F23     		movs	r3, #15
 568 0038 0593     		str	r3, [sp, #20]
 321:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 569              		.loc 1 321 0
 570 003a 0694     		str	r4, [sp, #24]
 322:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 571              		.loc 1 322 0
 572 003c 0794     		str	r4, [sp, #28]
 323:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 573              		.loc 1 323 0
 574 003e 0894     		str	r4, [sp, #32]
 324:Src/main.c    **** 
 575              		.loc 1 324 0
 576 0040 0994     		str	r4, [sp, #36]
 326:Src/main.c    ****   {
 577              		.loc 1 326 0
 578 0042 2146     		mov	r1, r4
 579 0044 05A8     		add	r0, sp, #20
 580 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 581              	.LVL29:
 330:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 582              		.loc 1 330 0
 583 004a 0195     		str	r5, [sp, #4]
 331:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 584              		.loc 1 331 0
 585 004c 0394     		str	r4, [sp, #12]
 332:Src/main.c    ****   {
ARM GAS  /tmp/ccyQU5qg.s 			page 25


 586              		.loc 1 332 0
 587 004e 01A8     		add	r0, sp, #4
 588 0050 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 589              	.LVL30:
 336:Src/main.c    **** 
 590              		.loc 1 336 0
 591 0054 15B0     		add	sp, sp, #84
 592              	.LCFI10:
 593              		.cfi_def_cfa_offset 12
 594              		@ sp needed
 595 0056 30BD     		pop	{r4, r5, pc}
 596              		.cfi_endproc
 597              	.LFE65:
 599              		.section	.text.updateADC,"ax",%progbits
 600              		.align	1
 601              		.global	updateADC
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 605              		.fpu softvfp
 607              	updateADC:
 608              	.LFB68:
 402:Src/main.c    **** 	HAL_ADC_Start(&hadc1);
 609              		.loc 1 402 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613 0000 10B5     		push	{r4, lr}
 614              	.LCFI11:
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 4, -8
 617              		.cfi_offset 14, -4
 403:Src/main.c    **** 	
 618              		.loc 1 403 0
 619 0002 224C     		ldr	r4, .L21
 620 0004 2046     		mov	r0, r4
 621 0006 FFF7FEFF 		bl	HAL_ADC_Start
 622              	.LVL31:
 405:Src/main.c    **** 	brakePos = HAL_ADC_GetValue(&hadc1);  //brakePos
 623              		.loc 1 405 0
 624 000a 4FF47A71 		mov	r1, #1000
 625 000e 2046     		mov	r0, r4
 626 0010 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 627              	.LVL32:
 406:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 628              		.loc 1 406 0
 629 0014 2046     		mov	r0, r4
 630 0016 FFF7FEFF 		bl	HAL_ADC_GetValue
 631              	.LVL33:
 632 001a 1D4B     		ldr	r3, .L21+4
 633 001c 1880     		strh	r0, [r3]	@ movhi
 407:Src/main.c    **** 	steeringPos = HAL_ADC_GetValue(&hadc1);  //steeringPos
 634              		.loc 1 407 0
 635 001e 4FF47A71 		mov	r1, #1000
 636 0022 2046     		mov	r0, r4
 637 0024 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 638              	.LVL34:
ARM GAS  /tmp/ccyQU5qg.s 			page 26


 408:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 639              		.loc 1 408 0
 640 0028 2046     		mov	r0, r4
 641 002a FFF7FEFF 		bl	HAL_ADC_GetValue
 642              	.LVL35:
 643 002e 194B     		ldr	r3, .L21+8
 644 0030 1880     		strh	r0, [r3]	@ movhi
 409:Src/main.c    **** 	brakePressure_1 = HAL_ADC_GetValue(&hadc1);  //brakePressure_1
 645              		.loc 1 409 0
 646 0032 4FF47A71 		mov	r1, #1000
 647 0036 2046     		mov	r0, r4
 648 0038 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 649              	.LVL36:
 410:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 650              		.loc 1 410 0
 651 003c 2046     		mov	r0, r4
 652 003e FFF7FEFF 		bl	HAL_ADC_GetValue
 653              	.LVL37:
 654 0042 154B     		ldr	r3, .L21+12
 655 0044 1880     		strh	r0, [r3]	@ movhi
 411:Src/main.c    **** 	brakePressure_2 = HAL_ADC_GetValue(&hadc1);  //brakePressure_2
 656              		.loc 1 411 0
 657 0046 4FF47A71 		mov	r1, #1000
 658 004a 2046     		mov	r0, r4
 659 004c FFF7FEFF 		bl	HAL_ADC_PollForConversion
 660              	.LVL38:
 412:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 661              		.loc 1 412 0
 662 0050 2046     		mov	r0, r4
 663 0052 FFF7FEFF 		bl	HAL_ADC_GetValue
 664              	.LVL39:
 665 0056 114B     		ldr	r3, .L21+16
 666 0058 1880     		strh	r0, [r3]	@ movhi
 413:Src/main.c    **** 	throttle_A = HAL_ADC_GetValue(&hadc1);  //throttle_A
 667              		.loc 1 413 0
 668 005a 4FF47A71 		mov	r1, #1000
 669 005e 2046     		mov	r0, r4
 670 0060 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 671              	.LVL40:
 414:Src/main.c    **** 	HAL_ADC_PollForConversion(&hadc1, 1000);
 672              		.loc 1 414 0
 673 0064 2046     		mov	r0, r4
 674 0066 FFF7FEFF 		bl	HAL_ADC_GetValue
 675              	.LVL41:
 676 006a 0D4B     		ldr	r3, .L21+20
 677 006c 1880     		strh	r0, [r3]	@ movhi
 415:Src/main.c    **** 	throttle_B = HAL_ADC_GetValue(&hadc1);  //throttle_B
 678              		.loc 1 415 0
 679 006e 4FF47A71 		mov	r1, #1000
 680 0072 2046     		mov	r0, r4
 681 0074 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 682              	.LVL42:
 416:Src/main.c    **** 	
 683              		.loc 1 416 0
 684 0078 2046     		mov	r0, r4
 685 007a FFF7FEFF 		bl	HAL_ADC_GetValue
 686              	.LVL43:
ARM GAS  /tmp/ccyQU5qg.s 			page 27


 687 007e 094B     		ldr	r3, .L21+24
 688 0080 1880     		strh	r0, [r3]	@ movhi
 418:Src/main.c    **** }
 689              		.loc 1 418 0
 690 0082 2046     		mov	r0, r4
 691 0084 FFF7FEFF 		bl	HAL_ADC_Stop
 692              	.LVL44:
 693 0088 10BD     		pop	{r4, pc}
 694              	.L22:
 695 008a 00BF     		.align	2
 696              	.L21:
 697 008c 00000000 		.word	hadc1
 698 0090 00000000 		.word	brakePos
 699 0094 00000000 		.word	steeringPos
 700 0098 00000000 		.word	brakePressure_1
 701 009c 00000000 		.word	brakePressure_2
 702 00a0 00000000 		.word	throttle_A
 703 00a4 00000000 		.word	throttle_B
 704              		.cfi_endproc
 705              	.LFE68:
 707              		.section	.text.checkBTSF,"ax",%progbits
 708              		.align	1
 709              		.global	checkBTSF
 710              		.syntax unified
 711              		.thumb
 712              		.thumb_func
 713              		.fpu softvfp
 715              	checkBTSF:
 716              	.LFB67:
 374:Src/main.c    **** 
 717              		.loc 1 374 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721 0000 08B5     		push	{r3, lr}
 722              	.LCFI12:
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 3, -8
 725              		.cfi_offset 14, -4
 726              	.LVL45:
 380:Src/main.c    **** 
 727              		.loc 1 380 0
 728 0002 FFF7FEFF 		bl	updateADC
 729              	.LVL46:
 384:Src/main.c    ****     BTSFFlag = 1;
 730              		.loc 1 384 0
 731 0006 104B     		ldr	r3, .L31
 732 0008 1B88     		ldrh	r3, [r3]
 733 000a 502B     		cmp	r3, #80
 734 000c 19DD     		ble	.L25
 384:Src/main.c    ****     BTSFFlag = 1;
 735              		.loc 1 384 0 is_stmt 0 discriminator 1
 736 000e 0F4B     		ldr	r3, .L31+4
 737 0010 1B88     		ldrh	r3, [r3]
 738 0012 502B     		cmp	r3, #80
 739 0014 01DC     		bgt	.L29
 376:Src/main.c    ****   //HAL_ADC_Start_IT(&hadc1); do we need this?
ARM GAS  /tmp/ccyQU5qg.s 			page 28


 740              		.loc 1 376 0 is_stmt 1
 741 0016 0020     		movs	r0, #0
 742 0018 08BD     		pop	{r3, pc}
 743              	.L29:
 744              	.LVL47:
 388:Src/main.c    ****       TxHeader.StdId = BTSF_STDID;
 745              		.loc 1 388 0
 746 001a 0D4B     		ldr	r3, .L31+8
 747 001c 0D4A     		ldr	r2, .L31+12
 748 001e 0E49     		ldr	r1, .L31+16
 749 0020 0E48     		ldr	r0, .L31+20
 750 0022 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 751              	.LVL48:
 752 0026 08B1     		cbz	r0, .L30
 385:Src/main.c    **** 
 753              		.loc 1 385 0
 754 0028 0120     		movs	r0, #1
 395:Src/main.c    **** 
 755              		.loc 1 395 0
 756 002a 08BD     		pop	{r3, pc}
 757              	.L30:
 389:Src/main.c    ****       HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 758              		.loc 1 389 0
 759 002c 0A49     		ldr	r1, .L31+16
 760 002e 40F20133 		movw	r3, #769
 761 0032 0B60     		str	r3, [r1]
 390:Src/main.c    ****     }
 762              		.loc 1 390 0
 763 0034 064B     		ldr	r3, .L31+8
 764 0036 074A     		ldr	r2, .L31+12
 765 0038 0848     		ldr	r0, .L31+20
 766 003a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 767              	.LVL49:
 385:Src/main.c    **** 
 768              		.loc 1 385 0
 769 003e 0120     		movs	r0, #1
 770 0040 08BD     		pop	{r3, pc}
 771              	.LVL50:
 772              	.L25:
 376:Src/main.c    ****   //HAL_ADC_Start_IT(&hadc1); do we need this?
 773              		.loc 1 376 0
 774 0042 0020     		movs	r0, #0
 775 0044 08BD     		pop	{r3, pc}
 776              	.L32:
 777 0046 00BF     		.align	2
 778              	.L31:
 779 0048 00000000 		.word	brakePressure_1
 780 004c 00000000 		.word	throttle_A
 781 0050 00000000 		.word	TxMailbox
 782 0054 00000000 		.word	.LANCHOR0
 783 0058 00000000 		.word	TxHeader
 784 005c 00000000 		.word	hcan
 785              		.cfi_endproc
 786              	.LFE67:
 788              		.global	__aeabi_ui2d
 789              		.global	__aeabi_i2d
 790              		.global	__aeabi_dmul
ARM GAS  /tmp/ccyQU5qg.s 			page 29


 791              		.global	__aeabi_dsub
 792              		.global	__aeabi_dcmplt
 793              		.global	__aeabi_dadd
 794              		.global	__aeabi_ddiv
 795              		.global	__aeabi_dcmpge
 796              		.section	.text.APPS_Diff,"ax",%progbits
 797              		.align	1
 798              		.global	APPS_Diff
 799              		.syntax unified
 800              		.thumb
 801              		.thumb_func
 802              		.fpu softvfp
 804              	APPS_Diff:
 805              	.LFB69:
 439:Src/main.c    **** 
 806              		.loc 1 439 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 811              	.LCFI13:
 812              		.cfi_def_cfa_offset 32
 813              		.cfi_offset 3, -32
 814              		.cfi_offset 4, -28
 815              		.cfi_offset 5, -24
 816              		.cfi_offset 6, -20
 817              		.cfi_offset 7, -16
 818              		.cfi_offset 8, -12
 819              		.cfi_offset 9, -8
 820              		.cfi_offset 14, -4
 441:Src/main.c    ****   double t_B = throttle_B;
 821              		.loc 1 441 0
 822 0004 284B     		ldr	r3, .L45+8
 823 0006 1888     		ldrh	r0, [r3]
 824 0008 FFF7FEFF 		bl	__aeabi_ui2d
 825              	.LVL51:
 826 000c 0446     		mov	r4, r0
 827 000e 0D46     		mov	r5, r1
 828              	.LVL52:
 442:Src/main.c    ****   
 829              		.loc 1 442 0
 830 0010 264B     		ldr	r3, .L45+12
 831 0012 1888     		ldrh	r0, [r3]
 832 0014 FFF7FEFF 		bl	__aeabi_ui2d
 833              	.LVL53:
 834 0018 0646     		mov	r6, r0
 835 001a 0F46     		mov	r7, r1
 836              	.LVL54:
 444:Src/main.c    **** 
 837              		.loc 1 444 0
 838 001c 244B     		ldr	r3, .L45+16
 839 001e 1888     		ldrh	r0, [r3]
 840 0020 FFF7FEFF 		bl	__aeabi_i2d
 841              	.LVL55:
 842 0024 1EA3     		adr	r3, .L45
 843 0026 D3E90023 		ldrd	r2, [r3]
 844 002a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccyQU5qg.s 			page 30


 845              	.LVL56:
 846 002e 0246     		mov	r2, r0
 847 0030 0B46     		mov	r3, r1
 848 0032 2046     		mov	r0, r4
 849 0034 2946     		mov	r1, r5
 850 0036 FFF7FEFF 		bl	__aeabi_dsub
 851              	.LVL57:
 852 003a 8046     		mov	r8, r0
 853 003c 8946     		mov	r9, r1
 854              	.LVL58:
 446:Src/main.c    ****   //absolute value
 855              		.loc 1 446 0
 856 003e 3246     		mov	r2, r6
 857 0040 3B46     		mov	r3, r7
 858 0042 FFF7FEFF 		bl	__aeabi_dsub
 859              	.LVL59:
 860 0046 0546     		mov	r5, r0
 861 0048 0C46     		mov	r4, r1
 862              	.LVL60:
 448:Src/main.c    ****     numerator = -1*numerator;
 863              		.loc 1 448 0
 864 004a 0022     		movs	r2, #0
 865 004c 0023     		movs	r3, #0
 866 004e 2846     		mov	r0, r5
 867 0050 2146     		mov	r1, r4
 868 0052 FFF7FEFF 		bl	__aeabi_dcmplt
 869              	.LVL61:
 870 0056 E8B9     		cbnz	r0, .L43
 871              	.LVL62:
 872              	.L34:
 452:Src/main.c    **** 
 873              		.loc 1 452 0
 874 0058 4246     		mov	r2, r8
 875 005a 4B46     		mov	r3, r9
 876 005c 3046     		mov	r0, r6
 877 005e 3946     		mov	r1, r7
 878 0060 FFF7FEFF 		bl	__aeabi_dadd
 879              	.LVL63:
 880 0064 0022     		movs	r2, #0
 881 0066 134B     		ldr	r3, .L45+20
 882 0068 FFF7FEFF 		bl	__aeabi_dmul
 883              	.LVL64:
 884 006c 0646     		mov	r6, r0
 885              	.LVL65:
 886 006e 0F46     		mov	r7, r1
 887              	.LVL66:
 454:Src/main.c    **** 
 888              		.loc 1 454 0
 889 0070 0022     		movs	r2, #0
 890 0072 114B     		ldr	r3, .L45+24
 891 0074 2846     		mov	r0, r5
 892 0076 2146     		mov	r1, r4
 893 0078 FFF7FEFF 		bl	__aeabi_dmul
 894              	.LVL67:
 895 007c 3246     		mov	r2, r6
 896 007e 3B46     		mov	r3, r7
 897 0080 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  /tmp/ccyQU5qg.s 			page 31


 898              	.LVL68:
 456:Src/main.c    ****     return 1;
 899              		.loc 1 456 0
 900 0084 0022     		movs	r2, #0
 901 0086 0D4B     		ldr	r3, .L45+28
 902 0088 FFF7FEFF 		bl	__aeabi_dcmpge
 903              	.LVL69:
 904 008c 28B9     		cbnz	r0, .L44
 460:Src/main.c    **** 
 905              		.loc 1 460 0
 906 008e 0020     		movs	r0, #0
 463:Src/main.c    **** 
 907              		.loc 1 463 0
 908 0090 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 909              	.LVL70:
 910              	.L43:
 449:Src/main.c    ****   }
 911              		.loc 1 449 0
 912 0094 04F10044 		add	r4, r4, #-2147483648
 913              	.LVL71:
 914 0098 DEE7     		b	.L34
 915              	.LVL72:
 916              	.L44:
 457:Src/main.c    ****   }
 917              		.loc 1 457 0
 918 009a 0120     		movs	r0, #1
 919 009c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 920              	.LVL73:
 921              	.L46:
 922              		.align	3
 923              	.L45:
 924 00a0 7B14AE47 		.word	1202590843
 925 00a4 E17AB43F 		.word	1068792545
 926 00a8 00000000 		.word	throttle_A
 927 00ac 00000000 		.word	throttle_B
 928 00b0 00000000 		.word	.LANCHOR1
 929 00b4 0000E03F 		.word	1071644672
 930 00b8 00005940 		.word	1079574528
 931 00bc 00002440 		.word	1076101120
 932              		.cfi_endproc
 933              	.LFE69:
 935              		.section	.text.checkAPPS,"ax",%progbits
 936              		.align	1
 937              		.global	checkAPPS
 938              		.syntax unified
 939              		.thumb
 940              		.thumb_func
 941              		.fpu softvfp
 943              	checkAPPS:
 944              	.LFB66:
 344:Src/main.c    **** 
 945              		.loc 1 344 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949 0000 08B5     		push	{r3, lr}
 950              	.LCFI14:
ARM GAS  /tmp/ccyQU5qg.s 			page 32


 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 3, -8
 953              		.cfi_offset 14, -4
 346:Src/main.c    **** 
 954              		.loc 1 346 0
 955 0002 FFF7FEFF 		bl	updateADC
 956              	.LVL74:
 351:Src/main.c    ****     millisTimer = 100000;
 957              		.loc 1 351 0
 958 0006 FFF7FEFF 		bl	APPS_Diff
 959              	.LVL75:
 960 000a 10B9     		cbnz	r0, .L48
 352:Src/main.c    ****   }
 961              		.loc 1 352 0
 962 000c 094A     		ldr	r2, .L53
 963 000e 0A4B     		ldr	r3, .L53+4
 964 0010 1A60     		str	r2, [r3]
 965              	.L48:
 356:Src/main.c    ****     TxHeader.StdId = APPS_STDID; //sending CAN message
 966              		.loc 1 356 0
 967 0012 094B     		ldr	r3, .L53+4
 968 0014 1B68     		ldr	r3, [r3]
 969 0016 0BB1     		cbz	r3, .L52
 365:Src/main.c    **** 
 970              		.loc 1 365 0
 971 0018 0020     		movs	r0, #0
 367:Src/main.c    **** 
 972              		.loc 1 367 0
 973 001a 08BD     		pop	{r3, pc}
 974              	.L52:
 357:Src/main.c    ****     HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 975              		.loc 1 357 0
 976 001c 0749     		ldr	r1, .L53+8
 977 001e 4FF44073 		mov	r3, #768
 978 0022 0B60     		str	r3, [r1]
 358:Src/main.c    **** 
 979              		.loc 1 358 0
 980 0024 064B     		ldr	r3, .L53+12
 981 0026 074A     		ldr	r2, .L53+16
 982 0028 0748     		ldr	r0, .L53+20
 983 002a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 984              	.LVL76:
 360:Src/main.c    ****   }
 985              		.loc 1 360 0
 986 002e 0120     		movs	r0, #1
 987 0030 08BD     		pop	{r3, pc}
 988              	.L54:
 989 0032 00BF     		.align	2
 990              	.L53:
 991 0034 A0860100 		.word	100000
 992 0038 00000000 		.word	millisTimer
 993 003c 00000000 		.word	TxHeader
 994 0040 00000000 		.word	TxMailbox
 995 0044 00000000 		.word	.LANCHOR0
 996 0048 00000000 		.word	hcan
 997              		.cfi_endproc
 998              	.LFE66:
ARM GAS  /tmp/ccyQU5qg.s 			page 33


 1000              		.section	.text.main,"ax",%progbits
 1001              		.align	1
 1002              		.global	main
 1003              		.syntax unified
 1004              		.thumb
 1005              		.thumb_func
 1006              		.fpu softvfp
 1008              	main:
 1009              	.LFB64:
 148:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1010              		.loc 1 148 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014 0000 10B5     		push	{r4, lr}
 1015              	.LCFI15:
 1016              		.cfi_def_cfa_offset 8
 1017              		.cfi_offset 4, -8
 1018              		.cfi_offset 14, -4
 152:Src/main.c    ****   secTimer = 3000000; //3 seconds
 1019              		.loc 1 152 0
 1020 0002 604A     		ldr	r2, .L80
 1021 0004 604B     		ldr	r3, .L80+4
 1022 0006 1A60     		str	r2, [r3]
 153:Src/main.c    **** 
 1023              		.loc 1 153 0
 1024 0008 604A     		ldr	r2, .L80+8
 1025 000a 614B     		ldr	r3, .L80+12
 1026 000c 1A60     		str	r2, [r3]
 160:Src/main.c    **** 
 1027              		.loc 1 160 0
 1028 000e FFF7FEFF 		bl	HAL_Init
 1029              	.LVL77:
 165:Src/main.c    ****   // Configure the SysTick timer to overflow every 1 us
 1030              		.loc 1 165 0
 1031 0012 FFF7FEFF 		bl	SystemCoreClockUpdate
 1032              	.LVL78:
 167:Src/main.c    **** 
 1033              		.loc 1 167 0
 1034 0016 5F4B     		ldr	r3, .L80+16
 1035 0018 1B68     		ldr	r3, [r3]
 1036 001a 5F4A     		ldr	r2, .L80+20
 1037 001c A2FB0323 		umull	r2, r3, r2, r3
 1038 0020 9B0C     		lsrs	r3, r3, #18
 1039              	.LVL79:
 1040              	.LBB13:
 1041              	.LBB14:
 1042              		.file 2 "Drivers/CMSIS/Include/core_cm3.h"
   1:Drivers/CMSIS/Include/core_cm3.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm3.h ****  * @file     core_cm3.h
   3:Drivers/CMSIS/Include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm3.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/core_cm3.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm3.h **** 
   9:Drivers/CMSIS/Include/core_cm3.h ****    All rights reserved.
ARM GAS  /tmp/ccyQU5qg.s 			page 34


  10:Drivers/CMSIS/Include/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm3.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/core_cm3.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm3.h ****    *
  21:Drivers/CMSIS/Include/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/core_cm3.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/core_cm3.h **** 
  34:Drivers/CMSIS/Include/core_cm3.h **** 
  35:Drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm3.h **** #endif
  40:Drivers/CMSIS/Include/core_cm3.h **** 
  41:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm3.h **** 
  44:Drivers/CMSIS/Include/core_cm3.h **** #include <stdint.h>
  45:Drivers/CMSIS/Include/core_cm3.h **** 
  46:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm3.h **** #endif
  49:Drivers/CMSIS/Include/core_cm3.h **** 
  50:Drivers/CMSIS/Include/core_cm3.h **** /**
  51:Drivers/CMSIS/Include/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm3.h **** 
  54:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm3.h **** 
  57:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm3.h ****      Unions are used for effective representation of core registers.
  59:Drivers/CMSIS/Include/core_cm3.h **** 
  60:Drivers/CMSIS/Include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  62:Drivers/CMSIS/Include/core_cm3.h ****  */
  63:Drivers/CMSIS/Include/core_cm3.h **** 
  64:Drivers/CMSIS/Include/core_cm3.h **** 
  65:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
  66:Drivers/CMSIS/Include/core_cm3.h ****  *                 CMSIS definitions
ARM GAS  /tmp/ccyQU5qg.s 			page 35


  67:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm3.h **** /**
  69:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup Cortex_M3
  70:Drivers/CMSIS/Include/core_cm3.h ****   @{
  71:Drivers/CMSIS/Include/core_cm3.h ****  */
  72:Drivers/CMSIS/Include/core_cm3.h **** 
  73:Drivers/CMSIS/Include/core_cm3.h **** /*  CMSIS CM3 definitions */
  74:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm3.h **** 
  79:Drivers/CMSIS/Include/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  80:Drivers/CMSIS/Include/core_cm3.h **** 
  81:Drivers/CMSIS/Include/core_cm3.h **** 
  82:Drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm3.h **** 
  87:Drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  91:Drivers/CMSIS/Include/core_cm3.h **** 
  92:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm3.h **** 
  97:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm3.h **** 
 102:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm3.h **** 
 106:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm3.h **** 
 111:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm3.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 116:Drivers/CMSIS/Include/core_cm3.h **** 
 117:Drivers/CMSIS/Include/core_cm3.h **** #else
 118:Drivers/CMSIS/Include/core_cm3.h ****   #error Unknown compiler
 119:Drivers/CMSIS/Include/core_cm3.h **** #endif
 120:Drivers/CMSIS/Include/core_cm3.h **** 
 121:Drivers/CMSIS/Include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm3.h ****     This core does not support an FPU at all
 123:Drivers/CMSIS/Include/core_cm3.h **** */
ARM GAS  /tmp/ccyQU5qg.s 			page 36


 124:Drivers/CMSIS/Include/core_cm3.h **** #define __FPU_USED       0U
 125:Drivers/CMSIS/Include/core_cm3.h **** 
 126:Drivers/CMSIS/Include/core_cm3.h **** #if defined ( __CC_ARM )
 127:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 128:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 130:Drivers/CMSIS/Include/core_cm3.h **** 
 131:Drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARM_PCS_VFP
 133:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm3.h **** 
 136:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
 137:Drivers/CMSIS/Include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 140:Drivers/CMSIS/Include/core_cm3.h **** 
 141:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
 142:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARMVFP__
 143:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 145:Drivers/CMSIS/Include/core_cm3.h **** 
 146:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
 147:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 148:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 150:Drivers/CMSIS/Include/core_cm3.h **** 
 151:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 152:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __FPU_VFP__
 153:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 155:Drivers/CMSIS/Include/core_cm3.h **** 
 156:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 157:Drivers/CMSIS/Include/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 158:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 160:Drivers/CMSIS/Include/core_cm3.h **** 
 161:Drivers/CMSIS/Include/core_cm3.h **** #endif
 162:Drivers/CMSIS/Include/core_cm3.h **** 
 163:Drivers/CMSIS/Include/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:Drivers/CMSIS/Include/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:Drivers/CMSIS/Include/core_cm3.h **** 
 166:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 167:Drivers/CMSIS/Include/core_cm3.h **** }
 168:Drivers/CMSIS/Include/core_cm3.h **** #endif
 169:Drivers/CMSIS/Include/core_cm3.h **** 
 170:Drivers/CMSIS/Include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 171:Drivers/CMSIS/Include/core_cm3.h **** 
 172:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 173:Drivers/CMSIS/Include/core_cm3.h **** 
 174:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 176:Drivers/CMSIS/Include/core_cm3.h **** 
 177:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 178:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
 179:Drivers/CMSIS/Include/core_cm3.h **** #endif
 180:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccyQU5qg.s 			page 37


 181:Drivers/CMSIS/Include/core_cm3.h **** /* check device defines and use defaults */
 182:Drivers/CMSIS/Include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 183:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __CM3_REV
 184:Drivers/CMSIS/Include/core_cm3.h ****     #define __CM3_REV               0x0200U
 185:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 186:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 187:Drivers/CMSIS/Include/core_cm3.h **** 
 188:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __MPU_PRESENT
 189:Drivers/CMSIS/Include/core_cm3.h ****     #define __MPU_PRESENT             0U
 190:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 192:Drivers/CMSIS/Include/core_cm3.h **** 
 193:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 194:Drivers/CMSIS/Include/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 195:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 196:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 197:Drivers/CMSIS/Include/core_cm3.h **** 
 198:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 199:Drivers/CMSIS/Include/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 200:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 201:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 202:Drivers/CMSIS/Include/core_cm3.h **** #endif
 203:Drivers/CMSIS/Include/core_cm3.h **** 
 204:Drivers/CMSIS/Include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 205:Drivers/CMSIS/Include/core_cm3.h **** /**
 206:Drivers/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 207:Drivers/CMSIS/Include/core_cm3.h **** 
 208:Drivers/CMSIS/Include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 209:Drivers/CMSIS/Include/core_cm3.h ****     \li to specify the access to peripheral variables.
 210:Drivers/CMSIS/Include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 211:Drivers/CMSIS/Include/core_cm3.h **** */
 212:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 213:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 214:Drivers/CMSIS/Include/core_cm3.h **** #else
 215:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 216:Drivers/CMSIS/Include/core_cm3.h **** #endif
 217:Drivers/CMSIS/Include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 218:Drivers/CMSIS/Include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 219:Drivers/CMSIS/Include/core_cm3.h **** 
 220:Drivers/CMSIS/Include/core_cm3.h **** /* following defines should be used for structure members */
 221:Drivers/CMSIS/Include/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 222:Drivers/CMSIS/Include/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 223:Drivers/CMSIS/Include/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 224:Drivers/CMSIS/Include/core_cm3.h **** 
 225:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group Cortex_M3 */
 226:Drivers/CMSIS/Include/core_cm3.h **** 
 227:Drivers/CMSIS/Include/core_cm3.h **** 
 228:Drivers/CMSIS/Include/core_cm3.h **** 
 229:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
 230:Drivers/CMSIS/Include/core_cm3.h ****  *                 Register Abstraction
 231:Drivers/CMSIS/Include/core_cm3.h ****   Core Register contain:
 232:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register
 233:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Register
 234:Drivers/CMSIS/Include/core_cm3.h ****   - Core SCB Register
 235:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Register
 236:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Register
 237:Drivers/CMSIS/Include/core_cm3.h ****   - Core MPU Register
ARM GAS  /tmp/ccyQU5qg.s 			page 38


 238:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
 239:Drivers/CMSIS/Include/core_cm3.h **** /**
 240:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 241:Drivers/CMSIS/Include/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 242:Drivers/CMSIS/Include/core_cm3.h **** */
 243:Drivers/CMSIS/Include/core_cm3.h **** 
 244:Drivers/CMSIS/Include/core_cm3.h **** /**
 245:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 246:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 247:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Core Register type definitions.
 248:Drivers/CMSIS/Include/core_cm3.h ****   @{
 249:Drivers/CMSIS/Include/core_cm3.h ****  */
 250:Drivers/CMSIS/Include/core_cm3.h **** 
 251:Drivers/CMSIS/Include/core_cm3.h **** /**
 252:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 253:Drivers/CMSIS/Include/core_cm3.h ****  */
 254:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 255:Drivers/CMSIS/Include/core_cm3.h **** {
 256:Drivers/CMSIS/Include/core_cm3.h ****   struct
 257:Drivers/CMSIS/Include/core_cm3.h ****   {
 258:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 259:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 260:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 261:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 262:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 263:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 264:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 265:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 266:Drivers/CMSIS/Include/core_cm3.h **** } APSR_Type;
 267:Drivers/CMSIS/Include/core_cm3.h **** 
 268:Drivers/CMSIS/Include/core_cm3.h **** /* APSR Register Definitions */
 269:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 270:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 271:Drivers/CMSIS/Include/core_cm3.h **** 
 272:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 273:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 274:Drivers/CMSIS/Include/core_cm3.h **** 
 275:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 276:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 277:Drivers/CMSIS/Include/core_cm3.h **** 
 278:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 279:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 280:Drivers/CMSIS/Include/core_cm3.h **** 
 281:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 282:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm3.h **** 
 284:Drivers/CMSIS/Include/core_cm3.h **** 
 285:Drivers/CMSIS/Include/core_cm3.h **** /**
 286:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:Drivers/CMSIS/Include/core_cm3.h ****  */
 288:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 289:Drivers/CMSIS/Include/core_cm3.h **** {
 290:Drivers/CMSIS/Include/core_cm3.h ****   struct
 291:Drivers/CMSIS/Include/core_cm3.h ****   {
 292:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 294:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
ARM GAS  /tmp/ccyQU5qg.s 			page 39


 295:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:Drivers/CMSIS/Include/core_cm3.h **** } IPSR_Type;
 297:Drivers/CMSIS/Include/core_cm3.h **** 
 298:Drivers/CMSIS/Include/core_cm3.h **** /* IPSR Register Definitions */
 299:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 301:Drivers/CMSIS/Include/core_cm3.h **** 
 302:Drivers/CMSIS/Include/core_cm3.h **** 
 303:Drivers/CMSIS/Include/core_cm3.h **** /**
 304:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:Drivers/CMSIS/Include/core_cm3.h ****  */
 306:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 307:Drivers/CMSIS/Include/core_cm3.h **** {
 308:Drivers/CMSIS/Include/core_cm3.h ****   struct
 309:Drivers/CMSIS/Include/core_cm3.h ****   {
 310:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 314:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 315:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 316:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 317:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 318:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 319:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 320:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:Drivers/CMSIS/Include/core_cm3.h **** } xPSR_Type;
 322:Drivers/CMSIS/Include/core_cm3.h **** 
 323:Drivers/CMSIS/Include/core_cm3.h **** /* xPSR Register Definitions */
 324:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 325:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 326:Drivers/CMSIS/Include/core_cm3.h **** 
 327:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 328:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 329:Drivers/CMSIS/Include/core_cm3.h **** 
 330:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 331:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 332:Drivers/CMSIS/Include/core_cm3.h **** 
 333:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 334:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 335:Drivers/CMSIS/Include/core_cm3.h **** 
 336:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 337:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 338:Drivers/CMSIS/Include/core_cm3.h **** 
 339:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 340:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 341:Drivers/CMSIS/Include/core_cm3.h **** 
 342:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 343:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm3.h **** 
 345:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 346:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm3.h **** 
 348:Drivers/CMSIS/Include/core_cm3.h **** 
 349:Drivers/CMSIS/Include/core_cm3.h **** /**
 350:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 351:Drivers/CMSIS/Include/core_cm3.h ****  */
ARM GAS  /tmp/ccyQU5qg.s 			page 40


 352:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 353:Drivers/CMSIS/Include/core_cm3.h **** {
 354:Drivers/CMSIS/Include/core_cm3.h ****   struct
 355:Drivers/CMSIS/Include/core_cm3.h ****   {
 356:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 357:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 358:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 359:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 360:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 361:Drivers/CMSIS/Include/core_cm3.h **** } CONTROL_Type;
 362:Drivers/CMSIS/Include/core_cm3.h **** 
 363:Drivers/CMSIS/Include/core_cm3.h **** /* CONTROL Register Definitions */
 364:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 365:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 366:Drivers/CMSIS/Include/core_cm3.h **** 
 367:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 368:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 369:Drivers/CMSIS/Include/core_cm3.h **** 
 370:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 371:Drivers/CMSIS/Include/core_cm3.h **** 
 372:Drivers/CMSIS/Include/core_cm3.h **** 
 373:Drivers/CMSIS/Include/core_cm3.h **** /**
 374:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 375:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 376:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 377:Drivers/CMSIS/Include/core_cm3.h ****   @{
 378:Drivers/CMSIS/Include/core_cm3.h ****  */
 379:Drivers/CMSIS/Include/core_cm3.h **** 
 380:Drivers/CMSIS/Include/core_cm3.h **** /**
 381:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 382:Drivers/CMSIS/Include/core_cm3.h ****  */
 383:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 384:Drivers/CMSIS/Include/core_cm3.h **** {
 385:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 386:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[24U];
 387:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 388:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RSERVED1[24U];
 389:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 390:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[24U];
 391:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 392:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[24U];
 393:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 394:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[56U];
 395:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 396:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[644U];
 397:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 398:Drivers/CMSIS/Include/core_cm3.h **** }  NVIC_Type;
 399:Drivers/CMSIS/Include/core_cm3.h **** 
 400:Drivers/CMSIS/Include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 401:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 402:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 403:Drivers/CMSIS/Include/core_cm3.h **** 
 404:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 405:Drivers/CMSIS/Include/core_cm3.h **** 
 406:Drivers/CMSIS/Include/core_cm3.h **** 
 407:Drivers/CMSIS/Include/core_cm3.h **** /**
 408:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
ARM GAS  /tmp/ccyQU5qg.s 			page 41


 409:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 410:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 411:Drivers/CMSIS/Include/core_cm3.h ****   @{
 412:Drivers/CMSIS/Include/core_cm3.h ****  */
 413:Drivers/CMSIS/Include/core_cm3.h **** 
 414:Drivers/CMSIS/Include/core_cm3.h **** /**
 415:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 416:Drivers/CMSIS/Include/core_cm3.h ****  */
 417:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 418:Drivers/CMSIS/Include/core_cm3.h **** {
 419:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 420:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 421:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 422:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 423:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 424:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 425:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 426:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 427:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 428:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 429:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 430:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 431:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 432:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 433:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 434:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 435:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 436:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 437:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 438:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[5U];
 439:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 440:Drivers/CMSIS/Include/core_cm3.h **** } SCB_Type;
 441:Drivers/CMSIS/Include/core_cm3.h **** 
 442:Drivers/CMSIS/Include/core_cm3.h **** /* SCB CPUID Register Definitions */
 443:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm3.h **** 
 446:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 447:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 448:Drivers/CMSIS/Include/core_cm3.h **** 
 449:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 451:Drivers/CMSIS/Include/core_cm3.h **** 
 452:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 454:Drivers/CMSIS/Include/core_cm3.h **** 
 455:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 456:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 457:Drivers/CMSIS/Include/core_cm3.h **** 
 458:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 459:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 461:Drivers/CMSIS/Include/core_cm3.h **** 
 462:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 463:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 464:Drivers/CMSIS/Include/core_cm3.h **** 
 465:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
ARM GAS  /tmp/ccyQU5qg.s 			page 42


 466:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm3.h **** 
 468:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 469:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm3.h **** 
 471:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm3.h **** 
 474:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm3.h **** 
 477:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm3.h **** 
 480:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm3.h **** 
 483:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm3.h **** 
 486:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 487:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm3.h **** 
 489:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 490:Drivers/CMSIS/Include/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 491:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm3.h **** 
 494:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm3.h **** #else
 497:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm3.h **** #endif
 500:Drivers/CMSIS/Include/core_cm3.h **** 
 501:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 502:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 503:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm3.h **** 
 505:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm3.h **** 
 508:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm3.h **** 
 511:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm3.h **** 
 514:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm3.h **** 
 517:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm3.h **** 
 520:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccyQU5qg.s 			page 43


 523:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Control Register Definitions */
 524:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm3.h **** 
 527:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm3.h **** 
 530:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm3.h **** 
 533:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 534:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm3.h **** 
 537:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm3.h **** 
 540:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm3.h **** 
 543:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm3.h **** 
 546:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm3.h **** 
 549:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm3.h **** 
 552:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 553:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm3.h **** 
 556:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm3.h **** 
 559:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm3.h **** 
 562:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm3.h **** 
 565:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm3.h **** 
 568:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm3.h **** 
 571:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm3.h **** 
 574:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm3.h **** 
 577:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccyQU5qg.s 			page 44


 580:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm3.h **** 
 583:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm3.h **** 
 586:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm3.h **** 
 589:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm3.h **** 
 592:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm3.h **** 
 595:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 596:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm3.h **** 
 599:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm3.h **** 
 602:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm3.h **** 
 605:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 606:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm3.h **** 
 609:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm3.h **** 
 612:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm3.h **** 
 615:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 616:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm3.h **** 
 619:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm3.h **** 
 622:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm3.h **** 
 625:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm3.h **** 
 628:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm3.h **** 
 631:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 632:Drivers/CMSIS/Include/core_cm3.h **** 
 633:Drivers/CMSIS/Include/core_cm3.h **** 
 634:Drivers/CMSIS/Include/core_cm3.h **** /**
 635:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 636:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
ARM GAS  /tmp/ccyQU5qg.s 			page 45


 637:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 638:Drivers/CMSIS/Include/core_cm3.h ****   @{
 639:Drivers/CMSIS/Include/core_cm3.h ****  */
 640:Drivers/CMSIS/Include/core_cm3.h **** 
 641:Drivers/CMSIS/Include/core_cm3.h **** /**
 642:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 643:Drivers/CMSIS/Include/core_cm3.h ****  */
 644:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 645:Drivers/CMSIS/Include/core_cm3.h **** {
 646:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 647:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 648:Drivers/CMSIS/Include/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 649:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 650:Drivers/CMSIS/Include/core_cm3.h **** #else
 651:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 652:Drivers/CMSIS/Include/core_cm3.h **** #endif
 653:Drivers/CMSIS/Include/core_cm3.h **** } SCnSCB_Type;
 654:Drivers/CMSIS/Include/core_cm3.h **** 
 655:Drivers/CMSIS/Include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 656:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 657:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 658:Drivers/CMSIS/Include/core_cm3.h **** 
 659:Drivers/CMSIS/Include/core_cm3.h **** /* Auxiliary Control Register Definitions */
 660:Drivers/CMSIS/Include/core_cm3.h **** 
 661:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 662:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 663:Drivers/CMSIS/Include/core_cm3.h **** 
 664:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 665:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 666:Drivers/CMSIS/Include/core_cm3.h **** 
 667:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 668:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 669:Drivers/CMSIS/Include/core_cm3.h **** 
 670:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 671:Drivers/CMSIS/Include/core_cm3.h **** 
 672:Drivers/CMSIS/Include/core_cm3.h **** 
 673:Drivers/CMSIS/Include/core_cm3.h **** /**
 674:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 675:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 676:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 677:Drivers/CMSIS/Include/core_cm3.h ****   @{
 678:Drivers/CMSIS/Include/core_cm3.h ****  */
 679:Drivers/CMSIS/Include/core_cm3.h **** 
 680:Drivers/CMSIS/Include/core_cm3.h **** /**
 681:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 682:Drivers/CMSIS/Include/core_cm3.h ****  */
 683:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 684:Drivers/CMSIS/Include/core_cm3.h **** {
 685:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 686:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 687:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 688:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 689:Drivers/CMSIS/Include/core_cm3.h **** } SysTick_Type;
 690:Drivers/CMSIS/Include/core_cm3.h **** 
 691:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 692:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 693:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
ARM GAS  /tmp/ccyQU5qg.s 			page 46


 694:Drivers/CMSIS/Include/core_cm3.h **** 
 695:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 696:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 697:Drivers/CMSIS/Include/core_cm3.h **** 
 698:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 699:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 700:Drivers/CMSIS/Include/core_cm3.h **** 
 701:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 702:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 703:Drivers/CMSIS/Include/core_cm3.h **** 
 704:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Reload Register Definitions */
 705:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 706:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 707:Drivers/CMSIS/Include/core_cm3.h **** 
 708:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Current Register Definitions */
 709:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 710:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 711:Drivers/CMSIS/Include/core_cm3.h **** 
 712:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 713:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 714:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 715:Drivers/CMSIS/Include/core_cm3.h **** 
 716:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 717:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 718:Drivers/CMSIS/Include/core_cm3.h **** 
 719:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 720:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 721:Drivers/CMSIS/Include/core_cm3.h **** 
 722:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 723:Drivers/CMSIS/Include/core_cm3.h **** 
 724:Drivers/CMSIS/Include/core_cm3.h **** 
 725:Drivers/CMSIS/Include/core_cm3.h **** /**
 726:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 727:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 728:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 729:Drivers/CMSIS/Include/core_cm3.h ****   @{
 730:Drivers/CMSIS/Include/core_cm3.h ****  */
 731:Drivers/CMSIS/Include/core_cm3.h **** 
 732:Drivers/CMSIS/Include/core_cm3.h **** /**
 733:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 734:Drivers/CMSIS/Include/core_cm3.h ****  */
 735:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 736:Drivers/CMSIS/Include/core_cm3.h **** {
 737:Drivers/CMSIS/Include/core_cm3.h ****   __OM  union
 738:Drivers/CMSIS/Include/core_cm3.h ****   {
 739:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 740:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 741:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 742:Drivers/CMSIS/Include/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 743:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[864U];
 744:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 745:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[15U];
 746:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 747:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[15U];
 748:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 749:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[29U];
 750:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
ARM GAS  /tmp/ccyQU5qg.s 			page 47


 751:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 752:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 753:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[43U];
 754:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 755:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 756:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[6U];
 757:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 758:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 759:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 760:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 761:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 762:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 763:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 764:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 765:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 766:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 767:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 768:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 769:Drivers/CMSIS/Include/core_cm3.h **** } ITM_Type;
 770:Drivers/CMSIS/Include/core_cm3.h **** 
 771:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 772:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 773:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 774:Drivers/CMSIS/Include/core_cm3.h **** 
 775:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 776:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 777:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 778:Drivers/CMSIS/Include/core_cm3.h **** 
 779:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 780:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 781:Drivers/CMSIS/Include/core_cm3.h **** 
 782:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 783:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 784:Drivers/CMSIS/Include/core_cm3.h **** 
 785:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 786:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 787:Drivers/CMSIS/Include/core_cm3.h **** 
 788:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 789:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 790:Drivers/CMSIS/Include/core_cm3.h **** 
 791:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 792:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 793:Drivers/CMSIS/Include/core_cm3.h **** 
 794:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 795:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 796:Drivers/CMSIS/Include/core_cm3.h **** 
 797:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 798:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 799:Drivers/CMSIS/Include/core_cm3.h **** 
 800:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 801:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 802:Drivers/CMSIS/Include/core_cm3.h **** 
 803:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 804:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 805:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 806:Drivers/CMSIS/Include/core_cm3.h **** 
 807:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Read Register Definitions */
ARM GAS  /tmp/ccyQU5qg.s 			page 48


 808:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 809:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 810:Drivers/CMSIS/Include/core_cm3.h **** 
 811:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 812:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 813:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 814:Drivers/CMSIS/Include/core_cm3.h **** 
 815:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 816:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 817:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 818:Drivers/CMSIS/Include/core_cm3.h **** 
 819:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 820:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 821:Drivers/CMSIS/Include/core_cm3.h **** 
 822:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 823:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 824:Drivers/CMSIS/Include/core_cm3.h **** 
 825:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 826:Drivers/CMSIS/Include/core_cm3.h **** 
 827:Drivers/CMSIS/Include/core_cm3.h **** 
 828:Drivers/CMSIS/Include/core_cm3.h **** /**
 829:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 830:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 831:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 832:Drivers/CMSIS/Include/core_cm3.h ****   @{
 833:Drivers/CMSIS/Include/core_cm3.h ****  */
 834:Drivers/CMSIS/Include/core_cm3.h **** 
 835:Drivers/CMSIS/Include/core_cm3.h **** /**
 836:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 837:Drivers/CMSIS/Include/core_cm3.h ****  */
 838:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 839:Drivers/CMSIS/Include/core_cm3.h **** {
 840:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 841:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 842:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 843:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 844:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 845:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 846:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 847:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 848:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 849:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 850:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 851:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 852:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 853:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 854:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 855:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 856:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 857:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 858:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 859:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[1U];
 860:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 861:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 862:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 863:Drivers/CMSIS/Include/core_cm3.h **** } DWT_Type;
 864:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccyQU5qg.s 			page 49


 865:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Control Register Definitions */
 866:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 867:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 868:Drivers/CMSIS/Include/core_cm3.h **** 
 869:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 870:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 871:Drivers/CMSIS/Include/core_cm3.h **** 
 872:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 873:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 874:Drivers/CMSIS/Include/core_cm3.h **** 
 875:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 876:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 877:Drivers/CMSIS/Include/core_cm3.h **** 
 878:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 879:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 880:Drivers/CMSIS/Include/core_cm3.h **** 
 881:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 882:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 883:Drivers/CMSIS/Include/core_cm3.h **** 
 884:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 885:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 886:Drivers/CMSIS/Include/core_cm3.h **** 
 887:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 888:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 889:Drivers/CMSIS/Include/core_cm3.h **** 
 890:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 891:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 892:Drivers/CMSIS/Include/core_cm3.h **** 
 893:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 894:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 895:Drivers/CMSIS/Include/core_cm3.h **** 
 896:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 897:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 898:Drivers/CMSIS/Include/core_cm3.h **** 
 899:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 900:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 901:Drivers/CMSIS/Include/core_cm3.h **** 
 902:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 903:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 904:Drivers/CMSIS/Include/core_cm3.h **** 
 905:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 906:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 907:Drivers/CMSIS/Include/core_cm3.h **** 
 908:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 909:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 910:Drivers/CMSIS/Include/core_cm3.h **** 
 911:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 912:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 913:Drivers/CMSIS/Include/core_cm3.h **** 
 914:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 915:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 916:Drivers/CMSIS/Include/core_cm3.h **** 
 917:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 918:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 919:Drivers/CMSIS/Include/core_cm3.h **** 
 920:Drivers/CMSIS/Include/core_cm3.h **** /* DWT CPI Count Register Definitions */
 921:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
ARM GAS  /tmp/ccyQU5qg.s 			page 50


 922:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 923:Drivers/CMSIS/Include/core_cm3.h **** 
 924:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 925:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 926:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 927:Drivers/CMSIS/Include/core_cm3.h **** 
 928:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 929:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 930:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 931:Drivers/CMSIS/Include/core_cm3.h **** 
 932:Drivers/CMSIS/Include/core_cm3.h **** /* DWT LSU Count Register Definitions */
 933:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 934:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 935:Drivers/CMSIS/Include/core_cm3.h **** 
 936:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 937:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 938:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 939:Drivers/CMSIS/Include/core_cm3.h **** 
 940:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 941:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 942:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 943:Drivers/CMSIS/Include/core_cm3.h **** 
 944:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 945:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 946:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 947:Drivers/CMSIS/Include/core_cm3.h **** 
 948:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 949:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 950:Drivers/CMSIS/Include/core_cm3.h **** 
 951:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 952:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 953:Drivers/CMSIS/Include/core_cm3.h **** 
 954:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 955:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 956:Drivers/CMSIS/Include/core_cm3.h **** 
 957:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 958:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 959:Drivers/CMSIS/Include/core_cm3.h **** 
 960:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 961:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 962:Drivers/CMSIS/Include/core_cm3.h **** 
 963:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 964:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 965:Drivers/CMSIS/Include/core_cm3.h **** 
 966:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 967:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 968:Drivers/CMSIS/Include/core_cm3.h **** 
 969:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 970:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 971:Drivers/CMSIS/Include/core_cm3.h **** 
 972:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 973:Drivers/CMSIS/Include/core_cm3.h **** 
 974:Drivers/CMSIS/Include/core_cm3.h **** 
 975:Drivers/CMSIS/Include/core_cm3.h **** /**
 976:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 977:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 978:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
ARM GAS  /tmp/ccyQU5qg.s 			page 51


 979:Drivers/CMSIS/Include/core_cm3.h ****   @{
 980:Drivers/CMSIS/Include/core_cm3.h ****  */
 981:Drivers/CMSIS/Include/core_cm3.h **** 
 982:Drivers/CMSIS/Include/core_cm3.h **** /**
 983:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 984:Drivers/CMSIS/Include/core_cm3.h ****  */
 985:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 986:Drivers/CMSIS/Include/core_cm3.h **** {
 987:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 988:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 989:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[2U];
 990:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 991:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[55U];
 992:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 993:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[131U];
 994:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 995:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 996:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 997:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[759U];
 998:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 999:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1000:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1001:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[1U];
1002:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1003:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1004:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1005:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[39U];
1006:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1007:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1008:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED7[8U];
1009:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1010:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1011:Drivers/CMSIS/Include/core_cm3.h **** } TPI_Type;
1012:Drivers/CMSIS/Include/core_cm3.h **** 
1013:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1014:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1015:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1016:Drivers/CMSIS/Include/core_cm3.h **** 
1017:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1018:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1019:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1020:Drivers/CMSIS/Include/core_cm3.h **** 
1021:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1022:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1023:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1024:Drivers/CMSIS/Include/core_cm3.h **** 
1025:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1026:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1027:Drivers/CMSIS/Include/core_cm3.h **** 
1028:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1029:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1030:Drivers/CMSIS/Include/core_cm3.h **** 
1031:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1032:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1033:Drivers/CMSIS/Include/core_cm3.h **** 
1034:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1035:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
ARM GAS  /tmp/ccyQU5qg.s 			page 52


1036:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1037:Drivers/CMSIS/Include/core_cm3.h **** 
1038:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1039:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1040:Drivers/CMSIS/Include/core_cm3.h **** 
1041:Drivers/CMSIS/Include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1042:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1043:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1044:Drivers/CMSIS/Include/core_cm3.h **** 
1045:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1046:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1047:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1048:Drivers/CMSIS/Include/core_cm3.h **** 
1049:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1050:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1051:Drivers/CMSIS/Include/core_cm3.h **** 
1052:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1053:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1054:Drivers/CMSIS/Include/core_cm3.h **** 
1055:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1056:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1057:Drivers/CMSIS/Include/core_cm3.h **** 
1058:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1059:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1060:Drivers/CMSIS/Include/core_cm3.h **** 
1061:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1062:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1063:Drivers/CMSIS/Include/core_cm3.h **** 
1064:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1065:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1066:Drivers/CMSIS/Include/core_cm3.h **** 
1067:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1068:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1069:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1070:Drivers/CMSIS/Include/core_cm3.h **** 
1071:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1072:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1073:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1074:Drivers/CMSIS/Include/core_cm3.h **** 
1075:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1076:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1077:Drivers/CMSIS/Include/core_cm3.h **** 
1078:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1079:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1080:Drivers/CMSIS/Include/core_cm3.h **** 
1081:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1082:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1083:Drivers/CMSIS/Include/core_cm3.h **** 
1084:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1085:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1086:Drivers/CMSIS/Include/core_cm3.h **** 
1087:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1088:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1089:Drivers/CMSIS/Include/core_cm3.h **** 
1090:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1091:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1092:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccyQU5qg.s 			page 53


1093:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1094:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1095:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1096:Drivers/CMSIS/Include/core_cm3.h **** 
1097:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1098:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1099:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1100:Drivers/CMSIS/Include/core_cm3.h **** 
1101:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVID Register Definitions */
1102:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1103:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1104:Drivers/CMSIS/Include/core_cm3.h **** 
1105:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1106:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1107:Drivers/CMSIS/Include/core_cm3.h **** 
1108:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1109:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1110:Drivers/CMSIS/Include/core_cm3.h **** 
1111:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1112:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1113:Drivers/CMSIS/Include/core_cm3.h **** 
1114:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1115:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1116:Drivers/CMSIS/Include/core_cm3.h **** 
1117:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1118:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1119:Drivers/CMSIS/Include/core_cm3.h **** 
1120:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1121:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1122:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1123:Drivers/CMSIS/Include/core_cm3.h **** 
1124:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1125:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1126:Drivers/CMSIS/Include/core_cm3.h **** 
1127:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1128:Drivers/CMSIS/Include/core_cm3.h **** 
1129:Drivers/CMSIS/Include/core_cm3.h **** 
1130:Drivers/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1131:Drivers/CMSIS/Include/core_cm3.h **** /**
1132:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1133:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1134:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1135:Drivers/CMSIS/Include/core_cm3.h ****   @{
1136:Drivers/CMSIS/Include/core_cm3.h ****  */
1137:Drivers/CMSIS/Include/core_cm3.h **** 
1138:Drivers/CMSIS/Include/core_cm3.h **** /**
1139:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1140:Drivers/CMSIS/Include/core_cm3.h ****  */
1141:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1142:Drivers/CMSIS/Include/core_cm3.h **** {
1143:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1144:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1145:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1146:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1147:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1148:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1149:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
ARM GAS  /tmp/ccyQU5qg.s 			page 54


1150:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1151:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1152:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1153:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1154:Drivers/CMSIS/Include/core_cm3.h **** } MPU_Type;
1155:Drivers/CMSIS/Include/core_cm3.h **** 
1156:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Type Register Definitions */
1157:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1158:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1159:Drivers/CMSIS/Include/core_cm3.h **** 
1160:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1161:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1162:Drivers/CMSIS/Include/core_cm3.h **** 
1163:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1164:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1165:Drivers/CMSIS/Include/core_cm3.h **** 
1166:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Control Register Definitions */
1167:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1168:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1169:Drivers/CMSIS/Include/core_cm3.h **** 
1170:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1171:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1172:Drivers/CMSIS/Include/core_cm3.h **** 
1173:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1174:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1175:Drivers/CMSIS/Include/core_cm3.h **** 
1176:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Number Register Definitions */
1177:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1178:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1179:Drivers/CMSIS/Include/core_cm3.h **** 
1180:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1181:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1182:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1183:Drivers/CMSIS/Include/core_cm3.h **** 
1184:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1185:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1186:Drivers/CMSIS/Include/core_cm3.h **** 
1187:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1188:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1189:Drivers/CMSIS/Include/core_cm3.h **** 
1190:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1191:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1192:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1193:Drivers/CMSIS/Include/core_cm3.h **** 
1194:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1195:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1196:Drivers/CMSIS/Include/core_cm3.h **** 
1197:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1198:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1199:Drivers/CMSIS/Include/core_cm3.h **** 
1200:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1201:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1202:Drivers/CMSIS/Include/core_cm3.h **** 
1203:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1204:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1205:Drivers/CMSIS/Include/core_cm3.h **** 
1206:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
ARM GAS  /tmp/ccyQU5qg.s 			page 55


1207:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1208:Drivers/CMSIS/Include/core_cm3.h **** 
1209:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1210:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1211:Drivers/CMSIS/Include/core_cm3.h **** 
1212:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1213:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1214:Drivers/CMSIS/Include/core_cm3.h **** 
1215:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1216:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1217:Drivers/CMSIS/Include/core_cm3.h **** 
1218:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1219:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm3.h **** 
1221:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1222:Drivers/CMSIS/Include/core_cm3.h **** #endif
1223:Drivers/CMSIS/Include/core_cm3.h **** 
1224:Drivers/CMSIS/Include/core_cm3.h **** 
1225:Drivers/CMSIS/Include/core_cm3.h **** /**
1226:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1227:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1228:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1229:Drivers/CMSIS/Include/core_cm3.h ****   @{
1230:Drivers/CMSIS/Include/core_cm3.h ****  */
1231:Drivers/CMSIS/Include/core_cm3.h **** 
1232:Drivers/CMSIS/Include/core_cm3.h **** /**
1233:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1234:Drivers/CMSIS/Include/core_cm3.h ****  */
1235:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1236:Drivers/CMSIS/Include/core_cm3.h **** {
1237:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1238:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1239:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1240:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1241:Drivers/CMSIS/Include/core_cm3.h **** } CoreDebug_Type;
1242:Drivers/CMSIS/Include/core_cm3.h **** 
1243:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1244:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1245:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1246:Drivers/CMSIS/Include/core_cm3.h **** 
1247:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1248:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1249:Drivers/CMSIS/Include/core_cm3.h **** 
1250:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1251:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1252:Drivers/CMSIS/Include/core_cm3.h **** 
1253:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1254:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1255:Drivers/CMSIS/Include/core_cm3.h **** 
1256:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1257:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1258:Drivers/CMSIS/Include/core_cm3.h **** 
1259:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1260:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1261:Drivers/CMSIS/Include/core_cm3.h **** 
1262:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1263:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
ARM GAS  /tmp/ccyQU5qg.s 			page 56


1264:Drivers/CMSIS/Include/core_cm3.h **** 
1265:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1266:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1267:Drivers/CMSIS/Include/core_cm3.h **** 
1268:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1269:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1270:Drivers/CMSIS/Include/core_cm3.h **** 
1271:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1272:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1273:Drivers/CMSIS/Include/core_cm3.h **** 
1274:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1275:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1276:Drivers/CMSIS/Include/core_cm3.h **** 
1277:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1278:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1279:Drivers/CMSIS/Include/core_cm3.h **** 
1280:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1281:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1282:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1283:Drivers/CMSIS/Include/core_cm3.h **** 
1284:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1285:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1286:Drivers/CMSIS/Include/core_cm3.h **** 
1287:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1288:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1289:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1290:Drivers/CMSIS/Include/core_cm3.h **** 
1291:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1292:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1293:Drivers/CMSIS/Include/core_cm3.h **** 
1294:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1295:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1296:Drivers/CMSIS/Include/core_cm3.h **** 
1297:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1298:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1299:Drivers/CMSIS/Include/core_cm3.h **** 
1300:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1301:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1302:Drivers/CMSIS/Include/core_cm3.h **** 
1303:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1304:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1305:Drivers/CMSIS/Include/core_cm3.h **** 
1306:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1307:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1308:Drivers/CMSIS/Include/core_cm3.h **** 
1309:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1310:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1311:Drivers/CMSIS/Include/core_cm3.h **** 
1312:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1313:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1314:Drivers/CMSIS/Include/core_cm3.h **** 
1315:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1316:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1317:Drivers/CMSIS/Include/core_cm3.h **** 
1318:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1319:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1320:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccyQU5qg.s 			page 57


1321:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1322:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1323:Drivers/CMSIS/Include/core_cm3.h **** 
1324:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1325:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1326:Drivers/CMSIS/Include/core_cm3.h **** 
1327:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1328:Drivers/CMSIS/Include/core_cm3.h **** 
1329:Drivers/CMSIS/Include/core_cm3.h **** 
1330:Drivers/CMSIS/Include/core_cm3.h **** /**
1331:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1332:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1333:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1334:Drivers/CMSIS/Include/core_cm3.h ****   @{
1335:Drivers/CMSIS/Include/core_cm3.h ****  */
1336:Drivers/CMSIS/Include/core_cm3.h **** 
1337:Drivers/CMSIS/Include/core_cm3.h **** /**
1338:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1339:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1340:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of the bit field.
1341:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted value.
1342:Drivers/CMSIS/Include/core_cm3.h **** */
1343:Drivers/CMSIS/Include/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1344:Drivers/CMSIS/Include/core_cm3.h **** 
1345:Drivers/CMSIS/Include/core_cm3.h **** /**
1346:Drivers/CMSIS/Include/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1347:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of register.
1349:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted bit field value.
1350:Drivers/CMSIS/Include/core_cm3.h **** */
1351:Drivers/CMSIS/Include/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1352:Drivers/CMSIS/Include/core_cm3.h **** 
1353:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1354:Drivers/CMSIS/Include/core_cm3.h **** 
1355:Drivers/CMSIS/Include/core_cm3.h **** 
1356:Drivers/CMSIS/Include/core_cm3.h **** /**
1357:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1358:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1359:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1360:Drivers/CMSIS/Include/core_cm3.h ****   @{
1361:Drivers/CMSIS/Include/core_cm3.h ****  */
1362:Drivers/CMSIS/Include/core_cm3.h **** 
1363:Drivers/CMSIS/Include/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1364:Drivers/CMSIS/Include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1365:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1366:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1367:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1368:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1369:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1370:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1371:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1372:Drivers/CMSIS/Include/core_cm3.h **** 
1373:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1374:Drivers/CMSIS/Include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1375:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1376:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1377:Drivers/CMSIS/Include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
ARM GAS  /tmp/ccyQU5qg.s 			page 58


1378:Drivers/CMSIS/Include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1379:Drivers/CMSIS/Include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1380:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1381:Drivers/CMSIS/Include/core_cm3.h **** 
1382:Drivers/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1383:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1384:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1385:Drivers/CMSIS/Include/core_cm3.h **** #endif
1386:Drivers/CMSIS/Include/core_cm3.h **** 
1387:Drivers/CMSIS/Include/core_cm3.h **** /*@} */
1388:Drivers/CMSIS/Include/core_cm3.h **** 
1389:Drivers/CMSIS/Include/core_cm3.h **** 
1390:Drivers/CMSIS/Include/core_cm3.h **** 
1391:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
1392:Drivers/CMSIS/Include/core_cm3.h ****  *                Hardware Abstraction Layer
1393:Drivers/CMSIS/Include/core_cm3.h ****   Core Function Interface contains:
1394:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Functions
1395:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Functions
1396:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Functions
1397:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register Access Functions
1398:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
1399:Drivers/CMSIS/Include/core_cm3.h **** /**
1400:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1401:Drivers/CMSIS/Include/core_cm3.h **** */
1402:Drivers/CMSIS/Include/core_cm3.h **** 
1403:Drivers/CMSIS/Include/core_cm3.h **** 
1404:Drivers/CMSIS/Include/core_cm3.h **** 
1405:Drivers/CMSIS/Include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1406:Drivers/CMSIS/Include/core_cm3.h **** /**
1407:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1408:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1409:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1410:Drivers/CMSIS/Include/core_cm3.h ****   @{
1411:Drivers/CMSIS/Include/core_cm3.h ****  */
1412:Drivers/CMSIS/Include/core_cm3.h **** 
1413:Drivers/CMSIS/Include/core_cm3.h **** /**
1414:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Priority Grouping
1415:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1416:Drivers/CMSIS/Include/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1417:Drivers/CMSIS/Include/core_cm3.h ****            Only values from 0..7 are used.
1418:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1419:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1420:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1421:Drivers/CMSIS/Include/core_cm3.h ****  */
1422:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1423:Drivers/CMSIS/Include/core_cm3.h **** {
1424:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t reg_value;
1425:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1426:Drivers/CMSIS/Include/core_cm3.h **** 
1427:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1428:Drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1429:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
1430:Drivers/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1431:Drivers/CMSIS/Include/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1432:Drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR =  reg_value;
1433:Drivers/CMSIS/Include/core_cm3.h **** }
1434:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccyQU5qg.s 			page 59


1435:Drivers/CMSIS/Include/core_cm3.h **** 
1436:Drivers/CMSIS/Include/core_cm3.h **** /**
1437:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Priority Grouping
1438:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1439:Drivers/CMSIS/Include/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1440:Drivers/CMSIS/Include/core_cm3.h ****  */
1441:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1442:Drivers/CMSIS/Include/core_cm3.h **** {
1443:Drivers/CMSIS/Include/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1444:Drivers/CMSIS/Include/core_cm3.h **** }
1445:Drivers/CMSIS/Include/core_cm3.h **** 
1446:Drivers/CMSIS/Include/core_cm3.h **** 
1447:Drivers/CMSIS/Include/core_cm3.h **** /**
1448:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Enable External Interrupt
1449:Drivers/CMSIS/Include/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1450:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1451:Drivers/CMSIS/Include/core_cm3.h ****  */
1452:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1453:Drivers/CMSIS/Include/core_cm3.h **** {
1454:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1455:Drivers/CMSIS/Include/core_cm3.h **** }
1456:Drivers/CMSIS/Include/core_cm3.h **** 
1457:Drivers/CMSIS/Include/core_cm3.h **** 
1458:Drivers/CMSIS/Include/core_cm3.h **** /**
1459:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Disable External Interrupt
1460:Drivers/CMSIS/Include/core_cm3.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1461:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1462:Drivers/CMSIS/Include/core_cm3.h ****  */
1463:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1464:Drivers/CMSIS/Include/core_cm3.h **** {
1465:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1466:Drivers/CMSIS/Include/core_cm3.h **** }
1467:Drivers/CMSIS/Include/core_cm3.h **** 
1468:Drivers/CMSIS/Include/core_cm3.h **** 
1469:Drivers/CMSIS/Include/core_cm3.h **** /**
1470:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Pending Interrupt
1471:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1472:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1473:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not pending.
1474:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is pending.
1475:Drivers/CMSIS/Include/core_cm3.h ****  */
1476:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1477:Drivers/CMSIS/Include/core_cm3.h **** {
1478:Drivers/CMSIS/Include/core_cm3.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1479:Drivers/CMSIS/Include/core_cm3.h **** }
1480:Drivers/CMSIS/Include/core_cm3.h **** 
1481:Drivers/CMSIS/Include/core_cm3.h **** 
1482:Drivers/CMSIS/Include/core_cm3.h **** /**
1483:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Pending Interrupt
1484:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the pending bit of an external interrupt.
1485:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1486:Drivers/CMSIS/Include/core_cm3.h ****  */
1487:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1488:Drivers/CMSIS/Include/core_cm3.h **** {
1489:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1490:Drivers/CMSIS/Include/core_cm3.h **** }
1491:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccyQU5qg.s 			page 60


1492:Drivers/CMSIS/Include/core_cm3.h **** 
1493:Drivers/CMSIS/Include/core_cm3.h **** /**
1494:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Clear Pending Interrupt
1495:Drivers/CMSIS/Include/core_cm3.h ****   \details Clears the pending bit of an external interrupt.
1496:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1497:Drivers/CMSIS/Include/core_cm3.h ****  */
1498:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1499:Drivers/CMSIS/Include/core_cm3.h **** {
1500:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1501:Drivers/CMSIS/Include/core_cm3.h **** }
1502:Drivers/CMSIS/Include/core_cm3.h **** 
1503:Drivers/CMSIS/Include/core_cm3.h **** 
1504:Drivers/CMSIS/Include/core_cm3.h **** /**
1505:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Active Interrupt
1506:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the active register in NVIC and returns the active bit.
1507:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1508:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not active.
1509:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is active.
1510:Drivers/CMSIS/Include/core_cm3.h ****  */
1511:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1512:Drivers/CMSIS/Include/core_cm3.h **** {
1513:Drivers/CMSIS/Include/core_cm3.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1514:Drivers/CMSIS/Include/core_cm3.h **** }
1515:Drivers/CMSIS/Include/core_cm3.h **** 
1516:Drivers/CMSIS/Include/core_cm3.h **** 
1517:Drivers/CMSIS/Include/core_cm3.h **** /**
1518:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Interrupt Priority
1519:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority of an interrupt.
1520:Drivers/CMSIS/Include/core_cm3.h ****   \note    The priority cannot be set for every core interrupt.
1521:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1522:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]  priority  Priority to set.
1523:Drivers/CMSIS/Include/core_cm3.h ****  */
1524:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1525:Drivers/CMSIS/Include/core_cm3.h **** {
1526:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1527:Drivers/CMSIS/Include/core_cm3.h ****   {
1528:Drivers/CMSIS/Include/core_cm3.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1529:Drivers/CMSIS/Include/core_cm3.h ****   }
1530:Drivers/CMSIS/Include/core_cm3.h ****   else
1531:Drivers/CMSIS/Include/core_cm3.h ****   {
1532:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1533:Drivers/CMSIS/Include/core_cm3.h ****   }
1534:Drivers/CMSIS/Include/core_cm3.h **** }
1535:Drivers/CMSIS/Include/core_cm3.h **** 
1536:Drivers/CMSIS/Include/core_cm3.h **** 
1537:Drivers/CMSIS/Include/core_cm3.h **** /**
1538:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Priority
1539:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority of an interrupt.
1540:Drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1541:Drivers/CMSIS/Include/core_cm3.h ****            or negative to specify an internal (core) interrupt.
1542:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   IRQn  Interrupt number.
1543:Drivers/CMSIS/Include/core_cm3.h ****   \return             Interrupt Priority.
1544:Drivers/CMSIS/Include/core_cm3.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1545:Drivers/CMSIS/Include/core_cm3.h ****  */
1546:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1547:Drivers/CMSIS/Include/core_cm3.h **** {
1548:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/ccyQU5qg.s 			page 61


1549:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1550:Drivers/CMSIS/Include/core_cm3.h ****   {
1551:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1552:Drivers/CMSIS/Include/core_cm3.h ****   }
1553:Drivers/CMSIS/Include/core_cm3.h ****   else
1554:Drivers/CMSIS/Include/core_cm3.h ****   {
1555:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1556:Drivers/CMSIS/Include/core_cm3.h ****   }
1557:Drivers/CMSIS/Include/core_cm3.h **** }
1558:Drivers/CMSIS/Include/core_cm3.h **** 
1559:Drivers/CMSIS/Include/core_cm3.h **** 
1560:Drivers/CMSIS/Include/core_cm3.h **** /**
1561:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Encode Priority
1562:Drivers/CMSIS/Include/core_cm3.h ****   \details Encodes the priority for an interrupt with the given priority group,
1563:Drivers/CMSIS/Include/core_cm3.h ****            preemptive priority value, and subpriority value.
1564:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1565:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1566:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1567:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1568:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1569:Drivers/CMSIS/Include/core_cm3.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1570:Drivers/CMSIS/Include/core_cm3.h ****  */
1571:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1572:Drivers/CMSIS/Include/core_cm3.h **** {
1573:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1574:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1575:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1576:Drivers/CMSIS/Include/core_cm3.h **** 
1577:Drivers/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1578:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1579:Drivers/CMSIS/Include/core_cm3.h **** 
1580:Drivers/CMSIS/Include/core_cm3.h ****   return (
1581:Drivers/CMSIS/Include/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1582:Drivers/CMSIS/Include/core_cm3.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1583:Drivers/CMSIS/Include/core_cm3.h ****          );
1584:Drivers/CMSIS/Include/core_cm3.h **** }
1585:Drivers/CMSIS/Include/core_cm3.h **** 
1586:Drivers/CMSIS/Include/core_cm3.h **** 
1587:Drivers/CMSIS/Include/core_cm3.h **** /**
1588:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Decode Priority
1589:Drivers/CMSIS/Include/core_cm3.h ****   \details Decodes an interrupt priority value with a given priority group to
1590:Drivers/CMSIS/Include/core_cm3.h ****            preemptive priority value and subpriority value.
1591:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1592:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1593:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1594:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1595:Drivers/CMSIS/Include/core_cm3.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1596:Drivers/CMSIS/Include/core_cm3.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1597:Drivers/CMSIS/Include/core_cm3.h ****  */
1598:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1599:Drivers/CMSIS/Include/core_cm3.h **** {
1600:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1601:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1602:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1603:Drivers/CMSIS/Include/core_cm3.h **** 
1604:Drivers/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1605:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
ARM GAS  /tmp/ccyQU5qg.s 			page 62


1606:Drivers/CMSIS/Include/core_cm3.h **** 
1607:Drivers/CMSIS/Include/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1608:Drivers/CMSIS/Include/core_cm3.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1609:Drivers/CMSIS/Include/core_cm3.h **** }
1610:Drivers/CMSIS/Include/core_cm3.h **** 
1611:Drivers/CMSIS/Include/core_cm3.h **** 
1612:Drivers/CMSIS/Include/core_cm3.h **** /**
1613:Drivers/CMSIS/Include/core_cm3.h ****   \brief   System Reset
1614:Drivers/CMSIS/Include/core_cm3.h ****   \details Initiates a system reset request to reset the MCU.
1615:Drivers/CMSIS/Include/core_cm3.h ****  */
1616:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1617:Drivers/CMSIS/Include/core_cm3.h **** {
1618:Drivers/CMSIS/Include/core_cm3.h ****   __DSB();                                                          /* Ensure all outstanding memor
1619:Drivers/CMSIS/Include/core_cm3.h ****                                                                        buffered write are completed
1620:Drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1621:Drivers/CMSIS/Include/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1622:Drivers/CMSIS/Include/core_cm3.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1623:Drivers/CMSIS/Include/core_cm3.h ****   __DSB();                                                          /* Ensure completion of memory 
1624:Drivers/CMSIS/Include/core_cm3.h **** 
1625:Drivers/CMSIS/Include/core_cm3.h ****   for(;;)                                                           /* wait until reset */
1626:Drivers/CMSIS/Include/core_cm3.h ****   {
1627:Drivers/CMSIS/Include/core_cm3.h ****     __NOP();
1628:Drivers/CMSIS/Include/core_cm3.h ****   }
1629:Drivers/CMSIS/Include/core_cm3.h **** }
1630:Drivers/CMSIS/Include/core_cm3.h **** 
1631:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of CMSIS_Core_NVICFunctions */
1632:Drivers/CMSIS/Include/core_cm3.h **** 
1633:Drivers/CMSIS/Include/core_cm3.h **** 
1634:Drivers/CMSIS/Include/core_cm3.h **** 
1635:Drivers/CMSIS/Include/core_cm3.h **** /* ##################################    SysTick function  ########################################
1636:Drivers/CMSIS/Include/core_cm3.h **** /**
1637:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1638:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1639:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that configure the System.
1640:Drivers/CMSIS/Include/core_cm3.h ****   @{
1641:Drivers/CMSIS/Include/core_cm3.h ****  */
1642:Drivers/CMSIS/Include/core_cm3.h **** 
1643:Drivers/CMSIS/Include/core_cm3.h **** #if (__Vendor_SysTickConfig == 0U)
1644:Drivers/CMSIS/Include/core_cm3.h **** 
1645:Drivers/CMSIS/Include/core_cm3.h **** /**
1646:Drivers/CMSIS/Include/core_cm3.h ****   \brief   System Tick Configuration
1647:Drivers/CMSIS/Include/core_cm3.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1648:Drivers/CMSIS/Include/core_cm3.h ****            Counter is in free running mode to generate periodic interrupts.
1649:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1650:Drivers/CMSIS/Include/core_cm3.h ****   \return          0  Function succeeded.
1651:Drivers/CMSIS/Include/core_cm3.h ****   \return          1  Function failed.
1652:Drivers/CMSIS/Include/core_cm3.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1653:Drivers/CMSIS/Include/core_cm3.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1654:Drivers/CMSIS/Include/core_cm3.h ****            must contain a vendor-specific implementation of this function.
1655:Drivers/CMSIS/Include/core_cm3.h ****  */
1656:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1657:Drivers/CMSIS/Include/core_cm3.h **** {
1658:Drivers/CMSIS/Include/core_cm3.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 1043              		.loc 2 1658 0
 1044 0022 013B     		subs	r3, r3, #1
 1045              	.LVL80:
 1046 0024 B3F1807F 		cmp	r3, #16777216
ARM GAS  /tmp/ccyQU5qg.s 			page 63


 1047 0028 09D2     		bcs	.L56
1659:Drivers/CMSIS/Include/core_cm3.h ****   {
1660:Drivers/CMSIS/Include/core_cm3.h ****     return (1UL);                                                   /* Reload value impossible */
1661:Drivers/CMSIS/Include/core_cm3.h ****   }
1662:Drivers/CMSIS/Include/core_cm3.h **** 
1663:Drivers/CMSIS/Include/core_cm3.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 1048              		.loc 2 1663 0
 1049 002a 5C4A     		ldr	r2, .L80+24
 1050 002c 5360     		str	r3, [r2, #4]
 1051              	.LVL81:
 1052              	.LBB15:
 1053              	.LBB16:
1528:Drivers/CMSIS/Include/core_cm3.h ****   }
 1054              		.loc 2 1528 0
 1055 002e F021     		movs	r1, #240
 1056 0030 5B4B     		ldr	r3, .L80+28
 1057              	.LVL82:
 1058 0032 83F82310 		strb	r1, [r3, #35]
 1059              	.LVL83:
 1060              	.LBE16:
 1061              	.LBE15:
1664:Drivers/CMSIS/Include/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
1665:Drivers/CMSIS/Include/core_cm3.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 1062              		.loc 2 1665 0
 1063 0036 0023     		movs	r3, #0
 1064 0038 9360     		str	r3, [r2, #8]
1666:Drivers/CMSIS/Include/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 1065              		.loc 2 1666 0
 1066 003a 0723     		movs	r3, #7
 1067 003c 1360     		str	r3, [r2]
 1068              	.L56:
 1069              	.LBE14:
 1070              	.LBE13:
 172:Src/main.c    **** 
 1071              		.loc 1 172 0
 1072 003e FFF7FEFF 		bl	SystemClock_Config
 1073              	.LVL84:
 179:Src/main.c    ****   MX_SPI1_Init();
 1074              		.loc 1 179 0
 1075 0042 FFF7FEFF 		bl	MX_GPIO_Init
 1076              	.LVL85:
 180:Src/main.c    ****   MX_ADC1_Init();
 1077              		.loc 1 180 0
 1078 0046 FFF7FEFF 		bl	MX_SPI1_Init
 1079              	.LVL86:
 181:Src/main.c    ****   MX_CAN_Init();
 1080              		.loc 1 181 0
 1081 004a FFF7FEFF 		bl	MX_ADC1_Init
 1082              	.LVL87:
 182:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1083              		.loc 1 182 0
 1084 004e FFF7FEFF 		bl	MX_CAN_Init
 1085              	.LVL88:
 1086 0052 76E0     		b	.L72
 1087              	.L76:
 219:Src/main.c    **** 
 1088              		.loc 1 219 0
ARM GAS  /tmp/ccyQU5qg.s 			page 64


 1089 0054 FFF7FEFF 		bl	updateADC
 1090              	.LVL89:
 222:Src/main.c    **** 
 1091              		.loc 1 222 0
 1092 0058 524B     		ldr	r3, .L80+32
 1093 005a 1B88     		ldrh	r3, [r3]
 1094 005c 4F2B     		cmp	r3, #79
 1095 005e 41DD     		ble	.L62
 225:Src/main.c    **** 
 1096              		.loc 1 225 0
 1097 0060 4A4A     		ldr	r2, .L80+8
 1098 0062 4B4B     		ldr	r3, .L80+12
 1099 0064 1A60     		str	r2, [r3]
 228:Src/main.c    **** 					  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET);
 1100              		.loc 1 228 0
 1101 0066 04E0     		b	.L63
 1102              	.L64:
 229:Src/main.c    **** 					}
 1103              		.loc 1 229 0
 1104 0068 0122     		movs	r2, #1
 1105 006a 0821     		movs	r1, #8
 1106 006c 4E48     		ldr	r0, .L80+36
 1107 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1108              	.LVL90:
 1109              	.L63:
 228:Src/main.c    **** 					  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET);
 1110              		.loc 1 228 0
 1111 0072 474B     		ldr	r3, .L80+12
 1112 0074 1B68     		ldr	r3, [r3]
 1113 0076 002B     		cmp	r3, #0
 1114 0078 F6D1     		bne	.L64
 232:Src/main.c    ****           //reset 3 second timer
 1115              		.loc 1 232 0
 1116 007a 4B4C     		ldr	r4, .L80+36
 1117 007c 0022     		movs	r2, #0
 1118 007e 0821     		movs	r1, #8
 1119 0080 2046     		mov	r0, r4
 1120 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1121              	.LVL91:
 234:Src/main.c    **** 
 1122              		.loc 1 234 0
 1123 0086 414A     		ldr	r2, .L80+8
 1124 0088 414B     		ldr	r3, .L80+12
 1125 008a 1A60     		str	r2, [r3]
 237:Src/main.c    **** 
 1126              		.loc 1 237 0
 1127 008c 0122     		movs	r2, #1
 1128 008e 2021     		movs	r1, #32
 1129 0090 2046     		mov	r0, r4
 1130 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1131              	.LVL92:
 239:Src/main.c    **** 
 1132              		.loc 1 239 0
 1133 0096 0122     		movs	r2, #1
 1134 0098 444B     		ldr	r3, .L80+40
 1135 009a 1A60     		str	r2, [r3]
 1136 009c 22E0     		b	.L62
ARM GAS  /tmp/ccyQU5qg.s 			page 65


 1137              	.L77:
 247:Src/main.c    ****                 driving = 0;
 1138              		.loc 1 247 0
 1139 009e 0122     		movs	r2, #1
 1140 00a0 434B     		ldr	r3, .L80+44
 1141 00a2 1A60     		str	r2, [r3]
 248:Src/main.c    ****               }
 1142              		.loc 1 248 0
 1143 00a4 0022     		movs	r2, #0
 1144 00a6 414B     		ldr	r3, .L80+40
 1145 00a8 1A60     		str	r2, [r3]
 1146 00aa 21E0     		b	.L65
 1147              	.L78:
 254:Src/main.c    ****                 driving = 0;
 1148              		.loc 1 254 0
 1149 00ac 0122     		movs	r2, #1
 1150 00ae 404B     		ldr	r3, .L80+44
 1151 00b0 1A60     		str	r2, [r3]
 255:Src/main.c    ****               }
 1152              		.loc 1 255 0
 1153 00b2 0022     		movs	r2, #0
 1154 00b4 3D4B     		ldr	r3, .L80+40
 1155 00b6 1A60     		str	r2, [r3]
 1156 00b8 21E0     		b	.L66
 1157              	.L79:
 262:Src/main.c    ****                 driving = 0;
 1158              		.loc 1 262 0
 1159 00ba 0122     		movs	r2, #1
 1160 00bc 3C4B     		ldr	r3, .L80+44
 1161 00be 1A60     		str	r2, [r3]
 263:Src/main.c    ****               }
 1162              		.loc 1 263 0
 1163 00c0 0022     		movs	r2, #0
 1164 00c2 3A4B     		ldr	r3, .L80+40
 1165 00c4 1A60     		str	r2, [r3]
 1166 00c6 21E0     		b	.L67
 1167              	.L68:
 272:Src/main.c    ****                 //send CAN message
 1168              		.loc 1 272 0
 1169 00c8 FFF7FEFF 		bl	checkAPPS
 1170              	.LVL93:
 1171 00cc 30BB     		cbnz	r0, .L74
 1172              	.L69:
 213:Src/main.c    **** 
 1173              		.loc 1 213 0
 1174 00ce 4FF40041 		mov	r1, #32768
 1175 00d2 3548     		ldr	r0, .L80+36
 1176 00d4 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1177              	.LVL94:
 1178 00d8 0128     		cmp	r0, #1
 1179 00da 23D1     		bne	.L75
 216:Src/main.c    **** 
 1180              		.loc 1 216 0
 1181 00dc 334B     		ldr	r3, .L80+40
 1182 00de 1B68     		ldr	r3, [r3]
 1183 00e0 002B     		cmp	r3, #0
 1184 00e2 B7D0     		beq	.L76
ARM GAS  /tmp/ccyQU5qg.s 			page 66


 1185              	.L62:
 245:Src/main.c    ****                 //send CAN message
 1186              		.loc 1 245 0
 1187 00e4 0121     		movs	r1, #1
 1188 00e6 3348     		ldr	r0, .L80+48
 1189 00e8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1190              	.LVL95:
 1191 00ec 0128     		cmp	r0, #1
 1192 00ee D6D0     		beq	.L77
 1193              	.L65:
 252:Src/main.c    ****                 //send CAN message
 1194              		.loc 1 252 0
 1195 00f0 4FF48041 		mov	r1, #16384
 1196 00f4 3048     		ldr	r0, .L80+52
 1197 00f6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1198              	.LVL96:
 1199 00fa 0128     		cmp	r0, #1
 1200 00fc D6D0     		beq	.L78
 1201              	.L66:
 259:Src/main.c    ****                 //send CAN message
 1202              		.loc 1 259 0
 1203 00fe 4FF40041 		mov	r1, #32768
 1204 0102 2D48     		ldr	r0, .L80+52
 1205 0104 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1206              	.LVL97:
 1207 0108 0128     		cmp	r0, #1
 1208 010a D6D0     		beq	.L79
 1209              	.L67:
 266:Src/main.c    ****                 //send CAN message
 1210              		.loc 1 266 0
 1211 010c FFF7FEFF 		bl	checkBTSF
 1212              	.LVL98:
 1213 0110 0028     		cmp	r0, #0
 1214 0112 D9D0     		beq	.L68
 269:Src/main.c    **** 
 1215              		.loc 1 269 0
 1216 0114 0022     		movs	r2, #0
 1217 0116 254B     		ldr	r3, .L80+40
 1218 0118 1A60     		str	r2, [r3]
 1219 011a D5E7     		b	.L68
 1220              	.L74:
 275:Src/main.c    ****               }
 1221              		.loc 1 275 0
 1222 011c 0022     		movs	r2, #0
 1223 011e 234B     		ldr	r3, .L80+40
 1224 0120 1A60     		str	r2, [r3]
 1225 0122 D4E7     		b	.L69
 1226              	.L75:
 280:Src/main.c    ****           }//end BMS Fault
 1227              		.loc 1 280 0
 1228 0124 224B     		ldr	r3, .L80+44
 1229 0126 1B68     		ldr	r3, [r3]
 1230 0128 4BBB     		cbnz	r3, .L71
 1231              	.L60:
 282:Src/main.c    ****         }//end IMD Fault
 1232              		.loc 1 282 0
 1233 012a 214B     		ldr	r3, .L80+44
ARM GAS  /tmp/ccyQU5qg.s 			page 67


 1234 012c 1B68     		ldr	r3, [r3]
 1235 012e 33BB     		cbnz	r3, .L71
 1236              	.L59:
 284:Src/main.c    ****       }//end precharch check
 1237              		.loc 1 284 0
 1238 0130 1F4B     		ldr	r3, .L80+44
 1239 0132 1B68     		ldr	r3, [r3]
 1240 0134 1BBB     		cbnz	r3, .L71
 1241              	.L58:
 286:Src/main.c    ****     }//end initial BSPD
 1242              		.loc 1 286 0
 1243 0136 1E4B     		ldr	r3, .L80+44
 1244 0138 1B68     		ldr	r3, [r3]
 1245 013a 03BB     		cbnz	r3, .L71
 1246              	.L57:
 288:Src/main.c    **** 
 1247              		.loc 1 288 0
 1248 013c 1C4B     		ldr	r3, .L80+44
 1249 013e 1B68     		ldr	r3, [r3]
 1250 0140 EBB9     		cbnz	r3, .L71
 1251              	.L72:
 194:Src/main.c    ****     //Precharge complete
 1252              		.loc 1 194 0
 1253 0142 0121     		movs	r1, #1
 1254 0144 1B48     		ldr	r0, .L80+48
 1255 0146 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1256              	.LVL99:
 1257 014a 0128     		cmp	r0, #1
 1258 014c F6D1     		bne	.L57
 196:Src/main.c    ****       //IMD Fault
 1259              		.loc 1 196 0
 1260 014e 4021     		movs	r1, #64
 1261 0150 1548     		ldr	r0, .L80+36
 1262 0152 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1263              	.LVL100:
 1264 0156 0128     		cmp	r0, #1
 1265 0158 EDD1     		bne	.L58
 198:Src/main.c    ****         //BMS Fault
 1266              		.loc 1 198 0
 1267 015a 4FF48041 		mov	r1, #16384
 1268 015e 1648     		ldr	r0, .L80+52
 1269 0160 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1270              	.LVL101:
 1271 0164 0128     		cmp	r0, #1
 1272 0166 E3D1     		bne	.L59
 200:Src/main.c    **** 
 1273              		.loc 1 200 0
 1274 0168 4FF40041 		mov	r1, #32768
 1275 016c 1248     		ldr	r0, .L80+52
 1276 016e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1277              	.LVL102:
 1278 0172 0128     		cmp	r0, #1
 1279 0174 D9D1     		bne	.L60
 204:Src/main.c    ****             /* USER CODE END WHILE */
 1280              		.loc 1 204 0
 1281 0176 1148     		ldr	r0, .L80+56
 1282 0178 FFF7FEFF 		bl	HAL_ADC_Start_IT
ARM GAS  /tmp/ccyQU5qg.s 			page 68


 1283              	.LVL103:
 213:Src/main.c    **** 
 1284              		.loc 1 213 0
 1285 017c A7E7     		b	.L69
 1286              	.L71:
 295:Src/main.c    **** 
 1287              		.loc 1 295 0
 1288 017e 0020     		movs	r0, #0
 1289 0180 10BD     		pop	{r4, pc}
 1290              	.L81:
 1291 0182 00BF     		.align	2
 1292              	.L80:
 1293 0184 A0860100 		.word	100000
 1294 0188 00000000 		.word	millisTimer
 1295 018c C0C62D00 		.word	3000000
 1296 0190 00000000 		.word	secTimer
 1297 0194 00000000 		.word	SystemCoreClock
 1298 0198 83DE1B43 		.word	1125899907
 1299 019c 10E000E0 		.word	-536813552
 1300 01a0 00ED00E0 		.word	-536810240
 1301 01a4 00000000 		.word	brakePressure_1
 1302 01a8 000C0140 		.word	1073810432
 1303 01ac 00000000 		.word	.LANCHOR2
 1304 01b0 00000000 		.word	.LANCHOR3
 1305 01b4 00140140 		.word	1073812480
 1306 01b8 00100140 		.word	1073811456
 1307 01bc 00000000 		.word	hadc1
 1308              		.cfi_endproc
 1309              	.LFE64:
 1311              		.section	.text.sendFaultMsg,"ax",%progbits
 1312              		.align	1
 1313              		.global	sendFaultMsg
 1314              		.syntax unified
 1315              		.thumb
 1316              		.thumb_func
 1317              		.fpu softvfp
 1319              	sendFaultMsg:
 1320              	.LFB74:
 706:Src/main.c    **** 
 707:Src/main.c    **** /* USER CODE BEGIN 4 */
 708:Src/main.c    **** 
 709:Src/main.c    **** void sendFaultMsg(){
 1321              		.loc 1 709 0
 1322              		.cfi_startproc
 1323              		@ args = 0, pretend = 0, frame = 0
 1324              		@ frame_needed = 0, uses_anonymous_args = 0
 1325 0000 08B5     		push	{r3, lr}
 1326              	.LCFI16:
 1327              		.cfi_def_cfa_offset 8
 1328              		.cfi_offset 3, -8
 1329              		.cfi_offset 14, -4
 710:Src/main.c    **** 	TxHeader.StdId = FAULTS; // CAN FAULT ID
 1330              		.loc 1 710 0
 1331 0002 0A49     		ldr	r1, .L84
 1332 0004 D023     		movs	r3, #208
 1333 0006 0B60     		str	r3, [r1]
 711:Src/main.c    **** 	TxData[0] = bms;  //Set all the data (faults) to their current values
ARM GAS  /tmp/ccyQU5qg.s 			page 69


 1334              		.loc 1 711 0
 1335 0008 094A     		ldr	r2, .L84+4
 1336 000a 0A4B     		ldr	r3, .L84+8
 1337 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1338 000e 1370     		strb	r3, [r2]
 712:Src/main.c    **** 	TxData[1] = imd;
 1339              		.loc 1 712 0
 1340 0010 094B     		ldr	r3, .L84+12
 1341 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1342 0014 5370     		strb	r3, [r2, #1]
 713:Src/main.c    **** 	TxData[2] = bspd;
 1343              		.loc 1 713 0
 1344 0016 094B     		ldr	r3, .L84+16
 1345 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1346 001a 9370     		strb	r3, [r2, #2]
 714:Src/main.c    **** 	TxData[3] = apps;
 1347              		.loc 1 714 0
 1348 001c 084B     		ldr	r3, .L84+20
 1349 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1350 0020 D370     		strb	r3, [r2, #3]
 715:Src/main.c    **** 	HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 1351              		.loc 1 715 0
 1352 0022 084B     		ldr	r3, .L84+24
 1353 0024 0848     		ldr	r0, .L84+28
 1354 0026 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1355              	.LVL104:
 1356 002a 08BD     		pop	{r3, pc}
 1357              	.L85:
 1358              		.align	2
 1359              	.L84:
 1360 002c 00000000 		.word	TxHeader
 1361 0030 00000000 		.word	.LANCHOR0
 1362 0034 00000000 		.word	bms
 1363 0038 00000000 		.word	imd
 1364 003c 00000000 		.word	bspd
 1365 0040 00000000 		.word	apps
 1366 0044 00000000 		.word	TxMailbox
 1367 0048 00000000 		.word	hcan
 1368              		.cfi_endproc
 1369              	.LFE74:
 1371              		.section	.text.sendPrechargeMsg,"ax",%progbits
 1372              		.align	1
 1373              		.global	sendPrechargeMsg
 1374              		.syntax unified
 1375              		.thumb
 1376              		.thumb_func
 1377              		.fpu softvfp
 1379              	sendPrechargeMsg:
 1380              	.LFB75:
 716:Src/main.c    **** }
 717:Src/main.c    **** 
 718:Src/main.c    **** void sendPrechargeMsg(){
 1381              		.loc 1 718 0
 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 0
 1384              		@ frame_needed = 0, uses_anonymous_args = 0
 1385 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccyQU5qg.s 			page 70


 1386              	.LCFI17:
 1387              		.cfi_def_cfa_offset 8
 1388              		.cfi_offset 3, -8
 1389              		.cfi_offset 14, -4
 719:Src/main.c    **** 	TxHeader.StdId = PRECHARGE;
 1390              		.loc 1 719 0
 1391 0002 0649     		ldr	r1, .L88
 1392 0004 D123     		movs	r3, #209
 1393 0006 0B60     		str	r3, [r1]
 720:Src/main.c    **** 	TxData[0] = charged;
 1394              		.loc 1 720 0
 1395 0008 054A     		ldr	r2, .L88+4
 1396 000a 064B     		ldr	r3, .L88+8
 1397 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1398 000e 1370     		strb	r3, [r2]
 721:Src/main.c    **** 	HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 1399              		.loc 1 721 0
 1400 0010 054B     		ldr	r3, .L88+12
 1401 0012 0648     		ldr	r0, .L88+16
 1402 0014 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1403              	.LVL105:
 1404 0018 08BD     		pop	{r3, pc}
 1405              	.L89:
 1406 001a 00BF     		.align	2
 1407              	.L88:
 1408 001c 00000000 		.word	TxHeader
 1409 0020 00000000 		.word	.LANCHOR0
 1410 0024 00000000 		.word	charged
 1411 0028 00000000 		.word	TxMailbox
 1412 002c 00000000 		.word	hcan
 1413              		.cfi_endproc
 1414              	.LFE75:
 1416              		.section	.text.sendEnableMsg,"ax",%progbits
 1417              		.align	1
 1418              		.global	sendEnableMsg
 1419              		.syntax unified
 1420              		.thumb
 1421              		.thumb_func
 1422              		.fpu softvfp
 1424              	sendEnableMsg:
 1425              	.LFB76:
 722:Src/main.c    **** }
 723:Src/main.c    **** 
 724:Src/main.c    **** void sendEnableMsg(){
 1426              		.loc 1 724 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 0
 1429              		@ frame_needed = 0, uses_anonymous_args = 0
 1430 0000 08B5     		push	{r3, lr}
 1431              	.LCFI18:
 1432              		.cfi_def_cfa_offset 8
 1433              		.cfi_offset 3, -8
 1434              		.cfi_offset 14, -4
 725:Src/main.c    **** 	TxHeader.StdId = ENABLE;
 1435              		.loc 1 725 0
 1436 0002 0649     		ldr	r1, .L92
 1437 0004 D223     		movs	r3, #210
ARM GAS  /tmp/ccyQU5qg.s 			page 71


 1438 0006 0B60     		str	r3, [r1]
 726:Src/main.c    **** 	TxData[0] = enable;
 1439              		.loc 1 726 0
 1440 0008 054A     		ldr	r2, .L92+4
 1441 000a 064B     		ldr	r3, .L92+8
 1442 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1443 000e 1370     		strb	r3, [r2]
 727:Src/main.c    **** 	HAL_CAN_AddTxMessage(&hcan, &TxHeader, TxData, &TxMailbox);
 1444              		.loc 1 727 0
 1445 0010 054B     		ldr	r3, .L92+12
 1446 0012 0648     		ldr	r0, .L92+16
 1447 0014 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1448              	.LVL106:
 1449 0018 08BD     		pop	{r3, pc}
 1450              	.L93:
 1451 001a 00BF     		.align	2
 1452              	.L92:
 1453 001c 00000000 		.word	TxHeader
 1454 0020 00000000 		.word	.LANCHOR0
 1455 0024 00000000 		.word	enable
 1456 0028 00000000 		.word	TxMailbox
 1457 002c 00000000 		.word	hcan
 1458              		.cfi_endproc
 1459              	.LFE76:
 1461              		.section	.text.Error_Handler,"ax",%progbits
 1462              		.align	1
 1463              		.global	Error_Handler
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1467              		.fpu softvfp
 1469              	Error_Handler:
 1470              	.LFB77:
 728:Src/main.c    **** }
 729:Src/main.c    **** 
 730:Src/main.c    **** /* USER CODE END 4 */
 731:Src/main.c    **** 
 732:Src/main.c    **** /**
 733:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 734:Src/main.c    ****   * @retval None
 735:Src/main.c    ****   */
 736:Src/main.c    **** void Error_Handler(void)
 737:Src/main.c    **** {
 1471              		.loc 1 737 0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
 1475              		@ link register save eliminated.
 1476 0000 7047     		bx	lr
 1477              		.cfi_endproc
 1478              	.LFE77:
 1480              		.comm	TxMailbox,4,4
 1481              		.comm	RxData,8,4
 1482              		.comm	enable,1,1
 1483              		.comm	charged,1,1
 1484              		.comm	apps,1,1
 1485              		.comm	bspd,1,1
ARM GAS  /tmp/ccyQU5qg.s 			page 72


 1486              		.comm	imd,1,1
 1487              		.comm	bms,1,1
 1488              		.global	TxData
 1489              		.comm	TxHeader,24,4
 1490              		.global	hardFaultFlag
 1491              		.global	driving
 1492              		.global	max_throttle
 1493              		.comm	throttle_B,2,2
 1494              		.comm	throttle_A,2,2
 1495              		.comm	brakePressure_2,2,2
 1496              		.comm	brakePressure_1,2,2
 1497              		.comm	steeringPos,2,2
 1498              		.comm	brakePos,2,2
 1499              		.comm	hspi1,88,4
 1500              		.comm	hcan,40,4
 1501              		.comm	hadc1,48,4
 1502              		.global	brakeThreshold
 1503              		.global	throttleThreshold
 1504              		.comm	secTimer,4,4
 1505              		.comm	millisTimer,4,4
 1506              		.section	.bss.driving,"aw",%nobits
 1507              		.align	2
 1508              		.set	.LANCHOR2,. + 0
 1511              	driving:
 1512 0000 00000000 		.space	4
 1513              		.section	.bss.hardFaultFlag,"aw",%nobits
 1514              		.align	2
 1515              		.set	.LANCHOR3,. + 0
 1518              	hardFaultFlag:
 1519 0000 00000000 		.space	4
 1520              		.section	.data.TxData,"aw",%progbits
 1521              		.align	2
 1522              		.set	.LANCHOR0,. + 0
 1525              	TxData:
 1526 0000 55       		.byte	85
 1527 0001 55       		.byte	85
 1528 0002 55       		.byte	85
 1529 0003 55       		.byte	85
 1530 0004 55       		.byte	85
 1531 0005 55       		.byte	85
 1532 0006 55       		.byte	85
 1533 0007 55       		.byte	85
 1534              		.section	.data.max_throttle,"aw",%progbits
 1535              		.align	1
 1536              		.set	.LANCHOR1,. + 0
 1539              	max_throttle:
 1540 0000 0A00     		.short	10
 1541              		.section	.rodata.brakeThreshold,"a",%progbits
 1542              		.align	2
 1545              	brakeThreshold:
 1546 0000 50000000 		.word	80
 1547              		.section	.rodata.throttleThreshold,"a",%progbits
 1548              		.align	2
 1551              	throttleThreshold:
 1552 0000 50000000 		.word	80
 1553              		.text
 1554              	.Letext0:
ARM GAS  /tmp/ccyQU5qg.s 			page 73


 1555              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1556              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 1557              		.file 5 "/usr/include/newlib/sys/_stdint.h"
 1558              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1559              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1560              		.file 8 "/usr/include/newlib/sys/lock.h"
 1561              		.file 9 "/usr/include/newlib/sys/_types.h"
 1562              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1563              		.file 11 "/usr/include/newlib/sys/reent.h"
 1564              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1565              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1566              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1567              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1568              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1569              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 1570              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1571              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1572              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1573              		.file 21 "Inc/main.h"
ARM GAS  /tmp/ccyQU5qg.s 			page 74


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccyQU5qg.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccyQU5qg.s:22     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccyQU5qg.s:209    .text.MX_GPIO_Init:0000000000000110 $d
     /tmp/ccyQU5qg.s:219    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccyQU5qg.s:225    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccyQU5qg.s:273    .text.MX_SPI1_Init:0000000000000030 $d
                            *COM*:0000000000000058 hspi1
     /tmp/ccyQU5qg.s:279    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccyQU5qg.s:285    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccyQU5qg.s:427    .text.MX_ADC1_Init:00000000000000b4 $d
                            *COM*:0000000000000030 hadc1
     /tmp/ccyQU5qg.s:433    .text.MX_CAN_Init:0000000000000000 $t
     /tmp/ccyQU5qg.s:439    .text.MX_CAN_Init:0000000000000000 MX_CAN_Init
     /tmp/ccyQU5qg.s:506    .text.MX_CAN_Init:0000000000000048 $d
                            *COM*:0000000000000028 hcan
                            *COM*:0000000000000018 TxHeader
     /tmp/ccyQU5qg.s:513    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccyQU5qg.s:520    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccyQU5qg.s:600    .text.updateADC:0000000000000000 $t
     /tmp/ccyQU5qg.s:607    .text.updateADC:0000000000000000 updateADC
     /tmp/ccyQU5qg.s:697    .text.updateADC:000000000000008c $d
                            *COM*:0000000000000002 brakePos
                            *COM*:0000000000000002 steeringPos
                            *COM*:0000000000000002 brakePressure_1
                            *COM*:0000000000000002 brakePressure_2
                            *COM*:0000000000000002 throttle_A
                            *COM*:0000000000000002 throttle_B
     /tmp/ccyQU5qg.s:708    .text.checkBTSF:0000000000000000 $t
     /tmp/ccyQU5qg.s:715    .text.checkBTSF:0000000000000000 checkBTSF
     /tmp/ccyQU5qg.s:779    .text.checkBTSF:0000000000000048 $d
                            *COM*:0000000000000004 TxMailbox
     /tmp/ccyQU5qg.s:797    .text.APPS_Diff:0000000000000000 $t
     /tmp/ccyQU5qg.s:804    .text.APPS_Diff:0000000000000000 APPS_Diff
     /tmp/ccyQU5qg.s:924    .text.APPS_Diff:00000000000000a0 $d
     /tmp/ccyQU5qg.s:936    .text.checkAPPS:0000000000000000 $t
     /tmp/ccyQU5qg.s:943    .text.checkAPPS:0000000000000000 checkAPPS
     /tmp/ccyQU5qg.s:991    .text.checkAPPS:0000000000000034 $d
                            *COM*:0000000000000004 millisTimer
     /tmp/ccyQU5qg.s:1001   .text.main:0000000000000000 $t
     /tmp/ccyQU5qg.s:1008   .text.main:0000000000000000 main
     /tmp/ccyQU5qg.s:1293   .text.main:0000000000000184 $d
                            *COM*:0000000000000004 secTimer
     /tmp/ccyQU5qg.s:1312   .text.sendFaultMsg:0000000000000000 $t
     /tmp/ccyQU5qg.s:1319   .text.sendFaultMsg:0000000000000000 sendFaultMsg
     /tmp/ccyQU5qg.s:1360   .text.sendFaultMsg:000000000000002c $d
                            *COM*:0000000000000001 bms
                            *COM*:0000000000000001 imd
                            *COM*:0000000000000001 bspd
                            *COM*:0000000000000001 apps
     /tmp/ccyQU5qg.s:1372   .text.sendPrechargeMsg:0000000000000000 $t
     /tmp/ccyQU5qg.s:1379   .text.sendPrechargeMsg:0000000000000000 sendPrechargeMsg
     /tmp/ccyQU5qg.s:1408   .text.sendPrechargeMsg:000000000000001c $d
                            *COM*:0000000000000001 charged
     /tmp/ccyQU5qg.s:1417   .text.sendEnableMsg:0000000000000000 $t
     /tmp/ccyQU5qg.s:1424   .text.sendEnableMsg:0000000000000000 sendEnableMsg
ARM GAS  /tmp/ccyQU5qg.s 			page 75


     /tmp/ccyQU5qg.s:1453   .text.sendEnableMsg:000000000000001c $d
                            *COM*:0000000000000001 enable
     /tmp/ccyQU5qg.s:1462   .text.Error_Handler:0000000000000000 $t
     /tmp/ccyQU5qg.s:1469   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000008 RxData
     /tmp/ccyQU5qg.s:1525   .data.TxData:0000000000000000 TxData
     /tmp/ccyQU5qg.s:1518   .bss.hardFaultFlag:0000000000000000 hardFaultFlag
     /tmp/ccyQU5qg.s:1511   .bss.driving:0000000000000000 driving
     /tmp/ccyQU5qg.s:1539   .data.max_throttle:0000000000000000 max_throttle
     /tmp/ccyQU5qg.s:1545   .rodata.brakeThreshold:0000000000000000 brakeThreshold
     /tmp/ccyQU5qg.s:1551   .rodata.throttleThreshold:0000000000000000 throttleThreshold
     /tmp/ccyQU5qg.s:1507   .bss.driving:0000000000000000 $d
     /tmp/ccyQU5qg.s:1514   .bss.hardFaultFlag:0000000000000000 $d
     /tmp/ccyQU5qg.s:1521   .data.TxData:0000000000000000 $d
     /tmp/ccyQU5qg.s:1535   .data.max_throttle:0000000000000000 $d
     /tmp/ccyQU5qg.s:1542   .rodata.brakeThreshold:0000000000000000 $d
     /tmp/ccyQU5qg.s:1548   .rodata.throttleThreshold:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Start
HAL_CAN_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
HAL_CAN_AddTxMessage
__aeabi_ui2d
__aeabi_i2d
__aeabi_dmul
__aeabi_dsub
__aeabi_dcmplt
__aeabi_dadd
__aeabi_ddiv
__aeabi_dcmpge
HAL_Init
SystemCoreClockUpdate
HAL_GPIO_ReadPin
HAL_ADC_Start_IT
SystemCoreClock
