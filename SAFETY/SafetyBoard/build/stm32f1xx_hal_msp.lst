ARM GAS  /tmp/ccl7nY7m.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal_msp.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_MspInit,"ax",%progbits
  19              		.align	2
  20              		.global	HAL_MspInit
  21              		.thumb
  22              		.thumb_func
  24              	HAL_MspInit:
  25              	.LFB63:
  26              		.file 1 "Src/stm32f1xx_hal_msp.c"
   1:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_hal_msp.c **** /**
   3:Src/stm32f1xx_hal_msp.c ****   ******************************************************************************
   4:Src/stm32f1xx_hal_msp.c ****   * File Name          : stm32f1xx_hal_msp.c
   5:Src/stm32f1xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization 
   6:Src/stm32f1xx_hal_msp.c ****   *                      and de-Initialization codes.
   7:Src/stm32f1xx_hal_msp.c ****   ******************************************************************************
   8:Src/stm32f1xx_hal_msp.c ****   ** This notice applies to any and all portions of this file
   9:Src/stm32f1xx_hal_msp.c ****   * that are not between comment pairs USER CODE BEGIN and
  10:Src/stm32f1xx_hal_msp.c ****   * USER CODE END. Other portions of this file, whether 
  11:Src/stm32f1xx_hal_msp.c ****   * inserted by the user or by software development tools
  12:Src/stm32f1xx_hal_msp.c ****   * are owned by their respective copyright owners.
  13:Src/stm32f1xx_hal_msp.c ****   *
  14:Src/stm32f1xx_hal_msp.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
  15:Src/stm32f1xx_hal_msp.c ****   *
  16:Src/stm32f1xx_hal_msp.c ****   * Redistribution and use in source and binary forms, with or without modification,
  17:Src/stm32f1xx_hal_msp.c ****   * are permitted provided that the following conditions are met:
  18:Src/stm32f1xx_hal_msp.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  19:Src/stm32f1xx_hal_msp.c ****   *      this list of conditions and the following disclaimer.
  20:Src/stm32f1xx_hal_msp.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/stm32f1xx_hal_msp.c ****   *      this list of conditions and the following disclaimer in the documentation
  22:Src/stm32f1xx_hal_msp.c ****   *      and/or other materials provided with the distribution.
  23:Src/stm32f1xx_hal_msp.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  24:Src/stm32f1xx_hal_msp.c ****   *      may be used to endorse or promote products derived from this software
  25:Src/stm32f1xx_hal_msp.c ****   *      without specific prior written permission.
  26:Src/stm32f1xx_hal_msp.c ****   *
  27:Src/stm32f1xx_hal_msp.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  28:Src/stm32f1xx_hal_msp.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  29:Src/stm32f1xx_hal_msp.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  30:Src/stm32f1xx_hal_msp.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  31:Src/stm32f1xx_hal_msp.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  32:Src/stm32f1xx_hal_msp.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccl7nY7m.s 			page 2


  33:Src/stm32f1xx_hal_msp.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  34:Src/stm32f1xx_hal_msp.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  35:Src/stm32f1xx_hal_msp.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:Src/stm32f1xx_hal_msp.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:Src/stm32f1xx_hal_msp.c ****   *
  38:Src/stm32f1xx_hal_msp.c ****   ******************************************************************************
  39:Src/stm32f1xx_hal_msp.c ****   */
  40:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Header */
  41:Src/stm32f1xx_hal_msp.c **** 
  42:Src/stm32f1xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  43:Src/stm32f1xx_hal_msp.c **** #include "main.h"
  44:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  45:Src/stm32f1xx_hal_msp.c **** 
  46:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Includes */
  47:Src/stm32f1xx_hal_msp.c **** 
  48:Src/stm32f1xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  49:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN TD */
  50:Src/stm32f1xx_hal_msp.c **** 
  51:Src/stm32f1xx_hal_msp.c **** /* USER CODE END TD */
  52:Src/stm32f1xx_hal_msp.c **** 
  53:Src/stm32f1xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  54:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Define */
  55:Src/stm32f1xx_hal_msp.c ****  
  56:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Define */
  57:Src/stm32f1xx_hal_msp.c **** 
  58:Src/stm32f1xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  59:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  60:Src/stm32f1xx_hal_msp.c **** 
  61:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Macro */
  62:Src/stm32f1xx_hal_msp.c **** 
  63:Src/stm32f1xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  64:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN PV */
  65:Src/stm32f1xx_hal_msp.c **** 
  66:Src/stm32f1xx_hal_msp.c **** /* USER CODE END PV */
  67:Src/stm32f1xx_hal_msp.c **** 
  68:Src/stm32f1xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  69:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  70:Src/stm32f1xx_hal_msp.c **** 
  71:Src/stm32f1xx_hal_msp.c **** /* USER CODE END PFP */
  72:Src/stm32f1xx_hal_msp.c **** 
  73:Src/stm32f1xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  74:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  75:Src/stm32f1xx_hal_msp.c **** 
  76:Src/stm32f1xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  77:Src/stm32f1xx_hal_msp.c **** 
  78:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  79:Src/stm32f1xx_hal_msp.c **** 
  80:Src/stm32f1xx_hal_msp.c **** /* USER CODE END 0 */
  81:Src/stm32f1xx_hal_msp.c **** /**
  82:Src/stm32f1xx_hal_msp.c ****   * Initializes the Global MSP.
  83:Src/stm32f1xx_hal_msp.c ****   */
  84:Src/stm32f1xx_hal_msp.c **** void HAL_MspInit(void)
  85:Src/stm32f1xx_hal_msp.c **** {
  27              		.loc 1 85 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccl7nY7m.s 			page 3


  31              		@ link register save eliminated.
  32 0000 82B0     		sub	sp, sp, #8
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              	.LBB2:
  86:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  87:Src/stm32f1xx_hal_msp.c **** 
  88:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  89:Src/stm32f1xx_hal_msp.c **** 
  90:Src/stm32f1xx_hal_msp.c ****   __HAL_RCC_AFIO_CLK_ENABLE();
  36              		.loc 1 90 0
  37 0002 0E4B     		ldr	r3, .L3
  38 0004 9A69     		ldr	r2, [r3, #24]
  39 0006 42F00102 		orr	r2, r2, #1
  40 000a 9A61     		str	r2, [r3, #24]
  41 000c 9A69     		ldr	r2, [r3, #24]
  42 000e 02F00102 		and	r2, r2, #1
  43 0012 0092     		str	r2, [sp]
  44 0014 009A     		ldr	r2, [sp]
  45              	.LBE2:
  46              	.LBB3:
  91:Src/stm32f1xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  47              		.loc 1 91 0
  48 0016 DA69     		ldr	r2, [r3, #28]
  49 0018 42F08052 		orr	r2, r2, #268435456
  50 001c DA61     		str	r2, [r3, #28]
  51 001e DB69     		ldr	r3, [r3, #28]
  52 0020 03F08053 		and	r3, r3, #268435456
  53 0024 0193     		str	r3, [sp, #4]
  54 0026 019B     		ldr	r3, [sp, #4]
  55              	.LBE3:
  56              	.LBB4:
  92:Src/stm32f1xx_hal_msp.c **** 
  93:Src/stm32f1xx_hal_msp.c ****   /* System interrupt init*/
  94:Src/stm32f1xx_hal_msp.c **** 
  95:Src/stm32f1xx_hal_msp.c ****   /**DISABLE: JTAG-DP Disabled and SW-DP Disabled 
  96:Src/stm32f1xx_hal_msp.c ****   */
  97:Src/stm32f1xx_hal_msp.c ****   __HAL_AFIO_REMAP_SWJ_DISABLE();
  57              		.loc 1 97 0
  58 0028 054A     		ldr	r2, .L3+4
  59 002a 5368     		ldr	r3, [r2, #4]
  60              	.LVL0:
  61 002c 23F0E063 		bic	r3, r3, #117440512
  62              	.LVL1:
  63 0030 43F08063 		orr	r3, r3, #67108864
  64              	.LVL2:
  65 0034 5360     		str	r3, [r2, #4]
  66              	.LBE4:
  98:Src/stm32f1xx_hal_msp.c **** 
  99:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
 100:Src/stm32f1xx_hal_msp.c **** 
 101:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
 102:Src/stm32f1xx_hal_msp.c **** }
  67              		.loc 1 102 0
  68 0036 02B0     		add	sp, sp, #8
  69              	.LCFI1:
  70              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccl7nY7m.s 			page 4


  71              		@ sp needed
  72 0038 7047     		bx	lr
  73              	.L4:
  74 003a 00BF     		.align	2
  75              	.L3:
  76 003c 00100240 		.word	1073876992
  77 0040 00000140 		.word	1073807360
  78              		.cfi_endproc
  79              	.LFE63:
  81              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  82              		.align	2
  83              		.global	HAL_ADC_MspInit
  84              		.thumb
  85              		.thumb_func
  87              	HAL_ADC_MspInit:
  88              	.LFB64:
 103:Src/stm32f1xx_hal_msp.c **** 
 104:Src/stm32f1xx_hal_msp.c **** /**
 105:Src/stm32f1xx_hal_msp.c **** * @brief ADC MSP Initialization
 106:Src/stm32f1xx_hal_msp.c **** * This function configures the hardware resources used in this example
 107:Src/stm32f1xx_hal_msp.c **** * @param hadc: ADC handle pointer
 108:Src/stm32f1xx_hal_msp.c **** * @retval None
 109:Src/stm32f1xx_hal_msp.c **** */
 110:Src/stm32f1xx_hal_msp.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 111:Src/stm32f1xx_hal_msp.c **** {
  89              		.loc 1 111 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 32
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL3:
  94 0000 10B5     		push	{r4, lr}
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 4, -8
  98              		.cfi_offset 14, -4
  99 0002 88B0     		sub	sp, sp, #32
 100              	.LCFI3:
 101              		.cfi_def_cfa_offset 40
 112:Src/stm32f1xx_hal_msp.c **** 
 113:Src/stm32f1xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 102              		.loc 1 113 0
 103 0004 0023     		movs	r3, #0
 104 0006 0493     		str	r3, [sp, #16]
 105 0008 0593     		str	r3, [sp, #20]
 106 000a 0693     		str	r3, [sp, #24]
 107 000c 0793     		str	r3, [sp, #28]
 114:Src/stm32f1xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 108              		.loc 1 114 0
 109 000e 0268     		ldr	r2, [r0]
 110 0010 1B4B     		ldr	r3, .L8
 111 0012 9A42     		cmp	r2, r3
 112 0014 32D1     		bne	.L5
 113              	.LBB5:
 115:Src/stm32f1xx_hal_msp.c ****   {
 116:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 117:Src/stm32f1xx_hal_msp.c **** 
 118:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 0 */
ARM GAS  /tmp/ccl7nY7m.s 			page 5


 119:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock enable */
 120:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 114              		.loc 1 120 0
 115 0016 03F56C43 		add	r3, r3, #60416
 116 001a 9A69     		ldr	r2, [r3, #24]
 117 001c 42F40072 		orr	r2, r2, #512
 118 0020 9A61     		str	r2, [r3, #24]
 119 0022 9A69     		ldr	r2, [r3, #24]
 120 0024 02F40072 		and	r2, r2, #512
 121 0028 0192     		str	r2, [sp, #4]
 122 002a 019A     		ldr	r2, [sp, #4]
 123              	.LBE5:
 124              	.LBB6:
 121:Src/stm32f1xx_hal_msp.c ****   
 122:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 125              		.loc 1 122 0
 126 002c 9A69     		ldr	r2, [r3, #24]
 127 002e 42F00402 		orr	r2, r2, #4
 128 0032 9A61     		str	r2, [r3, #24]
 129 0034 9A69     		ldr	r2, [r3, #24]
 130 0036 02F00402 		and	r2, r2, #4
 131 003a 0292     		str	r2, [sp, #8]
 132 003c 029A     		ldr	r2, [sp, #8]
 133              	.LBE6:
 134              	.LBB7:
 123:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 135              		.loc 1 123 0
 136 003e 9A69     		ldr	r2, [r3, #24]
 137 0040 42F00802 		orr	r2, r2, #8
 138 0044 9A61     		str	r2, [r3, #24]
 139 0046 9B69     		ldr	r3, [r3, #24]
 140 0048 03F00803 		and	r3, r3, #8
 141 004c 0393     		str	r3, [sp, #12]
 142 004e 039B     		ldr	r3, [sp, #12]
 143              	.LBE7:
 124:Src/stm32f1xx_hal_msp.c ****     /**ADC1 GPIO Configuration    
 125:Src/stm32f1xx_hal_msp.c ****     PA0-WKUP     ------> ADC1_IN0
 126:Src/stm32f1xx_hal_msp.c ****     PA1     ------> ADC1_IN1
 127:Src/stm32f1xx_hal_msp.c ****     PA2     ------> ADC1_IN2
 128:Src/stm32f1xx_hal_msp.c ****     PA3     ------> ADC1_IN3
 129:Src/stm32f1xx_hal_msp.c ****     PB0     ------> ADC1_IN8
 130:Src/stm32f1xx_hal_msp.c ****     PB1     ------> ADC1_IN9 
 131:Src/stm32f1xx_hal_msp.c ****     */
 132:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 144              		.loc 1 132 0
 145 0050 0F23     		movs	r3, #15
 146 0052 0493     		str	r3, [sp, #16]
 133:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 147              		.loc 1 133 0
 148 0054 0324     		movs	r4, #3
 149 0056 0594     		str	r4, [sp, #20]
 134:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 150              		.loc 1 134 0
 151 0058 0A48     		ldr	r0, .L8+4
 152              	.LVL4:
 153 005a 04A9     		add	r1, sp, #16
 154 005c FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccl7nY7m.s 			page 6


 155              	.LVL5:
 135:Src/stm32f1xx_hal_msp.c **** 
 136:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 156              		.loc 1 136 0
 157 0060 0494     		str	r4, [sp, #16]
 137:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 158              		.loc 1 137 0
 159 0062 0594     		str	r4, [sp, #20]
 138:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 160              		.loc 1 138 0
 161 0064 0848     		ldr	r0, .L8+8
 162 0066 04A9     		add	r1, sp, #16
 163 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 164              	.LVL6:
 139:Src/stm32f1xx_hal_msp.c **** 
 140:Src/stm32f1xx_hal_msp.c ****     /* ADC1 interrupt Init */
 141:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_SetPriority(ADC1_2_IRQn, 0, 0);
 165              		.loc 1 141 0
 166 006c 1220     		movs	r0, #18
 167 006e 0021     		movs	r1, #0
 168 0070 0A46     		mov	r2, r1
 169 0072 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 170              	.LVL7:
 142:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 171              		.loc 1 142 0
 172 0076 1220     		movs	r0, #18
 173 0078 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 174              	.LVL8:
 175              	.L5:
 143:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 144:Src/stm32f1xx_hal_msp.c **** 
 145:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 1 */
 146:Src/stm32f1xx_hal_msp.c ****   }
 147:Src/stm32f1xx_hal_msp.c **** 
 148:Src/stm32f1xx_hal_msp.c **** }
 176              		.loc 1 148 0
 177 007c 08B0     		add	sp, sp, #32
 178              	.LCFI4:
 179              		.cfi_def_cfa_offset 8
 180              		@ sp needed
 181 007e 10BD     		pop	{r4, pc}
 182              	.L9:
 183              		.align	2
 184              	.L8:
 185 0080 00240140 		.word	1073816576
 186 0084 00080140 		.word	1073809408
 187 0088 000C0140 		.word	1073810432
 188              		.cfi_endproc
 189              	.LFE64:
 191              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 192              		.align	2
 193              		.global	HAL_ADC_MspDeInit
 194              		.thumb
 195              		.thumb_func
 197              	HAL_ADC_MspDeInit:
 198              	.LFB65:
 149:Src/stm32f1xx_hal_msp.c **** 
ARM GAS  /tmp/ccl7nY7m.s 			page 7


 150:Src/stm32f1xx_hal_msp.c **** /**
 151:Src/stm32f1xx_hal_msp.c **** * @brief ADC MSP De-Initialization
 152:Src/stm32f1xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 153:Src/stm32f1xx_hal_msp.c **** * @param hadc: ADC handle pointer
 154:Src/stm32f1xx_hal_msp.c **** * @retval None
 155:Src/stm32f1xx_hal_msp.c **** */
 156:Src/stm32f1xx_hal_msp.c **** 
 157:Src/stm32f1xx_hal_msp.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 158:Src/stm32f1xx_hal_msp.c **** {
 199              		.loc 1 158 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              	.LVL9:
 204 0000 08B5     		push	{r3, lr}
 205              	.LCFI5:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 159:Src/stm32f1xx_hal_msp.c **** 
 160:Src/stm32f1xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 209              		.loc 1 160 0
 210 0002 0268     		ldr	r2, [r0]
 211 0004 094B     		ldr	r3, .L13
 212 0006 9A42     		cmp	r2, r3
 213 0008 0FD1     		bne	.L10
 161:Src/stm32f1xx_hal_msp.c ****   {
 162:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 163:Src/stm32f1xx_hal_msp.c **** 
 164:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 165:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock disable */
 166:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 214              		.loc 1 166 0
 215 000a 094A     		ldr	r2, .L13+4
 216 000c 9369     		ldr	r3, [r2, #24]
 217 000e 23F40073 		bic	r3, r3, #512
 218 0012 9361     		str	r3, [r2, #24]
 167:Src/stm32f1xx_hal_msp.c ****   
 168:Src/stm32f1xx_hal_msp.c ****     /**ADC1 GPIO Configuration    
 169:Src/stm32f1xx_hal_msp.c ****     PA0-WKUP     ------> ADC1_IN0
 170:Src/stm32f1xx_hal_msp.c ****     PA1     ------> ADC1_IN1
 171:Src/stm32f1xx_hal_msp.c ****     PA2     ------> ADC1_IN2
 172:Src/stm32f1xx_hal_msp.c ****     PA3     ------> ADC1_IN3
 173:Src/stm32f1xx_hal_msp.c ****     PB0     ------> ADC1_IN8
 174:Src/stm32f1xx_hal_msp.c ****     PB1     ------> ADC1_IN9 
 175:Src/stm32f1xx_hal_msp.c ****     */
 176:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3);
 219              		.loc 1 176 0
 220 0014 0748     		ldr	r0, .L13+8
 221              	.LVL10:
 222 0016 0F21     		movs	r1, #15
 223 0018 FFF7FEFF 		bl	HAL_GPIO_DeInit
 224              	.LVL11:
 177:Src/stm32f1xx_hal_msp.c **** 
 178:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_0|GPIO_PIN_1);
 225              		.loc 1 178 0
 226 001c 0648     		ldr	r0, .L13+12
ARM GAS  /tmp/ccl7nY7m.s 			page 8


 227 001e 0321     		movs	r1, #3
 228 0020 FFF7FEFF 		bl	HAL_GPIO_DeInit
 229              	.LVL12:
 179:Src/stm32f1xx_hal_msp.c **** 
 180:Src/stm32f1xx_hal_msp.c ****     /* ADC1 interrupt DeInit */
 181:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(ADC1_2_IRQn);
 230              		.loc 1 181 0
 231 0024 1220     		movs	r0, #18
 232 0026 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 233              	.LVL13:
 234              	.L10:
 235 002a 08BD     		pop	{r3, pc}
 236              	.L14:
 237              		.align	2
 238              	.L13:
 239 002c 00240140 		.word	1073816576
 240 0030 00100240 		.word	1073876992
 241 0034 00080140 		.word	1073809408
 242 0038 000C0140 		.word	1073810432
 243              		.cfi_endproc
 244              	.LFE65:
 246              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 247              		.align	2
 248              		.global	HAL_CAN_MspInit
 249              		.thumb
 250              		.thumb_func
 252              	HAL_CAN_MspInit:
 253              	.LFB66:
 182:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 183:Src/stm32f1xx_hal_msp.c **** 
 184:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 185:Src/stm32f1xx_hal_msp.c ****   }
 186:Src/stm32f1xx_hal_msp.c **** 
 187:Src/stm32f1xx_hal_msp.c **** }
 188:Src/stm32f1xx_hal_msp.c **** 
 189:Src/stm32f1xx_hal_msp.c **** /**
 190:Src/stm32f1xx_hal_msp.c **** * @brief CAN MSP Initialization
 191:Src/stm32f1xx_hal_msp.c **** * This function configures the hardware resources used in this example
 192:Src/stm32f1xx_hal_msp.c **** * @param hcan: CAN handle pointer
 193:Src/stm32f1xx_hal_msp.c **** * @retval None
 194:Src/stm32f1xx_hal_msp.c **** */
 195:Src/stm32f1xx_hal_msp.c **** void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
 196:Src/stm32f1xx_hal_msp.c **** {
 254              		.loc 1 196 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 24
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              	.LVL14:
 259 0000 30B5     		push	{r4, r5, lr}
 260              	.LCFI6:
 261              		.cfi_def_cfa_offset 12
 262              		.cfi_offset 4, -12
 263              		.cfi_offset 5, -8
 264              		.cfi_offset 14, -4
 265 0002 87B0     		sub	sp, sp, #28
 266              	.LCFI7:
 267              		.cfi_def_cfa_offset 40
ARM GAS  /tmp/ccl7nY7m.s 			page 9


 197:Src/stm32f1xx_hal_msp.c **** 
 198:Src/stm32f1xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 268              		.loc 1 198 0
 269 0004 0023     		movs	r3, #0
 270 0006 0293     		str	r3, [sp, #8]
 271 0008 0393     		str	r3, [sp, #12]
 272 000a 0493     		str	r3, [sp, #16]
 273 000c 0593     		str	r3, [sp, #20]
 199:Src/stm32f1xx_hal_msp.c ****   if(hcan->Instance==CAN1)
 274              		.loc 1 199 0
 275 000e 0268     		ldr	r2, [r0]
 276 0010 1A4B     		ldr	r3, .L18
 277 0012 9A42     		cmp	r2, r3
 278 0014 30D1     		bne	.L15
 279              	.LBB8:
 200:Src/stm32f1xx_hal_msp.c ****   {
 201:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspInit 0 */
 202:Src/stm32f1xx_hal_msp.c **** 
 203:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END CAN1_MspInit 0 */
 204:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock enable */
 205:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_CAN1_CLK_ENABLE();
 280              		.loc 1 205 0
 281 0016 03F5D633 		add	r3, r3, #109568
 282 001a DA69     		ldr	r2, [r3, #28]
 283 001c 42F00072 		orr	r2, r2, #33554432
 284 0020 DA61     		str	r2, [r3, #28]
 285 0022 DA69     		ldr	r2, [r3, #28]
 286 0024 02F00072 		and	r2, r2, #33554432
 287 0028 0092     		str	r2, [sp]
 288 002a 009A     		ldr	r2, [sp]
 289              	.LBE8:
 290              	.LBB9:
 206:Src/stm32f1xx_hal_msp.c ****   
 207:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 291              		.loc 1 207 0
 292 002c 9A69     		ldr	r2, [r3, #24]
 293 002e 42F00402 		orr	r2, r2, #4
 294 0032 9A61     		str	r2, [r3, #24]
 295 0034 9B69     		ldr	r3, [r3, #24]
 296 0036 03F00403 		and	r3, r3, #4
 297 003a 0193     		str	r3, [sp, #4]
 298 003c 019B     		ldr	r3, [sp, #4]
 299              	.LBE9:
 208:Src/stm32f1xx_hal_msp.c ****     /**CAN GPIO Configuration    
 209:Src/stm32f1xx_hal_msp.c ****     PA11     ------> CAN_RX
 210:Src/stm32f1xx_hal_msp.c ****     PA12     ------> CAN_TX 
 211:Src/stm32f1xx_hal_msp.c ****     */
 212:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11;
 300              		.loc 1 212 0
 301 003e 06AC     		add	r4, sp, #24
 302 0040 4FF40063 		mov	r3, #2048
 303 0044 44F8103D 		str	r3, [r4, #-16]!
 213:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 214:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 215:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 304              		.loc 1 215 0
 305 0048 0D4D     		ldr	r5, .L18+4
ARM GAS  /tmp/ccl7nY7m.s 			page 10


 306 004a 2846     		mov	r0, r5
 307              	.LVL15:
 308 004c 2146     		mov	r1, r4
 309 004e FFF7FEFF 		bl	HAL_GPIO_Init
 310              	.LVL16:
 216:Src/stm32f1xx_hal_msp.c **** 
 217:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_12;
 311              		.loc 1 217 0
 312 0052 4FF48053 		mov	r3, #4096
 313 0056 0293     		str	r3, [sp, #8]
 218:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 314              		.loc 1 218 0
 315 0058 0223     		movs	r3, #2
 316 005a 0393     		str	r3, [sp, #12]
 219:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 317              		.loc 1 219 0
 318 005c 0323     		movs	r3, #3
 319 005e 0593     		str	r3, [sp, #20]
 220:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 320              		.loc 1 220 0
 321 0060 2846     		mov	r0, r5
 322 0062 2146     		mov	r1, r4
 323 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 324              	.LVL17:
 221:Src/stm32f1xx_hal_msp.c **** 
 222:Src/stm32f1xx_hal_msp.c ****     /* CAN1 interrupt Init */
 223:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_SetPriority(USB_LP_CAN1_RX0_IRQn, 0, 0);
 325              		.loc 1 223 0
 326 0068 1420     		movs	r0, #20
 327 006a 0021     		movs	r1, #0
 328 006c 0A46     		mov	r2, r1
 329 006e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 330              	.LVL18:
 224:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(USB_LP_CAN1_RX0_IRQn);
 331              		.loc 1 224 0
 332 0072 1420     		movs	r0, #20
 333 0074 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 334              	.LVL19:
 335              	.L15:
 225:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspInit 1 */
 226:Src/stm32f1xx_hal_msp.c **** 
 227:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END CAN1_MspInit 1 */
 228:Src/stm32f1xx_hal_msp.c ****   }
 229:Src/stm32f1xx_hal_msp.c **** 
 230:Src/stm32f1xx_hal_msp.c **** }
 336              		.loc 1 230 0
 337 0078 07B0     		add	sp, sp, #28
 338              	.LCFI8:
 339              		.cfi_def_cfa_offset 12
 340              		@ sp needed
 341 007a 30BD     		pop	{r4, r5, pc}
 342              	.L19:
 343              		.align	2
 344              	.L18:
 345 007c 00640040 		.word	1073767424
 346 0080 00080140 		.word	1073809408
 347              		.cfi_endproc
ARM GAS  /tmp/ccl7nY7m.s 			page 11


 348              	.LFE66:
 350              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 351              		.align	2
 352              		.global	HAL_CAN_MspDeInit
 353              		.thumb
 354              		.thumb_func
 356              	HAL_CAN_MspDeInit:
 357              	.LFB67:
 231:Src/stm32f1xx_hal_msp.c **** 
 232:Src/stm32f1xx_hal_msp.c **** /**
 233:Src/stm32f1xx_hal_msp.c **** * @brief CAN MSP De-Initialization
 234:Src/stm32f1xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 235:Src/stm32f1xx_hal_msp.c **** * @param hcan: CAN handle pointer
 236:Src/stm32f1xx_hal_msp.c **** * @retval None
 237:Src/stm32f1xx_hal_msp.c **** */
 238:Src/stm32f1xx_hal_msp.c **** 
 239:Src/stm32f1xx_hal_msp.c **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
 240:Src/stm32f1xx_hal_msp.c **** {
 358              		.loc 1 240 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              	.LVL20:
 363 0000 08B5     		push	{r3, lr}
 364              	.LCFI9:
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 3, -8
 367              		.cfi_offset 14, -4
 241:Src/stm32f1xx_hal_msp.c **** 
 242:Src/stm32f1xx_hal_msp.c ****   if(hcan->Instance==CAN1)
 368              		.loc 1 242 0
 369 0002 0268     		ldr	r2, [r0]
 370 0004 084B     		ldr	r3, .L23
 371 0006 9A42     		cmp	r2, r3
 372 0008 0CD1     		bne	.L20
 243:Src/stm32f1xx_hal_msp.c ****   {
 244:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspDeInit 0 */
 245:Src/stm32f1xx_hal_msp.c **** 
 246:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END CAN1_MspDeInit 0 */
 247:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock disable */
 248:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_CAN1_CLK_DISABLE();
 373              		.loc 1 248 0
 374 000a 084A     		ldr	r2, .L23+4
 375 000c D369     		ldr	r3, [r2, #28]
 376 000e 23F00073 		bic	r3, r3, #33554432
 377 0012 D361     		str	r3, [r2, #28]
 249:Src/stm32f1xx_hal_msp.c ****   
 250:Src/stm32f1xx_hal_msp.c ****     /**CAN GPIO Configuration    
 251:Src/stm32f1xx_hal_msp.c ****     PA11     ------> CAN_RX
 252:Src/stm32f1xx_hal_msp.c ****     PA12     ------> CAN_TX 
 253:Src/stm32f1xx_hal_msp.c ****     */
 254:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);
 378              		.loc 1 254 0
 379 0014 0648     		ldr	r0, .L23+8
 380              	.LVL21:
 381 0016 4FF4C051 		mov	r1, #6144
 382 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
ARM GAS  /tmp/ccl7nY7m.s 			page 12


 383              	.LVL22:
 255:Src/stm32f1xx_hal_msp.c **** 
 256:Src/stm32f1xx_hal_msp.c ****     /* CAN1 interrupt DeInit */
 257:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(USB_LP_CAN1_RX0_IRQn);
 384              		.loc 1 257 0
 385 001e 1420     		movs	r0, #20
 386 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 387              	.LVL23:
 388              	.L20:
 389 0024 08BD     		pop	{r3, pc}
 390              	.L24:
 391 0026 00BF     		.align	2
 392              	.L23:
 393 0028 00640040 		.word	1073767424
 394 002c 00100240 		.word	1073876992
 395 0030 00080140 		.word	1073809408
 396              		.cfi_endproc
 397              	.LFE67:
 399              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 400              		.align	2
 401              		.global	HAL_SPI_MspInit
 402              		.thumb
 403              		.thumb_func
 405              	HAL_SPI_MspInit:
 406              	.LFB68:
 258:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspDeInit 1 */
 259:Src/stm32f1xx_hal_msp.c **** 
 260:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END CAN1_MspDeInit 1 */
 261:Src/stm32f1xx_hal_msp.c ****   }
 262:Src/stm32f1xx_hal_msp.c **** 
 263:Src/stm32f1xx_hal_msp.c **** }
 264:Src/stm32f1xx_hal_msp.c **** 
 265:Src/stm32f1xx_hal_msp.c **** /**
 266:Src/stm32f1xx_hal_msp.c **** * @brief SPI MSP Initialization
 267:Src/stm32f1xx_hal_msp.c **** * This function configures the hardware resources used in this example
 268:Src/stm32f1xx_hal_msp.c **** * @param hspi: SPI handle pointer
 269:Src/stm32f1xx_hal_msp.c **** * @retval None
 270:Src/stm32f1xx_hal_msp.c **** */
 271:Src/stm32f1xx_hal_msp.c **** void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
 272:Src/stm32f1xx_hal_msp.c **** {
 407              		.loc 1 272 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 24
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              	.LVL24:
 412 0000 10B5     		push	{r4, lr}
 413              	.LCFI10:
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 4, -8
 416              		.cfi_offset 14, -4
 417 0002 86B0     		sub	sp, sp, #24
 418              	.LCFI11:
 419              		.cfi_def_cfa_offset 32
 273:Src/stm32f1xx_hal_msp.c **** 
 274:Src/stm32f1xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 420              		.loc 1 274 0
 421 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccl7nY7m.s 			page 13


 422 0006 0293     		str	r3, [sp, #8]
 423 0008 0393     		str	r3, [sp, #12]
 424 000a 0493     		str	r3, [sp, #16]
 425 000c 0593     		str	r3, [sp, #20]
 275:Src/stm32f1xx_hal_msp.c ****   if(hspi->Instance==SPI1)
 426              		.loc 1 275 0
 427 000e 0268     		ldr	r2, [r0]
 428 0010 164B     		ldr	r3, .L28
 429 0012 9A42     		cmp	r2, r3
 430 0014 27D1     		bne	.L25
 431              	.LBB10:
 276:Src/stm32f1xx_hal_msp.c ****   {
 277:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN SPI1_MspInit 0 */
 278:Src/stm32f1xx_hal_msp.c **** 
 279:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END SPI1_MspInit 0 */
 280:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock enable */
 281:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_SPI1_CLK_ENABLE();
 432              		.loc 1 281 0
 433 0016 03F56043 		add	r3, r3, #57344
 434 001a 9A69     		ldr	r2, [r3, #24]
 435 001c 42F48052 		orr	r2, r2, #4096
 436 0020 9A61     		str	r2, [r3, #24]
 437 0022 9A69     		ldr	r2, [r3, #24]
 438 0024 02F48052 		and	r2, r2, #4096
 439 0028 0092     		str	r2, [sp]
 440 002a 009A     		ldr	r2, [sp]
 441              	.LBE10:
 442              	.LBB11:
 282:Src/stm32f1xx_hal_msp.c ****   
 283:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 443              		.loc 1 283 0
 444 002c 9A69     		ldr	r2, [r3, #24]
 445 002e 42F00402 		orr	r2, r2, #4
 446 0032 9A61     		str	r2, [r3, #24]
 447 0034 9B69     		ldr	r3, [r3, #24]
 448 0036 03F00403 		and	r3, r3, #4
 449 003a 0193     		str	r3, [sp, #4]
 450 003c 019B     		ldr	r3, [sp, #4]
 451              	.LBE11:
 284:Src/stm32f1xx_hal_msp.c ****     /**SPI1 GPIO Configuration    
 285:Src/stm32f1xx_hal_msp.c ****     PA4     ------> SPI1_NSS
 286:Src/stm32f1xx_hal_msp.c ****     PA5     ------> SPI1_SCK
 287:Src/stm32f1xx_hal_msp.c ****     PA6     ------> SPI1_MISO
 288:Src/stm32f1xx_hal_msp.c ****     PA7     ------> SPI1_MOSI 
 289:Src/stm32f1xx_hal_msp.c ****     */
 290:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_7;
 452              		.loc 1 290 0
 453 003e B023     		movs	r3, #176
 454 0040 0293     		str	r3, [sp, #8]
 291:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 455              		.loc 1 291 0
 456 0042 0223     		movs	r3, #2
 457 0044 0393     		str	r3, [sp, #12]
 292:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 458              		.loc 1 292 0
 459 0046 0323     		movs	r3, #3
 460 0048 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/ccl7nY7m.s 			page 14


 293:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 461              		.loc 1 293 0
 462 004a 094C     		ldr	r4, .L28+4
 463 004c 2046     		mov	r0, r4
 464              	.LVL25:
 465 004e 02A9     		add	r1, sp, #8
 466 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 467              	.LVL26:
 294:Src/stm32f1xx_hal_msp.c **** 
 295:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_6;
 468              		.loc 1 295 0
 469 0054 4023     		movs	r3, #64
 470 0056 0293     		str	r3, [sp, #8]
 296:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 471              		.loc 1 296 0
 472 0058 0023     		movs	r3, #0
 473 005a 0393     		str	r3, [sp, #12]
 297:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 474              		.loc 1 297 0
 475 005c 0493     		str	r3, [sp, #16]
 298:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 476              		.loc 1 298 0
 477 005e 2046     		mov	r0, r4
 478 0060 02A9     		add	r1, sp, #8
 479 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 480              	.LVL27:
 481              	.L25:
 299:Src/stm32f1xx_hal_msp.c **** 
 300:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN SPI1_MspInit 1 */
 301:Src/stm32f1xx_hal_msp.c **** 
 302:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END SPI1_MspInit 1 */
 303:Src/stm32f1xx_hal_msp.c ****   }
 304:Src/stm32f1xx_hal_msp.c **** 
 305:Src/stm32f1xx_hal_msp.c **** }
 482              		.loc 1 305 0
 483 0066 06B0     		add	sp, sp, #24
 484              	.LCFI12:
 485              		.cfi_def_cfa_offset 8
 486              		@ sp needed
 487 0068 10BD     		pop	{r4, pc}
 488              	.L29:
 489 006a 00BF     		.align	2
 490              	.L28:
 491 006c 00300140 		.word	1073819648
 492 0070 00080140 		.word	1073809408
 493              		.cfi_endproc
 494              	.LFE68:
 496              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 497              		.align	2
 498              		.global	HAL_SPI_MspDeInit
 499              		.thumb
 500              		.thumb_func
 502              	HAL_SPI_MspDeInit:
 503              	.LFB69:
 306:Src/stm32f1xx_hal_msp.c **** 
 307:Src/stm32f1xx_hal_msp.c **** /**
 308:Src/stm32f1xx_hal_msp.c **** * @brief SPI MSP De-Initialization
ARM GAS  /tmp/ccl7nY7m.s 			page 15


 309:Src/stm32f1xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 310:Src/stm32f1xx_hal_msp.c **** * @param hspi: SPI handle pointer
 311:Src/stm32f1xx_hal_msp.c **** * @retval None
 312:Src/stm32f1xx_hal_msp.c **** */
 313:Src/stm32f1xx_hal_msp.c **** 
 314:Src/stm32f1xx_hal_msp.c **** void HAL_SPI_MspDeInit(SPI_HandleTypeDef* hspi)
 315:Src/stm32f1xx_hal_msp.c **** {
 504              		.loc 1 315 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              	.LVL28:
 509 0000 08B5     		push	{r3, lr}
 510              	.LCFI13:
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 3, -8
 513              		.cfi_offset 14, -4
 316:Src/stm32f1xx_hal_msp.c **** 
 317:Src/stm32f1xx_hal_msp.c ****   if(hspi->Instance==SPI1)
 514              		.loc 1 317 0
 515 0002 0268     		ldr	r2, [r0]
 516 0004 064B     		ldr	r3, .L33
 517 0006 9A42     		cmp	r2, r3
 518 0008 08D1     		bne	.L30
 318:Src/stm32f1xx_hal_msp.c ****   {
 319:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN SPI1_MspDeInit 0 */
 320:Src/stm32f1xx_hal_msp.c **** 
 321:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END SPI1_MspDeInit 0 */
 322:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock disable */
 323:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_SPI1_CLK_DISABLE();
 519              		.loc 1 323 0
 520 000a 064A     		ldr	r2, .L33+4
 521 000c 9369     		ldr	r3, [r2, #24]
 522 000e 23F48053 		bic	r3, r3, #4096
 523 0012 9361     		str	r3, [r2, #24]
 324:Src/stm32f1xx_hal_msp.c ****   
 325:Src/stm32f1xx_hal_msp.c ****     /**SPI1 GPIO Configuration    
 326:Src/stm32f1xx_hal_msp.c ****     PA4     ------> SPI1_NSS
 327:Src/stm32f1xx_hal_msp.c ****     PA5     ------> SPI1_SCK
 328:Src/stm32f1xx_hal_msp.c ****     PA6     ------> SPI1_MISO
 329:Src/stm32f1xx_hal_msp.c ****     PA7     ------> SPI1_MOSI 
 330:Src/stm32f1xx_hal_msp.c ****     */
 331:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
 524              		.loc 1 331 0
 525 0014 0448     		ldr	r0, .L33+8
 526              	.LVL29:
 527 0016 F021     		movs	r1, #240
 528 0018 FFF7FEFF 		bl	HAL_GPIO_DeInit
 529              	.LVL30:
 530              	.L30:
 531 001c 08BD     		pop	{r3, pc}
 532              	.L34:
 533 001e 00BF     		.align	2
 534              	.L33:
 535 0020 00300140 		.word	1073819648
 536 0024 00100240 		.word	1073876992
 537 0028 00080140 		.word	1073809408
ARM GAS  /tmp/ccl7nY7m.s 			page 16


 538              		.cfi_endproc
 539              	.LFE69:
 541              		.comm	sysTimer,4,4
 542              		.comm	secTimer,4,4
 543              		.comm	millisTimer,4,4
 544              		.text
 545              	.Letext0:
 546              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 547              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 548              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 549              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 550              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 551              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 552              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 553              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 554              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 555              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 556              		.file 12 "Drivers/CMSIS/Include/core_cm3.h"
 557              		.file 13 "Inc/main.h"
 558              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccl7nY7m.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_msp.c
     /tmp/ccl7nY7m.s:19     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccl7nY7m.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccl7nY7m.s:76     .text.HAL_MspInit:000000000000003c $d
     /tmp/ccl7nY7m.s:82     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccl7nY7m.s:87     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccl7nY7m.s:185    .text.HAL_ADC_MspInit:0000000000000080 $d
     /tmp/ccl7nY7m.s:192    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccl7nY7m.s:197    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccl7nY7m.s:239    .text.HAL_ADC_MspDeInit:000000000000002c $d
     /tmp/ccl7nY7m.s:247    .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/ccl7nY7m.s:252    .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/ccl7nY7m.s:345    .text.HAL_CAN_MspInit:000000000000007c $d
     /tmp/ccl7nY7m.s:351    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/ccl7nY7m.s:356    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/ccl7nY7m.s:393    .text.HAL_CAN_MspDeInit:0000000000000028 $d
     /tmp/ccl7nY7m.s:400    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccl7nY7m.s:405    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccl7nY7m.s:491    .text.HAL_SPI_MspInit:000000000000006c $d
     /tmp/ccl7nY7m.s:497    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccl7nY7m.s:502    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccl7nY7m.s:535    .text.HAL_SPI_MspDeInit:0000000000000020 $d
                            *COM*:0000000000000004 sysTimer
                            *COM*:0000000000000004 secTimer
                            *COM*:0000000000000004 millisTimer
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
