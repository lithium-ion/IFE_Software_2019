ARM GAS  /tmp/ccDawjSM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal_msp.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_MspInit,"ax",%progbits
  19              		.align	2
  20              		.global	HAL_MspInit
  21              		.thumb
  22              		.thumb_func
  24              	HAL_MspInit:
  25              	.LFB63:
  26              		.file 1 "Src/stm32f1xx_hal_msp.c"
   1:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_hal_msp.c **** /**
   3:Src/stm32f1xx_hal_msp.c ****   ******************************************************************************
   4:Src/stm32f1xx_hal_msp.c ****   * File Name          : stm32f1xx_hal_msp.c
   5:Src/stm32f1xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization 
   6:Src/stm32f1xx_hal_msp.c ****   *                      and de-Initialization codes.
   7:Src/stm32f1xx_hal_msp.c ****   ******************************************************************************
   8:Src/stm32f1xx_hal_msp.c ****   ** This notice applies to any and all portions of this file
   9:Src/stm32f1xx_hal_msp.c ****   * that are not between comment pairs USER CODE BEGIN and
  10:Src/stm32f1xx_hal_msp.c ****   * USER CODE END. Other portions of this file, whether 
  11:Src/stm32f1xx_hal_msp.c ****   * inserted by the user or by software development tools
  12:Src/stm32f1xx_hal_msp.c ****   * are owned by their respective copyright owners.
  13:Src/stm32f1xx_hal_msp.c ****   *
  14:Src/stm32f1xx_hal_msp.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
  15:Src/stm32f1xx_hal_msp.c ****   *
  16:Src/stm32f1xx_hal_msp.c ****   * Redistribution and use in source and binary forms, with or without modification,
  17:Src/stm32f1xx_hal_msp.c ****   * are permitted provided that the following conditions are met:
  18:Src/stm32f1xx_hal_msp.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  19:Src/stm32f1xx_hal_msp.c ****   *      this list of conditions and the following disclaimer.
  20:Src/stm32f1xx_hal_msp.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/stm32f1xx_hal_msp.c ****   *      this list of conditions and the following disclaimer in the documentation
  22:Src/stm32f1xx_hal_msp.c ****   *      and/or other materials provided with the distribution.
  23:Src/stm32f1xx_hal_msp.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  24:Src/stm32f1xx_hal_msp.c ****   *      may be used to endorse or promote products derived from this software
  25:Src/stm32f1xx_hal_msp.c ****   *      without specific prior written permission.
  26:Src/stm32f1xx_hal_msp.c ****   *
  27:Src/stm32f1xx_hal_msp.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  28:Src/stm32f1xx_hal_msp.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  29:Src/stm32f1xx_hal_msp.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  30:Src/stm32f1xx_hal_msp.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  31:Src/stm32f1xx_hal_msp.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  32:Src/stm32f1xx_hal_msp.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccDawjSM.s 			page 2


  33:Src/stm32f1xx_hal_msp.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  34:Src/stm32f1xx_hal_msp.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  35:Src/stm32f1xx_hal_msp.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:Src/stm32f1xx_hal_msp.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:Src/stm32f1xx_hal_msp.c ****   *
  38:Src/stm32f1xx_hal_msp.c ****   ******************************************************************************
  39:Src/stm32f1xx_hal_msp.c ****   */
  40:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Header */
  41:Src/stm32f1xx_hal_msp.c **** 
  42:Src/stm32f1xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  43:Src/stm32f1xx_hal_msp.c **** #include "main.h"
  44:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  45:Src/stm32f1xx_hal_msp.c **** 
  46:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Includes */
  47:Src/stm32f1xx_hal_msp.c **** 
  48:Src/stm32f1xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  49:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN TD */
  50:Src/stm32f1xx_hal_msp.c **** 
  51:Src/stm32f1xx_hal_msp.c **** /* USER CODE END TD */
  52:Src/stm32f1xx_hal_msp.c **** 
  53:Src/stm32f1xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  54:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Define */
  55:Src/stm32f1xx_hal_msp.c ****  
  56:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Define */
  57:Src/stm32f1xx_hal_msp.c **** 
  58:Src/stm32f1xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  59:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  60:Src/stm32f1xx_hal_msp.c **** 
  61:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Macro */
  62:Src/stm32f1xx_hal_msp.c **** 
  63:Src/stm32f1xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  64:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN PV */
  65:Src/stm32f1xx_hal_msp.c **** 
  66:Src/stm32f1xx_hal_msp.c **** /* USER CODE END PV */
  67:Src/stm32f1xx_hal_msp.c **** 
  68:Src/stm32f1xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  69:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  70:Src/stm32f1xx_hal_msp.c **** 
  71:Src/stm32f1xx_hal_msp.c **** /* USER CODE END PFP */
  72:Src/stm32f1xx_hal_msp.c **** 
  73:Src/stm32f1xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  74:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  75:Src/stm32f1xx_hal_msp.c **** 
  76:Src/stm32f1xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  77:Src/stm32f1xx_hal_msp.c **** 
  78:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  79:Src/stm32f1xx_hal_msp.c **** 
  80:Src/stm32f1xx_hal_msp.c **** /* USER CODE END 0 */
  81:Src/stm32f1xx_hal_msp.c **** /**
  82:Src/stm32f1xx_hal_msp.c ****   * Initializes the Global MSP.
  83:Src/stm32f1xx_hal_msp.c ****   */
  84:Src/stm32f1xx_hal_msp.c **** void HAL_MspInit(void)
  85:Src/stm32f1xx_hal_msp.c **** {
  27              		.loc 1 85 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccDawjSM.s 			page 3


  31              		@ link register save eliminated.
  32 0000 82B0     		sub	sp, sp, #8
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              	.LBB2:
  86:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  87:Src/stm32f1xx_hal_msp.c **** 
  88:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  89:Src/stm32f1xx_hal_msp.c **** 
  90:Src/stm32f1xx_hal_msp.c ****   __HAL_RCC_AFIO_CLK_ENABLE();
  36              		.loc 1 90 0
  37 0002 0E4B     		ldr	r3, .L3
  38 0004 9A69     		ldr	r2, [r3, #24]
  39 0006 42F00102 		orr	r2, r2, #1
  40 000a 9A61     		str	r2, [r3, #24]
  41 000c 9A69     		ldr	r2, [r3, #24]
  42 000e 02F00102 		and	r2, r2, #1
  43 0012 0092     		str	r2, [sp]
  44 0014 009A     		ldr	r2, [sp]
  45              	.LBE2:
  46              	.LBB3:
  91:Src/stm32f1xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  47              		.loc 1 91 0
  48 0016 DA69     		ldr	r2, [r3, #28]
  49 0018 42F08052 		orr	r2, r2, #268435456
  50 001c DA61     		str	r2, [r3, #28]
  51 001e DB69     		ldr	r3, [r3, #28]
  52 0020 03F08053 		and	r3, r3, #268435456
  53 0024 0193     		str	r3, [sp, #4]
  54 0026 019B     		ldr	r3, [sp, #4]
  55              	.LBE3:
  56              	.LBB4:
  92:Src/stm32f1xx_hal_msp.c **** 
  93:Src/stm32f1xx_hal_msp.c ****   /* System interrupt init*/
  94:Src/stm32f1xx_hal_msp.c **** 
  95:Src/stm32f1xx_hal_msp.c ****   /** DISABLE: JTAG-DP Disabled and SW-DP Disabled 
  96:Src/stm32f1xx_hal_msp.c ****   */
  97:Src/stm32f1xx_hal_msp.c ****   __HAL_AFIO_REMAP_SWJ_DISABLE();
  57              		.loc 1 97 0
  58 0028 054A     		ldr	r2, .L3+4
  59 002a 5368     		ldr	r3, [r2, #4]
  60              	.LVL0:
  61 002c 23F0E063 		bic	r3, r3, #117440512
  62              	.LVL1:
  63 0030 43F08063 		orr	r3, r3, #67108864
  64              	.LVL2:
  65 0034 5360     		str	r3, [r2, #4]
  66              	.LBE4:
  98:Src/stm32f1xx_hal_msp.c **** 
  99:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
 100:Src/stm32f1xx_hal_msp.c **** 
 101:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
 102:Src/stm32f1xx_hal_msp.c **** }
  67              		.loc 1 102 0
  68 0036 02B0     		add	sp, sp, #8
  69              	.LCFI1:
  70              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccDawjSM.s 			page 4


  71              		@ sp needed
  72 0038 7047     		bx	lr
  73              	.L4:
  74 003a 00BF     		.align	2
  75              	.L3:
  76 003c 00100240 		.word	1073876992
  77 0040 00000140 		.word	1073807360
  78              		.cfi_endproc
  79              	.LFE63:
  81              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  82              		.align	2
  83              		.global	HAL_ADC_MspInit
  84              		.thumb
  85              		.thumb_func
  87              	HAL_ADC_MspInit:
  88              	.LFB64:
 103:Src/stm32f1xx_hal_msp.c **** 
 104:Src/stm32f1xx_hal_msp.c **** /**
 105:Src/stm32f1xx_hal_msp.c **** * @brief ADC MSP Initialization
 106:Src/stm32f1xx_hal_msp.c **** * This function configures the hardware resources used in this example
 107:Src/stm32f1xx_hal_msp.c **** * @param hadc: ADC handle pointer
 108:Src/stm32f1xx_hal_msp.c **** * @retval None
 109:Src/stm32f1xx_hal_msp.c **** */
 110:Src/stm32f1xx_hal_msp.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 111:Src/stm32f1xx_hal_msp.c **** {
  89              		.loc 1 111 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 24
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL3:
  94 0000 00B5     		push	{lr}
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 4
  97              		.cfi_offset 14, -4
  98 0002 87B0     		sub	sp, sp, #28
  99              	.LCFI3:
 100              		.cfi_def_cfa_offset 32
 112:Src/stm32f1xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 101              		.loc 1 112 0
 102 0004 0023     		movs	r3, #0
 103 0006 0293     		str	r3, [sp, #8]
 104 0008 0393     		str	r3, [sp, #12]
 105 000a 0493     		str	r3, [sp, #16]
 106 000c 0593     		str	r3, [sp, #20]
 113:Src/stm32f1xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 107              		.loc 1 113 0
 108 000e 0268     		ldr	r2, [r0]
 109 0010 104B     		ldr	r3, .L8
 110 0012 9A42     		cmp	r2, r3
 111 0014 1BD1     		bne	.L5
 112              	.LBB5:
 114:Src/stm32f1xx_hal_msp.c ****   {
 115:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 116:Src/stm32f1xx_hal_msp.c **** 
 117:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 0 */
 118:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock enable */
 119:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
ARM GAS  /tmp/ccDawjSM.s 			page 5


 113              		.loc 1 119 0
 114 0016 03F56C43 		add	r3, r3, #60416
 115 001a 9A69     		ldr	r2, [r3, #24]
 116 001c 42F40072 		orr	r2, r2, #512
 117 0020 9A61     		str	r2, [r3, #24]
 118 0022 9A69     		ldr	r2, [r3, #24]
 119 0024 02F40072 		and	r2, r2, #512
 120 0028 0092     		str	r2, [sp]
 121 002a 009A     		ldr	r2, [sp]
 122              	.LBE5:
 123              	.LBB6:
 120:Src/stm32f1xx_hal_msp.c ****   
 121:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 124              		.loc 1 121 0
 125 002c 9A69     		ldr	r2, [r3, #24]
 126 002e 42F00402 		orr	r2, r2, #4
 127 0032 9A61     		str	r2, [r3, #24]
 128 0034 9B69     		ldr	r3, [r3, #24]
 129 0036 03F00403 		and	r3, r3, #4
 130 003a 0193     		str	r3, [sp, #4]
 131 003c 019B     		ldr	r3, [sp, #4]
 132              	.LBE6:
 122:Src/stm32f1xx_hal_msp.c ****     /**ADC1 GPIO Configuration    
 123:Src/stm32f1xx_hal_msp.c ****     PA0-WKUP     ------> ADC1_IN0 
 124:Src/stm32f1xx_hal_msp.c ****     */
 125:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 133              		.loc 1 125 0
 134 003e 0123     		movs	r3, #1
 135 0040 0293     		str	r3, [sp, #8]
 126:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 136              		.loc 1 126 0
 137 0042 0323     		movs	r3, #3
 138 0044 0393     		str	r3, [sp, #12]
 127:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 139              		.loc 1 127 0
 140 0046 0448     		ldr	r0, .L8+4
 141              	.LVL4:
 142 0048 02A9     		add	r1, sp, #8
 143 004a FFF7FEFF 		bl	HAL_GPIO_Init
 144              	.LVL5:
 145              	.L5:
 128:Src/stm32f1xx_hal_msp.c **** 
 129:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 130:Src/stm32f1xx_hal_msp.c **** 
 131:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 1 */
 132:Src/stm32f1xx_hal_msp.c ****   }
 133:Src/stm32f1xx_hal_msp.c **** 
 134:Src/stm32f1xx_hal_msp.c **** }
 146              		.loc 1 134 0
 147 004e 07B0     		add	sp, sp, #28
 148              	.LCFI4:
 149              		.cfi_def_cfa_offset 4
 150              		@ sp needed
 151 0050 5DF804FB 		ldr	pc, [sp], #4
 152              	.L9:
 153              		.align	2
 154              	.L8:
ARM GAS  /tmp/ccDawjSM.s 			page 6


 155 0054 00240140 		.word	1073816576
 156 0058 00080140 		.word	1073809408
 157              		.cfi_endproc
 158              	.LFE64:
 160              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 161              		.align	2
 162              		.global	HAL_ADC_MspDeInit
 163              		.thumb
 164              		.thumb_func
 166              	HAL_ADC_MspDeInit:
 167              	.LFB65:
 135:Src/stm32f1xx_hal_msp.c **** 
 136:Src/stm32f1xx_hal_msp.c **** /**
 137:Src/stm32f1xx_hal_msp.c **** * @brief ADC MSP De-Initialization
 138:Src/stm32f1xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 139:Src/stm32f1xx_hal_msp.c **** * @param hadc: ADC handle pointer
 140:Src/stm32f1xx_hal_msp.c **** * @retval None
 141:Src/stm32f1xx_hal_msp.c **** */
 142:Src/stm32f1xx_hal_msp.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 143:Src/stm32f1xx_hal_msp.c **** {
 168              		.loc 1 143 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              	.LVL6:
 173 0000 08B5     		push	{r3, lr}
 174              	.LCFI5:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 3, -8
 177              		.cfi_offset 14, -4
 144:Src/stm32f1xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 178              		.loc 1 144 0
 179 0002 0268     		ldr	r2, [r0]
 180 0004 064B     		ldr	r3, .L13
 181 0006 9A42     		cmp	r2, r3
 182 0008 08D1     		bne	.L10
 145:Src/stm32f1xx_hal_msp.c ****   {
 146:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 147:Src/stm32f1xx_hal_msp.c **** 
 148:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 149:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock disable */
 150:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 183              		.loc 1 150 0
 184 000a 064A     		ldr	r2, .L13+4
 185 000c 9369     		ldr	r3, [r2, #24]
 186 000e 23F40073 		bic	r3, r3, #512
 187 0012 9361     		str	r3, [r2, #24]
 151:Src/stm32f1xx_hal_msp.c ****   
 152:Src/stm32f1xx_hal_msp.c ****     /**ADC1 GPIO Configuration    
 153:Src/stm32f1xx_hal_msp.c ****     PA0-WKUP     ------> ADC1_IN0 
 154:Src/stm32f1xx_hal_msp.c ****     */
 155:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 188              		.loc 1 155 0
 189 0014 0448     		ldr	r0, .L13+8
 190              	.LVL7:
 191 0016 0121     		movs	r1, #1
 192 0018 FFF7FEFF 		bl	HAL_GPIO_DeInit
ARM GAS  /tmp/ccDawjSM.s 			page 7


 193              	.LVL8:
 194              	.L10:
 195 001c 08BD     		pop	{r3, pc}
 196              	.L14:
 197 001e 00BF     		.align	2
 198              	.L13:
 199 0020 00240140 		.word	1073816576
 200 0024 00100240 		.word	1073876992
 201 0028 00080140 		.word	1073809408
 202              		.cfi_endproc
 203              	.LFE65:
 205              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 206              		.align	2
 207              		.global	HAL_CAN_MspInit
 208              		.thumb
 209              		.thumb_func
 211              	HAL_CAN_MspInit:
 212              	.LFB66:
 156:Src/stm32f1xx_hal_msp.c **** 
 157:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 158:Src/stm32f1xx_hal_msp.c **** 
 159:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 160:Src/stm32f1xx_hal_msp.c ****   }
 161:Src/stm32f1xx_hal_msp.c **** 
 162:Src/stm32f1xx_hal_msp.c **** }
 163:Src/stm32f1xx_hal_msp.c **** 
 164:Src/stm32f1xx_hal_msp.c **** /**
 165:Src/stm32f1xx_hal_msp.c **** * @brief CAN MSP Initialization
 166:Src/stm32f1xx_hal_msp.c **** * This function configures the hardware resources used in this example
 167:Src/stm32f1xx_hal_msp.c **** * @param hcan: CAN handle pointer
 168:Src/stm32f1xx_hal_msp.c **** * @retval None
 169:Src/stm32f1xx_hal_msp.c **** */
 170:Src/stm32f1xx_hal_msp.c **** void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
 171:Src/stm32f1xx_hal_msp.c **** {
 213              		.loc 1 171 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 24
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              	.LVL9:
 218 0000 30B5     		push	{r4, r5, lr}
 219              	.LCFI6:
 220              		.cfi_def_cfa_offset 12
 221              		.cfi_offset 4, -12
 222              		.cfi_offset 5, -8
 223              		.cfi_offset 14, -4
 224 0002 87B0     		sub	sp, sp, #28
 225              	.LCFI7:
 226              		.cfi_def_cfa_offset 40
 172:Src/stm32f1xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 227              		.loc 1 172 0
 228 0004 0023     		movs	r3, #0
 229 0006 0293     		str	r3, [sp, #8]
 230 0008 0393     		str	r3, [sp, #12]
 231 000a 0493     		str	r3, [sp, #16]
 232 000c 0593     		str	r3, [sp, #20]
 173:Src/stm32f1xx_hal_msp.c ****   if(hcan->Instance==CAN1)
 233              		.loc 1 173 0
ARM GAS  /tmp/ccDawjSM.s 			page 8


 234 000e 0268     		ldr	r2, [r0]
 235 0010 164B     		ldr	r3, .L18
 236 0012 9A42     		cmp	r2, r3
 237 0014 28D1     		bne	.L15
 238              	.LBB7:
 174:Src/stm32f1xx_hal_msp.c ****   {
 175:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspInit 0 */
 176:Src/stm32f1xx_hal_msp.c **** 
 177:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END CAN1_MspInit 0 */
 178:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock enable */
 179:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_CAN1_CLK_ENABLE();
 239              		.loc 1 179 0
 240 0016 03F5D633 		add	r3, r3, #109568
 241 001a DA69     		ldr	r2, [r3, #28]
 242 001c 42F00072 		orr	r2, r2, #33554432
 243 0020 DA61     		str	r2, [r3, #28]
 244 0022 DA69     		ldr	r2, [r3, #28]
 245 0024 02F00072 		and	r2, r2, #33554432
 246 0028 0092     		str	r2, [sp]
 247 002a 009A     		ldr	r2, [sp]
 248              	.LBE7:
 249              	.LBB8:
 180:Src/stm32f1xx_hal_msp.c ****   
 181:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 250              		.loc 1 181 0
 251 002c 9A69     		ldr	r2, [r3, #24]
 252 002e 42F00402 		orr	r2, r2, #4
 253 0032 9A61     		str	r2, [r3, #24]
 254 0034 9B69     		ldr	r3, [r3, #24]
 255 0036 03F00403 		and	r3, r3, #4
 256 003a 0193     		str	r3, [sp, #4]
 257 003c 019B     		ldr	r3, [sp, #4]
 258              	.LBE8:
 182:Src/stm32f1xx_hal_msp.c ****     /**CAN GPIO Configuration    
 183:Src/stm32f1xx_hal_msp.c ****     PA11     ------> CAN_RX
 184:Src/stm32f1xx_hal_msp.c ****     PA12     ------> CAN_TX 
 185:Src/stm32f1xx_hal_msp.c ****     */
 186:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11;
 259              		.loc 1 186 0
 260 003e 06AC     		add	r4, sp, #24
 261 0040 4FF40063 		mov	r3, #2048
 262 0044 44F8103D 		str	r3, [r4, #-16]!
 187:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 188:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 189:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 263              		.loc 1 189 0
 264 0048 094D     		ldr	r5, .L18+4
 265 004a 2846     		mov	r0, r5
 266              	.LVL10:
 267 004c 2146     		mov	r1, r4
 268 004e FFF7FEFF 		bl	HAL_GPIO_Init
 269              	.LVL11:
 190:Src/stm32f1xx_hal_msp.c **** 
 191:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_12;
 270              		.loc 1 191 0
 271 0052 4FF48053 		mov	r3, #4096
 272 0056 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccDawjSM.s 			page 9


 192:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 273              		.loc 1 192 0
 274 0058 0223     		movs	r3, #2
 275 005a 0393     		str	r3, [sp, #12]
 193:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 276              		.loc 1 193 0
 277 005c 0323     		movs	r3, #3
 278 005e 0593     		str	r3, [sp, #20]
 194:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 279              		.loc 1 194 0
 280 0060 2846     		mov	r0, r5
 281 0062 2146     		mov	r1, r4
 282 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 283              	.LVL12:
 284              	.L15:
 195:Src/stm32f1xx_hal_msp.c **** 
 196:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspInit 1 */
 197:Src/stm32f1xx_hal_msp.c **** 
 198:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END CAN1_MspInit 1 */
 199:Src/stm32f1xx_hal_msp.c ****   }
 200:Src/stm32f1xx_hal_msp.c **** 
 201:Src/stm32f1xx_hal_msp.c **** }
 285              		.loc 1 201 0
 286 0068 07B0     		add	sp, sp, #28
 287              	.LCFI8:
 288              		.cfi_def_cfa_offset 12
 289              		@ sp needed
 290 006a 30BD     		pop	{r4, r5, pc}
 291              	.L19:
 292              		.align	2
 293              	.L18:
 294 006c 00640040 		.word	1073767424
 295 0070 00080140 		.word	1073809408
 296              		.cfi_endproc
 297              	.LFE66:
 299              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 300              		.align	2
 301              		.global	HAL_CAN_MspDeInit
 302              		.thumb
 303              		.thumb_func
 305              	HAL_CAN_MspDeInit:
 306              	.LFB67:
 202:Src/stm32f1xx_hal_msp.c **** 
 203:Src/stm32f1xx_hal_msp.c **** /**
 204:Src/stm32f1xx_hal_msp.c **** * @brief CAN MSP De-Initialization
 205:Src/stm32f1xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 206:Src/stm32f1xx_hal_msp.c **** * @param hcan: CAN handle pointer
 207:Src/stm32f1xx_hal_msp.c **** * @retval None
 208:Src/stm32f1xx_hal_msp.c **** */
 209:Src/stm32f1xx_hal_msp.c **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
 210:Src/stm32f1xx_hal_msp.c **** {
 307              		.loc 1 210 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              	.LVL13:
 312 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccDawjSM.s 			page 10


 313              	.LCFI9:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 3, -8
 316              		.cfi_offset 14, -4
 211:Src/stm32f1xx_hal_msp.c ****   if(hcan->Instance==CAN1)
 317              		.loc 1 211 0
 318 0002 0268     		ldr	r2, [r0]
 319 0004 064B     		ldr	r3, .L23
 320 0006 9A42     		cmp	r2, r3
 321 0008 09D1     		bne	.L20
 212:Src/stm32f1xx_hal_msp.c ****   {
 213:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspDeInit 0 */
 214:Src/stm32f1xx_hal_msp.c **** 
 215:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END CAN1_MspDeInit 0 */
 216:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock disable */
 217:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_CAN1_CLK_DISABLE();
 322              		.loc 1 217 0
 323 000a 064A     		ldr	r2, .L23+4
 324 000c D369     		ldr	r3, [r2, #28]
 325 000e 23F00073 		bic	r3, r3, #33554432
 326 0012 D361     		str	r3, [r2, #28]
 218:Src/stm32f1xx_hal_msp.c ****   
 219:Src/stm32f1xx_hal_msp.c ****     /**CAN GPIO Configuration    
 220:Src/stm32f1xx_hal_msp.c ****     PA11     ------> CAN_RX
 221:Src/stm32f1xx_hal_msp.c ****     PA12     ------> CAN_TX 
 222:Src/stm32f1xx_hal_msp.c ****     */
 223:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);
 327              		.loc 1 223 0
 328 0014 0448     		ldr	r0, .L23+8
 329              	.LVL14:
 330 0016 4FF4C051 		mov	r1, #6144
 331 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 332              	.LVL15:
 333              	.L20:
 334 001e 08BD     		pop	{r3, pc}
 335              	.L24:
 336              		.align	2
 337              	.L23:
 338 0020 00640040 		.word	1073767424
 339 0024 00100240 		.word	1073876992
 340 0028 00080140 		.word	1073809408
 341              		.cfi_endproc
 342              	.LFE67:
 344              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 345              		.align	2
 346              		.global	HAL_SPI_MspInit
 347              		.thumb
 348              		.thumb_func
 350              	HAL_SPI_MspInit:
 351              	.LFB68:
 224:Src/stm32f1xx_hal_msp.c **** 
 225:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspDeInit 1 */
 226:Src/stm32f1xx_hal_msp.c **** 
 227:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END CAN1_MspDeInit 1 */
 228:Src/stm32f1xx_hal_msp.c ****   }
 229:Src/stm32f1xx_hal_msp.c **** 
 230:Src/stm32f1xx_hal_msp.c **** }
ARM GAS  /tmp/ccDawjSM.s 			page 11


 231:Src/stm32f1xx_hal_msp.c **** 
 232:Src/stm32f1xx_hal_msp.c **** /**
 233:Src/stm32f1xx_hal_msp.c **** * @brief SPI MSP Initialization
 234:Src/stm32f1xx_hal_msp.c **** * This function configures the hardware resources used in this example
 235:Src/stm32f1xx_hal_msp.c **** * @param hspi: SPI handle pointer
 236:Src/stm32f1xx_hal_msp.c **** * @retval None
 237:Src/stm32f1xx_hal_msp.c **** */
 238:Src/stm32f1xx_hal_msp.c **** void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
 239:Src/stm32f1xx_hal_msp.c **** {
 352              		.loc 1 239 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 24
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              	.LVL16:
 357 0000 10B5     		push	{r4, lr}
 358              	.LCFI10:
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 4, -8
 361              		.cfi_offset 14, -4
 362 0002 86B0     		sub	sp, sp, #24
 363              	.LCFI11:
 364              		.cfi_def_cfa_offset 32
 240:Src/stm32f1xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 365              		.loc 1 240 0
 366 0004 0023     		movs	r3, #0
 367 0006 0293     		str	r3, [sp, #8]
 368 0008 0393     		str	r3, [sp, #12]
 369 000a 0493     		str	r3, [sp, #16]
 370 000c 0593     		str	r3, [sp, #20]
 241:Src/stm32f1xx_hal_msp.c ****   if(hspi->Instance==SPI1)
 371              		.loc 1 241 0
 372 000e 0268     		ldr	r2, [r0]
 373 0010 164B     		ldr	r3, .L28
 374 0012 9A42     		cmp	r2, r3
 375 0014 27D1     		bne	.L25
 376              	.LBB9:
 242:Src/stm32f1xx_hal_msp.c ****   {
 243:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN SPI1_MspInit 0 */
 244:Src/stm32f1xx_hal_msp.c **** 
 245:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END SPI1_MspInit 0 */
 246:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock enable */
 247:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_SPI1_CLK_ENABLE();
 377              		.loc 1 247 0
 378 0016 03F56043 		add	r3, r3, #57344
 379 001a 9A69     		ldr	r2, [r3, #24]
 380 001c 42F48052 		orr	r2, r2, #4096
 381 0020 9A61     		str	r2, [r3, #24]
 382 0022 9A69     		ldr	r2, [r3, #24]
 383 0024 02F48052 		and	r2, r2, #4096
 384 0028 0092     		str	r2, [sp]
 385 002a 009A     		ldr	r2, [sp]
 386              	.LBE9:
 387              	.LBB10:
 248:Src/stm32f1xx_hal_msp.c ****   
 249:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 388              		.loc 1 249 0
 389 002c 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp/ccDawjSM.s 			page 12


 390 002e 42F00402 		orr	r2, r2, #4
 391 0032 9A61     		str	r2, [r3, #24]
 392 0034 9B69     		ldr	r3, [r3, #24]
 393 0036 03F00403 		and	r3, r3, #4
 394 003a 0193     		str	r3, [sp, #4]
 395 003c 019B     		ldr	r3, [sp, #4]
 396              	.LBE10:
 250:Src/stm32f1xx_hal_msp.c ****     /**SPI1 GPIO Configuration    
 251:Src/stm32f1xx_hal_msp.c ****     PA4     ------> SPI1_NSS
 252:Src/stm32f1xx_hal_msp.c ****     PA5     ------> SPI1_SCK
 253:Src/stm32f1xx_hal_msp.c ****     PA6     ------> SPI1_MISO
 254:Src/stm32f1xx_hal_msp.c ****     PA7     ------> SPI1_MOSI 
 255:Src/stm32f1xx_hal_msp.c ****     */
 256:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_7;
 397              		.loc 1 256 0
 398 003e B023     		movs	r3, #176
 399 0040 0293     		str	r3, [sp, #8]
 257:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 400              		.loc 1 257 0
 401 0042 0223     		movs	r3, #2
 402 0044 0393     		str	r3, [sp, #12]
 258:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 403              		.loc 1 258 0
 404 0046 0323     		movs	r3, #3
 405 0048 0593     		str	r3, [sp, #20]
 259:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 406              		.loc 1 259 0
 407 004a 094C     		ldr	r4, .L28+4
 408 004c 2046     		mov	r0, r4
 409              	.LVL17:
 410 004e 02A9     		add	r1, sp, #8
 411 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 412              	.LVL18:
 260:Src/stm32f1xx_hal_msp.c **** 
 261:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_6;
 413              		.loc 1 261 0
 414 0054 4023     		movs	r3, #64
 415 0056 0293     		str	r3, [sp, #8]
 262:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 416              		.loc 1 262 0
 417 0058 0023     		movs	r3, #0
 418 005a 0393     		str	r3, [sp, #12]
 263:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 419              		.loc 1 263 0
 420 005c 0493     		str	r3, [sp, #16]
 264:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 421              		.loc 1 264 0
 422 005e 2046     		mov	r0, r4
 423 0060 02A9     		add	r1, sp, #8
 424 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 425              	.LVL19:
 426              	.L25:
 265:Src/stm32f1xx_hal_msp.c **** 
 266:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN SPI1_MspInit 1 */
 267:Src/stm32f1xx_hal_msp.c **** 
 268:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END SPI1_MspInit 1 */
 269:Src/stm32f1xx_hal_msp.c ****   }
ARM GAS  /tmp/ccDawjSM.s 			page 13


 270:Src/stm32f1xx_hal_msp.c **** 
 271:Src/stm32f1xx_hal_msp.c **** }
 427              		.loc 1 271 0
 428 0066 06B0     		add	sp, sp, #24
 429              	.LCFI12:
 430              		.cfi_def_cfa_offset 8
 431              		@ sp needed
 432 0068 10BD     		pop	{r4, pc}
 433              	.L29:
 434 006a 00BF     		.align	2
 435              	.L28:
 436 006c 00300140 		.word	1073819648
 437 0070 00080140 		.word	1073809408
 438              		.cfi_endproc
 439              	.LFE68:
 441              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 442              		.align	2
 443              		.global	HAL_SPI_MspDeInit
 444              		.thumb
 445              		.thumb_func
 447              	HAL_SPI_MspDeInit:
 448              	.LFB69:
 272:Src/stm32f1xx_hal_msp.c **** 
 273:Src/stm32f1xx_hal_msp.c **** /**
 274:Src/stm32f1xx_hal_msp.c **** * @brief SPI MSP De-Initialization
 275:Src/stm32f1xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 276:Src/stm32f1xx_hal_msp.c **** * @param hspi: SPI handle pointer
 277:Src/stm32f1xx_hal_msp.c **** * @retval None
 278:Src/stm32f1xx_hal_msp.c **** */
 279:Src/stm32f1xx_hal_msp.c **** void HAL_SPI_MspDeInit(SPI_HandleTypeDef* hspi)
 280:Src/stm32f1xx_hal_msp.c **** {
 449              		.loc 1 280 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              	.LVL20:
 454 0000 08B5     		push	{r3, lr}
 455              	.LCFI13:
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 3, -8
 458              		.cfi_offset 14, -4
 281:Src/stm32f1xx_hal_msp.c ****   if(hspi->Instance==SPI1)
 459              		.loc 1 281 0
 460 0002 0268     		ldr	r2, [r0]
 461 0004 064B     		ldr	r3, .L33
 462 0006 9A42     		cmp	r2, r3
 463 0008 08D1     		bne	.L30
 282:Src/stm32f1xx_hal_msp.c ****   {
 283:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN SPI1_MspDeInit 0 */
 284:Src/stm32f1xx_hal_msp.c **** 
 285:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END SPI1_MspDeInit 0 */
 286:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock disable */
 287:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_SPI1_CLK_DISABLE();
 464              		.loc 1 287 0
 465 000a 064A     		ldr	r2, .L33+4
 466 000c 9369     		ldr	r3, [r2, #24]
 467 000e 23F48053 		bic	r3, r3, #4096
ARM GAS  /tmp/ccDawjSM.s 			page 14


 468 0012 9361     		str	r3, [r2, #24]
 288:Src/stm32f1xx_hal_msp.c ****   
 289:Src/stm32f1xx_hal_msp.c ****     /**SPI1 GPIO Configuration    
 290:Src/stm32f1xx_hal_msp.c ****     PA4     ------> SPI1_NSS
 291:Src/stm32f1xx_hal_msp.c ****     PA5     ------> SPI1_SCK
 292:Src/stm32f1xx_hal_msp.c ****     PA6     ------> SPI1_MISO
 293:Src/stm32f1xx_hal_msp.c ****     PA7     ------> SPI1_MOSI 
 294:Src/stm32f1xx_hal_msp.c ****     */
 295:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
 469              		.loc 1 295 0
 470 0014 0448     		ldr	r0, .L33+8
 471              	.LVL21:
 472 0016 F021     		movs	r1, #240
 473 0018 FFF7FEFF 		bl	HAL_GPIO_DeInit
 474              	.LVL22:
 475              	.L30:
 476 001c 08BD     		pop	{r3, pc}
 477              	.L34:
 478 001e 00BF     		.align	2
 479              	.L33:
 480 0020 00300140 		.word	1073819648
 481 0024 00100240 		.word	1073876992
 482 0028 00080140 		.word	1073809408
 483              		.cfi_endproc
 484              	.LFE69:
 486              		.text
 487              	.Letext0:
 488              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 489              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 490              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 491              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 492              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 493              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 494              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 495              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 496              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 497              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 498              		.file 12 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/ccDawjSM.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_msp.c
     /tmp/ccDawjSM.s:19     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccDawjSM.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccDawjSM.s:76     .text.HAL_MspInit:000000000000003c $d
     /tmp/ccDawjSM.s:82     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccDawjSM.s:87     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccDawjSM.s:155    .text.HAL_ADC_MspInit:0000000000000054 $d
     /tmp/ccDawjSM.s:161    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccDawjSM.s:166    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccDawjSM.s:199    .text.HAL_ADC_MspDeInit:0000000000000020 $d
     /tmp/ccDawjSM.s:206    .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/ccDawjSM.s:211    .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/ccDawjSM.s:294    .text.HAL_CAN_MspInit:000000000000006c $d
     /tmp/ccDawjSM.s:300    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/ccDawjSM.s:305    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/ccDawjSM.s:338    .text.HAL_CAN_MspDeInit:0000000000000020 $d
     /tmp/ccDawjSM.s:345    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccDawjSM.s:350    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccDawjSM.s:436    .text.HAL_SPI_MspInit:000000000000006c $d
     /tmp/ccDawjSM.s:442    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccDawjSM.s:447    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccDawjSM.s:480    .text.HAL_SPI_MspDeInit:0000000000000020 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_DeInit
