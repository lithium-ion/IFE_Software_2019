ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB79:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
   2:Src/main.c    **** #include "main.h"
   3:Src/main.c    **** 
   4:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
   5:Src/main.c    **** /* USER CODE BEGIN Includes */
   6:Src/main.c    **** 
   7:Src/main.c    **** /* USER CODE END Includes */
   8:Src/main.c    **** 
   9:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  10:Src/main.c    **** /* USER CODE BEGIN PTD */
  11:Src/main.c    **** 
  12:Src/main.c    **** /* USER CODE END PTD */
  13:Src/main.c    **** 
  14:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  15:Src/main.c    **** /* USER CODE BEGIN PD */
  16:Src/main.c    **** 
  17:Src/main.c    **** /* USER CODE END PD */
  18:Src/main.c    **** 
  19:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  20:Src/main.c    **** /* USER CODE BEGIN PM */
  21:Src/main.c    **** 
  22:Src/main.c    **** /* USER CODE END PM */
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  25:Src/main.c    **** ADC_HandleTypeDef hadc1;
  26:Src/main.c    **** 
  27:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  28:Src/main.c    **** 
  29:Src/main.c    **** SPI_HandleTypeDef hspi1;
  30:Src/main.c    **** 
  31:Src/main.c    **** TIM_HandleTypeDef htim2;
  32:Src/main.c    **** TIM_HandleTypeDef htim3;
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** UART_HandleTypeDef huart1;
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE BEGIN PV */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* parameter list:
  39:Src/main.c    **** 
  40:Src/main.c    **** PID: Kp, Ki, Kd, update rate (TIM)
  41:Src/main.c    **** EXTI: TIM frequency, timeout value
  42:Src/main.c    **** 
  43:Src/main.c    **** pot i2c address
  44:Src/main.c    **** 
  45:Src/main.c    **** EXTI0 = front left wheel
  46:Src/main.c    **** EXTI1 = front right wheel
  47:Src/main.c    **** EXTI2 = back left wheel
  48:Src/main.c    **** EXTI3 = back right wheel
  49:Src/main.c    **** TIM2 = freq measurement timer
  50:Src/main.c    **** TIM3 = PID timer
  51:Src/main.c    **** 
  52:Src/main.c    **** timeout - if count == 3, reset count, freq = 0
  53:Src/main.c    **** 
  54:Src/main.c    **** 
  55:Src/main.c    **** */
  56:Src/main.c    **** 
  57:Src/main.c    **** int setpoint = 0;
  58:Src/main.c    **** int bias = 50;
  59:Src/main.c    **** 
  60:Src/main.c    **** float kp = 1;
  61:Src/main.c    **** float ki = 0;
  62:Src/main.c    **** float kd = 0; 
  63:Src/main.c    **** int pid_rate = 25; // Hz
  64:Src/main.c    **** float dt = 0.04;
  65:Src/main.c    **** 
  66:Src/main.c    **** float integral = 0;
  67:Src/main.c    **** float derivative = 0;
  68:Src/main.c    **** 
  69:Src/main.c    **** int control = 0;
  70:Src/main.c    **** int slip = 0;
  71:Src/main.c    **** int error = 0;
  72:Src/main.c    **** int prev_error = 0;
  73:Src/main.c    **** int front_avg = 0;
  74:Src/main.c    **** int back_avg = 0;
  75:Src/main.c    **** 
  76:Src/main.c    **** int tc_on = 1;
  77:Src/main.c    **** 
  78:Src/main.c    **** //front left wheel
  79:Src/main.c    **** wheel_t fl = {0, 0, 0, 0, 0};
  80:Src/main.c    **** wheel_t fr = {0, 0, 0, 0, 0};
  81:Src/main.c    **** wheel_t bl = {0, 0, 0, 0, 0};
  82:Src/main.c    **** wheel_t br = {0, 0, 0, 0, 0};
  83:Src/main.c    **** 
  84:Src/main.c    **** // traction control code
  85:Src/main.c    **** uint8_t traction_control_count = 0;
  86:Src/main.c    **** 
  87:Src/main.c    **** /* USER CODE END PV */
  88:Src/main.c    **** 
  89:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 3


  90:Src/main.c    **** void SystemClock_Config(void);
  91:Src/main.c    **** static void MX_GPIO_Init(void);
  92:Src/main.c    **** static void MX_I2C1_Init(void);
  93:Src/main.c    **** static void MX_SPI1_Init(void);
  94:Src/main.c    **** static void MX_USART1_UART_Init(void);
  95:Src/main.c    **** static void MX_TIM2_Init(void);
  96:Src/main.c    **** static void MX_ADC1_Init(void);
  97:Src/main.c    **** static void MX_TIM3_Init(void);
  98:Src/main.c    **** /* USER CODE BEGIN PFP */
  99:Src/main.c    **** void UpdateWheel(wheel_t * const wheel) __attribute__((hot));
 100:Src/main.c    **** /* USER CODE END PFP */
 101:Src/main.c    **** 
 102:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 103:Src/main.c    **** /* USER CODE BEGIN 0 */
 104:Src/main.c    **** 
 105:Src/main.c    **** /* USER CODE END 0 */
 106:Src/main.c    **** 
 107:Src/main.c    **** /**
 108:Src/main.c    ****   * @brief  The application entry point.
 109:Src/main.c    ****   * @retval int
 110:Src/main.c    ****   */
 111:Src/main.c    **** int main(void)
 112:Src/main.c    **** {
 113:Src/main.c    ****   /* USER CODE BEGIN 1 */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE END 1 */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 120:Src/main.c    ****   HAL_Init();
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE BEGIN Init */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* USER CODE END Init */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* Configure the system clock */
 127:Src/main.c    ****   SystemClock_Config();
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* USER CODE END SysInit */
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* Initialize all configured peripherals */
 134:Src/main.c    ****   MX_GPIO_Init();
 135:Src/main.c    ****   MX_I2C1_Init();
 136:Src/main.c    ****   MX_SPI1_Init();
 137:Src/main.c    ****   MX_USART1_UART_Init();
 138:Src/main.c    ****   MX_TIM2_Init();
 139:Src/main.c    ****   MX_ADC1_Init();
 140:Src/main.c    ****   MX_TIM3_Init();
 141:Src/main.c    ****   /* USER CODE BEGIN 2 */
 142:Src/main.c    ****   unsigned char data[1];
 143:Src/main.c    ****   /* USER CODE END 2 */
 144:Src/main.c    **** 
 145:Src/main.c    ****   /* Infinite loop */
 146:Src/main.c    ****   /* USER CODE BEGIN WHILE */
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 4


 147:Src/main.c    ****   while (1)
 148:Src/main.c    ****   {
 149:Src/main.c    ****     /* USER CODE END WHILE */
 150:Src/main.c    **** 	
 151:Src/main.c    **** 	/* if (tc_on) PID_controller();
 152:Src/main.c    **** 	else I = 0, send lowest R over I2C */
 153:Src/main.c    **** 	// PID interrupt still runs when TC is off, but the value isn't sent
 154:Src/main.c    **** 	
 155:Src/main.c    **** 	fl.freq = 40000 / fl.delta;
 156:Src/main.c    **** 	fr.freq = 40000 / fr.delta;
 157:Src/main.c    **** 	bl.freq = 40000 / bl.delta;
 158:Src/main.c    **** 	br.freq = 40000 / br.delta;
 159:Src/main.c    **** 	
 160:Src/main.c    **** 	if (fl.count >= 2) fl.freq = 0;
 161:Src/main.c    **** 	if (fr.count >= 2) fr.freq = 0;
 162:Src/main.c    **** 	if (bl.count >= 2) bl.freq = 0;
 163:Src/main.c    **** 	if (br.count >= 2) br.freq = 0;
 164:Src/main.c    **** 	
 165:Src/main.c    **** 	front_avg = (fl.freq + fr.freq) / 2;
 166:Src/main.c    **** 	back_avg = (bl.freq + br.freq) / 2;
 167:Src/main.c    **** 	
 168:Src/main.c    **** 	slip = front_avg - back_avg;
 169:Src/main.c    **** 	
 170:Src/main.c    **** 	prev_error = error;
 171:Src/main.c    **** 	error = slip - setpoint;
 172:Src/main.c    **** 	
 173:Src/main.c    **** 	if (slip == 0) HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 174:Src/main.c    **** 	
 175:Src/main.c    **** 	if (control < 0) control = 0;
 176:Src/main.c    **** 	if (control > 255) control = 255;
 177:Src/main.c    **** 	
 178:Src/main.c    **** 	/*unsigned char spi_data[2];
 179:Src/main.c    **** 	spi_data[0] = 0;
 180:Src/main.c    **** 	spi_data[1] = 255;
 181:Src/main.c    **** 	HAL_SPI_Transmit(&hspi1, spi_data, sizeof(spi_data), 1000);*/
 182:Src/main.c    **** 	
 183:Src/main.c    **** 	unsigned char data[2];
 184:Src/main.c    **** 	data[0] = 0x00;
 185:Src/main.c    **** 	data[1] = control;
 186:Src/main.c    **** 	if (HAL_I2C_Master_Transmit(&hi2c1, (0b0101111)<<1, data, sizeof(data), 1000) == HAL_OK)
 187:Src/main.c    **** 	{
 188:Src/main.c    **** 		//HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 189:Src/main.c    **** 	}
 190:Src/main.c    **** 	
 191:Src/main.c    **** 	data[0] = error;
 192:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data, sizeof(data), 1000);
 193:Src/main.c    **** 	HAL_Delay(50);
 194:Src/main.c    **** 	
 195:Src/main.c    **** 	
 196:Src/main.c    **** 	/*data[0] = fl_freq;
 197:Src/main.c    **** 	data[1] = 0xFF;
 198:Src/main.c    **** 	data[2] = fr_freq;
 199:Src/main.c    **** 	data[3] = 0xFF;
 200:Src/main.c    **** 	data[4] = bl_freq;
 201:Src/main.c    **** 	data[5] = 0xFF;
 202:Src/main.c    **** 	data[6] = br_freq;
 203:Src/main.c    **** 	data[7] = 0xFF;
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 5


 204:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data, sizeof(data), 1000);
 205:Src/main.c    **** 	HAL_Delay(500);*/
 206:Src/main.c    **** 	
 207:Src/main.c    **** 	
 208:Src/main.c    **** 	
 209:Src/main.c    ****     /* USER CODE BEGIN 3 */
 210:Src/main.c    ****   }
 211:Src/main.c    ****   /* USER CODE END 3 */
 212:Src/main.c    **** }
 213:Src/main.c    **** 
 214:Src/main.c    **** void UpdateWheel(wheel_t* const wheel) {
 215:Src/main.c    ****   wheel->new = __HAL_TIM_GET_COUNTER(&htim2);
 216:Src/main.c    ****   wheel->delta = wheel->new - wheel->old + 40000 * wheel->count;
 217:Src/main.c    ****   wheel->old = wheel->new;
 218:Src/main.c    ****   wheel->count = 0;
 219:Src/main.c    ****   traction_control_count = 0;
 220:Src/main.c    ****   /* USER CODE END EXTI0_IRQn 0 */
 221:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 222:Src/main.c    **** }
 223:Src/main.c    **** 
 224:Src/main.c    **** /******************************************************************************/
 225:Src/main.c    **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 226:Src/main.c    **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 227:Src/main.c    **** /* For the available peripheral interrupt handler names,                      */
 228:Src/main.c    **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 229:Src/main.c    **** /******************************************************************************/
 230:Src/main.c    **** 
 231:Src/main.c    **** /**
 232:Src/main.c    ****   * @brief This function handles EXTI line0 interrupt.
 233:Src/main.c    ****   */
 234:Src/main.c    **** void EXTI0_IRQHandler(void)
 235:Src/main.c    **** {
 236:Src/main.c    ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 237:Src/main.c    ****   UpdateWheel(&fl);
 238:Src/main.c    ****   /* USER CODE END EXTI0_IRQn 0 */
 239:Src/main.c    ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 240:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 241:Src/main.c    ****   /* USER CODE END EXTI0_IRQn 1 */
 242:Src/main.c    **** }
 243:Src/main.c    **** 
 244:Src/main.c    **** /**
 245:Src/main.c    ****   * @brief This function handles EXTI line1 interrupt.
 246:Src/main.c    ****   */
 247:Src/main.c    **** void EXTI1_IRQHandler(void)
 248:Src/main.c    **** {
 249:Src/main.c    ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 250:Src/main.c    ****   UpdateWheel(&fr);
 251:Src/main.c    ****  /* USER CODE END EXTI1_IRQn 0 */
 252:Src/main.c    ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 253:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 254:Src/main.c    ****   /* USER CODE END EXTI1_IRQn 1 */
 255:Src/main.c    **** }
 256:Src/main.c    **** 
 257:Src/main.c    **** /**
 258:Src/main.c    ****   * @brief This function handles EXTI line2 interrupt.
 259:Src/main.c    ****   */
 260:Src/main.c    **** void EXTI2_IRQHandler(void)
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 6


 261:Src/main.c    **** {
 262:Src/main.c    ****   /* USER CODE BEGIN EXTI2_IRQn 0 */
 263:Src/main.c    ****   UpdateWheel(&bl);
 264:Src/main.c    ****   /* USER CODE END EXTI2_IRQn 0 */
 265:Src/main.c    ****   /* USER CODE BEGIN EXTI2_IRQn 1 */
 266:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 267:Src/main.c    ****   /* USER CODE END EXTI2_IRQn 1 */
 268:Src/main.c    **** }
 269:Src/main.c    **** 
 270:Src/main.c    **** /**
 271:Src/main.c    ****   * @brief This function handles EXTI line3 interrupt.
 272:Src/main.c    ****   */
 273:Src/main.c    **** void EXTI3_IRQHandler(void)
 274:Src/main.c    **** {
 275:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 276:Src/main.c    ****   UpdateWheel(&br);
 277:Src/main.c    ****   /* USER CODE END EXTI3_IRQn 0 */
 278:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 279:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 280:Src/main.c    **** 
 281:Src/main.c    ****   /* USER CODE END EXTI3_IRQn 1 */
 282:Src/main.c    **** }
 283:Src/main.c    **** 
 284:Src/main.c    **** /**
 285:Src/main.c    ****   * @brief This function handles TIM2 global interrupt.
 286:Src/main.c    ****   */
 287:Src/main.c    **** void TIM2_IRQHandler(void)
 288:Src/main.c    **** {
 289:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 290:Src/main.c    ****   fl.count++;
 291:Src/main.c    ****   fr.count++;
 292:Src/main.c    ****   bl.count++;
 293:Src/main.c    ****   br.count++;
 294:Src/main.c    ****   /* USER CODE END TIM2_IRQn 0 */
 295:Src/main.c    ****   HAL_TIM_IRQHandler(&htim2);
 296:Src/main.c    ****   // If traction control is greater than the max, set to TRACTION_DISABLE_COUNT+1
 297:Src/main.c    ****   traction_control_count = MIN(TRACTION_DISABLE_COUNT + 1, traction_control_count++);
 298:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 299:Src/main.c    **** 
 300:Src/main.c    ****   /* USER CODE END TIM2_IRQn 1 */
 301:Src/main.c    **** }
 302:Src/main.c    **** 
 303:Src/main.c    **** /**
 304:Src/main.c    ****   * @brief This function handles TIM3 global interrupt.
 305:Src/main.c    ****   */
 306:Src/main.c    **** void TIM3_IRQHandler(void)
 307:Src/main.c    **** {
 308:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 309:Src/main.c    ****   // calculate I, D, and control value (need this here because otherwise P would update faster)
 310:Src/main.c    ****   integral += dt * error;
 311:Src/main.c    ****   derivative = (error - prev_error) / dt;
 312:Src/main.c    ****   
 313:Src/main.c    ****   control = traction_control_count > TRACTION_DISABLE_COUNT 
 314:Src/main.c    **** 	  ? MAX_CONTROL_VALUE 
 315:Src/main.c    **** 	  : bias + kp * error + ki * integral + kd * derivative;
 316:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 317:Src/main.c    ****   HAL_TIM_IRQHandler(&htim3);
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 7


 318:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 319:Src/main.c    **** 
 320:Src/main.c    ****   /* USER CODE END TIM3_IRQn 1 */
 321:Src/main.c    **** }
 322:Src/main.c    **** 
 323:Src/main.c    **** /**
 324:Src/main.c    ****   * @brief This function handles SPI1 global interrupt.
 325:Src/main.c    ****   */
 326:Src/main.c    **** void SPI1_IRQHandler(void)
 327:Src/main.c    **** {
 328:Src/main.c    ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 329:Src/main.c    **** 
 330:Src/main.c    ****   /* USER CODE END SPI1_IRQn 0 */
 331:Src/main.c    ****   HAL_SPI_IRQHandler(&hspi1);
 332:Src/main.c    ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 333:Src/main.c    **** 
 334:Src/main.c    ****   /* USER CODE END SPI1_IRQn 1 */
 335:Src/main.c    **** }
 336:Src/main.c    **** 
 337:Src/main.c    **** /**
 338:Src/main.c    ****   * @brief System Clock Configuration
 339:Src/main.c    ****   * @retval None
 340:Src/main.c    ****   */
 341:Src/main.c    **** void SystemClock_Config(void)
 342:Src/main.c    **** {
 343:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 344:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 345:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 346:Src/main.c    **** 
 347:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 348:Src/main.c    ****   */
 349:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 350:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 351:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 352:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 353:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 354:Src/main.c    ****   {
 355:Src/main.c    ****     Error_Handler();
 356:Src/main.c    ****   }
 357:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 358:Src/main.c    ****   */
 359:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 360:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 361:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 362:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 363:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 364:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 365:Src/main.c    **** 
 366:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 367:Src/main.c    ****   {
 368:Src/main.c    ****     Error_Handler();
 369:Src/main.c    ****   }
 370:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 371:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 372:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 373:Src/main.c    ****   {
 374:Src/main.c    ****     Error_Handler();
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 8


 375:Src/main.c    ****   }
 376:Src/main.c    **** }
 377:Src/main.c    **** 
 378:Src/main.c    **** /**
 379:Src/main.c    ****   * @brief ADC1 Initialization Function
 380:Src/main.c    ****   * @param None
 381:Src/main.c    ****   * @retval None
 382:Src/main.c    ****   */
 383:Src/main.c    **** static void MX_ADC1_Init(void)
 384:Src/main.c    **** {
 385:Src/main.c    **** 
 386:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 387:Src/main.c    **** 
 388:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 389:Src/main.c    **** 
 390:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 391:Src/main.c    **** 
 392:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 393:Src/main.c    **** 
 394:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 395:Src/main.c    ****   /**Common config 
 396:Src/main.c    ****   */
 397:Src/main.c    ****   hadc1.Instance = ADC1;
 398:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 399:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 400:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 401:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 402:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 403:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 404:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 405:Src/main.c    ****   {
 406:Src/main.c    ****     Error_Handler();
 407:Src/main.c    ****   }
 408:Src/main.c    ****   /**Configure Regular Channel 
 409:Src/main.c    ****   */
 410:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 411:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 412:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 413:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 414:Src/main.c    ****   {
 415:Src/main.c    ****     Error_Handler();
 416:Src/main.c    ****   }
 417:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 418:Src/main.c    **** 
 419:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 420:Src/main.c    **** 
 421:Src/main.c    **** }
 422:Src/main.c    **** 
 423:Src/main.c    **** /**
 424:Src/main.c    ****   * @brief I2C1 Initialization Function
 425:Src/main.c    ****   * @param None
 426:Src/main.c    ****   * @retval None
 427:Src/main.c    ****   */
 428:Src/main.c    **** static void MX_I2C1_Init(void)
 429:Src/main.c    **** {
 430:Src/main.c    **** 
 431:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 0 */
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 9


 432:Src/main.c    **** 
 433:Src/main.c    ****   /* USER CODE END I2C1_Init 0 */
 434:Src/main.c    **** 
 435:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 1 */
 436:Src/main.c    **** 
 437:Src/main.c    ****   /* USER CODE END I2C1_Init 1 */
 438:Src/main.c    ****   hi2c1.Instance = I2C1;
 439:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 440:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 441:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 442:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 443:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 444:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 445:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 446:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 447:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 448:Src/main.c    ****   {
 449:Src/main.c    ****     Error_Handler();
 450:Src/main.c    ****   }
 451:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 2 */
 452:Src/main.c    **** 
 453:Src/main.c    ****   /* USER CODE END I2C1_Init 2 */
 454:Src/main.c    **** 
 455:Src/main.c    **** }
 456:Src/main.c    **** 
 457:Src/main.c    **** /**
 458:Src/main.c    ****   * @brief SPI1 Initialization Function
 459:Src/main.c    ****   * @param None
 460:Src/main.c    ****   * @retval None
 461:Src/main.c    ****   */
 462:Src/main.c    **** static void MX_SPI1_Init(void)
 463:Src/main.c    **** {
 464:Src/main.c    **** 
 465:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 466:Src/main.c    **** 
 467:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 468:Src/main.c    **** 
 469:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 470:Src/main.c    **** 
 471:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 472:Src/main.c    ****   /* SPI1 parameter configuration*/
 473:Src/main.c    ****   hspi1.Instance = SPI1;
 474:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER; // change to slave later
 475:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 476:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 477:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 478:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 479:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 480:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 481:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 482:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 483:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 484:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 485:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 486:Src/main.c    ****   {
 487:Src/main.c    ****     Error_Handler();
 488:Src/main.c    ****   }
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 10


 489:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 490:Src/main.c    **** 
 491:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 492:Src/main.c    **** 
 493:Src/main.c    **** }
 494:Src/main.c    **** 
 495:Src/main.c    **** /**
 496:Src/main.c    ****   * @brief TIM2 Initialization Function
 497:Src/main.c    ****   * @param None
 498:Src/main.c    ****   * @retval None
 499:Src/main.c    ****   */
 500:Src/main.c    **** static void MX_TIM2_Init(void)
 501:Src/main.c    **** {
 502:Src/main.c    **** 
 503:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 504:Src/main.c    **** 
 505:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 506:Src/main.c    **** 
 507:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 508:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 509:Src/main.c    **** 
 510:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 511:Src/main.c    **** 
 512:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 513:Src/main.c    ****   htim2.Instance = TIM2;
 514:Src/main.c    ****   htim2.Init.Prescaler = 200-1;
 515:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 516:Src/main.c    ****   htim2.Init.Period = 40000;
 517:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 518:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 519:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 520:Src/main.c    ****   {
 521:Src/main.c    ****     Error_Handler();
 522:Src/main.c    ****   }
 523:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 524:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 525:Src/main.c    ****   {
 526:Src/main.c    ****     Error_Handler();
 527:Src/main.c    ****   }
 528:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 529:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 530:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 531:Src/main.c    ****   {
 532:Src/main.c    ****     Error_Handler();
 533:Src/main.c    ****   }
 534:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 535:Src/main.c    ****   //HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 536:Src/main.c    ****   //HAL_NVIC_EnableIRQ(TIM2_IRQn);
 537:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 538:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 539:Src/main.c    **** 
 540:Src/main.c    **** }
 541:Src/main.c    **** 
 542:Src/main.c    **** /**
 543:Src/main.c    ****   * @brief TIM3 Initialization Function
 544:Src/main.c    ****   * @param None
 545:Src/main.c    ****   * @retval None
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 11


 546:Src/main.c    ****   */
 547:Src/main.c    **** static void MX_TIM3_Init(void)
 548:Src/main.c    **** {
 549:Src/main.c    **** 
 550:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
 551:Src/main.c    **** 
 552:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
 553:Src/main.c    **** 
 554:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 555:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 556:Src/main.c    **** 
 557:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
 558:Src/main.c    **** 
 559:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
 560:Src/main.c    ****   htim3.Instance = TIM3;
 561:Src/main.c    ****   htim3.Init.Prescaler = 200-1;
 562:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 563:Src/main.c    ****   htim3.Init.Period = 40000 / pid_rate;
 564:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 565:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 566:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 567:Src/main.c    ****   {
 568:Src/main.c    ****     Error_Handler();
 569:Src/main.c    ****   }
 570:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 571:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 572:Src/main.c    ****   {
 573:Src/main.c    ****     Error_Handler();
 574:Src/main.c    ****   }
 575:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 576:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 577:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 578:Src/main.c    ****   {
 579:Src/main.c    ****     Error_Handler();
 580:Src/main.c    ****   }
 581:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
 582:Src/main.c    ****   //HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 583:Src/main.c    ****   //HAL_NVIC_EnableIRQ(TIM3_IRQn);
 584:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 585:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 586:Src/main.c    **** 
 587:Src/main.c    **** }
 588:Src/main.c    **** 
 589:Src/main.c    **** /**
 590:Src/main.c    ****   * @brief USART1 Initialization Function
 591:Src/main.c    ****   * @param None
 592:Src/main.c    ****   * @retval None
 593:Src/main.c    ****   */
 594:Src/main.c    **** static void MX_USART1_UART_Init(void)
 595:Src/main.c    **** {
 596:Src/main.c    **** 
 597:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 598:Src/main.c    **** 
 599:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 600:Src/main.c    **** 
 601:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 602:Src/main.c    **** 
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 12


 603:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 604:Src/main.c    ****   huart1.Instance = USART1;
 605:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 606:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 607:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 608:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 609:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 610:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 611:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 612:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 613:Src/main.c    ****   {
 614:Src/main.c    ****     Error_Handler();
 615:Src/main.c    ****   }
 616:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 617:Src/main.c    **** 
 618:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 619:Src/main.c    **** 
 620:Src/main.c    **** }
 621:Src/main.c    **** 
 622:Src/main.c    **** /**
 623:Src/main.c    ****   * @brief GPIO Initialization Function
 624:Src/main.c    ****   * @param None
 625:Src/main.c    ****   * @retval None
 626:Src/main.c    ****   */
 627:Src/main.c    **** static void MX_GPIO_Init(void)
 628:Src/main.c    **** {
  27              		.loc 1 628 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 629:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 629 0
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
  46              	.LBB2:
 630:Src/main.c    **** 
 631:Src/main.c    ****   /* GPIO Ports Clock Enable */
 632:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 632 0
  48 000e 2D4B     		ldr	r3, .L3
  49 0010 9A69     		ldr	r2, [r3, #24]
  50 0012 42F01002 		orr	r2, r2, #16
  51 0016 9A61     		str	r2, [r3, #24]
  52 0018 9A69     		ldr	r2, [r3, #24]
  53 001a 02F01002 		and	r2, r2, #16
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 13


  54 001e 0192     		str	r2, [sp, #4]
  55 0020 019A     		ldr	r2, [sp, #4]
  56              	.LBE2:
  57              	.LBB3:
 633:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  58              		.loc 1 633 0
  59 0022 9A69     		ldr	r2, [r3, #24]
  60 0024 42F00402 		orr	r2, r2, #4
  61 0028 9A61     		str	r2, [r3, #24]
  62 002a 9A69     		ldr	r2, [r3, #24]
  63 002c 02F00402 		and	r2, r2, #4
  64 0030 0292     		str	r2, [sp, #8]
  65 0032 029A     		ldr	r2, [sp, #8]
  66              	.LBE3:
  67              	.LBB4:
 634:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  68              		.loc 1 634 0
  69 0034 9A69     		ldr	r2, [r3, #24]
  70 0036 42F00802 		orr	r2, r2, #8
  71 003a 9A61     		str	r2, [r3, #24]
  72 003c 9B69     		ldr	r3, [r3, #24]
  73 003e 03F00803 		and	r3, r3, #8
  74 0042 0393     		str	r3, [sp, #12]
  75 0044 039B     		ldr	r3, [sp, #12]
  76              	.LBE4:
 635:Src/main.c    **** 
 636:Src/main.c    ****   /*Configure GPIO pin Output Level */
 637:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  77              		.loc 1 637 0
  78 0046 204D     		ldr	r5, .L3+4
  79 0048 2246     		mov	r2, r4
  80 004a 4FF40051 		mov	r1, #8192
  81 004e 2846     		mov	r0, r5
  82 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  83              	.LVL0:
 638:Src/main.c    **** 
 639:Src/main.c    ****   /*Configure GPIO pin : PC13 */
 640:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  84              		.loc 1 640 0
  85 0054 4FF40053 		mov	r3, #8192
  86 0058 0493     		str	r3, [sp, #16]
 641:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  87              		.loc 1 641 0
  88 005a 0123     		movs	r3, #1
  89 005c 0593     		str	r3, [sp, #20]
 642:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  90              		.loc 1 642 0
  91 005e 0694     		str	r4, [sp, #24]
 643:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  92              		.loc 1 643 0
  93 0060 0223     		movs	r3, #2
  94 0062 0793     		str	r3, [sp, #28]
 644:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  95              		.loc 1 644 0
  96 0064 04A9     		add	r1, sp, #16
  97 0066 2846     		mov	r0, r5
  98 0068 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 14


  99              	.LVL1:
 645:Src/main.c    **** 
 646:Src/main.c    ****   /*Configure GPIO pins : PA0 PA1 PA2 PA3 */
 647:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 100              		.loc 1 647 0
 101 006c 0F23     		movs	r3, #15
 102 006e 0493     		str	r3, [sp, #16]
 648:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 103              		.loc 1 648 0
 104 0070 164B     		ldr	r3, .L3+8
 105 0072 0593     		str	r3, [sp, #20]
 649:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 106              		.loc 1 649 0
 107 0074 0694     		str	r4, [sp, #24]
 650:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 108              		.loc 1 650 0
 109 0076 04A9     		add	r1, sp, #16
 110 0078 1548     		ldr	r0, .L3+12
 111 007a FFF7FEFF 		bl	HAL_GPIO_Init
 112              	.LVL2:
 651:Src/main.c    **** 
 652:Src/main.c    ****   /* EXTI interrupt init*/
 653:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 113              		.loc 1 653 0
 114 007e 2246     		mov	r2, r4
 115 0080 2146     		mov	r1, r4
 116 0082 0620     		movs	r0, #6
 117 0084 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 118              	.LVL3:
 654:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 119              		.loc 1 654 0
 120 0088 0620     		movs	r0, #6
 121 008a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 122              	.LVL4:
 655:Src/main.c    **** 
 656:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 123              		.loc 1 656 0
 124 008e 2246     		mov	r2, r4
 125 0090 2146     		mov	r1, r4
 126 0092 0720     		movs	r0, #7
 127 0094 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 128              	.LVL5:
 657:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 129              		.loc 1 657 0
 130 0098 0720     		movs	r0, #7
 131 009a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 132              	.LVL6:
 658:Src/main.c    **** 
 659:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
 133              		.loc 1 659 0
 134 009e 2246     		mov	r2, r4
 135 00a0 2146     		mov	r1, r4
 136 00a2 0820     		movs	r0, #8
 137 00a4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 138              	.LVL7:
 660:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 139              		.loc 1 660 0
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 15


 140 00a8 0820     		movs	r0, #8
 141 00aa FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 142              	.LVL8:
 661:Src/main.c    **** 
 662:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI3_IRQn, 0, 0);
 143              		.loc 1 662 0
 144 00ae 2246     		mov	r2, r4
 145 00b0 2146     		mov	r1, r4
 146 00b2 0920     		movs	r0, #9
 147 00b4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 148              	.LVL9:
 663:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 149              		.loc 1 663 0
 150 00b8 0920     		movs	r0, #9
 151 00ba FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 152              	.LVL10:
 664:Src/main.c    **** 
 665:Src/main.c    **** }
 153              		.loc 1 665 0
 154 00be 09B0     		add	sp, sp, #36
 155              	.LCFI2:
 156              		.cfi_def_cfa_offset 12
 157              		@ sp needed
 158 00c0 30BD     		pop	{r4, r5, pc}
 159              	.L4:
 160 00c2 00BF     		.align	2
 161              	.L3:
 162 00c4 00100240 		.word	1073876992
 163 00c8 00100140 		.word	1073811456
 164 00cc 00001110 		.word	269549568
 165 00d0 00080140 		.word	1073809408
 166              		.cfi_endproc
 167              	.LFE79:
 169              		.section	.text.MX_I2C1_Init,"ax",%progbits
 170              		.align	2
 171              		.thumb
 172              		.thumb_func
 174              	MX_I2C1_Init:
 175              	.LFB74:
 429:Src/main.c    **** 
 176              		.loc 1 429 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180 0000 08B5     		push	{r3, lr}
 181              	.LCFI3:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 3, -8
 184              		.cfi_offset 14, -4
 438:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 185              		.loc 1 438 0
 186 0002 0948     		ldr	r0, .L7
 187 0004 094B     		ldr	r3, .L7+4
 188 0006 0360     		str	r3, [r0]
 439:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 189              		.loc 1 439 0
 190 0008 094B     		ldr	r3, .L7+8
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 16


 191 000a 4360     		str	r3, [r0, #4]
 440:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 192              		.loc 1 440 0
 193 000c 0023     		movs	r3, #0
 194 000e 8360     		str	r3, [r0, #8]
 441:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 195              		.loc 1 441 0
 196 0010 C360     		str	r3, [r0, #12]
 442:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 197              		.loc 1 442 0
 198 0012 4FF48042 		mov	r2, #16384
 199 0016 0261     		str	r2, [r0, #16]
 443:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 200              		.loc 1 443 0
 201 0018 4361     		str	r3, [r0, #20]
 444:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 202              		.loc 1 444 0
 203 001a 8361     		str	r3, [r0, #24]
 445:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 204              		.loc 1 445 0
 205 001c C361     		str	r3, [r0, #28]
 446:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 206              		.loc 1 446 0
 207 001e 0362     		str	r3, [r0, #32]
 447:Src/main.c    ****   {
 208              		.loc 1 447 0
 209 0020 FFF7FEFF 		bl	HAL_I2C_Init
 210              	.LVL11:
 211 0024 08BD     		pop	{r3, pc}
 212              	.L8:
 213 0026 00BF     		.align	2
 214              	.L7:
 215 0028 00000000 		.word	hi2c1
 216 002c 00540040 		.word	1073763328
 217 0030 A0860100 		.word	100000
 218              		.cfi_endproc
 219              	.LFE74:
 221              		.section	.text.MX_SPI1_Init,"ax",%progbits
 222              		.align	2
 223              		.thumb
 224              		.thumb_func
 226              	MX_SPI1_Init:
 227              	.LFB75:
 463:Src/main.c    **** 
 228              		.loc 1 463 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI4:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
 473:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER; // change to slave later
 237              		.loc 1 473 0
 238 0002 0B48     		ldr	r0, .L11
 239 0004 0B4B     		ldr	r3, .L11+4
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 17


 240 0006 0360     		str	r3, [r0]
 474:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 241              		.loc 1 474 0
 242 0008 4FF48273 		mov	r3, #260
 243 000c 4360     		str	r3, [r0, #4]
 475:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 244              		.loc 1 475 0
 245 000e 0023     		movs	r3, #0
 246 0010 8360     		str	r3, [r0, #8]
 476:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 247              		.loc 1 476 0
 248 0012 C360     		str	r3, [r0, #12]
 477:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 249              		.loc 1 477 0
 250 0014 0361     		str	r3, [r0, #16]
 478:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 251              		.loc 1 478 0
 252 0016 4361     		str	r3, [r0, #20]
 479:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 253              		.loc 1 479 0
 254 0018 4FF48022 		mov	r2, #262144
 255 001c 8261     		str	r2, [r0, #24]
 480:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 256              		.loc 1 480 0
 257 001e C361     		str	r3, [r0, #28]
 481:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 258              		.loc 1 481 0
 259 0020 0362     		str	r3, [r0, #32]
 482:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 260              		.loc 1 482 0
 261 0022 4362     		str	r3, [r0, #36]
 483:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 262              		.loc 1 483 0
 263 0024 8362     		str	r3, [r0, #40]
 484:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 264              		.loc 1 484 0
 265 0026 0A23     		movs	r3, #10
 266 0028 C362     		str	r3, [r0, #44]
 485:Src/main.c    ****   {
 267              		.loc 1 485 0
 268 002a FFF7FEFF 		bl	HAL_SPI_Init
 269              	.LVL12:
 270 002e 08BD     		pop	{r3, pc}
 271              	.L12:
 272              		.align	2
 273              	.L11:
 274 0030 00000000 		.word	hspi1
 275 0034 00300140 		.word	1073819648
 276              		.cfi_endproc
 277              	.LFE75:
 279              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 280              		.align	2
 281              		.thumb
 282              		.thumb_func
 284              	MX_USART1_UART_Init:
 285              	.LFB78:
 595:Src/main.c    **** 
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 18


 286              		.loc 1 595 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 08B5     		push	{r3, lr}
 291              	.LCFI5:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
 294              		.cfi_offset 14, -4
 604:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 295              		.loc 1 604 0
 296 0002 0848     		ldr	r0, .L15
 297 0004 084B     		ldr	r3, .L15+4
 298 0006 0360     		str	r3, [r0]
 605:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 299              		.loc 1 605 0
 300 0008 4FF4E133 		mov	r3, #115200
 301 000c 4360     		str	r3, [r0, #4]
 606:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 302              		.loc 1 606 0
 303 000e 0023     		movs	r3, #0
 304 0010 8360     		str	r3, [r0, #8]
 607:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 305              		.loc 1 607 0
 306 0012 C360     		str	r3, [r0, #12]
 608:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 307              		.loc 1 608 0
 308 0014 0361     		str	r3, [r0, #16]
 609:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 309              		.loc 1 609 0
 310 0016 0C22     		movs	r2, #12
 311 0018 4261     		str	r2, [r0, #20]
 610:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 312              		.loc 1 610 0
 313 001a 8361     		str	r3, [r0, #24]
 611:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 314              		.loc 1 611 0
 315 001c C361     		str	r3, [r0, #28]
 612:Src/main.c    ****   {
 316              		.loc 1 612 0
 317 001e FFF7FEFF 		bl	HAL_UART_Init
 318              	.LVL13:
 319 0022 08BD     		pop	{r3, pc}
 320              	.L16:
 321              		.align	2
 322              	.L15:
 323 0024 00000000 		.word	huart1
 324 0028 00380140 		.word	1073821696
 325              		.cfi_endproc
 326              	.LFE78:
 328              		.section	.text.MX_TIM2_Init,"ax",%progbits
 329              		.align	2
 330              		.thumb
 331              		.thumb_func
 333              	MX_TIM2_Init:
 334              	.LFB76:
 501:Src/main.c    **** 
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 19


 335              		.loc 1 501 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 24
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 30B5     		push	{r4, r5, lr}
 340              	.LCFI6:
 341              		.cfi_def_cfa_offset 12
 342              		.cfi_offset 4, -12
 343              		.cfi_offset 5, -8
 344              		.cfi_offset 14, -4
 345 0002 87B0     		sub	sp, sp, #28
 346              	.LCFI7:
 347              		.cfi_def_cfa_offset 40
 507:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 348              		.loc 1 507 0
 349 0004 0024     		movs	r4, #0
 350 0006 0294     		str	r4, [sp, #8]
 351 0008 0394     		str	r4, [sp, #12]
 352 000a 0494     		str	r4, [sp, #16]
 353 000c 0594     		str	r4, [sp, #20]
 508:Src/main.c    **** 
 354              		.loc 1 508 0
 355 000e 0094     		str	r4, [sp]
 356 0010 0194     		str	r4, [sp, #4]
 513:Src/main.c    ****   htim2.Init.Prescaler = 200-1;
 357              		.loc 1 513 0
 358 0012 104D     		ldr	r5, .L19
 359 0014 4FF08043 		mov	r3, #1073741824
 360 0018 2B60     		str	r3, [r5]
 514:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 361              		.loc 1 514 0
 362 001a C723     		movs	r3, #199
 363 001c 6B60     		str	r3, [r5, #4]
 515:Src/main.c    ****   htim2.Init.Period = 40000;
 364              		.loc 1 515 0
 365 001e AC60     		str	r4, [r5, #8]
 516:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 366              		.loc 1 516 0
 367 0020 49F64043 		movw	r3, #40000
 368 0024 EB60     		str	r3, [r5, #12]
 517:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 369              		.loc 1 517 0
 370 0026 2C61     		str	r4, [r5, #16]
 518:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 371              		.loc 1 518 0
 372 0028 AC61     		str	r4, [r5, #24]
 519:Src/main.c    ****   {
 373              		.loc 1 519 0
 374 002a 2846     		mov	r0, r5
 375 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 376              	.LVL14:
 523:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 377              		.loc 1 523 0
 378 0030 4FF48053 		mov	r3, #4096
 379 0034 0293     		str	r3, [sp, #8]
 524:Src/main.c    ****   {
 380              		.loc 1 524 0
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 20


 381 0036 02A9     		add	r1, sp, #8
 382 0038 2846     		mov	r0, r5
 383 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 384              	.LVL15:
 528:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 385              		.loc 1 528 0
 386 003e 0094     		str	r4, [sp]
 529:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 387              		.loc 1 529 0
 388 0040 0194     		str	r4, [sp, #4]
 530:Src/main.c    ****   {
 389              		.loc 1 530 0
 390 0042 6946     		mov	r1, sp
 391 0044 2846     		mov	r0, r5
 392 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 393              	.LVL16:
 537:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 394              		.loc 1 537 0
 395 004a 2846     		mov	r0, r5
 396 004c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 397              	.LVL17:
 540:Src/main.c    **** 
 398              		.loc 1 540 0
 399 0050 07B0     		add	sp, sp, #28
 400              	.LCFI8:
 401              		.cfi_def_cfa_offset 12
 402              		@ sp needed
 403 0052 30BD     		pop	{r4, r5, pc}
 404              	.L20:
 405              		.align	2
 406              	.L19:
 407 0054 00000000 		.word	htim2
 408              		.cfi_endproc
 409              	.LFE76:
 411              		.section	.text.MX_TIM3_Init,"ax",%progbits
 412              		.align	2
 413              		.thumb
 414              		.thumb_func
 416              	MX_TIM3_Init:
 417              	.LFB77:
 548:Src/main.c    **** 
 418              		.loc 1 548 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 24
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422 0000 30B5     		push	{r4, r5, lr}
 423              	.LCFI9:
 424              		.cfi_def_cfa_offset 12
 425              		.cfi_offset 4, -12
 426              		.cfi_offset 5, -8
 427              		.cfi_offset 14, -4
 428 0002 87B0     		sub	sp, sp, #28
 429              	.LCFI10:
 430              		.cfi_def_cfa_offset 40
 554:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 431              		.loc 1 554 0
 432 0004 0024     		movs	r4, #0
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 21


 433 0006 0294     		str	r4, [sp, #8]
 434 0008 0394     		str	r4, [sp, #12]
 435 000a 0494     		str	r4, [sp, #16]
 436 000c 0594     		str	r4, [sp, #20]
 555:Src/main.c    **** 
 437              		.loc 1 555 0
 438 000e 0094     		str	r4, [sp]
 439 0010 0194     		str	r4, [sp, #4]
 560:Src/main.c    ****   htim3.Init.Prescaler = 200-1;
 440              		.loc 1 560 0
 441 0012 124D     		ldr	r5, .L23
 442 0014 124B     		ldr	r3, .L23+4
 443 0016 2B60     		str	r3, [r5]
 561:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 444              		.loc 1 561 0
 445 0018 C723     		movs	r3, #199
 446 001a 6B60     		str	r3, [r5, #4]
 562:Src/main.c    ****   htim3.Init.Period = 40000 / pid_rate;
 447              		.loc 1 562 0
 448 001c AC60     		str	r4, [r5, #8]
 563:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 449              		.loc 1 563 0
 450 001e 114B     		ldr	r3, .L23+8
 451 0020 1A68     		ldr	r2, [r3]
 452 0022 49F64043 		movw	r3, #40000
 453 0026 93FBF2F3 		sdiv	r3, r3, r2
 454 002a EB60     		str	r3, [r5, #12]
 564:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 455              		.loc 1 564 0
 456 002c 2C61     		str	r4, [r5, #16]
 565:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 457              		.loc 1 565 0
 458 002e AC61     		str	r4, [r5, #24]
 566:Src/main.c    ****   {
 459              		.loc 1 566 0
 460 0030 2846     		mov	r0, r5
 461 0032 FFF7FEFF 		bl	HAL_TIM_Base_Init
 462              	.LVL18:
 570:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 463              		.loc 1 570 0
 464 0036 4FF48053 		mov	r3, #4096
 465 003a 0293     		str	r3, [sp, #8]
 571:Src/main.c    ****   {
 466              		.loc 1 571 0
 467 003c 02A9     		add	r1, sp, #8
 468 003e 2846     		mov	r0, r5
 469 0040 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 470              	.LVL19:
 575:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 471              		.loc 1 575 0
 472 0044 0094     		str	r4, [sp]
 576:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 473              		.loc 1 576 0
 474 0046 0194     		str	r4, [sp, #4]
 577:Src/main.c    ****   {
 475              		.loc 1 577 0
 476 0048 6946     		mov	r1, sp
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 22


 477 004a 2846     		mov	r0, r5
 478 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 479              	.LVL20:
 584:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 480              		.loc 1 584 0
 481 0050 2846     		mov	r0, r5
 482 0052 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 483              	.LVL21:
 587:Src/main.c    **** 
 484              		.loc 1 587 0
 485 0056 07B0     		add	sp, sp, #28
 486              	.LCFI11:
 487              		.cfi_def_cfa_offset 12
 488              		@ sp needed
 489 0058 30BD     		pop	{r4, r5, pc}
 490              	.L24:
 491 005a 00BF     		.align	2
 492              	.L23:
 493 005c 00000000 		.word	htim3
 494 0060 00040040 		.word	1073742848
 495 0064 00000000 		.word	.LANCHOR0
 496              		.cfi_endproc
 497              	.LFE77:
 499              		.section	.text.MX_ADC1_Init,"ax",%progbits
 500              		.align	2
 501              		.thumb
 502              		.thumb_func
 504              	MX_ADC1_Init:
 505              	.LFB73:
 384:Src/main.c    **** 
 506              		.loc 1 384 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 16
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510 0000 70B5     		push	{r4, r5, r6, lr}
 511              	.LCFI12:
 512              		.cfi_def_cfa_offset 16
 513              		.cfi_offset 4, -16
 514              		.cfi_offset 5, -12
 515              		.cfi_offset 6, -8
 516              		.cfi_offset 14, -4
 517 0002 84B0     		sub	sp, sp, #16
 518              	.LCFI13:
 519              		.cfi_def_cfa_offset 32
 390:Src/main.c    **** 
 520              		.loc 1 390 0
 521 0004 0025     		movs	r5, #0
 522 0006 0195     		str	r5, [sp, #4]
 523 0008 0295     		str	r5, [sp, #8]
 524 000a 0395     		str	r5, [sp, #12]
 397:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 525              		.loc 1 397 0
 526 000c 0C4C     		ldr	r4, .L27
 527 000e 0D4B     		ldr	r3, .L27+4
 528 0010 2360     		str	r3, [r4]
 398:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 529              		.loc 1 398 0
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 23


 530 0012 A560     		str	r5, [r4, #8]
 399:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 531              		.loc 1 399 0
 532 0014 E560     		str	r5, [r4, #12]
 400:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 533              		.loc 1 400 0
 534 0016 6561     		str	r5, [r4, #20]
 401:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 535              		.loc 1 401 0
 536 0018 4FF46023 		mov	r3, #917504
 537 001c E361     		str	r3, [r4, #28]
 402:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 538              		.loc 1 402 0
 539 001e 6560     		str	r5, [r4, #4]
 403:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 540              		.loc 1 403 0
 541 0020 0126     		movs	r6, #1
 542 0022 2661     		str	r6, [r4, #16]
 404:Src/main.c    ****   {
 543              		.loc 1 404 0
 544 0024 2046     		mov	r0, r4
 545 0026 FFF7FEFF 		bl	HAL_ADC_Init
 546              	.LVL22:
 410:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 547              		.loc 1 410 0
 548 002a 0823     		movs	r3, #8
 549 002c 0193     		str	r3, [sp, #4]
 411:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 550              		.loc 1 411 0
 551 002e 0296     		str	r6, [sp, #8]
 412:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 552              		.loc 1 412 0
 553 0030 0395     		str	r5, [sp, #12]
 413:Src/main.c    ****   {
 554              		.loc 1 413 0
 555 0032 01A9     		add	r1, sp, #4
 556 0034 2046     		mov	r0, r4
 557 0036 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 558              	.LVL23:
 421:Src/main.c    **** 
 559              		.loc 1 421 0
 560 003a 04B0     		add	sp, sp, #16
 561              	.LCFI14:
 562              		.cfi_def_cfa_offset 16
 563              		@ sp needed
 564 003c 70BD     		pop	{r4, r5, r6, pc}
 565              	.L28:
 566 003e 00BF     		.align	2
 567              	.L27:
 568 0040 00000000 		.word	hadc1
 569 0044 00240140 		.word	1073816576
 570              		.cfi_endproc
 571              	.LFE73:
 573              		.section	.text.UpdateWheel,"ax",%progbits
 574              		.align	2
 575              		.global	UpdateWheel
 576              		.thumb
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 24


 577              		.thumb_func
 579              	UpdateWheel:
 580              	.LFB64:
 214:Src/main.c    ****   wheel->new = __HAL_TIM_GET_COUNTER(&htim2);
 581              		.loc 1 214 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              	.LVL24:
 586 0000 10B5     		push	{r4, lr}
 587              	.LCFI15:
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 4, -8
 590              		.cfi_offset 14, -4
 215:Src/main.c    ****   wheel->delta = wheel->new - wheel->old + 40000 * wheel->count;
 591              		.loc 1 215 0
 592 0002 0A4B     		ldr	r3, .L31
 593 0004 1B68     		ldr	r3, [r3]
 594 0006 5B6A     		ldr	r3, [r3, #36]
 595 0008 0360     		str	r3, [r0]
 216:Src/main.c    ****   wheel->old = wheel->new;
 596              		.loc 1 216 0
 597 000a 4268     		ldr	r2, [r0, #4]
 598 000c 991A     		subs	r1, r3, r2
 599 000e 8268     		ldr	r2, [r0, #8]
 600 0010 49F64044 		movw	r4, #40000
 601 0014 04FB0212 		mla	r2, r4, r2, r1
 602 0018 C260     		str	r2, [r0, #12]
 217:Src/main.c    ****   wheel->count = 0;
 603              		.loc 1 217 0
 604 001a 4360     		str	r3, [r0, #4]
 218:Src/main.c    ****   traction_control_count = 0;
 605              		.loc 1 218 0
 606 001c 0023     		movs	r3, #0
 607 001e 8360     		str	r3, [r0, #8]
 219:Src/main.c    ****   /* USER CODE END EXTI0_IRQn 0 */
 608              		.loc 1 219 0
 609 0020 034A     		ldr	r2, .L31+4
 610 0022 1370     		strb	r3, [r2]
 221:Src/main.c    **** }
 611              		.loc 1 221 0
 612 0024 0120     		movs	r0, #1
 613              	.LVL25:
 614 0026 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 615              	.LVL26:
 616 002a 10BD     		pop	{r4, pc}
 617              	.L32:
 618              		.align	2
 619              	.L31:
 620 002c 00000000 		.word	htim2
 621 0030 00000000 		.word	.LANCHOR1
 622              		.cfi_endproc
 623              	.LFE64:
 625              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 626              		.align	2
 627              		.global	EXTI0_IRQHandler
 628              		.thumb
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 25


 629              		.thumb_func
 631              	EXTI0_IRQHandler:
 632              	.LFB65:
 235:Src/main.c    ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 633              		.loc 1 235 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637 0000 08B5     		push	{r3, lr}
 638              	.LCFI16:
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 3, -8
 641              		.cfi_offset 14, -4
 237:Src/main.c    ****   /* USER CODE END EXTI0_IRQn 0 */
 642              		.loc 1 237 0
 643 0002 0348     		ldr	r0, .L35
 644 0004 FFF7FEFF 		bl	UpdateWheel
 645              	.LVL27:
 240:Src/main.c    ****   /* USER CODE END EXTI0_IRQn 1 */
 646              		.loc 1 240 0
 647 0008 0120     		movs	r0, #1
 648 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 649              	.LVL28:
 650 000e 08BD     		pop	{r3, pc}
 651              	.L36:
 652              		.align	2
 653              	.L35:
 654 0010 00000000 		.word	.LANCHOR2
 655              		.cfi_endproc
 656              	.LFE65:
 658              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 659              		.align	2
 660              		.global	EXTI1_IRQHandler
 661              		.thumb
 662              		.thumb_func
 664              	EXTI1_IRQHandler:
 665              	.LFB66:
 248:Src/main.c    ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 666              		.loc 1 248 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670 0000 08B5     		push	{r3, lr}
 671              	.LCFI17:
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 3, -8
 674              		.cfi_offset 14, -4
 250:Src/main.c    ****  /* USER CODE END EXTI1_IRQn 0 */
 675              		.loc 1 250 0
 676 0002 0348     		ldr	r0, .L39
 677 0004 FFF7FEFF 		bl	UpdateWheel
 678              	.LVL29:
 253:Src/main.c    ****   /* USER CODE END EXTI1_IRQn 1 */
 679              		.loc 1 253 0
 680 0008 0220     		movs	r0, #2
 681 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 682              	.LVL30:
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 26


 683 000e 08BD     		pop	{r3, pc}
 684              	.L40:
 685              		.align	2
 686              	.L39:
 687 0010 00000000 		.word	.LANCHOR3
 688              		.cfi_endproc
 689              	.LFE66:
 691              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 692              		.align	2
 693              		.global	EXTI2_IRQHandler
 694              		.thumb
 695              		.thumb_func
 697              	EXTI2_IRQHandler:
 698              	.LFB67:
 261:Src/main.c    ****   /* USER CODE BEGIN EXTI2_IRQn 0 */
 699              		.loc 1 261 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703 0000 08B5     		push	{r3, lr}
 704              	.LCFI18:
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 3, -8
 707              		.cfi_offset 14, -4
 263:Src/main.c    ****   /* USER CODE END EXTI2_IRQn 0 */
 708              		.loc 1 263 0
 709 0002 0348     		ldr	r0, .L43
 710 0004 FFF7FEFF 		bl	UpdateWheel
 711              	.LVL31:
 266:Src/main.c    ****   /* USER CODE END EXTI2_IRQn 1 */
 712              		.loc 1 266 0
 713 0008 0420     		movs	r0, #4
 714 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 715              	.LVL32:
 716 000e 08BD     		pop	{r3, pc}
 717              	.L44:
 718              		.align	2
 719              	.L43:
 720 0010 00000000 		.word	.LANCHOR4
 721              		.cfi_endproc
 722              	.LFE67:
 724              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 725              		.align	2
 726              		.global	EXTI3_IRQHandler
 727              		.thumb
 728              		.thumb_func
 730              	EXTI3_IRQHandler:
 731              	.LFB68:
 274:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 732              		.loc 1 274 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736 0000 08B5     		push	{r3, lr}
 737              	.LCFI19:
 738              		.cfi_def_cfa_offset 8
 739              		.cfi_offset 3, -8
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 27


 740              		.cfi_offset 14, -4
 276:Src/main.c    ****   /* USER CODE END EXTI3_IRQn 0 */
 741              		.loc 1 276 0
 742 0002 0348     		ldr	r0, .L47
 743 0004 FFF7FEFF 		bl	UpdateWheel
 744              	.LVL33:
 278:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 745              		.loc 1 278 0
 746 0008 0820     		movs	r0, #8
 747 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 748              	.LVL34:
 749 000e 08BD     		pop	{r3, pc}
 750              	.L48:
 751              		.align	2
 752              	.L47:
 753 0010 00000000 		.word	.LANCHOR5
 754              		.cfi_endproc
 755              	.LFE68:
 757              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 758              		.align	2
 759              		.global	TIM2_IRQHandler
 760              		.thumb
 761              		.thumb_func
 763              	TIM2_IRQHandler:
 764              	.LFB69:
 288:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 765              		.loc 1 288 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769 0000 08B5     		push	{r3, lr}
 770              	.LCFI20:
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 3, -8
 773              		.cfi_offset 14, -4
 290:Src/main.c    ****   fr.count++;
 774              		.loc 1 290 0
 775 0002 104A     		ldr	r2, .L51
 776 0004 9368     		ldr	r3, [r2, #8]
 777 0006 0133     		adds	r3, r3, #1
 778 0008 9360     		str	r3, [r2, #8]
 291:Src/main.c    ****   bl.count++;
 779              		.loc 1 291 0
 780 000a 0F4A     		ldr	r2, .L51+4
 781 000c 9368     		ldr	r3, [r2, #8]
 782 000e 0133     		adds	r3, r3, #1
 783 0010 9360     		str	r3, [r2, #8]
 292:Src/main.c    ****   br.count++;
 784              		.loc 1 292 0
 785 0012 0E4A     		ldr	r2, .L51+8
 786 0014 9368     		ldr	r3, [r2, #8]
 787 0016 0133     		adds	r3, r3, #1
 788 0018 9360     		str	r3, [r2, #8]
 293:Src/main.c    ****   /* USER CODE END TIM2_IRQn 0 */
 789              		.loc 1 293 0
 790 001a 0D4A     		ldr	r2, .L51+12
 791 001c 9368     		ldr	r3, [r2, #8]
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 28


 792 001e 0133     		adds	r3, r3, #1
 793 0020 9360     		str	r3, [r2, #8]
 295:Src/main.c    ****   // If traction control is greater than the max, set to TRACTION_DISABLE_COUNT+1
 794              		.loc 1 295 0
 795 0022 0C48     		ldr	r0, .L51+16
 796 0024 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 797              	.LVL35:
 297:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 798              		.loc 1 297 0
 799 0028 0B48     		ldr	r0, .L51+20
 800 002a 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 801 002c 531C     		adds	r3, r2, #1
 802 002e DBB2     		uxtb	r3, r3
 803 0030 591C     		adds	r1, r3, #1
 804 0032 C9B2     		uxtb	r1, r1
 805 0034 83F00903 		eor	r3, r3, #9
 806 0038 0929     		cmp	r1, #9
 807 003a 98BF     		it	ls
 808 003c 0023     		movls	r3, #0
 809 003e 5340     		eors	r3, r3, r2
 810 0040 0370     		strb	r3, [r0]
 811 0042 08BD     		pop	{r3, pc}
 812              	.L52:
 813              		.align	2
 814              	.L51:
 815 0044 00000000 		.word	.LANCHOR2
 816 0048 00000000 		.word	.LANCHOR3
 817 004c 00000000 		.word	.LANCHOR4
 818 0050 00000000 		.word	.LANCHOR5
 819 0054 00000000 		.word	htim2
 820 0058 00000000 		.word	.LANCHOR1
 821              		.cfi_endproc
 822              	.LFE69:
 824              		.global	__aeabi_i2f
 825              		.global	__aeabi_fmul
 826              		.global	__aeabi_fadd
 827              		.global	__aeabi_fdiv
 828              		.global	__aeabi_f2iz
 829              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 830              		.align	2
 831              		.global	TIM3_IRQHandler
 832              		.thumb
 833              		.thumb_func
 835              	TIM3_IRQHandler:
 836              	.LFB70:
 307:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 837              		.loc 1 307 0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 842              	.LCFI21:
 843              		.cfi_def_cfa_offset 24
 844              		.cfi_offset 4, -24
 845              		.cfi_offset 5, -20
 846              		.cfi_offset 6, -16
 847              		.cfi_offset 7, -12
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 29


 848              		.cfi_offset 8, -8
 849              		.cfi_offset 14, -4
 310:Src/main.c    ****   derivative = (error - prev_error) / dt;
 850              		.loc 1 310 0
 851 0004 254B     		ldr	r3, .L57
 852 0006 1D68     		ldr	r5, [r3]
 853 0008 2846     		mov	r0, r5
 854 000a FFF7FEFF 		bl	__aeabi_i2f
 855              	.LVL36:
 856 000e 8046     		mov	r8, r0
 857 0010 234B     		ldr	r3, .L57+4
 858 0012 1C68     		ldr	r4, [r3]	@ float
 859 0014 2146     		mov	r1, r4
 860 0016 FFF7FEFF 		bl	__aeabi_fmul
 861              	.LVL37:
 862 001a 224E     		ldr	r6, .L57+8
 863 001c 3168     		ldr	r1, [r6]	@ float
 864 001e FFF7FEFF 		bl	__aeabi_fadd
 865              	.LVL38:
 866 0022 0746     		mov	r7, r0
 867 0024 3060     		str	r0, [r6]	@ float
 311:Src/main.c    ****   
 868              		.loc 1 311 0
 869 0026 204B     		ldr	r3, .L57+12
 870 0028 1868     		ldr	r0, [r3]
 871 002a 281A     		subs	r0, r5, r0
 872 002c FFF7FEFF 		bl	__aeabi_i2f
 873              	.LVL39:
 874 0030 2146     		mov	r1, r4
 875 0032 FFF7FEFF 		bl	__aeabi_fdiv
 876              	.LVL40:
 877 0036 1D4B     		ldr	r3, .L57+16
 878 0038 1860     		str	r0, [r3]	@ float
 313:Src/main.c    **** 	  ? MAX_CONTROL_VALUE 
 879              		.loc 1 313 0
 880 003a 1D4B     		ldr	r3, .L57+20
 881 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 882 003e 082B     		cmp	r3, #8
 883 0040 24D8     		bhi	.L55
 884 0042 0446     		mov	r4, r0
 315:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 885              		.loc 1 315 0 discriminator 1
 886 0044 1B4B     		ldr	r3, .L57+24
 887 0046 1968     		ldr	r1, [r3]	@ float
 888 0048 4046     		mov	r0, r8
 889 004a FFF7FEFF 		bl	__aeabi_fmul
 890              	.LVL41:
 891 004e 0546     		mov	r5, r0
 892 0050 194B     		ldr	r3, .L57+28
 893 0052 1868     		ldr	r0, [r3]
 894 0054 FFF7FEFF 		bl	__aeabi_i2f
 895              	.LVL42:
 896 0058 2946     		mov	r1, r5
 897 005a FFF7FEFF 		bl	__aeabi_fadd
 898              	.LVL43:
 899 005e 0546     		mov	r5, r0
 900 0060 164B     		ldr	r3, .L57+32
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 30


 901 0062 1968     		ldr	r1, [r3]	@ float
 902 0064 3846     		mov	r0, r7
 903 0066 FFF7FEFF 		bl	__aeabi_fmul
 904              	.LVL44:
 905 006a 0146     		mov	r1, r0
 906 006c 2846     		mov	r0, r5
 907 006e FFF7FEFF 		bl	__aeabi_fadd
 908              	.LVL45:
 909 0072 0546     		mov	r5, r0
 910 0074 124B     		ldr	r3, .L57+36
 911 0076 1968     		ldr	r1, [r3]	@ float
 912 0078 2046     		mov	r0, r4
 913 007a FFF7FEFF 		bl	__aeabi_fmul
 914              	.LVL46:
 915 007e 0146     		mov	r1, r0
 916 0080 2846     		mov	r0, r5
 917 0082 FFF7FEFF 		bl	__aeabi_fadd
 918              	.LVL47:
 313:Src/main.c    **** 	  ? MAX_CONTROL_VALUE 
 919              		.loc 1 313 0 discriminator 1
 920 0086 FFF7FEFF 		bl	__aeabi_f2iz
 921              	.LVL48:
 922 008a 00E0     		b	.L54
 923              	.L55:
 313:Src/main.c    **** 	  ? MAX_CONTROL_VALUE 
 924              		.loc 1 313 0 is_stmt 0
 925 008c FF20     		movs	r0, #255
 926              	.L54:
 313:Src/main.c    **** 	  ? MAX_CONTROL_VALUE 
 927              		.loc 1 313 0 discriminator 4
 928 008e 0D4B     		ldr	r3, .L57+40
 929 0090 1860     		str	r0, [r3]
 317:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 930              		.loc 1 317 0 is_stmt 1 discriminator 4
 931 0092 0D48     		ldr	r0, .L57+44
 932 0094 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 933              	.LVL49:
 934 0098 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 935              	.L58:
 936              		.align	2
 937              	.L57:
 938 009c 00000000 		.word	.LANCHOR6
 939 00a0 00000000 		.word	.LANCHOR7
 940 00a4 00000000 		.word	.LANCHOR8
 941 00a8 00000000 		.word	.LANCHOR9
 942 00ac 00000000 		.word	.LANCHOR10
 943 00b0 00000000 		.word	.LANCHOR1
 944 00b4 00000000 		.word	.LANCHOR11
 945 00b8 00000000 		.word	.LANCHOR12
 946 00bc 00000000 		.word	.LANCHOR13
 947 00c0 00000000 		.word	.LANCHOR14
 948 00c4 00000000 		.word	.LANCHOR15
 949 00c8 00000000 		.word	htim3
 950              		.cfi_endproc
 951              	.LFE70:
 953              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 954              		.align	2
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 31


 955              		.global	SPI1_IRQHandler
 956              		.thumb
 957              		.thumb_func
 959              	SPI1_IRQHandler:
 960              	.LFB71:
 327:Src/main.c    ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 961              		.loc 1 327 0
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 0
 964              		@ frame_needed = 0, uses_anonymous_args = 0
 965 0000 08B5     		push	{r3, lr}
 966              	.LCFI22:
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 3, -8
 969              		.cfi_offset 14, -4
 331:Src/main.c    ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 970              		.loc 1 331 0
 971 0002 0248     		ldr	r0, .L61
 972 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 973              	.LVL50:
 974 0008 08BD     		pop	{r3, pc}
 975              	.L62:
 976 000a 00BF     		.align	2
 977              	.L61:
 978 000c 00000000 		.word	hspi1
 979              		.cfi_endproc
 980              	.LFE71:
 982              		.section	.text.SystemClock_Config,"ax",%progbits
 983              		.align	2
 984              		.global	SystemClock_Config
 985              		.thumb
 986              		.thumb_func
 988              	SystemClock_Config:
 989              	.LFB72:
 342:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 990              		.loc 1 342 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 80
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 994 0000 30B5     		push	{r4, r5, lr}
 995              	.LCFI23:
 996              		.cfi_def_cfa_offset 12
 997              		.cfi_offset 4, -12
 998              		.cfi_offset 5, -8
 999              		.cfi_offset 14, -4
 1000 0002 95B0     		sub	sp, sp, #84
 1001              	.LCFI24:
 1002              		.cfi_def_cfa_offset 96
 343:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1003              		.loc 1 343 0
 1004 0004 2822     		movs	r2, #40
 1005 0006 0021     		movs	r1, #0
 1006 0008 0DEB0200 		add	r0, sp, r2
 1007 000c FFF7FEFF 		bl	memset
 1008              	.LVL51:
 344:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1009              		.loc 1 344 0
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 32


 1010 0010 0024     		movs	r4, #0
 1011 0012 0594     		str	r4, [sp, #20]
 1012 0014 0694     		str	r4, [sp, #24]
 1013 0016 0794     		str	r4, [sp, #28]
 1014 0018 0894     		str	r4, [sp, #32]
 1015 001a 0994     		str	r4, [sp, #36]
 345:Src/main.c    **** 
 1016              		.loc 1 345 0
 1017 001c 0194     		str	r4, [sp, #4]
 1018 001e 0294     		str	r4, [sp, #8]
 1019 0020 0394     		str	r4, [sp, #12]
 1020 0022 0494     		str	r4, [sp, #16]
 349:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1021              		.loc 1 349 0
 1022 0024 0225     		movs	r5, #2
 1023 0026 0A95     		str	r5, [sp, #40]
 350:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1024              		.loc 1 350 0
 1025 0028 0123     		movs	r3, #1
 1026 002a 0E93     		str	r3, [sp, #56]
 351:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1027              		.loc 1 351 0
 1028 002c 1023     		movs	r3, #16
 1029 002e 0F93     		str	r3, [sp, #60]
 353:Src/main.c    ****   {
 1030              		.loc 1 353 0
 1031 0030 0AA8     		add	r0, sp, #40
 1032 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1033              	.LVL52:
 359:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1034              		.loc 1 359 0
 1035 0036 0F23     		movs	r3, #15
 1036 0038 0593     		str	r3, [sp, #20]
 361:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1037              		.loc 1 361 0
 1038 003a 0694     		str	r4, [sp, #24]
 362:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1039              		.loc 1 362 0
 1040 003c 0794     		str	r4, [sp, #28]
 363:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1041              		.loc 1 363 0
 1042 003e 0894     		str	r4, [sp, #32]
 364:Src/main.c    **** 
 1043              		.loc 1 364 0
 1044 0040 0994     		str	r4, [sp, #36]
 366:Src/main.c    ****   {
 1045              		.loc 1 366 0
 1046 0042 2146     		mov	r1, r4
 1047 0044 05A8     		add	r0, sp, #20
 1048 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1049              	.LVL53:
 370:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 1050              		.loc 1 370 0
 1051 004a 0195     		str	r5, [sp, #4]
 371:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1052              		.loc 1 371 0
 1053 004c 0394     		str	r4, [sp, #12]
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 33


 372:Src/main.c    ****   {
 1054              		.loc 1 372 0
 1055 004e 01A8     		add	r0, sp, #4
 1056 0050 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1057              	.LVL54:
 376:Src/main.c    **** 
 1058              		.loc 1 376 0
 1059 0054 15B0     		add	sp, sp, #84
 1060              	.LCFI25:
 1061              		.cfi_def_cfa_offset 12
 1062              		@ sp needed
 1063 0056 30BD     		pop	{r4, r5, pc}
 1064              		.cfi_endproc
 1065              	.LFE72:
 1067              		.section	.text.main,"ax",%progbits
 1068              		.align	2
 1069              		.global	main
 1070              		.thumb
 1071              		.thumb_func
 1073              	main:
 1074              	.LFB63:
 112:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1075              		.loc 1 112 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 8
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079 0000 10B5     		push	{r4, lr}
 1080              	.LCFI26:
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 4, -8
 1083              		.cfi_offset 14, -4
 1084 0002 84B0     		sub	sp, sp, #16
 1085              	.LCFI27:
 1086              		.cfi_def_cfa_offset 24
 120:Src/main.c    **** 
 1087              		.loc 1 120 0
 1088 0004 FFF7FEFF 		bl	HAL_Init
 1089              	.LVL55:
 127:Src/main.c    **** 
 1090              		.loc 1 127 0
 1091 0008 FFF7FEFF 		bl	SystemClock_Config
 1092              	.LVL56:
 134:Src/main.c    ****   MX_I2C1_Init();
 1093              		.loc 1 134 0
 1094 000c FFF7FEFF 		bl	MX_GPIO_Init
 1095              	.LVL57:
 135:Src/main.c    ****   MX_SPI1_Init();
 1096              		.loc 1 135 0
 1097 0010 FFF7FEFF 		bl	MX_I2C1_Init
 1098              	.LVL58:
 136:Src/main.c    ****   MX_USART1_UART_Init();
 1099              		.loc 1 136 0
 1100 0014 FFF7FEFF 		bl	MX_SPI1_Init
 1101              	.LVL59:
 137:Src/main.c    ****   MX_TIM2_Init();
 1102              		.loc 1 137 0
 1103 0018 FFF7FEFF 		bl	MX_USART1_UART_Init
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 34


 1104              	.LVL60:
 138:Src/main.c    ****   MX_ADC1_Init();
 1105              		.loc 1 138 0
 1106 001c FFF7FEFF 		bl	MX_TIM2_Init
 1107              	.LVL61:
 139:Src/main.c    ****   MX_TIM3_Init();
 1108              		.loc 1 139 0
 1109 0020 FFF7FEFF 		bl	MX_ADC1_Init
 1110              	.LVL62:
 140:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1111              		.loc 1 140 0
 1112 0024 FFF7FEFF 		bl	MX_TIM3_Init
 1113              	.LVL63:
 1114              	.L73:
 1115              	.LBB5:
 155:Src/main.c    **** 	fr.freq = 40000 / fr.delta;
 1116              		.loc 1 155 0
 1117 0028 404A     		ldr	r2, .L75
 1118 002a D168     		ldr	r1, [r2, #12]
 1119 002c 49F64043 		movw	r3, #40000
 1120 0030 93FBF1F1 		sdiv	r1, r3, r1
 1121 0034 1161     		str	r1, [r2, #16]
 156:Src/main.c    **** 	bl.freq = 40000 / bl.delta;
 1122              		.loc 1 156 0
 1123 0036 3E48     		ldr	r0, .L75+4
 1124 0038 C168     		ldr	r1, [r0, #12]
 1125 003a 93FBF1F1 		sdiv	r1, r3, r1
 1126 003e 0161     		str	r1, [r0, #16]
 157:Src/main.c    **** 	br.freq = 40000 / br.delta;
 1127              		.loc 1 157 0
 1128 0040 3C48     		ldr	r0, .L75+8
 1129 0042 C168     		ldr	r1, [r0, #12]
 1130 0044 93FBF1F1 		sdiv	r1, r3, r1
 1131 0048 0161     		str	r1, [r0, #16]
 158:Src/main.c    **** 	
 1132              		.loc 1 158 0
 1133 004a 3B49     		ldr	r1, .L75+12
 1134 004c C868     		ldr	r0, [r1, #12]
 1135 004e 93FBF0F3 		sdiv	r3, r3, r0
 1136 0052 0B61     		str	r3, [r1, #16]
 160:Src/main.c    **** 	if (fr.count >= 2) fr.freq = 0;
 1137              		.loc 1 160 0
 1138 0054 9368     		ldr	r3, [r2, #8]
 1139 0056 012B     		cmp	r3, #1
 1140 0058 02DD     		ble	.L66
 160:Src/main.c    **** 	if (fr.count >= 2) fr.freq = 0;
 1141              		.loc 1 160 0 is_stmt 0 discriminator 1
 1142 005a 0022     		movs	r2, #0
 1143 005c 334B     		ldr	r3, .L75
 1144 005e 1A61     		str	r2, [r3, #16]
 1145              	.L66:
 161:Src/main.c    **** 	if (bl.count >= 2) bl.freq = 0;
 1146              		.loc 1 161 0 is_stmt 1
 1147 0060 334B     		ldr	r3, .L75+4
 1148 0062 9B68     		ldr	r3, [r3, #8]
 1149 0064 012B     		cmp	r3, #1
 1150 0066 02DD     		ble	.L67
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 35


 161:Src/main.c    **** 	if (bl.count >= 2) bl.freq = 0;
 1151              		.loc 1 161 0 is_stmt 0 discriminator 1
 1152 0068 0022     		movs	r2, #0
 1153 006a 314B     		ldr	r3, .L75+4
 1154 006c 1A61     		str	r2, [r3, #16]
 1155              	.L67:
 162:Src/main.c    **** 	if (br.count >= 2) br.freq = 0;
 1156              		.loc 1 162 0 is_stmt 1
 1157 006e 314B     		ldr	r3, .L75+8
 1158 0070 9B68     		ldr	r3, [r3, #8]
 1159 0072 012B     		cmp	r3, #1
 1160 0074 02DD     		ble	.L68
 162:Src/main.c    **** 	if (br.count >= 2) br.freq = 0;
 1161              		.loc 1 162 0 is_stmt 0 discriminator 1
 1162 0076 0022     		movs	r2, #0
 1163 0078 2E4B     		ldr	r3, .L75+8
 1164 007a 1A61     		str	r2, [r3, #16]
 1165              	.L68:
 163:Src/main.c    **** 	
 1166              		.loc 1 163 0 is_stmt 1
 1167 007c 2E4B     		ldr	r3, .L75+12
 1168 007e 9B68     		ldr	r3, [r3, #8]
 1169 0080 012B     		cmp	r3, #1
 1170 0082 02DD     		ble	.L69
 163:Src/main.c    **** 	
 1171              		.loc 1 163 0 is_stmt 0 discriminator 1
 1172 0084 0022     		movs	r2, #0
 1173 0086 2C4B     		ldr	r3, .L75+12
 1174 0088 1A61     		str	r2, [r3, #16]
 1175              	.L69:
 165:Src/main.c    **** 	back_avg = (bl.freq + br.freq) / 2;
 1176              		.loc 1 165 0 is_stmt 1
 1177 008a 284B     		ldr	r3, .L75
 1178 008c 1A69     		ldr	r2, [r3, #16]
 1179 008e 284B     		ldr	r3, .L75+4
 1180 0090 1B69     		ldr	r3, [r3, #16]
 1181 0092 1344     		add	r3, r3, r2
 1182 0094 03EBD373 		add	r3, r3, r3, lsr #31
 1183 0098 5A10     		asrs	r2, r3, #1
 1184 009a 284B     		ldr	r3, .L75+16
 1185 009c 1A60     		str	r2, [r3]
 166:Src/main.c    **** 	
 1186              		.loc 1 166 0
 1187 009e 254B     		ldr	r3, .L75+8
 1188 00a0 1969     		ldr	r1, [r3, #16]
 1189 00a2 254B     		ldr	r3, .L75+12
 1190 00a4 1B69     		ldr	r3, [r3, #16]
 1191 00a6 0B44     		add	r3, r3, r1
 1192 00a8 03EBD373 		add	r3, r3, r3, lsr #31
 1193 00ac 5B10     		asrs	r3, r3, #1
 1194 00ae 2449     		ldr	r1, .L75+20
 1195 00b0 0B60     		str	r3, [r1]
 168:Src/main.c    **** 	
 1196              		.loc 1 168 0
 1197 00b2 D31A     		subs	r3, r2, r3
 1198 00b4 234A     		ldr	r2, .L75+24
 1199 00b6 1360     		str	r3, [r2]
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 36


 170:Src/main.c    **** 	error = slip - setpoint;
 1200              		.loc 1 170 0
 1201 00b8 2349     		ldr	r1, .L75+28
 1202 00ba 0868     		ldr	r0, [r1]
 1203 00bc 234A     		ldr	r2, .L75+32
 1204 00be 1060     		str	r0, [r2]
 171:Src/main.c    **** 	
 1205              		.loc 1 171 0
 1206 00c0 234A     		ldr	r2, .L75+36
 1207 00c2 1268     		ldr	r2, [r2]
 1208 00c4 9A1A     		subs	r2, r3, r2
 1209 00c6 0A60     		str	r2, [r1]
 173:Src/main.c    **** 	
 1210              		.loc 1 173 0
 1211 00c8 23B9     		cbnz	r3, .L70
 173:Src/main.c    **** 	
 1212              		.loc 1 173 0 is_stmt 0 discriminator 1
 1213 00ca 4FF40051 		mov	r1, #8192
 1214 00ce 2148     		ldr	r0, .L75+40
 1215 00d0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1216              	.LVL64:
 1217              	.L70:
 175:Src/main.c    **** 	if (control > 255) control = 255;
 1218              		.loc 1 175 0 is_stmt 1
 1219 00d4 204B     		ldr	r3, .L75+44
 1220 00d6 1B68     		ldr	r3, [r3]
 1221 00d8 002B     		cmp	r3, #0
 1222 00da 02DA     		bge	.L71
 175:Src/main.c    **** 	if (control > 255) control = 255;
 1223              		.loc 1 175 0 is_stmt 0 discriminator 1
 1224 00dc 0022     		movs	r2, #0
 1225 00de 1E4B     		ldr	r3, .L75+44
 1226 00e0 1A60     		str	r2, [r3]
 1227              	.L71:
 176:Src/main.c    **** 	
 1228              		.loc 1 176 0 is_stmt 1
 1229 00e2 1D4B     		ldr	r3, .L75+44
 1230 00e4 1B68     		ldr	r3, [r3]
 1231 00e6 FF2B     		cmp	r3, #255
 1232 00e8 02DD     		ble	.L72
 176:Src/main.c    **** 	
 1233              		.loc 1 176 0 is_stmt 0 discriminator 1
 1234 00ea FF22     		movs	r2, #255
 1235 00ec 1A4B     		ldr	r3, .L75+44
 1236 00ee 1A60     		str	r2, [r3]
 1237              	.L72:
 184:Src/main.c    **** 	data[1] = control;
 1238              		.loc 1 184 0 is_stmt 1
 1239 00f0 0023     		movs	r3, #0
 1240 00f2 8DF80C30 		strb	r3, [sp, #12]
 185:Src/main.c    **** 	if (HAL_I2C_Master_Transmit(&hi2c1, (0b0101111)<<1, data, sizeof(data), 1000) == HAL_OK)
 1241              		.loc 1 185 0
 1242 00f6 184B     		ldr	r3, .L75+44
 1243 00f8 1B68     		ldr	r3, [r3]
 1244 00fa 8DF80D30 		strb	r3, [sp, #13]
 186:Src/main.c    **** 	{
 1245              		.loc 1 186 0
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 37


 1246 00fe 4FF47A74 		mov	r4, #1000
 1247 0102 0094     		str	r4, [sp]
 1248 0104 0223     		movs	r3, #2
 1249 0106 03AA     		add	r2, sp, #12
 1250 0108 5E21     		movs	r1, #94
 1251 010a 1448     		ldr	r0, .L75+48
 1252 010c FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1253              	.LVL65:
 191:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data, sizeof(data), 1000);
 1254              		.loc 1 191 0
 1255 0110 0D4B     		ldr	r3, .L75+28
 1256 0112 1B68     		ldr	r3, [r3]
 1257 0114 8DF80C30 		strb	r3, [sp, #12]
 192:Src/main.c    **** 	HAL_Delay(50);
 1258              		.loc 1 192 0
 1259 0118 2346     		mov	r3, r4
 1260 011a 0222     		movs	r2, #2
 1261 011c 03A9     		add	r1, sp, #12
 1262 011e 1048     		ldr	r0, .L75+52
 1263 0120 FFF7FEFF 		bl	HAL_UART_Transmit
 1264              	.LVL66:
 193:Src/main.c    **** 	
 1265              		.loc 1 193 0
 1266 0124 3220     		movs	r0, #50
 1267 0126 FFF7FEFF 		bl	HAL_Delay
 1268              	.LVL67:
 1269              	.LBE5:
 210:Src/main.c    ****   /* USER CODE END 3 */
 1270              		.loc 1 210 0
 1271 012a 7DE7     		b	.L73
 1272              	.L76:
 1273              		.align	2
 1274              	.L75:
 1275 012c 00000000 		.word	.LANCHOR2
 1276 0130 00000000 		.word	.LANCHOR3
 1277 0134 00000000 		.word	.LANCHOR4
 1278 0138 00000000 		.word	.LANCHOR5
 1279 013c 00000000 		.word	.LANCHOR16
 1280 0140 00000000 		.word	.LANCHOR17
 1281 0144 00000000 		.word	.LANCHOR18
 1282 0148 00000000 		.word	.LANCHOR6
 1283 014c 00000000 		.word	.LANCHOR9
 1284 0150 00000000 		.word	.LANCHOR19
 1285 0154 00100140 		.word	1073811456
 1286 0158 00000000 		.word	.LANCHOR15
 1287 015c 00000000 		.word	hi2c1
 1288 0160 00000000 		.word	huart1
 1289              		.cfi_endproc
 1290              	.LFE63:
 1292              		.section	.text.Error_Handler,"ax",%progbits
 1293              		.align	2
 1294              		.global	Error_Handler
 1295              		.thumb
 1296              		.thumb_func
 1298              	Error_Handler:
 1299              	.LFB80:
 666:Src/main.c    **** 
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 38


 667:Src/main.c    **** /* USER CODE BEGIN 4 */
 668:Src/main.c    **** 
 669:Src/main.c    **** /* USER CODE END 4 */
 670:Src/main.c    **** 
 671:Src/main.c    **** /**
 672:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 673:Src/main.c    ****   * @retval None
 674:Src/main.c    ****   */
 675:Src/main.c    **** void Error_Handler(void)
 676:Src/main.c    **** {
 1300              		.loc 1 676 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 0, uses_anonymous_args = 0
 1304              		@ link register save eliminated.
 1305 0000 7047     		bx	lr
 1306              		.cfi_endproc
 1307              	.LFE80:
 1309              		.global	traction_control_count
 1310              		.global	br
 1311              		.global	bl
 1312              		.global	fr
 1313              		.global	fl
 1314              		.global	tc_on
 1315              		.global	back_avg
 1316              		.global	front_avg
 1317              		.global	prev_error
 1318              		.global	error
 1319              		.global	slip
 1320              		.global	control
 1321              		.global	derivative
 1322              		.global	integral
 1323              		.global	dt
 1324              		.global	pid_rate
 1325              		.global	kd
 1326              		.global	ki
 1327              		.global	kp
 1328              		.global	bias
 1329              		.global	setpoint
 1330              		.comm	huart1,64,4
 1331              		.comm	htim3,64,4
 1332              		.comm	htim2,64,4
 1333              		.comm	hspi1,88,4
 1334              		.comm	hi2c1,84,4
 1335              		.comm	hadc1,48,4
 1336 0002 00BF     		.section	.bss.integral,"aw",%nobits
 1337              		.align	2
 1338              		.set	.LANCHOR8,. + 0
 1341              	integral:
 1342 0000 00000000 		.space	4
 1343              		.section	.bss.fr,"aw",%nobits
 1344              		.align	2
 1345              		.set	.LANCHOR3,. + 0
 1348              	fr:
 1349 0000 00000000 		.space	20
 1349      00000000 
 1349      00000000 
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 39


 1349      00000000 
 1349      00000000 
 1350              		.section	.bss.derivative,"aw",%nobits
 1351              		.align	2
 1352              		.set	.LANCHOR10,. + 0
 1355              	derivative:
 1356 0000 00000000 		.space	4
 1357              		.section	.data.dt,"aw",%progbits
 1358              		.align	2
 1359              		.set	.LANCHOR7,. + 0
 1362              	dt:
 1363 0000 0AD7233D 		.word	1025758986
 1364              		.section	.bss.bl,"aw",%nobits
 1365              		.align	2
 1366              		.set	.LANCHOR4,. + 0
 1369              	bl:
 1370 0000 00000000 		.space	20
 1370      00000000 
 1370      00000000 
 1370      00000000 
 1370      00000000 
 1371              		.section	.bss.back_avg,"aw",%nobits
 1372              		.align	2
 1373              		.set	.LANCHOR17,. + 0
 1376              	back_avg:
 1377 0000 00000000 		.space	4
 1378              		.section	.bss.setpoint,"aw",%nobits
 1379              		.align	2
 1380              		.set	.LANCHOR19,. + 0
 1383              	setpoint:
 1384 0000 00000000 		.space	4
 1385              		.section	.data.bias,"aw",%progbits
 1386              		.align	2
 1387              		.set	.LANCHOR12,. + 0
 1390              	bias:
 1391 0000 32000000 		.word	50
 1392              		.section	.data.pid_rate,"aw",%progbits
 1393              		.align	2
 1394              		.set	.LANCHOR0,. + 0
 1397              	pid_rate:
 1398 0000 19000000 		.word	25
 1399              		.section	.bss.br,"aw",%nobits
 1400              		.align	2
 1401              		.set	.LANCHOR5,. + 0
 1404              	br:
 1405 0000 00000000 		.space	20
 1405      00000000 
 1405      00000000 
 1405      00000000 
 1405      00000000 
 1406              		.section	.bss.kd,"aw",%nobits
 1407              		.align	2
 1408              		.set	.LANCHOR14,. + 0
 1411              	kd:
 1412 0000 00000000 		.space	4
 1413              		.section	.bss.slip,"aw",%nobits
 1414              		.align	2
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 40


 1415              		.set	.LANCHOR18,. + 0
 1418              	slip:
 1419 0000 00000000 		.space	4
 1420              		.section	.bss.ki,"aw",%nobits
 1421              		.align	2
 1422              		.set	.LANCHOR13,. + 0
 1425              	ki:
 1426 0000 00000000 		.space	4
 1427              		.section	.bss.front_avg,"aw",%nobits
 1428              		.align	2
 1429              		.set	.LANCHOR16,. + 0
 1432              	front_avg:
 1433 0000 00000000 		.space	4
 1434              		.section	.bss.error,"aw",%nobits
 1435              		.align	2
 1436              		.set	.LANCHOR6,. + 0
 1439              	error:
 1440 0000 00000000 		.space	4
 1441              		.section	.data.kp,"aw",%progbits
 1442              		.align	2
 1443              		.set	.LANCHOR11,. + 0
 1446              	kp:
 1447 0000 0000803F 		.word	1065353216
 1448              		.section	.bss.prev_error,"aw",%nobits
 1449              		.align	2
 1450              		.set	.LANCHOR9,. + 0
 1453              	prev_error:
 1454 0000 00000000 		.space	4
 1455              		.section	.bss.traction_control_count,"aw",%nobits
 1456              		.set	.LANCHOR1,. + 0
 1459              	traction_control_count:
 1460 0000 00       		.space	1
 1461              		.section	.data.tc_on,"aw",%progbits
 1462              		.align	2
 1465              	tc_on:
 1466 0000 01000000 		.word	1
 1467              		.section	.bss.control,"aw",%nobits
 1468              		.align	2
 1469              		.set	.LANCHOR15,. + 0
 1472              	control:
 1473 0000 00000000 		.space	4
 1474              		.section	.bss.fl,"aw",%nobits
 1475              		.align	2
 1476              		.set	.LANCHOR2,. + 0
 1479              	fl:
 1480 0000 00000000 		.space	20
 1480      00000000 
 1480      00000000 
 1480      00000000 
 1480      00000000 
 1481              		.text
 1482              	.Letext0:
 1483              		.file 2 "/Users/msd/Downloads/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_
 1484              		.file 3 "/Users/msd/Downloads/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 1485              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1486              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1487              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 41


 1488              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1489              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1490              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1491              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1492              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1493              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1494              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1495              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1496              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1497              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1498              		.file 17 "Inc/main.h"
 1499              		.file 18 "Drivers/CMSIS/Include/core_cm3.h"
 1500              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1501              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:20     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:162    .text.MX_GPIO_Init:00000000000000c4 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:170    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:174    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:215    .text.MX_I2C1_Init:0000000000000028 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:222    .text.MX_SPI1_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:226    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:274    .text.MX_SPI1_Init:0000000000000030 $d
                            *COM*:0000000000000058 hspi1
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:280    .text.MX_USART1_UART_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:284    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:323    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:329    .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:333    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:407    .text.MX_TIM2_Init:0000000000000054 $d
                            *COM*:0000000000000040 htim2
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:412    .text.MX_TIM3_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:416    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:493    .text.MX_TIM3_Init:000000000000005c $d
                            *COM*:0000000000000040 htim3
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:500    .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:504    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:568    .text.MX_ADC1_Init:0000000000000040 $d
                            *COM*:0000000000000030 hadc1
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:574    .text.UpdateWheel:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:579    .text.UpdateWheel:0000000000000000 UpdateWheel
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:620    .text.UpdateWheel:000000000000002c $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:626    .text.EXTI0_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:631    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:654    .text.EXTI0_IRQHandler:0000000000000010 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:659    .text.EXTI1_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:664    .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:687    .text.EXTI1_IRQHandler:0000000000000010 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:692    .text.EXTI2_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:697    .text.EXTI2_IRQHandler:0000000000000000 EXTI2_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:720    .text.EXTI2_IRQHandler:0000000000000010 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:725    .text.EXTI3_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:730    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:753    .text.EXTI3_IRQHandler:0000000000000010 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:758    .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:763    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:815    .text.TIM2_IRQHandler:0000000000000044 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:830    .text.TIM3_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:835    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:938    .text.TIM3_IRQHandler:000000000000009c $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:954    .text.SPI1_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:959    .text.SPI1_IRQHandler:0000000000000000 SPI1_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:978    .text.SPI1_IRQHandler:000000000000000c $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:983    .text.SystemClock_Config:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:988    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1068   .text.main:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1073   .text.main:0000000000000000 main
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 43


/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1275   .text.main:000000000000012c $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1293   .text.Error_Handler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1298   .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1459   .bss.traction_control_count:0000000000000000 traction_control_count
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1404   .bss.br:0000000000000000 br
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1369   .bss.bl:0000000000000000 bl
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1348   .bss.fr:0000000000000000 fr
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1479   .bss.fl:0000000000000000 fl
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1465   .data.tc_on:0000000000000000 tc_on
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1376   .bss.back_avg:0000000000000000 back_avg
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1432   .bss.front_avg:0000000000000000 front_avg
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1453   .bss.prev_error:0000000000000000 prev_error
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1439   .bss.error:0000000000000000 error
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1418   .bss.slip:0000000000000000 slip
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1472   .bss.control:0000000000000000 control
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1355   .bss.derivative:0000000000000000 derivative
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1341   .bss.integral:0000000000000000 integral
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1362   .data.dt:0000000000000000 dt
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1397   .data.pid_rate:0000000000000000 pid_rate
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1411   .bss.kd:0000000000000000 kd
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1425   .bss.ki:0000000000000000 ki
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1446   .data.kp:0000000000000000 kp
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1390   .data.bias:0000000000000000 bias
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1383   .bss.setpoint:0000000000000000 setpoint
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1337   .bss.integral:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1344   .bss.fr:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1351   .bss.derivative:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1358   .data.dt:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1365   .bss.bl:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1372   .bss.back_avg:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1379   .bss.setpoint:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1386   .data.bias:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1393   .data.pid_rate:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1400   .bss.br:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1407   .bss.kd:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1414   .bss.slip:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1421   .bss.ki:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1428   .bss.front_avg:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1435   .bss.error:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1442   .data.kp:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1449   .bss.prev_error:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1460   .bss.traction_control_count:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1462   .data.tc_on:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1468   .bss.control:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s:1475   .bss.fl:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_I2C_Init
HAL_SPI_Init
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccgI5fU1.s 			page 44


HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Start_IT
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_IRQHandler
__aeabi_i2f
__aeabi_fmul
__aeabi_fadd
__aeabi_fdiv
__aeabi_f2iz
HAL_SPI_IRQHandler
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_I2C_Master_Transmit
HAL_UART_Transmit
HAL_Delay
