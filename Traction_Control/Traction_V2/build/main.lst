ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB78:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
   2:Src/main.c    **** #include "main.h"
   3:Src/main.c    **** 
   4:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
   5:Src/main.c    **** /* USER CODE BEGIN Includes */
   6:Src/main.c    **** 
   7:Src/main.c    **** /* USER CODE END Includes */
   8:Src/main.c    **** 
   9:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  10:Src/main.c    **** /* USER CODE BEGIN PTD */
  11:Src/main.c    **** 
  12:Src/main.c    **** /* USER CODE END PTD */
  13:Src/main.c    **** 
  14:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  15:Src/main.c    **** /* USER CODE BEGIN PD */
  16:Src/main.c    **** 
  17:Src/main.c    **** /* USER CODE END PD */
  18:Src/main.c    **** 
  19:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  20:Src/main.c    **** /* USER CODE BEGIN PM */
  21:Src/main.c    **** 
  22:Src/main.c    **** /* USER CODE END PM */
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  25:Src/main.c    **** ADC_HandleTypeDef hadc1;
  26:Src/main.c    **** 
  27:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  28:Src/main.c    **** 
  29:Src/main.c    **** SPI_HandleTypeDef hspi1;
  30:Src/main.c    **** 
  31:Src/main.c    **** TIM_HandleTypeDef htim2;
  32:Src/main.c    **** TIM_HandleTypeDef htim3;
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** UART_HandleTypeDef huart1;
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE BEGIN PV */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* parameter list:
  39:Src/main.c    **** 
  40:Src/main.c    **** PID: Kp, Ki, Kd, update rate (TIM)
  41:Src/main.c    **** EXTI: TIM frequency, timeout value
  42:Src/main.c    **** 
  43:Src/main.c    **** pot i2c address
  44:Src/main.c    **** 
  45:Src/main.c    **** EXTI0 = front left wheel
  46:Src/main.c    **** EXTI1 = front right wheel
  47:Src/main.c    **** EXTI2 = back left wheel
  48:Src/main.c    **** EXTI3 = back right wheel
  49:Src/main.c    **** TIM2 = freq measurement timer
  50:Src/main.c    **** TIM3 = PID timer
  51:Src/main.c    **** 
  52:Src/main.c    **** timeout - if count == 3, reset count, freq = 0
  53:Src/main.c    **** 
  54:Src/main.c    **** 
  55:Src/main.c    **** */
  56:Src/main.c    **** 
  57:Src/main.c    **** int setpoint = 0;
  58:Src/main.c    **** int bias = 50;
  59:Src/main.c    **** 
  60:Src/main.c    **** float kp = 1;
  61:Src/main.c    **** float ki = 0;
  62:Src/main.c    **** float kd = 0; 
  63:Src/main.c    **** int pid_rate = 25; // Hz
  64:Src/main.c    **** float dt = 0.04;
  65:Src/main.c    **** 
  66:Src/main.c    **** float integral = 0;
  67:Src/main.c    **** float derivative = 0;
  68:Src/main.c    **** 
  69:Src/main.c    **** int control = 0;
  70:Src/main.c    **** int slip = 0;
  71:Src/main.c    **** int error = 0;
  72:Src/main.c    **** int prev_error = 0;
  73:Src/main.c    **** int front_avg = 0;
  74:Src/main.c    **** int back_avg = 0;
  75:Src/main.c    **** 
  76:Src/main.c    **** int tc_on = 1;
  77:Src/main.c    **** 
  78:Src/main.c    **** //front left wheel
  79:Src/main.c    **** int fl_new = 0; // current timer value
  80:Src/main.c    **** int fl_old = 0; // previous timer value
  81:Src/main.c    **** int fl_count = 0; // count TIM2 resets between fl_new and fl_old
  82:Src/main.c    **** int fl_delta = 0; // difference in ticks between new and old
  83:Src/main.c    **** int fl_freq = 0; // frequency in Hz
  84:Src/main.c    **** 
  85:Src/main.c    **** //front right wheel
  86:Src/main.c    **** int fr_new = 0; // current timer value
  87:Src/main.c    **** int fr_old = 0; // previous timer value
  88:Src/main.c    **** int fr_count = 0; // count TIM2 resets between fl_new and fl_old
  89:Src/main.c    **** int fr_delta = 0; // difference in ticks between new and old
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 3


  90:Src/main.c    **** int fr_freq = 0; // frequency in Hz
  91:Src/main.c    **** 
  92:Src/main.c    **** //back left wheel
  93:Src/main.c    **** int bl_new = 0; // current timer value
  94:Src/main.c    **** int bl_old = 0; // previous timer value
  95:Src/main.c    **** int bl_count = 0; // count TIM2 resets between fl_new and fl_old
  96:Src/main.c    **** int bl_delta = 0; // difference in ticks between new and old
  97:Src/main.c    **** int bl_freq = 0; // frequency in Hz
  98:Src/main.c    **** 
  99:Src/main.c    **** //back right wheel
 100:Src/main.c    **** int br_new = 0; // current timer value
 101:Src/main.c    **** int br_old = 0; // previous timer value
 102:Src/main.c    **** int br_count = 0; // count TIM2 resets between fl_new and fl_old
 103:Src/main.c    **** int br_delta = 0; // difference in ticks between new and old
 104:Src/main.c    **** int br_freq = 0; // frequency in Hz
 105:Src/main.c    **** 
 106:Src/main.c    **** // traction control code
 107:Src/main.c    **** uint8_t traction_control_count = 0;
 108:Src/main.c    **** #define MAX_CONTROL_VALUE 255
 109:Src/main.c    **** #define TRACTION_DISABLE_COUNT 8
 110:Src/main.c    **** #define MIN(x, y) ((y) ^ (((x) ^ (y)) & -((x) < (y))))
 111:Src/main.c    **** #define MAX(x, y) ((x) ^ (((x) ^ (y)) & -((x) < (y))))
 112:Src/main.c    **** 
 113:Src/main.c    **** /* USER CODE END PV */
 114:Src/main.c    **** 
 115:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 116:Src/main.c    **** void SystemClock_Config(void);
 117:Src/main.c    **** static void MX_GPIO_Init(void);
 118:Src/main.c    **** static void MX_I2C1_Init(void);
 119:Src/main.c    **** static void MX_SPI1_Init(void);
 120:Src/main.c    **** static void MX_USART1_UART_Init(void);
 121:Src/main.c    **** static void MX_TIM2_Init(void);
 122:Src/main.c    **** static void MX_ADC1_Init(void);
 123:Src/main.c    **** static void MX_TIM3_Init(void);
 124:Src/main.c    **** /* USER CODE BEGIN PFP */
 125:Src/main.c    **** 
 126:Src/main.c    **** /* USER CODE END PFP */
 127:Src/main.c    **** 
 128:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 129:Src/main.c    **** /* USER CODE BEGIN 0 */
 130:Src/main.c    **** 
 131:Src/main.c    **** /* USER CODE END 0 */
 132:Src/main.c    **** 
 133:Src/main.c    **** /**
 134:Src/main.c    ****   * @brief  The application entry point.
 135:Src/main.c    ****   * @retval int
 136:Src/main.c    ****   */
 137:Src/main.c    **** int main(void)
 138:Src/main.c    **** {
 139:Src/main.c    ****   /* USER CODE BEGIN 1 */
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* USER CODE END 1 */
 142:Src/main.c    **** 
 143:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 144:Src/main.c    **** 
 145:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 146:Src/main.c    ****   HAL_Init();
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****   /* USER CODE BEGIN Init */
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* USER CODE END Init */
 151:Src/main.c    **** 
 152:Src/main.c    ****   /* Configure the system clock */
 153:Src/main.c    ****   SystemClock_Config();
 154:Src/main.c    **** 
 155:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 156:Src/main.c    **** 
 157:Src/main.c    ****   /* USER CODE END SysInit */
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* Initialize all configured peripherals */
 160:Src/main.c    ****   MX_GPIO_Init();
 161:Src/main.c    ****   MX_I2C1_Init();
 162:Src/main.c    ****   MX_SPI1_Init();
 163:Src/main.c    ****   MX_USART1_UART_Init();
 164:Src/main.c    ****   MX_TIM2_Init();
 165:Src/main.c    ****   MX_ADC1_Init();
 166:Src/main.c    ****   MX_TIM3_Init();
 167:Src/main.c    ****   /* USER CODE BEGIN 2 */
 168:Src/main.c    ****   unsigned char data[1];
 169:Src/main.c    ****   /* USER CODE END 2 */
 170:Src/main.c    **** 
 171:Src/main.c    ****   /* Infinite loop */
 172:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 173:Src/main.c    ****   while (1)
 174:Src/main.c    ****   {
 175:Src/main.c    ****     /* USER CODE END WHILE */
 176:Src/main.c    **** 	
 177:Src/main.c    **** 	/* if (tc_on) PID_controller();
 178:Src/main.c    **** 	else I = 0, send lowest R over I2C */
 179:Src/main.c    **** 	// PID interrupt still runs when TC is off, but the value isn't sent
 180:Src/main.c    **** 	
 181:Src/main.c    **** 	fl_freq = 40000 / fl_delta;
 182:Src/main.c    **** 	fr_freq = 40000 / fr_delta;
 183:Src/main.c    **** 	bl_freq = 40000 / bl_delta;
 184:Src/main.c    **** 	br_freq = 40000 / br_delta;
 185:Src/main.c    **** 	
 186:Src/main.c    **** 	if (fl_count >= 2) fl_freq = 0;
 187:Src/main.c    **** 	if (fr_count >= 2) fr_freq = 0;
 188:Src/main.c    **** 	if (bl_count >= 2) bl_freq = 0;
 189:Src/main.c    **** 	if (br_count >= 2) br_freq = 0;
 190:Src/main.c    **** 	
 191:Src/main.c    **** 	front_avg = (fl_freq + fr_freq) / 2;
 192:Src/main.c    **** 	back_avg = (bl_freq + br_freq) / 2;
 193:Src/main.c    **** 	
 194:Src/main.c    **** 	slip = front_avg - back_avg;
 195:Src/main.c    **** 	
 196:Src/main.c    **** 	prev_error = error;
 197:Src/main.c    **** 	error = slip - setpoint;
 198:Src/main.c    **** 	
 199:Src/main.c    **** 	if (slip == 0) HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 200:Src/main.c    **** 	
 201:Src/main.c    **** 	if (control < 0) control = 0;
 202:Src/main.c    **** 	if (control > 255) control = 255;
 203:Src/main.c    **** 	
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 5


 204:Src/main.c    **** 	/*unsigned char spi_data[2];
 205:Src/main.c    **** 	spi_data[0] = 0;
 206:Src/main.c    **** 	spi_data[1] = 255;
 207:Src/main.c    **** 	HAL_SPI_Transmit(&hspi1, spi_data, sizeof(spi_data), 1000);*/
 208:Src/main.c    **** 	
 209:Src/main.c    **** 	unsigned char data[2];
 210:Src/main.c    **** 	data[0] = 0x00;
 211:Src/main.c    **** 	data[1] = control;
 212:Src/main.c    **** 	if (HAL_I2C_Master_Transmit(&hi2c1, (0b0101111)<<1, data, sizeof(data), 1000) == HAL_OK)
 213:Src/main.c    **** 	{
 214:Src/main.c    **** 		//HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 215:Src/main.c    **** 	}
 216:Src/main.c    **** 	
 217:Src/main.c    **** 	data[0] = error;
 218:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data, sizeof(data), 1000);
 219:Src/main.c    **** 	HAL_Delay(50);
 220:Src/main.c    **** 	
 221:Src/main.c    **** 	
 222:Src/main.c    **** 	/*data[0] = fl_freq;
 223:Src/main.c    **** 	data[1] = 0xFF;
 224:Src/main.c    **** 	data[2] = fr_freq;
 225:Src/main.c    **** 	data[3] = 0xFF;
 226:Src/main.c    **** 	data[4] = bl_freq;
 227:Src/main.c    **** 	data[5] = 0xFF;
 228:Src/main.c    **** 	data[6] = br_freq;
 229:Src/main.c    **** 	data[7] = 0xFF;
 230:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data, sizeof(data), 1000);
 231:Src/main.c    **** 	HAL_Delay(500);*/
 232:Src/main.c    **** 	
 233:Src/main.c    **** 	
 234:Src/main.c    **** 	
 235:Src/main.c    ****     /* USER CODE BEGIN 3 */
 236:Src/main.c    ****   }
 237:Src/main.c    ****   /* USER CODE END 3 */
 238:Src/main.c    **** }
 239:Src/main.c    **** 
 240:Src/main.c    **** /******************************************************************************/
 241:Src/main.c    **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 242:Src/main.c    **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 243:Src/main.c    **** /* For the available peripheral interrupt handler names,                      */
 244:Src/main.c    **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 245:Src/main.c    **** /******************************************************************************/
 246:Src/main.c    **** 
 247:Src/main.c    **** /**
 248:Src/main.c    ****   * @brief This function handles EXTI line0 interrupt.
 249:Src/main.c    ****   */
 250:Src/main.c    **** void EXTI0_IRQHandler(void)
 251:Src/main.c    **** {
 252:Src/main.c    ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 253:Src/main.c    ****   fl_new = __HAL_TIM_GET_COUNTER(&htim2);
 254:Src/main.c    ****   fl_delta = fl_new - fl_old + 40000 * fl_count;
 255:Src/main.c    ****   fl_old = fl_new;
 256:Src/main.c    ****   fl_count = 0;
 257:Src/main.c    ****   traction_control_count = 0;
 258:Src/main.c    ****   /* USER CODE END EXTI0_IRQn 0 */
 259:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 260:Src/main.c    ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 6


 261:Src/main.c    **** 
 262:Src/main.c    ****   /* USER CODE END EXTI0_IRQn 1 */
 263:Src/main.c    **** }
 264:Src/main.c    **** 
 265:Src/main.c    **** /**
 266:Src/main.c    ****   * @brief This function handles EXTI line1 interrupt.
 267:Src/main.c    ****   */
 268:Src/main.c    **** void EXTI1_IRQHandler(void)
 269:Src/main.c    **** {
 270:Src/main.c    ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 271:Src/main.c    ****   fr_new = __HAL_TIM_GET_COUNTER(&htim2);
 272:Src/main.c    ****   fr_delta = fr_new - fr_old + 40000 * fr_count;
 273:Src/main.c    ****   fr_old = fr_new;
 274:Src/main.c    ****   fr_count = 0;
 275:Src/main.c    ****   traction_control_count = 0;
 276:Src/main.c    ****   /* USER CODE END EXTI1_IRQn 0 */
 277:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 278:Src/main.c    ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 279:Src/main.c    **** 
 280:Src/main.c    ****   /* USER CODE END EXTI1_IRQn 1 */
 281:Src/main.c    **** }
 282:Src/main.c    **** 
 283:Src/main.c    **** /**
 284:Src/main.c    ****   * @brief This function handles EXTI line2 interrupt.
 285:Src/main.c    ****   */
 286:Src/main.c    **** void EXTI2_IRQHandler(void)
 287:Src/main.c    **** {
 288:Src/main.c    ****   /* USER CODE BEGIN EXTI2_IRQn 0 */
 289:Src/main.c    ****   bl_new = __HAL_TIM_GET_COUNTER(&htim2);
 290:Src/main.c    ****   bl_delta = bl_new - bl_old + 40000 * bl_count;
 291:Src/main.c    ****   bl_old = bl_new;
 292:Src/main.c    ****   bl_count = 0;
 293:Src/main.c    ****   traction_control_count = 0;
 294:Src/main.c    ****   /* USER CODE END EXTI2_IRQn 0 */
 295:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 296:Src/main.c    ****   /* USER CODE BEGIN EXTI2_IRQn 1 */
 297:Src/main.c    **** 
 298:Src/main.c    ****   /* USER CODE END EXTI2_IRQn 1 */
 299:Src/main.c    **** }
 300:Src/main.c    **** 
 301:Src/main.c    **** /**
 302:Src/main.c    ****   * @brief This function handles EXTI line3 interrupt.
 303:Src/main.c    ****   */
 304:Src/main.c    **** void EXTI3_IRQHandler(void)
 305:Src/main.c    **** {
 306:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 307:Src/main.c    ****   br_new = __HAL_TIM_GET_COUNTER(&htim2);
 308:Src/main.c    ****   br_delta = br_new - br_old + 40000 * br_count;
 309:Src/main.c    ****   br_old = br_new;
 310:Src/main.c    ****   br_count = 0;
 311:Src/main.c    ****   traction_control_count = 0;
 312:Src/main.c    ****   /* USER CODE END EXTI3_IRQn 0 */
 313:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 314:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 315:Src/main.c    **** 
 316:Src/main.c    ****   /* USER CODE END EXTI3_IRQn 1 */
 317:Src/main.c    **** }
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 7


 318:Src/main.c    **** 
 319:Src/main.c    **** /**
 320:Src/main.c    ****   * @brief This function handles TIM2 global interrupt.
 321:Src/main.c    ****   */
 322:Src/main.c    **** void TIM2_IRQHandler(void)
 323:Src/main.c    **** {
 324:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 325:Src/main.c    ****   fl_count++;
 326:Src/main.c    ****   fr_count++;
 327:Src/main.c    ****   bl_count++;
 328:Src/main.c    ****   br_count++;
 329:Src/main.c    ****   /* USER CODE END TIM2_IRQn 0 */
 330:Src/main.c    ****   HAL_TIM_IRQHandler(&htim2);
 331:Src/main.c    ****   // If traction control is greater than the max, set to TRACTION_DISABLE_COUNT+1
 332:Src/main.c    ****   traction_control_count = MIN(TRACTION_DISABLE_COUNT + 1, traction_control_count++);
 333:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 334:Src/main.c    **** 
 335:Src/main.c    ****   /* USER CODE END TIM2_IRQn 1 */
 336:Src/main.c    **** }
 337:Src/main.c    **** 
 338:Src/main.c    **** /**
 339:Src/main.c    ****   * @brief This function handles TIM3 global interrupt.
 340:Src/main.c    ****   */
 341:Src/main.c    **** void TIM3_IRQHandler(void)
 342:Src/main.c    **** {
 343:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 344:Src/main.c    ****   // calculate I, D, and control value (need this here because otherwise P would update faster)
 345:Src/main.c    ****   integral += dt * error;
 346:Src/main.c    ****   derivative = (error - prev_error) / dt;
 347:Src/main.c    ****   
 348:Src/main.c    ****   control = traction_control_count > TRACTION_DISABLE_COUNT 
 349:Src/main.c    **** 	  ? MAX_CONTROL_VALUE 
 350:Src/main.c    **** 	  : bias + kp * error + ki * integral + kd * derivative;
 351:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 352:Src/main.c    ****   HAL_TIM_IRQHandler(&htim3);
 353:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 354:Src/main.c    **** 
 355:Src/main.c    ****   /* USER CODE END TIM3_IRQn 1 */
 356:Src/main.c    **** }
 357:Src/main.c    **** 
 358:Src/main.c    **** /**
 359:Src/main.c    ****   * @brief This function handles SPI1 global interrupt.
 360:Src/main.c    ****   */
 361:Src/main.c    **** void SPI1_IRQHandler(void)
 362:Src/main.c    **** {
 363:Src/main.c    ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 364:Src/main.c    **** 
 365:Src/main.c    ****   /* USER CODE END SPI1_IRQn 0 */
 366:Src/main.c    ****   HAL_SPI_IRQHandler(&hspi1);
 367:Src/main.c    ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 368:Src/main.c    **** 
 369:Src/main.c    ****   /* USER CODE END SPI1_IRQn 1 */
 370:Src/main.c    **** }
 371:Src/main.c    **** 
 372:Src/main.c    **** /**
 373:Src/main.c    ****   * @brief System Clock Configuration
 374:Src/main.c    ****   * @retval None
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 8


 375:Src/main.c    ****   */
 376:Src/main.c    **** void SystemClock_Config(void)
 377:Src/main.c    **** {
 378:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 379:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 380:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 381:Src/main.c    **** 
 382:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 383:Src/main.c    ****   */
 384:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 385:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 386:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 387:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 388:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 389:Src/main.c    ****   {
 390:Src/main.c    ****     Error_Handler();
 391:Src/main.c    ****   }
 392:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 393:Src/main.c    ****   */
 394:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 395:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 396:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 397:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 398:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 399:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 400:Src/main.c    **** 
 401:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 402:Src/main.c    ****   {
 403:Src/main.c    ****     Error_Handler();
 404:Src/main.c    ****   }
 405:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 406:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 407:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 408:Src/main.c    ****   {
 409:Src/main.c    ****     Error_Handler();
 410:Src/main.c    ****   }
 411:Src/main.c    **** }
 412:Src/main.c    **** 
 413:Src/main.c    **** /**
 414:Src/main.c    ****   * @brief ADC1 Initialization Function
 415:Src/main.c    ****   * @param None
 416:Src/main.c    ****   * @retval None
 417:Src/main.c    ****   */
 418:Src/main.c    **** static void MX_ADC1_Init(void)
 419:Src/main.c    **** {
 420:Src/main.c    **** 
 421:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 422:Src/main.c    **** 
 423:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 424:Src/main.c    **** 
 425:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 426:Src/main.c    **** 
 427:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 428:Src/main.c    **** 
 429:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 430:Src/main.c    ****   /**Common config 
 431:Src/main.c    ****   */
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 9


 432:Src/main.c    ****   hadc1.Instance = ADC1;
 433:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 434:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 435:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 436:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 437:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 438:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 439:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 440:Src/main.c    ****   {
 441:Src/main.c    ****     Error_Handler();
 442:Src/main.c    ****   }
 443:Src/main.c    ****   /**Configure Regular Channel 
 444:Src/main.c    ****   */
 445:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 446:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 447:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 448:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 449:Src/main.c    ****   {
 450:Src/main.c    ****     Error_Handler();
 451:Src/main.c    ****   }
 452:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 453:Src/main.c    **** 
 454:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 455:Src/main.c    **** 
 456:Src/main.c    **** }
 457:Src/main.c    **** 
 458:Src/main.c    **** /**
 459:Src/main.c    ****   * @brief I2C1 Initialization Function
 460:Src/main.c    ****   * @param None
 461:Src/main.c    ****   * @retval None
 462:Src/main.c    ****   */
 463:Src/main.c    **** static void MX_I2C1_Init(void)
 464:Src/main.c    **** {
 465:Src/main.c    **** 
 466:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 0 */
 467:Src/main.c    **** 
 468:Src/main.c    ****   /* USER CODE END I2C1_Init 0 */
 469:Src/main.c    **** 
 470:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 1 */
 471:Src/main.c    **** 
 472:Src/main.c    ****   /* USER CODE END I2C1_Init 1 */
 473:Src/main.c    ****   hi2c1.Instance = I2C1;
 474:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 475:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 476:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 477:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 478:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 479:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 480:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 481:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 482:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 483:Src/main.c    ****   {
 484:Src/main.c    ****     Error_Handler();
 485:Src/main.c    ****   }
 486:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 2 */
 487:Src/main.c    **** 
 488:Src/main.c    ****   /* USER CODE END I2C1_Init 2 */
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 10


 489:Src/main.c    **** 
 490:Src/main.c    **** }
 491:Src/main.c    **** 
 492:Src/main.c    **** /**
 493:Src/main.c    ****   * @brief SPI1 Initialization Function
 494:Src/main.c    ****   * @param None
 495:Src/main.c    ****   * @retval None
 496:Src/main.c    ****   */
 497:Src/main.c    **** static void MX_SPI1_Init(void)
 498:Src/main.c    **** {
 499:Src/main.c    **** 
 500:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 501:Src/main.c    **** 
 502:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 503:Src/main.c    **** 
 504:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 505:Src/main.c    **** 
 506:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 507:Src/main.c    ****   /* SPI1 parameter configuration*/
 508:Src/main.c    ****   hspi1.Instance = SPI1;
 509:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER; // change to slave later
 510:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 511:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 512:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 513:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 514:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 515:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 516:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 517:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 518:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 519:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 520:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 521:Src/main.c    ****   {
 522:Src/main.c    ****     Error_Handler();
 523:Src/main.c    ****   }
 524:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 525:Src/main.c    **** 
 526:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 527:Src/main.c    **** 
 528:Src/main.c    **** }
 529:Src/main.c    **** 
 530:Src/main.c    **** /**
 531:Src/main.c    ****   * @brief TIM2 Initialization Function
 532:Src/main.c    ****   * @param None
 533:Src/main.c    ****   * @retval None
 534:Src/main.c    ****   */
 535:Src/main.c    **** static void MX_TIM2_Init(void)
 536:Src/main.c    **** {
 537:Src/main.c    **** 
 538:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 539:Src/main.c    **** 
 540:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 541:Src/main.c    **** 
 542:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 543:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 544:Src/main.c    **** 
 545:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 11


 546:Src/main.c    **** 
 547:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 548:Src/main.c    ****   htim2.Instance = TIM2;
 549:Src/main.c    ****   htim2.Init.Prescaler = 200-1;
 550:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 551:Src/main.c    ****   htim2.Init.Period = 40000;
 552:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 553:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 554:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 555:Src/main.c    ****   {
 556:Src/main.c    ****     Error_Handler();
 557:Src/main.c    ****   }
 558:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 559:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 560:Src/main.c    ****   {
 561:Src/main.c    ****     Error_Handler();
 562:Src/main.c    ****   }
 563:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 564:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 565:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 566:Src/main.c    ****   {
 567:Src/main.c    ****     Error_Handler();
 568:Src/main.c    ****   }
 569:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 570:Src/main.c    ****   //HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 571:Src/main.c    ****   //HAL_NVIC_EnableIRQ(TIM2_IRQn);
 572:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 573:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 574:Src/main.c    **** 
 575:Src/main.c    **** }
 576:Src/main.c    **** 
 577:Src/main.c    **** /**
 578:Src/main.c    ****   * @brief TIM3 Initialization Function
 579:Src/main.c    ****   * @param None
 580:Src/main.c    ****   * @retval None
 581:Src/main.c    ****   */
 582:Src/main.c    **** static void MX_TIM3_Init(void)
 583:Src/main.c    **** {
 584:Src/main.c    **** 
 585:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
 586:Src/main.c    **** 
 587:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
 588:Src/main.c    **** 
 589:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 590:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 591:Src/main.c    **** 
 592:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
 593:Src/main.c    **** 
 594:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
 595:Src/main.c    ****   htim3.Instance = TIM3;
 596:Src/main.c    ****   htim3.Init.Prescaler = 200-1;
 597:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 598:Src/main.c    ****   htim3.Init.Period = 40000 / pid_rate;
 599:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 600:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 601:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 602:Src/main.c    ****   {
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 12


 603:Src/main.c    ****     Error_Handler();
 604:Src/main.c    ****   }
 605:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 606:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 607:Src/main.c    ****   {
 608:Src/main.c    ****     Error_Handler();
 609:Src/main.c    ****   }
 610:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 611:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 612:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 613:Src/main.c    ****   {
 614:Src/main.c    ****     Error_Handler();
 615:Src/main.c    ****   }
 616:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
 617:Src/main.c    ****   //HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 618:Src/main.c    ****   //HAL_NVIC_EnableIRQ(TIM3_IRQn);
 619:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 620:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 621:Src/main.c    **** 
 622:Src/main.c    **** }
 623:Src/main.c    **** 
 624:Src/main.c    **** /**
 625:Src/main.c    ****   * @brief USART1 Initialization Function
 626:Src/main.c    ****   * @param None
 627:Src/main.c    ****   * @retval None
 628:Src/main.c    ****   */
 629:Src/main.c    **** static void MX_USART1_UART_Init(void)
 630:Src/main.c    **** {
 631:Src/main.c    **** 
 632:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 633:Src/main.c    **** 
 634:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 635:Src/main.c    **** 
 636:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 637:Src/main.c    **** 
 638:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 639:Src/main.c    ****   huart1.Instance = USART1;
 640:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 641:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 642:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 643:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 644:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 645:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 646:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 647:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 648:Src/main.c    ****   {
 649:Src/main.c    ****     Error_Handler();
 650:Src/main.c    ****   }
 651:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 652:Src/main.c    **** 
 653:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 654:Src/main.c    **** 
 655:Src/main.c    **** }
 656:Src/main.c    **** 
 657:Src/main.c    **** /**
 658:Src/main.c    ****   * @brief GPIO Initialization Function
 659:Src/main.c    ****   * @param None
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 13


 660:Src/main.c    ****   * @retval None
 661:Src/main.c    ****   */
 662:Src/main.c    **** static void MX_GPIO_Init(void)
 663:Src/main.c    **** {
  27              		.loc 1 663 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 664:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 664 0
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
  46              	.LBB2:
 665:Src/main.c    **** 
 666:Src/main.c    ****   /* GPIO Ports Clock Enable */
 667:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 667 0
  48 000e 2D4B     		ldr	r3, .L3
  49 0010 9A69     		ldr	r2, [r3, #24]
  50 0012 42F01002 		orr	r2, r2, #16
  51 0016 9A61     		str	r2, [r3, #24]
  52 0018 9A69     		ldr	r2, [r3, #24]
  53 001a 02F01002 		and	r2, r2, #16
  54 001e 0192     		str	r2, [sp, #4]
  55 0020 019A     		ldr	r2, [sp, #4]
  56              	.LBE2:
  57              	.LBB3:
 668:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  58              		.loc 1 668 0
  59 0022 9A69     		ldr	r2, [r3, #24]
  60 0024 42F00402 		orr	r2, r2, #4
  61 0028 9A61     		str	r2, [r3, #24]
  62 002a 9A69     		ldr	r2, [r3, #24]
  63 002c 02F00402 		and	r2, r2, #4
  64 0030 0292     		str	r2, [sp, #8]
  65 0032 029A     		ldr	r2, [sp, #8]
  66              	.LBE3:
  67              	.LBB4:
 669:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  68              		.loc 1 669 0
  69 0034 9A69     		ldr	r2, [r3, #24]
  70 0036 42F00802 		orr	r2, r2, #8
  71 003a 9A61     		str	r2, [r3, #24]
  72 003c 9B69     		ldr	r3, [r3, #24]
  73 003e 03F00803 		and	r3, r3, #8
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 14


  74 0042 0393     		str	r3, [sp, #12]
  75 0044 039B     		ldr	r3, [sp, #12]
  76              	.LBE4:
 670:Src/main.c    **** 
 671:Src/main.c    ****   /*Configure GPIO pin Output Level */
 672:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  77              		.loc 1 672 0
  78 0046 204D     		ldr	r5, .L3+4
  79 0048 2246     		mov	r2, r4
  80 004a 4FF40051 		mov	r1, #8192
  81 004e 2846     		mov	r0, r5
  82 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  83              	.LVL0:
 673:Src/main.c    **** 
 674:Src/main.c    ****   /*Configure GPIO pin : PC13 */
 675:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  84              		.loc 1 675 0
  85 0054 4FF40053 		mov	r3, #8192
  86 0058 0493     		str	r3, [sp, #16]
 676:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  87              		.loc 1 676 0
  88 005a 0123     		movs	r3, #1
  89 005c 0593     		str	r3, [sp, #20]
 677:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  90              		.loc 1 677 0
  91 005e 0694     		str	r4, [sp, #24]
 678:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  92              		.loc 1 678 0
  93 0060 0223     		movs	r3, #2
  94 0062 0793     		str	r3, [sp, #28]
 679:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  95              		.loc 1 679 0
  96 0064 04A9     		add	r1, sp, #16
  97 0066 2846     		mov	r0, r5
  98 0068 FFF7FEFF 		bl	HAL_GPIO_Init
  99              	.LVL1:
 680:Src/main.c    **** 
 681:Src/main.c    ****   /*Configure GPIO pins : PA0 PA1 PA2 PA3 */
 682:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 100              		.loc 1 682 0
 101 006c 0F23     		movs	r3, #15
 102 006e 0493     		str	r3, [sp, #16]
 683:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 103              		.loc 1 683 0
 104 0070 164B     		ldr	r3, .L3+8
 105 0072 0593     		str	r3, [sp, #20]
 684:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 106              		.loc 1 684 0
 107 0074 0694     		str	r4, [sp, #24]
 685:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 108              		.loc 1 685 0
 109 0076 04A9     		add	r1, sp, #16
 110 0078 1548     		ldr	r0, .L3+12
 111 007a FFF7FEFF 		bl	HAL_GPIO_Init
 112              	.LVL2:
 686:Src/main.c    **** 
 687:Src/main.c    ****   /* EXTI interrupt init*/
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 15


 688:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 113              		.loc 1 688 0
 114 007e 2246     		mov	r2, r4
 115 0080 2146     		mov	r1, r4
 116 0082 0620     		movs	r0, #6
 117 0084 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 118              	.LVL3:
 689:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 119              		.loc 1 689 0
 120 0088 0620     		movs	r0, #6
 121 008a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 122              	.LVL4:
 690:Src/main.c    **** 
 691:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 123              		.loc 1 691 0
 124 008e 2246     		mov	r2, r4
 125 0090 2146     		mov	r1, r4
 126 0092 0720     		movs	r0, #7
 127 0094 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 128              	.LVL5:
 692:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 129              		.loc 1 692 0
 130 0098 0720     		movs	r0, #7
 131 009a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 132              	.LVL6:
 693:Src/main.c    **** 
 694:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
 133              		.loc 1 694 0
 134 009e 2246     		mov	r2, r4
 135 00a0 2146     		mov	r1, r4
 136 00a2 0820     		movs	r0, #8
 137 00a4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 138              	.LVL7:
 695:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 139              		.loc 1 695 0
 140 00a8 0820     		movs	r0, #8
 141 00aa FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 142              	.LVL8:
 696:Src/main.c    **** 
 697:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI3_IRQn, 0, 0);
 143              		.loc 1 697 0
 144 00ae 2246     		mov	r2, r4
 145 00b0 2146     		mov	r1, r4
 146 00b2 0920     		movs	r0, #9
 147 00b4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 148              	.LVL9:
 698:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 149              		.loc 1 698 0
 150 00b8 0920     		movs	r0, #9
 151 00ba FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 152              	.LVL10:
 699:Src/main.c    **** 
 700:Src/main.c    **** }
 153              		.loc 1 700 0
 154 00be 09B0     		add	sp, sp, #36
 155              	.LCFI2:
 156              		.cfi_def_cfa_offset 12
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 16


 157              		@ sp needed
 158 00c0 30BD     		pop	{r4, r5, pc}
 159              	.L4:
 160 00c2 00BF     		.align	2
 161              	.L3:
 162 00c4 00100240 		.word	1073876992
 163 00c8 00100140 		.word	1073811456
 164 00cc 00001110 		.word	269549568
 165 00d0 00080140 		.word	1073809408
 166              		.cfi_endproc
 167              	.LFE78:
 169              		.section	.text.MX_I2C1_Init,"ax",%progbits
 170              		.align	2
 171              		.thumb
 172              		.thumb_func
 174              	MX_I2C1_Init:
 175              	.LFB73:
 464:Src/main.c    **** 
 176              		.loc 1 464 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180 0000 08B5     		push	{r3, lr}
 181              	.LCFI3:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 3, -8
 184              		.cfi_offset 14, -4
 473:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 185              		.loc 1 473 0
 186 0002 0948     		ldr	r0, .L7
 187 0004 094B     		ldr	r3, .L7+4
 188 0006 0360     		str	r3, [r0]
 474:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 189              		.loc 1 474 0
 190 0008 094B     		ldr	r3, .L7+8
 191 000a 4360     		str	r3, [r0, #4]
 475:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 192              		.loc 1 475 0
 193 000c 0023     		movs	r3, #0
 194 000e 8360     		str	r3, [r0, #8]
 476:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 195              		.loc 1 476 0
 196 0010 C360     		str	r3, [r0, #12]
 477:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 197              		.loc 1 477 0
 198 0012 4FF48042 		mov	r2, #16384
 199 0016 0261     		str	r2, [r0, #16]
 478:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 200              		.loc 1 478 0
 201 0018 4361     		str	r3, [r0, #20]
 479:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 202              		.loc 1 479 0
 203 001a 8361     		str	r3, [r0, #24]
 480:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 204              		.loc 1 480 0
 205 001c C361     		str	r3, [r0, #28]
 481:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 17


 206              		.loc 1 481 0
 207 001e 0362     		str	r3, [r0, #32]
 482:Src/main.c    ****   {
 208              		.loc 1 482 0
 209 0020 FFF7FEFF 		bl	HAL_I2C_Init
 210              	.LVL11:
 211 0024 08BD     		pop	{r3, pc}
 212              	.L8:
 213 0026 00BF     		.align	2
 214              	.L7:
 215 0028 00000000 		.word	hi2c1
 216 002c 00540040 		.word	1073763328
 217 0030 A0860100 		.word	100000
 218              		.cfi_endproc
 219              	.LFE73:
 221              		.section	.text.MX_SPI1_Init,"ax",%progbits
 222              		.align	2
 223              		.thumb
 224              		.thumb_func
 226              	MX_SPI1_Init:
 227              	.LFB74:
 498:Src/main.c    **** 
 228              		.loc 1 498 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI4:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
 508:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER; // change to slave later
 237              		.loc 1 508 0
 238 0002 0B48     		ldr	r0, .L11
 239 0004 0B4B     		ldr	r3, .L11+4
 240 0006 0360     		str	r3, [r0]
 509:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 241              		.loc 1 509 0
 242 0008 4FF48273 		mov	r3, #260
 243 000c 4360     		str	r3, [r0, #4]
 510:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 244              		.loc 1 510 0
 245 000e 0023     		movs	r3, #0
 246 0010 8360     		str	r3, [r0, #8]
 511:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 247              		.loc 1 511 0
 248 0012 C360     		str	r3, [r0, #12]
 512:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 249              		.loc 1 512 0
 250 0014 0361     		str	r3, [r0, #16]
 513:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 251              		.loc 1 513 0
 252 0016 4361     		str	r3, [r0, #20]
 514:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 253              		.loc 1 514 0
 254 0018 4FF48022 		mov	r2, #262144
 255 001c 8261     		str	r2, [r0, #24]
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 18


 515:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 256              		.loc 1 515 0
 257 001e C361     		str	r3, [r0, #28]
 516:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 258              		.loc 1 516 0
 259 0020 0362     		str	r3, [r0, #32]
 517:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 260              		.loc 1 517 0
 261 0022 4362     		str	r3, [r0, #36]
 518:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 262              		.loc 1 518 0
 263 0024 8362     		str	r3, [r0, #40]
 519:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 264              		.loc 1 519 0
 265 0026 0A23     		movs	r3, #10
 266 0028 C362     		str	r3, [r0, #44]
 520:Src/main.c    ****   {
 267              		.loc 1 520 0
 268 002a FFF7FEFF 		bl	HAL_SPI_Init
 269              	.LVL12:
 270 002e 08BD     		pop	{r3, pc}
 271              	.L12:
 272              		.align	2
 273              	.L11:
 274 0030 00000000 		.word	hspi1
 275 0034 00300140 		.word	1073819648
 276              		.cfi_endproc
 277              	.LFE74:
 279              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 280              		.align	2
 281              		.thumb
 282              		.thumb_func
 284              	MX_USART1_UART_Init:
 285              	.LFB77:
 630:Src/main.c    **** 
 286              		.loc 1 630 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 08B5     		push	{r3, lr}
 291              	.LCFI5:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
 294              		.cfi_offset 14, -4
 639:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 295              		.loc 1 639 0
 296 0002 0848     		ldr	r0, .L15
 297 0004 084B     		ldr	r3, .L15+4
 298 0006 0360     		str	r3, [r0]
 640:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 299              		.loc 1 640 0
 300 0008 4FF4E133 		mov	r3, #115200
 301 000c 4360     		str	r3, [r0, #4]
 641:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 302              		.loc 1 641 0
 303 000e 0023     		movs	r3, #0
 304 0010 8360     		str	r3, [r0, #8]
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 19


 642:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 305              		.loc 1 642 0
 306 0012 C360     		str	r3, [r0, #12]
 643:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 307              		.loc 1 643 0
 308 0014 0361     		str	r3, [r0, #16]
 644:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 309              		.loc 1 644 0
 310 0016 0C22     		movs	r2, #12
 311 0018 4261     		str	r2, [r0, #20]
 645:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 312              		.loc 1 645 0
 313 001a 8361     		str	r3, [r0, #24]
 646:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 314              		.loc 1 646 0
 315 001c C361     		str	r3, [r0, #28]
 647:Src/main.c    ****   {
 316              		.loc 1 647 0
 317 001e FFF7FEFF 		bl	HAL_UART_Init
 318              	.LVL13:
 319 0022 08BD     		pop	{r3, pc}
 320              	.L16:
 321              		.align	2
 322              	.L15:
 323 0024 00000000 		.word	huart1
 324 0028 00380140 		.word	1073821696
 325              		.cfi_endproc
 326              	.LFE77:
 328              		.section	.text.MX_TIM2_Init,"ax",%progbits
 329              		.align	2
 330              		.thumb
 331              		.thumb_func
 333              	MX_TIM2_Init:
 334              	.LFB75:
 536:Src/main.c    **** 
 335              		.loc 1 536 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 24
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 30B5     		push	{r4, r5, lr}
 340              	.LCFI6:
 341              		.cfi_def_cfa_offset 12
 342              		.cfi_offset 4, -12
 343              		.cfi_offset 5, -8
 344              		.cfi_offset 14, -4
 345 0002 87B0     		sub	sp, sp, #28
 346              	.LCFI7:
 347              		.cfi_def_cfa_offset 40
 542:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 348              		.loc 1 542 0
 349 0004 0024     		movs	r4, #0
 350 0006 0294     		str	r4, [sp, #8]
 351 0008 0394     		str	r4, [sp, #12]
 352 000a 0494     		str	r4, [sp, #16]
 353 000c 0594     		str	r4, [sp, #20]
 543:Src/main.c    **** 
 354              		.loc 1 543 0
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 20


 355 000e 0094     		str	r4, [sp]
 356 0010 0194     		str	r4, [sp, #4]
 548:Src/main.c    ****   htim2.Init.Prescaler = 200-1;
 357              		.loc 1 548 0
 358 0012 104D     		ldr	r5, .L19
 359 0014 4FF08043 		mov	r3, #1073741824
 360 0018 2B60     		str	r3, [r5]
 549:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 361              		.loc 1 549 0
 362 001a C723     		movs	r3, #199
 363 001c 6B60     		str	r3, [r5, #4]
 550:Src/main.c    ****   htim2.Init.Period = 40000;
 364              		.loc 1 550 0
 365 001e AC60     		str	r4, [r5, #8]
 551:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 366              		.loc 1 551 0
 367 0020 49F64043 		movw	r3, #40000
 368 0024 EB60     		str	r3, [r5, #12]
 552:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 369              		.loc 1 552 0
 370 0026 2C61     		str	r4, [r5, #16]
 553:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 371              		.loc 1 553 0
 372 0028 AC61     		str	r4, [r5, #24]
 554:Src/main.c    ****   {
 373              		.loc 1 554 0
 374 002a 2846     		mov	r0, r5
 375 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 376              	.LVL14:
 558:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 377              		.loc 1 558 0
 378 0030 4FF48053 		mov	r3, #4096
 379 0034 0293     		str	r3, [sp, #8]
 559:Src/main.c    ****   {
 380              		.loc 1 559 0
 381 0036 02A9     		add	r1, sp, #8
 382 0038 2846     		mov	r0, r5
 383 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 384              	.LVL15:
 563:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 385              		.loc 1 563 0
 386 003e 0094     		str	r4, [sp]
 564:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 387              		.loc 1 564 0
 388 0040 0194     		str	r4, [sp, #4]
 565:Src/main.c    ****   {
 389              		.loc 1 565 0
 390 0042 6946     		mov	r1, sp
 391 0044 2846     		mov	r0, r5
 392 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 393              	.LVL16:
 572:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 394              		.loc 1 572 0
 395 004a 2846     		mov	r0, r5
 396 004c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 397              	.LVL17:
 575:Src/main.c    **** 
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 21


 398              		.loc 1 575 0
 399 0050 07B0     		add	sp, sp, #28
 400              	.LCFI8:
 401              		.cfi_def_cfa_offset 12
 402              		@ sp needed
 403 0052 30BD     		pop	{r4, r5, pc}
 404              	.L20:
 405              		.align	2
 406              	.L19:
 407 0054 00000000 		.word	htim2
 408              		.cfi_endproc
 409              	.LFE75:
 411              		.section	.text.MX_TIM3_Init,"ax",%progbits
 412              		.align	2
 413              		.thumb
 414              		.thumb_func
 416              	MX_TIM3_Init:
 417              	.LFB76:
 583:Src/main.c    **** 
 418              		.loc 1 583 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 24
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422 0000 30B5     		push	{r4, r5, lr}
 423              	.LCFI9:
 424              		.cfi_def_cfa_offset 12
 425              		.cfi_offset 4, -12
 426              		.cfi_offset 5, -8
 427              		.cfi_offset 14, -4
 428 0002 87B0     		sub	sp, sp, #28
 429              	.LCFI10:
 430              		.cfi_def_cfa_offset 40
 589:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 431              		.loc 1 589 0
 432 0004 0024     		movs	r4, #0
 433 0006 0294     		str	r4, [sp, #8]
 434 0008 0394     		str	r4, [sp, #12]
 435 000a 0494     		str	r4, [sp, #16]
 436 000c 0594     		str	r4, [sp, #20]
 590:Src/main.c    **** 
 437              		.loc 1 590 0
 438 000e 0094     		str	r4, [sp]
 439 0010 0194     		str	r4, [sp, #4]
 595:Src/main.c    ****   htim3.Init.Prescaler = 200-1;
 440              		.loc 1 595 0
 441 0012 124D     		ldr	r5, .L23
 442 0014 124B     		ldr	r3, .L23+4
 443 0016 2B60     		str	r3, [r5]
 596:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 444              		.loc 1 596 0
 445 0018 C723     		movs	r3, #199
 446 001a 6B60     		str	r3, [r5, #4]
 597:Src/main.c    ****   htim3.Init.Period = 40000 / pid_rate;
 447              		.loc 1 597 0
 448 001c AC60     		str	r4, [r5, #8]
 598:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 449              		.loc 1 598 0
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 22


 450 001e 114B     		ldr	r3, .L23+8
 451 0020 1A68     		ldr	r2, [r3]
 452 0022 49F64043 		movw	r3, #40000
 453 0026 93FBF2F3 		sdiv	r3, r3, r2
 454 002a EB60     		str	r3, [r5, #12]
 599:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 455              		.loc 1 599 0
 456 002c 2C61     		str	r4, [r5, #16]
 600:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 457              		.loc 1 600 0
 458 002e AC61     		str	r4, [r5, #24]
 601:Src/main.c    ****   {
 459              		.loc 1 601 0
 460 0030 2846     		mov	r0, r5
 461 0032 FFF7FEFF 		bl	HAL_TIM_Base_Init
 462              	.LVL18:
 605:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 463              		.loc 1 605 0
 464 0036 4FF48053 		mov	r3, #4096
 465 003a 0293     		str	r3, [sp, #8]
 606:Src/main.c    ****   {
 466              		.loc 1 606 0
 467 003c 02A9     		add	r1, sp, #8
 468 003e 2846     		mov	r0, r5
 469 0040 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 470              	.LVL19:
 610:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 471              		.loc 1 610 0
 472 0044 0094     		str	r4, [sp]
 611:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 473              		.loc 1 611 0
 474 0046 0194     		str	r4, [sp, #4]
 612:Src/main.c    ****   {
 475              		.loc 1 612 0
 476 0048 6946     		mov	r1, sp
 477 004a 2846     		mov	r0, r5
 478 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 479              	.LVL20:
 619:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 480              		.loc 1 619 0
 481 0050 2846     		mov	r0, r5
 482 0052 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 483              	.LVL21:
 622:Src/main.c    **** 
 484              		.loc 1 622 0
 485 0056 07B0     		add	sp, sp, #28
 486              	.LCFI11:
 487              		.cfi_def_cfa_offset 12
 488              		@ sp needed
 489 0058 30BD     		pop	{r4, r5, pc}
 490              	.L24:
 491 005a 00BF     		.align	2
 492              	.L23:
 493 005c 00000000 		.word	htim3
 494 0060 00040040 		.word	1073742848
 495 0064 00000000 		.word	.LANCHOR0
 496              		.cfi_endproc
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 23


 497              	.LFE76:
 499              		.section	.text.MX_ADC1_Init,"ax",%progbits
 500              		.align	2
 501              		.thumb
 502              		.thumb_func
 504              	MX_ADC1_Init:
 505              	.LFB72:
 419:Src/main.c    **** 
 506              		.loc 1 419 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 16
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510 0000 70B5     		push	{r4, r5, r6, lr}
 511              	.LCFI12:
 512              		.cfi_def_cfa_offset 16
 513              		.cfi_offset 4, -16
 514              		.cfi_offset 5, -12
 515              		.cfi_offset 6, -8
 516              		.cfi_offset 14, -4
 517 0002 84B0     		sub	sp, sp, #16
 518              	.LCFI13:
 519              		.cfi_def_cfa_offset 32
 425:Src/main.c    **** 
 520              		.loc 1 425 0
 521 0004 0025     		movs	r5, #0
 522 0006 0195     		str	r5, [sp, #4]
 523 0008 0295     		str	r5, [sp, #8]
 524 000a 0395     		str	r5, [sp, #12]
 432:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 525              		.loc 1 432 0
 526 000c 0C4C     		ldr	r4, .L27
 527 000e 0D4B     		ldr	r3, .L27+4
 528 0010 2360     		str	r3, [r4]
 433:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 529              		.loc 1 433 0
 530 0012 A560     		str	r5, [r4, #8]
 434:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 531              		.loc 1 434 0
 532 0014 E560     		str	r5, [r4, #12]
 435:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 533              		.loc 1 435 0
 534 0016 6561     		str	r5, [r4, #20]
 436:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 535              		.loc 1 436 0
 536 0018 4FF46023 		mov	r3, #917504
 537 001c E361     		str	r3, [r4, #28]
 437:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 538              		.loc 1 437 0
 539 001e 6560     		str	r5, [r4, #4]
 438:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 540              		.loc 1 438 0
 541 0020 0126     		movs	r6, #1
 542 0022 2661     		str	r6, [r4, #16]
 439:Src/main.c    ****   {
 543              		.loc 1 439 0
 544 0024 2046     		mov	r0, r4
 545 0026 FFF7FEFF 		bl	HAL_ADC_Init
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 24


 546              	.LVL22:
 445:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 547              		.loc 1 445 0
 548 002a 0823     		movs	r3, #8
 549 002c 0193     		str	r3, [sp, #4]
 446:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 550              		.loc 1 446 0
 551 002e 0296     		str	r6, [sp, #8]
 447:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 552              		.loc 1 447 0
 553 0030 0395     		str	r5, [sp, #12]
 448:Src/main.c    ****   {
 554              		.loc 1 448 0
 555 0032 01A9     		add	r1, sp, #4
 556 0034 2046     		mov	r0, r4
 557 0036 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 558              	.LVL23:
 456:Src/main.c    **** 
 559              		.loc 1 456 0
 560 003a 04B0     		add	sp, sp, #16
 561              	.LCFI14:
 562              		.cfi_def_cfa_offset 16
 563              		@ sp needed
 564 003c 70BD     		pop	{r4, r5, r6, pc}
 565              	.L28:
 566 003e 00BF     		.align	2
 567              	.L27:
 568 0040 00000000 		.word	hadc1
 569 0044 00240140 		.word	1073816576
 570              		.cfi_endproc
 571              	.LFE72:
 573              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 574              		.align	2
 575              		.global	EXTI0_IRQHandler
 576              		.thumb
 577              		.thumb_func
 579              	EXTI0_IRQHandler:
 580              	.LFB64:
 251:Src/main.c    ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 581              		.loc 1 251 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585 0000 38B5     		push	{r3, r4, r5, lr}
 586              	.LCFI15:
 587              		.cfi_def_cfa_offset 16
 588              		.cfi_offset 3, -16
 589              		.cfi_offset 4, -12
 590              		.cfi_offset 5, -8
 591              		.cfi_offset 14, -4
 253:Src/main.c    ****   fl_delta = fl_new - fl_old + 40000 * fl_count;
 592              		.loc 1 253 0
 593 0002 0C4B     		ldr	r3, .L31
 594 0004 1B68     		ldr	r3, [r3]
 595 0006 5B6A     		ldr	r3, [r3, #36]
 596 0008 0B4A     		ldr	r2, .L31+4
 597 000a 1360     		str	r3, [r2]
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 25


 254:Src/main.c    ****   fl_old = fl_new;
 598              		.loc 1 254 0
 599 000c 0B4C     		ldr	r4, .L31+8
 600 000e 2268     		ldr	r2, [r4]
 601 0010 991A     		subs	r1, r3, r2
 602 0012 0B48     		ldr	r0, .L31+12
 603 0014 0268     		ldr	r2, [r0]
 604 0016 49F64045 		movw	r5, #40000
 605 001a 05FB0212 		mla	r2, r5, r2, r1
 606 001e 0949     		ldr	r1, .L31+16
 607 0020 0A60     		str	r2, [r1]
 255:Src/main.c    ****   fl_count = 0;
 608              		.loc 1 255 0
 609 0022 2360     		str	r3, [r4]
 256:Src/main.c    ****   traction_control_count = 0;
 610              		.loc 1 256 0
 611 0024 0023     		movs	r3, #0
 612 0026 0360     		str	r3, [r0]
 257:Src/main.c    ****   /* USER CODE END EXTI0_IRQn 0 */
 613              		.loc 1 257 0
 614 0028 074A     		ldr	r2, .L31+20
 615 002a 1370     		strb	r3, [r2]
 259:Src/main.c    ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 616              		.loc 1 259 0
 617 002c 0120     		movs	r0, #1
 618 002e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 619              	.LVL24:
 620 0032 38BD     		pop	{r3, r4, r5, pc}
 621              	.L32:
 622              		.align	2
 623              	.L31:
 624 0034 00000000 		.word	htim2
 625 0038 00000000 		.word	.LANCHOR1
 626 003c 00000000 		.word	.LANCHOR2
 627 0040 00000000 		.word	.LANCHOR3
 628 0044 00000000 		.word	.LANCHOR4
 629 0048 00000000 		.word	.LANCHOR5
 630              		.cfi_endproc
 631              	.LFE64:
 633              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 634              		.align	2
 635              		.global	EXTI1_IRQHandler
 636              		.thumb
 637              		.thumb_func
 639              	EXTI1_IRQHandler:
 640              	.LFB65:
 269:Src/main.c    ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 641              		.loc 1 269 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645 0000 38B5     		push	{r3, r4, r5, lr}
 646              	.LCFI16:
 647              		.cfi_def_cfa_offset 16
 648              		.cfi_offset 3, -16
 649              		.cfi_offset 4, -12
 650              		.cfi_offset 5, -8
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 26


 651              		.cfi_offset 14, -4
 271:Src/main.c    ****   fr_delta = fr_new - fr_old + 40000 * fr_count;
 652              		.loc 1 271 0
 653 0002 0C4B     		ldr	r3, .L35
 654 0004 1B68     		ldr	r3, [r3]
 655 0006 5B6A     		ldr	r3, [r3, #36]
 656 0008 0B4A     		ldr	r2, .L35+4
 657 000a 1360     		str	r3, [r2]
 272:Src/main.c    ****   fr_old = fr_new;
 658              		.loc 1 272 0
 659 000c 0B4C     		ldr	r4, .L35+8
 660 000e 2268     		ldr	r2, [r4]
 661 0010 991A     		subs	r1, r3, r2
 662 0012 0B48     		ldr	r0, .L35+12
 663 0014 0268     		ldr	r2, [r0]
 664 0016 49F64045 		movw	r5, #40000
 665 001a 05FB0212 		mla	r2, r5, r2, r1
 666 001e 0949     		ldr	r1, .L35+16
 667 0020 0A60     		str	r2, [r1]
 273:Src/main.c    ****   fr_count = 0;
 668              		.loc 1 273 0
 669 0022 2360     		str	r3, [r4]
 274:Src/main.c    ****   traction_control_count = 0;
 670              		.loc 1 274 0
 671 0024 0023     		movs	r3, #0
 672 0026 0360     		str	r3, [r0]
 275:Src/main.c    ****   /* USER CODE END EXTI1_IRQn 0 */
 673              		.loc 1 275 0
 674 0028 074A     		ldr	r2, .L35+20
 675 002a 1370     		strb	r3, [r2]
 277:Src/main.c    ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 676              		.loc 1 277 0
 677 002c 0220     		movs	r0, #2
 678 002e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 679              	.LVL25:
 680 0032 38BD     		pop	{r3, r4, r5, pc}
 681              	.L36:
 682              		.align	2
 683              	.L35:
 684 0034 00000000 		.word	htim2
 685 0038 00000000 		.word	.LANCHOR6
 686 003c 00000000 		.word	.LANCHOR7
 687 0040 00000000 		.word	.LANCHOR8
 688 0044 00000000 		.word	.LANCHOR9
 689 0048 00000000 		.word	.LANCHOR5
 690              		.cfi_endproc
 691              	.LFE65:
 693              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 694              		.align	2
 695              		.global	EXTI2_IRQHandler
 696              		.thumb
 697              		.thumb_func
 699              	EXTI2_IRQHandler:
 700              	.LFB66:
 287:Src/main.c    ****   /* USER CODE BEGIN EXTI2_IRQn 0 */
 701              		.loc 1 287 0
 702              		.cfi_startproc
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 27


 703              		@ args = 0, pretend = 0, frame = 0
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 705 0000 38B5     		push	{r3, r4, r5, lr}
 706              	.LCFI17:
 707              		.cfi_def_cfa_offset 16
 708              		.cfi_offset 3, -16
 709              		.cfi_offset 4, -12
 710              		.cfi_offset 5, -8
 711              		.cfi_offset 14, -4
 289:Src/main.c    ****   bl_delta = bl_new - bl_old + 40000 * bl_count;
 712              		.loc 1 289 0
 713 0002 0C4B     		ldr	r3, .L39
 714 0004 1B68     		ldr	r3, [r3]
 715 0006 5B6A     		ldr	r3, [r3, #36]
 716 0008 0B4A     		ldr	r2, .L39+4
 717 000a 1360     		str	r3, [r2]
 290:Src/main.c    ****   bl_old = bl_new;
 718              		.loc 1 290 0
 719 000c 0B4C     		ldr	r4, .L39+8
 720 000e 2268     		ldr	r2, [r4]
 721 0010 991A     		subs	r1, r3, r2
 722 0012 0B48     		ldr	r0, .L39+12
 723 0014 0268     		ldr	r2, [r0]
 724 0016 49F64045 		movw	r5, #40000
 725 001a 05FB0212 		mla	r2, r5, r2, r1
 726 001e 0949     		ldr	r1, .L39+16
 727 0020 0A60     		str	r2, [r1]
 291:Src/main.c    ****   bl_count = 0;
 728              		.loc 1 291 0
 729 0022 2360     		str	r3, [r4]
 292:Src/main.c    ****   traction_control_count = 0;
 730              		.loc 1 292 0
 731 0024 0023     		movs	r3, #0
 732 0026 0360     		str	r3, [r0]
 293:Src/main.c    ****   /* USER CODE END EXTI2_IRQn 0 */
 733              		.loc 1 293 0
 734 0028 074A     		ldr	r2, .L39+20
 735 002a 1370     		strb	r3, [r2]
 295:Src/main.c    ****   /* USER CODE BEGIN EXTI2_IRQn 1 */
 736              		.loc 1 295 0
 737 002c 0420     		movs	r0, #4
 738 002e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 739              	.LVL26:
 740 0032 38BD     		pop	{r3, r4, r5, pc}
 741              	.L40:
 742              		.align	2
 743              	.L39:
 744 0034 00000000 		.word	htim2
 745 0038 00000000 		.word	.LANCHOR10
 746 003c 00000000 		.word	.LANCHOR11
 747 0040 00000000 		.word	.LANCHOR12
 748 0044 00000000 		.word	.LANCHOR13
 749 0048 00000000 		.word	.LANCHOR5
 750              		.cfi_endproc
 751              	.LFE66:
 753              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 754              		.align	2
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 28


 755              		.global	EXTI3_IRQHandler
 756              		.thumb
 757              		.thumb_func
 759              	EXTI3_IRQHandler:
 760              	.LFB67:
 305:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 761              		.loc 1 305 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765 0000 38B5     		push	{r3, r4, r5, lr}
 766              	.LCFI18:
 767              		.cfi_def_cfa_offset 16
 768              		.cfi_offset 3, -16
 769              		.cfi_offset 4, -12
 770              		.cfi_offset 5, -8
 771              		.cfi_offset 14, -4
 307:Src/main.c    ****   br_delta = br_new - br_old + 40000 * br_count;
 772              		.loc 1 307 0
 773 0002 0C4B     		ldr	r3, .L43
 774 0004 1B68     		ldr	r3, [r3]
 775 0006 5B6A     		ldr	r3, [r3, #36]
 776 0008 0B4A     		ldr	r2, .L43+4
 777 000a 1360     		str	r3, [r2]
 308:Src/main.c    ****   br_old = br_new;
 778              		.loc 1 308 0
 779 000c 0B4C     		ldr	r4, .L43+8
 780 000e 2268     		ldr	r2, [r4]
 781 0010 991A     		subs	r1, r3, r2
 782 0012 0B48     		ldr	r0, .L43+12
 783 0014 0268     		ldr	r2, [r0]
 784 0016 49F64045 		movw	r5, #40000
 785 001a 05FB0212 		mla	r2, r5, r2, r1
 786 001e 0949     		ldr	r1, .L43+16
 787 0020 0A60     		str	r2, [r1]
 309:Src/main.c    ****   br_count = 0;
 788              		.loc 1 309 0
 789 0022 2360     		str	r3, [r4]
 310:Src/main.c    ****   traction_control_count = 0;
 790              		.loc 1 310 0
 791 0024 0023     		movs	r3, #0
 792 0026 0360     		str	r3, [r0]
 311:Src/main.c    ****   /* USER CODE END EXTI3_IRQn 0 */
 793              		.loc 1 311 0
 794 0028 074A     		ldr	r2, .L43+20
 795 002a 1370     		strb	r3, [r2]
 313:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 796              		.loc 1 313 0
 797 002c 0820     		movs	r0, #8
 798 002e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 799              	.LVL27:
 800 0032 38BD     		pop	{r3, r4, r5, pc}
 801              	.L44:
 802              		.align	2
 803              	.L43:
 804 0034 00000000 		.word	htim2
 805 0038 00000000 		.word	.LANCHOR14
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 29


 806 003c 00000000 		.word	.LANCHOR15
 807 0040 00000000 		.word	.LANCHOR16
 808 0044 00000000 		.word	.LANCHOR17
 809 0048 00000000 		.word	.LANCHOR5
 810              		.cfi_endproc
 811              	.LFE67:
 813              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 814              		.align	2
 815              		.global	TIM2_IRQHandler
 816              		.thumb
 817              		.thumb_func
 819              	TIM2_IRQHandler:
 820              	.LFB68:
 323:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 821              		.loc 1 323 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825 0000 08B5     		push	{r3, lr}
 826              	.LCFI19:
 827              		.cfi_def_cfa_offset 8
 828              		.cfi_offset 3, -8
 829              		.cfi_offset 14, -4
 325:Src/main.c    ****   fr_count++;
 830              		.loc 1 325 0
 831 0002 104A     		ldr	r2, .L47
 832 0004 1368     		ldr	r3, [r2]
 833 0006 0133     		adds	r3, r3, #1
 834 0008 1360     		str	r3, [r2]
 326:Src/main.c    ****   bl_count++;
 835              		.loc 1 326 0
 836 000a 0F4A     		ldr	r2, .L47+4
 837 000c 1368     		ldr	r3, [r2]
 838 000e 0133     		adds	r3, r3, #1
 839 0010 1360     		str	r3, [r2]
 327:Src/main.c    ****   br_count++;
 840              		.loc 1 327 0
 841 0012 0E4A     		ldr	r2, .L47+8
 842 0014 1368     		ldr	r3, [r2]
 843 0016 0133     		adds	r3, r3, #1
 844 0018 1360     		str	r3, [r2]
 328:Src/main.c    ****   /* USER CODE END TIM2_IRQn 0 */
 845              		.loc 1 328 0
 846 001a 0D4A     		ldr	r2, .L47+12
 847 001c 1368     		ldr	r3, [r2]
 848 001e 0133     		adds	r3, r3, #1
 849 0020 1360     		str	r3, [r2]
 330:Src/main.c    ****   // If traction control is greater than the max, set to TRACTION_DISABLE_COUNT+1
 850              		.loc 1 330 0
 851 0022 0C48     		ldr	r0, .L47+16
 852 0024 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 853              	.LVL28:
 332:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 854              		.loc 1 332 0
 855 0028 0B48     		ldr	r0, .L47+20
 856 002a 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 857 002c 531C     		adds	r3, r2, #1
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 30


 858 002e DBB2     		uxtb	r3, r3
 859 0030 591C     		adds	r1, r3, #1
 860 0032 C9B2     		uxtb	r1, r1
 861 0034 83F00903 		eor	r3, r3, #9
 862 0038 0929     		cmp	r1, #9
 863 003a 98BF     		it	ls
 864 003c 0023     		movls	r3, #0
 865 003e 5340     		eors	r3, r3, r2
 866 0040 0370     		strb	r3, [r0]
 867 0042 08BD     		pop	{r3, pc}
 868              	.L48:
 869              		.align	2
 870              	.L47:
 871 0044 00000000 		.word	.LANCHOR3
 872 0048 00000000 		.word	.LANCHOR8
 873 004c 00000000 		.word	.LANCHOR12
 874 0050 00000000 		.word	.LANCHOR16
 875 0054 00000000 		.word	htim2
 876 0058 00000000 		.word	.LANCHOR5
 877              		.cfi_endproc
 878              	.LFE68:
 880              		.global	__aeabi_i2f
 881              		.global	__aeabi_fmul
 882              		.global	__aeabi_fadd
 883              		.global	__aeabi_fdiv
 884              		.global	__aeabi_f2iz
 885              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 886              		.align	2
 887              		.global	TIM3_IRQHandler
 888              		.thumb
 889              		.thumb_func
 891              	TIM3_IRQHandler:
 892              	.LFB69:
 342:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 893              		.loc 1 342 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 897 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 898              	.LCFI20:
 899              		.cfi_def_cfa_offset 24
 900              		.cfi_offset 4, -24
 901              		.cfi_offset 5, -20
 902              		.cfi_offset 6, -16
 903              		.cfi_offset 7, -12
 904              		.cfi_offset 8, -8
 905              		.cfi_offset 14, -4
 345:Src/main.c    ****   derivative = (error - prev_error) / dt;
 906              		.loc 1 345 0
 907 0004 254B     		ldr	r3, .L53
 908 0006 1D68     		ldr	r5, [r3]
 909 0008 2846     		mov	r0, r5
 910 000a FFF7FEFF 		bl	__aeabi_i2f
 911              	.LVL29:
 912 000e 8046     		mov	r8, r0
 913 0010 234B     		ldr	r3, .L53+4
 914 0012 1C68     		ldr	r4, [r3]	@ float
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 31


 915 0014 2146     		mov	r1, r4
 916 0016 FFF7FEFF 		bl	__aeabi_fmul
 917              	.LVL30:
 918 001a 224E     		ldr	r6, .L53+8
 919 001c 3168     		ldr	r1, [r6]	@ float
 920 001e FFF7FEFF 		bl	__aeabi_fadd
 921              	.LVL31:
 922 0022 0746     		mov	r7, r0
 923 0024 3060     		str	r0, [r6]	@ float
 346:Src/main.c    ****   
 924              		.loc 1 346 0
 925 0026 204B     		ldr	r3, .L53+12
 926 0028 1868     		ldr	r0, [r3]
 927 002a 281A     		subs	r0, r5, r0
 928 002c FFF7FEFF 		bl	__aeabi_i2f
 929              	.LVL32:
 930 0030 2146     		mov	r1, r4
 931 0032 FFF7FEFF 		bl	__aeabi_fdiv
 932              	.LVL33:
 933 0036 1D4B     		ldr	r3, .L53+16
 934 0038 1860     		str	r0, [r3]	@ float
 348:Src/main.c    **** 	  ? MAX_CONTROL_VALUE 
 935              		.loc 1 348 0
 936 003a 1D4B     		ldr	r3, .L53+20
 937 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 938 003e 082B     		cmp	r3, #8
 939 0040 24D8     		bhi	.L51
 940 0042 0446     		mov	r4, r0
 350:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 941              		.loc 1 350 0 discriminator 1
 942 0044 1B4B     		ldr	r3, .L53+24
 943 0046 1968     		ldr	r1, [r3]	@ float
 944 0048 4046     		mov	r0, r8
 945 004a FFF7FEFF 		bl	__aeabi_fmul
 946              	.LVL34:
 947 004e 0546     		mov	r5, r0
 948 0050 194B     		ldr	r3, .L53+28
 949 0052 1868     		ldr	r0, [r3]
 950 0054 FFF7FEFF 		bl	__aeabi_i2f
 951              	.LVL35:
 952 0058 2946     		mov	r1, r5
 953 005a FFF7FEFF 		bl	__aeabi_fadd
 954              	.LVL36:
 955 005e 0546     		mov	r5, r0
 956 0060 164B     		ldr	r3, .L53+32
 957 0062 1968     		ldr	r1, [r3]	@ float
 958 0064 3846     		mov	r0, r7
 959 0066 FFF7FEFF 		bl	__aeabi_fmul
 960              	.LVL37:
 961 006a 0146     		mov	r1, r0
 962 006c 2846     		mov	r0, r5
 963 006e FFF7FEFF 		bl	__aeabi_fadd
 964              	.LVL38:
 965 0072 0546     		mov	r5, r0
 966 0074 124B     		ldr	r3, .L53+36
 967 0076 1968     		ldr	r1, [r3]	@ float
 968 0078 2046     		mov	r0, r4
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 32


 969 007a FFF7FEFF 		bl	__aeabi_fmul
 970              	.LVL39:
 971 007e 0146     		mov	r1, r0
 972 0080 2846     		mov	r0, r5
 973 0082 FFF7FEFF 		bl	__aeabi_fadd
 974              	.LVL40:
 348:Src/main.c    **** 	  ? MAX_CONTROL_VALUE 
 975              		.loc 1 348 0 discriminator 1
 976 0086 FFF7FEFF 		bl	__aeabi_f2iz
 977              	.LVL41:
 978 008a 00E0     		b	.L50
 979              	.L51:
 348:Src/main.c    **** 	  ? MAX_CONTROL_VALUE 
 980              		.loc 1 348 0 is_stmt 0
 981 008c FF20     		movs	r0, #255
 982              	.L50:
 348:Src/main.c    **** 	  ? MAX_CONTROL_VALUE 
 983              		.loc 1 348 0 discriminator 4
 984 008e 0D4B     		ldr	r3, .L53+40
 985 0090 1860     		str	r0, [r3]
 352:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 986              		.loc 1 352 0 is_stmt 1 discriminator 4
 987 0092 0D48     		ldr	r0, .L53+44
 988 0094 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 989              	.LVL42:
 990 0098 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 991              	.L54:
 992              		.align	2
 993              	.L53:
 994 009c 00000000 		.word	.LANCHOR18
 995 00a0 00000000 		.word	.LANCHOR19
 996 00a4 00000000 		.word	.LANCHOR20
 997 00a8 00000000 		.word	.LANCHOR21
 998 00ac 00000000 		.word	.LANCHOR22
 999 00b0 00000000 		.word	.LANCHOR5
 1000 00b4 00000000 		.word	.LANCHOR23
 1001 00b8 00000000 		.word	.LANCHOR24
 1002 00bc 00000000 		.word	.LANCHOR25
 1003 00c0 00000000 		.word	.LANCHOR26
 1004 00c4 00000000 		.word	.LANCHOR27
 1005 00c8 00000000 		.word	htim3
 1006              		.cfi_endproc
 1007              	.LFE69:
 1009              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 1010              		.align	2
 1011              		.global	SPI1_IRQHandler
 1012              		.thumb
 1013              		.thumb_func
 1015              	SPI1_IRQHandler:
 1016              	.LFB70:
 362:Src/main.c    ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 1017              		.loc 1 362 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021 0000 08B5     		push	{r3, lr}
 1022              	.LCFI21:
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 33


 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 3, -8
 1025              		.cfi_offset 14, -4
 366:Src/main.c    ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 1026              		.loc 1 366 0
 1027 0002 0248     		ldr	r0, .L57
 1028 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 1029              	.LVL43:
 1030 0008 08BD     		pop	{r3, pc}
 1031              	.L58:
 1032 000a 00BF     		.align	2
 1033              	.L57:
 1034 000c 00000000 		.word	hspi1
 1035              		.cfi_endproc
 1036              	.LFE70:
 1038              		.section	.text.SystemClock_Config,"ax",%progbits
 1039              		.align	2
 1040              		.global	SystemClock_Config
 1041              		.thumb
 1042              		.thumb_func
 1044              	SystemClock_Config:
 1045              	.LFB71:
 377:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1046              		.loc 1 377 0
 1047              		.cfi_startproc
 1048              		@ args = 0, pretend = 0, frame = 80
 1049              		@ frame_needed = 0, uses_anonymous_args = 0
 1050 0000 30B5     		push	{r4, r5, lr}
 1051              	.LCFI22:
 1052              		.cfi_def_cfa_offset 12
 1053              		.cfi_offset 4, -12
 1054              		.cfi_offset 5, -8
 1055              		.cfi_offset 14, -4
 1056 0002 95B0     		sub	sp, sp, #84
 1057              	.LCFI23:
 1058              		.cfi_def_cfa_offset 96
 378:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1059              		.loc 1 378 0
 1060 0004 2822     		movs	r2, #40
 1061 0006 0021     		movs	r1, #0
 1062 0008 0DEB0200 		add	r0, sp, r2
 1063 000c FFF7FEFF 		bl	memset
 1064              	.LVL44:
 379:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1065              		.loc 1 379 0
 1066 0010 0024     		movs	r4, #0
 1067 0012 0594     		str	r4, [sp, #20]
 1068 0014 0694     		str	r4, [sp, #24]
 1069 0016 0794     		str	r4, [sp, #28]
 1070 0018 0894     		str	r4, [sp, #32]
 1071 001a 0994     		str	r4, [sp, #36]
 380:Src/main.c    **** 
 1072              		.loc 1 380 0
 1073 001c 0194     		str	r4, [sp, #4]
 1074 001e 0294     		str	r4, [sp, #8]
 1075 0020 0394     		str	r4, [sp, #12]
 1076 0022 0494     		str	r4, [sp, #16]
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 34


 384:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1077              		.loc 1 384 0
 1078 0024 0225     		movs	r5, #2
 1079 0026 0A95     		str	r5, [sp, #40]
 385:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1080              		.loc 1 385 0
 1081 0028 0123     		movs	r3, #1
 1082 002a 0E93     		str	r3, [sp, #56]
 386:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1083              		.loc 1 386 0
 1084 002c 1023     		movs	r3, #16
 1085 002e 0F93     		str	r3, [sp, #60]
 388:Src/main.c    ****   {
 1086              		.loc 1 388 0
 1087 0030 0AA8     		add	r0, sp, #40
 1088 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1089              	.LVL45:
 394:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1090              		.loc 1 394 0
 1091 0036 0F23     		movs	r3, #15
 1092 0038 0593     		str	r3, [sp, #20]
 396:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1093              		.loc 1 396 0
 1094 003a 0694     		str	r4, [sp, #24]
 397:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1095              		.loc 1 397 0
 1096 003c 0794     		str	r4, [sp, #28]
 398:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1097              		.loc 1 398 0
 1098 003e 0894     		str	r4, [sp, #32]
 399:Src/main.c    **** 
 1099              		.loc 1 399 0
 1100 0040 0994     		str	r4, [sp, #36]
 401:Src/main.c    ****   {
 1101              		.loc 1 401 0
 1102 0042 2146     		mov	r1, r4
 1103 0044 05A8     		add	r0, sp, #20
 1104 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1105              	.LVL46:
 405:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 1106              		.loc 1 405 0
 1107 004a 0195     		str	r5, [sp, #4]
 406:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1108              		.loc 1 406 0
 1109 004c 0394     		str	r4, [sp, #12]
 407:Src/main.c    ****   {
 1110              		.loc 1 407 0
 1111 004e 01A8     		add	r0, sp, #4
 1112 0050 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1113              	.LVL47:
 411:Src/main.c    **** 
 1114              		.loc 1 411 0
 1115 0054 15B0     		add	sp, sp, #84
 1116              	.LCFI24:
 1117              		.cfi_def_cfa_offset 12
 1118              		@ sp needed
 1119 0056 30BD     		pop	{r4, r5, pc}
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 35


 1120              		.cfi_endproc
 1121              	.LFE71:
 1123              		.section	.text.main,"ax",%progbits
 1124              		.align	2
 1125              		.global	main
 1126              		.thumb
 1127              		.thumb_func
 1129              	main:
 1130              	.LFB63:
 138:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1131              		.loc 1 138 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 8
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 1135 0000 10B5     		push	{r4, lr}
 1136              	.LCFI25:
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 4, -8
 1139              		.cfi_offset 14, -4
 1140 0002 84B0     		sub	sp, sp, #16
 1141              	.LCFI26:
 1142              		.cfi_def_cfa_offset 24
 146:Src/main.c    **** 
 1143              		.loc 1 146 0
 1144 0004 FFF7FEFF 		bl	HAL_Init
 1145              	.LVL48:
 153:Src/main.c    **** 
 1146              		.loc 1 153 0
 1147 0008 FFF7FEFF 		bl	SystemClock_Config
 1148              	.LVL49:
 160:Src/main.c    ****   MX_I2C1_Init();
 1149              		.loc 1 160 0
 1150 000c FFF7FEFF 		bl	MX_GPIO_Init
 1151              	.LVL50:
 161:Src/main.c    ****   MX_SPI1_Init();
 1152              		.loc 1 161 0
 1153 0010 FFF7FEFF 		bl	MX_I2C1_Init
 1154              	.LVL51:
 162:Src/main.c    ****   MX_USART1_UART_Init();
 1155              		.loc 1 162 0
 1156 0014 FFF7FEFF 		bl	MX_SPI1_Init
 1157              	.LVL52:
 163:Src/main.c    ****   MX_TIM2_Init();
 1158              		.loc 1 163 0
 1159 0018 FFF7FEFF 		bl	MX_USART1_UART_Init
 1160              	.LVL53:
 164:Src/main.c    ****   MX_ADC1_Init();
 1161              		.loc 1 164 0
 1162 001c FFF7FEFF 		bl	MX_TIM2_Init
 1163              	.LVL54:
 165:Src/main.c    ****   MX_TIM3_Init();
 1164              		.loc 1 165 0
 1165 0020 FFF7FEFF 		bl	MX_ADC1_Init
 1166              	.LVL55:
 166:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1167              		.loc 1 166 0
 1168 0024 FFF7FEFF 		bl	MX_TIM3_Init
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 36


 1169              	.LVL56:
 1170              	.L69:
 1171              	.LBB5:
 181:Src/main.c    **** 	fr_freq = 40000 / fr_delta;
 1172              		.loc 1 181 0
 1173 0028 49F64043 		movw	r3, #40000
 1174 002c 424A     		ldr	r2, .L71
 1175 002e 1268     		ldr	r2, [r2]
 1176 0030 93FBF2F2 		sdiv	r2, r3, r2
 1177 0034 4149     		ldr	r1, .L71+4
 1178 0036 0A60     		str	r2, [r1]
 182:Src/main.c    **** 	bl_freq = 40000 / bl_delta;
 1179              		.loc 1 182 0
 1180 0038 414A     		ldr	r2, .L71+8
 1181 003a 1268     		ldr	r2, [r2]
 1182 003c 93FBF2F2 		sdiv	r2, r3, r2
 1183 0040 4049     		ldr	r1, .L71+12
 1184 0042 0A60     		str	r2, [r1]
 183:Src/main.c    **** 	br_freq = 40000 / br_delta;
 1185              		.loc 1 183 0
 1186 0044 404A     		ldr	r2, .L71+16
 1187 0046 1268     		ldr	r2, [r2]
 1188 0048 93FBF2F2 		sdiv	r2, r3, r2
 1189 004c 3F49     		ldr	r1, .L71+20
 1190 004e 0A60     		str	r2, [r1]
 184:Src/main.c    **** 	
 1191              		.loc 1 184 0
 1192 0050 3F4A     		ldr	r2, .L71+24
 1193 0052 1268     		ldr	r2, [r2]
 1194 0054 93FBF2F3 		sdiv	r3, r3, r2
 1195 0058 3E4A     		ldr	r2, .L71+28
 1196 005a 1360     		str	r3, [r2]
 186:Src/main.c    **** 	if (fr_count >= 2) fr_freq = 0;
 1197              		.loc 1 186 0
 1198 005c 3E4B     		ldr	r3, .L71+32
 1199 005e 1B68     		ldr	r3, [r3]
 1200 0060 012B     		cmp	r3, #1
 1201 0062 02DD     		ble	.L62
 186:Src/main.c    **** 	if (fr_count >= 2) fr_freq = 0;
 1202              		.loc 1 186 0 is_stmt 0 discriminator 1
 1203 0064 0022     		movs	r2, #0
 1204 0066 354B     		ldr	r3, .L71+4
 1205 0068 1A60     		str	r2, [r3]
 1206              	.L62:
 187:Src/main.c    **** 	if (bl_count >= 2) bl_freq = 0;
 1207              		.loc 1 187 0 is_stmt 1
 1208 006a 3C4B     		ldr	r3, .L71+36
 1209 006c 1B68     		ldr	r3, [r3]
 1210 006e 012B     		cmp	r3, #1
 1211 0070 02DD     		ble	.L63
 187:Src/main.c    **** 	if (bl_count >= 2) bl_freq = 0;
 1212              		.loc 1 187 0 is_stmt 0 discriminator 1
 1213 0072 0022     		movs	r2, #0
 1214 0074 334B     		ldr	r3, .L71+12
 1215 0076 1A60     		str	r2, [r3]
 1216              	.L63:
 188:Src/main.c    **** 	if (br_count >= 2) br_freq = 0;
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 37


 1217              		.loc 1 188 0 is_stmt 1
 1218 0078 394B     		ldr	r3, .L71+40
 1219 007a 1B68     		ldr	r3, [r3]
 1220 007c 012B     		cmp	r3, #1
 1221 007e 02DD     		ble	.L64
 188:Src/main.c    **** 	if (br_count >= 2) br_freq = 0;
 1222              		.loc 1 188 0 is_stmt 0 discriminator 1
 1223 0080 0022     		movs	r2, #0
 1224 0082 324B     		ldr	r3, .L71+20
 1225 0084 1A60     		str	r2, [r3]
 1226              	.L64:
 189:Src/main.c    **** 	
 1227              		.loc 1 189 0 is_stmt 1
 1228 0086 374B     		ldr	r3, .L71+44
 1229 0088 1B68     		ldr	r3, [r3]
 1230 008a 012B     		cmp	r3, #1
 1231 008c 02DD     		ble	.L65
 189:Src/main.c    **** 	
 1232              		.loc 1 189 0 is_stmt 0 discriminator 1
 1233 008e 0022     		movs	r2, #0
 1234 0090 304B     		ldr	r3, .L71+28
 1235 0092 1A60     		str	r2, [r3]
 1236              	.L65:
 191:Src/main.c    **** 	back_avg = (bl_freq + br_freq) / 2;
 1237              		.loc 1 191 0 is_stmt 1
 1238 0094 294B     		ldr	r3, .L71+4
 1239 0096 1A68     		ldr	r2, [r3]
 1240 0098 2A4B     		ldr	r3, .L71+12
 1241 009a 1B68     		ldr	r3, [r3]
 1242 009c 1344     		add	r3, r3, r2
 1243 009e 03EBD373 		add	r3, r3, r3, lsr #31
 1244 00a2 5A10     		asrs	r2, r3, #1
 1245 00a4 304B     		ldr	r3, .L71+48
 1246 00a6 1A60     		str	r2, [r3]
 192:Src/main.c    **** 	
 1247              		.loc 1 192 0
 1248 00a8 284B     		ldr	r3, .L71+20
 1249 00aa 1968     		ldr	r1, [r3]
 1250 00ac 294B     		ldr	r3, .L71+28
 1251 00ae 1B68     		ldr	r3, [r3]
 1252 00b0 0B44     		add	r3, r3, r1
 1253 00b2 03EBD373 		add	r3, r3, r3, lsr #31
 1254 00b6 5B10     		asrs	r3, r3, #1
 1255 00b8 2C49     		ldr	r1, .L71+52
 1256 00ba 0B60     		str	r3, [r1]
 194:Src/main.c    **** 	
 1257              		.loc 1 194 0
 1258 00bc D31A     		subs	r3, r2, r3
 1259 00be 2C4A     		ldr	r2, .L71+56
 1260 00c0 1360     		str	r3, [r2]
 196:Src/main.c    **** 	error = slip - setpoint;
 1261              		.loc 1 196 0
 1262 00c2 2C49     		ldr	r1, .L71+60
 1263 00c4 0868     		ldr	r0, [r1]
 1264 00c6 2C4A     		ldr	r2, .L71+64
 1265 00c8 1060     		str	r0, [r2]
 197:Src/main.c    **** 	
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 38


 1266              		.loc 1 197 0
 1267 00ca 2C4A     		ldr	r2, .L71+68
 1268 00cc 1268     		ldr	r2, [r2]
 1269 00ce 9A1A     		subs	r2, r3, r2
 1270 00d0 0A60     		str	r2, [r1]
 199:Src/main.c    **** 	
 1271              		.loc 1 199 0
 1272 00d2 23B9     		cbnz	r3, .L66
 199:Src/main.c    **** 	
 1273              		.loc 1 199 0 is_stmt 0 discriminator 1
 1274 00d4 4FF40051 		mov	r1, #8192
 1275 00d8 2948     		ldr	r0, .L71+72
 1276 00da FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1277              	.LVL57:
 1278              	.L66:
 201:Src/main.c    **** 	if (control > 255) control = 255;
 1279              		.loc 1 201 0 is_stmt 1
 1280 00de 294B     		ldr	r3, .L71+76
 1281 00e0 1B68     		ldr	r3, [r3]
 1282 00e2 002B     		cmp	r3, #0
 1283 00e4 02DA     		bge	.L67
 201:Src/main.c    **** 	if (control > 255) control = 255;
 1284              		.loc 1 201 0 is_stmt 0 discriminator 1
 1285 00e6 0022     		movs	r2, #0
 1286 00e8 264B     		ldr	r3, .L71+76
 1287 00ea 1A60     		str	r2, [r3]
 1288              	.L67:
 202:Src/main.c    **** 	
 1289              		.loc 1 202 0 is_stmt 1
 1290 00ec 254B     		ldr	r3, .L71+76
 1291 00ee 1B68     		ldr	r3, [r3]
 1292 00f0 FF2B     		cmp	r3, #255
 1293 00f2 02DD     		ble	.L68
 202:Src/main.c    **** 	
 1294              		.loc 1 202 0 is_stmt 0 discriminator 1
 1295 00f4 FF22     		movs	r2, #255
 1296 00f6 234B     		ldr	r3, .L71+76
 1297 00f8 1A60     		str	r2, [r3]
 1298              	.L68:
 210:Src/main.c    **** 	data[1] = control;
 1299              		.loc 1 210 0 is_stmt 1
 1300 00fa 0023     		movs	r3, #0
 1301 00fc 8DF80C30 		strb	r3, [sp, #12]
 211:Src/main.c    **** 	if (HAL_I2C_Master_Transmit(&hi2c1, (0b0101111)<<1, data, sizeof(data), 1000) == HAL_OK)
 1302              		.loc 1 211 0
 1303 0100 204B     		ldr	r3, .L71+76
 1304 0102 1B68     		ldr	r3, [r3]
 1305 0104 8DF80D30 		strb	r3, [sp, #13]
 212:Src/main.c    **** 	{
 1306              		.loc 1 212 0
 1307 0108 4FF47A74 		mov	r4, #1000
 1308 010c 0094     		str	r4, [sp]
 1309 010e 0223     		movs	r3, #2
 1310 0110 03AA     		add	r2, sp, #12
 1311 0112 5E21     		movs	r1, #94
 1312 0114 1C48     		ldr	r0, .L71+80
 1313 0116 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 39


 1314              	.LVL58:
 217:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data, sizeof(data), 1000);
 1315              		.loc 1 217 0
 1316 011a 164B     		ldr	r3, .L71+60
 1317 011c 1B68     		ldr	r3, [r3]
 1318 011e 8DF80C30 		strb	r3, [sp, #12]
 218:Src/main.c    **** 	HAL_Delay(50);
 1319              		.loc 1 218 0
 1320 0122 2346     		mov	r3, r4
 1321 0124 0222     		movs	r2, #2
 1322 0126 03A9     		add	r1, sp, #12
 1323 0128 1848     		ldr	r0, .L71+84
 1324 012a FFF7FEFF 		bl	HAL_UART_Transmit
 1325              	.LVL59:
 219:Src/main.c    **** 	
 1326              		.loc 1 219 0
 1327 012e 3220     		movs	r0, #50
 1328 0130 FFF7FEFF 		bl	HAL_Delay
 1329              	.LVL60:
 1330              	.LBE5:
 236:Src/main.c    ****   /* USER CODE END 3 */
 1331              		.loc 1 236 0
 1332 0134 78E7     		b	.L69
 1333              	.L72:
 1334 0136 00BF     		.align	2
 1335              	.L71:
 1336 0138 00000000 		.word	.LANCHOR4
 1337 013c 00000000 		.word	.LANCHOR28
 1338 0140 00000000 		.word	.LANCHOR9
 1339 0144 00000000 		.word	.LANCHOR29
 1340 0148 00000000 		.word	.LANCHOR13
 1341 014c 00000000 		.word	.LANCHOR30
 1342 0150 00000000 		.word	.LANCHOR17
 1343 0154 00000000 		.word	.LANCHOR31
 1344 0158 00000000 		.word	.LANCHOR3
 1345 015c 00000000 		.word	.LANCHOR8
 1346 0160 00000000 		.word	.LANCHOR12
 1347 0164 00000000 		.word	.LANCHOR16
 1348 0168 00000000 		.word	.LANCHOR32
 1349 016c 00000000 		.word	.LANCHOR33
 1350 0170 00000000 		.word	.LANCHOR34
 1351 0174 00000000 		.word	.LANCHOR18
 1352 0178 00000000 		.word	.LANCHOR21
 1353 017c 00000000 		.word	.LANCHOR35
 1354 0180 00100140 		.word	1073811456
 1355 0184 00000000 		.word	.LANCHOR27
 1356 0188 00000000 		.word	hi2c1
 1357 018c 00000000 		.word	huart1
 1358              		.cfi_endproc
 1359              	.LFE63:
 1361              		.section	.text.Error_Handler,"ax",%progbits
 1362              		.align	2
 1363              		.global	Error_Handler
 1364              		.thumb
 1365              		.thumb_func
 1367              	Error_Handler:
 1368              	.LFB79:
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 40


 701:Src/main.c    **** 
 702:Src/main.c    **** /* USER CODE BEGIN 4 */
 703:Src/main.c    **** 
 704:Src/main.c    **** /* USER CODE END 4 */
 705:Src/main.c    **** 
 706:Src/main.c    **** /**
 707:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 708:Src/main.c    ****   * @retval None
 709:Src/main.c    ****   */
 710:Src/main.c    **** void Error_Handler(void)
 711:Src/main.c    **** {
 1369              		.loc 1 711 0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 0
 1372              		@ frame_needed = 0, uses_anonymous_args = 0
 1373              		@ link register save eliminated.
 1374 0000 7047     		bx	lr
 1375              		.cfi_endproc
 1376              	.LFE79:
 1378              		.global	traction_control_count
 1379              		.global	br_freq
 1380              		.global	br_delta
 1381              		.global	br_count
 1382              		.global	br_old
 1383              		.global	br_new
 1384              		.global	bl_freq
 1385              		.global	bl_delta
 1386              		.global	bl_count
 1387              		.global	bl_old
 1388              		.global	bl_new
 1389              		.global	fr_freq
 1390              		.global	fr_delta
 1391              		.global	fr_count
 1392              		.global	fr_old
 1393              		.global	fr_new
 1394              		.global	fl_freq
 1395              		.global	fl_delta
 1396              		.global	fl_count
 1397              		.global	fl_old
 1398              		.global	fl_new
 1399              		.global	tc_on
 1400              		.global	back_avg
 1401              		.global	front_avg
 1402              		.global	prev_error
 1403              		.global	error
 1404              		.global	slip
 1405              		.global	control
 1406              		.global	derivative
 1407              		.global	integral
 1408              		.global	dt
 1409              		.global	pid_rate
 1410              		.global	kd
 1411              		.global	ki
 1412              		.global	kp
 1413              		.global	bias
 1414              		.global	setpoint
 1415              		.comm	huart1,64,4
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 41


 1416              		.comm	htim3,64,4
 1417              		.comm	htim2,64,4
 1418              		.comm	hspi1,88,4
 1419              		.comm	hi2c1,84,4
 1420              		.comm	hadc1,48,4
 1421 0002 00BF     		.section	.bss.front_avg,"aw",%nobits
 1422              		.align	2
 1423              		.set	.LANCHOR32,. + 0
 1426              	front_avg:
 1427 0000 00000000 		.space	4
 1428              		.section	.bss.bl_count,"aw",%nobits
 1429              		.align	2
 1430              		.set	.LANCHOR12,. + 0
 1433              	bl_count:
 1434 0000 00000000 		.space	4
 1435              		.section	.bss.fl_count,"aw",%nobits
 1436              		.align	2
 1437              		.set	.LANCHOR3,. + 0
 1440              	fl_count:
 1441 0000 00000000 		.space	4
 1442              		.section	.bss.fr_count,"aw",%nobits
 1443              		.align	2
 1444              		.set	.LANCHOR8,. + 0
 1447              	fr_count:
 1448 0000 00000000 		.space	4
 1449              		.section	.bss.fl_delta,"aw",%nobits
 1450              		.align	2
 1451              		.set	.LANCHOR4,. + 0
 1454              	fl_delta:
 1455 0000 00000000 		.space	4
 1456              		.section	.data.tc_on,"aw",%progbits
 1457              		.align	2
 1460              	tc_on:
 1461 0000 01000000 		.word	1
 1462              		.section	.bss.kd,"aw",%nobits
 1463              		.align	2
 1464              		.set	.LANCHOR26,. + 0
 1467              	kd:
 1468 0000 00000000 		.space	4
 1469              		.section	.data.bias,"aw",%progbits
 1470              		.align	2
 1471              		.set	.LANCHOR24,. + 0
 1474              	bias:
 1475 0000 32000000 		.word	50
 1476              		.section	.bss.br_old,"aw",%nobits
 1477              		.align	2
 1478              		.set	.LANCHOR15,. + 0
 1481              	br_old:
 1482 0000 00000000 		.space	4
 1483              		.section	.bss.fr_delta,"aw",%nobits
 1484              		.align	2
 1485              		.set	.LANCHOR9,. + 0
 1488              	fr_delta:
 1489 0000 00000000 		.space	4
 1490              		.section	.bss.br_new,"aw",%nobits
 1491              		.align	2
 1492              		.set	.LANCHOR14,. + 0
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 42


 1495              	br_new:
 1496 0000 00000000 		.space	4
 1497              		.section	.bss.traction_control_count,"aw",%nobits
 1498              		.set	.LANCHOR5,. + 0
 1501              	traction_control_count:
 1502 0000 00       		.space	1
 1503              		.section	.bss.fr_new,"aw",%nobits
 1504              		.align	2
 1505              		.set	.LANCHOR6,. + 0
 1508              	fr_new:
 1509 0000 00000000 		.space	4
 1510              		.section	.bss.derivative,"aw",%nobits
 1511              		.align	2
 1512              		.set	.LANCHOR22,. + 0
 1515              	derivative:
 1516 0000 00000000 		.space	4
 1517              		.section	.bss.slip,"aw",%nobits
 1518              		.align	2
 1519              		.set	.LANCHOR34,. + 0
 1522              	slip:
 1523 0000 00000000 		.space	4
 1524              		.section	.bss.bl_delta,"aw",%nobits
 1525              		.align	2
 1526              		.set	.LANCHOR13,. + 0
 1529              	bl_delta:
 1530 0000 00000000 		.space	4
 1531              		.section	.bss.error,"aw",%nobits
 1532              		.align	2
 1533              		.set	.LANCHOR18,. + 0
 1536              	error:
 1537 0000 00000000 		.space	4
 1538              		.section	.bss.setpoint,"aw",%nobits
 1539              		.align	2
 1540              		.set	.LANCHOR35,. + 0
 1543              	setpoint:
 1544 0000 00000000 		.space	4
 1545              		.section	.bss.fl_old,"aw",%nobits
 1546              		.align	2
 1547              		.set	.LANCHOR2,. + 0
 1550              	fl_old:
 1551 0000 00000000 		.space	4
 1552              		.section	.data.kp,"aw",%progbits
 1553              		.align	2
 1554              		.set	.LANCHOR23,. + 0
 1557              	kp:
 1558 0000 0000803F 		.word	1065353216
 1559              		.section	.bss.fr_old,"aw",%nobits
 1560              		.align	2
 1561              		.set	.LANCHOR7,. + 0
 1564              	fr_old:
 1565 0000 00000000 		.space	4
 1566              		.section	.data.pid_rate,"aw",%progbits
 1567              		.align	2
 1568              		.set	.LANCHOR0,. + 0
 1571              	pid_rate:
 1572 0000 19000000 		.word	25
 1573              		.section	.bss.fr_freq,"aw",%nobits
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 43


 1574              		.align	2
 1575              		.set	.LANCHOR29,. + 0
 1578              	fr_freq:
 1579 0000 00000000 		.space	4
 1580              		.section	.bss.br_delta,"aw",%nobits
 1581              		.align	2
 1582              		.set	.LANCHOR17,. + 0
 1585              	br_delta:
 1586 0000 00000000 		.space	4
 1587              		.section	.bss.bl_old,"aw",%nobits
 1588              		.align	2
 1589              		.set	.LANCHOR11,. + 0
 1592              	bl_old:
 1593 0000 00000000 		.space	4
 1594              		.section	.bss.bl_new,"aw",%nobits
 1595              		.align	2
 1596              		.set	.LANCHOR10,. + 0
 1599              	bl_new:
 1600 0000 00000000 		.space	4
 1601              		.section	.bss.fl_new,"aw",%nobits
 1602              		.align	2
 1603              		.set	.LANCHOR1,. + 0
 1606              	fl_new:
 1607 0000 00000000 		.space	4
 1608              		.section	.bss.control,"aw",%nobits
 1609              		.align	2
 1610              		.set	.LANCHOR27,. + 0
 1613              	control:
 1614 0000 00000000 		.space	4
 1615              		.section	.bss.prev_error,"aw",%nobits
 1616              		.align	2
 1617              		.set	.LANCHOR21,. + 0
 1620              	prev_error:
 1621 0000 00000000 		.space	4
 1622              		.section	.bss.integral,"aw",%nobits
 1623              		.align	2
 1624              		.set	.LANCHOR20,. + 0
 1627              	integral:
 1628 0000 00000000 		.space	4
 1629              		.section	.bss.br_count,"aw",%nobits
 1630              		.align	2
 1631              		.set	.LANCHOR16,. + 0
 1634              	br_count:
 1635 0000 00000000 		.space	4
 1636              		.section	.bss.fl_freq,"aw",%nobits
 1637              		.align	2
 1638              		.set	.LANCHOR28,. + 0
 1641              	fl_freq:
 1642 0000 00000000 		.space	4
 1643              		.section	.bss.br_freq,"aw",%nobits
 1644              		.align	2
 1645              		.set	.LANCHOR31,. + 0
 1648              	br_freq:
 1649 0000 00000000 		.space	4
 1650              		.section	.bss.bl_freq,"aw",%nobits
 1651              		.align	2
 1652              		.set	.LANCHOR30,. + 0
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 44


 1655              	bl_freq:
 1656 0000 00000000 		.space	4
 1657              		.section	.bss.back_avg,"aw",%nobits
 1658              		.align	2
 1659              		.set	.LANCHOR33,. + 0
 1662              	back_avg:
 1663 0000 00000000 		.space	4
 1664              		.section	.data.dt,"aw",%progbits
 1665              		.align	2
 1666              		.set	.LANCHOR19,. + 0
 1669              	dt:
 1670 0000 0AD7233D 		.word	1025758986
 1671              		.section	.bss.ki,"aw",%nobits
 1672              		.align	2
 1673              		.set	.LANCHOR25,. + 0
 1676              	ki:
 1677 0000 00000000 		.space	4
 1678              		.text
 1679              	.Letext0:
 1680              		.file 2 "/Users/msd/Downloads/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_
 1681              		.file 3 "/Users/msd/Downloads/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 1682              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1683              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1684              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1685              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1686              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1687              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1688              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1689              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1690              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1691              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1692              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1693              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1694              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1695              		.file 17 "Drivers/CMSIS/Include/core_cm3.h"
 1696              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1697              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:20     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:162    .text.MX_GPIO_Init:00000000000000c4 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:170    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:174    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:215    .text.MX_I2C1_Init:0000000000000028 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:222    .text.MX_SPI1_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:226    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:274    .text.MX_SPI1_Init:0000000000000030 $d
                            *COM*:0000000000000058 hspi1
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:280    .text.MX_USART1_UART_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:284    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:323    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:329    .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:333    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:407    .text.MX_TIM2_Init:0000000000000054 $d
                            *COM*:0000000000000040 htim2
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:412    .text.MX_TIM3_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:416    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:493    .text.MX_TIM3_Init:000000000000005c $d
                            *COM*:0000000000000040 htim3
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:500    .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:504    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:568    .text.MX_ADC1_Init:0000000000000040 $d
                            *COM*:0000000000000030 hadc1
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:574    .text.EXTI0_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:579    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:624    .text.EXTI0_IRQHandler:0000000000000034 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:634    .text.EXTI1_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:639    .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:684    .text.EXTI1_IRQHandler:0000000000000034 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:694    .text.EXTI2_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:699    .text.EXTI2_IRQHandler:0000000000000000 EXTI2_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:744    .text.EXTI2_IRQHandler:0000000000000034 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:754    .text.EXTI3_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:759    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:804    .text.EXTI3_IRQHandler:0000000000000034 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:814    .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:819    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:871    .text.TIM2_IRQHandler:0000000000000044 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:886    .text.TIM3_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:891    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:994    .text.TIM3_IRQHandler:000000000000009c $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1010   .text.SPI1_IRQHandler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1015   .text.SPI1_IRQHandler:0000000000000000 SPI1_IRQHandler
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1034   .text.SPI1_IRQHandler:000000000000000c $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1039   .text.SystemClock_Config:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1044   .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1124   .text.main:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1129   .text.main:0000000000000000 main
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1336   .text.main:0000000000000138 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1362   .text.Error_Handler:0000000000000000 $t
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1367   .text.Error_Handler:0000000000000000 Error_Handler
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 46


/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1501   .bss.traction_control_count:0000000000000000 traction_control_count
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1648   .bss.br_freq:0000000000000000 br_freq
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1585   .bss.br_delta:0000000000000000 br_delta
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1634   .bss.br_count:0000000000000000 br_count
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1481   .bss.br_old:0000000000000000 br_old
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1495   .bss.br_new:0000000000000000 br_new
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1655   .bss.bl_freq:0000000000000000 bl_freq
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1529   .bss.bl_delta:0000000000000000 bl_delta
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1433   .bss.bl_count:0000000000000000 bl_count
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1592   .bss.bl_old:0000000000000000 bl_old
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1599   .bss.bl_new:0000000000000000 bl_new
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1578   .bss.fr_freq:0000000000000000 fr_freq
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1488   .bss.fr_delta:0000000000000000 fr_delta
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1447   .bss.fr_count:0000000000000000 fr_count
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1564   .bss.fr_old:0000000000000000 fr_old
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1508   .bss.fr_new:0000000000000000 fr_new
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1641   .bss.fl_freq:0000000000000000 fl_freq
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1454   .bss.fl_delta:0000000000000000 fl_delta
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1440   .bss.fl_count:0000000000000000 fl_count
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1550   .bss.fl_old:0000000000000000 fl_old
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1606   .bss.fl_new:0000000000000000 fl_new
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1460   .data.tc_on:0000000000000000 tc_on
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1662   .bss.back_avg:0000000000000000 back_avg
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1426   .bss.front_avg:0000000000000000 front_avg
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1620   .bss.prev_error:0000000000000000 prev_error
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1536   .bss.error:0000000000000000 error
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1522   .bss.slip:0000000000000000 slip
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1613   .bss.control:0000000000000000 control
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1515   .bss.derivative:0000000000000000 derivative
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1627   .bss.integral:0000000000000000 integral
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1669   .data.dt:0000000000000000 dt
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1571   .data.pid_rate:0000000000000000 pid_rate
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1467   .bss.kd:0000000000000000 kd
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1676   .bss.ki:0000000000000000 ki
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1557   .data.kp:0000000000000000 kp
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1474   .data.bias:0000000000000000 bias
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1543   .bss.setpoint:0000000000000000 setpoint
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1422   .bss.front_avg:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1429   .bss.bl_count:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1436   .bss.fl_count:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1443   .bss.fr_count:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1450   .bss.fl_delta:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1457   .data.tc_on:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1463   .bss.kd:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1470   .data.bias:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1477   .bss.br_old:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1484   .bss.fr_delta:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1491   .bss.br_new:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1502   .bss.traction_control_count:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1504   .bss.fr_new:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1511   .bss.derivative:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1518   .bss.slip:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1525   .bss.bl_delta:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1532   .bss.error:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1539   .bss.setpoint:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1546   .bss.fl_old:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1553   .data.kp:0000000000000000 $d
ARM GAS  /var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s 			page 47


/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1560   .bss.fr_old:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1567   .data.pid_rate:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1574   .bss.fr_freq:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1581   .bss.br_delta:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1588   .bss.bl_old:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1595   .bss.bl_new:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1602   .bss.fl_new:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1609   .bss.control:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1616   .bss.prev_error:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1623   .bss.integral:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1630   .bss.br_count:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1637   .bss.fl_freq:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1644   .bss.br_freq:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1651   .bss.bl_freq:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1658   .bss.back_avg:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1665   .data.dt:0000000000000000 $d
/var/folders/bp/f56jfl7x4ql_2mb87dhbknk40000gn/T//ccPcOFXt.s:1672   .bss.ki:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_I2C_Init
HAL_SPI_Init
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Start_IT
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_IRQHandler
__aeabi_i2f
__aeabi_fmul
__aeabi_fadd
__aeabi_fdiv
__aeabi_f2iz
HAL_SPI_IRQHandler
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_I2C_Master_Transmit
HAL_UART_Transmit
HAL_Delay
