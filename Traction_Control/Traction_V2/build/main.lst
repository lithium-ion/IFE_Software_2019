ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB81:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
   2:Src/main.c    **** #include "main.h"
   3:Src/main.c    **** 
   4:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
   5:Src/main.c    **** /* USER CODE BEGIN Includes */
   6:Src/main.c    **** 
   7:Src/main.c    **** /* USER CODE END Includes */
   8:Src/main.c    **** 
   9:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  10:Src/main.c    **** /* USER CODE BEGIN PTD */
  11:Src/main.c    **** 
  12:Src/main.c    **** /* USER CODE END PTD */
  13:Src/main.c    **** 
  14:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  15:Src/main.c    **** /* USER CODE BEGIN PD */
  16:Src/main.c    **** 
  17:Src/main.c    **** /* USER CODE END PD */
  18:Src/main.c    **** 
  19:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  20:Src/main.c    **** /* USER CODE BEGIN PM */
  21:Src/main.c    **** 
  22:Src/main.c    **** /* USER CODE END PM */
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  25:Src/main.c    **** ADC_HandleTypeDef hadc1;
  26:Src/main.c    **** 
  27:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  28:Src/main.c    **** 
  29:Src/main.c    **** SPI_HandleTypeDef hspi1;
  30:Src/main.c    **** 
  31:Src/main.c    **** TIM_HandleTypeDef htim2;
  32:Src/main.c    **** TIM_HandleTypeDef htim3;
  33:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 2


  34:Src/main.c    **** UART_HandleTypeDef huart1;
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE BEGIN PV */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* parameter list:
  39:Src/main.c    **** 
  40:Src/main.c    **** PID: Kp, Ki, Kd, update rate (TIM)
  41:Src/main.c    **** EXTI: TIM frequency, timeout value
  42:Src/main.c    **** 
  43:Src/main.c    **** pot i2c address
  44:Src/main.c    **** 
  45:Src/main.c    **** EXTI0 = front left wheel
  46:Src/main.c    **** EXTI1 = front right wheel
  47:Src/main.c    **** EXTI2 = back left wheel
  48:Src/main.c    **** EXTI3 = back right wheel
  49:Src/main.c    **** TIM2 = freq measurement timer
  50:Src/main.c    **** TIM3 = PID timer
  51:Src/main.c    **** 
  52:Src/main.c    **** timeout - if count == 3, reset count, freq = 0
  53:Src/main.c    **** 
  54:Src/main.c    **** 
  55:Src/main.c    **** */
  56:Src/main.c    **** 
  57:Src/main.c    **** int setpoint = 0;
  58:Src/main.c    **** int bias = 50;
  59:Src/main.c    **** 
  60:Src/main.c    **** float kp = 1; // 1 doesnt oscillate 
  61:Src/main.c    **** float ki = 0;
  62:Src/main.c    **** float kd = 0; 
  63:Src/main.c    **** int pid_rate = 25; // Hz
  64:Src/main.c    **** float dt = 0.04;
  65:Src/main.c    **** 
  66:Src/main.c    **** float integral = 0;
  67:Src/main.c    **** float derivative = 0;
  68:Src/main.c    **** 
  69:Src/main.c    **** int control = 0;
  70:Src/main.c    **** int slip = 0;
  71:Src/main.c    **** int error = 0;
  72:Src/main.c    **** int prev_error = 0;
  73:Src/main.c    **** int front_avg = 0;
  74:Src/main.c    **** int back_avg = 0;
  75:Src/main.c    **** 
  76:Src/main.c    **** int tc_on = 1;
  77:Src/main.c    **** 
  78:Src/main.c    **** //front left wheel
  79:Src/main.c    **** int fl_new = 0; // current timer value
  80:Src/main.c    **** int fl_old = 0; // previous timer value
  81:Src/main.c    **** int fl_count = 0; // count TIM2 resets between fl_new and fl_old
  82:Src/main.c    **** int fl_delta = 0; // difference in ticks between new and old
  83:Src/main.c    **** int fl_freq = 0; // frequency in Hz
  84:Src/main.c    **** 
  85:Src/main.c    **** //front right wheel
  86:Src/main.c    **** int fr_new = 0; // current timer value
  87:Src/main.c    **** int fr_old = 0; // previous timer value
  88:Src/main.c    **** int fr_count = 0; // count TIM2 resets between fl_new and fl_old
  89:Src/main.c    **** int fr_delta = 0; // difference in ticks between new and old
  90:Src/main.c    **** int fr_freq = 0; // frequency in Hz
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 3


  91:Src/main.c    **** 
  92:Src/main.c    **** //back left wheel
  93:Src/main.c    **** int bl_new = 0; // current timer value
  94:Src/main.c    **** int bl_old = 0; // previous timer value
  95:Src/main.c    **** int bl_count = 0; // count TIM2 resets between fl_new and fl_old
  96:Src/main.c    **** int bl_delta = 0; // difference in ticks between new and old
  97:Src/main.c    **** int bl_freq = 0; // frequency in Hz
  98:Src/main.c    **** 
  99:Src/main.c    **** //back right wheel
 100:Src/main.c    **** int br_new = 0; // current timer value
 101:Src/main.c    **** int br_old = 0; // previous timer value
 102:Src/main.c    **** int br_count = 0; // count TIM2 resets between fl_new and fl_old
 103:Src/main.c    **** int br_delta = 0; // difference in ticks between new and old
 104:Src/main.c    **** int br_freq = 0; // frequency in Hz
 105:Src/main.c    **** 
 106:Src/main.c    **** 
 107:Src/main.c    **** /* USER CODE END PV */
 108:Src/main.c    **** 
 109:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 110:Src/main.c    **** void SystemClock_Config(void);
 111:Src/main.c    **** static void MX_GPIO_Init(void);
 112:Src/main.c    **** static void MX_I2C1_Init(void);
 113:Src/main.c    **** static void MX_SPI1_Init(void);
 114:Src/main.c    **** static void MX_USART1_UART_Init(void);
 115:Src/main.c    **** static void MX_TIM2_Init(void);
 116:Src/main.c    **** static void MX_ADC1_Init(void);
 117:Src/main.c    **** static void MX_TIM3_Init(void);
 118:Src/main.c    **** /* USER CODE BEGIN PFP */
 119:Src/main.c    **** 
 120:Src/main.c    **** /* USER CODE END PFP */
 121:Src/main.c    **** 
 122:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 123:Src/main.c    **** /* USER CODE BEGIN 0 */
 124:Src/main.c    **** 
 125:Src/main.c    **** /* USER CODE END 0 */
 126:Src/main.c    **** 
 127:Src/main.c    **** /**
 128:Src/main.c    ****   * @brief  The application entry point.
 129:Src/main.c    ****   * @retval int
 130:Src/main.c    ****   */
 131:Src/main.c    **** int main(void)
 132:Src/main.c    **** {
 133:Src/main.c    ****   /* USER CODE BEGIN 1 */
 134:Src/main.c    **** 
 135:Src/main.c    ****   /* USER CODE END 1 */
 136:Src/main.c    **** 
 137:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 140:Src/main.c    ****   HAL_Init();
 141:Src/main.c    **** 
 142:Src/main.c    ****   /* USER CODE BEGIN Init */
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* USER CODE END Init */
 145:Src/main.c    **** 
 146:Src/main.c    ****   /* Configure the system clock */
 147:Src/main.c    ****   SystemClock_Config();
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 4


 148:Src/main.c    **** 
 149:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 150:Src/main.c    **** 
 151:Src/main.c    ****   /* USER CODE END SysInit */
 152:Src/main.c    **** 
 153:Src/main.c    ****   /* Initialize all configured peripherals */
 154:Src/main.c    ****   MX_GPIO_Init();
 155:Src/main.c    ****   MX_I2C1_Init();
 156:Src/main.c    ****   MX_SPI1_Init();
 157:Src/main.c    ****   MX_USART1_UART_Init();
 158:Src/main.c    ****   MX_TIM2_Init();
 159:Src/main.c    ****   MX_ADC1_Init();
 160:Src/main.c    ****   MX_TIM3_Init();
 161:Src/main.c    ****   /* USER CODE BEGIN 2 */
 162:Src/main.c    ****   unsigned char data[1];
 163:Src/main.c    ****   /* USER CODE END 2 */
 164:Src/main.c    **** 
 165:Src/main.c    ****   /* Infinite loop */
 166:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 167:Src/main.c    ****   while (1)
 168:Src/main.c    ****   {
 169:Src/main.c    ****     /* USER CODE END WHILE */
 170:Src/main.c    **** 	
 171:Src/main.c    **** 	/* if (tc_on) PID_controller();
 172:Src/main.c    **** 	else I = 0, send lowest R over I2C */
 173:Src/main.c    **** 	// PID interrupt still runs when TC is off, but the value isn't sent
 174:Src/main.c    **** 	
 175:Src/main.c    **** 	fl_freq = 40000 / fl_delta;
 176:Src/main.c    **** 	fr_freq = 40000 / fr_delta;
 177:Src/main.c    **** 	bl_freq = 40000 / bl_delta;
 178:Src/main.c    **** 	br_freq = 40000 / br_delta;
 179:Src/main.c    **** 	
 180:Src/main.c    **** 	if (fl_count >= 2) fl_freq = 0;
 181:Src/main.c    **** 	if (fr_count >= 2) fr_freq = 0;
 182:Src/main.c    **** 	if (bl_count >= 2) bl_freq = 0;
 183:Src/main.c    **** 	if (br_count >= 2) br_freq = 0;
 184:Src/main.c    **** 	
 185:Src/main.c    **** 	front_avg = (fl_freq + fr_freq) / 2;
 186:Src/main.c    **** 	back_avg = (bl_freq + br_freq) / 2;
 187:Src/main.c    **** 	
 188:Src/main.c    **** 	slip = front_avg - back_avg;
 189:Src/main.c    **** 	
 190:Src/main.c    **** 	prev_error = error;
 191:Src/main.c    **** 	error = slip - setpoint;
 192:Src/main.c    **** 	
 193:Src/main.c    **** 	if (slip == 0) HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 194:Src/main.c    **** 	
 195:Src/main.c    **** 	if (control < 0) control = 0;
 196:Src/main.c    **** 	if (control > 255) control = 255;
 197:Src/main.c    **** 	
 198:Src/main.c    **** 	/*unsigned char spi_data[2];
 199:Src/main.c    **** 	spi_data[0] = 0;
 200:Src/main.c    **** 	spi_data[1] = 255;
 201:Src/main.c    **** 	HAL_SPI_Transmit(&hspi1, spi_data, sizeof(spi_data), 1000);*/
 202:Src/main.c    **** 	
 203:Src/main.c    **** 	unsigned char data[2];
 204:Src/main.c    **** 	data[0] = 0x00;
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 5


 205:Src/main.c    **** 	data[1] = control;
 206:Src/main.c    **** 	if (HAL_I2C_Master_Transmit(&hi2c1, (0b0101111)<<1, data, sizeof(data), 1000) == HAL_OK)
 207:Src/main.c    **** 	{
 208:Src/main.c    **** 		//HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 209:Src/main.c    **** 	}
 210:Src/main.c    **** 	
 211:Src/main.c    **** 	data[0] = error;
 212:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data, sizeof(data), 1000);
 213:Src/main.c    **** 	HAL_Delay(50);
 214:Src/main.c    **** 	
 215:Src/main.c    **** 	
 216:Src/main.c    **** 	/*data[0] = fl_freq;
 217:Src/main.c    **** 	data[1] = 0xFF;
 218:Src/main.c    **** 	data[2] = fr_freq;
 219:Src/main.c    **** 	data[3] = 0xFF;
 220:Src/main.c    **** 	data[4] = bl_freq;
 221:Src/main.c    **** 	data[5] = 0xFF;
 222:Src/main.c    **** 	data[6] = br_freq;
 223:Src/main.c    **** 	data[7] = 0xFF;
 224:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data, sizeof(data), 1000);
 225:Src/main.c    **** 	HAL_Delay(500);*/
 226:Src/main.c    **** 	
 227:Src/main.c    **** 	
 228:Src/main.c    **** 	
 229:Src/main.c    ****     /* USER CODE BEGIN 3 */
 230:Src/main.c    ****   }
 231:Src/main.c    ****   /* USER CODE END 3 */
 232:Src/main.c    **** }
 233:Src/main.c    **** 
 234:Src/main.c    **** /******************************************************************************/
 235:Src/main.c    **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 236:Src/main.c    **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 237:Src/main.c    **** /* For the available peripheral interrupt handler names,                      */
 238:Src/main.c    **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 239:Src/main.c    **** /******************************************************************************/
 240:Src/main.c    **** 
 241:Src/main.c    **** /**
 242:Src/main.c    ****   * @brief This function handles EXTI line0 interrupt.
 243:Src/main.c    ****   */
 244:Src/main.c    **** void EXTI0_IRQHandler(void)
 245:Src/main.c    **** {
 246:Src/main.c    ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 247:Src/main.c    ****   fl_new = __HAL_TIM_GET_COUNTER(&htim2);
 248:Src/main.c    ****   fl_delta = fl_new - fl_old + 40000 * fl_count;
 249:Src/main.c    ****   fl_old = fl_new;
 250:Src/main.c    ****   fl_count = 0;
 251:Src/main.c    ****   /* USER CODE END EXTI0_IRQn 0 */
 252:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 253:Src/main.c    ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 254:Src/main.c    **** 
 255:Src/main.c    ****   /* USER CODE END EXTI0_IRQn 1 */
 256:Src/main.c    **** }
 257:Src/main.c    **** 
 258:Src/main.c    **** /**
 259:Src/main.c    ****   * @brief This function handles EXTI line1 interrupt.
 260:Src/main.c    ****   */
 261:Src/main.c    **** void EXTI1_IRQHandler(void)
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 6


 262:Src/main.c    **** {
 263:Src/main.c    ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 264:Src/main.c    ****   fr_new = __HAL_TIM_GET_COUNTER(&htim2);
 265:Src/main.c    ****   fr_delta = fr_new - fr_old + 40000 * fr_count;
 266:Src/main.c    ****   fr_old = fr_new;
 267:Src/main.c    ****   fr_count = 0;
 268:Src/main.c    ****   /* USER CODE END EXTI1_IRQn 0 */
 269:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 270:Src/main.c    ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 271:Src/main.c    **** 
 272:Src/main.c    ****   /* USER CODE END EXTI1_IRQn 1 */
 273:Src/main.c    **** }
 274:Src/main.c    **** 
 275:Src/main.c    **** /**
 276:Src/main.c    ****   * @brief This function handles EXTI line2 interrupt.
 277:Src/main.c    ****   */
 278:Src/main.c    **** void EXTI2_IRQHandler(void)
 279:Src/main.c    **** {
 280:Src/main.c    ****   /* USER CODE BEGIN EXTI2_IRQn 0 */
 281:Src/main.c    ****   bl_new = __HAL_TIM_GET_COUNTER(&htim2);
 282:Src/main.c    ****   bl_delta = bl_new - bl_old + 40000 * bl_count;
 283:Src/main.c    ****   bl_old = bl_new;
 284:Src/main.c    ****   bl_count = 0;
 285:Src/main.c    ****   /* USER CODE END EXTI2_IRQn 0 */
 286:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 287:Src/main.c    ****   /* USER CODE BEGIN EXTI2_IRQn 1 */
 288:Src/main.c    **** 
 289:Src/main.c    ****   /* USER CODE END EXTI2_IRQn 1 */
 290:Src/main.c    **** }
 291:Src/main.c    **** 
 292:Src/main.c    **** /**
 293:Src/main.c    ****   * @brief This function handles EXTI line3 interrupt.
 294:Src/main.c    ****   */
 295:Src/main.c    **** void EXTI3_IRQHandler(void)
 296:Src/main.c    **** {
 297:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 298:Src/main.c    ****   br_new = __HAL_TIM_GET_COUNTER(&htim2);
 299:Src/main.c    ****   br_delta = br_new - br_old + 40000 * br_count;
 300:Src/main.c    ****   br_old = br_new;
 301:Src/main.c    ****   br_count = 0;
 302:Src/main.c    ****   /* USER CODE END EXTI3_IRQn 0 */
 303:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 304:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 305:Src/main.c    **** 
 306:Src/main.c    ****   /* USER CODE END EXTI3_IRQn 1 */
 307:Src/main.c    **** }
 308:Src/main.c    **** 
 309:Src/main.c    **** /**
 310:Src/main.c    ****   * @brief This function handles TIM2 global interrupt.
 311:Src/main.c    ****   */
 312:Src/main.c    **** void TIM2_IRQHandler(void)
 313:Src/main.c    **** {
 314:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 315:Src/main.c    ****   fl_count++;
 316:Src/main.c    ****   fr_count++;
 317:Src/main.c    ****   bl_count++;
 318:Src/main.c    ****   br_count++;
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 7


 319:Src/main.c    ****   /* USER CODE END TIM2_IRQn 0 */
 320:Src/main.c    ****   HAL_TIM_IRQHandler(&htim2);
 321:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 322:Src/main.c    **** 
 323:Src/main.c    ****   /* USER CODE END TIM2_IRQn 1 */
 324:Src/main.c    **** }
 325:Src/main.c    **** 
 326:Src/main.c    **** /**
 327:Src/main.c    ****   * @brief This function handles TIM3 global interrupt.
 328:Src/main.c    ****   */
 329:Src/main.c    **** void TIM3_IRQHandler(void)
 330:Src/main.c    **** {
 331:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 332:Src/main.c    ****   // calculate I, D, and control value (need to this here because otherwise P would update faster)
 333:Src/main.c    ****   integral += dt * error;
 334:Src/main.c    ****   derivative = (error - prev_error) / dt;
 335:Src/main.c    ****   
 336:Src/main.c    ****   control = bias + kp * error + ki * integral + kd * derivative;
 337:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 338:Src/main.c    ****   HAL_TIM_IRQHandler(&htim3);
 339:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 340:Src/main.c    **** 
 341:Src/main.c    ****   /* USER CODE END TIM3_IRQn 1 */
 342:Src/main.c    **** }
 343:Src/main.c    **** 
 344:Src/main.c    **** /**
 345:Src/main.c    ****   * @brief This function handles SPI1 global interrupt.
 346:Src/main.c    ****   */
 347:Src/main.c    **** void SPI1_IRQHandler(void)
 348:Src/main.c    **** {
 349:Src/main.c    ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 350:Src/main.c    **** 
 351:Src/main.c    ****   /* USER CODE END SPI1_IRQn 0 */
 352:Src/main.c    ****   HAL_SPI_IRQHandler(&hspi1);
 353:Src/main.c    ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 354:Src/main.c    **** 
 355:Src/main.c    ****   /* USER CODE END SPI1_IRQn 1 */
 356:Src/main.c    **** }
 357:Src/main.c    **** 
 358:Src/main.c    **** /**
 359:Src/main.c    ****   * @brief System Clock Configuration
 360:Src/main.c    ****   * @retval None
 361:Src/main.c    ****   */
 362:Src/main.c    **** void SystemClock_Config(void)
 363:Src/main.c    **** {
 364:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 365:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 366:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 367:Src/main.c    **** 
 368:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 369:Src/main.c    ****   */
 370:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 371:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 372:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 373:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 374:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 375:Src/main.c    ****   {
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 8


 376:Src/main.c    ****     Error_Handler();
 377:Src/main.c    ****   }
 378:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 379:Src/main.c    ****   */
 380:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 381:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 382:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 383:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 384:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 385:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 386:Src/main.c    **** 
 387:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 388:Src/main.c    ****   {
 389:Src/main.c    ****     Error_Handler();
 390:Src/main.c    ****   }
 391:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 392:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 393:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 394:Src/main.c    ****   {
 395:Src/main.c    ****     Error_Handler();
 396:Src/main.c    ****   }
 397:Src/main.c    **** }
 398:Src/main.c    **** 
 399:Src/main.c    **** /**
 400:Src/main.c    ****   * @brief ADC1 Initialization Function
 401:Src/main.c    ****   * @param None
 402:Src/main.c    ****   * @retval None
 403:Src/main.c    ****   */
 404:Src/main.c    **** static void MX_ADC1_Init(void)
 405:Src/main.c    **** {
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 408:Src/main.c    **** 
 409:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 410:Src/main.c    **** 
 411:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 412:Src/main.c    **** 
 413:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 414:Src/main.c    **** 
 415:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 416:Src/main.c    ****   /**Common config 
 417:Src/main.c    ****   */
 418:Src/main.c    ****   hadc1.Instance = ADC1;
 419:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 420:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 421:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 422:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 423:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 424:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 425:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 426:Src/main.c    ****   {
 427:Src/main.c    ****     Error_Handler();
 428:Src/main.c    ****   }
 429:Src/main.c    ****   /**Configure Regular Channel 
 430:Src/main.c    ****   */
 431:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 432:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 9


 433:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 434:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 435:Src/main.c    ****   {
 436:Src/main.c    ****     Error_Handler();
 437:Src/main.c    ****   }
 438:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 439:Src/main.c    **** 
 440:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 441:Src/main.c    **** 
 442:Src/main.c    **** }
 443:Src/main.c    **** 
 444:Src/main.c    **** /**
 445:Src/main.c    ****   * @brief I2C1 Initialization Function
 446:Src/main.c    ****   * @param None
 447:Src/main.c    ****   * @retval None
 448:Src/main.c    ****   */
 449:Src/main.c    **** static void MX_I2C1_Init(void)
 450:Src/main.c    **** {
 451:Src/main.c    **** 
 452:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 0 */
 453:Src/main.c    **** 
 454:Src/main.c    ****   /* USER CODE END I2C1_Init 0 */
 455:Src/main.c    **** 
 456:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 1 */
 457:Src/main.c    **** 
 458:Src/main.c    ****   /* USER CODE END I2C1_Init 1 */
 459:Src/main.c    ****   hi2c1.Instance = I2C1;
 460:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 461:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 462:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 463:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 464:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 465:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 466:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 467:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 468:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 469:Src/main.c    ****   {
 470:Src/main.c    ****     Error_Handler();
 471:Src/main.c    ****   }
 472:Src/main.c    ****   /* USER CODE BEGIN I2C1_Init 2 */
 473:Src/main.c    **** 
 474:Src/main.c    ****   /* USER CODE END I2C1_Init 2 */
 475:Src/main.c    **** 
 476:Src/main.c    **** }
 477:Src/main.c    **** 
 478:Src/main.c    **** /**
 479:Src/main.c    ****   * @brief SPI1 Initialization Function
 480:Src/main.c    ****   * @param None
 481:Src/main.c    ****   * @retval None
 482:Src/main.c    ****   */
 483:Src/main.c    **** static void MX_SPI1_Init(void)
 484:Src/main.c    **** {
 485:Src/main.c    **** 
 486:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 487:Src/main.c    **** 
 488:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 489:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 10


 490:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 491:Src/main.c    **** 
 492:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 493:Src/main.c    ****   /* SPI1 parameter configuration*/
 494:Src/main.c    ****   hspi1.Instance = SPI1;
 495:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER; // change to slave later
 496:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 497:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 498:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 499:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 500:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 501:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 502:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 503:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 504:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 505:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 506:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 507:Src/main.c    ****   {
 508:Src/main.c    ****     Error_Handler();
 509:Src/main.c    ****   }
 510:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 511:Src/main.c    **** 
 512:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 513:Src/main.c    **** 
 514:Src/main.c    **** }
 515:Src/main.c    **** 
 516:Src/main.c    **** /**
 517:Src/main.c    ****   * @brief TIM2 Initialization Function
 518:Src/main.c    ****   * @param None
 519:Src/main.c    ****   * @retval None
 520:Src/main.c    ****   */
 521:Src/main.c    **** static void MX_TIM2_Init(void)
 522:Src/main.c    **** {
 523:Src/main.c    **** 
 524:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 525:Src/main.c    **** 
 526:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 527:Src/main.c    **** 
 528:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 529:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 530:Src/main.c    **** 
 531:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 532:Src/main.c    **** 
 533:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 534:Src/main.c    ****   htim2.Instance = TIM2;
 535:Src/main.c    ****   htim2.Init.Prescaler = 200-1;
 536:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 537:Src/main.c    ****   htim2.Init.Period = 40000;
 538:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 539:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 540:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 541:Src/main.c    ****   {
 542:Src/main.c    ****     Error_Handler();
 543:Src/main.c    ****   }
 544:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 545:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 546:Src/main.c    ****   {
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 11


 547:Src/main.c    ****     Error_Handler();
 548:Src/main.c    ****   }
 549:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 550:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 551:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 552:Src/main.c    ****   {
 553:Src/main.c    ****     Error_Handler();
 554:Src/main.c    ****   }
 555:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 556:Src/main.c    ****   //HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 557:Src/main.c    ****   //HAL_NVIC_EnableIRQ(TIM2_IRQn);
 558:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 559:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 560:Src/main.c    **** 
 561:Src/main.c    **** }
 562:Src/main.c    **** 
 563:Src/main.c    **** /**
 564:Src/main.c    ****   * @brief TIM3 Initialization Function
 565:Src/main.c    ****   * @param None
 566:Src/main.c    ****   * @retval None
 567:Src/main.c    ****   */
 568:Src/main.c    **** static void MX_TIM3_Init(void)
 569:Src/main.c    **** {
 570:Src/main.c    **** 
 571:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
 572:Src/main.c    **** 
 573:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
 574:Src/main.c    **** 
 575:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 576:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 577:Src/main.c    **** 
 578:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
 579:Src/main.c    **** 
 580:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
 581:Src/main.c    ****   htim3.Instance = TIM3;
 582:Src/main.c    ****   htim3.Init.Prescaler = 200-1;
 583:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 584:Src/main.c    ****   htim3.Init.Period = 40000 / pid_rate;
 585:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 586:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 587:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 588:Src/main.c    ****   {
 589:Src/main.c    ****     Error_Handler();
 590:Src/main.c    ****   }
 591:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 592:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 593:Src/main.c    ****   {
 594:Src/main.c    ****     Error_Handler();
 595:Src/main.c    ****   }
 596:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 597:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 598:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 599:Src/main.c    ****   {
 600:Src/main.c    ****     Error_Handler();
 601:Src/main.c    ****   }
 602:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
 603:Src/main.c    ****   //HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 12


 604:Src/main.c    ****   //HAL_NVIC_EnableIRQ(TIM3_IRQn);
 605:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 606:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 607:Src/main.c    **** 
 608:Src/main.c    **** }
 609:Src/main.c    **** 
 610:Src/main.c    **** /**
 611:Src/main.c    ****   * @brief USART1 Initialization Function
 612:Src/main.c    ****   * @param None
 613:Src/main.c    ****   * @retval None
 614:Src/main.c    ****   */
 615:Src/main.c    **** static void MX_USART1_UART_Init(void)
 616:Src/main.c    **** {
 617:Src/main.c    **** 
 618:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 619:Src/main.c    **** 
 620:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 621:Src/main.c    **** 
 622:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 623:Src/main.c    **** 
 624:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 625:Src/main.c    ****   huart1.Instance = USART1;
 626:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 627:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 628:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 629:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 630:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 631:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 632:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 633:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 634:Src/main.c    ****   {
 635:Src/main.c    ****     Error_Handler();
 636:Src/main.c    ****   }
 637:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 638:Src/main.c    **** 
 639:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 640:Src/main.c    **** 
 641:Src/main.c    **** }
 642:Src/main.c    **** 
 643:Src/main.c    **** /**
 644:Src/main.c    ****   * @brief GPIO Initialization Function
 645:Src/main.c    ****   * @param None
 646:Src/main.c    ****   * @retval None
 647:Src/main.c    ****   */
 648:Src/main.c    **** static void MX_GPIO_Init(void)
 649:Src/main.c    **** {
  26              		.loc 1 649 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 13


  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 650:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 650 3 view .LVU1
  40              		.loc 1 650 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
 651:Src/main.c    **** 
 652:Src/main.c    ****   /* GPIO Ports Clock Enable */
 653:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 653 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 653 3 view .LVU4
  49              		.loc 1 653 3 view .LVU5
  50 000e 2D4B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F01002 		orr	r2, r2, #16
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 653 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F01002 		and	r2, r2, #16
  57 001e 0192     		str	r2, [sp, #4]
  58              		.loc 1 653 3 view .LVU7
  59 0020 019A     		ldr	r2, [sp, #4]
  60              	.LBE2:
 654:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  61              		.loc 1 654 3 view .LVU8
  62              	.LBB3:
  63              		.loc 1 654 3 view .LVU9
  64              		.loc 1 654 3 view .LVU10
  65 0022 9A69     		ldr	r2, [r3, #24]
  66 0024 42F00402 		orr	r2, r2, #4
  67 0028 9A61     		str	r2, [r3, #24]
  68              		.loc 1 654 3 view .LVU11
  69 002a 9A69     		ldr	r2, [r3, #24]
  70 002c 02F00402 		and	r2, r2, #4
  71 0030 0292     		str	r2, [sp, #8]
  72              		.loc 1 654 3 view .LVU12
  73 0032 029A     		ldr	r2, [sp, #8]
  74              	.LBE3:
 655:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  75              		.loc 1 655 3 view .LVU13
  76              	.LBB4:
  77              		.loc 1 655 3 view .LVU14
  78              		.loc 1 655 3 view .LVU15
  79 0034 9A69     		ldr	r2, [r3, #24]
  80 0036 42F00802 		orr	r2, r2, #8
  81 003a 9A61     		str	r2, [r3, #24]
  82              		.loc 1 655 3 view .LVU16
  83 003c 9B69     		ldr	r3, [r3, #24]
  84 003e 03F00803 		and	r3, r3, #8
  85 0042 0393     		str	r3, [sp, #12]
  86              		.loc 1 655 3 view .LVU17
  87 0044 039B     		ldr	r3, [sp, #12]
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 14


  88              	.LBE4:
 656:Src/main.c    **** 
 657:Src/main.c    ****   /*Configure GPIO pin Output Level */
 658:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  89              		.loc 1 658 3 view .LVU18
  90 0046 204D     		ldr	r5, .L3+4
  91 0048 2246     		mov	r2, r4
  92 004a 4FF40051 		mov	r1, #8192
  93 004e 2846     		mov	r0, r5
  94 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  95              	.LVL0:
 659:Src/main.c    **** 
 660:Src/main.c    ****   /*Configure GPIO pin : PC13 */
 661:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  96              		.loc 1 661 3 view .LVU19
  97              		.loc 1 661 23 is_stmt 0 view .LVU20
  98 0054 4FF40053 		mov	r3, #8192
  99 0058 0493     		str	r3, [sp, #16]
 662:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 100              		.loc 1 662 3 is_stmt 1 view .LVU21
 101              		.loc 1 662 24 is_stmt 0 view .LVU22
 102 005a 0123     		movs	r3, #1
 103 005c 0593     		str	r3, [sp, #20]
 663:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 104              		.loc 1 663 3 is_stmt 1 view .LVU23
 105              		.loc 1 663 24 is_stmt 0 view .LVU24
 106 005e 0694     		str	r4, [sp, #24]
 664:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 107              		.loc 1 664 3 is_stmt 1 view .LVU25
 108              		.loc 1 664 25 is_stmt 0 view .LVU26
 109 0060 0223     		movs	r3, #2
 110 0062 0793     		str	r3, [sp, #28]
 665:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 111              		.loc 1 665 3 is_stmt 1 view .LVU27
 112 0064 04A9     		add	r1, sp, #16
 113 0066 2846     		mov	r0, r5
 114 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 115              	.LVL1:
 666:Src/main.c    **** 
 667:Src/main.c    ****   /*Configure GPIO pins : PA0 PA1 PA2 PA3 */
 668:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 116              		.loc 1 668 3 view .LVU28
 117              		.loc 1 668 23 is_stmt 0 view .LVU29
 118 006c 0F23     		movs	r3, #15
 119 006e 0493     		str	r3, [sp, #16]
 669:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 120              		.loc 1 669 3 is_stmt 1 view .LVU30
 121              		.loc 1 669 24 is_stmt 0 view .LVU31
 122 0070 164B     		ldr	r3, .L3+8
 123 0072 0593     		str	r3, [sp, #20]
 670:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 124              		.loc 1 670 3 is_stmt 1 view .LVU32
 125              		.loc 1 670 24 is_stmt 0 view .LVU33
 126 0074 0694     		str	r4, [sp, #24]
 671:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 127              		.loc 1 671 3 is_stmt 1 view .LVU34
 128 0076 04A9     		add	r1, sp, #16
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 15


 129 0078 1548     		ldr	r0, .L3+12
 130 007a FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL2:
 672:Src/main.c    **** 
 673:Src/main.c    ****   /* EXTI interrupt init*/
 674:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 132              		.loc 1 674 3 view .LVU35
 133 007e 2246     		mov	r2, r4
 134 0080 2146     		mov	r1, r4
 135 0082 0620     		movs	r0, #6
 136 0084 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL3:
 675:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 138              		.loc 1 675 3 view .LVU36
 139 0088 0620     		movs	r0, #6
 140 008a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 141              	.LVL4:
 676:Src/main.c    **** 
 677:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 142              		.loc 1 677 3 view .LVU37
 143 008e 2246     		mov	r2, r4
 144 0090 2146     		mov	r1, r4
 145 0092 0720     		movs	r0, #7
 146 0094 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 147              	.LVL5:
 678:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 148              		.loc 1 678 3 view .LVU38
 149 0098 0720     		movs	r0, #7
 150 009a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 151              	.LVL6:
 679:Src/main.c    **** 
 680:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
 152              		.loc 1 680 3 view .LVU39
 153 009e 2246     		mov	r2, r4
 154 00a0 2146     		mov	r1, r4
 155 00a2 0820     		movs	r0, #8
 156 00a4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 157              	.LVL7:
 681:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 158              		.loc 1 681 3 view .LVU40
 159 00a8 0820     		movs	r0, #8
 160 00aa FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 161              	.LVL8:
 682:Src/main.c    **** 
 683:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI3_IRQn, 0, 0);
 162              		.loc 1 683 3 view .LVU41
 163 00ae 2246     		mov	r2, r4
 164 00b0 2146     		mov	r1, r4
 165 00b2 0920     		movs	r0, #9
 166 00b4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 167              	.LVL9:
 684:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 168              		.loc 1 684 3 view .LVU42
 169 00b8 0920     		movs	r0, #9
 170 00ba FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 171              	.LVL10:
 685:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 16


 686:Src/main.c    **** }
 172              		.loc 1 686 1 is_stmt 0 view .LVU43
 173 00be 09B0     		add	sp, sp, #36
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 12
 176              		@ sp needed
 177 00c0 30BD     		pop	{r4, r5, pc}
 178              	.L4:
 179 00c2 00BF     		.align	2
 180              	.L3:
 181 00c4 00100240 		.word	1073876992
 182 00c8 00100140 		.word	1073811456
 183 00cc 00001110 		.word	269549568
 184 00d0 00080140 		.word	1073809408
 185              		.cfi_endproc
 186              	.LFE81:
 188              		.section	.text.MX_I2C1_Init,"ax",%progbits
 189              		.align	1
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu softvfp
 195              	MX_I2C1_Init:
 196              	.LFB76:
 450:Src/main.c    **** 
 197              		.loc 1 450 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 08B5     		push	{r3, lr}
 202              	.LCFI3:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 3, -8
 205              		.cfi_offset 14, -4
 459:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 206              		.loc 1 459 3 view .LVU45
 459:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 207              		.loc 1 459 18 is_stmt 0 view .LVU46
 208 0002 0948     		ldr	r0, .L7
 209 0004 094B     		ldr	r3, .L7+4
 210 0006 0360     		str	r3, [r0]
 460:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 211              		.loc 1 460 3 is_stmt 1 view .LVU47
 460:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 212              		.loc 1 460 25 is_stmt 0 view .LVU48
 213 0008 094B     		ldr	r3, .L7+8
 214 000a 4360     		str	r3, [r0, #4]
 461:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 215              		.loc 1 461 3 is_stmt 1 view .LVU49
 461:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 216              		.loc 1 461 24 is_stmt 0 view .LVU50
 217 000c 0023     		movs	r3, #0
 218 000e 8360     		str	r3, [r0, #8]
 462:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 219              		.loc 1 462 3 is_stmt 1 view .LVU51
 462:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 220              		.loc 1 462 26 is_stmt 0 view .LVU52
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 17


 221 0010 C360     		str	r3, [r0, #12]
 463:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 222              		.loc 1 463 3 is_stmt 1 view .LVU53
 463:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 223              		.loc 1 463 29 is_stmt 0 view .LVU54
 224 0012 4FF48042 		mov	r2, #16384
 225 0016 0261     		str	r2, [r0, #16]
 464:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 226              		.loc 1 464 3 is_stmt 1 view .LVU55
 464:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 227              		.loc 1 464 30 is_stmt 0 view .LVU56
 228 0018 4361     		str	r3, [r0, #20]
 465:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 229              		.loc 1 465 3 is_stmt 1 view .LVU57
 465:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 230              		.loc 1 465 26 is_stmt 0 view .LVU58
 231 001a 8361     		str	r3, [r0, #24]
 466:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 232              		.loc 1 466 3 is_stmt 1 view .LVU59
 466:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 233              		.loc 1 466 30 is_stmt 0 view .LVU60
 234 001c C361     		str	r3, [r0, #28]
 467:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 235              		.loc 1 467 3 is_stmt 1 view .LVU61
 467:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 236              		.loc 1 467 28 is_stmt 0 view .LVU62
 237 001e 0362     		str	r3, [r0, #32]
 468:Src/main.c    ****   {
 238              		.loc 1 468 3 is_stmt 1 view .LVU63
 468:Src/main.c    ****   {
 239              		.loc 1 468 7 is_stmt 0 view .LVU64
 240 0020 FFF7FEFF 		bl	HAL_I2C_Init
 241              	.LVL11:
 476:Src/main.c    **** 
 242              		.loc 1 476 1 view .LVU65
 243 0024 08BD     		pop	{r3, pc}
 244              	.L8:
 245 0026 00BF     		.align	2
 246              	.L7:
 247 0028 00000000 		.word	hi2c1
 248 002c 00540040 		.word	1073763328
 249 0030 A0860100 		.word	100000
 250              		.cfi_endproc
 251              	.LFE76:
 253              		.section	.text.MX_SPI1_Init,"ax",%progbits
 254              		.align	1
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu softvfp
 260              	MX_SPI1_Init:
 261              	.LFB77:
 484:Src/main.c    **** 
 262              		.loc 1 484 1 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 18


 266 0000 08B5     		push	{r3, lr}
 267              	.LCFI4:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 3, -8
 270              		.cfi_offset 14, -4
 494:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER; // change to slave later
 271              		.loc 1 494 3 view .LVU67
 494:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER; // change to slave later
 272              		.loc 1 494 18 is_stmt 0 view .LVU68
 273 0002 0B48     		ldr	r0, .L11
 274 0004 0B4B     		ldr	r3, .L11+4
 275 0006 0360     		str	r3, [r0]
 495:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 276              		.loc 1 495 3 is_stmt 1 view .LVU69
 495:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 277              		.loc 1 495 19 is_stmt 0 view .LVU70
 278 0008 4FF48273 		mov	r3, #260
 279 000c 4360     		str	r3, [r0, #4]
 496:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 280              		.loc 1 496 3 is_stmt 1 view .LVU71
 496:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 281              		.loc 1 496 24 is_stmt 0 view .LVU72
 282 000e 0023     		movs	r3, #0
 283 0010 8360     		str	r3, [r0, #8]
 497:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 284              		.loc 1 497 3 is_stmt 1 view .LVU73
 497:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 285              		.loc 1 497 23 is_stmt 0 view .LVU74
 286 0012 C360     		str	r3, [r0, #12]
 498:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 287              		.loc 1 498 3 is_stmt 1 view .LVU75
 498:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 288              		.loc 1 498 26 is_stmt 0 view .LVU76
 289 0014 0361     		str	r3, [r0, #16]
 499:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 290              		.loc 1 499 3 is_stmt 1 view .LVU77
 499:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 291              		.loc 1 499 23 is_stmt 0 view .LVU78
 292 0016 4361     		str	r3, [r0, #20]
 500:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 293              		.loc 1 500 3 is_stmt 1 view .LVU79
 500:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 294              		.loc 1 500 18 is_stmt 0 view .LVU80
 295 0018 4FF48022 		mov	r2, #262144
 296 001c 8261     		str	r2, [r0, #24]
 501:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 297              		.loc 1 501 3 is_stmt 1 view .LVU81
 501:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 298              		.loc 1 501 32 is_stmt 0 view .LVU82
 299 001e C361     		str	r3, [r0, #28]
 502:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 300              		.loc 1 502 3 is_stmt 1 view .LVU83
 502:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 301              		.loc 1 502 23 is_stmt 0 view .LVU84
 302 0020 0362     		str	r3, [r0, #32]
 503:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 303              		.loc 1 503 3 is_stmt 1 view .LVU85
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 19


 503:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 304              		.loc 1 503 21 is_stmt 0 view .LVU86
 305 0022 4362     		str	r3, [r0, #36]
 504:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 306              		.loc 1 504 3 is_stmt 1 view .LVU87
 504:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 307              		.loc 1 504 29 is_stmt 0 view .LVU88
 308 0024 8362     		str	r3, [r0, #40]
 505:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 309              		.loc 1 505 3 is_stmt 1 view .LVU89
 505:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 310              		.loc 1 505 28 is_stmt 0 view .LVU90
 311 0026 0A23     		movs	r3, #10
 312 0028 C362     		str	r3, [r0, #44]
 506:Src/main.c    ****   {
 313              		.loc 1 506 3 is_stmt 1 view .LVU91
 506:Src/main.c    ****   {
 314              		.loc 1 506 7 is_stmt 0 view .LVU92
 315 002a FFF7FEFF 		bl	HAL_SPI_Init
 316              	.LVL12:
 514:Src/main.c    **** 
 317              		.loc 1 514 1 view .LVU93
 318 002e 08BD     		pop	{r3, pc}
 319              	.L12:
 320              		.align	2
 321              	.L11:
 322 0030 00000000 		.word	hspi1
 323 0034 00300140 		.word	1073819648
 324              		.cfi_endproc
 325              	.LFE77:
 327              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 328              		.align	1
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu softvfp
 334              	MX_USART1_UART_Init:
 335              	.LFB80:
 616:Src/main.c    **** 
 336              		.loc 1 616 1 is_stmt 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340 0000 08B5     		push	{r3, lr}
 341              	.LCFI5:
 342              		.cfi_def_cfa_offset 8
 343              		.cfi_offset 3, -8
 344              		.cfi_offset 14, -4
 625:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 345              		.loc 1 625 3 view .LVU95
 625:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 346              		.loc 1 625 19 is_stmt 0 view .LVU96
 347 0002 0848     		ldr	r0, .L15
 348 0004 084B     		ldr	r3, .L15+4
 349 0006 0360     		str	r3, [r0]
 626:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 350              		.loc 1 626 3 is_stmt 1 view .LVU97
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 20


 626:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 351              		.loc 1 626 24 is_stmt 0 view .LVU98
 352 0008 4FF4E133 		mov	r3, #115200
 353 000c 4360     		str	r3, [r0, #4]
 627:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 354              		.loc 1 627 3 is_stmt 1 view .LVU99
 627:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 355              		.loc 1 627 26 is_stmt 0 view .LVU100
 356 000e 0023     		movs	r3, #0
 357 0010 8360     		str	r3, [r0, #8]
 628:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 358              		.loc 1 628 3 is_stmt 1 view .LVU101
 628:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 359              		.loc 1 628 24 is_stmt 0 view .LVU102
 360 0012 C360     		str	r3, [r0, #12]
 629:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 361              		.loc 1 629 3 is_stmt 1 view .LVU103
 629:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 362              		.loc 1 629 22 is_stmt 0 view .LVU104
 363 0014 0361     		str	r3, [r0, #16]
 630:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 364              		.loc 1 630 3 is_stmt 1 view .LVU105
 630:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 365              		.loc 1 630 20 is_stmt 0 view .LVU106
 366 0016 0C22     		movs	r2, #12
 367 0018 4261     		str	r2, [r0, #20]
 631:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 368              		.loc 1 631 3 is_stmt 1 view .LVU107
 631:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 369              		.loc 1 631 25 is_stmt 0 view .LVU108
 370 001a 8361     		str	r3, [r0, #24]
 632:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 371              		.loc 1 632 3 is_stmt 1 view .LVU109
 632:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 372              		.loc 1 632 28 is_stmt 0 view .LVU110
 373 001c C361     		str	r3, [r0, #28]
 633:Src/main.c    ****   {
 374              		.loc 1 633 3 is_stmt 1 view .LVU111
 633:Src/main.c    ****   {
 375              		.loc 1 633 7 is_stmt 0 view .LVU112
 376 001e FFF7FEFF 		bl	HAL_UART_Init
 377              	.LVL13:
 641:Src/main.c    **** 
 378              		.loc 1 641 1 view .LVU113
 379 0022 08BD     		pop	{r3, pc}
 380              	.L16:
 381              		.align	2
 382              	.L15:
 383 0024 00000000 		.word	huart1
 384 0028 00380140 		.word	1073821696
 385              		.cfi_endproc
 386              	.LFE80:
 388              		.section	.text.MX_TIM2_Init,"ax",%progbits
 389              		.align	1
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 21


 393              		.fpu softvfp
 395              	MX_TIM2_Init:
 396              	.LFB78:
 522:Src/main.c    **** 
 397              		.loc 1 522 1 is_stmt 1 view -0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 24
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401 0000 30B5     		push	{r4, r5, lr}
 402              	.LCFI6:
 403              		.cfi_def_cfa_offset 12
 404              		.cfi_offset 4, -12
 405              		.cfi_offset 5, -8
 406              		.cfi_offset 14, -4
 407 0002 87B0     		sub	sp, sp, #28
 408              	.LCFI7:
 409              		.cfi_def_cfa_offset 40
 528:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 410              		.loc 1 528 3 view .LVU115
 528:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 411              		.loc 1 528 26 is_stmt 0 view .LVU116
 412 0004 0024     		movs	r4, #0
 413 0006 0294     		str	r4, [sp, #8]
 414 0008 0394     		str	r4, [sp, #12]
 415 000a 0494     		str	r4, [sp, #16]
 416 000c 0594     		str	r4, [sp, #20]
 529:Src/main.c    **** 
 417              		.loc 1 529 3 is_stmt 1 view .LVU117
 529:Src/main.c    **** 
 418              		.loc 1 529 27 is_stmt 0 view .LVU118
 419 000e 0094     		str	r4, [sp]
 420 0010 0194     		str	r4, [sp, #4]
 534:Src/main.c    ****   htim2.Init.Prescaler = 200-1;
 421              		.loc 1 534 3 is_stmt 1 view .LVU119
 534:Src/main.c    ****   htim2.Init.Prescaler = 200-1;
 422              		.loc 1 534 18 is_stmt 0 view .LVU120
 423 0012 104D     		ldr	r5, .L19
 424 0014 4FF08043 		mov	r3, #1073741824
 425 0018 2B60     		str	r3, [r5]
 535:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 426              		.loc 1 535 3 is_stmt 1 view .LVU121
 535:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 427              		.loc 1 535 24 is_stmt 0 view .LVU122
 428 001a C723     		movs	r3, #199
 429 001c 6B60     		str	r3, [r5, #4]
 536:Src/main.c    ****   htim2.Init.Period = 40000;
 430              		.loc 1 536 3 is_stmt 1 view .LVU123
 536:Src/main.c    ****   htim2.Init.Period = 40000;
 431              		.loc 1 536 26 is_stmt 0 view .LVU124
 432 001e AC60     		str	r4, [r5, #8]
 537:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 433              		.loc 1 537 3 is_stmt 1 view .LVU125
 537:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 434              		.loc 1 537 21 is_stmt 0 view .LVU126
 435 0020 49F64043 		movw	r3, #40000
 436 0024 EB60     		str	r3, [r5, #12]
 538:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 22


 437              		.loc 1 538 3 is_stmt 1 view .LVU127
 538:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 438              		.loc 1 538 28 is_stmt 0 view .LVU128
 439 0026 2C61     		str	r4, [r5, #16]
 539:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 440              		.loc 1 539 3 is_stmt 1 view .LVU129
 539:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 441              		.loc 1 539 32 is_stmt 0 view .LVU130
 442 0028 AC61     		str	r4, [r5, #24]
 540:Src/main.c    ****   {
 443              		.loc 1 540 3 is_stmt 1 view .LVU131
 540:Src/main.c    ****   {
 444              		.loc 1 540 7 is_stmt 0 view .LVU132
 445 002a 2846     		mov	r0, r5
 446 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 447              	.LVL14:
 544:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 448              		.loc 1 544 3 is_stmt 1 view .LVU133
 544:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 449              		.loc 1 544 34 is_stmt 0 view .LVU134
 450 0030 4FF48053 		mov	r3, #4096
 451 0034 0293     		str	r3, [sp, #8]
 545:Src/main.c    ****   {
 452              		.loc 1 545 3 is_stmt 1 view .LVU135
 545:Src/main.c    ****   {
 453              		.loc 1 545 7 is_stmt 0 view .LVU136
 454 0036 02A9     		add	r1, sp, #8
 455 0038 2846     		mov	r0, r5
 456 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 457              	.LVL15:
 549:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 458              		.loc 1 549 3 is_stmt 1 view .LVU137
 549:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 459              		.loc 1 549 37 is_stmt 0 view .LVU138
 460 003e 0094     		str	r4, [sp]
 550:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 461              		.loc 1 550 3 is_stmt 1 view .LVU139
 550:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 462              		.loc 1 550 33 is_stmt 0 view .LVU140
 463 0040 0194     		str	r4, [sp, #4]
 551:Src/main.c    ****   {
 464              		.loc 1 551 3 is_stmt 1 view .LVU141
 551:Src/main.c    ****   {
 465              		.loc 1 551 7 is_stmt 0 view .LVU142
 466 0042 6946     		mov	r1, sp
 467 0044 2846     		mov	r0, r5
 468 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 469              	.LVL16:
 558:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 470              		.loc 1 558 3 is_stmt 1 view .LVU143
 471 004a 2846     		mov	r0, r5
 472 004c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 473              	.LVL17:
 561:Src/main.c    **** 
 474              		.loc 1 561 1 is_stmt 0 view .LVU144
 475 0050 07B0     		add	sp, sp, #28
 476              	.LCFI8:
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 23


 477              		.cfi_def_cfa_offset 12
 478              		@ sp needed
 479 0052 30BD     		pop	{r4, r5, pc}
 480              	.L20:
 481              		.align	2
 482              	.L19:
 483 0054 00000000 		.word	htim2
 484              		.cfi_endproc
 485              	.LFE78:
 487              		.section	.text.MX_TIM3_Init,"ax",%progbits
 488              		.align	1
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu softvfp
 494              	MX_TIM3_Init:
 495              	.LFB79:
 569:Src/main.c    **** 
 496              		.loc 1 569 1 is_stmt 1 view -0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 24
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500 0000 30B5     		push	{r4, r5, lr}
 501              	.LCFI9:
 502              		.cfi_def_cfa_offset 12
 503              		.cfi_offset 4, -12
 504              		.cfi_offset 5, -8
 505              		.cfi_offset 14, -4
 506 0002 87B0     		sub	sp, sp, #28
 507              	.LCFI10:
 508              		.cfi_def_cfa_offset 40
 575:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 509              		.loc 1 575 3 view .LVU146
 575:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 510              		.loc 1 575 26 is_stmt 0 view .LVU147
 511 0004 0024     		movs	r4, #0
 512 0006 0294     		str	r4, [sp, #8]
 513 0008 0394     		str	r4, [sp, #12]
 514 000a 0494     		str	r4, [sp, #16]
 515 000c 0594     		str	r4, [sp, #20]
 576:Src/main.c    **** 
 516              		.loc 1 576 3 is_stmt 1 view .LVU148
 576:Src/main.c    **** 
 517              		.loc 1 576 27 is_stmt 0 view .LVU149
 518 000e 0094     		str	r4, [sp]
 519 0010 0194     		str	r4, [sp, #4]
 581:Src/main.c    ****   htim3.Init.Prescaler = 200-1;
 520              		.loc 1 581 3 is_stmt 1 view .LVU150
 581:Src/main.c    ****   htim3.Init.Prescaler = 200-1;
 521              		.loc 1 581 18 is_stmt 0 view .LVU151
 522 0012 124D     		ldr	r5, .L23
 523 0014 124B     		ldr	r3, .L23+4
 524 0016 2B60     		str	r3, [r5]
 582:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 525              		.loc 1 582 3 is_stmt 1 view .LVU152
 582:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 526              		.loc 1 582 24 is_stmt 0 view .LVU153
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 24


 527 0018 C723     		movs	r3, #199
 528 001a 6B60     		str	r3, [r5, #4]
 583:Src/main.c    ****   htim3.Init.Period = 40000 / pid_rate;
 529              		.loc 1 583 3 is_stmt 1 view .LVU154
 583:Src/main.c    ****   htim3.Init.Period = 40000 / pid_rate;
 530              		.loc 1 583 26 is_stmt 0 view .LVU155
 531 001c AC60     		str	r4, [r5, #8]
 584:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 532              		.loc 1 584 3 is_stmt 1 view .LVU156
 584:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 533              		.loc 1 584 29 is_stmt 0 view .LVU157
 534 001e 114B     		ldr	r3, .L23+8
 535 0020 1A68     		ldr	r2, [r3]
 536 0022 49F64043 		movw	r3, #40000
 537 0026 93FBF2F3 		sdiv	r3, r3, r2
 584:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 538              		.loc 1 584 21 view .LVU158
 539 002a EB60     		str	r3, [r5, #12]
 585:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 540              		.loc 1 585 3 is_stmt 1 view .LVU159
 585:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 541              		.loc 1 585 28 is_stmt 0 view .LVU160
 542 002c 2C61     		str	r4, [r5, #16]
 586:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 543              		.loc 1 586 3 is_stmt 1 view .LVU161
 586:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 544              		.loc 1 586 32 is_stmt 0 view .LVU162
 545 002e AC61     		str	r4, [r5, #24]
 587:Src/main.c    ****   {
 546              		.loc 1 587 3 is_stmt 1 view .LVU163
 587:Src/main.c    ****   {
 547              		.loc 1 587 7 is_stmt 0 view .LVU164
 548 0030 2846     		mov	r0, r5
 549 0032 FFF7FEFF 		bl	HAL_TIM_Base_Init
 550              	.LVL18:
 591:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 551              		.loc 1 591 3 is_stmt 1 view .LVU165
 591:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 552              		.loc 1 591 34 is_stmt 0 view .LVU166
 553 0036 4FF48053 		mov	r3, #4096
 554 003a 0293     		str	r3, [sp, #8]
 592:Src/main.c    ****   {
 555              		.loc 1 592 3 is_stmt 1 view .LVU167
 592:Src/main.c    ****   {
 556              		.loc 1 592 7 is_stmt 0 view .LVU168
 557 003c 02A9     		add	r1, sp, #8
 558 003e 2846     		mov	r0, r5
 559 0040 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 560              	.LVL19:
 596:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 561              		.loc 1 596 3 is_stmt 1 view .LVU169
 596:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 562              		.loc 1 596 37 is_stmt 0 view .LVU170
 563 0044 0094     		str	r4, [sp]
 597:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 564              		.loc 1 597 3 is_stmt 1 view .LVU171
 597:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 25


 565              		.loc 1 597 33 is_stmt 0 view .LVU172
 566 0046 0194     		str	r4, [sp, #4]
 598:Src/main.c    ****   {
 567              		.loc 1 598 3 is_stmt 1 view .LVU173
 598:Src/main.c    ****   {
 568              		.loc 1 598 7 is_stmt 0 view .LVU174
 569 0048 6946     		mov	r1, sp
 570 004a 2846     		mov	r0, r5
 571 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 572              	.LVL20:
 605:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 573              		.loc 1 605 3 is_stmt 1 view .LVU175
 574 0050 2846     		mov	r0, r5
 575 0052 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 576              	.LVL21:
 608:Src/main.c    **** 
 577              		.loc 1 608 1 is_stmt 0 view .LVU176
 578 0056 07B0     		add	sp, sp, #28
 579              	.LCFI11:
 580              		.cfi_def_cfa_offset 12
 581              		@ sp needed
 582 0058 30BD     		pop	{r4, r5, pc}
 583              	.L24:
 584 005a 00BF     		.align	2
 585              	.L23:
 586 005c 00000000 		.word	htim3
 587 0060 00040040 		.word	1073742848
 588 0064 00000000 		.word	.LANCHOR0
 589              		.cfi_endproc
 590              	.LFE79:
 592              		.section	.text.MX_ADC1_Init,"ax",%progbits
 593              		.align	1
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 597              		.fpu softvfp
 599              	MX_ADC1_Init:
 600              	.LFB75:
 405:Src/main.c    **** 
 601              		.loc 1 405 1 is_stmt 1 view -0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 16
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605 0000 70B5     		push	{r4, r5, r6, lr}
 606              	.LCFI12:
 607              		.cfi_def_cfa_offset 16
 608              		.cfi_offset 4, -16
 609              		.cfi_offset 5, -12
 610              		.cfi_offset 6, -8
 611              		.cfi_offset 14, -4
 612 0002 84B0     		sub	sp, sp, #16
 613              	.LCFI13:
 614              		.cfi_def_cfa_offset 32
 411:Src/main.c    **** 
 615              		.loc 1 411 3 view .LVU178
 411:Src/main.c    **** 
 616              		.loc 1 411 26 is_stmt 0 view .LVU179
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 26


 617 0004 0025     		movs	r5, #0
 618 0006 0195     		str	r5, [sp, #4]
 619 0008 0295     		str	r5, [sp, #8]
 620 000a 0395     		str	r5, [sp, #12]
 418:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 621              		.loc 1 418 3 is_stmt 1 view .LVU180
 418:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 622              		.loc 1 418 18 is_stmt 0 view .LVU181
 623 000c 0C4C     		ldr	r4, .L27
 624 000e 0D4B     		ldr	r3, .L27+4
 625 0010 2360     		str	r3, [r4]
 419:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 626              		.loc 1 419 3 is_stmt 1 view .LVU182
 419:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 627              		.loc 1 419 27 is_stmt 0 view .LVU183
 628 0012 A560     		str	r5, [r4, #8]
 420:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 629              		.loc 1 420 3 is_stmt 1 view .LVU184
 420:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 630              		.loc 1 420 33 is_stmt 0 view .LVU185
 631 0014 E560     		str	r5, [r4, #12]
 421:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 632              		.loc 1 421 3 is_stmt 1 view .LVU186
 421:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 633              		.loc 1 421 36 is_stmt 0 view .LVU187
 634 0016 6561     		str	r5, [r4, #20]
 422:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 635              		.loc 1 422 3 is_stmt 1 view .LVU188
 422:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 636              		.loc 1 422 31 is_stmt 0 view .LVU189
 637 0018 4FF46023 		mov	r3, #917504
 638 001c E361     		str	r3, [r4, #28]
 423:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 639              		.loc 1 423 3 is_stmt 1 view .LVU190
 423:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 640              		.loc 1 423 24 is_stmt 0 view .LVU191
 641 001e 6560     		str	r5, [r4, #4]
 424:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 642              		.loc 1 424 3 is_stmt 1 view .LVU192
 424:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 643              		.loc 1 424 30 is_stmt 0 view .LVU193
 644 0020 0126     		movs	r6, #1
 645 0022 2661     		str	r6, [r4, #16]
 425:Src/main.c    ****   {
 646              		.loc 1 425 3 is_stmt 1 view .LVU194
 425:Src/main.c    ****   {
 647              		.loc 1 425 7 is_stmt 0 view .LVU195
 648 0024 2046     		mov	r0, r4
 649 0026 FFF7FEFF 		bl	HAL_ADC_Init
 650              	.LVL22:
 431:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 651              		.loc 1 431 3 is_stmt 1 view .LVU196
 431:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 652              		.loc 1 431 19 is_stmt 0 view .LVU197
 653 002a 0823     		movs	r3, #8
 654 002c 0193     		str	r3, [sp, #4]
 432:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 27


 655              		.loc 1 432 3 is_stmt 1 view .LVU198
 432:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 656              		.loc 1 432 16 is_stmt 0 view .LVU199
 657 002e 0296     		str	r6, [sp, #8]
 433:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 658              		.loc 1 433 3 is_stmt 1 view .LVU200
 433:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 659              		.loc 1 433 24 is_stmt 0 view .LVU201
 660 0030 0395     		str	r5, [sp, #12]
 434:Src/main.c    ****   {
 661              		.loc 1 434 3 is_stmt 1 view .LVU202
 434:Src/main.c    ****   {
 662              		.loc 1 434 7 is_stmt 0 view .LVU203
 663 0032 01A9     		add	r1, sp, #4
 664 0034 2046     		mov	r0, r4
 665 0036 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 666              	.LVL23:
 442:Src/main.c    **** 
 667              		.loc 1 442 1 view .LVU204
 668 003a 04B0     		add	sp, sp, #16
 669              	.LCFI14:
 670              		.cfi_def_cfa_offset 16
 671              		@ sp needed
 672 003c 70BD     		pop	{r4, r5, r6, pc}
 673              	.L28:
 674 003e 00BF     		.align	2
 675              	.L27:
 676 0040 00000000 		.word	hadc1
 677 0044 00240140 		.word	1073816576
 678              		.cfi_endproc
 679              	.LFE75:
 681              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 682              		.align	1
 683              		.global	EXTI0_IRQHandler
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 687              		.fpu softvfp
 689              	EXTI0_IRQHandler:
 690              	.LFB67:
 245:Src/main.c    ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 691              		.loc 1 245 1 is_stmt 1 view -0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695 0000 38B5     		push	{r3, r4, r5, lr}
 696              	.LCFI15:
 697              		.cfi_def_cfa_offset 16
 698              		.cfi_offset 3, -16
 699              		.cfi_offset 4, -12
 700              		.cfi_offset 5, -8
 701              		.cfi_offset 14, -4
 247:Src/main.c    ****   fl_delta = fl_new - fl_old + 40000 * fl_count;
 702              		.loc 1 247 3 view .LVU206
 247:Src/main.c    ****   fl_delta = fl_new - fl_old + 40000 * fl_count;
 703              		.loc 1 247 12 is_stmt 0 view .LVU207
 704 0002 0B4B     		ldr	r3, .L31
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 28


 705 0004 1B68     		ldr	r3, [r3]
 706 0006 5B6A     		ldr	r3, [r3, #36]
 247:Src/main.c    ****   fl_delta = fl_new - fl_old + 40000 * fl_count;
 707              		.loc 1 247 10 view .LVU208
 708 0008 0A4A     		ldr	r2, .L31+4
 709 000a 1360     		str	r3, [r2]
 248:Src/main.c    ****   fl_old = fl_new;
 710              		.loc 1 248 3 is_stmt 1 view .LVU209
 248:Src/main.c    ****   fl_old = fl_new;
 711              		.loc 1 248 21 is_stmt 0 view .LVU210
 712 000c 0A4C     		ldr	r4, .L31+8
 713 000e 2268     		ldr	r2, [r4]
 714 0010 991A     		subs	r1, r3, r2
 248:Src/main.c    ****   fl_old = fl_new;
 715              		.loc 1 248 38 view .LVU211
 716 0012 0A48     		ldr	r0, .L31+12
 717 0014 0268     		ldr	r2, [r0]
 248:Src/main.c    ****   fl_old = fl_new;
 718              		.loc 1 248 30 view .LVU212
 719 0016 49F64045 		movw	r5, #40000
 720 001a 05FB0212 		mla	r2, r5, r2, r1
 248:Src/main.c    ****   fl_old = fl_new;
 721              		.loc 1 248 12 view .LVU213
 722 001e 0849     		ldr	r1, .L31+16
 723 0020 0A60     		str	r2, [r1]
 249:Src/main.c    ****   fl_count = 0;
 724              		.loc 1 249 3 is_stmt 1 view .LVU214
 249:Src/main.c    ****   fl_count = 0;
 725              		.loc 1 249 10 is_stmt 0 view .LVU215
 726 0022 2360     		str	r3, [r4]
 250:Src/main.c    ****   /* USER CODE END EXTI0_IRQn 0 */
 727              		.loc 1 250 3 is_stmt 1 view .LVU216
 250:Src/main.c    ****   /* USER CODE END EXTI0_IRQn 0 */
 728              		.loc 1 250 12 is_stmt 0 view .LVU217
 729 0024 0023     		movs	r3, #0
 730 0026 0360     		str	r3, [r0]
 252:Src/main.c    ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 731              		.loc 1 252 3 is_stmt 1 view .LVU218
 732 0028 0120     		movs	r0, #1
 733 002a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 734              	.LVL24:
 256:Src/main.c    **** 
 735              		.loc 1 256 1 is_stmt 0 view .LVU219
 736 002e 38BD     		pop	{r3, r4, r5, pc}
 737              	.L32:
 738              		.align	2
 739              	.L31:
 740 0030 00000000 		.word	htim2
 741 0034 00000000 		.word	.LANCHOR1
 742 0038 00000000 		.word	.LANCHOR2
 743 003c 00000000 		.word	.LANCHOR3
 744 0040 00000000 		.word	.LANCHOR4
 745              		.cfi_endproc
 746              	.LFE67:
 748              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 749              		.align	1
 750              		.global	EXTI1_IRQHandler
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 29


 751              		.syntax unified
 752              		.thumb
 753              		.thumb_func
 754              		.fpu softvfp
 756              	EXTI1_IRQHandler:
 757              	.LFB68:
 262:Src/main.c    ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 758              		.loc 1 262 1 is_stmt 1 view -0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762 0000 38B5     		push	{r3, r4, r5, lr}
 763              	.LCFI16:
 764              		.cfi_def_cfa_offset 16
 765              		.cfi_offset 3, -16
 766              		.cfi_offset 4, -12
 767              		.cfi_offset 5, -8
 768              		.cfi_offset 14, -4
 264:Src/main.c    ****   fr_delta = fr_new - fr_old + 40000 * fr_count;
 769              		.loc 1 264 3 view .LVU221
 264:Src/main.c    ****   fr_delta = fr_new - fr_old + 40000 * fr_count;
 770              		.loc 1 264 12 is_stmt 0 view .LVU222
 771 0002 0B4B     		ldr	r3, .L35
 772 0004 1B68     		ldr	r3, [r3]
 773 0006 5B6A     		ldr	r3, [r3, #36]
 264:Src/main.c    ****   fr_delta = fr_new - fr_old + 40000 * fr_count;
 774              		.loc 1 264 10 view .LVU223
 775 0008 0A4A     		ldr	r2, .L35+4
 776 000a 1360     		str	r3, [r2]
 265:Src/main.c    ****   fr_old = fr_new;
 777              		.loc 1 265 3 is_stmt 1 view .LVU224
 265:Src/main.c    ****   fr_old = fr_new;
 778              		.loc 1 265 21 is_stmt 0 view .LVU225
 779 000c 0A4C     		ldr	r4, .L35+8
 780 000e 2268     		ldr	r2, [r4]
 781 0010 991A     		subs	r1, r3, r2
 265:Src/main.c    ****   fr_old = fr_new;
 782              		.loc 1 265 38 view .LVU226
 783 0012 0A48     		ldr	r0, .L35+12
 784 0014 0268     		ldr	r2, [r0]
 265:Src/main.c    ****   fr_old = fr_new;
 785              		.loc 1 265 30 view .LVU227
 786 0016 49F64045 		movw	r5, #40000
 787 001a 05FB0212 		mla	r2, r5, r2, r1
 265:Src/main.c    ****   fr_old = fr_new;
 788              		.loc 1 265 12 view .LVU228
 789 001e 0849     		ldr	r1, .L35+16
 790 0020 0A60     		str	r2, [r1]
 266:Src/main.c    ****   fr_count = 0;
 791              		.loc 1 266 3 is_stmt 1 view .LVU229
 266:Src/main.c    ****   fr_count = 0;
 792              		.loc 1 266 10 is_stmt 0 view .LVU230
 793 0022 2360     		str	r3, [r4]
 267:Src/main.c    ****   /* USER CODE END EXTI1_IRQn 0 */
 794              		.loc 1 267 3 is_stmt 1 view .LVU231
 267:Src/main.c    ****   /* USER CODE END EXTI1_IRQn 0 */
 795              		.loc 1 267 12 is_stmt 0 view .LVU232
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 30


 796 0024 0023     		movs	r3, #0
 797 0026 0360     		str	r3, [r0]
 269:Src/main.c    ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 798              		.loc 1 269 3 is_stmt 1 view .LVU233
 799 0028 0220     		movs	r0, #2
 800 002a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 801              	.LVL25:
 273:Src/main.c    **** 
 802              		.loc 1 273 1 is_stmt 0 view .LVU234
 803 002e 38BD     		pop	{r3, r4, r5, pc}
 804              	.L36:
 805              		.align	2
 806              	.L35:
 807 0030 00000000 		.word	htim2
 808 0034 00000000 		.word	.LANCHOR5
 809 0038 00000000 		.word	.LANCHOR6
 810 003c 00000000 		.word	.LANCHOR7
 811 0040 00000000 		.word	.LANCHOR8
 812              		.cfi_endproc
 813              	.LFE68:
 815              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 816              		.align	1
 817              		.global	EXTI2_IRQHandler
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 821              		.fpu softvfp
 823              	EXTI2_IRQHandler:
 824              	.LFB69:
 279:Src/main.c    ****   /* USER CODE BEGIN EXTI2_IRQn 0 */
 825              		.loc 1 279 1 is_stmt 1 view -0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829 0000 38B5     		push	{r3, r4, r5, lr}
 830              	.LCFI17:
 831              		.cfi_def_cfa_offset 16
 832              		.cfi_offset 3, -16
 833              		.cfi_offset 4, -12
 834              		.cfi_offset 5, -8
 835              		.cfi_offset 14, -4
 281:Src/main.c    ****   bl_delta = bl_new - bl_old + 40000 * bl_count;
 836              		.loc 1 281 3 view .LVU236
 281:Src/main.c    ****   bl_delta = bl_new - bl_old + 40000 * bl_count;
 837              		.loc 1 281 12 is_stmt 0 view .LVU237
 838 0002 0B4B     		ldr	r3, .L39
 839 0004 1B68     		ldr	r3, [r3]
 840 0006 5B6A     		ldr	r3, [r3, #36]
 281:Src/main.c    ****   bl_delta = bl_new - bl_old + 40000 * bl_count;
 841              		.loc 1 281 10 view .LVU238
 842 0008 0A4A     		ldr	r2, .L39+4
 843 000a 1360     		str	r3, [r2]
 282:Src/main.c    ****   bl_old = bl_new;
 844              		.loc 1 282 3 is_stmt 1 view .LVU239
 282:Src/main.c    ****   bl_old = bl_new;
 845              		.loc 1 282 21 is_stmt 0 view .LVU240
 846 000c 0A4C     		ldr	r4, .L39+8
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 31


 847 000e 2268     		ldr	r2, [r4]
 848 0010 991A     		subs	r1, r3, r2
 282:Src/main.c    ****   bl_old = bl_new;
 849              		.loc 1 282 38 view .LVU241
 850 0012 0A48     		ldr	r0, .L39+12
 851 0014 0268     		ldr	r2, [r0]
 282:Src/main.c    ****   bl_old = bl_new;
 852              		.loc 1 282 30 view .LVU242
 853 0016 49F64045 		movw	r5, #40000
 854 001a 05FB0212 		mla	r2, r5, r2, r1
 282:Src/main.c    ****   bl_old = bl_new;
 855              		.loc 1 282 12 view .LVU243
 856 001e 0849     		ldr	r1, .L39+16
 857 0020 0A60     		str	r2, [r1]
 283:Src/main.c    ****   bl_count = 0;
 858              		.loc 1 283 3 is_stmt 1 view .LVU244
 283:Src/main.c    ****   bl_count = 0;
 859              		.loc 1 283 10 is_stmt 0 view .LVU245
 860 0022 2360     		str	r3, [r4]
 284:Src/main.c    ****   /* USER CODE END EXTI2_IRQn 0 */
 861              		.loc 1 284 3 is_stmt 1 view .LVU246
 284:Src/main.c    ****   /* USER CODE END EXTI2_IRQn 0 */
 862              		.loc 1 284 12 is_stmt 0 view .LVU247
 863 0024 0023     		movs	r3, #0
 864 0026 0360     		str	r3, [r0]
 286:Src/main.c    ****   /* USER CODE BEGIN EXTI2_IRQn 1 */
 865              		.loc 1 286 3 is_stmt 1 view .LVU248
 866 0028 0420     		movs	r0, #4
 867 002a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 868              	.LVL26:
 290:Src/main.c    **** 
 869              		.loc 1 290 1 is_stmt 0 view .LVU249
 870 002e 38BD     		pop	{r3, r4, r5, pc}
 871              	.L40:
 872              		.align	2
 873              	.L39:
 874 0030 00000000 		.word	htim2
 875 0034 00000000 		.word	.LANCHOR9
 876 0038 00000000 		.word	.LANCHOR10
 877 003c 00000000 		.word	.LANCHOR11
 878 0040 00000000 		.word	.LANCHOR12
 879              		.cfi_endproc
 880              	.LFE69:
 882              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 883              		.align	1
 884              		.global	EXTI3_IRQHandler
 885              		.syntax unified
 886              		.thumb
 887              		.thumb_func
 888              		.fpu softvfp
 890              	EXTI3_IRQHandler:
 891              	.LFB70:
 296:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 892              		.loc 1 296 1 is_stmt 1 view -0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 32


 896 0000 38B5     		push	{r3, r4, r5, lr}
 897              	.LCFI18:
 898              		.cfi_def_cfa_offset 16
 899              		.cfi_offset 3, -16
 900              		.cfi_offset 4, -12
 901              		.cfi_offset 5, -8
 902              		.cfi_offset 14, -4
 298:Src/main.c    ****   br_delta = br_new - br_old + 40000 * br_count;
 903              		.loc 1 298 3 view .LVU251
 298:Src/main.c    ****   br_delta = br_new - br_old + 40000 * br_count;
 904              		.loc 1 298 12 is_stmt 0 view .LVU252
 905 0002 0B4B     		ldr	r3, .L43
 906 0004 1B68     		ldr	r3, [r3]
 907 0006 5B6A     		ldr	r3, [r3, #36]
 298:Src/main.c    ****   br_delta = br_new - br_old + 40000 * br_count;
 908              		.loc 1 298 10 view .LVU253
 909 0008 0A4A     		ldr	r2, .L43+4
 910 000a 1360     		str	r3, [r2]
 299:Src/main.c    ****   br_old = br_new;
 911              		.loc 1 299 3 is_stmt 1 view .LVU254
 299:Src/main.c    ****   br_old = br_new;
 912              		.loc 1 299 21 is_stmt 0 view .LVU255
 913 000c 0A4C     		ldr	r4, .L43+8
 914 000e 2268     		ldr	r2, [r4]
 915 0010 991A     		subs	r1, r3, r2
 299:Src/main.c    ****   br_old = br_new;
 916              		.loc 1 299 38 view .LVU256
 917 0012 0A48     		ldr	r0, .L43+12
 918 0014 0268     		ldr	r2, [r0]
 299:Src/main.c    ****   br_old = br_new;
 919              		.loc 1 299 30 view .LVU257
 920 0016 49F64045 		movw	r5, #40000
 921 001a 05FB0212 		mla	r2, r5, r2, r1
 299:Src/main.c    ****   br_old = br_new;
 922              		.loc 1 299 12 view .LVU258
 923 001e 0849     		ldr	r1, .L43+16
 924 0020 0A60     		str	r2, [r1]
 300:Src/main.c    ****   br_count = 0;
 925              		.loc 1 300 3 is_stmt 1 view .LVU259
 300:Src/main.c    ****   br_count = 0;
 926              		.loc 1 300 10 is_stmt 0 view .LVU260
 927 0022 2360     		str	r3, [r4]
 301:Src/main.c    ****   /* USER CODE END EXTI3_IRQn 0 */
 928              		.loc 1 301 3 is_stmt 1 view .LVU261
 301:Src/main.c    ****   /* USER CODE END EXTI3_IRQn 0 */
 929              		.loc 1 301 12 is_stmt 0 view .LVU262
 930 0024 0023     		movs	r3, #0
 931 0026 0360     		str	r3, [r0]
 303:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 932              		.loc 1 303 3 is_stmt 1 view .LVU263
 933 0028 0820     		movs	r0, #8
 934 002a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 935              	.LVL27:
 307:Src/main.c    **** 
 936              		.loc 1 307 1 is_stmt 0 view .LVU264
 937 002e 38BD     		pop	{r3, r4, r5, pc}
 938              	.L44:
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 33


 939              		.align	2
 940              	.L43:
 941 0030 00000000 		.word	htim2
 942 0034 00000000 		.word	.LANCHOR13
 943 0038 00000000 		.word	.LANCHOR14
 944 003c 00000000 		.word	.LANCHOR15
 945 0040 00000000 		.word	.LANCHOR16
 946              		.cfi_endproc
 947              	.LFE70:
 949              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 950              		.align	1
 951              		.global	TIM2_IRQHandler
 952              		.syntax unified
 953              		.thumb
 954              		.thumb_func
 955              		.fpu softvfp
 957              	TIM2_IRQHandler:
 958              	.LFB71:
 313:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 959              		.loc 1 313 1 is_stmt 1 view -0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963 0000 08B5     		push	{r3, lr}
 964              	.LCFI19:
 965              		.cfi_def_cfa_offset 8
 966              		.cfi_offset 3, -8
 967              		.cfi_offset 14, -4
 315:Src/main.c    ****   fr_count++;
 968              		.loc 1 315 3 view .LVU266
 315:Src/main.c    ****   fr_count++;
 969              		.loc 1 315 11 is_stmt 0 view .LVU267
 970 0002 0A4A     		ldr	r2, .L47
 971 0004 1368     		ldr	r3, [r2]
 972 0006 0133     		adds	r3, r3, #1
 973 0008 1360     		str	r3, [r2]
 316:Src/main.c    ****   bl_count++;
 974              		.loc 1 316 3 is_stmt 1 view .LVU268
 316:Src/main.c    ****   bl_count++;
 975              		.loc 1 316 11 is_stmt 0 view .LVU269
 976 000a 094A     		ldr	r2, .L47+4
 977 000c 1368     		ldr	r3, [r2]
 978 000e 0133     		adds	r3, r3, #1
 979 0010 1360     		str	r3, [r2]
 317:Src/main.c    ****   br_count++;
 980              		.loc 1 317 3 is_stmt 1 view .LVU270
 317:Src/main.c    ****   br_count++;
 981              		.loc 1 317 11 is_stmt 0 view .LVU271
 982 0012 084A     		ldr	r2, .L47+8
 983 0014 1368     		ldr	r3, [r2]
 984 0016 0133     		adds	r3, r3, #1
 985 0018 1360     		str	r3, [r2]
 318:Src/main.c    ****   /* USER CODE END TIM2_IRQn 0 */
 986              		.loc 1 318 3 is_stmt 1 view .LVU272
 318:Src/main.c    ****   /* USER CODE END TIM2_IRQn 0 */
 987              		.loc 1 318 11 is_stmt 0 view .LVU273
 988 001a 074A     		ldr	r2, .L47+12
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 34


 989 001c 1368     		ldr	r3, [r2]
 990 001e 0133     		adds	r3, r3, #1
 991 0020 1360     		str	r3, [r2]
 320:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 992              		.loc 1 320 3 is_stmt 1 view .LVU274
 993 0022 0648     		ldr	r0, .L47+16
 994 0024 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 995              	.LVL28:
 324:Src/main.c    **** 
 996              		.loc 1 324 1 is_stmt 0 view .LVU275
 997 0028 08BD     		pop	{r3, pc}
 998              	.L48:
 999 002a 00BF     		.align	2
 1000              	.L47:
 1001 002c 00000000 		.word	.LANCHOR3
 1002 0030 00000000 		.word	.LANCHOR7
 1003 0034 00000000 		.word	.LANCHOR11
 1004 0038 00000000 		.word	.LANCHOR15
 1005 003c 00000000 		.word	htim2
 1006              		.cfi_endproc
 1007              	.LFE71:
 1009              		.global	__aeabi_i2f
 1010              		.global	__aeabi_fmul
 1011              		.global	__aeabi_fadd
 1012              		.global	__aeabi_fdiv
 1013              		.global	__aeabi_f2iz
 1014              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 1015              		.align	1
 1016              		.global	TIM3_IRQHandler
 1017              		.syntax unified
 1018              		.thumb
 1019              		.thumb_func
 1020              		.fpu softvfp
 1022              	TIM3_IRQHandler:
 1023              	.LFB72:
 330:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 1024              		.loc 1 330 1 is_stmt 1 view -0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1029              	.LCFI20:
 1030              		.cfi_def_cfa_offset 24
 1031              		.cfi_offset 4, -24
 1032              		.cfi_offset 5, -20
 1033              		.cfi_offset 6, -16
 1034              		.cfi_offset 7, -12
 1035              		.cfi_offset 8, -8
 1036              		.cfi_offset 14, -4
 333:Src/main.c    ****   derivative = (error - prev_error) / dt;
 1037              		.loc 1 333 3 view .LVU277
 333:Src/main.c    ****   derivative = (error - prev_error) / dt;
 1038              		.loc 1 333 18 is_stmt 0 view .LVU278
 1039 0004 224B     		ldr	r3, .L51
 1040 0006 1E68     		ldr	r6, [r3]
 1041 0008 3046     		mov	r0, r6
 1042 000a FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 35


 1043              	.LVL29:
 1044 000e 8046     		mov	r8, r0
 1045 0010 204B     		ldr	r3, .L51+4
 1046 0012 1C68     		ldr	r4, [r3]	@ float
 1047 0014 2146     		mov	r1, r4
 1048 0016 FFF7FEFF 		bl	__aeabi_fmul
 1049              	.LVL30:
 333:Src/main.c    ****   derivative = (error - prev_error) / dt;
 1050              		.loc 1 333 12 view .LVU279
 1051 001a 1F4F     		ldr	r7, .L51+8
 1052 001c 3968     		ldr	r1, [r7]	@ float
 1053 001e FFF7FEFF 		bl	__aeabi_fadd
 1054              	.LVL31:
 1055 0022 0546     		mov	r5, r0
 1056 0024 3860     		str	r0, [r7]	@ float
 334:Src/main.c    ****   
 1057              		.loc 1 334 3 is_stmt 1 view .LVU280
 334:Src/main.c    ****   
 1058              		.loc 1 334 23 is_stmt 0 view .LVU281
 1059 0026 1D4B     		ldr	r3, .L51+12
 1060 0028 1868     		ldr	r0, [r3]
 334:Src/main.c    ****   
 1061              		.loc 1 334 37 view .LVU282
 1062 002a 301A     		subs	r0, r6, r0
 1063 002c FFF7FEFF 		bl	__aeabi_i2f
 1064              	.LVL32:
 1065 0030 2146     		mov	r1, r4
 1066 0032 FFF7FEFF 		bl	__aeabi_fdiv
 1067              	.LVL33:
 1068 0036 0446     		mov	r4, r0
 334:Src/main.c    ****   
 1069              		.loc 1 334 14 view .LVU283
 1070 0038 194B     		ldr	r3, .L51+16
 1071 003a 1860     		str	r0, [r3]	@ float
 336:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 1072              		.loc 1 336 3 is_stmt 1 view .LVU284
 336:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 1073              		.loc 1 336 23 is_stmt 0 view .LVU285
 1074 003c 194B     		ldr	r3, .L51+20
 1075 003e 1968     		ldr	r1, [r3]	@ float
 1076 0040 4046     		mov	r0, r8
 1077 0042 FFF7FEFF 		bl	__aeabi_fmul
 1078              	.LVL34:
 1079 0046 0646     		mov	r6, r0
 336:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 1080              		.loc 1 336 18 view .LVU286
 1081 0048 174B     		ldr	r3, .L51+24
 1082 004a 1868     		ldr	r0, [r3]
 1083 004c FFF7FEFF 		bl	__aeabi_i2f
 1084              	.LVL35:
 1085 0050 3146     		mov	r1, r6
 1086 0052 FFF7FEFF 		bl	__aeabi_fadd
 1087              	.LVL36:
 1088 0056 0646     		mov	r6, r0
 336:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 1089              		.loc 1 336 36 view .LVU287
 1090 0058 144B     		ldr	r3, .L51+28
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 36


 1091 005a 1968     		ldr	r1, [r3]	@ float
 1092 005c 2846     		mov	r0, r5
 1093 005e FFF7FEFF 		bl	__aeabi_fmul
 1094              	.LVL37:
 336:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 1095              		.loc 1 336 31 view .LVU288
 1096 0062 0146     		mov	r1, r0
 1097 0064 3046     		mov	r0, r6
 1098 0066 FFF7FEFF 		bl	__aeabi_fadd
 1099              	.LVL38:
 1100 006a 0546     		mov	r5, r0
 336:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 1101              		.loc 1 336 52 view .LVU289
 1102 006c 104B     		ldr	r3, .L51+32
 1103 006e 1968     		ldr	r1, [r3]	@ float
 1104 0070 2046     		mov	r0, r4
 1105 0072 FFF7FEFF 		bl	__aeabi_fmul
 1106              	.LVL39:
 336:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 1107              		.loc 1 336 47 view .LVU290
 1108 0076 0146     		mov	r1, r0
 1109 0078 2846     		mov	r0, r5
 1110 007a FFF7FEFF 		bl	__aeabi_fadd
 1111              	.LVL40:
 336:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 1112              		.loc 1 336 11 view .LVU291
 1113 007e FFF7FEFF 		bl	__aeabi_f2iz
 1114              	.LVL41:
 1115 0082 0C4B     		ldr	r3, .L51+36
 1116 0084 1860     		str	r0, [r3]
 338:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 1117              		.loc 1 338 3 is_stmt 1 view .LVU292
 1118 0086 0C48     		ldr	r0, .L51+40
 1119 0088 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 1120              	.LVL42:
 342:Src/main.c    **** 
 1121              		.loc 1 342 1 is_stmt 0 view .LVU293
 1122 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1123              	.L52:
 1124              		.align	2
 1125              	.L51:
 1126 0090 00000000 		.word	.LANCHOR17
 1127 0094 00000000 		.word	.LANCHOR18
 1128 0098 00000000 		.word	.LANCHOR19
 1129 009c 00000000 		.word	.LANCHOR20
 1130 00a0 00000000 		.word	.LANCHOR21
 1131 00a4 00000000 		.word	.LANCHOR22
 1132 00a8 00000000 		.word	.LANCHOR23
 1133 00ac 00000000 		.word	.LANCHOR24
 1134 00b0 00000000 		.word	.LANCHOR25
 1135 00b4 00000000 		.word	.LANCHOR26
 1136 00b8 00000000 		.word	htim3
 1137              		.cfi_endproc
 1138              	.LFE72:
 1140              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 1141              		.align	1
 1142              		.global	SPI1_IRQHandler
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 37


 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1146              		.fpu softvfp
 1148              	SPI1_IRQHandler:
 1149              	.LFB73:
 348:Src/main.c    ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 1150              		.loc 1 348 1 is_stmt 1 view -0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154 0000 08B5     		push	{r3, lr}
 1155              	.LCFI21:
 1156              		.cfi_def_cfa_offset 8
 1157              		.cfi_offset 3, -8
 1158              		.cfi_offset 14, -4
 352:Src/main.c    ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 1159              		.loc 1 352 3 view .LVU295
 1160 0002 0248     		ldr	r0, .L55
 1161 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 1162              	.LVL43:
 356:Src/main.c    **** 
 1163              		.loc 1 356 1 is_stmt 0 view .LVU296
 1164 0008 08BD     		pop	{r3, pc}
 1165              	.L56:
 1166 000a 00BF     		.align	2
 1167              	.L55:
 1168 000c 00000000 		.word	hspi1
 1169              		.cfi_endproc
 1170              	.LFE73:
 1172              		.section	.text.SystemClock_Config,"ax",%progbits
 1173              		.align	1
 1174              		.global	SystemClock_Config
 1175              		.syntax unified
 1176              		.thumb
 1177              		.thumb_func
 1178              		.fpu softvfp
 1180              	SystemClock_Config:
 1181              	.LFB74:
 363:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1182              		.loc 1 363 1 is_stmt 1 view -0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 80
 1185              		@ frame_needed = 0, uses_anonymous_args = 0
 1186 0000 30B5     		push	{r4, r5, lr}
 1187              	.LCFI22:
 1188              		.cfi_def_cfa_offset 12
 1189              		.cfi_offset 4, -12
 1190              		.cfi_offset 5, -8
 1191              		.cfi_offset 14, -4
 1192 0002 95B0     		sub	sp, sp, #84
 1193              	.LCFI23:
 1194              		.cfi_def_cfa_offset 96
 364:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1195              		.loc 1 364 3 view .LVU298
 364:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1196              		.loc 1 364 22 is_stmt 0 view .LVU299
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 38


 1197 0004 2422     		movs	r2, #36
 1198 0006 0021     		movs	r1, #0
 1199 0008 0BA8     		add	r0, sp, #44
 1200 000a FFF7FEFF 		bl	memset
 1201              	.LVL44:
 365:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1202              		.loc 1 365 3 is_stmt 1 view .LVU300
 365:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1203              		.loc 1 365 22 is_stmt 0 view .LVU301
 1204 000e 0024     		movs	r4, #0
 1205 0010 0594     		str	r4, [sp, #20]
 1206 0012 0694     		str	r4, [sp, #24]
 1207 0014 0794     		str	r4, [sp, #28]
 1208 0016 0894     		str	r4, [sp, #32]
 1209 0018 0994     		str	r4, [sp, #36]
 366:Src/main.c    **** 
 1210              		.loc 1 366 3 is_stmt 1 view .LVU302
 366:Src/main.c    **** 
 1211              		.loc 1 366 28 is_stmt 0 view .LVU303
 1212 001a 0194     		str	r4, [sp, #4]
 1213 001c 0294     		str	r4, [sp, #8]
 1214 001e 0394     		str	r4, [sp, #12]
 1215 0020 0494     		str	r4, [sp, #16]
 370:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1216              		.loc 1 370 3 is_stmt 1 view .LVU304
 370:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1217              		.loc 1 370 36 is_stmt 0 view .LVU305
 1218 0022 0225     		movs	r5, #2
 1219 0024 0A95     		str	r5, [sp, #40]
 371:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1220              		.loc 1 371 3 is_stmt 1 view .LVU306
 371:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1221              		.loc 1 371 30 is_stmt 0 view .LVU307
 1222 0026 0123     		movs	r3, #1
 1223 0028 0E93     		str	r3, [sp, #56]
 372:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1224              		.loc 1 372 3 is_stmt 1 view .LVU308
 372:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1225              		.loc 1 372 41 is_stmt 0 view .LVU309
 1226 002a 1023     		movs	r3, #16
 1227 002c 0F93     		str	r3, [sp, #60]
 373:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1228              		.loc 1 373 3 is_stmt 1 view .LVU310
 374:Src/main.c    ****   {
 1229              		.loc 1 374 3 view .LVU311
 374:Src/main.c    ****   {
 1230              		.loc 1 374 7 is_stmt 0 view .LVU312
 1231 002e 0AA8     		add	r0, sp, #40
 1232 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1233              	.LVL45:
 380:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1234              		.loc 1 380 3 is_stmt 1 view .LVU313
 380:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1235              		.loc 1 380 31 is_stmt 0 view .LVU314
 1236 0034 0F23     		movs	r3, #15
 1237 0036 0593     		str	r3, [sp, #20]
 382:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 39


 1238              		.loc 1 382 3 is_stmt 1 view .LVU315
 382:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1239              		.loc 1 382 34 is_stmt 0 view .LVU316
 1240 0038 0694     		str	r4, [sp, #24]
 383:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1241              		.loc 1 383 3 is_stmt 1 view .LVU317
 383:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1242              		.loc 1 383 35 is_stmt 0 view .LVU318
 1243 003a 0794     		str	r4, [sp, #28]
 384:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1244              		.loc 1 384 3 is_stmt 1 view .LVU319
 384:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1245              		.loc 1 384 36 is_stmt 0 view .LVU320
 1246 003c 0894     		str	r4, [sp, #32]
 385:Src/main.c    **** 
 1247              		.loc 1 385 3 is_stmt 1 view .LVU321
 385:Src/main.c    **** 
 1248              		.loc 1 385 36 is_stmt 0 view .LVU322
 1249 003e 0994     		str	r4, [sp, #36]
 387:Src/main.c    ****   {
 1250              		.loc 1 387 3 is_stmt 1 view .LVU323
 387:Src/main.c    ****   {
 1251              		.loc 1 387 7 is_stmt 0 view .LVU324
 1252 0040 2146     		mov	r1, r4
 1253 0042 05A8     		add	r0, sp, #20
 1254 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1255              	.LVL46:
 391:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 1256              		.loc 1 391 3 is_stmt 1 view .LVU325
 391:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 1257              		.loc 1 391 38 is_stmt 0 view .LVU326
 1258 0048 0195     		str	r5, [sp, #4]
 392:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1259              		.loc 1 392 3 is_stmt 1 view .LVU327
 392:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1260              		.loc 1 392 35 is_stmt 0 view .LVU328
 1261 004a 0394     		str	r4, [sp, #12]
 393:Src/main.c    ****   {
 1262              		.loc 1 393 3 is_stmt 1 view .LVU329
 393:Src/main.c    ****   {
 1263              		.loc 1 393 7 is_stmt 0 view .LVU330
 1264 004c 01A8     		add	r0, sp, #4
 1265 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1266              	.LVL47:
 397:Src/main.c    **** 
 1267              		.loc 1 397 1 view .LVU331
 1268 0052 15B0     		add	sp, sp, #84
 1269              	.LCFI24:
 1270              		.cfi_def_cfa_offset 12
 1271              		@ sp needed
 1272 0054 30BD     		pop	{r4, r5, pc}
 1273              		.cfi_endproc
 1274              	.LFE74:
 1276              		.section	.text.main,"ax",%progbits
 1277              		.align	1
 1278              		.global	main
 1279              		.syntax unified
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 40


 1280              		.thumb
 1281              		.thumb_func
 1282              		.fpu softvfp
 1284              	main:
 1285              	.LFB66:
 132:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1286              		.loc 1 132 1 is_stmt 1 view -0
 1287              		.cfi_startproc
 1288              		@ Volatile: function does not return.
 1289              		@ args = 0, pretend = 0, frame = 8
 1290              		@ frame_needed = 0, uses_anonymous_args = 0
 1291 0000 00B5     		push	{lr}
 1292              	.LCFI25:
 1293              		.cfi_def_cfa_offset 4
 1294              		.cfi_offset 14, -4
 1295 0002 85B0     		sub	sp, sp, #20
 1296              	.LCFI26:
 1297              		.cfi_def_cfa_offset 24
 140:Src/main.c    **** 
 1298              		.loc 1 140 3 view .LVU333
 1299 0004 FFF7FEFF 		bl	HAL_Init
 1300              	.LVL48:
 147:Src/main.c    **** 
 1301              		.loc 1 147 3 view .LVU334
 1302 0008 FFF7FEFF 		bl	SystemClock_Config
 1303              	.LVL49:
 154:Src/main.c    ****   MX_I2C1_Init();
 1304              		.loc 1 154 3 view .LVU335
 1305 000c FFF7FEFF 		bl	MX_GPIO_Init
 1306              	.LVL50:
 155:Src/main.c    ****   MX_SPI1_Init();
 1307              		.loc 1 155 3 view .LVU336
 1308 0010 FFF7FEFF 		bl	MX_I2C1_Init
 1309              	.LVL51:
 156:Src/main.c    ****   MX_USART1_UART_Init();
 1310              		.loc 1 156 3 view .LVU337
 1311 0014 FFF7FEFF 		bl	MX_SPI1_Init
 1312              	.LVL52:
 157:Src/main.c    ****   MX_TIM2_Init();
 1313              		.loc 1 157 3 view .LVU338
 1314 0018 FFF7FEFF 		bl	MX_USART1_UART_Init
 1315              	.LVL53:
 158:Src/main.c    ****   MX_ADC1_Init();
 1316              		.loc 1 158 3 view .LVU339
 1317 001c FFF7FEFF 		bl	MX_TIM2_Init
 1318              	.LVL54:
 159:Src/main.c    ****   MX_TIM3_Init();
 1319              		.loc 1 159 3 view .LVU340
 1320 0020 FFF7FEFF 		bl	MX_ADC1_Init
 1321              	.LVL55:
 160:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1322              		.loc 1 160 3 view .LVU341
 1323 0024 FFF7FEFF 		bl	MX_TIM3_Init
 1324              	.LVL56:
 1325 0028 48E0     		b	.L67
 1326              	.L63:
 1327              	.LBB5:
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 41


 185:Src/main.c    **** 	back_avg = (bl_freq + br_freq) / 2;
 1328              		.loc 1 185 2 view .LVU342
 185:Src/main.c    **** 	back_avg = (bl_freq + br_freq) / 2;
 1329              		.loc 1 185 23 is_stmt 0 view .LVU343
 1330 002a 454B     		ldr	r3, .L71
 1331 002c 1B68     		ldr	r3, [r3]
 1332 002e 454A     		ldr	r2, .L71+4
 1333 0030 1268     		ldr	r2, [r2]
 1334 0032 1344     		add	r3, r3, r2
 185:Src/main.c    **** 	back_avg = (bl_freq + br_freq) / 2;
 1335              		.loc 1 185 34 view .LVU344
 1336 0034 03EBD373 		add	r3, r3, r3, lsr #31
 1337 0038 5B10     		asrs	r3, r3, #1
 185:Src/main.c    **** 	back_avg = (bl_freq + br_freq) / 2;
 1338              		.loc 1 185 12 view .LVU345
 1339 003a 434A     		ldr	r2, .L71+8
 1340 003c 1360     		str	r3, [r2]
 186:Src/main.c    **** 	
 1341              		.loc 1 186 2 is_stmt 1 view .LVU346
 186:Src/main.c    **** 	
 1342              		.loc 1 186 22 is_stmt 0 view .LVU347
 1343 003e 434A     		ldr	r2, .L71+12
 1344 0040 1268     		ldr	r2, [r2]
 1345 0042 4349     		ldr	r1, .L71+16
 1346 0044 0968     		ldr	r1, [r1]
 1347 0046 0A44     		add	r2, r2, r1
 186:Src/main.c    **** 	
 1348              		.loc 1 186 33 view .LVU348
 1349 0048 02EBD272 		add	r2, r2, r2, lsr #31
 1350 004c 5210     		asrs	r2, r2, #1
 186:Src/main.c    **** 	
 1351              		.loc 1 186 11 view .LVU349
 1352 004e 4149     		ldr	r1, .L71+20
 1353 0050 0A60     		str	r2, [r1]
 188:Src/main.c    **** 	
 1354              		.loc 1 188 2 is_stmt 1 view .LVU350
 188:Src/main.c    **** 	
 1355              		.loc 1 188 19 is_stmt 0 view .LVU351
 1356 0052 9B1A     		subs	r3, r3, r2
 188:Src/main.c    **** 	
 1357              		.loc 1 188 7 view .LVU352
 1358 0054 404A     		ldr	r2, .L71+24
 1359 0056 1360     		str	r3, [r2]
 190:Src/main.c    **** 	error = slip - setpoint;
 1360              		.loc 1 190 2 is_stmt 1 view .LVU353
 190:Src/main.c    **** 	error = slip - setpoint;
 1361              		.loc 1 190 13 is_stmt 0 view .LVU354
 1362 0058 4049     		ldr	r1, .L71+28
 1363 005a 0868     		ldr	r0, [r1]
 1364 005c 404A     		ldr	r2, .L71+32
 1365 005e 1060     		str	r0, [r2]
 191:Src/main.c    **** 	
 1366              		.loc 1 191 2 is_stmt 1 view .LVU355
 191:Src/main.c    **** 	
 1367              		.loc 1 191 15 is_stmt 0 view .LVU356
 1368 0060 404A     		ldr	r2, .L71+36
 1369 0062 1268     		ldr	r2, [r2]
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 42


 1370 0064 9A1A     		subs	r2, r3, r2
 191:Src/main.c    **** 	
 1371              		.loc 1 191 8 view .LVU357
 1372 0066 0A60     		str	r2, [r1]
 193:Src/main.c    **** 	
 1373              		.loc 1 193 2 is_stmt 1 view .LVU358
 193:Src/main.c    **** 	
 1374              		.loc 1 193 5 is_stmt 0 view .LVU359
 1375 0068 002B     		cmp	r3, #0
 1376 006a 5ED0     		beq	.L69
 1377              	.L64:
 195:Src/main.c    **** 	if (control > 255) control = 255;
 1378              		.loc 1 195 2 is_stmt 1 view .LVU360
 195:Src/main.c    **** 	if (control > 255) control = 255;
 1379              		.loc 1 195 14 is_stmt 0 view .LVU361
 1380 006c 3E4B     		ldr	r3, .L71+40
 1381 006e 1B68     		ldr	r3, [r3]
 195:Src/main.c    **** 	if (control > 255) control = 255;
 1382              		.loc 1 195 5 view .LVU362
 1383 0070 002B     		cmp	r3, #0
 1384 0072 60DB     		blt	.L70
 1385              	.L65:
 196:Src/main.c    **** 	
 1386              		.loc 1 196 2 is_stmt 1 view .LVU363
 196:Src/main.c    **** 	
 1387              		.loc 1 196 14 is_stmt 0 view .LVU364
 1388 0074 3C4B     		ldr	r3, .L71+40
 1389 0076 1B68     		ldr	r3, [r3]
 196:Src/main.c    **** 	
 1390              		.loc 1 196 5 view .LVU365
 1391 0078 FF2B     		cmp	r3, #255
 1392 007a 02DD     		ble	.L66
 196:Src/main.c    **** 	
 1393              		.loc 1 196 21 is_stmt 1 discriminator 1 view .LVU366
 196:Src/main.c    **** 	
 1394              		.loc 1 196 29 is_stmt 0 discriminator 1 view .LVU367
 1395 007c 3A4B     		ldr	r3, .L71+40
 1396 007e FF22     		movs	r2, #255
 1397 0080 1A60     		str	r2, [r3]
 1398              	.L66:
 203:Src/main.c    **** 	data[0] = 0x00;
 1399              		.loc 1 203 2 is_stmt 1 view .LVU368
 204:Src/main.c    **** 	data[1] = control;
 1400              		.loc 1 204 2 view .LVU369
 204:Src/main.c    **** 	data[1] = control;
 1401              		.loc 1 204 10 is_stmt 0 view .LVU370
 1402 0082 0023     		movs	r3, #0
 1403 0084 8DF80C30 		strb	r3, [sp, #12]
 205:Src/main.c    **** 	if (HAL_I2C_Master_Transmit(&hi2c1, (0b0101111)<<1, data, sizeof(data), 1000) == HAL_OK)
 1404              		.loc 1 205 2 is_stmt 1 view .LVU371
 205:Src/main.c    **** 	if (HAL_I2C_Master_Transmit(&hi2c1, (0b0101111)<<1, data, sizeof(data), 1000) == HAL_OK)
 1405              		.loc 1 205 10 is_stmt 0 view .LVU372
 1406 0088 374B     		ldr	r3, .L71+40
 1407 008a 1B68     		ldr	r3, [r3]
 1408 008c 8DF80D30 		strb	r3, [sp, #13]
 206:Src/main.c    **** 	{
 1409              		.loc 1 206 2 is_stmt 1 view .LVU373
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 43


 206:Src/main.c    **** 	{
 1410              		.loc 1 206 6 is_stmt 0 view .LVU374
 1411 0090 4FF47A74 		mov	r4, #1000
 1412 0094 0094     		str	r4, [sp]
 1413 0096 0223     		movs	r3, #2
 1414 0098 03AA     		add	r2, sp, #12
 1415 009a 5E21     		movs	r1, #94
 1416 009c 3348     		ldr	r0, .L71+44
 1417 009e FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1418              	.LVL57:
 209:Src/main.c    **** 	
 1419              		.loc 1 209 2 is_stmt 1 view .LVU375
 211:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data, sizeof(data), 1000);
 1420              		.loc 1 211 2 view .LVU376
 211:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data, sizeof(data), 1000);
 1421              		.loc 1 211 10 is_stmt 0 view .LVU377
 1422 00a2 2E4B     		ldr	r3, .L71+28
 1423 00a4 1B68     		ldr	r3, [r3]
 1424 00a6 8DF80C30 		strb	r3, [sp, #12]
 212:Src/main.c    **** 	HAL_Delay(50);
 1425              		.loc 1 212 2 is_stmt 1 view .LVU378
 1426 00aa 2346     		mov	r3, r4
 1427 00ac 0222     		movs	r2, #2
 1428 00ae 03A9     		add	r1, sp, #12
 1429 00b0 2F48     		ldr	r0, .L71+48
 1430 00b2 FFF7FEFF 		bl	HAL_UART_Transmit
 1431              	.LVL58:
 213:Src/main.c    **** 	
 1432              		.loc 1 213 2 view .LVU379
 1433 00b6 3220     		movs	r0, #50
 1434 00b8 FFF7FEFF 		bl	HAL_Delay
 1435              	.LVL59:
 1436              	.L67:
 1437              	.LBE5:
 162:Src/main.c    ****   /* USER CODE END 2 */
 1438              		.loc 1 162 3 view .LVU380
 167:Src/main.c    ****   {
 1439              		.loc 1 167 3 view .LVU381
 1440              	.LBB6:
 175:Src/main.c    **** 	fr_freq = 40000 / fr_delta;
 1441              		.loc 1 175 2 view .LVU382
 175:Src/main.c    **** 	fr_freq = 40000 / fr_delta;
 1442              		.loc 1 175 18 is_stmt 0 view .LVU383
 1443 00bc 49F64043 		movw	r3, #40000
 1444 00c0 2C4A     		ldr	r2, .L71+52
 1445 00c2 1268     		ldr	r2, [r2]
 1446 00c4 93FBF2F2 		sdiv	r2, r3, r2
 175:Src/main.c    **** 	fr_freq = 40000 / fr_delta;
 1447              		.loc 1 175 10 view .LVU384
 1448 00c8 1D49     		ldr	r1, .L71
 1449 00ca 0A60     		str	r2, [r1]
 176:Src/main.c    **** 	bl_freq = 40000 / bl_delta;
 1450              		.loc 1 176 2 is_stmt 1 view .LVU385
 176:Src/main.c    **** 	bl_freq = 40000 / bl_delta;
 1451              		.loc 1 176 18 is_stmt 0 view .LVU386
 1452 00cc 2A4A     		ldr	r2, .L71+56
 1453 00ce 1268     		ldr	r2, [r2]
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 44


 1454 00d0 93FBF2F2 		sdiv	r2, r3, r2
 176:Src/main.c    **** 	bl_freq = 40000 / bl_delta;
 1455              		.loc 1 176 10 view .LVU387
 1456 00d4 1B49     		ldr	r1, .L71+4
 1457 00d6 0A60     		str	r2, [r1]
 177:Src/main.c    **** 	br_freq = 40000 / br_delta;
 1458              		.loc 1 177 2 is_stmt 1 view .LVU388
 177:Src/main.c    **** 	br_freq = 40000 / br_delta;
 1459              		.loc 1 177 18 is_stmt 0 view .LVU389
 1460 00d8 284A     		ldr	r2, .L71+60
 1461 00da 1268     		ldr	r2, [r2]
 1462 00dc 93FBF2F2 		sdiv	r2, r3, r2
 177:Src/main.c    **** 	br_freq = 40000 / br_delta;
 1463              		.loc 1 177 10 view .LVU390
 1464 00e0 1A49     		ldr	r1, .L71+12
 1465 00e2 0A60     		str	r2, [r1]
 178:Src/main.c    **** 	
 1466              		.loc 1 178 2 is_stmt 1 view .LVU391
 178:Src/main.c    **** 	
 1467              		.loc 1 178 18 is_stmt 0 view .LVU392
 1468 00e4 264A     		ldr	r2, .L71+64
 1469 00e6 1268     		ldr	r2, [r2]
 1470 00e8 93FBF2F3 		sdiv	r3, r3, r2
 178:Src/main.c    **** 	
 1471              		.loc 1 178 10 view .LVU393
 1472 00ec 184A     		ldr	r2, .L71+16
 1473 00ee 1360     		str	r3, [r2]
 180:Src/main.c    **** 	if (fr_count >= 2) fr_freq = 0;
 1474              		.loc 1 180 2 is_stmt 1 view .LVU394
 180:Src/main.c    **** 	if (fr_count >= 2) fr_freq = 0;
 1475              		.loc 1 180 15 is_stmt 0 view .LVU395
 1476 00f0 244B     		ldr	r3, .L71+68
 1477 00f2 1B68     		ldr	r3, [r3]
 180:Src/main.c    **** 	if (fr_count >= 2) fr_freq = 0;
 1478              		.loc 1 180 5 view .LVU396
 1479 00f4 012B     		cmp	r3, #1
 1480 00f6 02DD     		ble	.L60
 180:Src/main.c    **** 	if (fr_count >= 2) fr_freq = 0;
 1481              		.loc 1 180 21 is_stmt 1 discriminator 1 view .LVU397
 180:Src/main.c    **** 	if (fr_count >= 2) fr_freq = 0;
 1482              		.loc 1 180 29 is_stmt 0 discriminator 1 view .LVU398
 1483 00f8 114B     		ldr	r3, .L71
 1484 00fa 0022     		movs	r2, #0
 1485 00fc 1A60     		str	r2, [r3]
 1486              	.L60:
 181:Src/main.c    **** 	if (bl_count >= 2) bl_freq = 0;
 1487              		.loc 1 181 2 is_stmt 1 view .LVU399
 181:Src/main.c    **** 	if (bl_count >= 2) bl_freq = 0;
 1488              		.loc 1 181 15 is_stmt 0 view .LVU400
 1489 00fe 224B     		ldr	r3, .L71+72
 1490 0100 1B68     		ldr	r3, [r3]
 181:Src/main.c    **** 	if (bl_count >= 2) bl_freq = 0;
 1491              		.loc 1 181 5 view .LVU401
 1492 0102 012B     		cmp	r3, #1
 1493 0104 02DD     		ble	.L61
 181:Src/main.c    **** 	if (bl_count >= 2) bl_freq = 0;
 1494              		.loc 1 181 21 is_stmt 1 discriminator 1 view .LVU402
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 45


 181:Src/main.c    **** 	if (bl_count >= 2) bl_freq = 0;
 1495              		.loc 1 181 29 is_stmt 0 discriminator 1 view .LVU403
 1496 0106 0F4B     		ldr	r3, .L71+4
 1497 0108 0022     		movs	r2, #0
 1498 010a 1A60     		str	r2, [r3]
 1499              	.L61:
 182:Src/main.c    **** 	if (br_count >= 2) br_freq = 0;
 1500              		.loc 1 182 2 is_stmt 1 view .LVU404
 182:Src/main.c    **** 	if (br_count >= 2) br_freq = 0;
 1501              		.loc 1 182 15 is_stmt 0 view .LVU405
 1502 010c 1F4B     		ldr	r3, .L71+76
 1503 010e 1B68     		ldr	r3, [r3]
 182:Src/main.c    **** 	if (br_count >= 2) br_freq = 0;
 1504              		.loc 1 182 5 view .LVU406
 1505 0110 012B     		cmp	r3, #1
 1506 0112 02DD     		ble	.L62
 182:Src/main.c    **** 	if (br_count >= 2) br_freq = 0;
 1507              		.loc 1 182 21 is_stmt 1 discriminator 1 view .LVU407
 182:Src/main.c    **** 	if (br_count >= 2) br_freq = 0;
 1508              		.loc 1 182 29 is_stmt 0 discriminator 1 view .LVU408
 1509 0114 0D4B     		ldr	r3, .L71+12
 1510 0116 0022     		movs	r2, #0
 1511 0118 1A60     		str	r2, [r3]
 1512              	.L62:
 183:Src/main.c    **** 	
 1513              		.loc 1 183 2 is_stmt 1 view .LVU409
 183:Src/main.c    **** 	
 1514              		.loc 1 183 15 is_stmt 0 view .LVU410
 1515 011a 1D4B     		ldr	r3, .L71+80
 1516 011c 1B68     		ldr	r3, [r3]
 183:Src/main.c    **** 	
 1517              		.loc 1 183 5 view .LVU411
 1518 011e 012B     		cmp	r3, #1
 1519 0120 83DD     		ble	.L63
 183:Src/main.c    **** 	
 1520              		.loc 1 183 21 is_stmt 1 discriminator 1 view .LVU412
 183:Src/main.c    **** 	
 1521              		.loc 1 183 29 is_stmt 0 discriminator 1 view .LVU413
 1522 0122 0B4B     		ldr	r3, .L71+16
 1523 0124 0022     		movs	r2, #0
 1524 0126 1A60     		str	r2, [r3]
 1525 0128 7FE7     		b	.L63
 1526              	.L69:
 193:Src/main.c    **** 	
 1527              		.loc 1 193 17 is_stmt 1 discriminator 1 view .LVU414
 1528 012a 4FF40051 		mov	r1, #8192
 1529 012e 1948     		ldr	r0, .L71+84
 1530 0130 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1531              	.LVL60:
 1532 0134 9AE7     		b	.L64
 1533              	.L70:
 195:Src/main.c    **** 	if (control > 255) control = 255;
 1534              		.loc 1 195 19 discriminator 1 view .LVU415
 195:Src/main.c    **** 	if (control > 255) control = 255;
 1535              		.loc 1 195 27 is_stmt 0 discriminator 1 view .LVU416
 1536 0136 0C4B     		ldr	r3, .L71+40
 1537 0138 0022     		movs	r2, #0
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 46


 1538 013a 1A60     		str	r2, [r3]
 1539 013c 9AE7     		b	.L65
 1540              	.L72:
 1541 013e 00BF     		.align	2
 1542              	.L71:
 1543 0140 00000000 		.word	.LANCHOR27
 1544 0144 00000000 		.word	.LANCHOR28
 1545 0148 00000000 		.word	.LANCHOR31
 1546 014c 00000000 		.word	.LANCHOR29
 1547 0150 00000000 		.word	.LANCHOR30
 1548 0154 00000000 		.word	.LANCHOR32
 1549 0158 00000000 		.word	.LANCHOR33
 1550 015c 00000000 		.word	.LANCHOR17
 1551 0160 00000000 		.word	.LANCHOR20
 1552 0164 00000000 		.word	.LANCHOR34
 1553 0168 00000000 		.word	.LANCHOR26
 1554 016c 00000000 		.word	hi2c1
 1555 0170 00000000 		.word	huart1
 1556 0174 00000000 		.word	.LANCHOR4
 1557 0178 00000000 		.word	.LANCHOR8
 1558 017c 00000000 		.word	.LANCHOR12
 1559 0180 00000000 		.word	.LANCHOR16
 1560 0184 00000000 		.word	.LANCHOR3
 1561 0188 00000000 		.word	.LANCHOR7
 1562 018c 00000000 		.word	.LANCHOR11
 1563 0190 00000000 		.word	.LANCHOR15
 1564 0194 00100140 		.word	1073811456
 1565              	.LBE6:
 1566              		.cfi_endproc
 1567              	.LFE66:
 1569              		.section	.text.Error_Handler,"ax",%progbits
 1570              		.align	1
 1571              		.global	Error_Handler
 1572              		.syntax unified
 1573              		.thumb
 1574              		.thumb_func
 1575              		.fpu softvfp
 1577              	Error_Handler:
 1578              	.LFB82:
 687:Src/main.c    **** 
 688:Src/main.c    **** /* USER CODE BEGIN 4 */
 689:Src/main.c    **** 
 690:Src/main.c    **** /* USER CODE END 4 */
 691:Src/main.c    **** 
 692:Src/main.c    **** /**
 693:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 694:Src/main.c    ****   * @retval None
 695:Src/main.c    ****   */
 696:Src/main.c    **** void Error_Handler(void)
 697:Src/main.c    **** {
 1579              		.loc 1 697 1 is_stmt 1 view -0
 1580              		.cfi_startproc
 1581              		@ args = 0, pretend = 0, frame = 0
 1582              		@ frame_needed = 0, uses_anonymous_args = 0
 1583              		@ link register save eliminated.
 698:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 699:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 47


 700:Src/main.c    **** 
 701:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 702:Src/main.c    **** }
 1584              		.loc 1 702 1 view .LVU418
 1585 0000 7047     		bx	lr
 1586              		.cfi_endproc
 1587              	.LFE82:
 1589              		.global	br_freq
 1590              		.global	br_delta
 1591              		.global	br_count
 1592              		.global	br_old
 1593              		.global	br_new
 1594              		.global	bl_freq
 1595              		.global	bl_delta
 1596              		.global	bl_count
 1597              		.global	bl_old
 1598              		.global	bl_new
 1599              		.global	fr_freq
 1600              		.global	fr_delta
 1601              		.global	fr_count
 1602              		.global	fr_old
 1603              		.global	fr_new
 1604              		.global	fl_freq
 1605              		.global	fl_delta
 1606              		.global	fl_count
 1607              		.global	fl_old
 1608              		.global	fl_new
 1609              		.global	tc_on
 1610              		.global	back_avg
 1611              		.global	front_avg
 1612              		.global	prev_error
 1613              		.global	error
 1614              		.global	slip
 1615              		.global	control
 1616              		.global	derivative
 1617              		.global	integral
 1618              		.global	dt
 1619              		.global	pid_rate
 1620              		.global	kd
 1621              		.global	ki
 1622              		.global	kp
 1623              		.global	bias
 1624              		.global	setpoint
 1625              		.comm	huart1,64,4
 1626              		.comm	htim3,64,4
 1627              		.comm	htim2,64,4
 1628              		.comm	hspi1,88,4
 1629              		.comm	hi2c1,84,4
 1630              		.comm	hadc1,48,4
 1631              		.section	.bss.back_avg,"aw",%nobits
 1632              		.align	2
 1633              		.set	.LANCHOR32,. + 0
 1636              	back_avg:
 1637 0000 00000000 		.space	4
 1638              		.section	.bss.bl_count,"aw",%nobits
 1639              		.align	2
 1640              		.set	.LANCHOR11,. + 0
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 48


 1643              	bl_count:
 1644 0000 00000000 		.space	4
 1645              		.section	.bss.bl_delta,"aw",%nobits
 1646              		.align	2
 1647              		.set	.LANCHOR12,. + 0
 1650              	bl_delta:
 1651 0000 00000000 		.space	4
 1652              		.section	.bss.bl_freq,"aw",%nobits
 1653              		.align	2
 1654              		.set	.LANCHOR29,. + 0
 1657              	bl_freq:
 1658 0000 00000000 		.space	4
 1659              		.section	.bss.bl_new,"aw",%nobits
 1660              		.align	2
 1661              		.set	.LANCHOR9,. + 0
 1664              	bl_new:
 1665 0000 00000000 		.space	4
 1666              		.section	.bss.bl_old,"aw",%nobits
 1667              		.align	2
 1668              		.set	.LANCHOR10,. + 0
 1671              	bl_old:
 1672 0000 00000000 		.space	4
 1673              		.section	.bss.br_count,"aw",%nobits
 1674              		.align	2
 1675              		.set	.LANCHOR15,. + 0
 1678              	br_count:
 1679 0000 00000000 		.space	4
 1680              		.section	.bss.br_delta,"aw",%nobits
 1681              		.align	2
 1682              		.set	.LANCHOR16,. + 0
 1685              	br_delta:
 1686 0000 00000000 		.space	4
 1687              		.section	.bss.br_freq,"aw",%nobits
 1688              		.align	2
 1689              		.set	.LANCHOR30,. + 0
 1692              	br_freq:
 1693 0000 00000000 		.space	4
 1694              		.section	.bss.br_new,"aw",%nobits
 1695              		.align	2
 1696              		.set	.LANCHOR13,. + 0
 1699              	br_new:
 1700 0000 00000000 		.space	4
 1701              		.section	.bss.br_old,"aw",%nobits
 1702              		.align	2
 1703              		.set	.LANCHOR14,. + 0
 1706              	br_old:
 1707 0000 00000000 		.space	4
 1708              		.section	.bss.control,"aw",%nobits
 1709              		.align	2
 1710              		.set	.LANCHOR26,. + 0
 1713              	control:
 1714 0000 00000000 		.space	4
 1715              		.section	.bss.derivative,"aw",%nobits
 1716              		.align	2
 1717              		.set	.LANCHOR21,. + 0
 1720              	derivative:
 1721 0000 00000000 		.space	4
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 49


 1722              		.section	.bss.error,"aw",%nobits
 1723              		.align	2
 1724              		.set	.LANCHOR17,. + 0
 1727              	error:
 1728 0000 00000000 		.space	4
 1729              		.section	.bss.fl_count,"aw",%nobits
 1730              		.align	2
 1731              		.set	.LANCHOR3,. + 0
 1734              	fl_count:
 1735 0000 00000000 		.space	4
 1736              		.section	.bss.fl_delta,"aw",%nobits
 1737              		.align	2
 1738              		.set	.LANCHOR4,. + 0
 1741              	fl_delta:
 1742 0000 00000000 		.space	4
 1743              		.section	.bss.fl_freq,"aw",%nobits
 1744              		.align	2
 1745              		.set	.LANCHOR27,. + 0
 1748              	fl_freq:
 1749 0000 00000000 		.space	4
 1750              		.section	.bss.fl_new,"aw",%nobits
 1751              		.align	2
 1752              		.set	.LANCHOR1,. + 0
 1755              	fl_new:
 1756 0000 00000000 		.space	4
 1757              		.section	.bss.fl_old,"aw",%nobits
 1758              		.align	2
 1759              		.set	.LANCHOR2,. + 0
 1762              	fl_old:
 1763 0000 00000000 		.space	4
 1764              		.section	.bss.fr_count,"aw",%nobits
 1765              		.align	2
 1766              		.set	.LANCHOR7,. + 0
 1769              	fr_count:
 1770 0000 00000000 		.space	4
 1771              		.section	.bss.fr_delta,"aw",%nobits
 1772              		.align	2
 1773              		.set	.LANCHOR8,. + 0
 1776              	fr_delta:
 1777 0000 00000000 		.space	4
 1778              		.section	.bss.fr_freq,"aw",%nobits
 1779              		.align	2
 1780              		.set	.LANCHOR28,. + 0
 1783              	fr_freq:
 1784 0000 00000000 		.space	4
 1785              		.section	.bss.fr_new,"aw",%nobits
 1786              		.align	2
 1787              		.set	.LANCHOR5,. + 0
 1790              	fr_new:
 1791 0000 00000000 		.space	4
 1792              		.section	.bss.fr_old,"aw",%nobits
 1793              		.align	2
 1794              		.set	.LANCHOR6,. + 0
 1797              	fr_old:
 1798 0000 00000000 		.space	4
 1799              		.section	.bss.front_avg,"aw",%nobits
 1800              		.align	2
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 50


 1801              		.set	.LANCHOR31,. + 0
 1804              	front_avg:
 1805 0000 00000000 		.space	4
 1806              		.section	.bss.integral,"aw",%nobits
 1807              		.align	2
 1808              		.set	.LANCHOR19,. + 0
 1811              	integral:
 1812 0000 00000000 		.space	4
 1813              		.section	.bss.kd,"aw",%nobits
 1814              		.align	2
 1815              		.set	.LANCHOR25,. + 0
 1818              	kd:
 1819 0000 00000000 		.space	4
 1820              		.section	.bss.ki,"aw",%nobits
 1821              		.align	2
 1822              		.set	.LANCHOR24,. + 0
 1825              	ki:
 1826 0000 00000000 		.space	4
 1827              		.section	.bss.prev_error,"aw",%nobits
 1828              		.align	2
 1829              		.set	.LANCHOR20,. + 0
 1832              	prev_error:
 1833 0000 00000000 		.space	4
 1834              		.section	.bss.setpoint,"aw",%nobits
 1835              		.align	2
 1836              		.set	.LANCHOR34,. + 0
 1839              	setpoint:
 1840 0000 00000000 		.space	4
 1841              		.section	.bss.slip,"aw",%nobits
 1842              		.align	2
 1843              		.set	.LANCHOR33,. + 0
 1846              	slip:
 1847 0000 00000000 		.space	4
 1848              		.section	.data.bias,"aw"
 1849              		.align	2
 1850              		.set	.LANCHOR23,. + 0
 1853              	bias:
 1854 0000 32000000 		.word	50
 1855              		.section	.data.dt,"aw"
 1856              		.align	2
 1857              		.set	.LANCHOR18,. + 0
 1860              	dt:
 1861 0000 0AD7233D 		.word	1025758986
 1862              		.section	.data.kp,"aw"
 1863              		.align	2
 1864              		.set	.LANCHOR22,. + 0
 1867              	kp:
 1868 0000 0000803F 		.word	1065353216
 1869              		.section	.data.pid_rate,"aw"
 1870              		.align	2
 1871              		.set	.LANCHOR0,. + 0
 1874              	pid_rate:
 1875 0000 19000000 		.word	25
 1876              		.section	.data.tc_on,"aw"
 1877              		.align	2
 1880              	tc_on:
 1881 0000 01000000 		.word	1
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 51


 1882              		.text
 1883              	.Letext0:
 1884              		.file 2 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 1885              		.file 3 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 1886              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1887              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1888              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1889              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1890              		.file 8 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 1891              		.file 9 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 1892              		.file 10 "c:\\arm-gcc\\8-2018-q4-major\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 1893              		.file 11 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 1894              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1895              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1896              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1897              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1898              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1899              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1900              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1901              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1902              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1903              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1904              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1905              		.file 23 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1906              		.file 24 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1907              		.file 25 "<built-in>"
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 52


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\cygwin64\tmp\cccR7i0n.s:16     .text.MX_GPIO_Init:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\cygwin64\tmp\cccR7i0n.s:181    .text.MX_GPIO_Init:000000c4 $d
C:\cygwin64\tmp\cccR7i0n.s:189    .text.MX_I2C1_Init:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:195    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\cygwin64\tmp\cccR7i0n.s:247    .text.MX_I2C1_Init:00000028 $d
                            *COM*:00000054 hi2c1
C:\cygwin64\tmp\cccR7i0n.s:254    .text.MX_SPI1_Init:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:260    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\cygwin64\tmp\cccR7i0n.s:322    .text.MX_SPI1_Init:00000030 $d
                            *COM*:00000058 hspi1
C:\cygwin64\tmp\cccR7i0n.s:328    .text.MX_USART1_UART_Init:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:334    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\cygwin64\tmp\cccR7i0n.s:383    .text.MX_USART1_UART_Init:00000024 $d
                            *COM*:00000040 huart1
C:\cygwin64\tmp\cccR7i0n.s:389    .text.MX_TIM2_Init:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:395    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\cygwin64\tmp\cccR7i0n.s:483    .text.MX_TIM2_Init:00000054 $d
                            *COM*:00000040 htim2
C:\cygwin64\tmp\cccR7i0n.s:488    .text.MX_TIM3_Init:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:494    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\cygwin64\tmp\cccR7i0n.s:586    .text.MX_TIM3_Init:0000005c $d
                            *COM*:00000040 htim3
C:\cygwin64\tmp\cccR7i0n.s:593    .text.MX_ADC1_Init:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:599    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\cygwin64\tmp\cccR7i0n.s:676    .text.MX_ADC1_Init:00000040 $d
                            *COM*:00000030 hadc1
C:\cygwin64\tmp\cccR7i0n.s:682    .text.EXTI0_IRQHandler:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:689    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
C:\cygwin64\tmp\cccR7i0n.s:740    .text.EXTI0_IRQHandler:00000030 $d
C:\cygwin64\tmp\cccR7i0n.s:749    .text.EXTI1_IRQHandler:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:756    .text.EXTI1_IRQHandler:00000000 EXTI1_IRQHandler
C:\cygwin64\tmp\cccR7i0n.s:807    .text.EXTI1_IRQHandler:00000030 $d
C:\cygwin64\tmp\cccR7i0n.s:816    .text.EXTI2_IRQHandler:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:823    .text.EXTI2_IRQHandler:00000000 EXTI2_IRQHandler
C:\cygwin64\tmp\cccR7i0n.s:874    .text.EXTI2_IRQHandler:00000030 $d
C:\cygwin64\tmp\cccR7i0n.s:883    .text.EXTI3_IRQHandler:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:890    .text.EXTI3_IRQHandler:00000000 EXTI3_IRQHandler
C:\cygwin64\tmp\cccR7i0n.s:941    .text.EXTI3_IRQHandler:00000030 $d
C:\cygwin64\tmp\cccR7i0n.s:950    .text.TIM2_IRQHandler:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:957    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
C:\cygwin64\tmp\cccR7i0n.s:1001   .text.TIM2_IRQHandler:0000002c $d
C:\cygwin64\tmp\cccR7i0n.s:1015   .text.TIM3_IRQHandler:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:1022   .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
C:\cygwin64\tmp\cccR7i0n.s:1126   .text.TIM3_IRQHandler:00000090 $d
C:\cygwin64\tmp\cccR7i0n.s:1141   .text.SPI1_IRQHandler:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:1148   .text.SPI1_IRQHandler:00000000 SPI1_IRQHandler
C:\cygwin64\tmp\cccR7i0n.s:1168   .text.SPI1_IRQHandler:0000000c $d
C:\cygwin64\tmp\cccR7i0n.s:1173   .text.SystemClock_Config:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:1180   .text.SystemClock_Config:00000000 SystemClock_Config
C:\cygwin64\tmp\cccR7i0n.s:1277   .text.main:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:1284   .text.main:00000000 main
C:\cygwin64\tmp\cccR7i0n.s:1543   .text.main:00000140 $d
C:\cygwin64\tmp\cccR7i0n.s:1570   .text.Error_Handler:00000000 $t
C:\cygwin64\tmp\cccR7i0n.s:1577   .text.Error_Handler:00000000 Error_Handler
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 53


C:\cygwin64\tmp\cccR7i0n.s:1692   .bss.br_freq:00000000 br_freq
C:\cygwin64\tmp\cccR7i0n.s:1685   .bss.br_delta:00000000 br_delta
C:\cygwin64\tmp\cccR7i0n.s:1678   .bss.br_count:00000000 br_count
C:\cygwin64\tmp\cccR7i0n.s:1706   .bss.br_old:00000000 br_old
C:\cygwin64\tmp\cccR7i0n.s:1699   .bss.br_new:00000000 br_new
C:\cygwin64\tmp\cccR7i0n.s:1657   .bss.bl_freq:00000000 bl_freq
C:\cygwin64\tmp\cccR7i0n.s:1650   .bss.bl_delta:00000000 bl_delta
C:\cygwin64\tmp\cccR7i0n.s:1643   .bss.bl_count:00000000 bl_count
C:\cygwin64\tmp\cccR7i0n.s:1671   .bss.bl_old:00000000 bl_old
C:\cygwin64\tmp\cccR7i0n.s:1664   .bss.bl_new:00000000 bl_new
C:\cygwin64\tmp\cccR7i0n.s:1783   .bss.fr_freq:00000000 fr_freq
C:\cygwin64\tmp\cccR7i0n.s:1776   .bss.fr_delta:00000000 fr_delta
C:\cygwin64\tmp\cccR7i0n.s:1769   .bss.fr_count:00000000 fr_count
C:\cygwin64\tmp\cccR7i0n.s:1797   .bss.fr_old:00000000 fr_old
C:\cygwin64\tmp\cccR7i0n.s:1790   .bss.fr_new:00000000 fr_new
C:\cygwin64\tmp\cccR7i0n.s:1748   .bss.fl_freq:00000000 fl_freq
C:\cygwin64\tmp\cccR7i0n.s:1741   .bss.fl_delta:00000000 fl_delta
C:\cygwin64\tmp\cccR7i0n.s:1734   .bss.fl_count:00000000 fl_count
C:\cygwin64\tmp\cccR7i0n.s:1762   .bss.fl_old:00000000 fl_old
C:\cygwin64\tmp\cccR7i0n.s:1755   .bss.fl_new:00000000 fl_new
C:\cygwin64\tmp\cccR7i0n.s:1880   .data.tc_on:00000000 tc_on
C:\cygwin64\tmp\cccR7i0n.s:1636   .bss.back_avg:00000000 back_avg
C:\cygwin64\tmp\cccR7i0n.s:1804   .bss.front_avg:00000000 front_avg
C:\cygwin64\tmp\cccR7i0n.s:1832   .bss.prev_error:00000000 prev_error
C:\cygwin64\tmp\cccR7i0n.s:1727   .bss.error:00000000 error
C:\cygwin64\tmp\cccR7i0n.s:1846   .bss.slip:00000000 slip
C:\cygwin64\tmp\cccR7i0n.s:1713   .bss.control:00000000 control
C:\cygwin64\tmp\cccR7i0n.s:1720   .bss.derivative:00000000 derivative
C:\cygwin64\tmp\cccR7i0n.s:1811   .bss.integral:00000000 integral
C:\cygwin64\tmp\cccR7i0n.s:1860   .data.dt:00000000 dt
C:\cygwin64\tmp\cccR7i0n.s:1874   .data.pid_rate:00000000 pid_rate
C:\cygwin64\tmp\cccR7i0n.s:1818   .bss.kd:00000000 kd
C:\cygwin64\tmp\cccR7i0n.s:1825   .bss.ki:00000000 ki
C:\cygwin64\tmp\cccR7i0n.s:1867   .data.kp:00000000 kp
C:\cygwin64\tmp\cccR7i0n.s:1853   .data.bias:00000000 bias
C:\cygwin64\tmp\cccR7i0n.s:1839   .bss.setpoint:00000000 setpoint
C:\cygwin64\tmp\cccR7i0n.s:1632   .bss.back_avg:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1639   .bss.bl_count:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1646   .bss.bl_delta:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1653   .bss.bl_freq:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1660   .bss.bl_new:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1667   .bss.bl_old:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1674   .bss.br_count:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1681   .bss.br_delta:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1688   .bss.br_freq:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1695   .bss.br_new:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1702   .bss.br_old:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1709   .bss.control:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1716   .bss.derivative:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1723   .bss.error:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1730   .bss.fl_count:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1737   .bss.fl_delta:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1744   .bss.fl_freq:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1751   .bss.fl_new:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1758   .bss.fl_old:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1765   .bss.fr_count:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1772   .bss.fr_delta:00000000 $d
ARM GAS  C:\cygwin64\tmp\cccR7i0n.s 			page 54


C:\cygwin64\tmp\cccR7i0n.s:1779   .bss.fr_freq:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1786   .bss.fr_new:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1793   .bss.fr_old:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1800   .bss.front_avg:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1807   .bss.integral:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1814   .bss.kd:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1821   .bss.ki:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1828   .bss.prev_error:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1835   .bss.setpoint:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1842   .bss.slip:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1849   .data.bias:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1856   .data.dt:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1863   .data.kp:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1870   .data.pid_rate:00000000 $d
C:\cygwin64\tmp\cccR7i0n.s:1877   .data.tc_on:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_I2C_Init
HAL_SPI_Init
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Start_IT
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_IRQHandler
__aeabi_i2f
__aeabi_fmul
__aeabi_fadd
__aeabi_fdiv
__aeabi_f2iz
HAL_SPI_IRQHandler
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_I2C_Master_Transmit
HAL_UART_Transmit
HAL_Delay
HAL_GPIO_TogglePin
