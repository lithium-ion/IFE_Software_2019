ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB71:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 2


  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  50:Src/main.c    **** /* USER CODE BEGIN PTD */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PTD */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  55:Src/main.c    **** /* USER CODE BEGIN PD */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN PM */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PM */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  65:Src/main.c    **** ADC_HandleTypeDef hadc1;
  66:Src/main.c    **** 
  67:Src/main.c    **** UART_HandleTypeDef huart1;
  68:Src/main.c    **** 
  69:Src/main.c    **** ADC_ChannelConfTypeDef sConfig = {0};
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE BEGIN PV */
  72:Src/main.c    **** int count = 0;
  73:Src/main.c    **** /* USER CODE END PV */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  76:Src/main.c    **** void SystemClock_Config(void);
  77:Src/main.c    **** static void MX_GPIO_Init(void);
  78:Src/main.c    **** static void MX_ADC1_Init(void);
  79:Src/main.c    **** static void MX_USART1_UART_Init(void);
  80:Src/main.c    **** /* USER CODE BEGIN PFP */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* USER CODE END PFP */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  85:Src/main.c    **** /* USER CODE BEGIN 0 */
  86:Src/main.c    **** 
  87:Src/main.c    **** /* USER CODE END 0 */
  88:Src/main.c    **** 
  89:Src/main.c    **** /**
  90:Src/main.c    ****   * @brief  The application entry point.
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 3


  91:Src/main.c    ****   * @retval int
  92:Src/main.c    ****   */
  93:Src/main.c    **** int main(void)
  94:Src/main.c    **** {
  95:Src/main.c    ****   /* USER CODE BEGIN 1 */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE END 1 */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 102:Src/main.c    ****   HAL_Init();
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE BEGIN Init */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE END Init */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Configure the system clock */
 109:Src/main.c    ****   SystemClock_Config();
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE END SysInit */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Initialize all configured peripherals */
 116:Src/main.c    ****   MX_GPIO_Init();
 117:Src/main.c    ****   MX_ADC1_Init();
 118:Src/main.c    ****   MX_USART1_UART_Init();
 119:Src/main.c    ****   /* USER CODE BEGIN 2 */
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* USER CODE END 2 */
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* Infinite loop */
 124:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 125:Src/main.c    ****   while (1)
 126:Src/main.c    ****   {
 127:Src/main.c    ****     /* USER CODE END WHILE */
 128:Src/main.c    **** 	HAL_ADC_Start_IT(&hadc1);
 129:Src/main.c    **** 	HAL_Delay(100);
 130:Src/main.c    ****     /* USER CODE BEGIN 3 */
 131:Src/main.c    ****   }
 132:Src/main.c    ****   /* USER CODE END 3 */
 133:Src/main.c    **** }
 134:Src/main.c    **** 
 135:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc) {
 136:Src/main.c    **** 	
 137:Src/main.c    **** 	if ((count % 2) == 0) {
 138:Src/main.c    **** 		sConfig.Channel = ADC_CHANNEL_0;
 139:Src/main.c    **** 		sConfig.Rank = ADC_REGULAR_RANK_1;
 140:Src/main.c    **** 		sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 141:Src/main.c    **** 		HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 142:Src/main.c    **** 	}
 143:Src/main.c    **** 	
 144:Src/main.c    **** 	if (count % 2) {
 145:Src/main.c    **** 		sConfig.Channel = ADC_CHANNEL_1;
 146:Src/main.c    **** 		sConfig.Rank = ADC_REGULAR_RANK_1;
 147:Src/main.c    **** 		sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 4


 148:Src/main.c    **** 		HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 149:Src/main.c    **** 	}
 150:Src/main.c    **** 	
 151:Src/main.c    **** 	count++;
 152:Src/main.c    **** 	
 153:Src/main.c    **** 	int val = HAL_ADC_GetValue(&hadc1);
 154:Src/main.c    **** 	if (val > 10) {
 155:Src/main.c    **** 		HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 156:Src/main.c    **** 	}
 157:Src/main.c    **** 	
 158:Src/main.c    **** }
 159:Src/main.c    **** 
 160:Src/main.c    **** /**
 161:Src/main.c    ****   * @brief System Clock Configuration
 162:Src/main.c    ****   * @retval None
 163:Src/main.c    ****   */
 164:Src/main.c    **** void SystemClock_Config(void)
 165:Src/main.c    **** {
 166:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 167:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 168:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 169:Src/main.c    **** 
 170:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 171:Src/main.c    ****   */
 172:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 173:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 174:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 175:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 176:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 177:Src/main.c    ****   {
 178:Src/main.c    ****     Error_Handler();
 179:Src/main.c    ****   }
 180:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 181:Src/main.c    ****   */
 182:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 183:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 184:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 185:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 186:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 187:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 188:Src/main.c    **** 
 189:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 190:Src/main.c    ****   {
 191:Src/main.c    ****     Error_Handler();
 192:Src/main.c    ****   }
 193:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 194:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 195:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 196:Src/main.c    ****   {
 197:Src/main.c    ****     Error_Handler();
 198:Src/main.c    ****   }
 199:Src/main.c    **** }
 200:Src/main.c    **** 
 201:Src/main.c    **** /**
 202:Src/main.c    ****   * @brief ADC1 Initialization Function
 203:Src/main.c    ****   * @param None
 204:Src/main.c    ****   * @retval None
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 5


 205:Src/main.c    ****   */
 206:Src/main.c    **** static void MX_ADC1_Init(void)
 207:Src/main.c    **** {
 208:Src/main.c    **** 
 209:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 210:Src/main.c    **** 
 211:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 212:Src/main.c    **** 
 213:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 214:Src/main.c    **** 
 215:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 216:Src/main.c    ****   /**Common config 
 217:Src/main.c    ****   */
 218:Src/main.c    ****   hadc1.Instance = ADC1;
 219:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE; //enable
 220:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 221:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 222:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 223:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 224:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1; //4
 225:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 226:Src/main.c    ****   {
 227:Src/main.c    ****     Error_Handler();
 228:Src/main.c    ****   }
 229:Src/main.c    ****   /**Configure Regular Channel 
 230:Src/main.c    ****   */
 231:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_0;
 232:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 233:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 234:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 235:Src/main.c    ****   {
 236:Src/main.c    ****     Error_Handler();
 237:Src/main.c    ****   }
 238:Src/main.c    ****   /**Configure Regular Channel 
 239:Src/main.c    ****   */
 240:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_1;
 241:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 242:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 243:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 244:Src/main.c    ****   {
 245:Src/main.c    ****     Error_Handler();
 246:Src/main.c    ****   }
 247:Src/main.c    ****   /**Configure Regular Channel 
 248:Src/main.c    ****   */
 249:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_2;
 250:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 251:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 252:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 253:Src/main.c    ****   {
 254:Src/main.c    ****     Error_Handler();
 255:Src/main.c    ****   }
 256:Src/main.c    ****   /**Configure Regular Channel 
 257:Src/main.c    ****   */
 258:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_3;
 259:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 260:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 261:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 6


 262:Src/main.c    ****   {
 263:Src/main.c    ****     Error_Handler();
 264:Src/main.c    ****   }
 265:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 266:Src/main.c    ****   
 267:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 268:Src/main.c    **** 
 269:Src/main.c    **** }
 270:Src/main.c    **** 
 271:Src/main.c    **** /**
 272:Src/main.c    ****   * @brief USART1 Initialization Function
 273:Src/main.c    ****   * @param None
 274:Src/main.c    ****   * @retval None
 275:Src/main.c    ****   */
 276:Src/main.c    **** static void MX_USART1_UART_Init(void)
 277:Src/main.c    **** {
 278:Src/main.c    **** 
 279:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 280:Src/main.c    **** 
 281:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 282:Src/main.c    **** 
 283:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 286:Src/main.c    ****   huart1.Instance = USART1;
 287:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 288:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 289:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 290:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 291:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 292:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 293:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 294:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 295:Src/main.c    ****   {
 296:Src/main.c    ****     Error_Handler();
 297:Src/main.c    ****   }
 298:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 299:Src/main.c    **** 
 300:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 301:Src/main.c    **** 
 302:Src/main.c    **** }
 303:Src/main.c    **** 
 304:Src/main.c    **** /**
 305:Src/main.c    ****   * @brief GPIO Initialization Function
 306:Src/main.c    ****   * @param None
 307:Src/main.c    ****   * @retval None
 308:Src/main.c    ****   */
 309:Src/main.c    **** static void MX_GPIO_Init(void)
 310:Src/main.c    **** {
  26              		.loc 1 310 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 7


  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 311:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 311 3 view .LVU1
  40              		.loc 1 311 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0294     		str	r4, [sp, #8]
  43 0008 0394     		str	r4, [sp, #12]
  44 000a 0494     		str	r4, [sp, #16]
  45 000c 0594     		str	r4, [sp, #20]
 312:Src/main.c    **** 
 313:Src/main.c    ****   /* GPIO Ports Clock Enable */
 314:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 314 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 314 3 view .LVU4
  49              		.loc 1 314 3 view .LVU5
  50 000e 144B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F01002 		orr	r2, r2, #16
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 314 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F01002 		and	r2, r2, #16
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 314 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE2:
 315:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  61              		.loc 1 315 3 view .LVU8
  62              	.LBB3:
  63              		.loc 1 315 3 view .LVU9
  64              		.loc 1 315 3 view .LVU10
  65 0022 9A69     		ldr	r2, [r3, #24]
  66 0024 42F00402 		orr	r2, r2, #4
  67 0028 9A61     		str	r2, [r3, #24]
  68              		.loc 1 315 3 view .LVU11
  69 002a 9B69     		ldr	r3, [r3, #24]
  70 002c 03F00403 		and	r3, r3, #4
  71 0030 0193     		str	r3, [sp, #4]
  72              		.loc 1 315 3 view .LVU12
  73 0032 019B     		ldr	r3, [sp, #4]
  74              	.LBE3:
 316:Src/main.c    **** 
 317:Src/main.c    ****   /*Configure GPIO pin Output Level */
 318:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  75              		.loc 1 318 3 view .LVU13
  76 0034 0B4D     		ldr	r5, .L3+4
  77 0036 2246     		mov	r2, r4
  78 0038 4FF40051 		mov	r1, #8192
  79 003c 2846     		mov	r0, r5
  80 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  81              	.LVL0:
 319:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 8


 320:Src/main.c    ****   /*Configure GPIO pin : PC13 */
 321:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  82              		.loc 1 321 3 view .LVU14
  83              		.loc 1 321 23 is_stmt 0 view .LVU15
  84 0042 4FF40053 		mov	r3, #8192
  85 0046 0293     		str	r3, [sp, #8]
 322:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  86              		.loc 1 322 3 is_stmt 1 view .LVU16
  87              		.loc 1 322 24 is_stmt 0 view .LVU17
  88 0048 0123     		movs	r3, #1
  89 004a 0393     		str	r3, [sp, #12]
 323:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  90              		.loc 1 323 3 is_stmt 1 view .LVU18
  91              		.loc 1 323 24 is_stmt 0 view .LVU19
  92 004c 0494     		str	r4, [sp, #16]
 324:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  93              		.loc 1 324 3 is_stmt 1 view .LVU20
  94              		.loc 1 324 25 is_stmt 0 view .LVU21
  95 004e 0223     		movs	r3, #2
  96 0050 0593     		str	r3, [sp, #20]
 325:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  97              		.loc 1 325 3 is_stmt 1 view .LVU22
  98 0052 02A9     		add	r1, sp, #8
  99 0054 2846     		mov	r0, r5
 100 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 101              	.LVL1:
 326:Src/main.c    **** 
 327:Src/main.c    **** }
 102              		.loc 1 327 1 is_stmt 0 view .LVU23
 103 005a 07B0     		add	sp, sp, #28
 104              	.LCFI2:
 105              		.cfi_def_cfa_offset 12
 106              		@ sp needed
 107 005c 30BD     		pop	{r4, r5, pc}
 108              	.L4:
 109 005e 00BF     		.align	2
 110              	.L3:
 111 0060 00100240 		.word	1073876992
 112 0064 00100140 		.word	1073811456
 113              		.cfi_endproc
 114              	.LFE71:
 116              		.section	.text.MX_ADC1_Init,"ax",%progbits
 117              		.align	1
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu softvfp
 123              	MX_ADC1_Init:
 124              	.LFB69:
 207:Src/main.c    **** 
 125              		.loc 1 207 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 130              	.LCFI3:
 131              		.cfi_def_cfa_offset 24
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 9


 132              		.cfi_offset 3, -24
 133              		.cfi_offset 4, -20
 134              		.cfi_offset 5, -16
 135              		.cfi_offset 6, -12
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 218:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE; //enable
 138              		.loc 1 218 3 view .LVU25
 218:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE; //enable
 139              		.loc 1 218 18 is_stmt 0 view .LVU26
 140 0002 184D     		ldr	r5, .L7
 141 0004 184B     		ldr	r3, .L7+4
 142 0006 2B60     		str	r3, [r5]
 219:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 143              		.loc 1 219 3 is_stmt 1 view .LVU27
 219:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 144              		.loc 1 219 27 is_stmt 0 view .LVU28
 145 0008 0026     		movs	r6, #0
 146 000a AE60     		str	r6, [r5, #8]
 220:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 147              		.loc 1 220 3 is_stmt 1 view .LVU29
 220:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 148              		.loc 1 220 33 is_stmt 0 view .LVU30
 149 000c EE60     		str	r6, [r5, #12]
 221:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 150              		.loc 1 221 3 is_stmt 1 view .LVU31
 221:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 151              		.loc 1 221 36 is_stmt 0 view .LVU32
 152 000e 6E61     		str	r6, [r5, #20]
 222:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 153              		.loc 1 222 3 is_stmt 1 view .LVU33
 222:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 154              		.loc 1 222 31 is_stmt 0 view .LVU34
 155 0010 4FF46023 		mov	r3, #917504
 156 0014 EB61     		str	r3, [r5, #28]
 223:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1; //4
 157              		.loc 1 223 3 is_stmt 1 view .LVU35
 223:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1; //4
 158              		.loc 1 223 24 is_stmt 0 view .LVU36
 159 0016 6E60     		str	r6, [r5, #4]
 224:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 160              		.loc 1 224 3 is_stmt 1 view .LVU37
 224:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 161              		.loc 1 224 30 is_stmt 0 view .LVU38
 162 0018 0127     		movs	r7, #1
 163 001a 2F61     		str	r7, [r5, #16]
 225:Src/main.c    ****   {
 164              		.loc 1 225 3 is_stmt 1 view .LVU39
 225:Src/main.c    ****   {
 165              		.loc 1 225 7 is_stmt 0 view .LVU40
 166 001c 2846     		mov	r0, r5
 167 001e FFF7FEFF 		bl	HAL_ADC_Init
 168              	.LVL2:
 231:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 169              		.loc 1 231 3 is_stmt 1 view .LVU41
 231:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 170              		.loc 1 231 19 is_stmt 0 view .LVU42
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 10


 171 0022 124C     		ldr	r4, .L7+8
 172 0024 2660     		str	r6, [r4]
 232:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 173              		.loc 1 232 3 is_stmt 1 view .LVU43
 232:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 174              		.loc 1 232 16 is_stmt 0 view .LVU44
 175 0026 6760     		str	r7, [r4, #4]
 233:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 176              		.loc 1 233 3 is_stmt 1 view .LVU45
 233:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 177              		.loc 1 233 24 is_stmt 0 view .LVU46
 178 0028 A660     		str	r6, [r4, #8]
 234:Src/main.c    ****   {
 179              		.loc 1 234 3 is_stmt 1 view .LVU47
 234:Src/main.c    ****   {
 180              		.loc 1 234 7 is_stmt 0 view .LVU48
 181 002a 2146     		mov	r1, r4
 182 002c 2846     		mov	r0, r5
 183 002e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 184              	.LVL3:
 240:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 185              		.loc 1 240 3 is_stmt 1 view .LVU49
 240:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 186              		.loc 1 240 19 is_stmt 0 view .LVU50
 187 0032 2760     		str	r7, [r4]
 241:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 188              		.loc 1 241 3 is_stmt 1 view .LVU51
 241:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 189              		.loc 1 241 16 is_stmt 0 view .LVU52
 190 0034 0227     		movs	r7, #2
 191 0036 6760     		str	r7, [r4, #4]
 242:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 192              		.loc 1 242 3 is_stmt 1 view .LVU53
 242:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 193              		.loc 1 242 24 is_stmt 0 view .LVU54
 194 0038 A660     		str	r6, [r4, #8]
 243:Src/main.c    ****   {
 195              		.loc 1 243 3 is_stmt 1 view .LVU55
 243:Src/main.c    ****   {
 196              		.loc 1 243 7 is_stmt 0 view .LVU56
 197 003a 2146     		mov	r1, r4
 198 003c 2846     		mov	r0, r5
 199 003e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 200              	.LVL4:
 249:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 201              		.loc 1 249 3 is_stmt 1 view .LVU57
 249:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 202              		.loc 1 249 19 is_stmt 0 view .LVU58
 203 0042 2760     		str	r7, [r4]
 250:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 204              		.loc 1 250 3 is_stmt 1 view .LVU59
 250:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 205              		.loc 1 250 16 is_stmt 0 view .LVU60
 206 0044 0327     		movs	r7, #3
 207 0046 6760     		str	r7, [r4, #4]
 251:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 208              		.loc 1 251 3 is_stmt 1 view .LVU61
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 11


 251:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 209              		.loc 1 251 24 is_stmt 0 view .LVU62
 210 0048 A660     		str	r6, [r4, #8]
 252:Src/main.c    ****   {
 211              		.loc 1 252 3 is_stmt 1 view .LVU63
 252:Src/main.c    ****   {
 212              		.loc 1 252 7 is_stmt 0 view .LVU64
 213 004a 2146     		mov	r1, r4
 214 004c 2846     		mov	r0, r5
 215 004e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 216              	.LVL5:
 258:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 217              		.loc 1 258 3 is_stmt 1 view .LVU65
 258:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 218              		.loc 1 258 19 is_stmt 0 view .LVU66
 219 0052 2760     		str	r7, [r4]
 259:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 220              		.loc 1 259 3 is_stmt 1 view .LVU67
 259:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 221              		.loc 1 259 16 is_stmt 0 view .LVU68
 222 0054 0423     		movs	r3, #4
 223 0056 6360     		str	r3, [r4, #4]
 260:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 224              		.loc 1 260 3 is_stmt 1 view .LVU69
 260:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 225              		.loc 1 260 24 is_stmt 0 view .LVU70
 226 0058 A660     		str	r6, [r4, #8]
 261:Src/main.c    ****   {
 227              		.loc 1 261 3 is_stmt 1 view .LVU71
 261:Src/main.c    ****   {
 228              		.loc 1 261 7 is_stmt 0 view .LVU72
 229 005a 2146     		mov	r1, r4
 230 005c 2846     		mov	r0, r5
 231 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 232              	.LVL6:
 269:Src/main.c    **** 
 233              		.loc 1 269 1 view .LVU73
 234 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 235              	.L8:
 236              		.align	2
 237              	.L7:
 238 0064 00000000 		.word	hadc1
 239 0068 00240140 		.word	1073816576
 240 006c 00000000 		.word	.LANCHOR0
 241              		.cfi_endproc
 242              	.LFE69:
 244              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 245              		.align	1
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu softvfp
 251              	MX_USART1_UART_Init:
 252              	.LFB70:
 277:Src/main.c    **** 
 253              		.loc 1 277 1 is_stmt 1 view -0
 254              		.cfi_startproc
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 12


 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257 0000 08B5     		push	{r3, lr}
 258              	.LCFI4:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 3, -8
 261              		.cfi_offset 14, -4
 286:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 262              		.loc 1 286 3 view .LVU75
 286:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 263              		.loc 1 286 19 is_stmt 0 view .LVU76
 264 0002 0848     		ldr	r0, .L11
 265 0004 084B     		ldr	r3, .L11+4
 266 0006 0360     		str	r3, [r0]
 287:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 267              		.loc 1 287 3 is_stmt 1 view .LVU77
 287:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 268              		.loc 1 287 24 is_stmt 0 view .LVU78
 269 0008 4FF4E133 		mov	r3, #115200
 270 000c 4360     		str	r3, [r0, #4]
 288:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 271              		.loc 1 288 3 is_stmt 1 view .LVU79
 288:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 272              		.loc 1 288 26 is_stmt 0 view .LVU80
 273 000e 0023     		movs	r3, #0
 274 0010 8360     		str	r3, [r0, #8]
 289:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 275              		.loc 1 289 3 is_stmt 1 view .LVU81
 289:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 276              		.loc 1 289 24 is_stmt 0 view .LVU82
 277 0012 C360     		str	r3, [r0, #12]
 290:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 278              		.loc 1 290 3 is_stmt 1 view .LVU83
 290:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 279              		.loc 1 290 22 is_stmt 0 view .LVU84
 280 0014 0361     		str	r3, [r0, #16]
 291:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 281              		.loc 1 291 3 is_stmt 1 view .LVU85
 291:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 282              		.loc 1 291 20 is_stmt 0 view .LVU86
 283 0016 0C22     		movs	r2, #12
 284 0018 4261     		str	r2, [r0, #20]
 292:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 285              		.loc 1 292 3 is_stmt 1 view .LVU87
 292:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 286              		.loc 1 292 25 is_stmt 0 view .LVU88
 287 001a 8361     		str	r3, [r0, #24]
 293:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 288              		.loc 1 293 3 is_stmt 1 view .LVU89
 293:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 289              		.loc 1 293 28 is_stmt 0 view .LVU90
 290 001c C361     		str	r3, [r0, #28]
 294:Src/main.c    ****   {
 291              		.loc 1 294 3 is_stmt 1 view .LVU91
 294:Src/main.c    ****   {
 292              		.loc 1 294 7 is_stmt 0 view .LVU92
 293 001e FFF7FEFF 		bl	HAL_UART_Init
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 13


 294              	.LVL7:
 302:Src/main.c    **** 
 295              		.loc 1 302 1 view .LVU93
 296 0022 08BD     		pop	{r3, pc}
 297              	.L12:
 298              		.align	2
 299              	.L11:
 300 0024 00000000 		.word	huart1
 301 0028 00380140 		.word	1073821696
 302              		.cfi_endproc
 303              	.LFE70:
 305              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 306              		.align	1
 307              		.global	HAL_ADC_ConvCpltCallback
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 311              		.fpu softvfp
 313              	HAL_ADC_ConvCpltCallback:
 314              	.LVL8:
 315              	.LFB67:
 135:Src/main.c    **** 	
 316              		.loc 1 135 56 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 135:Src/main.c    **** 	
 320              		.loc 1 135 56 is_stmt 0 view .LVU95
 321 0000 08B5     		push	{r3, lr}
 322              	.LCFI5:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 3, -8
 325              		.cfi_offset 14, -4
 137:Src/main.c    **** 		sConfig.Channel = ADC_CHANNEL_0;
 326              		.loc 1 137 2 is_stmt 1 view .LVU96
 137:Src/main.c    **** 		sConfig.Channel = ADC_CHANNEL_0;
 327              		.loc 1 137 18 is_stmt 0 view .LVU97
 328 0002 174B     		ldr	r3, .L21
 329 0004 1B68     		ldr	r3, [r3]
 137:Src/main.c    **** 		sConfig.Channel = ADC_CHANNEL_0;
 330              		.loc 1 137 5 view .LVU98
 331 0006 13F0010F 		tst	r3, #1
 332 000a 0ED0     		beq	.L18
 333              	.LVL9:
 334              	.L14:
 144:Src/main.c    **** 		sConfig.Channel = ADC_CHANNEL_1;
 335              		.loc 1 144 2 is_stmt 1 view .LVU99
 144:Src/main.c    **** 		sConfig.Channel = ADC_CHANNEL_1;
 336              		.loc 1 144 6 is_stmt 0 view .LVU100
 337 000c 144B     		ldr	r3, .L21
 338 000e 1B68     		ldr	r3, [r3]
 144:Src/main.c    **** 		sConfig.Channel = ADC_CHANNEL_1;
 339              		.loc 1 144 5 view .LVU101
 340 0010 13F0010F 		tst	r3, #1
 341 0014 13D1     		bne	.L19
 342              	.L15:
 151:Src/main.c    **** 	
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 14


 343              		.loc 1 151 2 is_stmt 1 view .LVU102
 151:Src/main.c    **** 	
 344              		.loc 1 151 7 is_stmt 0 view .LVU103
 345 0016 124A     		ldr	r2, .L21
 346 0018 1368     		ldr	r3, [r2]
 347 001a 0133     		adds	r3, r3, #1
 348 001c 1360     		str	r3, [r2]
 153:Src/main.c    **** 	if (val > 10) {
 349              		.loc 1 153 2 is_stmt 1 view .LVU104
 153:Src/main.c    **** 	if (val > 10) {
 350              		.loc 1 153 12 is_stmt 0 view .LVU105
 351 001e 1148     		ldr	r0, .L21+4
 352 0020 FFF7FEFF 		bl	HAL_ADC_GetValue
 353              	.LVL10:
 154:Src/main.c    **** 		HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 354              		.loc 1 154 2 is_stmt 1 view .LVU106
 154:Src/main.c    **** 		HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 355              		.loc 1 154 5 is_stmt 0 view .LVU107
 356 0024 0A28     		cmp	r0, #10
 357 0026 14DC     		bgt	.L20
 358              	.LVL11:
 359              	.L13:
 158:Src/main.c    **** 
 360              		.loc 1 158 1 view .LVU108
 361 0028 08BD     		pop	{r3, pc}
 362              	.LVL12:
 363              	.L18:
 138:Src/main.c    **** 		sConfig.Rank = ADC_REGULAR_RANK_1;
 364              		.loc 1 138 3 is_stmt 1 view .LVU109
 138:Src/main.c    **** 		sConfig.Rank = ADC_REGULAR_RANK_1;
 365              		.loc 1 138 19 is_stmt 0 view .LVU110
 366 002a 0F49     		ldr	r1, .L21+8
 367 002c 0023     		movs	r3, #0
 368 002e 0B60     		str	r3, [r1]
 139:Src/main.c    **** 		sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 369              		.loc 1 139 3 is_stmt 1 view .LVU111
 139:Src/main.c    **** 		sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 370              		.loc 1 139 16 is_stmt 0 view .LVU112
 371 0030 0122     		movs	r2, #1
 372 0032 4A60     		str	r2, [r1, #4]
 140:Src/main.c    **** 		HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 373              		.loc 1 140 3 is_stmt 1 view .LVU113
 140:Src/main.c    **** 		HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 374              		.loc 1 140 24 is_stmt 0 view .LVU114
 375 0034 8B60     		str	r3, [r1, #8]
 141:Src/main.c    **** 	}
 376              		.loc 1 141 3 is_stmt 1 view .LVU115
 377 0036 0B48     		ldr	r0, .L21+4
 378              	.LVL13:
 141:Src/main.c    **** 	}
 379              		.loc 1 141 3 is_stmt 0 view .LVU116
 380 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 381              	.LVL14:
 382 003c E6E7     		b	.L14
 383              	.L19:
 145:Src/main.c    **** 		sConfig.Rank = ADC_REGULAR_RANK_1;
 384              		.loc 1 145 3 is_stmt 1 view .LVU117
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 15


 145:Src/main.c    **** 		sConfig.Rank = ADC_REGULAR_RANK_1;
 385              		.loc 1 145 19 is_stmt 0 view .LVU118
 386 003e 0A49     		ldr	r1, .L21+8
 387 0040 0123     		movs	r3, #1
 388 0042 0B60     		str	r3, [r1]
 146:Src/main.c    **** 		sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 389              		.loc 1 146 3 is_stmt 1 view .LVU119
 146:Src/main.c    **** 		sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 390              		.loc 1 146 16 is_stmt 0 view .LVU120
 391 0044 4B60     		str	r3, [r1, #4]
 147:Src/main.c    **** 		HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 392              		.loc 1 147 3 is_stmt 1 view .LVU121
 147:Src/main.c    **** 		HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 393              		.loc 1 147 24 is_stmt 0 view .LVU122
 394 0046 0023     		movs	r3, #0
 395 0048 8B60     		str	r3, [r1, #8]
 148:Src/main.c    **** 	}
 396              		.loc 1 148 3 is_stmt 1 view .LVU123
 397 004a 0648     		ldr	r0, .L21+4
 398 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 399              	.LVL15:
 400 0050 E1E7     		b	.L15
 401              	.LVL16:
 402              	.L20:
 155:Src/main.c    **** 	}
 403              		.loc 1 155 3 view .LVU124
 404 0052 4FF40051 		mov	r1, #8192
 405 0056 0548     		ldr	r0, .L21+12
 406              	.LVL17:
 155:Src/main.c    **** 	}
 407              		.loc 1 155 3 is_stmt 0 view .LVU125
 408 0058 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 409              	.LVL18:
 158:Src/main.c    **** 
 410              		.loc 1 158 1 view .LVU126
 411 005c E4E7     		b	.L13
 412              	.L22:
 413 005e 00BF     		.align	2
 414              	.L21:
 415 0060 00000000 		.word	.LANCHOR1
 416 0064 00000000 		.word	hadc1
 417 0068 00000000 		.word	.LANCHOR0
 418 006c 00100140 		.word	1073811456
 419              		.cfi_endproc
 420              	.LFE67:
 422              		.section	.text.SystemClock_Config,"ax",%progbits
 423              		.align	1
 424              		.global	SystemClock_Config
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 428              		.fpu softvfp
 430              	SystemClock_Config:
 431              	.LFB68:
 165:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 432              		.loc 1 165 1 is_stmt 1 view -0
 433              		.cfi_startproc
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 16


 434              		@ args = 0, pretend = 0, frame = 80
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436 0000 30B5     		push	{r4, r5, lr}
 437              	.LCFI6:
 438              		.cfi_def_cfa_offset 12
 439              		.cfi_offset 4, -12
 440              		.cfi_offset 5, -8
 441              		.cfi_offset 14, -4
 442 0002 95B0     		sub	sp, sp, #84
 443              	.LCFI7:
 444              		.cfi_def_cfa_offset 96
 166:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 445              		.loc 1 166 3 view .LVU128
 166:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 446              		.loc 1 166 22 is_stmt 0 view .LVU129
 447 0004 2422     		movs	r2, #36
 448 0006 0021     		movs	r1, #0
 449 0008 0BA8     		add	r0, sp, #44
 450 000a FFF7FEFF 		bl	memset
 451              	.LVL19:
 167:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 452              		.loc 1 167 3 is_stmt 1 view .LVU130
 167:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 453              		.loc 1 167 22 is_stmt 0 view .LVU131
 454 000e 0024     		movs	r4, #0
 455 0010 0594     		str	r4, [sp, #20]
 456 0012 0694     		str	r4, [sp, #24]
 457 0014 0794     		str	r4, [sp, #28]
 458 0016 0894     		str	r4, [sp, #32]
 459 0018 0994     		str	r4, [sp, #36]
 168:Src/main.c    **** 
 460              		.loc 1 168 3 is_stmt 1 view .LVU132
 168:Src/main.c    **** 
 461              		.loc 1 168 28 is_stmt 0 view .LVU133
 462 001a 0194     		str	r4, [sp, #4]
 463 001c 0294     		str	r4, [sp, #8]
 464 001e 0394     		str	r4, [sp, #12]
 465 0020 0494     		str	r4, [sp, #16]
 172:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 466              		.loc 1 172 3 is_stmt 1 view .LVU134
 172:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 467              		.loc 1 172 36 is_stmt 0 view .LVU135
 468 0022 0225     		movs	r5, #2
 469 0024 0A95     		str	r5, [sp, #40]
 173:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 470              		.loc 1 173 3 is_stmt 1 view .LVU136
 173:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 471              		.loc 1 173 30 is_stmt 0 view .LVU137
 472 0026 0123     		movs	r3, #1
 473 0028 0E93     		str	r3, [sp, #56]
 174:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 474              		.loc 1 174 3 is_stmt 1 view .LVU138
 174:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 475              		.loc 1 174 41 is_stmt 0 view .LVU139
 476 002a 1023     		movs	r3, #16
 477 002c 0F93     		str	r3, [sp, #60]
 175:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 17


 478              		.loc 1 175 3 is_stmt 1 view .LVU140
 176:Src/main.c    ****   {
 479              		.loc 1 176 3 view .LVU141
 176:Src/main.c    ****   {
 480              		.loc 1 176 7 is_stmt 0 view .LVU142
 481 002e 0AA8     		add	r0, sp, #40
 482 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 483              	.LVL20:
 182:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 484              		.loc 1 182 3 is_stmt 1 view .LVU143
 182:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 485              		.loc 1 182 31 is_stmt 0 view .LVU144
 486 0034 0F23     		movs	r3, #15
 487 0036 0593     		str	r3, [sp, #20]
 184:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 488              		.loc 1 184 3 is_stmt 1 view .LVU145
 184:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 489              		.loc 1 184 34 is_stmt 0 view .LVU146
 490 0038 0694     		str	r4, [sp, #24]
 185:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 491              		.loc 1 185 3 is_stmt 1 view .LVU147
 185:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 492              		.loc 1 185 35 is_stmt 0 view .LVU148
 493 003a 0794     		str	r4, [sp, #28]
 186:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 494              		.loc 1 186 3 is_stmt 1 view .LVU149
 186:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 495              		.loc 1 186 36 is_stmt 0 view .LVU150
 496 003c 0894     		str	r4, [sp, #32]
 187:Src/main.c    **** 
 497              		.loc 1 187 3 is_stmt 1 view .LVU151
 187:Src/main.c    **** 
 498              		.loc 1 187 36 is_stmt 0 view .LVU152
 499 003e 0994     		str	r4, [sp, #36]
 189:Src/main.c    ****   {
 500              		.loc 1 189 3 is_stmt 1 view .LVU153
 189:Src/main.c    ****   {
 501              		.loc 1 189 7 is_stmt 0 view .LVU154
 502 0040 2146     		mov	r1, r4
 503 0042 05A8     		add	r0, sp, #20
 504 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 505              	.LVL21:
 193:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 506              		.loc 1 193 3 is_stmt 1 view .LVU155
 193:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 507              		.loc 1 193 38 is_stmt 0 view .LVU156
 508 0048 0195     		str	r5, [sp, #4]
 194:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 509              		.loc 1 194 3 is_stmt 1 view .LVU157
 194:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 510              		.loc 1 194 35 is_stmt 0 view .LVU158
 511 004a 0394     		str	r4, [sp, #12]
 195:Src/main.c    ****   {
 512              		.loc 1 195 3 is_stmt 1 view .LVU159
 195:Src/main.c    ****   {
 513              		.loc 1 195 7 is_stmt 0 view .LVU160
 514 004c 01A8     		add	r0, sp, #4
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 18


 515 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 516              	.LVL22:
 199:Src/main.c    **** 
 517              		.loc 1 199 1 view .LVU161
 518 0052 15B0     		add	sp, sp, #84
 519              	.LCFI8:
 520              		.cfi_def_cfa_offset 12
 521              		@ sp needed
 522 0054 30BD     		pop	{r4, r5, pc}
 523              		.cfi_endproc
 524              	.LFE68:
 526              		.section	.text.main,"ax",%progbits
 527              		.align	1
 528              		.global	main
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 532              		.fpu softvfp
 534              	main:
 535              	.LFB66:
  94:Src/main.c    ****   /* USER CODE BEGIN 1 */
 536              		.loc 1 94 1 is_stmt 1 view -0
 537              		.cfi_startproc
 538              		@ Volatile: function does not return.
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541 0000 08B5     		push	{r3, lr}
 542              	.LCFI9:
 543              		.cfi_def_cfa_offset 8
 544              		.cfi_offset 3, -8
 545              		.cfi_offset 14, -4
 102:Src/main.c    **** 
 546              		.loc 1 102 3 view .LVU163
 547 0002 FFF7FEFF 		bl	HAL_Init
 548              	.LVL23:
 109:Src/main.c    **** 
 549              		.loc 1 109 3 view .LVU164
 550 0006 FFF7FEFF 		bl	SystemClock_Config
 551              	.LVL24:
 116:Src/main.c    ****   MX_ADC1_Init();
 552              		.loc 1 116 3 view .LVU165
 553 000a FFF7FEFF 		bl	MX_GPIO_Init
 554              	.LVL25:
 117:Src/main.c    ****   MX_USART1_UART_Init();
 555              		.loc 1 117 3 view .LVU166
 556 000e FFF7FEFF 		bl	MX_ADC1_Init
 557              	.LVL26:
 118:Src/main.c    ****   /* USER CODE BEGIN 2 */
 558              		.loc 1 118 3 view .LVU167
 559 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 560              	.LVL27:
 561              	.L26:
 125:Src/main.c    ****   {
 562              		.loc 1 125 3 discriminator 1 view .LVU168
 128:Src/main.c    **** 	HAL_Delay(100);
 563              		.loc 1 128 2 discriminator 1 view .LVU169
 564 0016 0348     		ldr	r0, .L28
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 19


 565 0018 FFF7FEFF 		bl	HAL_ADC_Start_IT
 566              	.LVL28:
 129:Src/main.c    ****     /* USER CODE BEGIN 3 */
 567              		.loc 1 129 2 discriminator 1 view .LVU170
 568 001c 6420     		movs	r0, #100
 569 001e FFF7FEFF 		bl	HAL_Delay
 570              	.LVL29:
 571 0022 F8E7     		b	.L26
 572              	.L29:
 573              		.align	2
 574              	.L28:
 575 0024 00000000 		.word	hadc1
 576              		.cfi_endproc
 577              	.LFE66:
 579              		.section	.text.Error_Handler,"ax",%progbits
 580              		.align	1
 581              		.global	Error_Handler
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu softvfp
 587              	Error_Handler:
 588              	.LFB72:
 328:Src/main.c    **** 
 329:Src/main.c    **** /* USER CODE BEGIN 4 */
 330:Src/main.c    **** 
 331:Src/main.c    **** /* USER CODE END 4 */
 332:Src/main.c    **** 
 333:Src/main.c    **** /**
 334:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 335:Src/main.c    ****   * @retval None
 336:Src/main.c    ****   */
 337:Src/main.c    **** void Error_Handler(void)
 338:Src/main.c    **** {
 589              		.loc 1 338 1 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 339:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 340:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 341:Src/main.c    **** 
 342:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 343:Src/main.c    **** }
 594              		.loc 1 343 1 view .LVU172
 595 0000 7047     		bx	lr
 596              		.cfi_endproc
 597              	.LFE72:
 599              		.global	count
 600              		.global	sConfig
 601              		.comm	huart1,64,4
 602              		.comm	hadc1,48,4
 603              		.section	.bss.count,"aw",%nobits
 604              		.align	2
 605              		.set	.LANCHOR1,. + 0
 608              	count:
 609 0000 00000000 		.space	4
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 20


 610              		.section	.bss.sConfig,"aw",%nobits
 611              		.align	2
 612              		.set	.LANCHOR0,. + 0
 615              	sConfig:
 616 0000 00000000 		.space	12
 616      00000000 
 616      00000000 
 617              		.text
 618              	.Letext0:
 619              		.file 2 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 620              		.file 3 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 621              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 622              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 623              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 624              		.file 7 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 625              		.file 8 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 626              		.file 9 "c:\\arm-gcc\\8-2018-q4-major\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 627              		.file 10 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 628              		.file 11 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 629              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 630              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 631              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 632              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 633              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 634              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 635              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 636              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 637              		.file 20 "<built-in>"
ARM GAS  C:\cygwin64\tmp\ccTSnCmn.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\cygwin64\tmp\ccTSnCmn.s:16     .text.MX_GPIO_Init:00000000 $t
C:\cygwin64\tmp\ccTSnCmn.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\cygwin64\tmp\ccTSnCmn.s:111    .text.MX_GPIO_Init:00000060 $d
C:\cygwin64\tmp\ccTSnCmn.s:117    .text.MX_ADC1_Init:00000000 $t
C:\cygwin64\tmp\ccTSnCmn.s:123    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\cygwin64\tmp\ccTSnCmn.s:238    .text.MX_ADC1_Init:00000064 $d
                            *COM*:00000030 hadc1
C:\cygwin64\tmp\ccTSnCmn.s:245    .text.MX_USART1_UART_Init:00000000 $t
C:\cygwin64\tmp\ccTSnCmn.s:251    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\cygwin64\tmp\ccTSnCmn.s:300    .text.MX_USART1_UART_Init:00000024 $d
                            *COM*:00000040 huart1
C:\cygwin64\tmp\ccTSnCmn.s:306    .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\cygwin64\tmp\ccTSnCmn.s:313    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\cygwin64\tmp\ccTSnCmn.s:415    .text.HAL_ADC_ConvCpltCallback:00000060 $d
C:\cygwin64\tmp\ccTSnCmn.s:423    .text.SystemClock_Config:00000000 $t
C:\cygwin64\tmp\ccTSnCmn.s:430    .text.SystemClock_Config:00000000 SystemClock_Config
C:\cygwin64\tmp\ccTSnCmn.s:527    .text.main:00000000 $t
C:\cygwin64\tmp\ccTSnCmn.s:534    .text.main:00000000 main
C:\cygwin64\tmp\ccTSnCmn.s:575    .text.main:00000024 $d
C:\cygwin64\tmp\ccTSnCmn.s:580    .text.Error_Handler:00000000 $t
C:\cygwin64\tmp\ccTSnCmn.s:587    .text.Error_Handler:00000000 Error_Handler
C:\cygwin64\tmp\ccTSnCmn.s:608    .bss.count:00000000 count
C:\cygwin64\tmp\ccTSnCmn.s:615    .bss.sConfig:00000000 sConfig
C:\cygwin64\tmp\ccTSnCmn.s:604    .bss.count:00000000 $d
C:\cygwin64\tmp\ccTSnCmn.s:611    .bss.sConfig:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_ADC_GetValue
HAL_GPIO_TogglePin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_ADC_Start_IT
HAL_Delay
