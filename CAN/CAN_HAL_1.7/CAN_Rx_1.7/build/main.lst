ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB71:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 2


  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** CAN_HandleTypeDef hcan;
  46:Src/main.c    **** 
  47:Src/main.c    **** UART_HandleTypeDef huart1;
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** CAN_TxHeaderTypeDef   TxHeader;
  51:Src/main.c    **** CAN_RxHeaderTypeDef   RxHeader;
  52:Src/main.c    **** uint8_t               TxData[8] = {0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55};
  53:Src/main.c    **** uint8_t               RxData[8];
  54:Src/main.c    **** uint32_t              TxMailbox;
  55:Src/main.c    **** uint8_t 			  flag = 0;
  56:Src/main.c    **** /* USER CODE END PV */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  59:Src/main.c    **** void SystemClock_Config(void);
  60:Src/main.c    **** static void MX_GPIO_Init(void);
  61:Src/main.c    **** static void MX_CAN_Init(void);
  62:Src/main.c    **** static void MX_USART1_UART_Init(void);
  63:Src/main.c    **** /* USER CODE BEGIN PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  68:Src/main.c    **** /* USER CODE BEGIN 0 */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END 0 */
  71:Src/main.c    **** 
  72:Src/main.c    **** /**
  73:Src/main.c    ****   * @brief  The application entry point.
  74:Src/main.c    ****   * @retval int
  75:Src/main.c    ****   */
  76:Src/main.c    **** int main(void)
  77:Src/main.c    **** {
  78:Src/main.c    ****   /* USER CODE BEGIN 1 */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END 1 */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Src/main.c    ****   HAL_Init();
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE BEGIN Init */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE END Init */
  90:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 3


  91:Src/main.c    ****   /* Configure the system clock */
  92:Src/main.c    ****   SystemClock_Config();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Initialize all configured peripherals */
  99:Src/main.c    ****   MX_GPIO_Init();
 100:Src/main.c    ****   MX_CAN_Init();
 101:Src/main.c    ****   MX_USART1_UART_Init();
 102:Src/main.c    ****   /* USER CODE BEGIN 2 */
 103:Src/main.c    ****   
 104:Src/main.c    ****   /* USER CODE END 2 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Infinite loop */
 107:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 108:Src/main.c    ****   while (1)
 109:Src/main.c    ****   {
 110:Src/main.c    ****     /* USER CODE END WHILE */
 111:Src/main.c    **** 	if (RxHeader.StdId == 0x321) HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 112:Src/main.c    **** 	
 113:Src/main.c    **** 	uint8_t serial[8];
 114:Src/main.c    **** 	
 115:Src/main.c    **** 	serial[0] = RxData[0];
 116:Src/main.c    **** 	serial[1] = RxData[1];
 117:Src/main.c    **** 	serial[2] = RxData[2];
 118:Src/main.c    **** 	serial[3] = RxData[3];
 119:Src/main.c    **** 	serial[4] = RxData[4];
 120:Src/main.c    **** 	serial[5] = RxData[5];
 121:Src/main.c    **** 	serial[6] = RxData[6];
 122:Src/main.c    **** 	serial[7] = RxData[7];
 123:Src/main.c    **** 	
 124:Src/main.c    **** 	HAL_UART_Transmit(&huart1, serial, sizeof(serial), 1000);
 125:Src/main.c    **** 	
 126:Src/main.c    **** 	HAL_Delay(500);
 127:Src/main.c    ****     /* USER CODE BEGIN 3 */
 128:Src/main.c    ****   }
 129:Src/main.c    ****   /* USER CODE END 3 */
 130:Src/main.c    **** }
 131:Src/main.c    **** 
 132:Src/main.c    **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *CanHandle)
 133:Src/main.c    **** {
 134:Src/main.c    ****   /* Get RX message */
 135:Src/main.c    ****   HAL_CAN_GetRxMessage(&hcan, CAN_RX_FIFO0, &RxHeader, RxData);
 136:Src/main.c    **** }
 137:Src/main.c    **** 
 138:Src/main.c    **** /**
 139:Src/main.c    ****   * @brief System Clock Configuration
 140:Src/main.c    ****   * @retval None
 141:Src/main.c    ****   */
 142:Src/main.c    **** void SystemClock_Config(void)
 143:Src/main.c    **** {
 144:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 145:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 146:Src/main.c    **** 
 147:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 4


 148:Src/main.c    ****   */
 149:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 150:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 151:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 153:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 154:Src/main.c    ****   {
 155:Src/main.c    ****     Error_Handler();
 156:Src/main.c    ****   }
 157:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 158:Src/main.c    ****   */
 159:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 160:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 161:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 162:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 163:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 164:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 165:Src/main.c    **** 
 166:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 167:Src/main.c    ****   {
 168:Src/main.c    ****     Error_Handler();
 169:Src/main.c    ****   }
 170:Src/main.c    **** }
 171:Src/main.c    **** 
 172:Src/main.c    **** /**
 173:Src/main.c    ****   * @brief CAN Initialization Function
 174:Src/main.c    ****   * @param None
 175:Src/main.c    ****   * @retval None
 176:Src/main.c    ****   */
 177:Src/main.c    **** static void MX_CAN_Init(void)
 178:Src/main.c    **** {
 179:Src/main.c    **** 
 180:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 0 */
 181:Src/main.c    ****   CAN_FilterTypeDef     sFilterConfig;
 182:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
 183:Src/main.c    **** 
 184:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 1 */
 185:Src/main.c    **** 
 186:Src/main.c    ****   /* USER CODE END CAN_Init 1 */
 187:Src/main.c    ****   hcan.Instance = CAN1;
 188:Src/main.c    ****   hcan.Init.Prescaler = 2;
 189:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 190:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 191:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_3TQ;
 192:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_4TQ;
 193:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 194:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 195:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 196:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 197:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 198:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 199:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 200:Src/main.c    ****   {
 201:Src/main.c    ****     Error_Handler();
 202:Src/main.c    ****   }
 203:Src/main.c    ****   /* USER CODE BEGIN CAN_Init 2 */
 204:Src/main.c    **** 	sFilterConfig.FilterBank = 0;							// filter number (0-13)
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 5


 205:Src/main.c    **** 	sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 206:Src/main.c    **** 	sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;		
 207:Src/main.c    **** 	sFilterConfig.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifie
 208:Src/main.c    **** 	sFilterConfig.FilterIdLow = 0x0000;
 209:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare 
 210:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow = 0x0000;
 211:Src/main.c    **** 	sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen int
 212:Src/main.c    **** 	sFilterConfig.FilterActivation = ENABLE;
 213:Src/main.c    **** 	
 214:Src/main.c    **** 	HAL_CAN_ConfigFilter(&hcan, &sFilterConfig);
 215:Src/main.c    **** 	
 216:Src/main.c    **** 	HAL_CAN_Start(&hcan);
 217:Src/main.c    **** 	
 218:Src/main.c    **** 	HAL_CAN_ActivateNotification(&hcan, CAN_IT_RX_FIFO0_MSG_PENDING); // enables interrupt
 219:Src/main.c    **** 
 220:Src/main.c    ****   /* USER CODE END CAN_Init 2 */
 221:Src/main.c    **** 
 222:Src/main.c    **** }
 223:Src/main.c    **** 
 224:Src/main.c    **** /**
 225:Src/main.c    ****   * @brief USART1 Initialization Function
 226:Src/main.c    ****   * @param None
 227:Src/main.c    ****   * @retval None
 228:Src/main.c    ****   */
 229:Src/main.c    **** static void MX_USART1_UART_Init(void)
 230:Src/main.c    **** {
 231:Src/main.c    **** 
 232:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 233:Src/main.c    **** 
 234:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 235:Src/main.c    **** 
 236:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 237:Src/main.c    **** 
 238:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 239:Src/main.c    ****   huart1.Instance = USART1;
 240:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 241:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 242:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 243:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 244:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 245:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 246:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 247:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 248:Src/main.c    ****   {
 249:Src/main.c    ****     Error_Handler();
 250:Src/main.c    ****   }
 251:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 252:Src/main.c    **** 
 253:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 254:Src/main.c    **** 
 255:Src/main.c    **** }
 256:Src/main.c    **** 
 257:Src/main.c    **** /**
 258:Src/main.c    ****   * @brief GPIO Initialization Function
 259:Src/main.c    ****   * @param None
 260:Src/main.c    ****   * @retval None
 261:Src/main.c    ****   */
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 6


 262:Src/main.c    **** static void MX_GPIO_Init(void)
 263:Src/main.c    **** {
  26              		.loc 1 263 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 264:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 264 3 view .LVU1
  40              		.loc 1 264 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0294     		str	r4, [sp, #8]
  43 0008 0394     		str	r4, [sp, #12]
  44 000a 0494     		str	r4, [sp, #16]
  45 000c 0594     		str	r4, [sp, #20]
 265:Src/main.c    **** 
 266:Src/main.c    ****   /* GPIO Ports Clock Enable */
 267:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 267 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 267 3 view .LVU4
  49              		.loc 1 267 3 view .LVU5
  50 000e 144B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F01002 		orr	r2, r2, #16
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 267 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F01002 		and	r2, r2, #16
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 267 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE2:
 268:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  61              		.loc 1 268 3 view .LVU8
  62              	.LBB3:
  63              		.loc 1 268 3 view .LVU9
  64              		.loc 1 268 3 view .LVU10
  65 0022 9A69     		ldr	r2, [r3, #24]
  66 0024 42F00402 		orr	r2, r2, #4
  67 0028 9A61     		str	r2, [r3, #24]
  68              		.loc 1 268 3 view .LVU11
  69 002a 9B69     		ldr	r3, [r3, #24]
  70 002c 03F00403 		and	r3, r3, #4
  71 0030 0193     		str	r3, [sp, #4]
  72              		.loc 1 268 3 view .LVU12
  73 0032 019B     		ldr	r3, [sp, #4]
  74              	.LBE3:
 269:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 7


 270:Src/main.c    ****   /*Configure GPIO pin Output Level */
 271:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  75              		.loc 1 271 3 view .LVU13
  76 0034 0B4D     		ldr	r5, .L3+4
  77 0036 2246     		mov	r2, r4
  78 0038 4FF40051 		mov	r1, #8192
  79 003c 2846     		mov	r0, r5
  80 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  81              	.LVL0:
 272:Src/main.c    **** 
 273:Src/main.c    ****   /*Configure GPIO pin : PC13 */
 274:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  82              		.loc 1 274 3 view .LVU14
  83              		.loc 1 274 23 is_stmt 0 view .LVU15
  84 0042 4FF40053 		mov	r3, #8192
  85 0046 0293     		str	r3, [sp, #8]
 275:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  86              		.loc 1 275 3 is_stmt 1 view .LVU16
  87              		.loc 1 275 24 is_stmt 0 view .LVU17
  88 0048 0123     		movs	r3, #1
  89 004a 0393     		str	r3, [sp, #12]
 276:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  90              		.loc 1 276 3 is_stmt 1 view .LVU18
  91              		.loc 1 276 24 is_stmt 0 view .LVU19
  92 004c 0494     		str	r4, [sp, #16]
 277:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  93              		.loc 1 277 3 is_stmt 1 view .LVU20
  94              		.loc 1 277 25 is_stmt 0 view .LVU21
  95 004e 0223     		movs	r3, #2
  96 0050 0593     		str	r3, [sp, #20]
 278:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  97              		.loc 1 278 3 is_stmt 1 view .LVU22
  98 0052 02A9     		add	r1, sp, #8
  99 0054 2846     		mov	r0, r5
 100 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 101              	.LVL1:
 279:Src/main.c    **** 
 280:Src/main.c    **** }
 102              		.loc 1 280 1 is_stmt 0 view .LVU23
 103 005a 07B0     		add	sp, sp, #28
 104              	.LCFI2:
 105              		.cfi_def_cfa_offset 12
 106              		@ sp needed
 107 005c 30BD     		pop	{r4, r5, pc}
 108              	.L4:
 109 005e 00BF     		.align	2
 110              	.L3:
 111 0060 00100240 		.word	1073876992
 112 0064 00100140 		.word	1073811456
 113              		.cfi_endproc
 114              	.LFE71:
 116              		.section	.text.MX_CAN_Init,"ax",%progbits
 117              		.align	1
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu softvfp
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 8


 123              	MX_CAN_Init:
 124              	.LFB69:
 178:Src/main.c    **** 
 125              		.loc 1 178 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 40
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129 0000 70B5     		push	{r4, r5, r6, lr}
 130              	.LCFI3:
 131              		.cfi_def_cfa_offset 16
 132              		.cfi_offset 4, -16
 133              		.cfi_offset 5, -12
 134              		.cfi_offset 6, -8
 135              		.cfi_offset 14, -4
 136 0002 8AB0     		sub	sp, sp, #40
 137              	.LCFI4:
 138              		.cfi_def_cfa_offset 56
 181:Src/main.c    ****   /* USER CODE END CAN_Init 0 */
 139              		.loc 1 181 3 view .LVU25
 187:Src/main.c    ****   hcan.Init.Prescaler = 2;
 140              		.loc 1 187 3 view .LVU26
 187:Src/main.c    ****   hcan.Init.Prescaler = 2;
 141              		.loc 1 187 17 is_stmt 0 view .LVU27
 142 0004 164C     		ldr	r4, .L7
 143 0006 174B     		ldr	r3, .L7+4
 144 0008 2360     		str	r3, [r4]
 188:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 145              		.loc 1 188 3 is_stmt 1 view .LVU28
 188:Src/main.c    ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 146              		.loc 1 188 23 is_stmt 0 view .LVU29
 147 000a 0226     		movs	r6, #2
 148 000c 6660     		str	r6, [r4, #4]
 189:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 149              		.loc 1 189 3 is_stmt 1 view .LVU30
 189:Src/main.c    ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 150              		.loc 1 189 18 is_stmt 0 view .LVU31
 151 000e 0025     		movs	r5, #0
 152 0010 A560     		str	r5, [r4, #8]
 190:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_3TQ;
 153              		.loc 1 190 3 is_stmt 1 view .LVU32
 190:Src/main.c    ****   hcan.Init.TimeSeg1 = CAN_BS1_3TQ;
 154              		.loc 1 190 27 is_stmt 0 view .LVU33
 155 0012 E560     		str	r5, [r4, #12]
 191:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_4TQ;
 156              		.loc 1 191 3 is_stmt 1 view .LVU34
 191:Src/main.c    ****   hcan.Init.TimeSeg2 = CAN_BS2_4TQ;
 157              		.loc 1 191 22 is_stmt 0 view .LVU35
 158 0014 4FF40033 		mov	r3, #131072
 159 0018 2361     		str	r3, [r4, #16]
 192:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 160              		.loc 1 192 3 is_stmt 1 view .LVU36
 192:Src/main.c    ****   hcan.Init.TimeTriggeredMode = DISABLE;
 161              		.loc 1 192 22 is_stmt 0 view .LVU37
 162 001a 4FF44013 		mov	r3, #3145728
 163 001e 6361     		str	r3, [r4, #20]
 193:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 164              		.loc 1 193 3 is_stmt 1 view .LVU38
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 9


 193:Src/main.c    ****   hcan.Init.AutoBusOff = DISABLE;
 165              		.loc 1 193 31 is_stmt 0 view .LVU39
 166 0020 2576     		strb	r5, [r4, #24]
 194:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 167              		.loc 1 194 3 is_stmt 1 view .LVU40
 194:Src/main.c    ****   hcan.Init.AutoWakeUp = DISABLE;
 168              		.loc 1 194 24 is_stmt 0 view .LVU41
 169 0022 6576     		strb	r5, [r4, #25]
 195:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 170              		.loc 1 195 3 is_stmt 1 view .LVU42
 195:Src/main.c    ****   hcan.Init.AutoRetransmission = DISABLE;
 171              		.loc 1 195 24 is_stmt 0 view .LVU43
 172 0024 A576     		strb	r5, [r4, #26]
 196:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 173              		.loc 1 196 3 is_stmt 1 view .LVU44
 196:Src/main.c    ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 174              		.loc 1 196 32 is_stmt 0 view .LVU45
 175 0026 E576     		strb	r5, [r4, #27]
 197:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 176              		.loc 1 197 3 is_stmt 1 view .LVU46
 197:Src/main.c    ****   hcan.Init.TransmitFifoPriority = DISABLE;
 177              		.loc 1 197 31 is_stmt 0 view .LVU47
 178 0028 2577     		strb	r5, [r4, #28]
 198:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 179              		.loc 1 198 3 is_stmt 1 view .LVU48
 198:Src/main.c    ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 180              		.loc 1 198 34 is_stmt 0 view .LVU49
 181 002a 6577     		strb	r5, [r4, #29]
 199:Src/main.c    ****   {
 182              		.loc 1 199 3 is_stmt 1 view .LVU50
 199:Src/main.c    ****   {
 183              		.loc 1 199 7 is_stmt 0 view .LVU51
 184 002c 2046     		mov	r0, r4
 185 002e FFF7FEFF 		bl	HAL_CAN_Init
 186              	.LVL2:
 204:Src/main.c    **** 	sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 187              		.loc 1 204 2 is_stmt 1 view .LVU52
 204:Src/main.c    **** 	sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;		// mask mode or identifier mode		
 188              		.loc 1 204 27 is_stmt 0 view .LVU53
 189 0032 0595     		str	r5, [sp, #20]
 205:Src/main.c    **** 	sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;		
 190              		.loc 1 205 2 is_stmt 1 view .LVU54
 205:Src/main.c    **** 	sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;		
 191              		.loc 1 205 27 is_stmt 0 view .LVU55
 192 0034 0695     		str	r5, [sp, #24]
 206:Src/main.c    **** 	sFilterConfig.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifie
 193              		.loc 1 206 2 is_stmt 1 view .LVU56
 206:Src/main.c    **** 	sFilterConfig.FilterIdHigh = 0x0000;					// received ID must match filter ID for each bit specifie
 194              		.loc 1 206 28 is_stmt 0 view .LVU57
 195 0036 0123     		movs	r3, #1
 196 0038 0793     		str	r3, [sp, #28]
 207:Src/main.c    **** 	sFilterConfig.FilterIdLow = 0x0000;
 197              		.loc 1 207 2 is_stmt 1 view .LVU58
 207:Src/main.c    **** 	sFilterConfig.FilterIdLow = 0x0000;
 198              		.loc 1 207 29 is_stmt 0 view .LVU59
 199 003a 0095     		str	r5, [sp]
 208:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare 
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 10


 200              		.loc 1 208 2 is_stmt 1 view .LVU60
 208:Src/main.c    **** 	sFilterConfig.FilterMaskIdHigh = 0x0000;				// specifies which bits of the received ID to compare 
 201              		.loc 1 208 28 is_stmt 0 view .LVU61
 202 003c 0195     		str	r5, [sp, #4]
 209:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow = 0x0000;
 203              		.loc 1 209 2 is_stmt 1 view .LVU62
 209:Src/main.c    **** 	sFilterConfig.FilterMaskIdLow = 0x0000;
 204              		.loc 1 209 33 is_stmt 0 view .LVU63
 205 003e 0295     		str	r5, [sp, #8]
 210:Src/main.c    **** 	sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen int
 206              		.loc 1 210 2 is_stmt 1 view .LVU64
 210:Src/main.c    **** 	sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;		// receive FIFO (0 or 1, must match chosen int
 207              		.loc 1 210 32 is_stmt 0 view .LVU65
 208 0040 0395     		str	r5, [sp, #12]
 211:Src/main.c    **** 	sFilterConfig.FilterActivation = ENABLE;
 209              		.loc 1 211 2 is_stmt 1 view .LVU66
 211:Src/main.c    **** 	sFilterConfig.FilterActivation = ENABLE;
 210              		.loc 1 211 37 is_stmt 0 view .LVU67
 211 0042 0495     		str	r5, [sp, #16]
 212:Src/main.c    **** 	
 212              		.loc 1 212 2 is_stmt 1 view .LVU68
 212:Src/main.c    **** 	
 213              		.loc 1 212 33 is_stmt 0 view .LVU69
 214 0044 0893     		str	r3, [sp, #32]
 214:Src/main.c    **** 	
 215              		.loc 1 214 2 is_stmt 1 view .LVU70
 216 0046 6946     		mov	r1, sp
 217 0048 2046     		mov	r0, r4
 218 004a FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 219              	.LVL3:
 216:Src/main.c    **** 	
 220              		.loc 1 216 2 view .LVU71
 221 004e 2046     		mov	r0, r4
 222 0050 FFF7FEFF 		bl	HAL_CAN_Start
 223              	.LVL4:
 218:Src/main.c    **** 
 224              		.loc 1 218 2 view .LVU72
 225 0054 3146     		mov	r1, r6
 226 0056 2046     		mov	r0, r4
 227 0058 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 228              	.LVL5:
 222:Src/main.c    **** 
 229              		.loc 1 222 1 is_stmt 0 view .LVU73
 230 005c 0AB0     		add	sp, sp, #40
 231              	.LCFI5:
 232              		.cfi_def_cfa_offset 16
 233              		@ sp needed
 234 005e 70BD     		pop	{r4, r5, r6, pc}
 235              	.L8:
 236              		.align	2
 237              	.L7:
 238 0060 00000000 		.word	hcan
 239 0064 00640040 		.word	1073767424
 240              		.cfi_endproc
 241              	.LFE69:
 243              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 244              		.align	1
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 11


 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu softvfp
 250              	MX_USART1_UART_Init:
 251              	.LFB70:
 230:Src/main.c    **** 
 252              		.loc 1 230 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256 0000 08B5     		push	{r3, lr}
 257              	.LCFI6:
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 3, -8
 260              		.cfi_offset 14, -4
 239:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 261              		.loc 1 239 3 view .LVU75
 239:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 262              		.loc 1 239 19 is_stmt 0 view .LVU76
 263 0002 0848     		ldr	r0, .L11
 264 0004 084B     		ldr	r3, .L11+4
 265 0006 0360     		str	r3, [r0]
 240:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 266              		.loc 1 240 3 is_stmt 1 view .LVU77
 240:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 267              		.loc 1 240 24 is_stmt 0 view .LVU78
 268 0008 4FF4E133 		mov	r3, #115200
 269 000c 4360     		str	r3, [r0, #4]
 241:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 270              		.loc 1 241 3 is_stmt 1 view .LVU79
 241:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 271              		.loc 1 241 26 is_stmt 0 view .LVU80
 272 000e 0023     		movs	r3, #0
 273 0010 8360     		str	r3, [r0, #8]
 242:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 274              		.loc 1 242 3 is_stmt 1 view .LVU81
 242:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 275              		.loc 1 242 24 is_stmt 0 view .LVU82
 276 0012 C360     		str	r3, [r0, #12]
 243:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 277              		.loc 1 243 3 is_stmt 1 view .LVU83
 243:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 278              		.loc 1 243 22 is_stmt 0 view .LVU84
 279 0014 0361     		str	r3, [r0, #16]
 244:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 280              		.loc 1 244 3 is_stmt 1 view .LVU85
 244:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 281              		.loc 1 244 20 is_stmt 0 view .LVU86
 282 0016 0C22     		movs	r2, #12
 283 0018 4261     		str	r2, [r0, #20]
 245:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 284              		.loc 1 245 3 is_stmt 1 view .LVU87
 245:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 285              		.loc 1 245 25 is_stmt 0 view .LVU88
 286 001a 8361     		str	r3, [r0, #24]
 246:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 12


 287              		.loc 1 246 3 is_stmt 1 view .LVU89
 246:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 288              		.loc 1 246 28 is_stmt 0 view .LVU90
 289 001c C361     		str	r3, [r0, #28]
 247:Src/main.c    ****   {
 290              		.loc 1 247 3 is_stmt 1 view .LVU91
 247:Src/main.c    ****   {
 291              		.loc 1 247 7 is_stmt 0 view .LVU92
 292 001e FFF7FEFF 		bl	HAL_UART_Init
 293              	.LVL6:
 255:Src/main.c    **** 
 294              		.loc 1 255 1 view .LVU93
 295 0022 08BD     		pop	{r3, pc}
 296              	.L12:
 297              		.align	2
 298              	.L11:
 299 0024 00000000 		.word	huart1
 300 0028 00380140 		.word	1073821696
 301              		.cfi_endproc
 302              	.LFE70:
 304              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 305              		.align	1
 306              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu softvfp
 312              	HAL_CAN_RxFifo0MsgPendingCallback:
 313              	.LVL7:
 314              	.LFB67:
 133:Src/main.c    ****   /* Get RX message */
 315              		.loc 1 133 1 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 133:Src/main.c    ****   /* Get RX message */
 319              		.loc 1 133 1 is_stmt 0 view .LVU95
 320 0000 08B5     		push	{r3, lr}
 321              	.LCFI7:
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 3, -8
 324              		.cfi_offset 14, -4
 135:Src/main.c    **** }
 325              		.loc 1 135 3 is_stmt 1 view .LVU96
 326 0002 034B     		ldr	r3, .L15
 327 0004 034A     		ldr	r2, .L15+4
 328 0006 0021     		movs	r1, #0
 329 0008 0348     		ldr	r0, .L15+8
 330              	.LVL8:
 135:Src/main.c    **** }
 331              		.loc 1 135 3 is_stmt 0 view .LVU97
 332 000a FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 333              	.LVL9:
 136:Src/main.c    **** 
 334              		.loc 1 136 1 view .LVU98
 335 000e 08BD     		pop	{r3, pc}
 336              	.L16:
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 13


 337              		.align	2
 338              	.L15:
 339 0010 00000000 		.word	RxData
 340 0014 00000000 		.word	RxHeader
 341 0018 00000000 		.word	hcan
 342              		.cfi_endproc
 343              	.LFE67:
 345              		.section	.text.SystemClock_Config,"ax",%progbits
 346              		.align	1
 347              		.global	SystemClock_Config
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu softvfp
 353              	SystemClock_Config:
 354              	.LFB68:
 143:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 355              		.loc 1 143 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 64
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 10B5     		push	{r4, lr}
 360              	.LCFI8:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 14, -4
 364 0002 90B0     		sub	sp, sp, #64
 365              	.LCFI9:
 366              		.cfi_def_cfa_offset 72
 144:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 367              		.loc 1 144 3 view .LVU100
 144:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 368              		.loc 1 144 22 is_stmt 0 view .LVU101
 369 0004 2422     		movs	r2, #36
 370 0006 0021     		movs	r1, #0
 371 0008 07A8     		add	r0, sp, #28
 372 000a FFF7FEFF 		bl	memset
 373              	.LVL10:
 145:Src/main.c    **** 
 374              		.loc 1 145 3 is_stmt 1 view .LVU102
 145:Src/main.c    **** 
 375              		.loc 1 145 22 is_stmt 0 view .LVU103
 376 000e 0024     		movs	r4, #0
 377 0010 0194     		str	r4, [sp, #4]
 378 0012 0294     		str	r4, [sp, #8]
 379 0014 0394     		str	r4, [sp, #12]
 380 0016 0494     		str	r4, [sp, #16]
 381 0018 0594     		str	r4, [sp, #20]
 149:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 382              		.loc 1 149 3 is_stmt 1 view .LVU104
 149:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 383              		.loc 1 149 36 is_stmt 0 view .LVU105
 384 001a 0223     		movs	r3, #2
 385 001c 0693     		str	r3, [sp, #24]
 150:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 386              		.loc 1 150 3 is_stmt 1 view .LVU106
 150:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 14


 387              		.loc 1 150 30 is_stmt 0 view .LVU107
 388 001e 0123     		movs	r3, #1
 389 0020 0A93     		str	r3, [sp, #40]
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 390              		.loc 1 151 3 is_stmt 1 view .LVU108
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 391              		.loc 1 151 41 is_stmt 0 view .LVU109
 392 0022 1023     		movs	r3, #16
 393 0024 0B93     		str	r3, [sp, #44]
 152:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 394              		.loc 1 152 3 is_stmt 1 view .LVU110
 153:Src/main.c    ****   {
 395              		.loc 1 153 3 view .LVU111
 153:Src/main.c    ****   {
 396              		.loc 1 153 7 is_stmt 0 view .LVU112
 397 0026 06A8     		add	r0, sp, #24
 398 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 399              	.LVL11:
 159:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 400              		.loc 1 159 3 is_stmt 1 view .LVU113
 159:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 401              		.loc 1 159 31 is_stmt 0 view .LVU114
 402 002c 0F23     		movs	r3, #15
 403 002e 0193     		str	r3, [sp, #4]
 161:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 404              		.loc 1 161 3 is_stmt 1 view .LVU115
 161:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 405              		.loc 1 161 34 is_stmt 0 view .LVU116
 406 0030 0294     		str	r4, [sp, #8]
 162:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 407              		.loc 1 162 3 is_stmt 1 view .LVU117
 162:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 408              		.loc 1 162 35 is_stmt 0 view .LVU118
 409 0032 0394     		str	r4, [sp, #12]
 163:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 410              		.loc 1 163 3 is_stmt 1 view .LVU119
 163:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 411              		.loc 1 163 36 is_stmt 0 view .LVU120
 412 0034 0494     		str	r4, [sp, #16]
 164:Src/main.c    **** 
 413              		.loc 1 164 3 is_stmt 1 view .LVU121
 164:Src/main.c    **** 
 414              		.loc 1 164 36 is_stmt 0 view .LVU122
 415 0036 0594     		str	r4, [sp, #20]
 166:Src/main.c    ****   {
 416              		.loc 1 166 3 is_stmt 1 view .LVU123
 166:Src/main.c    ****   {
 417              		.loc 1 166 7 is_stmt 0 view .LVU124
 418 0038 2146     		mov	r1, r4
 419 003a 01A8     		add	r0, sp, #4
 420 003c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 421              	.LVL12:
 170:Src/main.c    **** 
 422              		.loc 1 170 1 view .LVU125
 423 0040 10B0     		add	sp, sp, #64
 424              	.LCFI10:
 425              		.cfi_def_cfa_offset 8
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 15


 426              		@ sp needed
 427 0042 10BD     		pop	{r4, pc}
 428              		.cfi_endproc
 429              	.LFE68:
 431              		.section	.text.main,"ax",%progbits
 432              		.align	1
 433              		.global	main
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu softvfp
 439              	main:
 440              	.LFB66:
  77:Src/main.c    ****   /* USER CODE BEGIN 1 */
 441              		.loc 1 77 1 is_stmt 1 view -0
 442              		.cfi_startproc
 443              		@ Volatile: function does not return.
 444              		@ args = 0, pretend = 0, frame = 8
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446 0000 00B5     		push	{lr}
 447              	.LCFI11:
 448              		.cfi_def_cfa_offset 4
 449              		.cfi_offset 14, -4
 450 0002 83B0     		sub	sp, sp, #12
 451              	.LCFI12:
 452              		.cfi_def_cfa_offset 16
  85:Src/main.c    **** 
 453              		.loc 1 85 3 view .LVU127
 454 0004 FFF7FEFF 		bl	HAL_Init
 455              	.LVL13:
  92:Src/main.c    **** 
 456              		.loc 1 92 3 view .LVU128
 457 0008 FFF7FEFF 		bl	SystemClock_Config
 458              	.LVL14:
  99:Src/main.c    ****   MX_CAN_Init();
 459              		.loc 1 99 3 view .LVU129
 460 000c FFF7FEFF 		bl	MX_GPIO_Init
 461              	.LVL15:
 100:Src/main.c    ****   MX_USART1_UART_Init();
 462              		.loc 1 100 3 view .LVU130
 463 0010 FFF7FEFF 		bl	MX_CAN_Init
 464              	.LVL16:
 101:Src/main.c    ****   /* USER CODE BEGIN 2 */
 465              		.loc 1 101 3 view .LVU131
 466 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 467              	.LVL17:
 468 0018 23E0     		b	.L21
 469              	.L20:
 470              	.LBB4:
 113:Src/main.c    **** 	
 471              		.loc 1 113 2 view .LVU132
 115:Src/main.c    **** 	serial[1] = RxData[1];
 472              		.loc 1 115 2 view .LVU133
 115:Src/main.c    **** 	serial[1] = RxData[1];
 473              		.loc 1 115 20 is_stmt 0 view .LVU134
 474 001a 184B     		ldr	r3, .L23
 475 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 16


 115:Src/main.c    **** 	serial[1] = RxData[1];
 476              		.loc 1 115 12 view .LVU135
 477 001e 8DF80020 		strb	r2, [sp]
 116:Src/main.c    **** 	serial[2] = RxData[2];
 478              		.loc 1 116 2 is_stmt 1 view .LVU136
 116:Src/main.c    **** 	serial[2] = RxData[2];
 479              		.loc 1 116 20 is_stmt 0 view .LVU137
 480 0022 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 116:Src/main.c    **** 	serial[2] = RxData[2];
 481              		.loc 1 116 12 view .LVU138
 482 0024 8DF80120 		strb	r2, [sp, #1]
 117:Src/main.c    **** 	serial[3] = RxData[3];
 483              		.loc 1 117 2 is_stmt 1 view .LVU139
 117:Src/main.c    **** 	serial[3] = RxData[3];
 484              		.loc 1 117 20 is_stmt 0 view .LVU140
 485 0028 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 117:Src/main.c    **** 	serial[3] = RxData[3];
 486              		.loc 1 117 12 view .LVU141
 487 002a 8DF80220 		strb	r2, [sp, #2]
 118:Src/main.c    **** 	serial[4] = RxData[4];
 488              		.loc 1 118 2 is_stmt 1 view .LVU142
 118:Src/main.c    **** 	serial[4] = RxData[4];
 489              		.loc 1 118 20 is_stmt 0 view .LVU143
 490 002e DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 118:Src/main.c    **** 	serial[4] = RxData[4];
 491              		.loc 1 118 12 view .LVU144
 492 0030 8DF80320 		strb	r2, [sp, #3]
 119:Src/main.c    **** 	serial[5] = RxData[5];
 493              		.loc 1 119 2 is_stmt 1 view .LVU145
 119:Src/main.c    **** 	serial[5] = RxData[5];
 494              		.loc 1 119 20 is_stmt 0 view .LVU146
 495 0034 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 119:Src/main.c    **** 	serial[5] = RxData[5];
 496              		.loc 1 119 12 view .LVU147
 497 0036 8DF80420 		strb	r2, [sp, #4]
 120:Src/main.c    **** 	serial[6] = RxData[6];
 498              		.loc 1 120 2 is_stmt 1 view .LVU148
 120:Src/main.c    **** 	serial[6] = RxData[6];
 499              		.loc 1 120 20 is_stmt 0 view .LVU149
 500 003a 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 120:Src/main.c    **** 	serial[6] = RxData[6];
 501              		.loc 1 120 12 view .LVU150
 502 003c 8DF80520 		strb	r2, [sp, #5]
 121:Src/main.c    **** 	serial[7] = RxData[7];
 503              		.loc 1 121 2 is_stmt 1 view .LVU151
 121:Src/main.c    **** 	serial[7] = RxData[7];
 504              		.loc 1 121 20 is_stmt 0 view .LVU152
 505 0040 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 121:Src/main.c    **** 	serial[7] = RxData[7];
 506              		.loc 1 121 12 view .LVU153
 507 0042 8DF80620 		strb	r2, [sp, #6]
 122:Src/main.c    **** 	
 508              		.loc 1 122 2 is_stmt 1 view .LVU154
 122:Src/main.c    **** 	
 509              		.loc 1 122 20 is_stmt 0 view .LVU155
 510 0046 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 122:Src/main.c    **** 	
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 17


 511              		.loc 1 122 12 view .LVU156
 512 0048 8DF80730 		strb	r3, [sp, #7]
 124:Src/main.c    **** 	
 513              		.loc 1 124 2 is_stmt 1 view .LVU157
 514 004c 4FF47A73 		mov	r3, #1000
 515 0050 0822     		movs	r2, #8
 516 0052 6946     		mov	r1, sp
 517 0054 0A48     		ldr	r0, .L23+4
 518 0056 FFF7FEFF 		bl	HAL_UART_Transmit
 519              	.LVL18:
 126:Src/main.c    ****     /* USER CODE BEGIN 3 */
 520              		.loc 1 126 2 view .LVU158
 521 005a 4FF4FA70 		mov	r0, #500
 522 005e FFF7FEFF 		bl	HAL_Delay
 523              	.LVL19:
 524              	.L21:
 525              	.LBE4:
 108:Src/main.c    ****   {
 526              		.loc 1 108 3 view .LVU159
 527              	.LBB5:
 111:Src/main.c    **** 	
 528              		.loc 1 111 2 view .LVU160
 111:Src/main.c    **** 	
 529              		.loc 1 111 14 is_stmt 0 view .LVU161
 530 0062 084B     		ldr	r3, .L23+8
 531 0064 1A68     		ldr	r2, [r3]
 111:Src/main.c    **** 	
 532              		.loc 1 111 5 view .LVU162
 533 0066 40F22133 		movw	r3, #801
 534 006a 9A42     		cmp	r2, r3
 535 006c D5D1     		bne	.L20
 111:Src/main.c    **** 	
 536              		.loc 1 111 31 is_stmt 1 discriminator 1 view .LVU163
 537 006e 4FF40051 		mov	r1, #8192
 538 0072 0548     		ldr	r0, .L23+12
 539 0074 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 540              	.LVL20:
 541 0078 CFE7     		b	.L20
 542              	.L24:
 543 007a 00BF     		.align	2
 544              	.L23:
 545 007c 00000000 		.word	RxData
 546 0080 00000000 		.word	huart1
 547 0084 00000000 		.word	RxHeader
 548 0088 00100140 		.word	1073811456
 549              	.LBE5:
 550              		.cfi_endproc
 551              	.LFE66:
 553              		.section	.text.Error_Handler,"ax",%progbits
 554              		.align	1
 555              		.global	Error_Handler
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu softvfp
 561              	Error_Handler:
 562              	.LFB72:
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 18


 281:Src/main.c    **** 
 282:Src/main.c    **** /* USER CODE BEGIN 4 */
 283:Src/main.c    **** 
 284:Src/main.c    **** /* USER CODE END 4 */
 285:Src/main.c    **** 
 286:Src/main.c    **** /**
 287:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 288:Src/main.c    ****   * @retval None
 289:Src/main.c    ****   */
 290:Src/main.c    **** void Error_Handler(void)
 291:Src/main.c    **** {
 563              		.loc 1 291 1 view -0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 292:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 293:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 294:Src/main.c    **** 
 295:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 296:Src/main.c    **** }
 568              		.loc 1 296 1 view .LVU165
 569 0000 7047     		bx	lr
 570              		.cfi_endproc
 571              	.LFE72:
 573              		.global	flag
 574              		.comm	TxMailbox,4,4
 575              		.comm	RxData,8,4
 576              		.global	TxData
 577              		.comm	RxHeader,28,4
 578              		.comm	TxHeader,24,4
 579              		.comm	huart1,64,4
 580              		.comm	hcan,40,4
 581              		.section	.bss.flag,"aw",%nobits
 584              	flag:
 585 0000 00       		.space	1
 586              		.section	.data.TxData,"aw"
 587              		.align	2
 590              	TxData:
 591 0000 55       		.byte	85
 592 0001 55       		.byte	85
 593 0002 55       		.byte	85
 594 0003 55       		.byte	85
 595 0004 55       		.byte	85
 596 0005 55       		.byte	85
 597 0006 55       		.byte	85
 598 0007 55       		.byte	85
 599              		.text
 600              	.Letext0:
 601              		.file 2 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 602              		.file 3 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 603              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 604              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 605              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 606              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 607              		.file 8 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 608              		.file 9 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 19


 609              		.file 10 "c:\\arm-gcc\\8-2018-q4-major\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 610              		.file 11 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 611              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 612              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 613              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 614              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 615              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 616              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 617              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 618              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 619              		.file 20 "<built-in>"
ARM GAS  C:\cygwin64\tmp\ccs0HDb1.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\cygwin64\tmp\ccs0HDb1.s:16     .text.MX_GPIO_Init:00000000 $t
C:\cygwin64\tmp\ccs0HDb1.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\cygwin64\tmp\ccs0HDb1.s:111    .text.MX_GPIO_Init:00000060 $d
C:\cygwin64\tmp\ccs0HDb1.s:117    .text.MX_CAN_Init:00000000 $t
C:\cygwin64\tmp\ccs0HDb1.s:123    .text.MX_CAN_Init:00000000 MX_CAN_Init
C:\cygwin64\tmp\ccs0HDb1.s:238    .text.MX_CAN_Init:00000060 $d
                            *COM*:00000028 hcan
C:\cygwin64\tmp\ccs0HDb1.s:244    .text.MX_USART1_UART_Init:00000000 $t
C:\cygwin64\tmp\ccs0HDb1.s:250    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\cygwin64\tmp\ccs0HDb1.s:299    .text.MX_USART1_UART_Init:00000024 $d
                            *COM*:00000040 huart1
C:\cygwin64\tmp\ccs0HDb1.s:305    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\cygwin64\tmp\ccs0HDb1.s:312    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\cygwin64\tmp\ccs0HDb1.s:339    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000010 $d
                            *COM*:00000008 RxData
                            *COM*:0000001c RxHeader
C:\cygwin64\tmp\ccs0HDb1.s:346    .text.SystemClock_Config:00000000 $t
C:\cygwin64\tmp\ccs0HDb1.s:353    .text.SystemClock_Config:00000000 SystemClock_Config
C:\cygwin64\tmp\ccs0HDb1.s:432    .text.main:00000000 $t
C:\cygwin64\tmp\ccs0HDb1.s:439    .text.main:00000000 main
C:\cygwin64\tmp\ccs0HDb1.s:545    .text.main:0000007c $d
C:\cygwin64\tmp\ccs0HDb1.s:554    .text.Error_Handler:00000000 $t
C:\cygwin64\tmp\ccs0HDb1.s:561    .text.Error_Handler:00000000 Error_Handler
C:\cygwin64\tmp\ccs0HDb1.s:584    .bss.flag:00000000 flag
                            *COM*:00000004 TxMailbox
C:\cygwin64\tmp\ccs0HDb1.s:590    .data.TxData:00000000 TxData
                            *COM*:00000018 TxHeader
C:\cygwin64\tmp\ccs0HDb1.s:585    .bss.flag:00000000 $d
C:\cygwin64\tmp\ccs0HDb1.s:587    .data.TxData:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_UART_Init
HAL_CAN_GetRxMessage
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_UART_Transmit
HAL_Delay
HAL_GPIO_TogglePin
