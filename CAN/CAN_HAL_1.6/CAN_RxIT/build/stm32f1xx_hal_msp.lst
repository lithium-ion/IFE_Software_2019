ARM GAS  /tmp/cclp9dKD.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_msp.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB66:
  25              		.file 1 "Src/stm32f1xx_hal_msp.c"
   1:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_hal_msp.c **** /**
   3:Src/stm32f1xx_hal_msp.c ****   ******************************************************************************
   4:Src/stm32f1xx_hal_msp.c ****   * File Name          : stm32f1xx_hal_msp.c
   5:Src/stm32f1xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization 
   6:Src/stm32f1xx_hal_msp.c ****   *                      and de-Initialization codes.
   7:Src/stm32f1xx_hal_msp.c ****   ******************************************************************************
   8:Src/stm32f1xx_hal_msp.c ****   ** This notice applies to any and all portions of this file
   9:Src/stm32f1xx_hal_msp.c ****   * that are not between comment pairs USER CODE BEGIN and
  10:Src/stm32f1xx_hal_msp.c ****   * USER CODE END. Other portions of this file, whether 
  11:Src/stm32f1xx_hal_msp.c ****   * inserted by the user or by software development tools
  12:Src/stm32f1xx_hal_msp.c ****   * are owned by their respective copyright owners.
  13:Src/stm32f1xx_hal_msp.c ****   *
  14:Src/stm32f1xx_hal_msp.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
  15:Src/stm32f1xx_hal_msp.c ****   *
  16:Src/stm32f1xx_hal_msp.c ****   * Redistribution and use in source and binary forms, with or without modification,
  17:Src/stm32f1xx_hal_msp.c ****   * are permitted provided that the following conditions are met:
  18:Src/stm32f1xx_hal_msp.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  19:Src/stm32f1xx_hal_msp.c ****   *      this list of conditions and the following disclaimer.
  20:Src/stm32f1xx_hal_msp.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/stm32f1xx_hal_msp.c ****   *      this list of conditions and the following disclaimer in the documentation
  22:Src/stm32f1xx_hal_msp.c ****   *      and/or other materials provided with the distribution.
  23:Src/stm32f1xx_hal_msp.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  24:Src/stm32f1xx_hal_msp.c ****   *      may be used to endorse or promote products derived from this software
  25:Src/stm32f1xx_hal_msp.c ****   *      without specific prior written permission.
  26:Src/stm32f1xx_hal_msp.c ****   *
  27:Src/stm32f1xx_hal_msp.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  28:Src/stm32f1xx_hal_msp.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  29:Src/stm32f1xx_hal_msp.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  30:Src/stm32f1xx_hal_msp.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  31:Src/stm32f1xx_hal_msp.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  32:Src/stm32f1xx_hal_msp.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  33:Src/stm32f1xx_hal_msp.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/cclp9dKD.s 			page 2


  34:Src/stm32f1xx_hal_msp.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  35:Src/stm32f1xx_hal_msp.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:Src/stm32f1xx_hal_msp.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:Src/stm32f1xx_hal_msp.c ****   *
  38:Src/stm32f1xx_hal_msp.c ****   ******************************************************************************
  39:Src/stm32f1xx_hal_msp.c ****   */
  40:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Header */
  41:Src/stm32f1xx_hal_msp.c **** 
  42:Src/stm32f1xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  43:Src/stm32f1xx_hal_msp.c **** #include "main.h"
  44:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  45:Src/stm32f1xx_hal_msp.c **** 
  46:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Includes */
  47:Src/stm32f1xx_hal_msp.c **** 
  48:Src/stm32f1xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  49:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN TD */
  50:Src/stm32f1xx_hal_msp.c **** 
  51:Src/stm32f1xx_hal_msp.c **** /* USER CODE END TD */
  52:Src/stm32f1xx_hal_msp.c **** 
  53:Src/stm32f1xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  54:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Define */
  55:Src/stm32f1xx_hal_msp.c ****  
  56:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Define */
  57:Src/stm32f1xx_hal_msp.c **** 
  58:Src/stm32f1xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  59:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  60:Src/stm32f1xx_hal_msp.c **** 
  61:Src/stm32f1xx_hal_msp.c **** /* USER CODE END Macro */
  62:Src/stm32f1xx_hal_msp.c **** 
  63:Src/stm32f1xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  64:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN PV */
  65:Src/stm32f1xx_hal_msp.c **** 
  66:Src/stm32f1xx_hal_msp.c **** /* USER CODE END PV */
  67:Src/stm32f1xx_hal_msp.c **** 
  68:Src/stm32f1xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  69:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  70:Src/stm32f1xx_hal_msp.c **** 
  71:Src/stm32f1xx_hal_msp.c **** /* USER CODE END PFP */
  72:Src/stm32f1xx_hal_msp.c **** 
  73:Src/stm32f1xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  74:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  75:Src/stm32f1xx_hal_msp.c **** 
  76:Src/stm32f1xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  77:Src/stm32f1xx_hal_msp.c **** 
  78:Src/stm32f1xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  79:Src/stm32f1xx_hal_msp.c **** 
  80:Src/stm32f1xx_hal_msp.c **** /* USER CODE END 0 */
  81:Src/stm32f1xx_hal_msp.c **** /**
  82:Src/stm32f1xx_hal_msp.c ****   * Initializes the Global MSP.
  83:Src/stm32f1xx_hal_msp.c ****   */
  84:Src/stm32f1xx_hal_msp.c **** void HAL_MspInit(void)
  85:Src/stm32f1xx_hal_msp.c **** {
  26              		.loc 1 85 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
ARM GAS  /tmp/cclp9dKD.s 			page 3


  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              	.LBB2:
  86:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  87:Src/stm32f1xx_hal_msp.c **** 
  88:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  89:Src/stm32f1xx_hal_msp.c **** 
  90:Src/stm32f1xx_hal_msp.c ****   __HAL_RCC_AFIO_CLK_ENABLE();
  35              		.loc 1 90 0
  36 0002 0E4B     		ldr	r3, .L3
  37 0004 9A69     		ldr	r2, [r3, #24]
  38 0006 42F00102 		orr	r2, r2, #1
  39 000a 9A61     		str	r2, [r3, #24]
  40 000c 9A69     		ldr	r2, [r3, #24]
  41 000e 02F00102 		and	r2, r2, #1
  42 0012 0092     		str	r2, [sp]
  43 0014 009A     		ldr	r2, [sp]
  44              	.LBE2:
  45              	.LBB3:
  91:Src/stm32f1xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  46              		.loc 1 91 0
  47 0016 DA69     		ldr	r2, [r3, #28]
  48 0018 42F08052 		orr	r2, r2, #268435456
  49 001c DA61     		str	r2, [r3, #28]
  50 001e DB69     		ldr	r3, [r3, #28]
  51 0020 03F08053 		and	r3, r3, #268435456
  52 0024 0193     		str	r3, [sp, #4]
  53 0026 019B     		ldr	r3, [sp, #4]
  54              	.LBE3:
  55              	.LBB4:
  92:Src/stm32f1xx_hal_msp.c **** 
  93:Src/stm32f1xx_hal_msp.c ****   /* System interrupt init*/
  94:Src/stm32f1xx_hal_msp.c **** 
  95:Src/stm32f1xx_hal_msp.c ****   /**DISABLE: JTAG-DP Disabled and SW-DP Disabled 
  96:Src/stm32f1xx_hal_msp.c ****   */
  97:Src/stm32f1xx_hal_msp.c ****   __HAL_AFIO_REMAP_SWJ_DISABLE();
  56              		.loc 1 97 0
  57 0028 054A     		ldr	r2, .L3+4
  58 002a 5368     		ldr	r3, [r2, #4]
  59              	.LVL0:
  60 002c 23F0E063 		bic	r3, r3, #117440512
  61              	.LVL1:
  62 0030 43F08063 		orr	r3, r3, #67108864
  63              	.LVL2:
  64 0034 5360     		str	r3, [r2, #4]
  65              	.LBE4:
  98:Src/stm32f1xx_hal_msp.c **** 
  99:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
 100:Src/stm32f1xx_hal_msp.c **** 
 101:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
 102:Src/stm32f1xx_hal_msp.c **** }
  66              		.loc 1 102 0
  67 0036 02B0     		add	sp, sp, #8
  68              	.LCFI1:
  69              		.cfi_def_cfa_offset 0
  70              		@ sp needed
ARM GAS  /tmp/cclp9dKD.s 			page 4


  71 0038 7047     		bx	lr
  72              	.L4:
  73 003a 00BF     		.align	2
  74              	.L3:
  75 003c 00100240 		.word	1073876992
  76 0040 00000140 		.word	1073807360
  77              		.cfi_endproc
  78              	.LFE66:
  80              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  81              		.align	1
  82              		.global	HAL_CAN_MspInit
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu softvfp
  88              	HAL_CAN_MspInit:
  89              	.LFB67:
 103:Src/stm32f1xx_hal_msp.c **** 
 104:Src/stm32f1xx_hal_msp.c **** /**
 105:Src/stm32f1xx_hal_msp.c **** * @brief CAN MSP Initialization
 106:Src/stm32f1xx_hal_msp.c **** * This function configures the hardware resources used in this example
 107:Src/stm32f1xx_hal_msp.c **** * @param hcan: CAN handle pointer
 108:Src/stm32f1xx_hal_msp.c **** * @retval None
 109:Src/stm32f1xx_hal_msp.c **** */
 110:Src/stm32f1xx_hal_msp.c **** void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
 111:Src/stm32f1xx_hal_msp.c **** {
  90              		.loc 1 111 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 24
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              	.LVL3:
  95 0000 30B5     		push	{r4, r5, lr}
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 12
  98              		.cfi_offset 4, -12
  99              		.cfi_offset 5, -8
 100              		.cfi_offset 14, -4
 101 0002 87B0     		sub	sp, sp, #28
 102              	.LCFI3:
 103              		.cfi_def_cfa_offset 40
 112:Src/stm32f1xx_hal_msp.c **** 
 113:Src/stm32f1xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 104              		.loc 1 113 0
 105 0004 0023     		movs	r3, #0
 106 0006 0293     		str	r3, [sp, #8]
 107 0008 0393     		str	r3, [sp, #12]
 108 000a 0493     		str	r3, [sp, #16]
 109 000c 0593     		str	r3, [sp, #20]
 114:Src/stm32f1xx_hal_msp.c ****   if(hcan->Instance==CAN1)
 110              		.loc 1 114 0
 111 000e 0268     		ldr	r2, [r0]
 112 0010 1B4B     		ldr	r3, .L9
 113 0012 9A42     		cmp	r2, r3
 114 0014 01D0     		beq	.L8
 115              	.LVL4:
 116              	.L5:
 115:Src/stm32f1xx_hal_msp.c ****   {
ARM GAS  /tmp/cclp9dKD.s 			page 5


 116:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspInit 0 */
 117:Src/stm32f1xx_hal_msp.c **** 
 118:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END CAN1_MspInit 0 */
 119:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock enable */
 120:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_CAN1_CLK_ENABLE();
 121:Src/stm32f1xx_hal_msp.c ****   
 122:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 123:Src/stm32f1xx_hal_msp.c ****     /**CAN GPIO Configuration    
 124:Src/stm32f1xx_hal_msp.c ****     PA11     ------> CAN_RX
 125:Src/stm32f1xx_hal_msp.c ****     PA12     ------> CAN_TX 
 126:Src/stm32f1xx_hal_msp.c ****     */
 127:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11;
 128:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 129:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 130:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 131:Src/stm32f1xx_hal_msp.c **** 
 132:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_12;
 133:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 134:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 135:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 136:Src/stm32f1xx_hal_msp.c **** 
 137:Src/stm32f1xx_hal_msp.c ****     /* CAN1 interrupt Init */
 138:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_SetPriority(USB_LP_CAN1_RX0_IRQn, 0, 0);
 139:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(USB_LP_CAN1_RX0_IRQn);
 140:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspInit 1 */
 141:Src/stm32f1xx_hal_msp.c **** 
 142:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END CAN1_MspInit 1 */
 143:Src/stm32f1xx_hal_msp.c ****   }
 144:Src/stm32f1xx_hal_msp.c **** 
 145:Src/stm32f1xx_hal_msp.c **** }
 117              		.loc 1 145 0
 118 0016 07B0     		add	sp, sp, #28
 119              	.LCFI4:
 120              		.cfi_remember_state
 121              		.cfi_def_cfa_offset 12
 122              		@ sp needed
 123 0018 30BD     		pop	{r4, r5, pc}
 124              	.LVL5:
 125              	.L8:
 126              	.LCFI5:
 127              		.cfi_restore_state
 128              	.LBB5:
 120:Src/stm32f1xx_hal_msp.c ****   
 129              		.loc 1 120 0
 130 001a 03F5D633 		add	r3, r3, #109568
 131 001e DA69     		ldr	r2, [r3, #28]
 132 0020 42F00072 		orr	r2, r2, #33554432
 133 0024 DA61     		str	r2, [r3, #28]
 134 0026 DA69     		ldr	r2, [r3, #28]
 135 0028 02F00072 		and	r2, r2, #33554432
 136 002c 0092     		str	r2, [sp]
 137 002e 009A     		ldr	r2, [sp]
 138              	.LBE5:
 139              	.LBB6:
 122:Src/stm32f1xx_hal_msp.c ****     /**CAN GPIO Configuration    
 140              		.loc 1 122 0
 141 0030 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp/cclp9dKD.s 			page 6


 142 0032 42F00402 		orr	r2, r2, #4
 143 0036 9A61     		str	r2, [r3, #24]
 144 0038 9B69     		ldr	r3, [r3, #24]
 145 003a 03F00403 		and	r3, r3, #4
 146 003e 0193     		str	r3, [sp, #4]
 147 0040 019B     		ldr	r3, [sp, #4]
 148              	.LBE6:
 127:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 149              		.loc 1 127 0
 150 0042 06AC     		add	r4, sp, #24
 151 0044 4FF40063 		mov	r3, #2048
 152 0048 44F8103D 		str	r3, [r4, #-16]!
 130:Src/stm32f1xx_hal_msp.c **** 
 153              		.loc 1 130 0
 154 004c 0D4D     		ldr	r5, .L9+4
 155 004e 2146     		mov	r1, r4
 156 0050 2846     		mov	r0, r5
 157              	.LVL6:
 158 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 159              	.LVL7:
 132:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 160              		.loc 1 132 0
 161 0056 4FF48053 		mov	r3, #4096
 162 005a 0293     		str	r3, [sp, #8]
 133:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 163              		.loc 1 133 0
 164 005c 0223     		movs	r3, #2
 165 005e 0393     		str	r3, [sp, #12]
 134:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 166              		.loc 1 134 0
 167 0060 0323     		movs	r3, #3
 168 0062 0593     		str	r3, [sp, #20]
 135:Src/stm32f1xx_hal_msp.c **** 
 169              		.loc 1 135 0
 170 0064 2146     		mov	r1, r4
 171 0066 2846     		mov	r0, r5
 172 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 173              	.LVL8:
 138:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(USB_LP_CAN1_RX0_IRQn);
 174              		.loc 1 138 0
 175 006c 0022     		movs	r2, #0
 176 006e 1146     		mov	r1, r2
 177 0070 1420     		movs	r0, #20
 178 0072 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 179              	.LVL9:
 139:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspInit 1 */
 180              		.loc 1 139 0
 181 0076 1420     		movs	r0, #20
 182 0078 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 183              	.LVL10:
 184              		.loc 1 145 0
 185 007c CBE7     		b	.L5
 186              	.L10:
 187 007e 00BF     		.align	2
 188              	.L9:
 189 0080 00640040 		.word	1073767424
 190 0084 00080140 		.word	1073809408
ARM GAS  /tmp/cclp9dKD.s 			page 7


 191              		.cfi_endproc
 192              	.LFE67:
 194              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 195              		.align	1
 196              		.global	HAL_CAN_MspDeInit
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu softvfp
 202              	HAL_CAN_MspDeInit:
 203              	.LFB68:
 146:Src/stm32f1xx_hal_msp.c **** 
 147:Src/stm32f1xx_hal_msp.c **** /**
 148:Src/stm32f1xx_hal_msp.c **** * @brief CAN MSP De-Initialization
 149:Src/stm32f1xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 150:Src/stm32f1xx_hal_msp.c **** * @param hcan: CAN handle pointer
 151:Src/stm32f1xx_hal_msp.c **** * @retval None
 152:Src/stm32f1xx_hal_msp.c **** */
 153:Src/stm32f1xx_hal_msp.c **** 
 154:Src/stm32f1xx_hal_msp.c **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
 155:Src/stm32f1xx_hal_msp.c **** {
 204              		.loc 1 155 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              	.LVL11:
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI6:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 156:Src/stm32f1xx_hal_msp.c **** 
 157:Src/stm32f1xx_hal_msp.c ****   if(hcan->Instance==CAN1)
 214              		.loc 1 157 0
 215 0002 0268     		ldr	r2, [r0]
 216 0004 084B     		ldr	r3, .L15
 217 0006 9A42     		cmp	r2, r3
 218 0008 00D0     		beq	.L14
 219              	.LVL12:
 220              	.L11:
 158:Src/stm32f1xx_hal_msp.c ****   {
 159:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspDeInit 0 */
 160:Src/stm32f1xx_hal_msp.c **** 
 161:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END CAN1_MspDeInit 0 */
 162:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock disable */
 163:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_CAN1_CLK_DISABLE();
 164:Src/stm32f1xx_hal_msp.c ****   
 165:Src/stm32f1xx_hal_msp.c ****     /**CAN GPIO Configuration    
 166:Src/stm32f1xx_hal_msp.c ****     PA11     ------> CAN_RX
 167:Src/stm32f1xx_hal_msp.c ****     PA12     ------> CAN_TX 
 168:Src/stm32f1xx_hal_msp.c ****     */
 169:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);
 170:Src/stm32f1xx_hal_msp.c **** 
 171:Src/stm32f1xx_hal_msp.c ****     /* CAN1 interrupt DeInit */
 172:Src/stm32f1xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(USB_LP_CAN1_RX0_IRQn);
 173:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspDeInit 1 */
 174:Src/stm32f1xx_hal_msp.c **** 
ARM GAS  /tmp/cclp9dKD.s 			page 8


 175:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END CAN1_MspDeInit 1 */
 176:Src/stm32f1xx_hal_msp.c ****   }
 177:Src/stm32f1xx_hal_msp.c **** 
 178:Src/stm32f1xx_hal_msp.c **** }
 221              		.loc 1 178 0
 222 000a 08BD     		pop	{r3, pc}
 223              	.LVL13:
 224              	.L14:
 163:Src/stm32f1xx_hal_msp.c ****   
 225              		.loc 1 163 0
 226 000c 074A     		ldr	r2, .L15+4
 227 000e D369     		ldr	r3, [r2, #28]
 228 0010 23F00073 		bic	r3, r3, #33554432
 229 0014 D361     		str	r3, [r2, #28]
 169:Src/stm32f1xx_hal_msp.c **** 
 230              		.loc 1 169 0
 231 0016 4FF4C051 		mov	r1, #6144
 232 001a 0548     		ldr	r0, .L15+8
 233              	.LVL14:
 234 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 235              	.LVL15:
 172:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspDeInit 1 */
 236              		.loc 1 172 0
 237 0020 1420     		movs	r0, #20
 238 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 239              	.LVL16:
 240              		.loc 1 178 0
 241 0026 F0E7     		b	.L11
 242              	.L16:
 243              		.align	2
 244              	.L15:
 245 0028 00640040 		.word	1073767424
 246 002c 00100240 		.word	1073876992
 247 0030 00080140 		.word	1073809408
 248              		.cfi_endproc
 249              	.LFE68:
 251              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 252              		.align	1
 253              		.global	HAL_UART_MspInit
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu softvfp
 259              	HAL_UART_MspInit:
 260              	.LFB69:
 179:Src/stm32f1xx_hal_msp.c **** 
 180:Src/stm32f1xx_hal_msp.c **** /**
 181:Src/stm32f1xx_hal_msp.c **** * @brief UART MSP Initialization
 182:Src/stm32f1xx_hal_msp.c **** * This function configures the hardware resources used in this example
 183:Src/stm32f1xx_hal_msp.c **** * @param huart: UART handle pointer
 184:Src/stm32f1xx_hal_msp.c **** * @retval None
 185:Src/stm32f1xx_hal_msp.c **** */
 186:Src/stm32f1xx_hal_msp.c **** void HAL_UART_MspInit(UART_HandleTypeDef* huart)
 187:Src/stm32f1xx_hal_msp.c **** {
 261              		.loc 1 187 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/cclp9dKD.s 			page 9


 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              	.LVL17:
 266 0000 10B5     		push	{r4, lr}
 267              	.LCFI7:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 271 0002 86B0     		sub	sp, sp, #24
 272              	.LCFI8:
 273              		.cfi_def_cfa_offset 32
 188:Src/stm32f1xx_hal_msp.c **** 
 189:Src/stm32f1xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 274              		.loc 1 189 0
 275 0004 0023     		movs	r3, #0
 276 0006 0293     		str	r3, [sp, #8]
 277 0008 0393     		str	r3, [sp, #12]
 278 000a 0493     		str	r3, [sp, #16]
 279 000c 0593     		str	r3, [sp, #20]
 190:Src/stm32f1xx_hal_msp.c ****   if(huart->Instance==USART1)
 280              		.loc 1 190 0
 281 000e 0268     		ldr	r2, [r0]
 282 0010 174B     		ldr	r3, .L21
 283 0012 9A42     		cmp	r2, r3
 284 0014 01D0     		beq	.L20
 285              	.LVL18:
 286              	.L17:
 191:Src/stm32f1xx_hal_msp.c ****   {
 192:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
 193:Src/stm32f1xx_hal_msp.c **** 
 194:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END USART1_MspInit 0 */
 195:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock enable */
 196:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_USART1_CLK_ENABLE();
 197:Src/stm32f1xx_hal_msp.c ****   
 198:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 199:Src/stm32f1xx_hal_msp.c ****     /**USART1 GPIO Configuration    
 200:Src/stm32f1xx_hal_msp.c ****     PA9     ------> USART1_TX
 201:Src/stm32f1xx_hal_msp.c ****     PA10     ------> USART1_RX 
 202:Src/stm32f1xx_hal_msp.c ****     */
 203:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 204:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 205:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 206:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 207:Src/stm32f1xx_hal_msp.c **** 
 208:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
 209:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 210:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 211:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 212:Src/stm32f1xx_hal_msp.c **** 
 213:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 214:Src/stm32f1xx_hal_msp.c **** 
 215:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END USART1_MspInit 1 */
 216:Src/stm32f1xx_hal_msp.c ****   }
 217:Src/stm32f1xx_hal_msp.c **** 
 218:Src/stm32f1xx_hal_msp.c **** }
 287              		.loc 1 218 0
 288 0016 06B0     		add	sp, sp, #24
 289              	.LCFI9:
ARM GAS  /tmp/cclp9dKD.s 			page 10


 290              		.cfi_remember_state
 291              		.cfi_def_cfa_offset 8
 292              		@ sp needed
 293 0018 10BD     		pop	{r4, pc}
 294              	.LVL19:
 295              	.L20:
 296              	.LCFI10:
 297              		.cfi_restore_state
 298              	.LBB7:
 196:Src/stm32f1xx_hal_msp.c ****   
 299              		.loc 1 196 0
 300 001a 03F55843 		add	r3, r3, #55296
 301 001e 9A69     		ldr	r2, [r3, #24]
 302 0020 42F48042 		orr	r2, r2, #16384
 303 0024 9A61     		str	r2, [r3, #24]
 304 0026 9A69     		ldr	r2, [r3, #24]
 305 0028 02F48042 		and	r2, r2, #16384
 306 002c 0092     		str	r2, [sp]
 307 002e 009A     		ldr	r2, [sp]
 308              	.LBE7:
 309              	.LBB8:
 198:Src/stm32f1xx_hal_msp.c ****     /**USART1 GPIO Configuration    
 310              		.loc 1 198 0
 311 0030 9A69     		ldr	r2, [r3, #24]
 312 0032 42F00402 		orr	r2, r2, #4
 313 0036 9A61     		str	r2, [r3, #24]
 314 0038 9B69     		ldr	r3, [r3, #24]
 315 003a 03F00403 		and	r3, r3, #4
 316 003e 0193     		str	r3, [sp, #4]
 317 0040 019B     		ldr	r3, [sp, #4]
 318              	.LBE8:
 203:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 319              		.loc 1 203 0
 320 0042 4FF40073 		mov	r3, #512
 321 0046 0293     		str	r3, [sp, #8]
 204:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 322              		.loc 1 204 0
 323 0048 0223     		movs	r3, #2
 324 004a 0393     		str	r3, [sp, #12]
 205:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 325              		.loc 1 205 0
 326 004c 0323     		movs	r3, #3
 327 004e 0593     		str	r3, [sp, #20]
 206:Src/stm32f1xx_hal_msp.c **** 
 328              		.loc 1 206 0
 329 0050 084C     		ldr	r4, .L21+4
 330 0052 02A9     		add	r1, sp, #8
 331 0054 2046     		mov	r0, r4
 332              	.LVL20:
 333 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 334              	.LVL21:
 208:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 335              		.loc 1 208 0
 336 005a 4FF48063 		mov	r3, #1024
 337 005e 0293     		str	r3, [sp, #8]
 209:Src/stm32f1xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 338              		.loc 1 209 0
ARM GAS  /tmp/cclp9dKD.s 			page 11


 339 0060 0023     		movs	r3, #0
 340 0062 0393     		str	r3, [sp, #12]
 210:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 341              		.loc 1 210 0
 342 0064 0493     		str	r3, [sp, #16]
 211:Src/stm32f1xx_hal_msp.c **** 
 343              		.loc 1 211 0
 344 0066 02A9     		add	r1, sp, #8
 345 0068 2046     		mov	r0, r4
 346 006a FFF7FEFF 		bl	HAL_GPIO_Init
 347              	.LVL22:
 348              		.loc 1 218 0
 349 006e D2E7     		b	.L17
 350              	.L22:
 351              		.align	2
 352              	.L21:
 353 0070 00380140 		.word	1073821696
 354 0074 00080140 		.word	1073809408
 355              		.cfi_endproc
 356              	.LFE69:
 358              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 359              		.align	1
 360              		.global	HAL_UART_MspDeInit
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu softvfp
 366              	HAL_UART_MspDeInit:
 367              	.LFB70:
 219:Src/stm32f1xx_hal_msp.c **** 
 220:Src/stm32f1xx_hal_msp.c **** /**
 221:Src/stm32f1xx_hal_msp.c **** * @brief UART MSP De-Initialization
 222:Src/stm32f1xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 223:Src/stm32f1xx_hal_msp.c **** * @param huart: UART handle pointer
 224:Src/stm32f1xx_hal_msp.c **** * @retval None
 225:Src/stm32f1xx_hal_msp.c **** */
 226:Src/stm32f1xx_hal_msp.c **** 
 227:Src/stm32f1xx_hal_msp.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
 228:Src/stm32f1xx_hal_msp.c **** {
 368              		.loc 1 228 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              	.LVL23:
 373 0000 08B5     		push	{r3, lr}
 374              	.LCFI11:
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 3, -8
 377              		.cfi_offset 14, -4
 229:Src/stm32f1xx_hal_msp.c **** 
 230:Src/stm32f1xx_hal_msp.c ****   if(huart->Instance==USART1)
 378              		.loc 1 230 0
 379 0002 0268     		ldr	r2, [r0]
 380 0004 074B     		ldr	r3, .L27
 381 0006 9A42     		cmp	r2, r3
 382 0008 00D0     		beq	.L26
 383              	.LVL24:
ARM GAS  /tmp/cclp9dKD.s 			page 12


 384              	.L23:
 231:Src/stm32f1xx_hal_msp.c ****   {
 232:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 233:Src/stm32f1xx_hal_msp.c **** 
 234:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END USART1_MspDeInit 0 */
 235:Src/stm32f1xx_hal_msp.c ****     /* Peripheral clock disable */
 236:Src/stm32f1xx_hal_msp.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 237:Src/stm32f1xx_hal_msp.c ****   
 238:Src/stm32f1xx_hal_msp.c ****     /**USART1 GPIO Configuration    
 239:Src/stm32f1xx_hal_msp.c ****     PA9     ------> USART1_TX
 240:Src/stm32f1xx_hal_msp.c ****     PA10     ------> USART1_RX 
 241:Src/stm32f1xx_hal_msp.c ****     */
 242:Src/stm32f1xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 243:Src/stm32f1xx_hal_msp.c **** 
 244:Src/stm32f1xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 245:Src/stm32f1xx_hal_msp.c **** 
 246:Src/stm32f1xx_hal_msp.c ****   /* USER CODE END USART1_MspDeInit 1 */
 247:Src/stm32f1xx_hal_msp.c ****   }
 248:Src/stm32f1xx_hal_msp.c **** 
 249:Src/stm32f1xx_hal_msp.c **** }
 385              		.loc 1 249 0
 386 000a 08BD     		pop	{r3, pc}
 387              	.LVL25:
 388              	.L26:
 236:Src/stm32f1xx_hal_msp.c ****   
 389              		.loc 1 236 0
 390 000c 064A     		ldr	r2, .L27+4
 391 000e 9369     		ldr	r3, [r2, #24]
 392 0010 23F48043 		bic	r3, r3, #16384
 393 0014 9361     		str	r3, [r2, #24]
 242:Src/stm32f1xx_hal_msp.c **** 
 394              		.loc 1 242 0
 395 0016 4FF4C061 		mov	r1, #1536
 396 001a 0448     		ldr	r0, .L27+8
 397              	.LVL26:
 398 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 399              	.LVL27:
 400              		.loc 1 249 0
 401 0020 F3E7     		b	.L23
 402              	.L28:
 403 0022 00BF     		.align	2
 404              	.L27:
 405 0024 00380140 		.word	1073821696
 406 0028 00100240 		.word	1073876992
 407 002c 00080140 		.word	1073809408
 408              		.cfi_endproc
 409              	.LFE70:
 411              		.text
 412              	.Letext0:
 413              		.file 2 "/home/osboxes/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_defau
 414              		.file 3 "/home/osboxes/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 415              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 416              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 417              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 418              		.file 7 "/home/osboxes/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 419              		.file 8 "/home/osboxes/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 420              		.file 9 "/home/osboxes/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/
ARM GAS  /tmp/cclp9dKD.s 			page 13


 421              		.file 10 "/home/osboxes/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 422              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 423              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 424              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 425              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 426              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 427              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/cclp9dKD.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_msp.c
     /tmp/cclp9dKD.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cclp9dKD.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cclp9dKD.s:75     .text.HAL_MspInit:000000000000003c $d
     /tmp/cclp9dKD.s:81     .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/cclp9dKD.s:88     .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/cclp9dKD.s:189    .text.HAL_CAN_MspInit:0000000000000080 $d
     /tmp/cclp9dKD.s:195    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/cclp9dKD.s:202    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/cclp9dKD.s:245    .text.HAL_CAN_MspDeInit:0000000000000028 $d
     /tmp/cclp9dKD.s:252    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cclp9dKD.s:259    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cclp9dKD.s:353    .text.HAL_UART_MspInit:0000000000000070 $d
     /tmp/cclp9dKD.s:359    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cclp9dKD.s:366    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cclp9dKD.s:405    .text.HAL_UART_MspDeInit:0000000000000024 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
