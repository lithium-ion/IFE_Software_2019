ARM GAS  /tmp/ccRTTlUN.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_can.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_CAN_ConfigFilter
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_CAN_ConfigFilter:
  24              	.LFB67:
  25              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @file    stm32f1xx_hal_can.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:           
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Initialization and de-initialization functions 
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + IO operation functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Peripheral State and Error functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   @verbatim
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]            
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Enable the CAN controller interface clock using 
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           __HAL_RCC_CAN1_CLK_ENABLE() for CAN1 and __HAL_RCC_CAN2_CLK_ENABLE() for CAN2
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       -@- In case you are using CAN2 only, you have to enable the CAN1 clock.
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) CAN pins configuration
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (++) Enable the clock for the CAN GPIOs using the following function:
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              __HAL_RCC_GPIOx_CLK_ENABLE();   
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (++) Connect and configure the involved CAN pins using the 
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****               following function HAL_GPIO_Init(); 
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****               
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Initialize and configure the CAN using HAL_CAN_Init() function.   
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Transmit the desired CAN frame using HAL_CAN_Transmit() function.
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Or transmit the desired CAN frame using HAL_CAN_Transmit_IT() function.
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            
ARM GAS  /tmp/ccRTTlUN.s 			page 2


  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Receive a CAN frame using HAL_CAN_Receive() function.
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Or receive a CAN frame using HAL_CAN_Receive_IT() function.
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      *** Polling mode IO operation ***
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      =================================
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      [..]    
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Start the CAN peripheral transmission and wait the end of this operation 
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            using HAL_CAN_Transmit(), at this stage user can specify the value of timeout
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            according to his end application
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Start the CAN peripheral reception and wait the end of this operation 
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            using HAL_CAN_Receive(), at this stage user can specify the value of timeout
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            according to his end application 
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      *** Interrupt mode IO operation ***    
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ===================================
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      [..]    
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Start the CAN peripheral transmission using HAL_CAN_Transmit_IT()
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Start the CAN peripheral reception using HAL_CAN_Receive_IT()         
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) Use HAL_CAN_IRQHandler() called under the used CAN Interrupt subroutine
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) At CAN end of transmission HAL_CAN_TxCpltCallback() function is executed and user can 
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             add his own code by customization of function pointer HAL_CAN_TxCpltCallback 
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        (+) In case of CAN Error, HAL_CAN_ErrorCallback() function is executed and user can 
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             add his own code by customization of function pointer HAL_CAN_ErrorCallback
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      *** CAN HAL driver macros list ***
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ============================================= 
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      [..]
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        Below the list of most used macros in CAN HAL driver.
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_ENABLE_IT: Enable the specified CAN interrupts
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_DISABLE_IT: Disable the specified CAN interrupts
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_GET_IT_SOURCE: Check if the specified CAN interrupt source is enabled or disabl
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_CLEAR_FLAG: Clear the CAN's pending flags
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) __HAL_CAN_GET_FLAG: Get the selected CAN's flag status
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      [..] 
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (@) You can refer to the CAN HAL driver header file for more useful macros 
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   @endverbatim
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****            
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @attention
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * Redistribution and use in source and binary forms, with or without modification,
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * are permitted provided that the following conditions are met:
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      this list of conditions and the following disclaimer.
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      this list of conditions and the following disclaimer in the documentation
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      and/or other materials provided with the distribution.
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      may be used to endorse or promote products derived from this software
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *      without specific prior written permission.
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
ARM GAS  /tmp/ccRTTlUN.s 			page 3


  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #include "stm32f1xx_hal.h"
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @addtogroup STM32F1xx_HAL_Driver
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN CAN
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief CAN driver modules
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED  
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || \
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     defined(STM32F103xG) || defined(STM32F105xC) || defined(STM32F107xC)
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #define CAN_TIMEOUT_VALUE  10U
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Private_Functions CAN Private Functions
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** static HAL_StatusTypeDef CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber);
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** static HAL_StatusTypeDef CAN_Transmit_IT(CAN_HandleTypeDef* hcan);
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
ARM GAS  /tmp/ccRTTlUN.s 			page 4


 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions 
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief    Initialization and Configuration functions 
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim    
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Initialize and configure the CAN. 
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) De-initialize the CAN. 
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef* hcan)
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp_mcr = 0U;
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan == NULL)
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      return HAL_ERROR;
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TTCM));
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ABOM));
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AWUM));
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.NART));
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.RFLM));
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TXFP));
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SJW));
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.BS1));
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.BS2));
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan->State == HAL_CAN_STATE_RESET)
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Allocate lock resource and initialize it */
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Lock = HAL_UNLOCKED;
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Init the low level hardware */
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
ARM GAS  /tmp/ccRTTlUN.s 			page 5


 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Initialize the CAN state*/
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Exit from sleep mode */
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Request initialisation */
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get timeout */
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();   
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Wait the acknowledge */
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while(HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_INAK))
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State= HAL_CAN_STATE_TIMEOUT;
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_UNLOCK(hcan);
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check acknowledge */
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((hcan->Instance->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the time triggered communication mode */
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.TTCM == ENABLE)
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_TTCM);
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_TTCM);
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the automatic bus-off management */
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.ABOM == ENABLE)
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_ABOM);
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_ABOM);
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the automatic wake-up mode */
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.AWUM == ENABLE)
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_AWUM);
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_AWUM);
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the no automatic retransmission */
ARM GAS  /tmp/ccRTTlUN.s 			page 6


 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.NART == ENABLE)
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_NART);
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_NART);
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the receive FIFO locked mode */
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.RFLM == ENABLE)
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_RFLM);
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_RFLM);
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the transmit FIFO priority */
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->Init.TXFP == ENABLE)
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(tmp_mcr, CAN_MCR_TXFP);
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(tmp_mcr, CAN_MCR_TXFP);
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update register MCR */
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     MODIFY_REG(hcan->Instance->MCR,
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_TTCM |
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_ABOM |
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_AWUM |
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_NART |
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_RFLM |
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_TXFP,
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                tmp_mcr);
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the bit timing register */
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.SJW            |
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.BS1            |
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.BS2            |
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               (hcan->Init.Prescaler - 1U)));
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request leave initialisation */
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get timeout */
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tickstart = HAL_GetTick();   
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Wait the acknowledge */
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     while(HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State= HAL_CAN_STATE_TIMEOUT;
ARM GAS  /tmp/ccRTTlUN.s 			page 7


 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Process unlocked */
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         __HAL_UNLOCK(hcan);
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_TIMEOUT;
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check acknowledged */
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_INAK))
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       status = CAN_INITSTATUS_SUCCESS;
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(status == CAN_INITSTATUS_SUCCESS)
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to none */
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Initialize the CAN state */
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Initialize the CAN state */
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR;
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  sFilterConfig: pointer to a CAN_FilterConfTypeDef structure that
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         contains the filter configuration information.
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef* hcan, CAN_FilterConfTypeDef* sFilterConfi
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
  26              		.loc 1 365 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 F0B4     		push	{r4, r5, r6, r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
ARM GAS  /tmp/ccRTTlUN.s 			page 8


  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 7, -4
  39              	.LVL1:
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t filternbrbitpos = 0U;
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(sFilterConfig->FilterNumber));
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(sFilterConfig->FilterActivation));
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BANKNUMBER(sFilterConfig->BankNumber));
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   filternbrbitpos = (1U) << sFilterConfig->FilterNumber;
  40              		.loc 1 379 0
  41 0002 4B69     		ldr	r3, [r1, #20]
  42 0004 0122     		movs	r2, #1
  43 0006 9A40     		lsls	r2, r2, r3
  44              	.LVL2:
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Initialisation mode for the filter */
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Select the start slave bank */
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   MODIFY_REG(hcan->Instance->FMR                         ,
  45              		.loc 1 383 0
  46 0008 0468     		ldr	r4, [r0]
  47 000a D4F80032 		ldr	r3, [r4, #512]
  48 000e 23F47C53 		bic	r3, r3, #16128
  49 0012 4D6A     		ldr	r5, [r1, #36]
  50 0014 43EA0523 		orr	r3, r3, r5, lsl #8
  51 0018 43F00103 		orr	r3, r3, #1
  52 001c C4F80032 		str	r3, [r4, #512]
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_FMR_CAN2SB                              ,
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_FMR_FINIT                              |
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              (uint32_t)(sFilterConfig->BankNumber << 8U)   );
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter Deactivation */
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->FA1R, filternbrbitpos);
  53              		.loc 1 389 0
  54 0020 0568     		ldr	r5, [r0]
  55 0022 D5F81C42 		ldr	r4, [r5, #540]
  56 0026 D343     		mvns	r3, r2
  57 0028 1C40     		ands	r4, r4, r3
  58 002a C5F81C42 		str	r4, [r5, #540]
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter Scale */
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
  59              		.loc 1 392 0
  60 002e CC69     		ldr	r4, [r1, #28]
  61 0030 C4B9     		cbnz	r4, .L2
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 16-bit scale for the filter */
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FS1R, filternbrbitpos);
  62              		.loc 1 395 0
ARM GAS  /tmp/ccRTTlUN.s 			page 9


  63 0032 0568     		ldr	r5, [r0]
  64 0034 D5F80C42 		ldr	r4, [r5, #524]
  65 0038 1C40     		ands	r4, r4, r3
  66 003a C5F80C42 		str	r4, [r5, #524]
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR1 = 
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
  67              		.loc 1 400 0
  68 003e CF68     		ldr	r7, [r1, #12]
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
  69              		.loc 1 401 0
  70 0040 8D88     		ldrh	r5, [r1, #4]
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
  71              		.loc 1 399 0
  72 0042 0668     		ldr	r6, [r0]
  73 0044 4C69     		ldr	r4, [r1, #20]
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
  74              		.loc 1 400 0
  75 0046 45EA0745 		orr	r5, r5, r7, lsl #16
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
  76              		.loc 1 399 0
  77 004a 4834     		adds	r4, r4, #72
  78 004c 46F83450 		str	r5, [r6, r4, lsl #3]
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR2 = 
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
  79              		.loc 1 406 0
  80 0050 8F68     		ldr	r7, [r1, #8]
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
  81              		.loc 1 407 0
  82 0052 0D88     		ldrh	r5, [r1]
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
  83              		.loc 1 405 0
  84 0054 0468     		ldr	r4, [r0]
  85 0056 4E69     		ldr	r6, [r1, #20]
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
  86              		.loc 1 406 0
  87 0058 45EA0745 		orr	r5, r5, r7, lsl #16
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
  88              		.loc 1 405 0
  89 005c 4836     		adds	r6, r6, #72
  90 005e 04EBC604 		add	r4, r4, r6, lsl #3
  91 0062 6560     		str	r5, [r4, #4]
  92              	.L2:
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
  93              		.loc 1 410 0
  94 0064 CC69     		ldr	r4, [r1, #28]
  95 0066 012C     		cmp	r4, #1
  96 0068 1ED0     		beq	.L10
  97              	.L3:
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccRTTlUN.s 			page 10


 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit scale for the filter */
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->FS1R, filternbrbitpos);
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR1 = 
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR2 = 
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter Mode */
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
  98              		.loc 1 425 0
  99 006a 8C69     		ldr	r4, [r1, #24]
 100 006c 002C     		cmp	r4, #0
 101 006e 35D1     		bne	.L4
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*Id/Mask mode for the filter*/
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FM1R, filternbrbitpos);
 102              		.loc 1 428 0
 103 0070 0568     		ldr	r5, [r0]
 104 0072 D5F80442 		ldr	r4, [r5, #516]
 105 0076 1C40     		ands	r4, r4, r3
 106 0078 C5F80442 		str	r4, [r5, #516]
 107              	.L5:
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*Identifier list mode for the filter*/
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->FM1R, filternbrbitpos);
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter FIFO assignment */
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 108              		.loc 1 437 0
 109 007c 0C69     		ldr	r4, [r1, #16]
 110 007e 002C     		cmp	r4, #0
 111 0080 33D1     		bne	.L6
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* FIFO 0 assignation for the filter */
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FFA1R, filternbrbitpos);
 112              		.loc 1 440 0
 113 0082 0468     		ldr	r4, [r0]
 114 0084 D4F81452 		ldr	r5, [r4, #532]
 115 0088 2B40     		ands	r3, r3, r5
 116 008a C4F81432 		str	r3, [r4, #532]
 117              	.L7:
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* FIFO 1 assignation for the filter */
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->FFA1R, filternbrbitpos);
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Filter activation */
ARM GAS  /tmp/ccRTTlUN.s 			page 11


 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (sFilterConfig->FilterActivation == ENABLE)
 118              		.loc 1 449 0
 119 008e 0B6A     		ldr	r3, [r1, #32]
 120 0090 012B     		cmp	r3, #1
 121 0092 31D0     		beq	.L11
 122              	.LVL3:
 123              	.L8:
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->FA1R, filternbrbitpos);
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Leave the initialisation mode for the filter */
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->FMR, ((uint32_t)CAN_FMR_FINIT));
 124              		.loc 1 455 0
 125 0094 0268     		ldr	r2, [r0]
 126 0096 D2F80032 		ldr	r3, [r2, #512]
 127 009a 23F00103 		bic	r3, r3, #1
 128 009e C2F80032 		str	r3, [r2, #512]
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 129              		.loc 1 459 0
 130 00a2 0020     		movs	r0, #0
 131              	.LVL4:
 132 00a4 F0BC     		pop	{r4, r5, r6, r7}
 133              	.LCFI1:
 134              		.cfi_remember_state
 135              		.cfi_restore 7
 136              		.cfi_restore 6
 137              		.cfi_restore 5
 138              		.cfi_restore 4
 139              		.cfi_def_cfa_offset 0
 140 00a6 7047     		bx	lr
 141              	.LVL5:
 142              	.L10:
 143              	.LCFI2:
 144              		.cfi_restore_state
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 145              		.loc 1 413 0
 146 00a8 0568     		ldr	r5, [r0]
 147 00aa D5F80C42 		ldr	r4, [r5, #524]
 148 00ae 1443     		orrs	r4, r4, r2
 149 00b0 C5F80C42 		str	r4, [r5, #524]
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 150              		.loc 1 416 0
 151 00b4 0F68     		ldr	r7, [r1]
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 152              		.loc 1 417 0
 153 00b6 8D88     		ldrh	r5, [r1, #4]
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 154              		.loc 1 415 0
 155 00b8 0668     		ldr	r6, [r0]
 156 00ba 4C69     		ldr	r4, [r1, #20]
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 157              		.loc 1 416 0
 158 00bc 45EA0745 		orr	r5, r5, r7, lsl #16
ARM GAS  /tmp/ccRTTlUN.s 			page 12


 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 159              		.loc 1 415 0
 160 00c0 4834     		adds	r4, r4, #72
 161 00c2 46F83450 		str	r5, [r6, r4, lsl #3]
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 162              		.loc 1 420 0
 163 00c6 8F68     		ldr	r7, [r1, #8]
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 164              		.loc 1 421 0
 165 00c8 8D89     		ldrh	r5, [r1, #12]
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 166              		.loc 1 419 0
 167 00ca 0468     		ldr	r4, [r0]
 168 00cc 4E69     		ldr	r6, [r1, #20]
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 169              		.loc 1 420 0
 170 00ce 45EA0745 		orr	r5, r5, r7, lsl #16
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 171              		.loc 1 419 0
 172 00d2 4836     		adds	r6, r6, #72
 173 00d4 04EBC604 		add	r4, r4, r6, lsl #3
 174 00d8 6560     		str	r5, [r4, #4]
 175 00da C6E7     		b	.L3
 176              	.L4:
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 177              		.loc 1 433 0
 178 00dc 0568     		ldr	r5, [r0]
 179 00de D5F80442 		ldr	r4, [r5, #516]
 180 00e2 1443     		orrs	r4, r4, r2
 181 00e4 C5F80442 		str	r4, [r5, #516]
 182 00e8 C8E7     		b	.L5
 183              	.L6:
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 184              		.loc 1 445 0
 185 00ea 0468     		ldr	r4, [r0]
 186 00ec D4F81432 		ldr	r3, [r4, #532]
 187 00f0 1343     		orrs	r3, r3, r2
 188 00f2 C4F81432 		str	r3, [r4, #532]
 189 00f6 CAE7     		b	.L7
 190              	.L11:
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 191              		.loc 1 451 0
 192 00f8 0168     		ldr	r1, [r0]
 193              	.LVL6:
 194 00fa D1F81C32 		ldr	r3, [r1, #540]
 195 00fe 1A43     		orrs	r2, r2, r3
 196              	.LVL7:
 197 0100 C1F81C22 		str	r2, [r1, #540]
 198 0104 C6E7     		b	.L8
 199              		.cfi_endproc
 200              	.LFE67:
 202              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 203              		.align	1
 204              		.weak	HAL_CAN_MspInit
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
ARM GAS  /tmp/ccRTTlUN.s 			page 13


 208              		.fpu softvfp
 210              	HAL_CAN_MspInit:
 211              	.LFB69:
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Deinitializes the CANx peripheral registers to their default reset values. 
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef* hcan)
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan == NULL)
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      return HAL_ERROR;
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* DeInit the low level hardware */
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release Lock */
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 212              		.loc 1 501 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL8:
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_MspInit can be implemented in the user file
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */ 
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
ARM GAS  /tmp/ccRTTlUN.s 			page 14


 218              		.loc 1 507 0
 219 0000 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE69:
 223              		.section	.text.HAL_CAN_Init,"ax",%progbits
 224              		.align	1
 225              		.global	HAL_CAN_Init
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu softvfp
 231              	HAL_CAN_Init:
 232              	.LFB66:
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 233              		.loc 1 172 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              	.LVL9:
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 238              		.loc 1 178 0
 239 0000 0028     		cmp	r0, #0
 240 0002 00F09680 		beq	.L32
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 241              		.loc 1 172 0
 242 0006 38B5     		push	{r3, r4, r5, lr}
 243              	.LCFI3:
 244              		.cfi_def_cfa_offset 16
 245              		.cfi_offset 3, -16
 246              		.cfi_offset 4, -12
 247              		.cfi_offset 5, -8
 248              		.cfi_offset 14, -4
 249 0008 0446     		mov	r4, r0
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 250              		.loc 1 197 0
 251 000a 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 252 000e 03B3     		cbz	r3, .L38
 253              	.LVL10:
 254              	.L15:
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 255              		.loc 1 206 0
 256 0010 0223     		movs	r3, #2
 257 0012 84F83C30 		strb	r3, [r4, #60]
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 258              		.loc 1 209 0
 259 0016 2268     		ldr	r2, [r4]
 260 0018 1368     		ldr	r3, [r2]
 261 001a 23F00203 		bic	r3, r3, #2
 262 001e 1360     		str	r3, [r2]
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 263              		.loc 1 212 0
 264 0020 2268     		ldr	r2, [r4]
 265 0022 1368     		ldr	r3, [r2]
 266 0024 43F00103 		orr	r3, r3, #1
 267 0028 1360     		str	r3, [r2]
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 268              		.loc 1 215 0
ARM GAS  /tmp/ccRTTlUN.s 			page 15


 269 002a FFF7FEFF 		bl	HAL_GetTick
 270              	.LVL11:
 271 002e 0546     		mov	r5, r0
 272              	.LVL12:
 273              	.L16:
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 274              		.loc 1 218 0
 275 0030 2368     		ldr	r3, [r4]
 276 0032 5A68     		ldr	r2, [r3, #4]
 277 0034 12F0010F 		tst	r2, #1
 278 0038 10D1     		bne	.L39
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 279              		.loc 1 220 0
 280 003a FFF7FEFF 		bl	HAL_GetTick
 281              	.LVL13:
 282 003e 401B     		subs	r0, r0, r5
 283 0040 0A28     		cmp	r0, #10
 284 0042 F5D9     		bls	.L16
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
 285              		.loc 1 222 0
 286 0044 0320     		movs	r0, #3
 287 0046 84F83C00 		strb	r0, [r4, #60]
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
 288              		.loc 1 224 0
 289 004a 0023     		movs	r3, #0
 290 004c 84F83D30 		strb	r3, [r4, #61]
 291              	.LVL14:
 292              	.L14:
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 293              		.loc 1 353 0
 294 0050 38BD     		pop	{r3, r4, r5, pc}
 295              	.LVL15:
 296              	.L38:
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Init the low level hardware */
 297              		.loc 1 200 0
 298 0052 80F83D30 		strb	r3, [r0, #61]
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 299              		.loc 1 202 0
 300 0056 FFF7FEFF 		bl	HAL_CAN_MspInit
 301              	.LVL16:
 302 005a D9E7     		b	.L15
 303              	.LVL17:
 304              	.L39:
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 305              		.loc 1 230 0
 306 005c 5A68     		ldr	r2, [r3, #4]
 307 005e 12F0010F 		tst	r2, #1
 308 0062 5BD0     		beq	.L18
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 309              		.loc 1 233 0
 310 0064 A269     		ldr	r2, [r4, #24]
 311 0066 012A     		cmp	r2, #1
 312 0068 43D0     		beq	.L40
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 313              		.loc 1 239 0
 314 006a 0022     		movs	r2, #0
 315              	.L19:
ARM GAS  /tmp/ccRTTlUN.s 			page 16


 316              	.LVL18:
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 317              		.loc 1 243 0
 318 006c E169     		ldr	r1, [r4, #28]
 319 006e 0129     		cmp	r1, #1
 320 0070 41D0     		beq	.L41
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 321              		.loc 1 249 0
 322 0072 22F04002 		bic	r2, r2, #64
 323              	.LVL19:
 324              	.L21:
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 325              		.loc 1 253 0
 326 0076 216A     		ldr	r1, [r4, #32]
 327 0078 0129     		cmp	r1, #1
 328 007a 3FD0     		beq	.L42
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 329              		.loc 1 259 0
 330 007c 22F02002 		bic	r2, r2, #32
 331              	.LVL20:
 332              	.L23:
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 333              		.loc 1 262 0
 334 0080 616A     		ldr	r1, [r4, #36]
 335 0082 0129     		cmp	r1, #1
 336 0084 3DD0     		beq	.L43
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 337              		.loc 1 268 0
 338 0086 22F01002 		bic	r2, r2, #16
 339              	.LVL21:
 340              	.L25:
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 341              		.loc 1 272 0
 342 008a A16A     		ldr	r1, [r4, #40]
 343 008c 0129     		cmp	r1, #1
 344 008e 3BD0     		beq	.L44
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 345              		.loc 1 278 0
 346 0090 22F00802 		bic	r2, r2, #8
 347              	.LVL22:
 348              	.L27:
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 349              		.loc 1 281 0
 350 0094 E16A     		ldr	r1, [r4, #44]
 351 0096 0129     		cmp	r1, #1
 352 0098 39D0     		beq	.L45
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 353              		.loc 1 287 0
 354 009a 22F00402 		bic	r2, r2, #4
 355              	.LVL23:
 356              	.L29:
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                CAN_MCR_TTCM |
 357              		.loc 1 291 0
 358 009e 1968     		ldr	r1, [r3]
 359 00a0 21F0FC01 		bic	r1, r1, #252
 360 00a4 0A43     		orrs	r2, r2, r1
 361              	.LVL24:
ARM GAS  /tmp/ccRTTlUN.s 			page 17


 362 00a6 1A60     		str	r2, [r3]
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                               hcan->Init.SJW            |
 363              		.loc 1 301 0
 364 00a8 A368     		ldr	r3, [r4, #8]
 365 00aa E268     		ldr	r2, [r4, #12]
 366 00ac 1343     		orrs	r3, r3, r2
 367 00ae 2269     		ldr	r2, [r4, #16]
 368 00b0 1343     		orrs	r3, r3, r2
 369 00b2 6269     		ldr	r2, [r4, #20]
 370 00b4 1343     		orrs	r3, r3, r2
 371 00b6 6268     		ldr	r2, [r4, #4]
 372 00b8 013A     		subs	r2, r2, #1
 373 00ba 2168     		ldr	r1, [r4]
 374 00bc 1343     		orrs	r3, r3, r2
 375 00be CB61     		str	r3, [r1, #28]
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 376              		.loc 1 308 0
 377 00c0 2268     		ldr	r2, [r4]
 378 00c2 1368     		ldr	r3, [r2]
 379 00c4 23F00103 		bic	r3, r3, #1
 380 00c8 1360     		str	r3, [r2]
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    
 381              		.loc 1 311 0
 382 00ca FFF7FEFF 		bl	HAL_GetTick
 383              	.LVL25:
 384 00ce 0546     		mov	r5, r0
 385              	.LVL26:
 386              	.L30:
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 387              		.loc 1 314 0
 388 00d0 2368     		ldr	r3, [r4]
 389 00d2 5A68     		ldr	r2, [r3, #4]
 390 00d4 12F0010F 		tst	r2, #1
 391 00d8 1CD0     		beq	.L46
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 392              		.loc 1 316 0
 393 00da FFF7FEFF 		bl	HAL_GetTick
 394              	.LVL27:
 395 00de 401B     		subs	r0, r0, r5
 396 00e0 0A28     		cmp	r0, #10
 397 00e2 F5D9     		bls	.L30
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 398              		.loc 1 318 0
 399 00e4 0320     		movs	r0, #3
 400 00e6 84F83C00 		strb	r0, [r4, #60]
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 401              		.loc 1 321 0
 402 00ea 0023     		movs	r3, #0
 403 00ec 84F83D30 		strb	r3, [r4, #61]
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 404              		.loc 1 323 0
 405 00f0 AEE7     		b	.L14
 406              	.LVL28:
 407              	.L40:
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 408              		.loc 1 235 0
 409 00f2 8022     		movs	r2, #128
ARM GAS  /tmp/ccRTTlUN.s 			page 18


 410 00f4 BAE7     		b	.L19
 411              	.LVL29:
 412              	.L41:
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 413              		.loc 1 245 0
 414 00f6 42F04002 		orr	r2, r2, #64
 415              	.LVL30:
 416 00fa BCE7     		b	.L21
 417              	.L42:
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 418              		.loc 1 255 0
 419 00fc 42F02002 		orr	r2, r2, #32
 420              	.LVL31:
 421 0100 BEE7     		b	.L23
 422              	.L43:
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 423              		.loc 1 264 0
 424 0102 42F01002 		orr	r2, r2, #16
 425              	.LVL32:
 426 0106 C0E7     		b	.L25
 427              	.L44:
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 428              		.loc 1 274 0
 429 0108 42F00802 		orr	r2, r2, #8
 430              	.LVL33:
 431 010c C2E7     		b	.L27
 432              	.L45:
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 433              		.loc 1 283 0
 434 010e 42F00402 		orr	r2, r2, #4
 435              	.LVL34:
 436 0112 C4E7     		b	.L29
 437              	.LVL35:
 438              	.L46:
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 439              		.loc 1 328 0
 440 0114 5B68     		ldr	r3, [r3, #4]
 441 0116 13F0010F 		tst	r3, #1
 442 011a 04D0     		beq	.L47
 443              	.L18:
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 444              		.loc 1 348 0
 445 011c 0423     		movs	r3, #4
 446 011e 84F83C30 		strb	r3, [r4, #60]
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 447              		.loc 1 351 0
 448 0122 0120     		movs	r0, #1
 449 0124 94E7     		b	.L14
 450              	.L47:
 451              	.LVL36:
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 452              		.loc 1 337 0
 453 0126 0020     		movs	r0, #0
 454 0128 2064     		str	r0, [r4, #64]
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 455              		.loc 1 340 0
 456 012a 0123     		movs	r3, #1
ARM GAS  /tmp/ccRTTlUN.s 			page 19


 457 012c 84F83C30 		strb	r3, [r4, #60]
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 458              		.loc 1 343 0
 459 0130 8EE7     		b	.L14
 460              	.LVL37:
 461              	.L32:
 462              	.LCFI4:
 463              		.cfi_def_cfa_offset 0
 464              		.cfi_restore 3
 465              		.cfi_restore 4
 466              		.cfi_restore 5
 467              		.cfi_restore 14
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 468              		.loc 1 180 0
 469 0132 0120     		movs	r0, #1
 470              	.LVL38:
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 471              		.loc 1 353 0
 472 0134 7047     		bx	lr
 473              		.cfi_endproc
 474              	.LFE66:
 476              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 477              		.align	1
 478              		.weak	HAL_CAN_MspDeInit
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 482              		.fpu softvfp
 484              	HAL_CAN_MspDeInit:
 485              	.LFB70:
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 486              		.loc 1 516 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491              	.LVL39:
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_MspDeInit can be implemented in the user file
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */ 
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 492              		.loc 1 522 0
 493 0000 7047     		bx	lr
 494              		.cfi_endproc
 495              	.LFE70:
 497              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 498              		.align	1
ARM GAS  /tmp/ccRTTlUN.s 			page 20


 499              		.global	HAL_CAN_DeInit
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu softvfp
 505              	HAL_CAN_DeInit:
 506              	.LFB68:
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 507              		.loc 1 468 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              	.LVL40:
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 512              		.loc 1 470 0
 513 0000 60B1     		cbz	r0, .L51
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 514              		.loc 1 468 0
 515 0002 10B5     		push	{r4, lr}
 516              	.LCFI5:
 517              		.cfi_def_cfa_offset 8
 518              		.cfi_offset 4, -8
 519              		.cfi_offset 14, -4
 520 0004 0446     		mov	r4, r0
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 521              		.loc 1 479 0
 522 0006 0223     		movs	r3, #2
 523 0008 80F83C30 		strb	r3, [r0, #60]
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 524              		.loc 1 482 0
 525 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
 526              	.LVL41:
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 527              		.loc 1 485 0
 528 0010 0020     		movs	r0, #0
 529 0012 84F83C00 		strb	r0, [r4, #60]
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 530              		.loc 1 488 0
 531 0016 84F83D00 		strb	r0, [r4, #61]
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 532              		.loc 1 492 0
 533 001a 10BD     		pop	{r4, pc}
 534              	.LVL42:
 535              	.L51:
 536              	.LCFI6:
 537              		.cfi_def_cfa_offset 0
 538              		.cfi_restore 4
 539              		.cfi_restore 14
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 540              		.loc 1 472 0
 541 001c 0120     		movs	r0, #1
 542              	.LVL43:
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 543              		.loc 1 492 0
 544 001e 7047     		bx	lr
 545              		.cfi_endproc
 546              	.LFE68:
ARM GAS  /tmp/ccRTTlUN.s 			page 21


 548              		.section	.text.HAL_CAN_Transmit,"ax",%progbits
 549              		.align	1
 550              		.global	HAL_CAN_Transmit
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu softvfp
 556              	HAL_CAN_Transmit:
 557              	.LFB71:
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Input and Output operation functions
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *  @brief    I/O operation functions 
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim   
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                       ##### IO operation functions #####
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Transmit a CAN frame message.
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Receive a CAN frame message.
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Enter CAN peripheral in sleep mode. 
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Wake up the CAN peripheral from sleep mode.
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  Timeout: Specify Timeout value   
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Transmit(CAN_HandleTypeDef* hcan, uint32_t Timeout)
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 558              		.loc 1 553 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              	.LVL44:
 563 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 564              	.LCFI7:
 565              		.cfi_def_cfa_offset 24
 566              		.cfi_offset 3, -24
 567              		.cfi_offset 4, -20
 568              		.cfi_offset 5, -16
 569              		.cfi_offset 6, -12
 570              		.cfi_offset 7, -8
 571              		.cfi_offset 14, -4
 572              	.LVL45:
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
ARM GAS  /tmp/ccRTTlUN.s 			page 22


 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(hcan->pTxMsg->IDE));
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RTR(hcan->pTxMsg->RTR));
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_DLC(hcan->pTxMsg->DLC));
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(((hcan->Instance->TSR&CAN_TSR_TME0) == CAN_TSR_TME0) || \
 573              		.loc 1 562 0
 574 0002 0368     		ldr	r3, [r0]
 575 0004 9A68     		ldr	r2, [r3, #8]
 576 0006 12F0806F 		tst	r2, #67108864
 577 000a 08D1     		bne	.L57
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 578              		.loc 1 563 0 discriminator 1
 579 000c 9A68     		ldr	r2, [r3, #8]
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 580              		.loc 1 562 0 discriminator 1
 581 000e 12F0006F 		tst	r2, #134217728
 582 0012 04D1     		bne	.L57
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME2) == CAN_TSR_TME2))
 583              		.loc 1 564 0
 584 0014 9A68     		ldr	r2, [r3, #8]
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 585              		.loc 1 563 0
 586 0016 12F0805F 		tst	r2, #268435456
 587 001a 00F0EA80 		beq	.L58
 588              	.L57:
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process locked */
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_LOCK(hcan);
 589              		.loc 1 567 0
 590 001e 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 591 0022 012A     		cmp	r2, #1
 592 0024 00F0EA80 		beq	.L83
 593              		.loc 1 567 0 is_stmt 0 discriminator 2
 594 0028 0122     		movs	r2, #1
 595 002a 80F83D20 		strb	r2, [r0, #61]
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 596              		.loc 1 570 0 is_stmt 1 discriminator 2
 597 002e 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 598 0032 D2B2     		uxtb	r2, r2
 599 0034 322A     		cmp	r2, #50
 600 0036 14D0     		beq	.L61
 601 0038 622A     		cmp	r2, #98
 602 003a 16D0     		beq	.L62
 603 003c 222A     		cmp	r2, #34
 604 003e 03D0     		beq	.L89
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
ARM GAS  /tmp/ccRTTlUN.s 			page 23


 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX;
 605              		.loc 1 582 0
 606 0040 1222     		movs	r2, #18
 607 0042 80F83C20 		strb	r2, [r0, #60]
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 608              		.loc 1 583 0
 609 0046 02E0     		b	.L64
 610              	.L89:
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 611              		.loc 1 573 0
 612 0048 4222     		movs	r2, #66
 613 004a 80F83C20 		strb	r2, [r0, #60]
 614              	.L64:
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Select one empty transmit mailbox */
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME0))
 615              		.loc 1 587 0
 616 004e 9A68     		ldr	r2, [r3, #8]
 617 0050 12F0806F 		tst	r2, #67108864
 618 0054 0DD1     		bne	.L84
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_0;
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else if (HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME1))
 619              		.loc 1 591 0
 620 0056 9A68     		ldr	r2, [r3, #8]
 621 0058 12F0006F 		tst	r2, #134217728
 622 005c 5FD0     		beq	.L85
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_1;
 623              		.loc 1 593 0
 624 005e 0125     		movs	r5, #1
 625 0060 08E0     		b	.L65
 626              	.L61:
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 627              		.loc 1 576 0
 628 0062 5222     		movs	r2, #82
 629 0064 80F83C20 		strb	r2, [r0, #60]
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 630              		.loc 1 577 0
 631 0068 F1E7     		b	.L64
 632              	.L62:
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 633              		.loc 1 579 0
 634 006a 7222     		movs	r2, #114
 635 006c 80F83C20 		strb	r2, [r0, #60]
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 636              		.loc 1 580 0
 637 0070 EDE7     		b	.L64
 638              	.L84:
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 639              		.loc 1 589 0
 640 0072 0025     		movs	r5, #0
ARM GAS  /tmp/ccRTTlUN.s 			page 24


 641              	.L65:
 642              	.LVL46:
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_2;
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the Id */
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR &= CAN_TI0R_TXRQ;
 643              		.loc 1 601 0
 644 0074 05F11802 		add	r2, r5, #24
 645 0078 1201     		lsls	r2, r2, #4
 646 007a 9C58     		ldr	r4, [r3, r2]
 647 007c 04F00104 		and	r4, r4, #1
 648 0080 9C50     		str	r4, [r3, r2]
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->pTxMsg->IDE == CAN_ID_STD)
 649              		.loc 1 602 0
 650 0082 026B     		ldr	r2, [r0, #48]
 651 0084 9368     		ldr	r3, [r2, #8]
 652 0086 002B     		cmp	r3, #0
 653 0088 4BD1     		bne	.L66
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       assert_param(IS_CAN_STDID(hcan->pTxMsg->StdId));  
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->StdId << CAN_TI0R_STID_Pos
 654              		.loc 1 605 0
 655 008a 0668     		ldr	r6, [r0]
 656 008c 05F11803 		add	r3, r5, #24
 657 0090 1B01     		lsls	r3, r3, #4
 658 0092 F458     		ldr	r4, [r6, r3]
 659 0094 1768     		ldr	r7, [r2]
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 660              		.loc 1 606 0
 661 0096 D268     		ldr	r2, [r2, #12]
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 662              		.loc 1 605 0
 663 0098 42EA4752 		orr	r2, r2, r7, lsl #21
 664 009c 2243     		orrs	r2, r2, r4
 665 009e F250     		str	r2, [r6, r3]
 666              	.L67:
 667 00a0 0E46     		mov	r6, r1
 668 00a2 0446     		mov	r4, r0
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       assert_param(IS_CAN_EXTID(hcan->pTxMsg->ExtId));
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->ExtId << CAN_TI0R_EXID_Pos
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the DLC */
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->pTxMsg->DLC &= (uint8_t)0x0000000F;
 669              		.loc 1 617 0
 670 00a4 026B     		ldr	r2, [r0, #48]
 671 00a6 1369     		ldr	r3, [r2, #16]
 672 00a8 03F00F03 		and	r3, r3, #15
ARM GAS  /tmp/ccRTTlUN.s 			page 25


 673 00ac 1361     		str	r3, [r2, #16]
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 674              		.loc 1 618 0
 675 00ae 0368     		ldr	r3, [r0]
 676 00b0 05F11802 		add	r2, r5, #24
 677 00b4 1201     		lsls	r2, r2, #4
 678 00b6 1344     		add	r3, r3, r2
 679 00b8 5968     		ldr	r1, [r3, #4]
 680              	.LVL47:
 681 00ba 21F00F01 		bic	r1, r1, #15
 682 00be 5960     		str	r1, [r3, #4]
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR |= hcan->pTxMsg->DLC;
 683              		.loc 1 619 0
 684 00c0 0368     		ldr	r3, [r0]
 685 00c2 1344     		add	r3, r3, r2
 686 00c4 5968     		ldr	r1, [r3, #4]
 687 00c6 006B     		ldr	r0, [r0, #48]
 688              	.LVL48:
 689 00c8 0069     		ldr	r0, [r0, #16]
 690 00ca 0143     		orrs	r1, r1, r0
 691 00cc 5960     		str	r1, [r3, #4]
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the data field */
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR, ((uint32_t)hcan->pTxMsg->Data[3] <<
 692              		.loc 1 622 0
 693 00ce 216B     		ldr	r1, [r4, #48]
 694 00d0 C87D     		ldrb	r0, [r1, #23]	@ zero_extendqisi2
 695 00d2 8B7D     		ldrb	r3, [r1, #22]	@ zero_extendqisi2
 696 00d4 1B04     		lsls	r3, r3, #16
 697 00d6 43EA0063 		orr	r3, r3, r0, lsl #24
 698 00da 487D     		ldrb	r0, [r1, #21]	@ zero_extendqisi2
 699 00dc 43EA0023 		orr	r3, r3, r0, lsl #8
 700 00e0 097D     		ldrb	r1, [r1, #20]	@ zero_extendqisi2
 701 00e2 2068     		ldr	r0, [r4]
 702 00e4 0B43     		orrs	r3, r3, r1
 703 00e6 2F01     		lsls	r7, r5, #4
 704 00e8 3844     		add	r0, r0, r7
 705 00ea C0F88831 		str	r3, [r0, #392]
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[2] <<
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[1] <<
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[0] <<
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR, ((uint32_t)hcan->pTxMsg->Data[7] <<
 706              		.loc 1 626 0
 707 00ee 216B     		ldr	r1, [r4, #48]
 708 00f0 C87E     		ldrb	r0, [r1, #27]	@ zero_extendqisi2
 709 00f2 8B7E     		ldrb	r3, [r1, #26]	@ zero_extendqisi2
 710 00f4 1B04     		lsls	r3, r3, #16
 711 00f6 43EA0063 		orr	r3, r3, r0, lsl #24
 712 00fa 487E     		ldrb	r0, [r1, #25]	@ zero_extendqisi2
 713 00fc 43EA0023 		orr	r3, r3, r0, lsl #8
 714 0100 087E     		ldrb	r0, [r1, #24]	@ zero_extendqisi2
 715 0102 2168     		ldr	r1, [r4]
 716 0104 0343     		orrs	r3, r3, r0
 717 0106 3944     		add	r1, r1, r7
 718 0108 C1F88C31 		str	r3, [r1, #396]
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[6] <<
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[5] <<
ARM GAS  /tmp/ccRTTlUN.s 			page 26


 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[4] <<
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request transmission */
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 719              		.loc 1 631 0
 720 010c 2168     		ldr	r1, [r4]
 721 010e 8B58     		ldr	r3, [r1, r2]
 722 0110 43F00103 		orr	r3, r3, #1
 723 0114 8B50     		str	r3, [r1, r2]
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get tick */
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tickstart = HAL_GetTick();
 724              		.loc 1 634 0
 725 0116 FFF7FEFF 		bl	HAL_GetTick
 726              	.LVL49:
 727 011a 0746     		mov	r7, r0
 728              	.LVL50:
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check End of transmission flag */
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     while(!(__HAL_CAN_TRANSMIT_STATUS(hcan, transmitmailbox)))
 729              		.loc 1 637 0
 730 011c 3BE0     		b	.L69
 731              	.LVL51:
 732              	.L85:
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 733              		.loc 1 597 0
 734 011e 0225     		movs	r5, #2
 735 0120 A8E7     		b	.L65
 736              	.LVL52:
 737              	.L66:
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 738              		.loc 1 611 0
 739 0122 0768     		ldr	r7, [r0]
 740 0124 05F11804 		add	r4, r5, #24
 741 0128 2401     		lsls	r4, r4, #4
 742 012a 57F804C0 		ldr	ip, [r7, r4]
 743 012e 5668     		ldr	r6, [r2, #4]
 744 0130 43EAC603 		orr	r3, r3, r6, lsl #3
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 745              		.loc 1 613 0
 746 0134 D268     		ldr	r2, [r2, #12]
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 747              		.loc 1 612 0
 748 0136 1343     		orrs	r3, r3, r2
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 749              		.loc 1 611 0
 750 0138 43EA0C03 		orr	r3, r3, ip
 751 013c 3B51     		str	r3, [r7, r4]
 752 013e AFE7     		b	.L67
 753              	.LVL53:
 754              	.L93:
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check for the Timeout */
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if(Timeout != HAL_MAX_DELAY)
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 755              		.loc 1 642 0
 756 0140 26B1     		cbz	r6, .L70
ARM GAS  /tmp/ccRTTlUN.s 			page 27


 757              		.loc 1 642 0 is_stmt 0 discriminator 1
 758 0142 FFF7FEFF 		bl	HAL_GetTick
 759              	.LVL54:
 760 0146 C01B     		subs	r0, r0, r7
 761 0148 B042     		cmp	r0, r6
 762 014a 24D9     		bls	.L69
 763              	.L70:
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_TIMEOUT;
 764              		.loc 1 644 0 is_stmt 1
 765 014c 0323     		movs	r3, #3
 766 014e 84F83C30 		strb	r3, [r4, #60]
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Cancel transmission */
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           __HAL_CAN_CANCEL_TRANSMIT(hcan, transmitmailbox);
 767              		.loc 1 647 0
 768 0152 3DB9     		cbnz	r5, .L71
 769              		.loc 1 647 0 is_stmt 0 discriminator 1
 770 0154 2368     		ldr	r3, [r4]
 771 0156 8022     		movs	r2, #128
 772 0158 9A60     		str	r2, [r3, #8]
 773              	.L72:
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Process unlocked */
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           __HAL_UNLOCK(hcan);
 774              		.loc 1 650 0 is_stmt 1
 775 015a 0023     		movs	r3, #0
 776 015c 84F83D30 		strb	r3, [r4, #61]
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           return HAL_TIMEOUT;
 777              		.loc 1 651 0
 778 0160 0320     		movs	r0, #3
 779 0162 3DE0     		b	.L59
 780              	.L71:
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 781              		.loc 1 647 0 discriminator 2
 782 0164 012D     		cmp	r5, #1
 783 0166 04D0     		beq	.L90
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 784              		.loc 1 647 0 is_stmt 0 discriminator 4
 785 0168 2368     		ldr	r3, [r4]
 786 016a 4FF40002 		mov	r2, #8388608
 787 016e 9A60     		str	r2, [r3, #8]
 788 0170 F3E7     		b	.L72
 789              	.L90:
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 790              		.loc 1 647 0 discriminator 3
 791 0172 2368     		ldr	r3, [r4]
 792 0174 4FF40042 		mov	r2, #32768
 793 0178 9A60     		str	r2, [r3, #8]
 794 017a EEE7     		b	.L72
 795              	.L74:
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 796              		.loc 1 637 0 is_stmt 1 discriminator 2
 797 017c 012D     		cmp	r5, #1
 798 017e 14D0     		beq	.L91
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 799              		.loc 1 637 0 is_stmt 0 discriminator 5
ARM GAS  /tmp/ccRTTlUN.s 			page 28


 800 0180 2368     		ldr	r3, [r4]
 801 0182 9A68     		ldr	r2, [r3, #8]
 802 0184 1E4B     		ldr	r3, .L95
 803 0186 9343     		bics	r3, r3, r2
 804 0188 14BF     		ite	ne
 805 018a 0123     		movne	r3, #1
 806 018c 0023     		moveq	r3, #0
 807              	.L75:
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 808              		.loc 1 637 0 discriminator 8
 809 018e A3B1     		cbz	r3, .L92
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 810              		.loc 1 640 0 is_stmt 1
 811 0190 B6F1FF3F 		cmp	r6, #-1
 812 0194 D4D1     		bne	.L93
 813              	.L69:
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 814              		.loc 1 637 0
 815 0196 002D     		cmp	r5, #0
 816 0198 F0D1     		bne	.L74
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 817              		.loc 1 637 0 is_stmt 0 discriminator 1
 818 019a 2368     		ldr	r3, [r4]
 819 019c 9A68     		ldr	r2, [r3, #8]
 820 019e 194B     		ldr	r3, .L95+4
 821 01a0 9343     		bics	r3, r3, r2
 822 01a2 14BF     		ite	ne
 823 01a4 0123     		movne	r3, #1
 824 01a6 0023     		moveq	r3, #0
 825 01a8 F1E7     		b	.L75
 826              	.L91:
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 827              		.loc 1 637 0 discriminator 4
 828 01aa 2368     		ldr	r3, [r4]
 829 01ac 9A68     		ldr	r2, [r3, #8]
 830 01ae 164B     		ldr	r3, .L95+8
 831 01b0 9343     		bics	r3, r3, r2
 832 01b2 14BF     		ite	ne
 833 01b4 0123     		movne	r3, #1
 834 01b6 0023     		moveq	r3, #0
 835 01b8 E9E7     		b	.L75
 836              	.L92:
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 837              		.loc 1 656 0 is_stmt 1
 838 01ba 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 839 01be DBB2     		uxtb	r3, r3
 840 01c0 522B     		cmp	r3, #82
 841 01c2 0ED0     		beq	.L79
 842 01c4 722B     		cmp	r3, #114
 843 01c6 10D0     		beq	.L80
 844 01c8 422B     		cmp	r3, #66
 845 01ca 03D0     		beq	.L94
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
ARM GAS  /tmp/ccRTTlUN.s 			page 29


 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX0;
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX1;
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_TX */
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_READY;
 846              		.loc 1 668 0
 847 01cc 0123     		movs	r3, #1
 848 01ce 84F83C30 		strb	r3, [r4, #60]
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 849              		.loc 1 669 0
 850 01d2 02E0     		b	.L82
 851              	.L94:
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 852              		.loc 1 659 0
 853 01d4 2223     		movs	r3, #34
 854 01d6 84F83C30 		strb	r3, [r4, #60]
 855              	.L82:
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process unlocked */
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 856              		.loc 1 673 0
 857 01da 0020     		movs	r0, #0
 858 01dc 84F83D00 		strb	r0, [r4, #61]
 859              	.LVL55:
 860              	.L59:
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR;
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 861              		.loc 1 686 0
 862 01e0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 863              	.LVL56:
 864              	.L79:
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 865              		.loc 1 662 0
 866 01e2 3223     		movs	r3, #50
 867 01e4 84F83C30 		strb	r3, [r4, #60]
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 868              		.loc 1 663 0
 869 01e8 F7E7     		b	.L82
 870              	.L80:
ARM GAS  /tmp/ccRTTlUN.s 			page 30


 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 871              		.loc 1 665 0
 872 01ea 6223     		movs	r3, #98
 873 01ec 84F83C30 		strb	r3, [r4, #60]
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_TX */
 874              		.loc 1 666 0
 875 01f0 F3E7     		b	.L82
 876              	.LVL57:
 877              	.L58:
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 878              		.loc 1 681 0
 879 01f2 0423     		movs	r3, #4
 880 01f4 80F83C30 		strb	r3, [r0, #60]
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 881              		.loc 1 684 0
 882 01f8 0120     		movs	r0, #1
 883              	.LVL58:
 884 01fa F1E7     		b	.L59
 885              	.LVL59:
 886              	.L83:
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 887              		.loc 1 567 0
 888 01fc 0220     		movs	r0, #2
 889              	.LVL60:
 890 01fe EFE7     		b	.L59
 891              	.L96:
 892              		.align	2
 893              	.L95:
 894 0200 00000110 		.word	268500992
 895 0204 01000004 		.word	67108865
 896 0208 00010008 		.word	134217984
 897              		.cfi_endproc
 898              	.LFE71:
 900              		.section	.text.HAL_CAN_Transmit_IT,"ax",%progbits
 901              		.align	1
 902              		.global	HAL_CAN_Transmit_IT
 903              		.syntax unified
 904              		.thumb
 905              		.thumb_func
 906              		.fpu softvfp
 908              	HAL_CAN_Transmit_IT:
 909              	.LFB72:
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Transmit_IT(CAN_HandleTypeDef* hcan)
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 910              		.loc 1 695 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 915              	.LVL61:
ARM GAS  /tmp/ccRTTlUN.s 			page 31


 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(hcan->pTxMsg->IDE));
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RTR(hcan->pTxMsg->RTR));
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_DLC(hcan->pTxMsg->DLC));
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(((hcan->Instance->TSR&CAN_TSR_TME0) == CAN_TSR_TME0) || \
 916              		.loc 1 703 0
 917 0000 0268     		ldr	r2, [r0]
 918 0002 9368     		ldr	r3, [r2, #8]
 919 0004 13F0806F 		tst	r3, #67108864
 920 0008 08D1     		bne	.L98
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 921              		.loc 1 704 0 discriminator 1
 922 000a 9368     		ldr	r3, [r2, #8]
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 923              		.loc 1 703 0 discriminator 1
 924 000c 13F0006F 		tst	r3, #134217728
 925 0010 04D1     		bne	.L98
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME2) == CAN_TSR_TME2))
 926              		.loc 1 705 0
 927 0012 9368     		ldr	r3, [r2, #8]
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 928              		.loc 1 704 0
 929 0014 13F0805F 		tst	r3, #268435456
 930 0018 00F09A80 		beq	.L99
 931              	.L98:
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process Locked */
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_LOCK(hcan);
 932              		.loc 1 708 0
 933 001c 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 934 0020 012B     		cmp	r3, #1
 935 0022 00F09A80 		beq	.L109
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 936              		.loc 1 695 0 discriminator 2
 937 0026 F0B4     		push	{r4, r5, r6, r7}
 938              	.LCFI8:
 939              		.cfi_def_cfa_offset 16
 940              		.cfi_offset 4, -16
 941              		.cfi_offset 5, -12
 942              		.cfi_offset 6, -8
 943              		.cfi_offset 7, -4
 944              		.loc 1 708 0 discriminator 2
 945 0028 0123     		movs	r3, #1
 946 002a 80F83D30 		strb	r3, [r0, #61]
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Select one empty transmit mailbox */
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME0))
 947              		.loc 1 711 0 discriminator 2
 948 002e 9368     		ldr	r3, [r2, #8]
 949 0030 13F0806F 		tst	r3, #67108864
 950 0034 05D1     		bne	.L110
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_0;
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /tmp/ccRTTlUN.s 			page 32


 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else if(HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME1))
 951              		.loc 1 715 0
 952 0036 9368     		ldr	r3, [r2, #8]
 953 0038 13F0006F 		tst	r3, #134217728
 954 003c 59D0     		beq	.L111
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_1;
 955              		.loc 1 717 0
 956 003e 0123     		movs	r3, #1
 957 0040 00E0     		b	.L101
 958              	.L110:
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 959              		.loc 1 713 0
 960 0042 0023     		movs	r3, #0
 961              	.L101:
 962              	.LVL62:
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_2;
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the Id */
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR &= CAN_TI0R_TXRQ;
 963              		.loc 1 725 0
 964 0044 03F11801 		add	r1, r3, #24
 965 0048 0901     		lsls	r1, r1, #4
 966 004a 5458     		ldr	r4, [r2, r1]
 967 004c 04F00104 		and	r4, r4, #1
 968 0050 5450     		str	r4, [r2, r1]
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(hcan->pTxMsg->IDE == CAN_ID_STD)
 969              		.loc 1 726 0
 970 0052 016B     		ldr	r1, [r0, #48]
 971 0054 8A68     		ldr	r2, [r1, #8]
 972 0056 002A     		cmp	r2, #0
 973 0058 4DD1     		bne	.L102
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       assert_param(IS_CAN_STDID(hcan->pTxMsg->StdId));
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->StdId << CAN_TI0R_STID_Pos
 974              		.loc 1 729 0
 975 005a 0568     		ldr	r5, [r0]
 976 005c 03F11802 		add	r2, r3, #24
 977 0060 1201     		lsls	r2, r2, #4
 978 0062 AC58     		ldr	r4, [r5, r2]
 979 0064 0E68     		ldr	r6, [r1]
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 980              		.loc 1 730 0
 981 0066 C968     		ldr	r1, [r1, #12]
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 982              		.loc 1 729 0
 983 0068 41EA4651 		orr	r1, r1, r6, lsl #21
 984 006c 2143     		orrs	r1, r1, r4
 985 006e A950     		str	r1, [r5, r2]
 986              	.L103:
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
ARM GAS  /tmp/ccRTTlUN.s 			page 33


 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       assert_param(IS_CAN_EXTID(hcan->pTxMsg->ExtId));
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->ExtId << CAN_TI0R_EXID_Pos
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the DLC */
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->pTxMsg->DLC &= (uint8_t)0x0000000FU;
 987              		.loc 1 741 0
 988 0070 016B     		ldr	r1, [r0, #48]
 989 0072 0A69     		ldr	r2, [r1, #16]
 990 0074 02F00F02 		and	r2, r2, #15
 991 0078 0A61     		str	r2, [r1, #16]
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 992              		.loc 1 742 0
 993 007a 0468     		ldr	r4, [r0]
 994 007c 03F11802 		add	r2, r3, #24
 995 0080 1101     		lsls	r1, r2, #4
 996 0082 6218     		adds	r2, r4, r1
 997 0084 5468     		ldr	r4, [r2, #4]
 998 0086 24F00F04 		bic	r4, r4, #15
 999 008a 5460     		str	r4, [r2, #4]
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR |= hcan->pTxMsg->DLC;
 1000              		.loc 1 743 0
 1001 008c 0268     		ldr	r2, [r0]
 1002 008e 0A44     		add	r2, r2, r1
 1003 0090 5168     		ldr	r1, [r2, #4]
 1004 0092 046B     		ldr	r4, [r0, #48]
 1005 0094 2469     		ldr	r4, [r4, #16]
 1006 0096 2143     		orrs	r1, r1, r4
 1007 0098 5160     		str	r1, [r2, #4]
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set up the data field */
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR, ((uint32_t)hcan->pTxMsg->Data[3U] <
 1008              		.loc 1 746 0
 1009 009a 016B     		ldr	r1, [r0, #48]
 1010 009c CC7D     		ldrb	r4, [r1, #23]	@ zero_extendqisi2
 1011 009e 8A7D     		ldrb	r2, [r1, #22]	@ zero_extendqisi2
 1012 00a0 1204     		lsls	r2, r2, #16
 1013 00a2 42EA0462 		orr	r2, r2, r4, lsl #24
 1014 00a6 4C7D     		ldrb	r4, [r1, #21]	@ zero_extendqisi2
 1015 00a8 42EA0422 		orr	r2, r2, r4, lsl #8
 1016 00ac 097D     		ldrb	r1, [r1, #20]	@ zero_extendqisi2
 1017 00ae 0468     		ldr	r4, [r0]
 1018 00b0 0A43     		orrs	r2, r2, r1
 1019 00b2 1D01     		lsls	r5, r3, #4
 1020 00b4 2C44     		add	r4, r4, r5
 1021 00b6 C4F88821 		str	r2, [r4, #392]
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[2U] <
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[1U] <
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[0U] <
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR, ((uint32_t)hcan->pTxMsg->Data[7U] <
 1022              		.loc 1 750 0
 1023 00ba 016B     		ldr	r1, [r0, #48]
 1024 00bc CC7E     		ldrb	r4, [r1, #27]	@ zero_extendqisi2
 1025 00be 8A7E     		ldrb	r2, [r1, #26]	@ zero_extendqisi2
 1026 00c0 1204     		lsls	r2, r2, #16
ARM GAS  /tmp/ccRTTlUN.s 			page 34


 1027 00c2 42EA0462 		orr	r2, r2, r4, lsl #24
 1028 00c6 4C7E     		ldrb	r4, [r1, #25]	@ zero_extendqisi2
 1029 00c8 42EA0422 		orr	r2, r2, r4, lsl #8
 1030 00cc 0C7E     		ldrb	r4, [r1, #24]	@ zero_extendqisi2
 1031 00ce 0168     		ldr	r1, [r0]
 1032 00d0 2243     		orrs	r2, r2, r4
 1033 00d2 2944     		add	r1, r1, r5
 1034 00d4 C1F88C21 		str	r2, [r1, #396]
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[6U] <
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[5U] <
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[4U] <
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 1035              		.loc 1 756 0
 1036 00d8 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1037 00dc D2B2     		uxtb	r2, r2
 1038 00de 322A     		cmp	r2, #50
 1039 00e0 2ED0     		beq	.L105
 1040 00e2 622A     		cmp	r2, #98
 1041 00e4 30D0     		beq	.L106
 1042 00e6 222A     		cmp	r2, #34
 1043 00e8 12D0     		beq	.L117
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX;
 1044              		.loc 1 768 0
 1045 00ea 1222     		movs	r2, #18
 1046 00ec 80F83C20 		strb	r2, [r0, #60]
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 1047              		.loc 1 769 0
 1048 00f0 11E0     		b	.L108
 1049              	.LVL63:
 1050              	.L111:
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1051              		.loc 1 721 0
 1052 00f2 0223     		movs	r3, #2
 1053 00f4 A6E7     		b	.L101
 1054              	.LVL64:
 1055              	.L102:
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 1056              		.loc 1 735 0
 1057 00f6 0668     		ldr	r6, [r0]
 1058 00f8 03F11804 		add	r4, r3, #24
 1059 00fc 2401     		lsls	r4, r4, #4
 1060 00fe 3559     		ldr	r5, [r6, r4]
 1061 0100 4F68     		ldr	r7, [r1, #4]
 1062 0102 42EAC702 		orr	r2, r2, r7, lsl #3
ARM GAS  /tmp/ccRTTlUN.s 			page 35


 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1063              		.loc 1 737 0
 1064 0106 C968     		ldr	r1, [r1, #12]
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 1065              		.loc 1 736 0
 1066 0108 0A43     		orrs	r2, r2, r1
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |
 1067              		.loc 1 735 0
 1068 010a 2A43     		orrs	r2, r2, r5
 1069 010c 3251     		str	r2, [r6, r4]
 1070 010e AFE7     		b	.L103
 1071              	.L117:
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 1072              		.loc 1 759 0
 1073 0110 4222     		movs	r2, #66
 1074 0112 80F83C20 		strb	r2, [r0, #60]
 1075              	.L108:
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to none */
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 1076              		.loc 1 773 0
 1077 0116 0022     		movs	r2, #0
 1078 0118 0264     		str	r2, [r0, #64]
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process Unlocked */
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 1079              		.loc 1 776 0
 1080 011a 80F83D20 		strb	r2, [r0, #61]
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request transmission */
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR |= CAN_TI0R_TXRQ;
 1081              		.loc 1 779 0
 1082 011e 0468     		ldr	r4, [r0]
 1083 0120 1833     		adds	r3, r3, #24
 1084              	.LVL65:
 1085 0122 1B01     		lsls	r3, r3, #4
 1086              	.LVL66:
 1087 0124 E158     		ldr	r1, [r4, r3]
 1088 0126 41F00101 		orr	r1, r1, #1
 1089 012a E150     		str	r1, [r4, r3]
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Enable interrupts: */
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Error warning Interrupt */
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Error passive Interrupt */
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Bus-off Interrupt */
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Last error code Interrupt */
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Error Interrupt */
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Enable Transmit mailbox empty Interrupt */
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_EWG |
 1090              		.loc 1 788 0
 1091 012c 0168     		ldr	r1, [r0]
 1092 012e 4B69     		ldr	r3, [r1, #20]
 1093 0130 43F40F43 		orr	r3, r3, #36608
 1094 0134 43F00103 		orr	r3, r3, #1
 1095 0138 4B61     		str	r3, [r1, #20]
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_EPV |
ARM GAS  /tmp/ccRTTlUN.s 			page 36


 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_BOF |
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_LEC |
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_ERR |
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                               CAN_IT_TME  );
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN state */
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR;
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 1096              		.loc 1 804 0
 1097 013a 1046     		mov	r0, r2
 1098              	.LVL67:
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1099              		.loc 1 805 0
 1100 013c F0BC     		pop	{r4, r5, r6, r7}
 1101              	.LCFI9:
 1102              		.cfi_remember_state
 1103              		.cfi_restore 7
 1104              		.cfi_restore 6
 1105              		.cfi_restore 5
 1106              		.cfi_restore 4
 1107              		.cfi_def_cfa_offset 0
 1108 013e 7047     		bx	lr
 1109              	.LVL68:
 1110              	.L105:
 1111              	.LCFI10:
 1112              		.cfi_restore_state
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 1113              		.loc 1 762 0
 1114 0140 5222     		movs	r2, #82
 1115 0142 80F83C20 		strb	r2, [r0, #60]
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 1116              		.loc 1 763 0
 1117 0146 E6E7     		b	.L108
 1118              	.L106:
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 1119              		.loc 1 765 0
 1120 0148 7222     		movs	r2, #114
 1121 014a 80F83C20 		strb	r2, [r0, #60]
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1122              		.loc 1 766 0
 1123 014e E2E7     		b	.L108
 1124              	.LVL69:
 1125              	.L99:
 1126              	.LCFI11:
 1127              		.cfi_def_cfa_offset 0
 1128              		.cfi_restore 4
 1129              		.cfi_restore 5
 1130              		.cfi_restore 6
 1131              		.cfi_restore 7
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccRTTlUN.s 			page 37


 1132              		.loc 1 798 0
 1133 0150 0423     		movs	r3, #4
 1134 0152 80F83C30 		strb	r3, [r0, #60]
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1135              		.loc 1 801 0
 1136 0156 0120     		movs	r0, #1
 1137              	.LVL70:
 1138 0158 7047     		bx	lr
 1139              	.LVL71:
 1140              	.L109:
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 1141              		.loc 1 708 0
 1142 015a 0220     		movs	r0, #2
 1143              	.LVL72:
 1144              		.loc 1 805 0
 1145 015c 7047     		bx	lr
 1146              		.cfi_endproc
 1147              	.LFE72:
 1149              		.section	.text.HAL_CAN_Receive,"ax",%progbits
 1150              		.align	1
 1151              		.global	HAL_CAN_Receive
 1152              		.syntax unified
 1153              		.thumb
 1154              		.thumb_func
 1155              		.fpu softvfp
 1157              	HAL_CAN_Receive:
 1158              	.LFB73:
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  FIFONumber: FIFO Number value
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  Timeout: Specify Timeout value 
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Receive(CAN_HandleTypeDef* hcan, uint8_t FIFONumber, uint32_t Timeout)
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1159              		.loc 1 816 0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 0
 1162              		@ frame_needed = 0, uses_anonymous_args = 0
 1163              	.LVL73:
 1164 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1165              	.LCFI12:
 1166              		.cfi_def_cfa_offset 24
 1167              		.cfi_offset 3, -24
 1168              		.cfi_offset 4, -20
 1169              		.cfi_offset 5, -16
 1170              		.cfi_offset 6, -12
 1171              		.cfi_offset 7, -8
 1172              		.cfi_offset 14, -4
 1173              	.LVL74:
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CanRxMsgTypeDef* pRxMsg = NULL;
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
ARM GAS  /tmp/ccRTTlUN.s 			page 38


 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO0 */
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO0) && ((hcan->State == HAL_CAN_STATE_BUSY_RX0) ||         \
 1174              		.loc 1 824 0
 1175 0002 0D46     		mov	r5, r1
 1176 0004 B9B9     		cbnz	r1, .L119
 1177              		.loc 1 824 0 is_stmt 0 discriminator 1
 1178 0006 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1179 000a DBB2     		uxtb	r3, r3
 1180 000c 222B     		cmp	r3, #34
 1181 000e 00F02F81 		beq	.L154
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1182              		.loc 1 825 0 is_stmt 1 discriminator 2
 1183 0012 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1184 0016 DBB2     		uxtb	r3, r3
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1185              		.loc 1 824 0 discriminator 2
 1186 0018 422B     		cmp	r3, #66
 1187 001a 00F02B81 		beq	.L155
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1188              		.loc 1 826 0
 1189 001e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1190 0022 DBB2     		uxtb	r3, r3
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1191              		.loc 1 825 0
 1192 0024 622B     		cmp	r3, #98
 1193 0026 00F02781 		beq	.L156
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1194              		.loc 1 827 0
 1195 002a 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1196 002e DBB2     		uxtb	r3, r3
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1197              		.loc 1 826 0
 1198 0030 722B     		cmp	r3, #114
 1199 0032 00F02381 		beq	.L157
 1200              	.L119:
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_BUSY;
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO1 */
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO1) && ((hcan->State == HAL_CAN_STATE_BUSY_RX1) ||         \
 1201              		.loc 1 833 0
 1202 0036 012D     		cmp	r5, #1
 1203 0038 15D0     		beq	.L168
 1204              	.L121:
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_BUSY;
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process locked */
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_LOCK(hcan);
 1205              		.loc 1 842 0
ARM GAS  /tmp/ccRTTlUN.s 			page 39


 1206 003a 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1207 003e 012B     		cmp	r3, #1
 1208 0040 00F02481 		beq	.L162
 1209              		.loc 1 842 0 is_stmt 0 discriminator 2
 1210 0044 0123     		movs	r3, #1
 1211 0046 80F83D30 		strb	r3, [r0, #61]
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 1212              		.loc 1 845 0 is_stmt 1 discriminator 2
 1213 004a B5BB     		cbnz	r5, .L122
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 1214              		.loc 1 847 0
 1215 004c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1216 0050 DBB2     		uxtb	r3, r3
 1217 0052 322B     		cmp	r3, #50
 1218 0054 29D0     		beq	.L124
 1219 0056 522B     		cmp	r3, #82
 1220 0058 2BD0     		beq	.L125
 1221 005a 122B     		cmp	r3, #18
 1222 005c 1CD0     		beq	.L169
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 1223              		.loc 1 859 0
 1224 005e 2223     		movs	r3, #34
 1225 0060 80F83C30 		strb	r3, [r0, #60]
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1226              		.loc 1 860 0
 1227 0064 1BE0     		b	.L127
 1228              	.L168:
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1229              		.loc 1 833 0 discriminator 1
 1230 0066 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1231 006a DBB2     		uxtb	r3, r3
 1232 006c 322B     		cmp	r3, #50
 1233 006e 00F00781 		beq	.L158
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1234              		.loc 1 834 0 discriminator 2
 1235 0072 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1236 0076 DBB2     		uxtb	r3, r3
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1237              		.loc 1 833 0 discriminator 2
 1238 0078 522B     		cmp	r3, #82
 1239 007a 00F00381 		beq	.L159
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1240              		.loc 1 835 0
ARM GAS  /tmp/ccRTTlUN.s 			page 40


 1241 007e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1242 0082 DBB2     		uxtb	r3, r3
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1243              		.loc 1 834 0
 1244 0084 622B     		cmp	r3, #98
 1245 0086 00F0FF80 		beq	.L160
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1246              		.loc 1 836 0
 1247 008a 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1248 008e DBB2     		uxtb	r3, r3
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1249              		.loc 1 835 0
 1250 0090 722B     		cmp	r3, #114
 1251 0092 D2D1     		bne	.L121
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1252              		.loc 1 838 0
 1253 0094 0220     		movs	r0, #2
 1254              	.LVL75:
 1255 0096 C9E0     		b	.L120
 1256              	.LVL76:
 1257              	.L169:
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1258              		.loc 1 850 0
 1259 0098 4223     		movs	r3, #66
 1260 009a 80F83C30 		strb	r3, [r0, #60]
 1261              	.L127:
 1262 009e 1646     		mov	r6, r2
 1263 00a0 0446     		mov	r4, r0
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get tick */ 
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();
 1264              		.loc 1 882 0
 1265 00a2 FFF7FEFF 		bl	HAL_GetTick
 1266              	.LVL77:
 1267 00a6 0746     		mov	r7, r0
 1268              	.LVL78:
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check pending message */
ARM GAS  /tmp/ccRTTlUN.s 			page 41


 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while(__HAL_CAN_MSG_PENDING(hcan, FIFONumber) == 0U)
 1269              		.loc 1 885 0
 1270 00a8 38E0     		b	.L133
 1271              	.LVL79:
 1272              	.L124:
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1273              		.loc 1 853 0
 1274 00aa 6223     		movs	r3, #98
 1275 00ac 80F83C30 		strb	r3, [r0, #60]
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 1276              		.loc 1 854 0
 1277 00b0 F5E7     		b	.L127
 1278              	.L125:
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1279              		.loc 1 856 0
 1280 00b2 7223     		movs	r3, #114
 1281 00b4 80F83C30 		strb	r3, [r0, #60]
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1282              		.loc 1 857 0
 1283 00b8 F1E7     		b	.L127
 1284              	.L122:
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1285              		.loc 1 865 0
 1286 00ba 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1287 00be DBB2     		uxtb	r3, r3
 1288 00c0 222B     		cmp	r3, #34
 1289 00c2 0BD0     		beq	.L129
 1290 00c4 422B     		cmp	r3, #66
 1291 00c6 0DD0     		beq	.L130
 1292 00c8 122B     		cmp	r3, #18
 1293 00ca 03D0     		beq	.L170
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1294              		.loc 1 877 0
 1295 00cc 3223     		movs	r3, #50
 1296 00ce 80F83C30 		strb	r3, [r0, #60]
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1297              		.loc 1 878 0
 1298 00d2 E4E7     		b	.L127
 1299              	.L170:
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1300              		.loc 1 868 0
 1301 00d4 5223     		movs	r3, #82
 1302 00d6 80F83C30 		strb	r3, [r0, #60]
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 1303              		.loc 1 869 0
 1304 00da E0E7     		b	.L127
 1305              	.L129:
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1306              		.loc 1 871 0
 1307 00dc 6223     		movs	r3, #98
 1308 00de 80F83C30 		strb	r3, [r0, #60]
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 1309              		.loc 1 872 0
 1310 00e2 DCE7     		b	.L127
 1311              	.L130:
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1312              		.loc 1 874 0
ARM GAS  /tmp/ccRTTlUN.s 			page 42


 1313 00e4 7223     		movs	r3, #114
 1314 00e6 80F83C30 		strb	r3, [r0, #60]
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1315              		.loc 1 875 0
 1316 00ea D8E7     		b	.L127
 1317              	.LVL80:
 1318              	.L172:
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check for the Timeout */
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(Timeout != HAL_MAX_DELAY)
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 1319              		.loc 1 890 0
 1320 00ec 26B1     		cbz	r6, .L134
 1321              		.loc 1 890 0 is_stmt 0 discriminator 1
 1322 00ee FFF7FEFF 		bl	HAL_GetTick
 1323              	.LVL81:
 1324 00f2 C01B     		subs	r0, r0, r7
 1325 00f4 B042     		cmp	r0, r6
 1326 00f6 11D9     		bls	.L133
 1327              	.L134:
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_TIMEOUT;
 1328              		.loc 1 892 0 is_stmt 1
 1329 00f8 0320     		movs	r0, #3
 1330 00fa 84F83C00 		strb	r0, [r4, #60]
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Process unlocked */
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         __HAL_UNLOCK(hcan);
 1331              		.loc 1 894 0
 1332 00fe 0023     		movs	r3, #0
 1333 0100 84F83D30 		strb	r3, [r4, #61]
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_TIMEOUT;
 1334              		.loc 1 895 0
 1335 0104 92E0     		b	.L120
 1336              	.L135:
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1337              		.loc 1 885 0 discriminator 2
 1338 0106 2368     		ldr	r3, [r4]
 1339 0108 1B69     		ldr	r3, [r3, #16]
 1340 010a 13F0030F 		tst	r3, #3
 1341 010e 0CBF     		ite	eq
 1342 0110 0123     		moveq	r3, #1
 1343 0112 0023     		movne	r3, #0
 1344              	.L136:
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1345              		.loc 1 885 0 is_stmt 0 discriminator 4
 1346 0114 63B1     		cbz	r3, .L171
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1347              		.loc 1 888 0 is_stmt 1
 1348 0116 B6F1FF3F 		cmp	r6, #-1
 1349 011a E7D1     		bne	.L172
 1350              	.L133:
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1351              		.loc 1 885 0
 1352 011c 002D     		cmp	r5, #0
 1353 011e F2D1     		bne	.L135
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccRTTlUN.s 			page 43


 1354              		.loc 1 885 0 is_stmt 0 discriminator 1
 1355 0120 2368     		ldr	r3, [r4]
 1356 0122 DB68     		ldr	r3, [r3, #12]
 1357 0124 13F0030F 		tst	r3, #3
 1358 0128 0CBF     		ite	eq
 1359 012a 0123     		moveq	r3, #1
 1360 012c 0023     		movne	r3, #0
 1361 012e F1E7     		b	.L136
 1362              	.L171:
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set RxMsg pointer */
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1363              		.loc 1 901 0 is_stmt 1
 1364 0130 002D     		cmp	r5, #0
 1365 0132 67D1     		bne	.L138
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg = hcan->pRxMsg;
 1366              		.loc 1 903 0
 1367 0134 636B     		ldr	r3, [r4, #52]
 1368              	.LVL82:
 1369              	.L139:
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg = hcan->pRx1Msg;
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the Id */
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->IDE = (uint8_t)CAN_ID_EXT & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 1370              		.loc 1 911 0
 1371 0136 2168     		ldr	r1, [r4]
 1372 0138 05F11B02 		add	r2, r5, #27
 1373 013c 1201     		lsls	r2, r2, #4
 1374 013e 8A58     		ldr	r2, [r1, r2]
 1375 0140 02F00402 		and	r2, r2, #4
 1376 0144 9A60     		str	r2, [r3, #8]
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (pRxMsg->IDE == CAN_ID_STD)
 1377              		.loc 1 912 0
 1378 0146 002A     		cmp	r2, #0
 1379 0148 5ED1     		bne	.L140
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg->StdId = 0x000007FFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RIR >> 21U);
 1380              		.loc 1 914 0
 1381 014a 2168     		ldr	r1, [r4]
 1382 014c 05F11B02 		add	r2, r5, #27
 1383 0150 1201     		lsls	r2, r2, #4
 1384 0152 8A58     		ldr	r2, [r1, r2]
 1385 0154 520D     		lsrs	r2, r2, #21
 1386 0156 1A60     		str	r2, [r3]
 1387              	.L141:
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg->ExtId = 0x1FFFFFFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RIR >> 3U);
ARM GAS  /tmp/ccRTTlUN.s 			page 44


 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->RTR = (uint8_t)CAN_RTR_REMOTE & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 1388              		.loc 1 921 0
 1389 0158 2168     		ldr	r1, [r4]
 1390 015a 05F11B02 		add	r2, r5, #27
 1391 015e 1201     		lsls	r2, r2, #4
 1392 0160 8958     		ldr	r1, [r1, r2]
 1393 0162 01F00201 		and	r1, r1, #2
 1394 0166 D960     		str	r1, [r3, #12]
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the DLC */
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->DLC = (uint8_t)0x0FU & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR;
 1395              		.loc 1 923 0
 1396 0168 2168     		ldr	r1, [r4]
 1397 016a 1144     		add	r1, r1, r2
 1398 016c 4968     		ldr	r1, [r1, #4]
 1399 016e 01F00F01 		and	r1, r1, #15
 1400 0172 1961     		str	r1, [r3, #16]
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FMI */
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->FMI = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDTR >> 8U);
 1401              		.loc 1 925 0
 1402 0174 2168     		ldr	r1, [r4]
 1403 0176 0A44     		add	r2, r2, r1
 1404 0178 5268     		ldr	r2, [r2, #4]
 1405 017a C2F30722 		ubfx	r2, r2, #8, #8
 1406 017e DA61     		str	r2, [r3, #28]
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FIFONumber */
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->FIFONumber = FIFONumber;
 1407              		.loc 1 927 0
 1408 0180 1D62     		str	r5, [r3, #32]
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the data field */
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[0] = (uint8_t)0xFFU & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR;
 1409              		.loc 1 929 0
 1410 0182 2168     		ldr	r1, [r4]
 1411 0184 2A01     		lsls	r2, r5, #4
 1412 0186 1144     		add	r1, r1, r2
 1413 0188 D1F8B811 		ldr	r1, [r1, #440]
 1414 018c 1975     		strb	r1, [r3, #20]
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[1] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 8U);
 1415              		.loc 1 930 0
 1416 018e 2168     		ldr	r1, [r4]
 1417 0190 1144     		add	r1, r1, r2
 1418 0192 D1F8B811 		ldr	r1, [r1, #440]
 1419 0196 090A     		lsrs	r1, r1, #8
 1420 0198 5975     		strb	r1, [r3, #21]
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[2] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 16U);
 1421              		.loc 1 931 0
 1422 019a 2168     		ldr	r1, [r4]
 1423 019c 1144     		add	r1, r1, r2
 1424 019e D1F8B811 		ldr	r1, [r1, #440]
 1425 01a2 090C     		lsrs	r1, r1, #16
 1426 01a4 9975     		strb	r1, [r3, #22]
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[3] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 24U);
 1427              		.loc 1 932 0
 1428 01a6 2168     		ldr	r1, [r4]
 1429 01a8 1144     		add	r1, r1, r2
 1430 01aa D1F8B811 		ldr	r1, [r1, #440]
ARM GAS  /tmp/ccRTTlUN.s 			page 45


 1431 01ae 090E     		lsrs	r1, r1, #24
 1432 01b0 D975     		strb	r1, [r3, #23]
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[4] = (uint8_t)0xFFU & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR;
 1433              		.loc 1 933 0
 1434 01b2 2168     		ldr	r1, [r4]
 1435 01b4 1144     		add	r1, r1, r2
 1436 01b6 D1F8BC11 		ldr	r1, [r1, #444]
 1437 01ba 1976     		strb	r1, [r3, #24]
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[5] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 8U);
 1438              		.loc 1 934 0
 1439 01bc 2168     		ldr	r1, [r4]
 1440 01be 1144     		add	r1, r1, r2
 1441 01c0 D1F8BC11 		ldr	r1, [r1, #444]
 1442 01c4 090A     		lsrs	r1, r1, #8
 1443 01c6 5976     		strb	r1, [r3, #25]
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[6] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 16U);
 1444              		.loc 1 935 0
 1445 01c8 2168     		ldr	r1, [r4]
 1446 01ca 1144     		add	r1, r1, r2
 1447 01cc D1F8BC11 		ldr	r1, [r1, #444]
 1448 01d0 090C     		lsrs	r1, r1, #16
 1449 01d2 9976     		strb	r1, [r3, #26]
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[7] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 24U);
 1450              		.loc 1 936 0
 1451 01d4 2168     		ldr	r1, [r4]
 1452 01d6 0A44     		add	r2, r2, r1
 1453 01d8 D2F8BC21 		ldr	r2, [r2, #444]
 1454 01dc 120E     		lsrs	r2, r2, #24
 1455 01de DA76     		strb	r2, [r3, #27]
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release the FIFO */
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1456              		.loc 1 939 0
 1457 01e0 D5B9     		cbnz	r5, .L142
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Release FIFO0 */
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO0);
 1458              		.loc 1 942 0
 1459 01e2 2368     		ldr	r3, [r4]
 1460              	.LVL83:
 1461 01e4 2022     		movs	r2, #32
 1462 01e6 DA60     		str	r2, [r3, #12]
 1463              	.L143:
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Release FIFO1 */
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO1);
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 1464              		.loc 1 951 0
 1465 01e8 4DBB     		cbnz	r5, .L144
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 1466              		.loc 1 953 0
ARM GAS  /tmp/ccRTTlUN.s 			page 46


 1467 01ea 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 1468 01ee DBB2     		uxtb	r3, r3
 1469 01f0 622B     		cmp	r3, #98
 1470 01f2 1CD0     		beq	.L146
 1471 01f4 722B     		cmp	r3, #114
 1472 01f6 1ED0     		beq	.L147
 1473 01f8 422B     		cmp	r3, #66
 1474 01fa 11D0     		beq	.L173
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 1475              		.loc 1 965 0
 1476 01fc 0123     		movs	r3, #1
 1477 01fe 84F83C30 		strb	r3, [r4, #60]
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1478              		.loc 1 966 0
 1479 0202 10E0     		b	.L149
 1480              	.LVL84:
 1481              	.L138:
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1482              		.loc 1 907 0
 1483 0204 A36B     		ldr	r3, [r4, #56]
 1484              	.LVL85:
 1485 0206 96E7     		b	.L139
 1486              	.L140:
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1487              		.loc 1 918 0
 1488 0208 2168     		ldr	r1, [r4]
 1489 020a 05F11B02 		add	r2, r5, #27
 1490 020e 1201     		lsls	r2, r2, #4
 1491 0210 8A58     		ldr	r2, [r1, r2]
 1492 0212 D208     		lsrs	r2, r2, #3
 1493 0214 5A60     		str	r2, [r3, #4]
 1494 0216 9FE7     		b	.L141
 1495              	.L142:
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1496              		.loc 1 947 0
 1497 0218 2368     		ldr	r3, [r4]
 1498              	.LVL86:
 1499 021a 2022     		movs	r2, #32
 1500 021c 1A61     		str	r2, [r3, #16]
 1501 021e E3E7     		b	.L143
 1502              	.L173:
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1503              		.loc 1 956 0
 1504 0220 1223     		movs	r3, #18
 1505 0222 84F83C30 		strb	r3, [r4, #60]
 1506              	.L149:
ARM GAS  /tmp/ccRTTlUN.s 			page 47


 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process unlocked */
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 1507              		.loc 1 989 0
 1508 0226 0020     		movs	r0, #0
 1509 0228 84F83D00 		strb	r0, [r4, #61]
 1510              	.LVL87:
 1511              	.L120:
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1512              		.loc 1 993 0
 1513 022c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1514              	.LVL88:
 1515              	.L146:
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1516              		.loc 1 959 0
 1517 022e 3223     		movs	r3, #50
 1518 0230 84F83C30 		strb	r3, [r4, #60]
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 1519              		.loc 1 960 0
 1520 0234 F7E7     		b	.L149
 1521              	.L147:
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1522              		.loc 1 962 0
 1523 0236 5223     		movs	r3, #82
 1524 0238 84F83C30 		strb	r3, [r4, #60]
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
 1525              		.loc 1 963 0
 1526 023c F3E7     		b	.L149
 1527              	.L144:
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1528              		.loc 1 971 0
 1529 023e 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 1530 0242 DBB2     		uxtb	r3, r3
 1531 0244 622B     		cmp	r3, #98
ARM GAS  /tmp/ccRTTlUN.s 			page 48


 1532 0246 0BD0     		beq	.L151
 1533 0248 722B     		cmp	r3, #114
 1534 024a 0DD0     		beq	.L152
 1535 024c 522B     		cmp	r3, #82
 1536 024e 03D0     		beq	.L174
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1537              		.loc 1 983 0
 1538 0250 0123     		movs	r3, #1
 1539 0252 84F83C30 		strb	r3, [r4, #60]
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1540              		.loc 1 984 0
 1541 0256 E6E7     		b	.L149
 1542              	.L174:
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1543              		.loc 1 974 0
 1544 0258 1223     		movs	r3, #18
 1545 025a 84F83C30 		strb	r3, [r4, #60]
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 1546              		.loc 1 975 0
 1547 025e E2E7     		b	.L149
 1548              	.L151:
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1549              		.loc 1 977 0
 1550 0260 2223     		movs	r3, #34
 1551 0262 84F83C30 		strb	r3, [r4, #60]
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 1552              		.loc 1 978 0
 1553 0266 DEE7     		b	.L149
 1554              	.L152:
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1555              		.loc 1 980 0
 1556 0268 4223     		movs	r3, #66
 1557 026a 84F83C30 		strb	r3, [r4, #60]
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
 1558              		.loc 1 981 0
 1559 026e DAE7     		b	.L149
 1560              	.LVL89:
 1561              	.L154:
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1562              		.loc 1 829 0
 1563 0270 0220     		movs	r0, #2
 1564              	.LVL90:
 1565 0272 DBE7     		b	.L120
 1566              	.LVL91:
 1567              	.L155:
 1568 0274 0220     		movs	r0, #2
 1569              	.LVL92:
 1570 0276 D9E7     		b	.L120
 1571              	.LVL93:
 1572              	.L156:
 1573 0278 0220     		movs	r0, #2
 1574              	.LVL94:
 1575 027a D7E7     		b	.L120
 1576              	.LVL95:
 1577              	.L157:
 1578 027c 0220     		movs	r0, #2
 1579              	.LVL96:
ARM GAS  /tmp/ccRTTlUN.s 			page 49


 1580 027e D5E7     		b	.L120
 1581              	.LVL97:
 1582              	.L158:
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1583              		.loc 1 838 0
 1584 0280 0220     		movs	r0, #2
 1585              	.LVL98:
 1586 0282 D3E7     		b	.L120
 1587              	.LVL99:
 1588              	.L159:
 1589 0284 0220     		movs	r0, #2
 1590              	.LVL100:
 1591 0286 D1E7     		b	.L120
 1592              	.LVL101:
 1593              	.L160:
 1594 0288 0220     		movs	r0, #2
 1595              	.LVL102:
 1596 028a CFE7     		b	.L120
 1597              	.LVL103:
 1598              	.L162:
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1599              		.loc 1 842 0
 1600 028c 0220     		movs	r0, #2
 1601              	.LVL104:
 1602 028e CDE7     		b	.L120
 1603              		.cfi_endproc
 1604              	.LFE73:
 1606              		.section	.text.HAL_CAN_Receive_IT,"ax",%progbits
 1607              		.align	1
 1608              		.global	HAL_CAN_Receive_IT
 1609              		.syntax unified
 1610              		.thumb
 1611              		.thumb_func
 1612              		.fpu softvfp
 1614              	HAL_CAN_Receive_IT:
 1615              	.LFB74:
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  FIFONumber: Specify the FIFO number    
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber)
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1616              		.loc 1 1003 0
 1617              		.cfi_startproc
 1618              		@ args = 0, pretend = 0, frame = 0
 1619              		@ frame_needed = 0, uses_anonymous_args = 0
 1620              		@ link register save eliminated.
 1621              	.LVL105:
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO0 */
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((FIFONumber == CAN_FIFO0) && ((hcan->State == HAL_CAN_STATE_BUSY_RX0) ||         \
ARM GAS  /tmp/ccRTTlUN.s 			page 50


 1622              		.loc 1 1008 0
 1623 0000 0A46     		mov	r2, r1
 1624 0002 99B9     		cbnz	r1, .L176
 1625              		.loc 1 1008 0 is_stmt 0 discriminator 1
 1626 0004 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1627 0008 DBB2     		uxtb	r3, r3
 1628 000a 222B     		cmp	r3, #34
 1629 000c 7CD0     		beq	.L190
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1630              		.loc 1 1009 0 is_stmt 1 discriminator 2
 1631 000e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1632 0012 DBB2     		uxtb	r3, r3
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1633              		.loc 1 1008 0 discriminator 2
 1634 0014 422B     		cmp	r3, #66
 1635 0016 79D0     		beq	.L191
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1636              		.loc 1 1010 0
 1637 0018 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1638 001c DBB2     		uxtb	r3, r3
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1639              		.loc 1 1009 0
 1640 001e 622B     		cmp	r3, #98
 1641 0020 76D0     		beq	.L192
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1642              		.loc 1 1011 0
 1643 0022 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1644 0026 DBB2     		uxtb	r3, r3
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1645              		.loc 1 1010 0
 1646 0028 722B     		cmp	r3, #114
 1647 002a 73D0     		beq	.L193
 1648              	.L176:
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_BUSY;
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO1 */
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((FIFONumber == CAN_FIFO1) && ((hcan->State == HAL_CAN_STATE_BUSY_RX1) ||         \
 1649              		.loc 1 1017 0
 1650 002c 012A     		cmp	r2, #1
 1651 002e 16D0     		beq	.L205
 1652              	.L178:
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_BUSY;
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process locked */
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_LOCK(hcan);
 1653              		.loc 1 1026 0
 1654 0030 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1655 0034 012B     		cmp	r3, #1
 1656 0036 75D0     		beq	.L198
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
ARM GAS  /tmp/ccRTTlUN.s 			page 51


 1657              		.loc 1 1003 0 discriminator 2
 1658 0038 10B4     		push	{r4}
 1659              	.LCFI13:
 1660              		.cfi_def_cfa_offset 4
 1661              		.cfi_offset 4, -4
 1662              		.loc 1 1026 0 discriminator 2
 1663 003a 0123     		movs	r3, #1
 1664 003c 80F83D30 		strb	r3, [r0, #61]
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1665              		.loc 1 1029 0 discriminator 2
 1666 0040 002A     		cmp	r2, #0
 1667 0042 41D1     		bne	.L179
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 1668              		.loc 1 1031 0
 1669 0044 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1670 0048 DBB2     		uxtb	r3, r3
 1671 004a 322B     		cmp	r3, #50
 1672 004c 34D0     		beq	.L181
 1673 004e 522B     		cmp	r3, #82
 1674 0050 36D0     		beq	.L182
 1675 0052 122B     		cmp	r3, #18
 1676 0054 19D0     		beq	.L206
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 1677              		.loc 1 1043 0
 1678 0056 2223     		movs	r3, #34
 1679 0058 80F83C30 		strb	r3, [r0, #60]
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1680              		.loc 1 1044 0
 1681 005c 18E0     		b	.L184
 1682              	.L205:
 1683              	.LCFI14:
 1684              		.cfi_def_cfa_offset 0
 1685              		.cfi_restore 4
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1686              		.loc 1 1017 0 discriminator 1
 1687 005e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1688 0062 DBB2     		uxtb	r3, r3
 1689 0064 322B     		cmp	r3, #50
 1690 0066 57D0     		beq	.L194
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1691              		.loc 1 1018 0 discriminator 2
 1692 0068 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1693 006c DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccRTTlUN.s 			page 52


1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1694              		.loc 1 1017 0 discriminator 2
 1695 006e 522B     		cmp	r3, #82
 1696 0070 54D0     		beq	.L195
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1697              		.loc 1 1019 0
 1698 0072 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1699 0076 DBB2     		uxtb	r3, r3
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1700              		.loc 1 1018 0
 1701 0078 622B     		cmp	r3, #98
 1702 007a 51D0     		beq	.L196
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1703              		.loc 1 1020 0
 1704 007c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1705 0080 DBB2     		uxtb	r3, r3
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1706              		.loc 1 1019 0
 1707 0082 722B     		cmp	r3, #114
 1708 0084 D4D1     		bne	.L178
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1709              		.loc 1 1022 0
 1710 0086 0220     		movs	r0, #2
 1711              	.LVL106:
 1712 0088 7047     		bx	lr
 1713              	.LVL107:
 1714              	.L206:
 1715              	.LCFI15:
 1716              		.cfi_def_cfa_offset 4
 1717              		.cfi_offset 4, -4
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1718              		.loc 1 1034 0
 1719 008a 4223     		movs	r3, #66
 1720 008c 80F83C30 		strb	r3, [r0, #60]
 1721              	.L184:
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set CAN error code to none */
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
ARM GAS  /tmp/ccRTTlUN.s 			page 53


 1722              		.loc 1 1066 0
 1723 0090 0021     		movs	r1, #0
 1724              	.LVL108:
 1725 0092 0164     		str	r1, [r0, #64]
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Enable interrupts: */
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Error warning Interrupt */
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Error passive Interrupt */
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Bus-off Interrupt */
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Last error code Interrupt */
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Error Interrupt */
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /*  - Enable Transmit mailbox empty Interrupt */
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_CAN_ENABLE_IT(hcan, CAN_IT_EWG |
 1726              		.loc 1 1076 0
 1727 0094 0468     		ldr	r4, [r0]
 1728 0096 6369     		ldr	r3, [r4, #20]
 1729 0098 43F40F43 		orr	r3, r3, #36608
 1730 009c 43F00103 		orr	r3, r3, #1
 1731 00a0 6361     		str	r3, [r4, #20]
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_EPV |
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_BOF |
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_LEC |
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_ERR |
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                             CAN_IT_TME  );
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    /* Process unlocked */
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    __HAL_UNLOCK(hcan);
 1732              		.loc 1 1084 0
 1733 00a2 80F83D10 		strb	r1, [r0, #61]
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1734              		.loc 1 1086 0
 1735 00a6 42B3     		cbz	r2, .L207
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Enable FIFO 0 overrun and message pending Interrupt */
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_FOV0 | CAN_IT_FMP0);
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Enable FIFO 1 overrun and message pending Interrupt */
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_FOV1 | CAN_IT_FMP1);
 1736              		.loc 1 1094 0
 1737 00a8 0268     		ldr	r2, [r0]
 1738 00aa 5369     		ldr	r3, [r2, #20]
 1739 00ac 43F05003 		orr	r3, r3, #80
 1740 00b0 5361     		str	r3, [r2, #20]
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 1741              		.loc 1 1098 0
 1742 00b2 0020     		movs	r0, #0
 1743              	.LVL109:
 1744              	.L177:
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1745              		.loc 1 1099 0
ARM GAS  /tmp/ccRTTlUN.s 			page 54


 1746 00b4 10BC     		pop	{r4}
 1747              	.LCFI16:
 1748              		.cfi_remember_state
 1749              		.cfi_restore 4
 1750              		.cfi_def_cfa_offset 0
 1751 00b6 7047     		bx	lr
 1752              	.LVL110:
 1753              	.L181:
 1754              	.LCFI17:
 1755              		.cfi_restore_state
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1756              		.loc 1 1037 0
 1757 00b8 6223     		movs	r3, #98
 1758 00ba 80F83C30 		strb	r3, [r0, #60]
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 1759              		.loc 1 1038 0
 1760 00be E7E7     		b	.L184
 1761              	.L182:
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1762              		.loc 1 1040 0
 1763 00c0 7223     		movs	r3, #114
 1764 00c2 80F83C30 		strb	r3, [r0, #60]
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1765              		.loc 1 1041 0
 1766 00c6 E3E7     		b	.L184
 1767              	.L179:
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1768              		.loc 1 1049 0
 1769 00c8 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1770 00cc DBB2     		uxtb	r3, r3
 1771 00ce 222B     		cmp	r3, #34
 1772 00d0 0BD0     		beq	.L186
 1773 00d2 422B     		cmp	r3, #66
 1774 00d4 0DD0     		beq	.L187
 1775 00d6 122B     		cmp	r3, #18
 1776 00d8 03D0     		beq	.L208
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1777              		.loc 1 1061 0
 1778 00da 3223     		movs	r3, #50
 1779 00dc 80F83C30 		strb	r3, [r0, #60]
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1780              		.loc 1 1062 0
 1781 00e0 D6E7     		b	.L184
 1782              	.L208:
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1783              		.loc 1 1052 0
 1784 00e2 5223     		movs	r3, #82
 1785 00e4 80F83C30 		strb	r3, [r0, #60]
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 1786              		.loc 1 1053 0
 1787 00e8 D2E7     		b	.L184
 1788              	.L186:
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1789              		.loc 1 1055 0
 1790 00ea 6223     		movs	r3, #98
 1791 00ec 80F83C30 		strb	r3, [r0, #60]
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
ARM GAS  /tmp/ccRTTlUN.s 			page 55


 1792              		.loc 1 1056 0
 1793 00f0 CEE7     		b	.L184
 1794              	.L187:
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1795              		.loc 1 1058 0
 1796 00f2 7223     		movs	r3, #114
 1797 00f4 80F83C30 		strb	r3, [r0, #60]
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1798              		.loc 1 1059 0
 1799 00f8 CAE7     		b	.L184
 1800              	.LVL111:
 1801              	.L207:
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1802              		.loc 1 1089 0
 1803 00fa 0268     		ldr	r2, [r0]
 1804 00fc 5369     		ldr	r3, [r2, #20]
 1805 00fe 43F00A03 		orr	r3, r3, #10
 1806 0102 5361     		str	r3, [r2, #20]
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1807              		.loc 1 1098 0
 1808 0104 0846     		mov	r0, r1
 1809              	.LVL112:
 1810 0106 D5E7     		b	.L177
 1811              	.LVL113:
 1812              	.L190:
 1813              	.LCFI18:
 1814              		.cfi_def_cfa_offset 0
 1815              		.cfi_restore 4
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1816              		.loc 1 1013 0
 1817 0108 0220     		movs	r0, #2
 1818              	.LVL114:
 1819 010a 7047     		bx	lr
 1820              	.LVL115:
 1821              	.L191:
 1822 010c 0220     		movs	r0, #2
 1823              	.LVL116:
 1824 010e 7047     		bx	lr
 1825              	.LVL117:
 1826              	.L192:
 1827 0110 0220     		movs	r0, #2
 1828              	.LVL118:
 1829 0112 7047     		bx	lr
 1830              	.LVL119:
 1831              	.L193:
 1832 0114 0220     		movs	r0, #2
 1833              	.LVL120:
 1834 0116 7047     		bx	lr
 1835              	.LVL121:
 1836              	.L194:
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1837              		.loc 1 1022 0
 1838 0118 0220     		movs	r0, #2
 1839              	.LVL122:
 1840 011a 7047     		bx	lr
 1841              	.LVL123:
 1842              	.L195:
ARM GAS  /tmp/ccRTTlUN.s 			page 56


 1843 011c 0220     		movs	r0, #2
 1844              	.LVL124:
 1845 011e 7047     		bx	lr
 1846              	.LVL125:
 1847              	.L196:
 1848 0120 0220     		movs	r0, #2
 1849              	.LVL126:
 1850 0122 7047     		bx	lr
 1851              	.LVL127:
 1852              	.L198:
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1853              		.loc 1 1026 0
 1854 0124 0220     		movs	r0, #2
 1855              	.LVL128:
 1856              		.loc 1 1099 0
 1857 0126 7047     		bx	lr
 1858              		.cfi_endproc
 1859              	.LFE74:
 1861              		.section	.text.HAL_CAN_Sleep,"ax",%progbits
 1862              		.align	1
 1863              		.global	HAL_CAN_Sleep
 1864              		.syntax unified
 1865              		.thumb
 1866              		.thumb_func
 1867              		.fpu softvfp
 1869              	HAL_CAN_Sleep:
 1870              	.LFB75:
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Enters the Sleep (low power) mode.
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status.
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Sleep(CAN_HandleTypeDef* hcan)
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1871              		.loc 1 1108 0
 1872              		.cfi_startproc
 1873              		@ args = 0, pretend = 0, frame = 0
 1874              		@ frame_needed = 0, uses_anonymous_args = 0
 1875              	.LVL129:
 1876 0000 38B5     		push	{r3, r4, r5, lr}
 1877              	.LCFI19:
 1878              		.cfi_def_cfa_offset 16
 1879              		.cfi_offset 3, -16
 1880              		.cfi_offset 4, -12
 1881              		.cfi_offset 5, -8
 1882              		.cfi_offset 14, -4
 1883              	.LVL130:
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process locked */
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_LOCK(hcan);
 1884              		.loc 1 1112 0
 1885 0002 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1886 0006 012B     		cmp	r3, #1
 1887 0008 3BD0     		beq	.L215
ARM GAS  /tmp/ccRTTlUN.s 			page 57


 1888              		.loc 1 1112 0 is_stmt 0 discriminator 2
 1889 000a 0123     		movs	r3, #1
 1890 000c 80F83D30 		strb	r3, [r0, #61]
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY; 
 1891              		.loc 1 1115 0 is_stmt 1 discriminator 2
 1892 0010 0223     		movs	r3, #2
 1893 0012 80F83C30 		strb	r3, [r0, #60]
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Request Sleep mode */
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   MODIFY_REG(hcan->Instance->MCR,
 1894              		.loc 1 1118 0 discriminator 2
 1895 0016 0268     		ldr	r2, [r0]
 1896 0018 1368     		ldr	r3, [r2]
 1897 001a 23F00303 		bic	r3, r3, #3
 1898 001e 43F00203 		orr	r3, r3, #2
 1899 0022 1360     		str	r3, [r2]
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_MCR_INRQ       ,
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              CAN_MCR_SLEEP       );
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Sleep mode status */
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_SLAK) ||
 1900              		.loc 1 1123 0 discriminator 2
 1901 0024 0368     		ldr	r3, [r0]
 1902 0026 5A68     		ldr	r2, [r3, #4]
 1903 0028 12F0020F 		tst	r2, #2
 1904 002c 03D0     		beq	.L211
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 1905              		.loc 1 1124 0 discriminator 1
 1906 002e 5B68     		ldr	r3, [r3, #4]
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 1907              		.loc 1 1123 0 discriminator 1
 1908 0030 13F0010F 		tst	r3, #1
 1909 0034 04D0     		beq	.L212
 1910              	.L211:
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process unlocked */
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 1911              		.loc 1 1127 0
 1912 0036 0023     		movs	r3, #0
 1913 0038 80F83D30 		strb	r3, [r0, #61]
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 1914              		.loc 1 1130 0
 1915 003c 0120     		movs	r0, #1
 1916              	.LVL131:
 1917              	.L210:
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get tick */
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Wait the acknowledge */
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while (HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_SLAK) ||
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
ARM GAS  /tmp/ccRTTlUN.s 			page 58


1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_TIMEOUT;
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_UNLOCK(hcan);
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process unlocked */
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_UNLOCK(hcan);
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1918              		.loc 1 1159 0
 1919 003e 38BD     		pop	{r3, r4, r5, pc}
 1920              	.LVL132:
 1921              	.L212:
 1922 0040 0446     		mov	r4, r0
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1923              		.loc 1 1134 0
 1924 0042 FFF7FEFF 		bl	HAL_GetTick
 1925              	.LVL133:
 1926 0046 0546     		mov	r5, r0
 1927              	.LVL134:
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 1928              		.loc 1 1137 0
 1929 0048 04E0     		b	.L213
 1930              	.LVL135:
 1931              	.L214:
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1932              		.loc 1 1140 0
 1933 004a FFF7FEFF 		bl	HAL_GetTick
 1934              	.LVL136:
 1935 004e 401B     		subs	r0, r0, r5
 1936 0050 0A28     		cmp	r0, #10
 1937 0052 0FD8     		bhi	.L217
 1938              	.L213:
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 1939              		.loc 1 1137 0
 1940 0054 2368     		ldr	r3, [r4]
 1941 0056 5A68     		ldr	r2, [r3, #4]
 1942 0058 12F0020F 		tst	r2, #2
 1943 005c F5D0     		beq	.L214
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1944              		.loc 1 1138 0 discriminator 1
 1945 005e 5B68     		ldr	r3, [r3, #4]
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 1946              		.loc 1 1137 0 discriminator 1
 1947 0060 13F0010F 		tst	r3, #1
ARM GAS  /tmp/ccRTTlUN.s 			page 59


 1948 0064 F1D1     		bne	.L214
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1949              		.loc 1 1152 0
 1950 0066 0123     		movs	r3, #1
 1951 0068 84F83C30 		strb	r3, [r4, #60]
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1952              		.loc 1 1155 0
 1953 006c 0020     		movs	r0, #0
 1954 006e 84F83D00 		strb	r0, [r4, #61]
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1955              		.loc 1 1158 0
 1956 0072 E4E7     		b	.L210
 1957              	.L217:
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1958              		.loc 1 1142 0
 1959 0074 0320     		movs	r0, #3
 1960 0076 84F83C00 		strb	r0, [r4, #60]
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1961              		.loc 1 1145 0
 1962 007a 0023     		movs	r3, #0
 1963 007c 84F83D30 		strb	r3, [r4, #61]
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1964              		.loc 1 1147 0
 1965 0080 DDE7     		b	.L210
 1966              	.LVL137:
 1967              	.L215:
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 1968              		.loc 1 1112 0
 1969 0082 0220     		movs	r0, #2
 1970              	.LVL138:
 1971 0084 DBE7     		b	.L210
 1972              		.cfi_endproc
 1973              	.LFE75:
 1975              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 1976              		.align	1
 1977              		.global	HAL_CAN_WakeUp
 1978              		.syntax unified
 1979              		.thumb
 1980              		.thumb_func
 1981              		.fpu softvfp
 1983              	HAL_CAN_WakeUp:
 1984              	.LFB76:
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode, after that the CAN peripheral
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         is in the normal mode.
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status.
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef* hcan)
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 1985              		.loc 1 1169 0
 1986              		.cfi_startproc
 1987              		@ args = 0, pretend = 0, frame = 0
 1988              		@ frame_needed = 0, uses_anonymous_args = 0
 1989              	.LVL139:
ARM GAS  /tmp/ccRTTlUN.s 			page 60


 1990 0000 38B5     		push	{r3, r4, r5, lr}
 1991              	.LCFI20:
 1992              		.cfi_def_cfa_offset 16
 1993              		.cfi_offset 3, -16
 1994              		.cfi_offset 4, -12
 1995              		.cfi_offset 5, -8
 1996              		.cfi_offset 14, -4
 1997              	.LVL140:
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart = 0U;
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process locked */
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_LOCK(hcan);
 1998              		.loc 1 1173 0
 1999 0002 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2000 0006 012B     		cmp	r3, #1
 2001 0008 2FD0     		beq	.L223
 2002 000a 0446     		mov	r4, r0
 2003              		.loc 1 1173 0 is_stmt 0 discriminator 2
 2004 000c 0123     		movs	r3, #1
 2005 000e 80F83D30 		strb	r3, [r0, #61]
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;  
 2006              		.loc 1 1176 0 is_stmt 1 discriminator 2
 2007 0012 0223     		movs	r3, #2
 2008 0014 80F83C30 		strb	r3, [r0, #60]
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Wake up request */
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 2009              		.loc 1 1179 0 discriminator 2
 2010 0018 0268     		ldr	r2, [r0]
 2011 001a 1368     		ldr	r3, [r2]
 2012 001c 23F00203 		bic	r3, r3, #2
 2013 0020 1360     		str	r3, [r2]
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get timeout */
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();   
 2014              		.loc 1 1182 0 discriminator 2
 2015 0022 FFF7FEFF 		bl	HAL_GetTick
 2016              	.LVL141:
 2017 0026 0546     		mov	r5, r0
 2018              	.LVL142:
 2019              	.L220:
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Sleep mode status */
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while((hcan->Instance->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)
 2020              		.loc 1 1185 0
 2021 0028 2368     		ldr	r3, [r4]
 2022 002a 5A68     		ldr	r2, [r3, #4]
 2023 002c 12F0020F 		tst	r2, #2
 2024 0030 0BD0     		beq	.L225
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
 2025              		.loc 1 1187 0
 2026 0032 FFF7FEFF 		bl	HAL_GetTick
 2027              	.LVL143:
 2028 0036 401B     		subs	r0, r0, r5
ARM GAS  /tmp/ccRTTlUN.s 			page 61


 2029 0038 0A28     		cmp	r0, #10
 2030 003a F5D9     		bls	.L220
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State= HAL_CAN_STATE_TIMEOUT;
 2031              		.loc 1 1189 0
 2032 003c 0320     		movs	r0, #3
 2033 003e 84F83C00 		strb	r0, [r4, #60]
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Process unlocked */
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_UNLOCK(hcan);
 2034              		.loc 1 1191 0
 2035 0042 0023     		movs	r3, #0
 2036 0044 84F83D30 		strb	r3, [r4, #61]
 2037              	.LVL144:
 2038              	.L219:
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_TIMEOUT;
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_SLAK))
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Process unlocked */
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_UNLOCK(hcan);
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY; 
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Process unlocked */
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_UNLOCK(hcan);
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2039              		.loc 1 1212 0
 2040 0048 38BD     		pop	{r3, r4, r5, pc}
 2041              	.LVL145:
 2042              	.L225:
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2043              		.loc 1 1195 0
 2044 004a 5B68     		ldr	r3, [r3, #4]
 2045 004c 13F0020F 		tst	r3, #2
 2046 0050 06D1     		bne	.L226
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 2047              		.loc 1 1205 0
 2048 0052 0123     		movs	r3, #1
 2049 0054 84F83C30 		strb	r3, [r4, #60]
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 2050              		.loc 1 1208 0
 2051 0058 0020     		movs	r0, #0
 2052 005a 84F83D00 		strb	r0, [r4, #61]
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2053              		.loc 1 1211 0
 2054 005e F3E7     		b	.L219
 2055              	.L226:
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccRTTlUN.s 			page 62


 2056              		.loc 1 1198 0
 2057 0060 0023     		movs	r3, #0
 2058 0062 84F83D30 		strb	r3, [r4, #61]
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2059              		.loc 1 1201 0
 2060 0066 0120     		movs	r0, #1
 2061 0068 EEE7     		b	.L219
 2062              	.LVL146:
 2063              	.L223:
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
 2064              		.loc 1 1173 0
 2065 006a 0220     		movs	r0, #2
 2066              	.LVL147:
 2067 006c ECE7     		b	.L219
 2068              		.cfi_endproc
 2069              	.LFE76:
 2071              		.section	.text.HAL_CAN_TxCpltCallback,"ax",%progbits
 2072              		.align	1
 2073              		.weak	HAL_CAN_TxCpltCallback
 2074              		.syntax unified
 2075              		.thumb
 2076              		.thumb_func
 2077              		.fpu softvfp
 2079              	HAL_CAN_TxCpltCallback:
 2080              	.LFB78:
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Handles CAN interrupt request  
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef* hcan)
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp1 = 0U, tmp2 = 0U, tmp3 = 0U;
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Overrun flag for FIFO0 */
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_FOV0);
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV0);
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to FOV0 error */
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     errorcode |= HAL_CAN_ERROR_FOV0;
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear FIFO0 Overrun Flag */
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Overrun flag for FIFO1 */
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_FOV1);
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV1);
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to FOV1 error */
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     errorcode |= HAL_CAN_ERROR_FOV1;
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccRTTlUN.s 			page 63


1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear FIFO1 Overrun Flag */
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of transmission flag */
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_TME))
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Transmit request completion status */
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp1 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_0);
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp2 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_1);
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp3 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_2);
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(tmp1 || tmp2 || tmp3)  
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK0);
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp2 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK1);
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp3 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK2);
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Transmit success */
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if((tmp1) || (tmp2) || (tmp3))
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call transmit function */
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         CAN_Transmit_IT(hcan);
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       else /* Transmit failure */
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Set CAN error code to TXFAIL error */
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_TXFAIL;
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear transmission status flags (RQCPx and TXOKx) */
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_RQCP0  | CAN_TSR_RQCP1  | CAN_TSR_RQCP2 | \
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    CAN_FLAG_TXOK0 | CAN_FLAG_TXOK1 | CAN_FLAG_TXOK2);
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_MSG_PENDING(hcan, CAN_FIFO0);
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP0);
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of reception flag for FIFO0 */
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call receive function */
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CAN_Receive_IT(hcan, CAN_FIFO0);
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_MSG_PENDING(hcan, CAN_FIFO1);
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP1);
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of reception flag for FIFO1 */
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call receive function */
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CAN_Receive_IT(hcan, CAN_FIFO1);
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set error code in handle */
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->ErrorCode |= errorcode;
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_EWG);
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EWG);
ARM GAS  /tmp/ccRTTlUN.s 			page 64


1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Error Warning Flag */
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(tmp1 && tmp2 && tmp3)
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to EWG error */
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_EWG;
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Error Warning Flag as read-only */
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_EPV);
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EPV);
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR); 
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Error Passive Flag */
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(tmp1 && tmp2 && tmp3)
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to EPV error */
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_EPV;
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Error Passive Flag as read-only */ 
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_BOF);
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_BOF);
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);  
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Bus-Off Flag */
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(tmp1 && tmp2 && tmp3)
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set CAN error code to BOF error */
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_BOF;
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Bus-Off Flag as read-only */
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = HAL_IS_BIT_CLR(hcan->Instance->ESR, CAN_ESR_LEC);
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_LEC);
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Last error code Flag */
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((!tmp1) && tmp2 && tmp3)
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp1 = (hcan->Instance->ESR & CAN_ESR_LEC);
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(tmp1)
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_0):
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to STF error */
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_STF;
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_1):
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to FOR error */
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_FOR;
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to ACK error */
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_ACK;
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2):
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to BR error */
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_BR;
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
ARM GAS  /tmp/ccRTTlUN.s 			page 65


1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to BD error */
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_BD;
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Set CAN error code to CRC error */
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_CRC;
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default:
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear Last error code Flag */ 
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan->ErrorCode != HAL_CAN_ERROR_NONE)
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear ERRI Flag */ 
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->Instance->MSR = CAN_MSR_ERRI; 
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the CAN state ready to be able to start again the process */
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable interrupts: */
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error Interrupt */
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable FIFO 0 message pending Interrupt */
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable FIFO 0 Overrun Interrupt */
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable FIFO 1 message pending Interrupt */
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable FIFO 1 Overrun Interrupt */
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Transmit mailbox empty Interrupt */
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_BOF |
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_LEC |
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_ERR |
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_FMP0|
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_FOV0|
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_FMP1|
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_FOV1|
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_TME  );
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call Error callback function */
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }  
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission  complete callback in non blocking mode 
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxCpltCallback(CAN_HandleTypeDef* hcan)
ARM GAS  /tmp/ccRTTlUN.s 			page 66


1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 2081              		.loc 1 1416 0
 2082              		.cfi_startproc
 2083              		@ args = 0, pretend = 0, frame = 0
 2084              		@ frame_needed = 0, uses_anonymous_args = 0
 2085              		@ link register save eliminated.
 2086              	.LVL148:
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxCpltCallback can be implemented in the user file
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2087              		.loc 1 1422 0
 2088 0000 7047     		bx	lr
 2089              		.cfi_endproc
 2090              	.LFE78:
 2092              		.section	.text.CAN_Transmit_IT,"ax",%progbits
 2093              		.align	1
 2094              		.syntax unified
 2095              		.thumb
 2096              		.thumb_func
 2097              		.fpu softvfp
 2099              	CAN_Transmit_IT:
 2100              	.LFB83:
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission  complete callback in non blocking mode 
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_RxCpltCallback(CAN_HandleTypeDef* hcan)
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_RxCpltCallback can be implemented in the user file
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Error CAN callback.
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_ErrorCallback can be implemented in the user file
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
ARM GAS  /tmp/ccRTTlUN.s 			page 67


1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Peripheral State and Error functions
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *  @brief   CAN Peripheral State functions 
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim   
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             ##### Peripheral State and Error functions #####
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     This subsection provides functions allowing to :
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Check the CAN state.
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) Check CAN Errors detected during interrupt process
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  return the CAN state
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL state
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(CAN_HandleTypeDef* hcan)
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return CAN state */
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return hcan->State;
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Return the CAN error code
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval CAN Error Code
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_GetError(CAN_HandleTypeDef *hcan)
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return hcan->ErrorCode;
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @addtogroup CAN_Private_Functions
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
ARM GAS  /tmp/ccRTTlUN.s 			page 68


1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** static HAL_StatusTypeDef CAN_Transmit_IT(CAN_HandleTypeDef* hcan)
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 2101              		.loc 1 1515 0
 2102              		.cfi_startproc
 2103              		@ args = 0, pretend = 0, frame = 0
 2104              		@ frame_needed = 0, uses_anonymous_args = 0
 2105              	.LVL149:
 2106 0000 08B5     		push	{r3, lr}
 2107              	.LCFI21:
 2108              		.cfi_def_cfa_offset 8
 2109              		.cfi_offset 3, -8
 2110              		.cfi_offset 14, -4
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Disable Transmit mailbox empty Interrupt */
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __HAL_CAN_DISABLE_IT(hcan, CAN_IT_TME);
 2111              		.loc 1 1517 0
 2112 0002 0268     		ldr	r2, [r0]
 2113 0004 5369     		ldr	r3, [r2, #20]
 2114 0006 23F00103 		bic	r3, r3, #1
 2115 000a 5361     		str	r3, [r2, #20]
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(hcan->State == HAL_CAN_STATE_BUSY_TX)
 2116              		.loc 1 1519 0
 2117 000c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2118 0010 DBB2     		uxtb	r3, r3
 2119 0012 122B     		cmp	r3, #18
 2120 0014 0CD0     		beq	.L237
 2121              	.L229:
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {   
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable interrupts: */
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error Interrupt */
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_BOF |
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_LEC |
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_ERR);
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   switch(hcan->State)
 2122              		.loc 1 1535 0
 2123 0016 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2124 001a DBB2     		uxtb	r3, r3
 2125 001c 522B     		cmp	r3, #82
 2126 001e 14D0     		beq	.L231
 2127 0020 722B     		cmp	r3, #114
 2128 0022 16D0     		beq	.L232
 2129 0024 422B     		cmp	r3, #66
 2130 0026 09D0     		beq	.L238
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX0):
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX0;
ARM GAS  /tmp/ccRTTlUN.s 			page 69


1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX1):
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX1;
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     default: /* HAL_CAN_STATE_BUSY_TX */
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_READY;
 2131              		.loc 1 1547 0
 2132 0028 0123     		movs	r3, #1
 2133 002a 80F83C30 		strb	r3, [r0, #60]
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
 2134              		.loc 1 1548 0
 2135 002e 08E0     		b	.L234
 2136              	.L237:
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
 2137              		.loc 1 1527 0
 2138 0030 0268     		ldr	r2, [r0]
 2139 0032 5369     		ldr	r3, [r2, #20]
 2140 0034 23F40F43 		bic	r3, r3, #36608
 2141 0038 5361     		str	r3, [r2, #20]
 2142 003a ECE7     		b	.L229
 2143              	.L238:
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
 2144              		.loc 1 1538 0
 2145 003c 2223     		movs	r3, #34
 2146 003e 80F83C30 		strb	r3, [r0, #60]
 2147              	.L234:
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Transmission complete callback */ 
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_TxCpltCallback(hcan);
 2148              		.loc 1 1552 0
 2149 0042 FFF7FEFF 		bl	HAL_CAN_TxCpltCallback
 2150              	.LVL150:
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2151              		.loc 1 1555 0
 2152 0046 0020     		movs	r0, #0
 2153 0048 08BD     		pop	{r3, pc}
 2154              	.LVL151:
 2155              	.L231:
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
 2156              		.loc 1 1541 0
 2157 004a 3223     		movs	r3, #50
 2158 004c 80F83C30 		strb	r3, [r0, #60]
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 2159              		.loc 1 1542 0
 2160 0050 F7E7     		b	.L234
 2161              	.L232:
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       break;
 2162              		.loc 1 1544 0
 2163 0052 6223     		movs	r3, #98
 2164 0054 80F83C30 		strb	r3, [r0, #60]
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     default: /* HAL_CAN_STATE_BUSY_TX */
ARM GAS  /tmp/ccRTTlUN.s 			page 70


 2165              		.loc 1 1545 0
 2166 0058 F3E7     		b	.L234
 2167              		.cfi_endproc
 2168              	.LFE83:
 2170              		.section	.text.HAL_CAN_RxCpltCallback,"ax",%progbits
 2171              		.align	1
 2172              		.weak	HAL_CAN_RxCpltCallback
 2173              		.syntax unified
 2174              		.thumb
 2175              		.thumb_func
 2176              		.fpu softvfp
 2178              	HAL_CAN_RxCpltCallback:
 2179              	.LFB79:
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 2180              		.loc 1 1431 0
 2181              		.cfi_startproc
 2182              		@ args = 0, pretend = 0, frame = 0
 2183              		@ frame_needed = 0, uses_anonymous_args = 0
 2184              		@ link register save eliminated.
 2185              	.LVL152:
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2186              		.loc 1 1437 0
 2187 0000 7047     		bx	lr
 2188              		.cfi_endproc
 2189              	.LFE79:
 2191              		.section	.text.CAN_Receive_IT,"ax",%progbits
 2192              		.align	1
 2193              		.syntax unified
 2194              		.thumb
 2195              		.thumb_func
 2196              		.fpu softvfp
 2198              	CAN_Receive_IT:
 2199              	.LFB84:
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan:       Pointer to a CAN_HandleTypeDef structure that contains
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.  
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  FIFONumber: Specify the FIFO number    
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** static HAL_StatusTypeDef CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber)
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 2200              		.loc 1 1566 0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 0
 2203              		@ frame_needed = 0, uses_anonymous_args = 0
 2204              	.LVL153:
 2205 0000 10B5     		push	{r4, lr}
 2206              	.LCFI22:
 2207              		.cfi_def_cfa_offset 8
 2208              		.cfi_offset 4, -8
 2209              		.cfi_offset 14, -4
 2210              	.LVL154:
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp1 = 0U;
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CanRxMsgTypeDef* pRxMsg = NULL;
ARM GAS  /tmp/ccRTTlUN.s 			page 71


1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set RxMsg pointer */
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 2211              		.loc 1 1571 0
 2212 0002 0C46     		mov	r4, r1
 2213 0004 0029     		cmp	r1, #0
 2214 0006 78D1     		bne	.L241
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg = hcan->pRxMsg;
 2215              		.loc 1 1573 0
 2216 0008 436B     		ldr	r3, [r0, #52]
 2217              	.LVL155:
 2218              	.L242:
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg = hcan->pRx1Msg;
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the Id */
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->IDE = (uint8_t)0x04U & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 2219              		.loc 1 1581 0
 2220 000a 0168     		ldr	r1, [r0]
 2221              	.LVL156:
 2222 000c 04F11B02 		add	r2, r4, #27
 2223 0010 1201     		lsls	r2, r2, #4
 2224 0012 8A58     		ldr	r2, [r1, r2]
 2225 0014 02F00402 		and	r2, r2, #4
 2226 0018 9A60     		str	r2, [r3, #8]
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (pRxMsg->IDE == CAN_ID_STD)
 2227              		.loc 1 1582 0
 2228 001a 002A     		cmp	r2, #0
 2229 001c 6FD1     		bne	.L243
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg->StdId = 0x000007FFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RIR >> 21U);
 2230              		.loc 1 1584 0
 2231 001e 0168     		ldr	r1, [r0]
 2232 0020 04F11B02 		add	r2, r4, #27
 2233 0024 1201     		lsls	r2, r2, #4
 2234 0026 8A58     		ldr	r2, [r1, r2]
 2235 0028 520D     		lsrs	r2, r2, #21
 2236 002a 1A60     		str	r2, [r3]
 2237              	.L244:
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pRxMsg->ExtId = 0x1FFFFFFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RIR >> 3U);
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->RTR = (uint8_t)0x02U & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 2238              		.loc 1 1591 0
 2239 002c 0168     		ldr	r1, [r0]
 2240 002e 04F11B02 		add	r2, r4, #27
 2241 0032 1201     		lsls	r2, r2, #4
 2242 0034 8958     		ldr	r1, [r1, r2]
 2243 0036 01F00201 		and	r1, r1, #2
 2244 003a D960     		str	r1, [r3, #12]
ARM GAS  /tmp/ccRTTlUN.s 			page 72


1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the DLC */
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->DLC = (uint8_t)0x0FU & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR;
 2245              		.loc 1 1593 0
 2246 003c 0168     		ldr	r1, [r0]
 2247 003e 1144     		add	r1, r1, r2
 2248 0040 4968     		ldr	r1, [r1, #4]
 2249 0042 01F00F01 		and	r1, r1, #15
 2250 0046 1961     		str	r1, [r3, #16]
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FIFONumber */
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->FIFONumber = FIFONumber;
 2251              		.loc 1 1595 0
 2252 0048 1C62     		str	r4, [r3, #32]
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the FMI */
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->FMI = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDTR >> 8U);
 2253              		.loc 1 1597 0
 2254 004a 0168     		ldr	r1, [r0]
 2255 004c 0A44     		add	r2, r2, r1
 2256 004e 5268     		ldr	r2, [r2, #4]
 2257 0050 C2F30722 		ubfx	r2, r2, #8, #8
 2258 0054 DA61     		str	r2, [r3, #28]
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get the data field */
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[0] = (uint8_t)0xFFU & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR;
 2259              		.loc 1 1599 0
 2260 0056 0168     		ldr	r1, [r0]
 2261 0058 2201     		lsls	r2, r4, #4
 2262 005a 1144     		add	r1, r1, r2
 2263 005c D1F8B811 		ldr	r1, [r1, #440]
 2264 0060 1975     		strb	r1, [r3, #20]
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[1] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 8U);
 2265              		.loc 1 1600 0
 2266 0062 0168     		ldr	r1, [r0]
 2267 0064 1144     		add	r1, r1, r2
 2268 0066 D1F8B811 		ldr	r1, [r1, #440]
 2269 006a 090A     		lsrs	r1, r1, #8
 2270 006c 5975     		strb	r1, [r3, #21]
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[2] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 16U);
 2271              		.loc 1 1601 0
 2272 006e 0168     		ldr	r1, [r0]
 2273 0070 1144     		add	r1, r1, r2
 2274 0072 D1F8B811 		ldr	r1, [r1, #440]
 2275 0076 090C     		lsrs	r1, r1, #16
 2276 0078 9975     		strb	r1, [r3, #22]
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[3] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDLR >> 24U);
 2277              		.loc 1 1602 0
 2278 007a 0168     		ldr	r1, [r0]
 2279 007c 1144     		add	r1, r1, r2
 2280 007e D1F8B811 		ldr	r1, [r1, #440]
 2281 0082 090E     		lsrs	r1, r1, #24
 2282 0084 D975     		strb	r1, [r3, #23]
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[4] = (uint8_t)0xFFU & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR;
 2283              		.loc 1 1603 0
 2284 0086 0168     		ldr	r1, [r0]
 2285 0088 1144     		add	r1, r1, r2
 2286 008a D1F8BC11 		ldr	r1, [r1, #444]
 2287 008e 1976     		strb	r1, [r3, #24]
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[5] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 8U);
 2288              		.loc 1 1604 0
ARM GAS  /tmp/ccRTTlUN.s 			page 73


 2289 0090 0168     		ldr	r1, [r0]
 2290 0092 1144     		add	r1, r1, r2
 2291 0094 D1F8BC11 		ldr	r1, [r1, #444]
 2292 0098 090A     		lsrs	r1, r1, #8
 2293 009a 5976     		strb	r1, [r3, #25]
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[6] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 16U);
 2294              		.loc 1 1605 0
 2295 009c 0168     		ldr	r1, [r0]
 2296 009e 1144     		add	r1, r1, r2
 2297 00a0 D1F8BC11 		ldr	r1, [r1, #444]
 2298 00a4 090C     		lsrs	r1, r1, #16
 2299 00a6 9976     		strb	r1, [r3, #26]
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   pRxMsg->Data[7] = (uint8_t)0xFFU & (hcan->Instance->sFIFOMailBox[FIFONumber].RDHR >> 24U);
 2300              		.loc 1 1606 0
 2301 00a8 0168     		ldr	r1, [r0]
 2302 00aa 0A44     		add	r2, r2, r1
 2303 00ac D2F8BC21 		ldr	r2, [r2, #444]
 2304 00b0 120E     		lsrs	r2, r2, #24
 2305 00b2 DA76     		strb	r2, [r3, #27]
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release the FIFO */
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release FIFO0 */
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 2306              		.loc 1 1609 0
 2307 00b4 5CBB     		cbnz	r4, .L245
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO0);
 2308              		.loc 1 1611 0
 2309 00b6 0368     		ldr	r3, [r0]
 2310              	.LVL157:
 2311 00b8 2022     		movs	r2, #32
 2312 00ba DA60     		str	r2, [r3, #12]
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable FIFO 0 overrun and message pending Interrupt */
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_FOV0 | CAN_IT_FMP0);
 2313              		.loc 1 1614 0
 2314 00bc 0268     		ldr	r2, [r0]
 2315 00be 5369     		ldr	r3, [r2, #20]
 2316 00c0 23F00A03 		bic	r3, r3, #10
 2317 00c4 5361     		str	r3, [r2, #20]
 2318              	.L246:
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Release FIFO1 */
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO1);
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable FIFO 1 overrun and message pending Interrupt */
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_FOV1 | CAN_IT_FMP1);
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp1 = hcan->State;
 2319              		.loc 1 1625 0
 2320 00c6 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2321 00ca DBB2     		uxtb	r3, r3
 2322              	.LVL158:
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 == HAL_CAN_STATE_BUSY_RX0) || (tmp1 == HAL_CAN_STATE_BUSY_RX1))
 2323              		.loc 1 1626 0
ARM GAS  /tmp/ccRTTlUN.s 			page 74


 2324 00cc 222B     		cmp	r3, #34
 2325 00ce 01D0     		beq	.L247
 2326              		.loc 1 1626 0 is_stmt 0 discriminator 1
 2327 00d0 322B     		cmp	r3, #50
 2328 00d2 04D1     		bne	.L248
 2329              	.L247:
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable interrupts: */
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /*  - Disable Error Interrupt */
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
 2330              		.loc 1 1634 0 is_stmt 1
 2331 00d4 0268     		ldr	r2, [r0]
 2332 00d6 5369     		ldr	r3, [r2, #20]
 2333              	.LVL159:
 2334 00d8 23F40F43 		bic	r3, r3, #36608
 2335 00dc 5361     		str	r3, [r2, #20]
 2336              	.L248:
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_BOF |
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_LEC |
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_ERR);
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 2337              		.loc 1 1642 0
 2338 00de 74BB     		cbnz	r4, .L249
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
 2339              		.loc 1 1644 0
 2340 00e0 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2341 00e4 DBB2     		uxtb	r3, r3
 2342 00e6 622B     		cmp	r3, #98
 2343 00e8 21D0     		beq	.L251
 2344 00ea 722B     		cmp	r3, #114
 2345 00ec 23D0     		beq	.L252
 2346 00ee 422B     		cmp	r3, #66
 2347 00f0 16D0     		beq	.L262
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 2348              		.loc 1 1656 0
 2349 00f2 0123     		movs	r3, #1
 2350 00f4 80F83C30 		strb	r3, [r0, #60]
ARM GAS  /tmp/ccRTTlUN.s 			page 75


1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2351              		.loc 1 1657 0
 2352 00f8 15E0     		b	.L254
 2353              	.LVL160:
 2354              	.L241:
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2355              		.loc 1 1577 0
 2356 00fa 836B     		ldr	r3, [r0, #56]
 2357              	.LVL161:
 2358 00fc 85E7     		b	.L242
 2359              	.LVL162:
 2360              	.L243:
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2361              		.loc 1 1588 0
 2362 00fe 0168     		ldr	r1, [r0]
 2363 0100 04F11B02 		add	r2, r4, #27
 2364 0104 1201     		lsls	r2, r2, #4
 2365 0106 8A58     		ldr	r2, [r1, r2]
 2366 0108 D208     		lsrs	r2, r2, #3
 2367 010a 5A60     		str	r2, [r3, #4]
 2368 010c 8EE7     		b	.L244
 2369              	.L245:
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     
 2370              		.loc 1 1619 0
 2371 010e 0368     		ldr	r3, [r0]
 2372              	.LVL163:
 2373 0110 2022     		movs	r2, #32
 2374 0112 1A61     		str	r2, [r3, #16]
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2375              		.loc 1 1622 0
 2376 0114 0268     		ldr	r2, [r0]
 2377 0116 5369     		ldr	r3, [r2, #20]
 2378 0118 23F05003 		bic	r3, r3, #80
 2379 011c 5361     		str	r3, [r2, #20]
 2380 011e D2E7     		b	.L246
 2381              	.LVL164:
 2382              	.L262:
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2383              		.loc 1 1647 0
 2384 0120 1223     		movs	r3, #18
 2385 0122 80F83C30 		strb	r3, [r0, #60]
 2386              	.L254:
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(hcan->State)
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
ARM GAS  /tmp/ccRTTlUN.s 			page 76


1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive complete callback */ 
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_RxCpltCallback(hcan);
 2387              		.loc 1 1680 0
 2388 0126 FFF7FEFF 		bl	HAL_CAN_RxCpltCallback
 2389              	.LVL165:
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2390              		.loc 1 1684 0
 2391 012a 0020     		movs	r0, #0
 2392 012c 10BD     		pop	{r4, pc}
 2393              	.LVL166:
 2394              	.L251:
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2395              		.loc 1 1650 0
 2396 012e 3223     		movs	r3, #50
 2397 0130 80F83C30 		strb	r3, [r0, #60]
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 2398              		.loc 1 1651 0
 2399 0134 F7E7     		b	.L254
 2400              	.L252:
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2401              		.loc 1 1653 0
 2402 0136 5223     		movs	r3, #82
 2403 0138 80F83C30 		strb	r3, [r0, #60]
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
 2404              		.loc 1 1654 0
 2405 013c F3E7     		b	.L254
 2406              	.L249:
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2407              		.loc 1 1662 0
 2408 013e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2409 0142 DBB2     		uxtb	r3, r3
 2410 0144 622B     		cmp	r3, #98
 2411 0146 0BD0     		beq	.L256
 2412 0148 722B     		cmp	r3, #114
 2413 014a 0DD0     		beq	.L257
 2414 014c 522B     		cmp	r3, #82
 2415 014e 03D0     		beq	.L263
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2416              		.loc 1 1674 0
 2417 0150 0123     		movs	r3, #1
 2418 0152 80F83C30 		strb	r3, [r0, #60]
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2419              		.loc 1 1675 0
 2420 0156 E6E7     		b	.L254
 2421              	.L263:
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2422              		.loc 1 1665 0
 2423 0158 1223     		movs	r3, #18
ARM GAS  /tmp/ccRTTlUN.s 			page 77


 2424 015a 80F83C30 		strb	r3, [r0, #60]
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 2425              		.loc 1 1666 0
 2426 015e E2E7     		b	.L254
 2427              	.L256:
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2428              		.loc 1 1668 0
 2429 0160 2223     		movs	r3, #34
 2430 0162 80F83C30 		strb	r3, [r0, #60]
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 2431              		.loc 1 1669 0
 2432 0166 DEE7     		b	.L254
 2433              	.L257:
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 2434              		.loc 1 1671 0
 2435 0168 4223     		movs	r3, #66
 2436 016a 80F83C30 		strb	r3, [r0, #60]
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
 2437              		.loc 1 1672 0
 2438 016e DAE7     		b	.L254
 2439              		.cfi_endproc
 2440              	.LFE84:
 2442              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 2443              		.align	1
 2444              		.weak	HAL_CAN_ErrorCallback
 2445              		.syntax unified
 2446              		.thumb
 2447              		.thumb_func
 2448              		.fpu softvfp
 2450              	HAL_CAN_ErrorCallback:
 2451              	.LFB80:
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 2452              		.loc 1 1446 0
 2453              		.cfi_startproc
 2454              		@ args = 0, pretend = 0, frame = 0
 2455              		@ frame_needed = 0, uses_anonymous_args = 0
 2456              		@ link register save eliminated.
 2457              	.LVL167:
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2458              		.loc 1 1452 0
 2459 0000 7047     		bx	lr
 2460              		.cfi_endproc
 2461              	.LFE80:
 2463              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2464              		.align	1
 2465              		.global	HAL_CAN_IRQHandler
 2466              		.syntax unified
 2467              		.thumb
 2468              		.thumb_func
 2469              		.fpu softvfp
 2471              	HAL_CAN_IRQHandler:
 2472              	.LFB77:
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tmp1 = 0U, tmp2 = 0U, tmp3 = 0U;
 2473              		.loc 1 1221 0
 2474              		.cfi_startproc
 2475              		@ args = 0, pretend = 0, frame = 0
 2476              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccRTTlUN.s 			page 78


 2477              	.LVL168:
 2478 0000 70B5     		push	{r4, r5, r6, lr}
 2479              	.LCFI23:
 2480              		.cfi_def_cfa_offset 16
 2481              		.cfi_offset 4, -16
 2482              		.cfi_offset 5, -12
 2483              		.cfi_offset 6, -8
 2484              		.cfi_offset 14, -4
 2485 0002 0446     		mov	r4, r0
 2486              	.LVL169:
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV0);
 2487              		.loc 1 1226 0
 2488 0004 0268     		ldr	r2, [r0]
 2489 0006 D168     		ldr	r1, [r2, #12]
 2490              	.LVL170:
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
 2491              		.loc 1 1227 0
 2492 0008 5369     		ldr	r3, [r2, #20]
 2493              	.LVL171:
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2494              		.loc 1 1228 0
 2495 000a 11F0100F 		tst	r1, #16
 2496 000e 09D0     		beq	.L288
 2497 0010 03F00803 		and	r3, r3, #8
 2498              	.LVL172:
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2499              		.loc 1 1228 0 is_stmt 0 discriminator 1
 2500 0014 002B     		cmp	r3, #0
 2501 0016 00F0A680 		beq	.L289
 2502              	.LVL173:
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2503              		.loc 1 1234 0 is_stmt 1
 2504 001a 1023     		movs	r3, #16
 2505              	.LVL174:
 2506 001c D360     		str	r3, [r2, #12]
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2507              		.loc 1 1231 0
 2508 001e 4FF40075 		mov	r5, #512
 2509 0022 00E0     		b	.L266
 2510              	.LVL175:
 2511              	.L288:
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2512              		.loc 1 1223 0
 2513 0024 0025     		movs	r5, #0
 2514              	.LVL176:
 2515              	.L266:
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV1);
 2516              		.loc 1 1238 0
 2517 0026 2268     		ldr	r2, [r4]
 2518 0028 1169     		ldr	r1, [r2, #16]
 2519              	.LVL177:
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if((tmp1 != 0U) && tmp2)
 2520              		.loc 1 1239 0
 2521 002a 5369     		ldr	r3, [r2, #20]
 2522 002c 03F04003 		and	r3, r3, #64
 2523              	.LVL178:
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccRTTlUN.s 			page 79


 2524              		.loc 1 1240 0
 2525 0030 11F0100F 		tst	r1, #16
 2526 0034 04D0     		beq	.L267
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2527              		.loc 1 1240 0 is_stmt 0 discriminator 1
 2528 0036 1BB1     		cbz	r3, .L267
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2529              		.loc 1 1243 0 is_stmt 1
 2530 0038 45F48065 		orr	r5, r5, #1024
 2531              	.LVL179:
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2532              		.loc 1 1246 0
 2533 003c 1023     		movs	r3, #16
 2534              	.LVL180:
 2535 003e 1361     		str	r3, [r2, #16]
 2536              	.L267:
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2537              		.loc 1 1250 0
 2538 0040 2368     		ldr	r3, [r4]
 2539 0042 5A69     		ldr	r2, [r3, #20]
 2540 0044 12F0010F 		tst	r2, #1
 2541 0048 28D0     		beq	.L268
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp2 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_1);
 2542              		.loc 1 1253 0
 2543 004a 9E68     		ldr	r6, [r3, #8]
 2544              	.LVL181:
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tmp3 = __HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_2);
 2545              		.loc 1 1254 0
 2546 004c 9968     		ldr	r1, [r3, #8]
 2547 004e 674A     		ldr	r2, .L295
 2548 0050 0A40     		ands	r2, r2, r1
 2549              	.LVL182:
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if(tmp1 || tmp2 || tmp3)  
 2550              		.loc 1 1255 0
 2551 0052 9968     		ldr	r1, [r3, #8]
 2552 0054 21F06F41 		bic	r1, r1, #-285212672
 2553 0058 21F47E01 		bic	r1, r1, #16646144
 2554 005c 090C     		lsrs	r1, r1, #16
 2555 005e 0904     		lsls	r1, r1, #16
 2556              	.LVL183:
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2557              		.loc 1 1256 0
 2558 0060 6348     		ldr	r0, .L295+4
 2559              	.LVL184:
 2560 0062 B043     		bics	r0, r0, r6
 2561 0064 05D0     		beq	.L269
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2562              		.loc 1 1256 0 is_stmt 0 discriminator 1
 2563 0066 6148     		ldr	r0, .L295
 2564 0068 8242     		cmp	r2, r0
 2565 006a 02D0     		beq	.L269
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2566              		.loc 1 1256 0 discriminator 2
 2567 006c 614A     		ldr	r2, .L295+8
 2568              	.LVL185:
 2569 006e 9142     		cmp	r1, r2
 2570 0070 14D1     		bne	.L268
ARM GAS  /tmp/ccRTTlUN.s 			page 80


 2571              	.L269:
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp2 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK1);
 2572              		.loc 1 1258 0 is_stmt 1
 2573 0072 9968     		ldr	r1, [r3, #8]
 2574              	.LVL186:
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       tmp3 = __HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK2);
 2575              		.loc 1 1259 0
 2576 0074 9A68     		ldr	r2, [r3, #8]
 2577 0076 02F40072 		and	r2, r2, #512
 2578              	.LVL187:
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Transmit success */
 2579              		.loc 1 1260 0
 2580 007a 9B68     		ldr	r3, [r3, #8]
 2581 007c 03F00103 		and	r3, r3, #1
 2582              	.LVL188:
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2583              		.loc 1 1262 0
 2584 0080 11F0020F 		tst	r1, #2
 2585 0084 02D1     		bne	.L270
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2586              		.loc 1 1262 0 is_stmt 0 discriminator 1
 2587 0086 0AB9     		cbnz	r2, .L270
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2588              		.loc 1 1262 0 discriminator 2
 2589 0088 002B     		cmp	r3, #0
 2590 008a 6ED0     		beq	.L271
 2591              	.L270:
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2592              		.loc 1 1265 0 is_stmt 1
 2593 008c 2046     		mov	r0, r4
 2594 008e FFF7FEFF 		bl	CAN_Transmit_IT
 2595              	.LVL189:
 2596              	.L272:
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                    CAN_FLAG_TXOK0 | CAN_FLAG_TXOK1 | CAN_FLAG_TXOK2);
 2597              		.loc 1 1274 0
 2598 0092 2268     		ldr	r2, [r4]
 2599 0094 9168     		ldr	r1, [r2, #8]
 2600 0096 584B     		ldr	r3, .L295+12
 2601 0098 0B43     		orrs	r3, r3, r1
 2602 009a 9360     		str	r3, [r2, #8]
 2603              	.L268:
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP0);
 2604              		.loc 1 1279 0
 2605 009c 2368     		ldr	r3, [r4]
 2606 009e DA68     		ldr	r2, [r3, #12]
 2607              	.LVL190:
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of reception flag for FIFO0 */
 2608              		.loc 1 1280 0
 2609 00a0 5B69     		ldr	r3, [r3, #20]
 2610 00a2 03F00203 		and	r3, r3, #2
 2611              	.LVL191:
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2612              		.loc 1 1282 0
 2613 00a6 12F0030F 		tst	r2, #3
 2614 00aa 01D0     		beq	.L273
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2615              		.loc 1 1282 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccRTTlUN.s 			page 81


 2616 00ac 002B     		cmp	r3, #0
 2617 00ae 5FD1     		bne	.L291
 2618              	.LVL192:
 2619              	.L273:
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP1);
 2620              		.loc 1 1288 0 is_stmt 1
 2621 00b0 2368     		ldr	r3, [r4]
 2622 00b2 1A69     		ldr	r2, [r3, #16]
 2623              	.LVL193:
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check End of reception flag for FIFO1 */
 2624              		.loc 1 1289 0
 2625 00b4 5B69     		ldr	r3, [r3, #20]
 2626 00b6 03F01003 		and	r3, r3, #16
 2627              	.LVL194:
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2628              		.loc 1 1291 0
 2629 00ba 12F0030F 		tst	r2, #3
 2630 00be 01D0     		beq	.L274
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2631              		.loc 1 1291 0 is_stmt 0 discriminator 1
 2632 00c0 002B     		cmp	r3, #0
 2633 00c2 5AD1     		bne	.L292
 2634              	.LVL195:
 2635              	.L274:
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2636              		.loc 1 1298 0 is_stmt 1
 2637 00c4 236C     		ldr	r3, [r4, #64]
 2638 00c6 2B43     		orrs	r3, r3, r5
 2639 00c8 2364     		str	r3, [r4, #64]
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EWG);
 2640              		.loc 1 1300 0
 2641 00ca 2368     		ldr	r3, [r4]
 2642 00cc 9869     		ldr	r0, [r3, #24]
 2643              	.LVL196:
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);
 2644              		.loc 1 1301 0
 2645 00ce 5A69     		ldr	r2, [r3, #20]
 2646 00d0 02F48072 		and	r2, r2, #256
 2647              	.LVL197:
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Error Warning Flag */
 2648              		.loc 1 1302 0
 2649 00d4 5969     		ldr	r1, [r3, #20]
 2650 00d6 01F40041 		and	r1, r1, #32768
 2651              	.LVL198:
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2652              		.loc 1 1304 0
 2653 00da 10F0010F 		tst	r0, #1
 2654 00de 05D0     		beq	.L275
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2655              		.loc 1 1304 0 is_stmt 0 discriminator 1
 2656 00e0 22B1     		cbz	r2, .L275
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2657              		.loc 1 1304 0 discriminator 2
 2658 00e2 19B1     		cbz	r1, .L275
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Error Warning Flag as read-only */
 2659              		.loc 1 1307 0 is_stmt 1
 2660 00e4 226C     		ldr	r2, [r4, #64]
ARM GAS  /tmp/ccRTTlUN.s 			page 82


 2661              	.LVL199:
 2662 00e6 42F00102 		orr	r2, r2, #1
 2663 00ea 2264     		str	r2, [r4, #64]
 2664              	.L275:
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EPV);
 2665              		.loc 1 1311 0
 2666 00ec 9869     		ldr	r0, [r3, #24]
 2667              	.LVL200:
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR); 
 2668              		.loc 1 1312 0
 2669 00ee 5A69     		ldr	r2, [r3, #20]
 2670 00f0 02F40072 		and	r2, r2, #512
 2671              	.LVL201:
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Error Passive Flag */
 2672              		.loc 1 1313 0
 2673 00f4 5969     		ldr	r1, [r3, #20]
 2674              	.LVL202:
 2675 00f6 01F40041 		and	r1, r1, #32768
 2676              	.LVL203:
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2677              		.loc 1 1315 0
 2678 00fa 10F0020F 		tst	r0, #2
 2679 00fe 05D0     		beq	.L276
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2680              		.loc 1 1315 0 is_stmt 0 discriminator 1
 2681 0100 22B1     		cbz	r2, .L276
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2682              		.loc 1 1315 0 discriminator 2
 2683 0102 19B1     		cbz	r1, .L276
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Error Passive Flag as read-only */ 
 2684              		.loc 1 1318 0 is_stmt 1
 2685 0104 226C     		ldr	r2, [r4, #64]
 2686              	.LVL204:
 2687 0106 42F00202 		orr	r2, r2, #2
 2688 010a 2264     		str	r2, [r4, #64]
 2689              	.L276:
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_BOF);
 2690              		.loc 1 1322 0
 2691 010c 9869     		ldr	r0, [r3, #24]
 2692              	.LVL205:
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);  
 2693              		.loc 1 1323 0
 2694 010e 5A69     		ldr	r2, [r3, #20]
 2695 0110 02F48062 		and	r2, r2, #1024
 2696              	.LVL206:
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Bus-Off Flag */
 2697              		.loc 1 1324 0
 2698 0114 5969     		ldr	r1, [r3, #20]
 2699              	.LVL207:
 2700 0116 01F40041 		and	r1, r1, #32768
 2701              	.LVL208:
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2702              		.loc 1 1326 0
 2703 011a 10F0040F 		tst	r0, #4
 2704 011e 05D0     		beq	.L277
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2705              		.loc 1 1326 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccRTTlUN.s 			page 83


 2706 0120 22B1     		cbz	r2, .L277
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2707              		.loc 1 1326 0 discriminator 2
 2708 0122 19B1     		cbz	r1, .L277
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* No need for clear of Bus-Off Flag as read-only */
 2709              		.loc 1 1329 0 is_stmt 1
 2710 0124 226C     		ldr	r2, [r4, #64]
 2711              	.LVL209:
 2712 0126 42F00402 		orr	r2, r2, #4
 2713 012a 2264     		str	r2, [r4, #64]
 2714              	.L277:
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp2 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_LEC);
 2715              		.loc 1 1333 0
 2716 012c 9869     		ldr	r0, [r3, #24]
 2717              	.LVL210:
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tmp3 = __HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR);
 2718              		.loc 1 1334 0
 2719 012e 5A69     		ldr	r2, [r3, #20]
 2720 0130 02F40062 		and	r2, r2, #2048
 2721              	.LVL211:
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Last error code Flag */
 2722              		.loc 1 1335 0
 2723 0134 5969     		ldr	r1, [r3, #20]
 2724              	.LVL212:
 2725 0136 01F40041 		and	r1, r1, #32768
 2726              	.LVL213:
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2727              		.loc 1 1337 0
 2728 013a 10F0700F 		tst	r0, #112
 2729 013e 32D0     		beq	.L278
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2730              		.loc 1 1337 0 is_stmt 0 discriminator 1
 2731 0140 8AB3     		cbz	r2, .L278
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2732              		.loc 1 1337 0 discriminator 2
 2733 0142 81B3     		cbz	r1, .L278
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch(tmp1)
 2734              		.loc 1 1339 0 is_stmt 1
 2735 0144 9A69     		ldr	r2, [r3, #24]
 2736              	.LVL214:
 2737 0146 02F07002 		and	r2, r2, #112
 2738              	.LVL215:
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2739              		.loc 1 1340 0
 2740 014a 302A     		cmp	r2, #48
 2741 014c 2ED0     		beq	.L280
 2742 014e 19D9     		bls	.L293
 2743 0150 502A     		cmp	r2, #80
 2744 0152 30D0     		beq	.L284
 2745 0154 602A     		cmp	r2, #96
 2746 0156 33D0     		beq	.L285
 2747 0158 402A     		cmp	r2, #64
 2748 015a 20D1     		bne	.L279
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2749              		.loc 1 1356 0
 2750 015c 226C     		ldr	r2, [r4, #64]
 2751              	.LVL216:
ARM GAS  /tmp/ccRTTlUN.s 			page 84


 2752 015e 42F04002 		orr	r2, r2, #64
 2753 0162 2264     		str	r2, [r4, #64]
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 2754              		.loc 1 1357 0
 2755 0164 1BE0     		b	.L279
 2756              	.LVL217:
 2757              	.L289:
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2758              		.loc 1 1223 0
 2759 0166 0025     		movs	r5, #0
 2760 0168 5DE7     		b	.L266
 2761              	.LVL218:
 2762              	.L271:
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2763              		.loc 1 1270 0
 2764 016a 45F40065 		orr	r5, r5, #2048
 2765              	.LVL219:
 2766 016e 90E7     		b	.L272
 2767              	.LVL220:
 2768              	.L291:
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2769              		.loc 1 1285 0
 2770 0170 0021     		movs	r1, #0
 2771 0172 2046     		mov	r0, r4
 2772 0174 FFF7FEFF 		bl	CAN_Receive_IT
 2773              	.LVL221:
 2774 0178 9AE7     		b	.L273
 2775              	.LVL222:
 2776              	.L292:
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2777              		.loc 1 1294 0
 2778 017a 0121     		movs	r1, #1
 2779 017c 2046     		mov	r0, r4
 2780 017e FFF7FEFF 		bl	CAN_Receive_IT
 2781              	.LVL223:
 2782 0182 9FE7     		b	.L274
 2783              	.LVL224:
 2784              	.L293:
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2785              		.loc 1 1340 0
 2786 0184 102A     		cmp	r2, #16
 2787 0186 06D0     		beq	.L282
 2788 0188 202A     		cmp	r2, #32
 2789 018a 08D1     		bne	.L279
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2790              		.loc 1 1348 0
 2791 018c 226C     		ldr	r2, [r4, #64]
 2792              	.LVL225:
 2793 018e 42F01002 		orr	r2, r2, #16
 2794 0192 2264     		str	r2, [r4, #64]
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 2795              		.loc 1 1349 0
 2796 0194 03E0     		b	.L279
 2797              	.LVL226:
 2798              	.L282:
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2799              		.loc 1 1344 0
ARM GAS  /tmp/ccRTTlUN.s 			page 85


 2800 0196 226C     		ldr	r2, [r4, #64]
 2801              	.LVL227:
 2802 0198 42F00802 		orr	r2, r2, #8
 2803 019c 2264     		str	r2, [r4, #64]
 2804              	.L279:
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2805              		.loc 1 1371 0
 2806 019e 9A69     		ldr	r2, [r3, #24]
 2807 01a0 22F07002 		bic	r2, r2, #112
 2808 01a4 9A61     		str	r2, [r3, #24]
 2809              	.L278:
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2810              		.loc 1 1375 0
 2811 01a6 236C     		ldr	r3, [r4, #64]
 2812 01a8 7BB9     		cbnz	r3, .L294
 2813              	.LVL228:
 2814              	.L265:
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2815              		.loc 1 1407 0
 2816 01aa 70BD     		pop	{r4, r5, r6, pc}
 2817              	.LVL229:
 2818              	.L280:
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2819              		.loc 1 1352 0
 2820 01ac 226C     		ldr	r2, [r4, #64]
 2821              	.LVL230:
 2822 01ae 42F02002 		orr	r2, r2, #32
 2823 01b2 2264     		str	r2, [r4, #64]
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2):
 2824              		.loc 1 1353 0
 2825 01b4 F3E7     		b	.L279
 2826              	.LVL231:
 2827              	.L284:
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2828              		.loc 1 1360 0
 2829 01b6 226C     		ldr	r2, [r4, #64]
 2830              	.LVL232:
 2831 01b8 42F08002 		orr	r2, r2, #128
 2832 01bc 2264     		str	r2, [r4, #64]
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 2833              		.loc 1 1361 0
 2834 01be EEE7     		b	.L279
 2835              	.LVL233:
 2836              	.L285:
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           break;
 2837              		.loc 1 1364 0
 2838 01c0 226C     		ldr	r2, [r4, #64]
 2839              	.LVL234:
 2840 01c2 42F48072 		orr	r2, r2, #256
 2841 01c6 2264     		str	r2, [r4, #64]
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default:
 2842              		.loc 1 1365 0
 2843 01c8 E9E7     		b	.L279
 2844              	.L294:
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Set the CAN state ready to be able to start again the process */
 2845              		.loc 1 1378 0
 2846 01ca 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccRTTlUN.s 			page 86


 2847 01cc 0422     		movs	r2, #4
 2848 01ce 5A60     		str	r2, [r3, #4]
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2849              		.loc 1 1380 0
 2850 01d0 0123     		movs	r3, #1
 2851 01d2 84F83C30 		strb	r3, [r4, #60]
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                CAN_IT_EPV |
 2852              		.loc 1 1393 0
 2853 01d6 2268     		ldr	r2, [r4]
 2854 01d8 5369     		ldr	r3, [r2, #20]
 2855 01da 23F40F43 		bic	r3, r3, #36608
 2856 01de 23F05B03 		bic	r3, r3, #91
 2857 01e2 5361     		str	r3, [r2, #20]
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }  
 2858              		.loc 1 1405 0
 2859 01e4 2046     		mov	r0, r4
 2860 01e6 FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 2861              	.LVL235:
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2862              		.loc 1 1407 0
 2863 01ea DEE7     		b	.L265
 2864              	.L296:
 2865              		.align	2
 2866              	.L295:
 2867 01ec 00010008 		.word	134217984
 2868 01f0 01000004 		.word	67108865
 2869 01f4 00000110 		.word	268500992
 2870 01f8 09050100 		.word	66825
 2871              		.cfi_endproc
 2872              	.LFE77:
 2874              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 2875              		.align	1
 2876              		.global	HAL_CAN_GetState
 2877              		.syntax unified
 2878              		.thumb
 2879              		.thumb_func
 2880              		.fpu softvfp
 2882              	HAL_CAN_GetState:
 2883              	.LFB81:
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return CAN state */
 2884              		.loc 1 1481 0
 2885              		.cfi_startproc
 2886              		@ args = 0, pretend = 0, frame = 0
 2887              		@ frame_needed = 0, uses_anonymous_args = 0
 2888              		@ link register save eliminated.
 2889              	.LVL236:
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2890              		.loc 1 1483 0
 2891 0000 90F83C00 		ldrb	r0, [r0, #60]	@ zero_extendqisi2
 2892              	.LVL237:
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2893              		.loc 1 1484 0
 2894 0004 7047     		bx	lr
 2895              		.cfi_endproc
 2896              	.LFE81:
 2898              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 2899              		.align	1
ARM GAS  /tmp/ccRTTlUN.s 			page 87


 2900              		.global	HAL_CAN_GetError
 2901              		.syntax unified
 2902              		.thumb
 2903              		.thumb_func
 2904              		.fpu softvfp
 2906              	HAL_CAN_GetError:
 2907              	.LFB82:
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return hcan->ErrorCode;
 2908              		.loc 1 1493 0
 2909              		.cfi_startproc
 2910              		@ args = 0, pretend = 0, frame = 0
 2911              		@ frame_needed = 0, uses_anonymous_args = 0
 2912              		@ link register save eliminated.
 2913              	.LVL238:
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2914              		.loc 1 1494 0
 2915 0000 006C     		ldr	r0, [r0, #64]
 2916              	.LVL239:
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2917              		.loc 1 1495 0
 2918 0002 7047     		bx	lr
 2919              		.cfi_endproc
 2920              	.LFE82:
 2922              		.text
 2923              	.Letext0:
 2924              		.file 2 "/home/osboxes/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_defau
 2925              		.file 3 "/home/osboxes/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 2926              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 2927              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2928              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2929              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2930              		.file 8 "/home/osboxes/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 2931              		.file 9 "/home/osboxes/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 2932              		.file 10 "/home/osboxes/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include
 2933              		.file 11 "/home/osboxes/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 2934              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2935              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 2936              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can_ex.h"
 2937              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccRTTlUN.s 			page 88


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_can.c
     /tmp/ccRTTlUN.s:16     .text.HAL_CAN_ConfigFilter:0000000000000000 $t
     /tmp/ccRTTlUN.s:23     .text.HAL_CAN_ConfigFilter:0000000000000000 HAL_CAN_ConfigFilter
     /tmp/ccRTTlUN.s:203    .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/ccRTTlUN.s:210    .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/ccRTTlUN.s:224    .text.HAL_CAN_Init:0000000000000000 $t
     /tmp/ccRTTlUN.s:231    .text.HAL_CAN_Init:0000000000000000 HAL_CAN_Init
     /tmp/ccRTTlUN.s:477    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/ccRTTlUN.s:484    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/ccRTTlUN.s:498    .text.HAL_CAN_DeInit:0000000000000000 $t
     /tmp/ccRTTlUN.s:505    .text.HAL_CAN_DeInit:0000000000000000 HAL_CAN_DeInit
     /tmp/ccRTTlUN.s:549    .text.HAL_CAN_Transmit:0000000000000000 $t
     /tmp/ccRTTlUN.s:556    .text.HAL_CAN_Transmit:0000000000000000 HAL_CAN_Transmit
     /tmp/ccRTTlUN.s:894    .text.HAL_CAN_Transmit:0000000000000200 $d
     /tmp/ccRTTlUN.s:901    .text.HAL_CAN_Transmit_IT:0000000000000000 $t
     /tmp/ccRTTlUN.s:908    .text.HAL_CAN_Transmit_IT:0000000000000000 HAL_CAN_Transmit_IT
     /tmp/ccRTTlUN.s:1150   .text.HAL_CAN_Receive:0000000000000000 $t
     /tmp/ccRTTlUN.s:1157   .text.HAL_CAN_Receive:0000000000000000 HAL_CAN_Receive
     /tmp/ccRTTlUN.s:1607   .text.HAL_CAN_Receive_IT:0000000000000000 $t
     /tmp/ccRTTlUN.s:1614   .text.HAL_CAN_Receive_IT:0000000000000000 HAL_CAN_Receive_IT
     /tmp/ccRTTlUN.s:1862   .text.HAL_CAN_Sleep:0000000000000000 $t
     /tmp/ccRTTlUN.s:1869   .text.HAL_CAN_Sleep:0000000000000000 HAL_CAN_Sleep
     /tmp/ccRTTlUN.s:1976   .text.HAL_CAN_WakeUp:0000000000000000 $t
     /tmp/ccRTTlUN.s:1983   .text.HAL_CAN_WakeUp:0000000000000000 HAL_CAN_WakeUp
     /tmp/ccRTTlUN.s:2072   .text.HAL_CAN_TxCpltCallback:0000000000000000 $t
     /tmp/ccRTTlUN.s:2079   .text.HAL_CAN_TxCpltCallback:0000000000000000 HAL_CAN_TxCpltCallback
     /tmp/ccRTTlUN.s:2093   .text.CAN_Transmit_IT:0000000000000000 $t
     /tmp/ccRTTlUN.s:2099   .text.CAN_Transmit_IT:0000000000000000 CAN_Transmit_IT
     /tmp/ccRTTlUN.s:2171   .text.HAL_CAN_RxCpltCallback:0000000000000000 $t
     /tmp/ccRTTlUN.s:2178   .text.HAL_CAN_RxCpltCallback:0000000000000000 HAL_CAN_RxCpltCallback
     /tmp/ccRTTlUN.s:2192   .text.CAN_Receive_IT:0000000000000000 $t
     /tmp/ccRTTlUN.s:2198   .text.CAN_Receive_IT:0000000000000000 CAN_Receive_IT
     /tmp/ccRTTlUN.s:2443   .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/ccRTTlUN.s:2450   .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/ccRTTlUN.s:2464   .text.HAL_CAN_IRQHandler:0000000000000000 $t
     /tmp/ccRTTlUN.s:2471   .text.HAL_CAN_IRQHandler:0000000000000000 HAL_CAN_IRQHandler
     /tmp/ccRTTlUN.s:2867   .text.HAL_CAN_IRQHandler:00000000000001ec $d
     /tmp/ccRTTlUN.s:2875   .text.HAL_CAN_GetState:0000000000000000 $t
     /tmp/ccRTTlUN.s:2882   .text.HAL_CAN_GetState:0000000000000000 HAL_CAN_GetState
     /tmp/ccRTTlUN.s:2899   .text.HAL_CAN_GetError:0000000000000000 $t
     /tmp/ccRTTlUN.s:2906   .text.HAL_CAN_GetError:0000000000000000 HAL_CAN_GetError

UNDEFINED SYMBOLS
HAL_GetTick
